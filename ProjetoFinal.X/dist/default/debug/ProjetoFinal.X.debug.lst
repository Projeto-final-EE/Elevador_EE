

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 19 22:36:35 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
    91                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
    92                           	psect	text75,local,class=CODE,merge=1,delta=2,group=1
    93                           	psect	text76,local,class=CODE,merge=1,delta=2,group=1
    94                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    96                           	dabs	1,0x7E,2
    97     0000                     
    98                           ; Generated 09/02/2023 GMT
    99                           ; 
   100                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution. Publication is not required when
   114                           ;        this file is used in an embedded application.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC16F1827 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     0011                     	;# 
   147     0012                     	;# 
   148     0013                     	;# 
   149     0014                     	;# 
   150     0015                     	;# 
   151     0016                     	;# 
   152     0016                     	;# 
   153     0017                     	;# 
   154     0018                     	;# 
   155     0019                     	;# 
   156     001A                     	;# 
   157     001B                     	;# 
   158     001C                     	;# 
   159     001E                     	;# 
   160     001F                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     0091                     	;# 
   164     0092                     	;# 
   165     0093                     	;# 
   166     0094                     	;# 
   167     0095                     	;# 
   168     0096                     	;# 
   169     0097                     	;# 
   170     0098                     	;# 
   171     0099                     	;# 
   172     009A                     	;# 
   173     009B                     	;# 
   174     009B                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     010C                     	;# 
   179     010D                     	;# 
   180     0111                     	;# 
   181     0112                     	;# 
   182     0113                     	;# 
   183     0114                     	;# 
   184     0115                     	;# 
   185     0116                     	;# 
   186     0117                     	;# 
   187     0118                     	;# 
   188     0119                     	;# 
   189     011A                     	;# 
   190     011B                     	;# 
   191     011D                     	;# 
   192     011E                     	;# 
   193     018C                     	;# 
   194     018D                     	;# 
   195     0191                     	;# 
   196     0191                     	;# 
   197     0192                     	;# 
   198     0193                     	;# 
   199     0193                     	;# 
   200     0193                     	;# 
   201     0194                     	;# 
   202     0195                     	;# 
   203     0196                     	;# 
   204     0199                     	;# 
   205     019A                     	;# 
   206     019B                     	;# 
   207     019B                     	;# 
   208     019B                     	;# 
   209     019B                     	;# 
   210     019C                     	;# 
   211     019C                     	;# 
   212     019D                     	;# 
   213     019E                     	;# 
   214     019F                     	;# 
   215     020C                     	;# 
   216     020D                     	;# 
   217     0211                     	;# 
   218     0211                     	;# 
   219     0212                     	;# 
   220     0212                     	;# 
   221     0213                     	;# 
   222     0213                     	;# 
   223     0214                     	;# 
   224     0214                     	;# 
   225     0215                     	;# 
   226     0215                     	;# 
   227     0215                     	;# 
   228     0216                     	;# 
   229     0216                     	;# 
   230     0217                     	;# 
   231     0217                     	;# 
   232     0219                     	;# 
   233     021A                     	;# 
   234     021B                     	;# 
   235     021C                     	;# 
   236     021D                     	;# 
   237     021E                     	;# 
   238     021F                     	;# 
   239     0291                     	;# 
   240     0291                     	;# 
   241     0292                     	;# 
   242     0293                     	;# 
   243     0294                     	;# 
   244     0295                     	;# 
   245     0295                     	;# 
   246     0296                     	;# 
   247     0298                     	;# 
   248     0298                     	;# 
   249     0299                     	;# 
   250     029A                     	;# 
   251     029B                     	;# 
   252     029C                     	;# 
   253     029C                     	;# 
   254     029D                     	;# 
   255     029E                     	;# 
   256     029E                     	;# 
   257     0311                     	;# 
   258     0311                     	;# 
   259     0312                     	;# 
   260     0313                     	;# 
   261     0318                     	;# 
   262     0318                     	;# 
   263     0319                     	;# 
   264     031A                     	;# 
   265     0394                     	;# 
   266     0395                     	;# 
   267     0396                     	;# 
   268     039A                     	;# 
   269     039C                     	;# 
   270     039D                     	;# 
   271     039E                     	;# 
   272     039F                     	;# 
   273     0415                     	;# 
   274     0416                     	;# 
   275     0417                     	;# 
   276     041C                     	;# 
   277     041D                     	;# 
   278     041E                     	;# 
   279     0FE4                     	;# 
   280     0FE5                     	;# 
   281     0FE6                     	;# 
   282     0FE7                     	;# 
   283     0FE8                     	;# 
   284     0FE9                     	;# 
   285     0FEA                     	;# 
   286     0FEB                     	;# 
   287     0FED                     	;# 
   288     0FEE                     	;# 
   289     0FEF                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     0011                     	;# 
   305     0012                     	;# 
   306     0013                     	;# 
   307     0014                     	;# 
   308     0015                     	;# 
   309     0016                     	;# 
   310     0016                     	;# 
   311     0017                     	;# 
   312     0018                     	;# 
   313     0019                     	;# 
   314     001A                     	;# 
   315     001B                     	;# 
   316     001C                     	;# 
   317     001E                     	;# 
   318     001F                     	;# 
   319     008C                     	;# 
   320     008D                     	;# 
   321     0091                     	;# 
   322     0092                     	;# 
   323     0093                     	;# 
   324     0094                     	;# 
   325     0095                     	;# 
   326     0096                     	;# 
   327     0097                     	;# 
   328     0098                     	;# 
   329     0099                     	;# 
   330     009A                     	;# 
   331     009B                     	;# 
   332     009B                     	;# 
   333     009C                     	;# 
   334     009D                     	;# 
   335     009E                     	;# 
   336     010C                     	;# 
   337     010D                     	;# 
   338     0111                     	;# 
   339     0112                     	;# 
   340     0113                     	;# 
   341     0114                     	;# 
   342     0115                     	;# 
   343     0116                     	;# 
   344     0117                     	;# 
   345     0118                     	;# 
   346     0119                     	;# 
   347     011A                     	;# 
   348     011B                     	;# 
   349     011D                     	;# 
   350     011E                     	;# 
   351     018C                     	;# 
   352     018D                     	;# 
   353     0191                     	;# 
   354     0191                     	;# 
   355     0192                     	;# 
   356     0193                     	;# 
   357     0193                     	;# 
   358     0193                     	;# 
   359     0194                     	;# 
   360     0195                     	;# 
   361     0196                     	;# 
   362     0199                     	;# 
   363     019A                     	;# 
   364     019B                     	;# 
   365     019B                     	;# 
   366     019B                     	;# 
   367     019B                     	;# 
   368     019C                     	;# 
   369     019C                     	;# 
   370     019D                     	;# 
   371     019E                     	;# 
   372     019F                     	;# 
   373     020C                     	;# 
   374     020D                     	;# 
   375     0211                     	;# 
   376     0211                     	;# 
   377     0212                     	;# 
   378     0212                     	;# 
   379     0213                     	;# 
   380     0213                     	;# 
   381     0214                     	;# 
   382     0214                     	;# 
   383     0215                     	;# 
   384     0215                     	;# 
   385     0215                     	;# 
   386     0216                     	;# 
   387     0216                     	;# 
   388     0217                     	;# 
   389     0217                     	;# 
   390     0219                     	;# 
   391     021A                     	;# 
   392     021B                     	;# 
   393     021C                     	;# 
   394     021D                     	;# 
   395     021E                     	;# 
   396     021F                     	;# 
   397     0291                     	;# 
   398     0291                     	;# 
   399     0292                     	;# 
   400     0293                     	;# 
   401     0294                     	;# 
   402     0295                     	;# 
   403     0295                     	;# 
   404     0296                     	;# 
   405     0298                     	;# 
   406     0298                     	;# 
   407     0299                     	;# 
   408     029A                     	;# 
   409     029B                     	;# 
   410     029C                     	;# 
   411     029C                     	;# 
   412     029D                     	;# 
   413     029E                     	;# 
   414     029E                     	;# 
   415     0311                     	;# 
   416     0311                     	;# 
   417     0312                     	;# 
   418     0313                     	;# 
   419     0318                     	;# 
   420     0318                     	;# 
   421     0319                     	;# 
   422     031A                     	;# 
   423     0394                     	;# 
   424     0395                     	;# 
   425     0396                     	;# 
   426     039A                     	;# 
   427     039C                     	;# 
   428     039D                     	;# 
   429     039E                     	;# 
   430     039F                     	;# 
   431     0415                     	;# 
   432     0416                     	;# 
   433     0417                     	;# 
   434     041C                     	;# 
   435     041D                     	;# 
   436     041E                     	;# 
   437     0FE4                     	;# 
   438     0FE5                     	;# 
   439     0FE6                     	;# 
   440     0FE7                     	;# 
   441     0FE8                     	;# 
   442     0FE9                     	;# 
   443     0FEA                     	;# 
   444     0FEB                     	;# 
   445     0FED                     	;# 
   446     0FEE                     	;# 
   447     0FEF                     	;# 
   448     0000                     	;# 
   449     0001                     	;# 
   450     0002                     	;# 
   451     0003                     	;# 
   452     0004                     	;# 
   453     0005                     	;# 
   454     0006                     	;# 
   455     0007                     	;# 
   456     0008                     	;# 
   457     0009                     	;# 
   458     000A                     	;# 
   459     000B                     	;# 
   460     000C                     	;# 
   461     000D                     	;# 
   462     0011                     	;# 
   463     0012                     	;# 
   464     0013                     	;# 
   465     0014                     	;# 
   466     0015                     	;# 
   467     0016                     	;# 
   468     0016                     	;# 
   469     0017                     	;# 
   470     0018                     	;# 
   471     0019                     	;# 
   472     001A                     	;# 
   473     001B                     	;# 
   474     001C                     	;# 
   475     001E                     	;# 
   476     001F                     	;# 
   477     008C                     	;# 
   478     008D                     	;# 
   479     0091                     	;# 
   480     0092                     	;# 
   481     0093                     	;# 
   482     0094                     	;# 
   483     0095                     	;# 
   484     0096                     	;# 
   485     0097                     	;# 
   486     0098                     	;# 
   487     0099                     	;# 
   488     009A                     	;# 
   489     009B                     	;# 
   490     009B                     	;# 
   491     009C                     	;# 
   492     009D                     	;# 
   493     009E                     	;# 
   494     010C                     	;# 
   495     010D                     	;# 
   496     0111                     	;# 
   497     0112                     	;# 
   498     0113                     	;# 
   499     0114                     	;# 
   500     0115                     	;# 
   501     0116                     	;# 
   502     0117                     	;# 
   503     0118                     	;# 
   504     0119                     	;# 
   505     011A                     	;# 
   506     011B                     	;# 
   507     011D                     	;# 
   508     011E                     	;# 
   509     018C                     	;# 
   510     018D                     	;# 
   511     0191                     	;# 
   512     0191                     	;# 
   513     0192                     	;# 
   514     0193                     	;# 
   515     0193                     	;# 
   516     0193                     	;# 
   517     0194                     	;# 
   518     0195                     	;# 
   519     0196                     	;# 
   520     0199                     	;# 
   521     019A                     	;# 
   522     019B                     	;# 
   523     019B                     	;# 
   524     019B                     	;# 
   525     019B                     	;# 
   526     019C                     	;# 
   527     019C                     	;# 
   528     019D                     	;# 
   529     019E                     	;# 
   530     019F                     	;# 
   531     020C                     	;# 
   532     020D                     	;# 
   533     0211                     	;# 
   534     0211                     	;# 
   535     0212                     	;# 
   536     0212                     	;# 
   537     0213                     	;# 
   538     0213                     	;# 
   539     0214                     	;# 
   540     0214                     	;# 
   541     0215                     	;# 
   542     0215                     	;# 
   543     0215                     	;# 
   544     0216                     	;# 
   545     0216                     	;# 
   546     0217                     	;# 
   547     0217                     	;# 
   548     0219                     	;# 
   549     021A                     	;# 
   550     021B                     	;# 
   551     021C                     	;# 
   552     021D                     	;# 
   553     021E                     	;# 
   554     021F                     	;# 
   555     0291                     	;# 
   556     0291                     	;# 
   557     0292                     	;# 
   558     0293                     	;# 
   559     0294                     	;# 
   560     0295                     	;# 
   561     0295                     	;# 
   562     0296                     	;# 
   563     0298                     	;# 
   564     0298                     	;# 
   565     0299                     	;# 
   566     029A                     	;# 
   567     029B                     	;# 
   568     029C                     	;# 
   569     029C                     	;# 
   570     029D                     	;# 
   571     029E                     	;# 
   572     029E                     	;# 
   573     0311                     	;# 
   574     0311                     	;# 
   575     0312                     	;# 
   576     0313                     	;# 
   577     0318                     	;# 
   578     0318                     	;# 
   579     0319                     	;# 
   580     031A                     	;# 
   581     0394                     	;# 
   582     0395                     	;# 
   583     0396                     	;# 
   584     039A                     	;# 
   585     039C                     	;# 
   586     039D                     	;# 
   587     039E                     	;# 
   588     039F                     	;# 
   589     0415                     	;# 
   590     0416                     	;# 
   591     0417                     	;# 
   592     041C                     	;# 
   593     041D                     	;# 
   594     041E                     	;# 
   595     0FE4                     	;# 
   596     0FE5                     	;# 
   597     0FE6                     	;# 
   598     0FE7                     	;# 
   599     0FE8                     	;# 
   600     0FE9                     	;# 
   601     0FEA                     	;# 
   602     0FEB                     	;# 
   603     0FED                     	;# 
   604     0FEE                     	;# 
   605     0FEF                     	;# 
   606     0000                     	;# 
   607     0001                     	;# 
   608     0002                     	;# 
   609     0003                     	;# 
   610     0004                     	;# 
   611     0005                     	;# 
   612     0006                     	;# 
   613     0007                     	;# 
   614     0008                     	;# 
   615     0009                     	;# 
   616     000A                     	;# 
   617     000B                     	;# 
   618     000C                     	;# 
   619     000D                     	;# 
   620     0011                     	;# 
   621     0012                     	;# 
   622     0013                     	;# 
   623     0014                     	;# 
   624     0015                     	;# 
   625     0016                     	;# 
   626     0016                     	;# 
   627     0017                     	;# 
   628     0018                     	;# 
   629     0019                     	;# 
   630     001A                     	;# 
   631     001B                     	;# 
   632     001C                     	;# 
   633     001E                     	;# 
   634     001F                     	;# 
   635     008C                     	;# 
   636     008D                     	;# 
   637     0091                     	;# 
   638     0092                     	;# 
   639     0093                     	;# 
   640     0094                     	;# 
   641     0095                     	;# 
   642     0096                     	;# 
   643     0097                     	;# 
   644     0098                     	;# 
   645     0099                     	;# 
   646     009A                     	;# 
   647     009B                     	;# 
   648     009B                     	;# 
   649     009C                     	;# 
   650     009D                     	;# 
   651     009E                     	;# 
   652     010C                     	;# 
   653     010D                     	;# 
   654     0111                     	;# 
   655     0112                     	;# 
   656     0113                     	;# 
   657     0114                     	;# 
   658     0115                     	;# 
   659     0116                     	;# 
   660     0117                     	;# 
   661     0118                     	;# 
   662     0119                     	;# 
   663     011A                     	;# 
   664     011B                     	;# 
   665     011D                     	;# 
   666     011E                     	;# 
   667     018C                     	;# 
   668     018D                     	;# 
   669     0191                     	;# 
   670     0191                     	;# 
   671     0192                     	;# 
   672     0193                     	;# 
   673     0193                     	;# 
   674     0193                     	;# 
   675     0194                     	;# 
   676     0195                     	;# 
   677     0196                     	;# 
   678     0199                     	;# 
   679     019A                     	;# 
   680     019B                     	;# 
   681     019B                     	;# 
   682     019B                     	;# 
   683     019B                     	;# 
   684     019C                     	;# 
   685     019C                     	;# 
   686     019D                     	;# 
   687     019E                     	;# 
   688     019F                     	;# 
   689     020C                     	;# 
   690     020D                     	;# 
   691     0211                     	;# 
   692     0211                     	;# 
   693     0212                     	;# 
   694     0212                     	;# 
   695     0213                     	;# 
   696     0213                     	;# 
   697     0214                     	;# 
   698     0214                     	;# 
   699     0215                     	;# 
   700     0215                     	;# 
   701     0215                     	;# 
   702     0216                     	;# 
   703     0216                     	;# 
   704     0217                     	;# 
   705     0217                     	;# 
   706     0219                     	;# 
   707     021A                     	;# 
   708     021B                     	;# 
   709     021C                     	;# 
   710     021D                     	;# 
   711     021E                     	;# 
   712     021F                     	;# 
   713     0291                     	;# 
   714     0291                     	;# 
   715     0292                     	;# 
   716     0293                     	;# 
   717     0294                     	;# 
   718     0295                     	;# 
   719     0295                     	;# 
   720     0296                     	;# 
   721     0298                     	;# 
   722     0298                     	;# 
   723     0299                     	;# 
   724     029A                     	;# 
   725     029B                     	;# 
   726     029C                     	;# 
   727     029C                     	;# 
   728     029D                     	;# 
   729     029E                     	;# 
   730     029E                     	;# 
   731     0311                     	;# 
   732     0311                     	;# 
   733     0312                     	;# 
   734     0313                     	;# 
   735     0318                     	;# 
   736     0318                     	;# 
   737     0319                     	;# 
   738     031A                     	;# 
   739     0394                     	;# 
   740     0395                     	;# 
   741     0396                     	;# 
   742     039A                     	;# 
   743     039C                     	;# 
   744     039D                     	;# 
   745     039E                     	;# 
   746     039F                     	;# 
   747     0415                     	;# 
   748     0416                     	;# 
   749     0417                     	;# 
   750     041C                     	;# 
   751     041D                     	;# 
   752     041E                     	;# 
   753     0FE4                     	;# 
   754     0FE5                     	;# 
   755     0FE6                     	;# 
   756     0FE7                     	;# 
   757     0FE8                     	;# 
   758     0FE9                     	;# 
   759     0FEA                     	;# 
   760     0FEB                     	;# 
   761     0FED                     	;# 
   762     0FEE                     	;# 
   763     0FEF                     	;# 
   764     0000                     	;# 
   765     0001                     	;# 
   766     0002                     	;# 
   767     0003                     	;# 
   768     0004                     	;# 
   769     0005                     	;# 
   770     0006                     	;# 
   771     0007                     	;# 
   772     0008                     	;# 
   773     0009                     	;# 
   774     000A                     	;# 
   775     000B                     	;# 
   776     000C                     	;# 
   777     000D                     	;# 
   778     0011                     	;# 
   779     0012                     	;# 
   780     0013                     	;# 
   781     0014                     	;# 
   782     0015                     	;# 
   783     0016                     	;# 
   784     0016                     	;# 
   785     0017                     	;# 
   786     0018                     	;# 
   787     0019                     	;# 
   788     001A                     	;# 
   789     001B                     	;# 
   790     001C                     	;# 
   791     001E                     	;# 
   792     001F                     	;# 
   793     008C                     	;# 
   794     008D                     	;# 
   795     0091                     	;# 
   796     0092                     	;# 
   797     0093                     	;# 
   798     0094                     	;# 
   799     0095                     	;# 
   800     0096                     	;# 
   801     0097                     	;# 
   802     0098                     	;# 
   803     0099                     	;# 
   804     009A                     	;# 
   805     009B                     	;# 
   806     009B                     	;# 
   807     009C                     	;# 
   808     009D                     	;# 
   809     009E                     	;# 
   810     010C                     	;# 
   811     010D                     	;# 
   812     0111                     	;# 
   813     0112                     	;# 
   814     0113                     	;# 
   815     0114                     	;# 
   816     0115                     	;# 
   817     0116                     	;# 
   818     0117                     	;# 
   819     0118                     	;# 
   820     0119                     	;# 
   821     011A                     	;# 
   822     011B                     	;# 
   823     011D                     	;# 
   824     011E                     	;# 
   825     018C                     	;# 
   826     018D                     	;# 
   827     0191                     	;# 
   828     0191                     	;# 
   829     0192                     	;# 
   830     0193                     	;# 
   831     0193                     	;# 
   832     0193                     	;# 
   833     0194                     	;# 
   834     0195                     	;# 
   835     0196                     	;# 
   836     0199                     	;# 
   837     019A                     	;# 
   838     019B                     	;# 
   839     019B                     	;# 
   840     019B                     	;# 
   841     019B                     	;# 
   842     019C                     	;# 
   843     019C                     	;# 
   844     019D                     	;# 
   845     019E                     	;# 
   846     019F                     	;# 
   847     020C                     	;# 
   848     020D                     	;# 
   849     0211                     	;# 
   850     0211                     	;# 
   851     0212                     	;# 
   852     0212                     	;# 
   853     0213                     	;# 
   854     0213                     	;# 
   855     0214                     	;# 
   856     0214                     	;# 
   857     0215                     	;# 
   858     0215                     	;# 
   859     0215                     	;# 
   860     0216                     	;# 
   861     0216                     	;# 
   862     0217                     	;# 
   863     0217                     	;# 
   864     0219                     	;# 
   865     021A                     	;# 
   866     021B                     	;# 
   867     021C                     	;# 
   868     021D                     	;# 
   869     021E                     	;# 
   870     021F                     	;# 
   871     0291                     	;# 
   872     0291                     	;# 
   873     0292                     	;# 
   874     0293                     	;# 
   875     0294                     	;# 
   876     0295                     	;# 
   877     0295                     	;# 
   878     0296                     	;# 
   879     0298                     	;# 
   880     0298                     	;# 
   881     0299                     	;# 
   882     029A                     	;# 
   883     029B                     	;# 
   884     029C                     	;# 
   885     029C                     	;# 
   886     029D                     	;# 
   887     029E                     	;# 
   888     029E                     	;# 
   889     0311                     	;# 
   890     0311                     	;# 
   891     0312                     	;# 
   892     0313                     	;# 
   893     0318                     	;# 
   894     0318                     	;# 
   895     0319                     	;# 
   896     031A                     	;# 
   897     0394                     	;# 
   898     0395                     	;# 
   899     0396                     	;# 
   900     039A                     	;# 
   901     039C                     	;# 
   902     039D                     	;# 
   903     039E                     	;# 
   904     039F                     	;# 
   905     0415                     	;# 
   906     0416                     	;# 
   907     0417                     	;# 
   908     041C                     	;# 
   909     041D                     	;# 
   910     041E                     	;# 
   911     0FE4                     	;# 
   912     0FE5                     	;# 
   913     0FE6                     	;# 
   914     0FE7                     	;# 
   915     0FE8                     	;# 
   916     0FE9                     	;# 
   917     0FEA                     	;# 
   918     0FEB                     	;# 
   919     0FED                     	;# 
   920     0FEE                     	;# 
   921     0FEF                     	;# 
   922     0000                     	;# 
   923     0001                     	;# 
   924     0002                     	;# 
   925     0003                     	;# 
   926     0004                     	;# 
   927     0005                     	;# 
   928     0006                     	;# 
   929     0007                     	;# 
   930     0008                     	;# 
   931     0009                     	;# 
   932     000A                     	;# 
   933     000B                     	;# 
   934     000C                     	;# 
   935     000D                     	;# 
   936     0011                     	;# 
   937     0012                     	;# 
   938     0013                     	;# 
   939     0014                     	;# 
   940     0015                     	;# 
   941     0016                     	;# 
   942     0016                     	;# 
   943     0017                     	;# 
   944     0018                     	;# 
   945     0019                     	;# 
   946     001A                     	;# 
   947     001B                     	;# 
   948     001C                     	;# 
   949     001E                     	;# 
   950     001F                     	;# 
   951     008C                     	;# 
   952     008D                     	;# 
   953     0091                     	;# 
   954     0092                     	;# 
   955     0093                     	;# 
   956     0094                     	;# 
   957     0095                     	;# 
   958     0096                     	;# 
   959     0097                     	;# 
   960     0098                     	;# 
   961     0099                     	;# 
   962     009A                     	;# 
   963     009B                     	;# 
   964     009B                     	;# 
   965     009C                     	;# 
   966     009D                     	;# 
   967     009E                     	;# 
   968     010C                     	;# 
   969     010D                     	;# 
   970     0111                     	;# 
   971     0112                     	;# 
   972     0113                     	;# 
   973     0114                     	;# 
   974     0115                     	;# 
   975     0116                     	;# 
   976     0117                     	;# 
   977     0118                     	;# 
   978     0119                     	;# 
   979     011A                     	;# 
   980     011B                     	;# 
   981     011D                     	;# 
   982     011E                     	;# 
   983     018C                     	;# 
   984     018D                     	;# 
   985     0191                     	;# 
   986     0191                     	;# 
   987     0192                     	;# 
   988     0193                     	;# 
   989     0193                     	;# 
   990     0193                     	;# 
   991     0194                     	;# 
   992     0195                     	;# 
   993     0196                     	;# 
   994     0199                     	;# 
   995     019A                     	;# 
   996     019B                     	;# 
   997     019B                     	;# 
   998     019B                     	;# 
   999     019B                     	;# 
  1000     019C                     	;# 
  1001     019C                     	;# 
  1002     019D                     	;# 
  1003     019E                     	;# 
  1004     019F                     	;# 
  1005     020C                     	;# 
  1006     020D                     	;# 
  1007     0211                     	;# 
  1008     0211                     	;# 
  1009     0212                     	;# 
  1010     0212                     	;# 
  1011     0213                     	;# 
  1012     0213                     	;# 
  1013     0214                     	;# 
  1014     0214                     	;# 
  1015     0215                     	;# 
  1016     0215                     	;# 
  1017     0215                     	;# 
  1018     0216                     	;# 
  1019     0216                     	;# 
  1020     0217                     	;# 
  1021     0217                     	;# 
  1022     0219                     	;# 
  1023     021A                     	;# 
  1024     021B                     	;# 
  1025     021C                     	;# 
  1026     021D                     	;# 
  1027     021E                     	;# 
  1028     021F                     	;# 
  1029     0291                     	;# 
  1030     0291                     	;# 
  1031     0292                     	;# 
  1032     0293                     	;# 
  1033     0294                     	;# 
  1034     0295                     	;# 
  1035     0295                     	;# 
  1036     0296                     	;# 
  1037     0298                     	;# 
  1038     0298                     	;# 
  1039     0299                     	;# 
  1040     029A                     	;# 
  1041     029B                     	;# 
  1042     029C                     	;# 
  1043     029C                     	;# 
  1044     029D                     	;# 
  1045     029E                     	;# 
  1046     029E                     	;# 
  1047     0311                     	;# 
  1048     0311                     	;# 
  1049     0312                     	;# 
  1050     0313                     	;# 
  1051     0318                     	;# 
  1052     0318                     	;# 
  1053     0319                     	;# 
  1054     031A                     	;# 
  1055     0394                     	;# 
  1056     0395                     	;# 
  1057     0396                     	;# 
  1058     039A                     	;# 
  1059     039C                     	;# 
  1060     039D                     	;# 
  1061     039E                     	;# 
  1062     039F                     	;# 
  1063     0415                     	;# 
  1064     0416                     	;# 
  1065     0417                     	;# 
  1066     041C                     	;# 
  1067     041D                     	;# 
  1068     041E                     	;# 
  1069     0FE4                     	;# 
  1070     0FE5                     	;# 
  1071     0FE6                     	;# 
  1072     0FE7                     	;# 
  1073     0FE8                     	;# 
  1074     0FE9                     	;# 
  1075     0FEA                     	;# 
  1076     0FEB                     	;# 
  1077     0FED                     	;# 
  1078     0FEE                     	;# 
  1079     0FEF                     	;# 
  1080     0000                     	;# 
  1081     0001                     	;# 
  1082     0002                     	;# 
  1083     0003                     	;# 
  1084     0004                     	;# 
  1085     0005                     	;# 
  1086     0006                     	;# 
  1087     0007                     	;# 
  1088     0008                     	;# 
  1089     0009                     	;# 
  1090     000A                     	;# 
  1091     000B                     	;# 
  1092     000C                     	;# 
  1093     000D                     	;# 
  1094     0011                     	;# 
  1095     0012                     	;# 
  1096     0013                     	;# 
  1097     0014                     	;# 
  1098     0015                     	;# 
  1099     0016                     	;# 
  1100     0016                     	;# 
  1101     0017                     	;# 
  1102     0018                     	;# 
  1103     0019                     	;# 
  1104     001A                     	;# 
  1105     001B                     	;# 
  1106     001C                     	;# 
  1107     001E                     	;# 
  1108     001F                     	;# 
  1109     008C                     	;# 
  1110     008D                     	;# 
  1111     0091                     	;# 
  1112     0092                     	;# 
  1113     0093                     	;# 
  1114     0094                     	;# 
  1115     0095                     	;# 
  1116     0096                     	;# 
  1117     0097                     	;# 
  1118     0098                     	;# 
  1119     0099                     	;# 
  1120     009A                     	;# 
  1121     009B                     	;# 
  1122     009B                     	;# 
  1123     009C                     	;# 
  1124     009D                     	;# 
  1125     009E                     	;# 
  1126     010C                     	;# 
  1127     010D                     	;# 
  1128     0111                     	;# 
  1129     0112                     	;# 
  1130     0113                     	;# 
  1131     0114                     	;# 
  1132     0115                     	;# 
  1133     0116                     	;# 
  1134     0117                     	;# 
  1135     0118                     	;# 
  1136     0119                     	;# 
  1137     011A                     	;# 
  1138     011B                     	;# 
  1139     011D                     	;# 
  1140     011E                     	;# 
  1141     018C                     	;# 
  1142     018D                     	;# 
  1143     0191                     	;# 
  1144     0191                     	;# 
  1145     0192                     	;# 
  1146     0193                     	;# 
  1147     0193                     	;# 
  1148     0193                     	;# 
  1149     0194                     	;# 
  1150     0195                     	;# 
  1151     0196                     	;# 
  1152     0199                     	;# 
  1153     019A                     	;# 
  1154     019B                     	;# 
  1155     019B                     	;# 
  1156     019B                     	;# 
  1157     019B                     	;# 
  1158     019C                     	;# 
  1159     019C                     	;# 
  1160     019D                     	;# 
  1161     019E                     	;# 
  1162     019F                     	;# 
  1163     020C                     	;# 
  1164     020D                     	;# 
  1165     0211                     	;# 
  1166     0211                     	;# 
  1167     0212                     	;# 
  1168     0212                     	;# 
  1169     0213                     	;# 
  1170     0213                     	;# 
  1171     0214                     	;# 
  1172     0214                     	;# 
  1173     0215                     	;# 
  1174     0215                     	;# 
  1175     0215                     	;# 
  1176     0216                     	;# 
  1177     0216                     	;# 
  1178     0217                     	;# 
  1179     0217                     	;# 
  1180     0219                     	;# 
  1181     021A                     	;# 
  1182     021B                     	;# 
  1183     021C                     	;# 
  1184     021D                     	;# 
  1185     021E                     	;# 
  1186     021F                     	;# 
  1187     0291                     	;# 
  1188     0291                     	;# 
  1189     0292                     	;# 
  1190     0293                     	;# 
  1191     0294                     	;# 
  1192     0295                     	;# 
  1193     0295                     	;# 
  1194     0296                     	;# 
  1195     0298                     	;# 
  1196     0298                     	;# 
  1197     0299                     	;# 
  1198     029A                     	;# 
  1199     029B                     	;# 
  1200     029C                     	;# 
  1201     029C                     	;# 
  1202     029D                     	;# 
  1203     029E                     	;# 
  1204     029E                     	;# 
  1205     0311                     	;# 
  1206     0311                     	;# 
  1207     0312                     	;# 
  1208     0313                     	;# 
  1209     0318                     	;# 
  1210     0318                     	;# 
  1211     0319                     	;# 
  1212     031A                     	;# 
  1213     0394                     	;# 
  1214     0395                     	;# 
  1215     0396                     	;# 
  1216     039A                     	;# 
  1217     039C                     	;# 
  1218     039D                     	;# 
  1219     039E                     	;# 
  1220     039F                     	;# 
  1221     0415                     	;# 
  1222     0416                     	;# 
  1223     0417                     	;# 
  1224     041C                     	;# 
  1225     041D                     	;# 
  1226     041E                     	;# 
  1227     0FE4                     	;# 
  1228     0FE5                     	;# 
  1229     0FE6                     	;# 
  1230     0FE7                     	;# 
  1231     0FE8                     	;# 
  1232     0FE9                     	;# 
  1233     0FEA                     	;# 
  1234     0FEB                     	;# 
  1235     0FED                     	;# 
  1236     0FEE                     	;# 
  1237     0FEF                     	;# 
  1238     0000                     	;# 
  1239     0001                     	;# 
  1240     0002                     	;# 
  1241     0003                     	;# 
  1242     0004                     	;# 
  1243     0005                     	;# 
  1244     0006                     	;# 
  1245     0007                     	;# 
  1246     0008                     	;# 
  1247     0009                     	;# 
  1248     000A                     	;# 
  1249     000B                     	;# 
  1250     000C                     	;# 
  1251     000D                     	;# 
  1252     0011                     	;# 
  1253     0012                     	;# 
  1254     0013                     	;# 
  1255     0014                     	;# 
  1256     0015                     	;# 
  1257     0016                     	;# 
  1258     0016                     	;# 
  1259     0017                     	;# 
  1260     0018                     	;# 
  1261     0019                     	;# 
  1262     001A                     	;# 
  1263     001B                     	;# 
  1264     001C                     	;# 
  1265     001E                     	;# 
  1266     001F                     	;# 
  1267     008C                     	;# 
  1268     008D                     	;# 
  1269     0091                     	;# 
  1270     0092                     	;# 
  1271     0093                     	;# 
  1272     0094                     	;# 
  1273     0095                     	;# 
  1274     0096                     	;# 
  1275     0097                     	;# 
  1276     0098                     	;# 
  1277     0099                     	;# 
  1278     009A                     	;# 
  1279     009B                     	;# 
  1280     009B                     	;# 
  1281     009C                     	;# 
  1282     009D                     	;# 
  1283     009E                     	;# 
  1284     010C                     	;# 
  1285     010D                     	;# 
  1286     0111                     	;# 
  1287     0112                     	;# 
  1288     0113                     	;# 
  1289     0114                     	;# 
  1290     0115                     	;# 
  1291     0116                     	;# 
  1292     0117                     	;# 
  1293     0118                     	;# 
  1294     0119                     	;# 
  1295     011A                     	;# 
  1296     011B                     	;# 
  1297     011D                     	;# 
  1298     011E                     	;# 
  1299     018C                     	;# 
  1300     018D                     	;# 
  1301     0191                     	;# 
  1302     0191                     	;# 
  1303     0192                     	;# 
  1304     0193                     	;# 
  1305     0193                     	;# 
  1306     0193                     	;# 
  1307     0194                     	;# 
  1308     0195                     	;# 
  1309     0196                     	;# 
  1310     0199                     	;# 
  1311     019A                     	;# 
  1312     019B                     	;# 
  1313     019B                     	;# 
  1314     019B                     	;# 
  1315     019B                     	;# 
  1316     019C                     	;# 
  1317     019C                     	;# 
  1318     019D                     	;# 
  1319     019E                     	;# 
  1320     019F                     	;# 
  1321     020C                     	;# 
  1322     020D                     	;# 
  1323     0211                     	;# 
  1324     0211                     	;# 
  1325     0212                     	;# 
  1326     0212                     	;# 
  1327     0213                     	;# 
  1328     0213                     	;# 
  1329     0214                     	;# 
  1330     0214                     	;# 
  1331     0215                     	;# 
  1332     0215                     	;# 
  1333     0215                     	;# 
  1334     0216                     	;# 
  1335     0216                     	;# 
  1336     0217                     	;# 
  1337     0217                     	;# 
  1338     0219                     	;# 
  1339     021A                     	;# 
  1340     021B                     	;# 
  1341     021C                     	;# 
  1342     021D                     	;# 
  1343     021E                     	;# 
  1344     021F                     	;# 
  1345     0291                     	;# 
  1346     0291                     	;# 
  1347     0292                     	;# 
  1348     0293                     	;# 
  1349     0294                     	;# 
  1350     0295                     	;# 
  1351     0295                     	;# 
  1352     0296                     	;# 
  1353     0298                     	;# 
  1354     0298                     	;# 
  1355     0299                     	;# 
  1356     029A                     	;# 
  1357     029B                     	;# 
  1358     029C                     	;# 
  1359     029C                     	;# 
  1360     029D                     	;# 
  1361     029E                     	;# 
  1362     029E                     	;# 
  1363     0311                     	;# 
  1364     0311                     	;# 
  1365     0312                     	;# 
  1366     0313                     	;# 
  1367     0318                     	;# 
  1368     0318                     	;# 
  1369     0319                     	;# 
  1370     031A                     	;# 
  1371     0394                     	;# 
  1372     0395                     	;# 
  1373     0396                     	;# 
  1374     039A                     	;# 
  1375     039C                     	;# 
  1376     039D                     	;# 
  1377     039E                     	;# 
  1378     039F                     	;# 
  1379     0415                     	;# 
  1380     0416                     	;# 
  1381     0417                     	;# 
  1382     041C                     	;# 
  1383     041D                     	;# 
  1384     041E                     	;# 
  1385     0FE4                     	;# 
  1386     0FE5                     	;# 
  1387     0FE6                     	;# 
  1388     0FE7                     	;# 
  1389     0FE8                     	;# 
  1390     0FE9                     	;# 
  1391     0FEA                     	;# 
  1392     0FEB                     	;# 
  1393     0FED                     	;# 
  1394     0FEE                     	;# 
  1395     0FEF                     	;# 
  1396     0000                     	;# 
  1397     0001                     	;# 
  1398     0002                     	;# 
  1399     0003                     	;# 
  1400     0004                     	;# 
  1401     0005                     	;# 
  1402     0006                     	;# 
  1403     0007                     	;# 
  1404     0008                     	;# 
  1405     0009                     	;# 
  1406     000A                     	;# 
  1407     000B                     	;# 
  1408     000C                     	;# 
  1409     000D                     	;# 
  1410     0011                     	;# 
  1411     0012                     	;# 
  1412     0013                     	;# 
  1413     0014                     	;# 
  1414     0015                     	;# 
  1415     0016                     	;# 
  1416     0016                     	;# 
  1417     0017                     	;# 
  1418     0018                     	;# 
  1419     0019                     	;# 
  1420     001A                     	;# 
  1421     001B                     	;# 
  1422     001C                     	;# 
  1423     001E                     	;# 
  1424     001F                     	;# 
  1425     008C                     	;# 
  1426     008D                     	;# 
  1427     0091                     	;# 
  1428     0092                     	;# 
  1429     0093                     	;# 
  1430     0094                     	;# 
  1431     0095                     	;# 
  1432     0096                     	;# 
  1433     0097                     	;# 
  1434     0098                     	;# 
  1435     0099                     	;# 
  1436     009A                     	;# 
  1437     009B                     	;# 
  1438     009B                     	;# 
  1439     009C                     	;# 
  1440     009D                     	;# 
  1441     009E                     	;# 
  1442     010C                     	;# 
  1443     010D                     	;# 
  1444     0111                     	;# 
  1445     0112                     	;# 
  1446     0113                     	;# 
  1447     0114                     	;# 
  1448     0115                     	;# 
  1449     0116                     	;# 
  1450     0117                     	;# 
  1451     0118                     	;# 
  1452     0119                     	;# 
  1453     011A                     	;# 
  1454     011B                     	;# 
  1455     011D                     	;# 
  1456     011E                     	;# 
  1457     018C                     	;# 
  1458     018D                     	;# 
  1459     0191                     	;# 
  1460     0191                     	;# 
  1461     0192                     	;# 
  1462     0193                     	;# 
  1463     0193                     	;# 
  1464     0193                     	;# 
  1465     0194                     	;# 
  1466     0195                     	;# 
  1467     0196                     	;# 
  1468     0199                     	;# 
  1469     019A                     	;# 
  1470     019B                     	;# 
  1471     019B                     	;# 
  1472     019B                     	;# 
  1473     019B                     	;# 
  1474     019C                     	;# 
  1475     019C                     	;# 
  1476     019D                     	;# 
  1477     019E                     	;# 
  1478     019F                     	;# 
  1479     020C                     	;# 
  1480     020D                     	;# 
  1481     0211                     	;# 
  1482     0211                     	;# 
  1483     0212                     	;# 
  1484     0212                     	;# 
  1485     0213                     	;# 
  1486     0213                     	;# 
  1487     0214                     	;# 
  1488     0214                     	;# 
  1489     0215                     	;# 
  1490     0215                     	;# 
  1491     0215                     	;# 
  1492     0216                     	;# 
  1493     0216                     	;# 
  1494     0217                     	;# 
  1495     0217                     	;# 
  1496     0219                     	;# 
  1497     021A                     	;# 
  1498     021B                     	;# 
  1499     021C                     	;# 
  1500     021D                     	;# 
  1501     021E                     	;# 
  1502     021F                     	;# 
  1503     0291                     	;# 
  1504     0291                     	;# 
  1505     0292                     	;# 
  1506     0293                     	;# 
  1507     0294                     	;# 
  1508     0295                     	;# 
  1509     0295                     	;# 
  1510     0296                     	;# 
  1511     0298                     	;# 
  1512     0298                     	;# 
  1513     0299                     	;# 
  1514     029A                     	;# 
  1515     029B                     	;# 
  1516     029C                     	;# 
  1517     029C                     	;# 
  1518     029D                     	;# 
  1519     029E                     	;# 
  1520     029E                     	;# 
  1521     0311                     	;# 
  1522     0311                     	;# 
  1523     0312                     	;# 
  1524     0313                     	;# 
  1525     0318                     	;# 
  1526     0318                     	;# 
  1527     0319                     	;# 
  1528     031A                     	;# 
  1529     0394                     	;# 
  1530     0395                     	;# 
  1531     0396                     	;# 
  1532     039A                     	;# 
  1533     039C                     	;# 
  1534     039D                     	;# 
  1535     039E                     	;# 
  1536     039F                     	;# 
  1537     0415                     	;# 
  1538     0416                     	;# 
  1539     0417                     	;# 
  1540     041C                     	;# 
  1541     041D                     	;# 
  1542     041E                     	;# 
  1543     0FE4                     	;# 
  1544     0FE5                     	;# 
  1545     0FE6                     	;# 
  1546     0FE7                     	;# 
  1547     0FE8                     	;# 
  1548     0FE9                     	;# 
  1549     0FEA                     	;# 
  1550     0FEB                     	;# 
  1551     0FED                     	;# 
  1552     0FEE                     	;# 
  1553     0FEF                     	;# 
  1554     0000                     	;# 
  1555     0001                     	;# 
  1556     0002                     	;# 
  1557     0003                     	;# 
  1558     0004                     	;# 
  1559     0005                     	;# 
  1560     0006                     	;# 
  1561     0007                     	;# 
  1562     0008                     	;# 
  1563     0009                     	;# 
  1564     000A                     	;# 
  1565     000B                     	;# 
  1566     000C                     	;# 
  1567     000D                     	;# 
  1568     0011                     	;# 
  1569     0012                     	;# 
  1570     0013                     	;# 
  1571     0014                     	;# 
  1572     0015                     	;# 
  1573     0016                     	;# 
  1574     0016                     	;# 
  1575     0017                     	;# 
  1576     0018                     	;# 
  1577     0019                     	;# 
  1578     001A                     	;# 
  1579     001B                     	;# 
  1580     001C                     	;# 
  1581     001E                     	;# 
  1582     001F                     	;# 
  1583     008C                     	;# 
  1584     008D                     	;# 
  1585     0091                     	;# 
  1586     0092                     	;# 
  1587     0093                     	;# 
  1588     0094                     	;# 
  1589     0095                     	;# 
  1590     0096                     	;# 
  1591     0097                     	;# 
  1592     0098                     	;# 
  1593     0099                     	;# 
  1594     009A                     	;# 
  1595     009B                     	;# 
  1596     009B                     	;# 
  1597     009C                     	;# 
  1598     009D                     	;# 
  1599     009E                     	;# 
  1600     010C                     	;# 
  1601     010D                     	;# 
  1602     0111                     	;# 
  1603     0112                     	;# 
  1604     0113                     	;# 
  1605     0114                     	;# 
  1606     0115                     	;# 
  1607     0116                     	;# 
  1608     0117                     	;# 
  1609     0118                     	;# 
  1610     0119                     	;# 
  1611     011A                     	;# 
  1612     011B                     	;# 
  1613     011D                     	;# 
  1614     011E                     	;# 
  1615     018C                     	;# 
  1616     018D                     	;# 
  1617     0191                     	;# 
  1618     0191                     	;# 
  1619     0192                     	;# 
  1620     0193                     	;# 
  1621     0193                     	;# 
  1622     0193                     	;# 
  1623     0194                     	;# 
  1624     0195                     	;# 
  1625     0196                     	;# 
  1626     0199                     	;# 
  1627     019A                     	;# 
  1628     019B                     	;# 
  1629     019B                     	;# 
  1630     019B                     	;# 
  1631     019B                     	;# 
  1632     019C                     	;# 
  1633     019C                     	;# 
  1634     019D                     	;# 
  1635     019E                     	;# 
  1636     019F                     	;# 
  1637     020C                     	;# 
  1638     020D                     	;# 
  1639     0211                     	;# 
  1640     0211                     	;# 
  1641     0212                     	;# 
  1642     0212                     	;# 
  1643     0213                     	;# 
  1644     0213                     	;# 
  1645     0214                     	;# 
  1646     0214                     	;# 
  1647     0215                     	;# 
  1648     0215                     	;# 
  1649     0215                     	;# 
  1650     0216                     	;# 
  1651     0216                     	;# 
  1652     0217                     	;# 
  1653     0217                     	;# 
  1654     0219                     	;# 
  1655     021A                     	;# 
  1656     021B                     	;# 
  1657     021C                     	;# 
  1658     021D                     	;# 
  1659     021E                     	;# 
  1660     021F                     	;# 
  1661     0291                     	;# 
  1662     0291                     	;# 
  1663     0292                     	;# 
  1664     0293                     	;# 
  1665     0294                     	;# 
  1666     0295                     	;# 
  1667     0295                     	;# 
  1668     0296                     	;# 
  1669     0298                     	;# 
  1670     0298                     	;# 
  1671     0299                     	;# 
  1672     029A                     	;# 
  1673     029B                     	;# 
  1674     029C                     	;# 
  1675     029C                     	;# 
  1676     029D                     	;# 
  1677     029E                     	;# 
  1678     029E                     	;# 
  1679     0311                     	;# 
  1680     0311                     	;# 
  1681     0312                     	;# 
  1682     0313                     	;# 
  1683     0318                     	;# 
  1684     0318                     	;# 
  1685     0319                     	;# 
  1686     031A                     	;# 
  1687     0394                     	;# 
  1688     0395                     	;# 
  1689     0396                     	;# 
  1690     039A                     	;# 
  1691     039C                     	;# 
  1692     039D                     	;# 
  1693     039E                     	;# 
  1694     039F                     	;# 
  1695     0415                     	;# 
  1696     0416                     	;# 
  1697     0417                     	;# 
  1698     041C                     	;# 
  1699     041D                     	;# 
  1700     041E                     	;# 
  1701     0FE4                     	;# 
  1702     0FE5                     	;# 
  1703     0FE6                     	;# 
  1704     0FE7                     	;# 
  1705     0FE8                     	;# 
  1706     0FE9                     	;# 
  1707     0FEA                     	;# 
  1708     0FEB                     	;# 
  1709     0FED                     	;# 
  1710     0FEE                     	;# 
  1711     0FEF                     	;# 
  1712     0000                     	;# 
  1713     0001                     	;# 
  1714     0002                     	;# 
  1715     0003                     	;# 
  1716     0004                     	;# 
  1717     0005                     	;# 
  1718     0006                     	;# 
  1719     0007                     	;# 
  1720     0008                     	;# 
  1721     0009                     	;# 
  1722     000A                     	;# 
  1723     000B                     	;# 
  1724     000C                     	;# 
  1725     000D                     	;# 
  1726     0011                     	;# 
  1727     0012                     	;# 
  1728     0013                     	;# 
  1729     0014                     	;# 
  1730     0015                     	;# 
  1731     0016                     	;# 
  1732     0016                     	;# 
  1733     0017                     	;# 
  1734     0018                     	;# 
  1735     0019                     	;# 
  1736     001A                     	;# 
  1737     001B                     	;# 
  1738     001C                     	;# 
  1739     001E                     	;# 
  1740     001F                     	;# 
  1741     008C                     	;# 
  1742     008D                     	;# 
  1743     0091                     	;# 
  1744     0092                     	;# 
  1745     0093                     	;# 
  1746     0094                     	;# 
  1747     0095                     	;# 
  1748     0096                     	;# 
  1749     0097                     	;# 
  1750     0098                     	;# 
  1751     0099                     	;# 
  1752     009A                     	;# 
  1753     009B                     	;# 
  1754     009B                     	;# 
  1755     009C                     	;# 
  1756     009D                     	;# 
  1757     009E                     	;# 
  1758     010C                     	;# 
  1759     010D                     	;# 
  1760     0111                     	;# 
  1761     0112                     	;# 
  1762     0113                     	;# 
  1763     0114                     	;# 
  1764     0115                     	;# 
  1765     0116                     	;# 
  1766     0117                     	;# 
  1767     0118                     	;# 
  1768     0119                     	;# 
  1769     011A                     	;# 
  1770     011B                     	;# 
  1771     011D                     	;# 
  1772     011E                     	;# 
  1773     018C                     	;# 
  1774     018D                     	;# 
  1775     0191                     	;# 
  1776     0191                     	;# 
  1777     0192                     	;# 
  1778     0193                     	;# 
  1779     0193                     	;# 
  1780     0193                     	;# 
  1781     0194                     	;# 
  1782     0195                     	;# 
  1783     0196                     	;# 
  1784     0199                     	;# 
  1785     019A                     	;# 
  1786     019B                     	;# 
  1787     019B                     	;# 
  1788     019B                     	;# 
  1789     019B                     	;# 
  1790     019C                     	;# 
  1791     019C                     	;# 
  1792     019D                     	;# 
  1793     019E                     	;# 
  1794     019F                     	;# 
  1795     020C                     	;# 
  1796     020D                     	;# 
  1797     0211                     	;# 
  1798     0211                     	;# 
  1799     0212                     	;# 
  1800     0212                     	;# 
  1801     0213                     	;# 
  1802     0213                     	;# 
  1803     0214                     	;# 
  1804     0214                     	;# 
  1805     0215                     	;# 
  1806     0215                     	;# 
  1807     0215                     	;# 
  1808     0216                     	;# 
  1809     0216                     	;# 
  1810     0217                     	;# 
  1811     0217                     	;# 
  1812     0219                     	;# 
  1813     021A                     	;# 
  1814     021B                     	;# 
  1815     021C                     	;# 
  1816     021D                     	;# 
  1817     021E                     	;# 
  1818     021F                     	;# 
  1819     0291                     	;# 
  1820     0291                     	;# 
  1821     0292                     	;# 
  1822     0293                     	;# 
  1823     0294                     	;# 
  1824     0295                     	;# 
  1825     0295                     	;# 
  1826     0296                     	;# 
  1827     0298                     	;# 
  1828     0298                     	;# 
  1829     0299                     	;# 
  1830     029A                     	;# 
  1831     029B                     	;# 
  1832     029C                     	;# 
  1833     029C                     	;# 
  1834     029D                     	;# 
  1835     029E                     	;# 
  1836     029E                     	;# 
  1837     0311                     	;# 
  1838     0311                     	;# 
  1839     0312                     	;# 
  1840     0313                     	;# 
  1841     0318                     	;# 
  1842     0318                     	;# 
  1843     0319                     	;# 
  1844     031A                     	;# 
  1845     0394                     	;# 
  1846     0395                     	;# 
  1847     0396                     	;# 
  1848     039A                     	;# 
  1849     039C                     	;# 
  1850     039D                     	;# 
  1851     039E                     	;# 
  1852     039F                     	;# 
  1853     0415                     	;# 
  1854     0416                     	;# 
  1855     0417                     	;# 
  1856     041C                     	;# 
  1857     041D                     	;# 
  1858     041E                     	;# 
  1859     0FE4                     	;# 
  1860     0FE5                     	;# 
  1861     0FE6                     	;# 
  1862     0FE7                     	;# 
  1863     0FE8                     	;# 
  1864     0FE9                     	;# 
  1865     0FEA                     	;# 
  1866     0FEB                     	;# 
  1867     0FED                     	;# 
  1868     0FEE                     	;# 
  1869     0FEF                     	;# 
  1870     0000                     	;# 
  1871     0001                     	;# 
  1872     0002                     	;# 
  1873     0003                     	;# 
  1874     0004                     	;# 
  1875     0005                     	;# 
  1876     0006                     	;# 
  1877     0007                     	;# 
  1878     0008                     	;# 
  1879     0009                     	;# 
  1880     000A                     	;# 
  1881     000B                     	;# 
  1882     000C                     	;# 
  1883     000D                     	;# 
  1884     0011                     	;# 
  1885     0012                     	;# 
  1886     0013                     	;# 
  1887     0014                     	;# 
  1888     0015                     	;# 
  1889     0016                     	;# 
  1890     0016                     	;# 
  1891     0017                     	;# 
  1892     0018                     	;# 
  1893     0019                     	;# 
  1894     001A                     	;# 
  1895     001B                     	;# 
  1896     001C                     	;# 
  1897     001E                     	;# 
  1898     001F                     	;# 
  1899     008C                     	;# 
  1900     008D                     	;# 
  1901     0091                     	;# 
  1902     0092                     	;# 
  1903     0093                     	;# 
  1904     0094                     	;# 
  1905     0095                     	;# 
  1906     0096                     	;# 
  1907     0097                     	;# 
  1908     0098                     	;# 
  1909     0099                     	;# 
  1910     009A                     	;# 
  1911     009B                     	;# 
  1912     009B                     	;# 
  1913     009C                     	;# 
  1914     009D                     	;# 
  1915     009E                     	;# 
  1916     010C                     	;# 
  1917     010D                     	;# 
  1918     0111                     	;# 
  1919     0112                     	;# 
  1920     0113                     	;# 
  1921     0114                     	;# 
  1922     0115                     	;# 
  1923     0116                     	;# 
  1924     0117                     	;# 
  1925     0118                     	;# 
  1926     0119                     	;# 
  1927     011A                     	;# 
  1928     011B                     	;# 
  1929     011D                     	;# 
  1930     011E                     	;# 
  1931     018C                     	;# 
  1932     018D                     	;# 
  1933     0191                     	;# 
  1934     0191                     	;# 
  1935     0192                     	;# 
  1936     0193                     	;# 
  1937     0193                     	;# 
  1938     0193                     	;# 
  1939     0194                     	;# 
  1940     0195                     	;# 
  1941     0196                     	;# 
  1942     0199                     	;# 
  1943     019A                     	;# 
  1944     019B                     	;# 
  1945     019B                     	;# 
  1946     019B                     	;# 
  1947     019B                     	;# 
  1948     019C                     	;# 
  1949     019C                     	;# 
  1950     019D                     	;# 
  1951     019E                     	;# 
  1952     019F                     	;# 
  1953     020C                     	;# 
  1954     020D                     	;# 
  1955     0211                     	;# 
  1956     0211                     	;# 
  1957     0212                     	;# 
  1958     0212                     	;# 
  1959     0213                     	;# 
  1960     0213                     	;# 
  1961     0214                     	;# 
  1962     0214                     	;# 
  1963     0215                     	;# 
  1964     0215                     	;# 
  1965     0215                     	;# 
  1966     0216                     	;# 
  1967     0216                     	;# 
  1968     0217                     	;# 
  1969     0217                     	;# 
  1970     0219                     	;# 
  1971     021A                     	;# 
  1972     021B                     	;# 
  1973     021C                     	;# 
  1974     021D                     	;# 
  1975     021E                     	;# 
  1976     021F                     	;# 
  1977     0291                     	;# 
  1978     0291                     	;# 
  1979     0292                     	;# 
  1980     0293                     	;# 
  1981     0294                     	;# 
  1982     0295                     	;# 
  1983     0295                     	;# 
  1984     0296                     	;# 
  1985     0298                     	;# 
  1986     0298                     	;# 
  1987     0299                     	;# 
  1988     029A                     	;# 
  1989     029B                     	;# 
  1990     029C                     	;# 
  1991     029C                     	;# 
  1992     029D                     	;# 
  1993     029E                     	;# 
  1994     029E                     	;# 
  1995     0311                     	;# 
  1996     0311                     	;# 
  1997     0312                     	;# 
  1998     0313                     	;# 
  1999     0318                     	;# 
  2000     0318                     	;# 
  2001     0319                     	;# 
  2002     031A                     	;# 
  2003     0394                     	;# 
  2004     0395                     	;# 
  2005     0396                     	;# 
  2006     039A                     	;# 
  2007     039C                     	;# 
  2008     039D                     	;# 
  2009     039E                     	;# 
  2010     039F                     	;# 
  2011     0415                     	;# 
  2012     0416                     	;# 
  2013     0417                     	;# 
  2014     041C                     	;# 
  2015     041D                     	;# 
  2016     041E                     	;# 
  2017     0FE4                     	;# 
  2018     0FE5                     	;# 
  2019     0FE6                     	;# 
  2020     0FE7                     	;# 
  2021     0FE8                     	;# 
  2022     0FE9                     	;# 
  2023     0FEA                     	;# 
  2024     0FEB                     	;# 
  2025     0FED                     	;# 
  2026     0FEE                     	;# 
  2027     0FEF                     	;# 
  2028     0000                     	;# 
  2029     0001                     	;# 
  2030     0002                     	;# 
  2031     0003                     	;# 
  2032     0004                     	;# 
  2033     0005                     	;# 
  2034     0006                     	;# 
  2035     0007                     	;# 
  2036     0008                     	;# 
  2037     0009                     	;# 
  2038     000A                     	;# 
  2039     000B                     	;# 
  2040     000C                     	;# 
  2041     000D                     	;# 
  2042     0011                     	;# 
  2043     0012                     	;# 
  2044     0013                     	;# 
  2045     0014                     	;# 
  2046     0015                     	;# 
  2047     0016                     	;# 
  2048     0016                     	;# 
  2049     0017                     	;# 
  2050     0018                     	;# 
  2051     0019                     	;# 
  2052     001A                     	;# 
  2053     001B                     	;# 
  2054     001C                     	;# 
  2055     001E                     	;# 
  2056     001F                     	;# 
  2057     008C                     	;# 
  2058     008D                     	;# 
  2059     0091                     	;# 
  2060     0092                     	;# 
  2061     0093                     	;# 
  2062     0094                     	;# 
  2063     0095                     	;# 
  2064     0096                     	;# 
  2065     0097                     	;# 
  2066     0098                     	;# 
  2067     0099                     	;# 
  2068     009A                     	;# 
  2069     009B                     	;# 
  2070     009B                     	;# 
  2071     009C                     	;# 
  2072     009D                     	;# 
  2073     009E                     	;# 
  2074     010C                     	;# 
  2075     010D                     	;# 
  2076     0111                     	;# 
  2077     0112                     	;# 
  2078     0113                     	;# 
  2079     0114                     	;# 
  2080     0115                     	;# 
  2081     0116                     	;# 
  2082     0117                     	;# 
  2083     0118                     	;# 
  2084     0119                     	;# 
  2085     011A                     	;# 
  2086     011B                     	;# 
  2087     011D                     	;# 
  2088     011E                     	;# 
  2089     018C                     	;# 
  2090     018D                     	;# 
  2091     0191                     	;# 
  2092     0191                     	;# 
  2093     0192                     	;# 
  2094     0193                     	;# 
  2095     0193                     	;# 
  2096     0193                     	;# 
  2097     0194                     	;# 
  2098     0195                     	;# 
  2099     0196                     	;# 
  2100     0199                     	;# 
  2101     019A                     	;# 
  2102     019B                     	;# 
  2103     019B                     	;# 
  2104     019B                     	;# 
  2105     019B                     	;# 
  2106     019C                     	;# 
  2107     019C                     	;# 
  2108     019D                     	;# 
  2109     019E                     	;# 
  2110     019F                     	;# 
  2111     020C                     	;# 
  2112     020D                     	;# 
  2113     0211                     	;# 
  2114     0211                     	;# 
  2115     0212                     	;# 
  2116     0212                     	;# 
  2117     0213                     	;# 
  2118     0213                     	;# 
  2119     0214                     	;# 
  2120     0214                     	;# 
  2121     0215                     	;# 
  2122     0215                     	;# 
  2123     0215                     	;# 
  2124     0216                     	;# 
  2125     0216                     	;# 
  2126     0217                     	;# 
  2127     0217                     	;# 
  2128     0219                     	;# 
  2129     021A                     	;# 
  2130     021B                     	;# 
  2131     021C                     	;# 
  2132     021D                     	;# 
  2133     021E                     	;# 
  2134     021F                     	;# 
  2135     0291                     	;# 
  2136     0291                     	;# 
  2137     0292                     	;# 
  2138     0293                     	;# 
  2139     0294                     	;# 
  2140     0295                     	;# 
  2141     0295                     	;# 
  2142     0296                     	;# 
  2143     0298                     	;# 
  2144     0298                     	;# 
  2145     0299                     	;# 
  2146     029A                     	;# 
  2147     029B                     	;# 
  2148     029C                     	;# 
  2149     029C                     	;# 
  2150     029D                     	;# 
  2151     029E                     	;# 
  2152     029E                     	;# 
  2153     0311                     	;# 
  2154     0311                     	;# 
  2155     0312                     	;# 
  2156     0313                     	;# 
  2157     0318                     	;# 
  2158     0318                     	;# 
  2159     0319                     	;# 
  2160     031A                     	;# 
  2161     0394                     	;# 
  2162     0395                     	;# 
  2163     0396                     	;# 
  2164     039A                     	;# 
  2165     039C                     	;# 
  2166     039D                     	;# 
  2167     039E                     	;# 
  2168     039F                     	;# 
  2169     0415                     	;# 
  2170     0416                     	;# 
  2171     0417                     	;# 
  2172     041C                     	;# 
  2173     041D                     	;# 
  2174     041E                     	;# 
  2175     0FE4                     	;# 
  2176     0FE5                     	;# 
  2177     0FE6                     	;# 
  2178     0FE7                     	;# 
  2179     0FE8                     	;# 
  2180     0FE9                     	;# 
  2181     0FEA                     	;# 
  2182     0FEB                     	;# 
  2183     0FED                     	;# 
  2184     0FEE                     	;# 
  2185     0FEF                     	;# 
  2186     0000                     	;# 
  2187     0001                     	;# 
  2188     0002                     	;# 
  2189     0003                     	;# 
  2190     0004                     	;# 
  2191     0005                     	;# 
  2192     0006                     	;# 
  2193     0007                     	;# 
  2194     0008                     	;# 
  2195     0009                     	;# 
  2196     000A                     	;# 
  2197     000B                     	;# 
  2198     000C                     	;# 
  2199     000D                     	;# 
  2200     0011                     	;# 
  2201     0012                     	;# 
  2202     0013                     	;# 
  2203     0014                     	;# 
  2204     0015                     	;# 
  2205     0016                     	;# 
  2206     0016                     	;# 
  2207     0017                     	;# 
  2208     0018                     	;# 
  2209     0019                     	;# 
  2210     001A                     	;# 
  2211     001B                     	;# 
  2212     001C                     	;# 
  2213     001E                     	;# 
  2214     001F                     	;# 
  2215     008C                     	;# 
  2216     008D                     	;# 
  2217     0091                     	;# 
  2218     0092                     	;# 
  2219     0093                     	;# 
  2220     0094                     	;# 
  2221     0095                     	;# 
  2222     0096                     	;# 
  2223     0097                     	;# 
  2224     0098                     	;# 
  2225     0099                     	;# 
  2226     009A                     	;# 
  2227     009B                     	;# 
  2228     009B                     	;# 
  2229     009C                     	;# 
  2230     009D                     	;# 
  2231     009E                     	;# 
  2232     010C                     	;# 
  2233     010D                     	;# 
  2234     0111                     	;# 
  2235     0112                     	;# 
  2236     0113                     	;# 
  2237     0114                     	;# 
  2238     0115                     	;# 
  2239     0116                     	;# 
  2240     0117                     	;# 
  2241     0118                     	;# 
  2242     0119                     	;# 
  2243     011A                     	;# 
  2244     011B                     	;# 
  2245     011D                     	;# 
  2246     011E                     	;# 
  2247     018C                     	;# 
  2248     018D                     	;# 
  2249     0191                     	;# 
  2250     0191                     	;# 
  2251     0192                     	;# 
  2252     0193                     	;# 
  2253     0193                     	;# 
  2254     0193                     	;# 
  2255     0194                     	;# 
  2256     0195                     	;# 
  2257     0196                     	;# 
  2258     0199                     	;# 
  2259     019A                     	;# 
  2260     019B                     	;# 
  2261     019B                     	;# 
  2262     019B                     	;# 
  2263     019B                     	;# 
  2264     019C                     	;# 
  2265     019C                     	;# 
  2266     019D                     	;# 
  2267     019E                     	;# 
  2268     019F                     	;# 
  2269     020C                     	;# 
  2270     020D                     	;# 
  2271     0211                     	;# 
  2272     0211                     	;# 
  2273     0212                     	;# 
  2274     0212                     	;# 
  2275     0213                     	;# 
  2276     0213                     	;# 
  2277     0214                     	;# 
  2278     0214                     	;# 
  2279     0215                     	;# 
  2280     0215                     	;# 
  2281     0215                     	;# 
  2282     0216                     	;# 
  2283     0216                     	;# 
  2284     0217                     	;# 
  2285     0217                     	;# 
  2286     0219                     	;# 
  2287     021A                     	;# 
  2288     021B                     	;# 
  2289     021C                     	;# 
  2290     021D                     	;# 
  2291     021E                     	;# 
  2292     021F                     	;# 
  2293     0291                     	;# 
  2294     0291                     	;# 
  2295     0292                     	;# 
  2296     0293                     	;# 
  2297     0294                     	;# 
  2298     0295                     	;# 
  2299     0295                     	;# 
  2300     0296                     	;# 
  2301     0298                     	;# 
  2302     0298                     	;# 
  2303     0299                     	;# 
  2304     029A                     	;# 
  2305     029B                     	;# 
  2306     029C                     	;# 
  2307     029C                     	;# 
  2308     029D                     	;# 
  2309     029E                     	;# 
  2310     029E                     	;# 
  2311     0311                     	;# 
  2312     0311                     	;# 
  2313     0312                     	;# 
  2314     0313                     	;# 
  2315     0318                     	;# 
  2316     0318                     	;# 
  2317     0319                     	;# 
  2318     031A                     	;# 
  2319     0394                     	;# 
  2320     0395                     	;# 
  2321     0396                     	;# 
  2322     039A                     	;# 
  2323     039C                     	;# 
  2324     039D                     	;# 
  2325     039E                     	;# 
  2326     039F                     	;# 
  2327     0415                     	;# 
  2328     0416                     	;# 
  2329     0417                     	;# 
  2330     041C                     	;# 
  2331     041D                     	;# 
  2332     041E                     	;# 
  2333     0FE4                     	;# 
  2334     0FE5                     	;# 
  2335     0FE6                     	;# 
  2336     0FE7                     	;# 
  2337     0FE8                     	;# 
  2338     0FE9                     	;# 
  2339     0FEA                     	;# 
  2340     0FEB                     	;# 
  2341     0FED                     	;# 
  2342     0FEE                     	;# 
  2343     0FEF                     	;# 
  2344     0000                     	;# 
  2345     0001                     	;# 
  2346     0002                     	;# 
  2347     0003                     	;# 
  2348     0004                     	;# 
  2349     0005                     	;# 
  2350     0006                     	;# 
  2351     0007                     	;# 
  2352     0008                     	;# 
  2353     0009                     	;# 
  2354     000A                     	;# 
  2355     000B                     	;# 
  2356     000C                     	;# 
  2357     000D                     	;# 
  2358     0011                     	;# 
  2359     0012                     	;# 
  2360     0013                     	;# 
  2361     0014                     	;# 
  2362     0015                     	;# 
  2363     0016                     	;# 
  2364     0016                     	;# 
  2365     0017                     	;# 
  2366     0018                     	;# 
  2367     0019                     	;# 
  2368     001A                     	;# 
  2369     001B                     	;# 
  2370     001C                     	;# 
  2371     001E                     	;# 
  2372     001F                     	;# 
  2373     008C                     	;# 
  2374     008D                     	;# 
  2375     0091                     	;# 
  2376     0092                     	;# 
  2377     0093                     	;# 
  2378     0094                     	;# 
  2379     0095                     	;# 
  2380     0096                     	;# 
  2381     0097                     	;# 
  2382     0098                     	;# 
  2383     0099                     	;# 
  2384     009A                     	;# 
  2385     009B                     	;# 
  2386     009B                     	;# 
  2387     009C                     	;# 
  2388     009D                     	;# 
  2389     009E                     	;# 
  2390     010C                     	;# 
  2391     010D                     	;# 
  2392     0111                     	;# 
  2393     0112                     	;# 
  2394     0113                     	;# 
  2395     0114                     	;# 
  2396     0115                     	;# 
  2397     0116                     	;# 
  2398     0117                     	;# 
  2399     0118                     	;# 
  2400     0119                     	;# 
  2401     011A                     	;# 
  2402     011B                     	;# 
  2403     011D                     	;# 
  2404     011E                     	;# 
  2405     018C                     	;# 
  2406     018D                     	;# 
  2407     0191                     	;# 
  2408     0191                     	;# 
  2409     0192                     	;# 
  2410     0193                     	;# 
  2411     0193                     	;# 
  2412     0193                     	;# 
  2413     0194                     	;# 
  2414     0195                     	;# 
  2415     0196                     	;# 
  2416     0199                     	;# 
  2417     019A                     	;# 
  2418     019B                     	;# 
  2419     019B                     	;# 
  2420     019B                     	;# 
  2421     019B                     	;# 
  2422     019C                     	;# 
  2423     019C                     	;# 
  2424     019D                     	;# 
  2425     019E                     	;# 
  2426     019F                     	;# 
  2427     020C                     	;# 
  2428     020D                     	;# 
  2429     0211                     	;# 
  2430     0211                     	;# 
  2431     0212                     	;# 
  2432     0212                     	;# 
  2433     0213                     	;# 
  2434     0213                     	;# 
  2435     0214                     	;# 
  2436     0214                     	;# 
  2437     0215                     	;# 
  2438     0215                     	;# 
  2439     0215                     	;# 
  2440     0216                     	;# 
  2441     0216                     	;# 
  2442     0217                     	;# 
  2443     0217                     	;# 
  2444     0219                     	;# 
  2445     021A                     	;# 
  2446     021B                     	;# 
  2447     021C                     	;# 
  2448     021D                     	;# 
  2449     021E                     	;# 
  2450     021F                     	;# 
  2451     0291                     	;# 
  2452     0291                     	;# 
  2453     0292                     	;# 
  2454     0293                     	;# 
  2455     0294                     	;# 
  2456     0295                     	;# 
  2457     0295                     	;# 
  2458     0296                     	;# 
  2459     0298                     	;# 
  2460     0298                     	;# 
  2461     0299                     	;# 
  2462     029A                     	;# 
  2463     029B                     	;# 
  2464     029C                     	;# 
  2465     029C                     	;# 
  2466     029D                     	;# 
  2467     029E                     	;# 
  2468     029E                     	;# 
  2469     0311                     	;# 
  2470     0311                     	;# 
  2471     0312                     	;# 
  2472     0313                     	;# 
  2473     0318                     	;# 
  2474     0318                     	;# 
  2475     0319                     	;# 
  2476     031A                     	;# 
  2477     0394                     	;# 
  2478     0395                     	;# 
  2479     0396                     	;# 
  2480     039A                     	;# 
  2481     039C                     	;# 
  2482     039D                     	;# 
  2483     039E                     	;# 
  2484     039F                     	;# 
  2485     0415                     	;# 
  2486     0416                     	;# 
  2487     0417                     	;# 
  2488     041C                     	;# 
  2489     041D                     	;# 
  2490     041E                     	;# 
  2491     0FE4                     	;# 
  2492     0FE5                     	;# 
  2493     0FE6                     	;# 
  2494     0FE7                     	;# 
  2495     0FE8                     	;# 
  2496     0FE9                     	;# 
  2497     0FEA                     	;# 
  2498     0FEB                     	;# 
  2499     0FED                     	;# 
  2500     0FEE                     	;# 
  2501     0FEF                     	;# 
  2502     0000                     	;# 
  2503     0001                     	;# 
  2504     0002                     	;# 
  2505     0003                     	;# 
  2506     0004                     	;# 
  2507     0005                     	;# 
  2508     0006                     	;# 
  2509     0007                     	;# 
  2510     0008                     	;# 
  2511     0009                     	;# 
  2512     000A                     	;# 
  2513     000B                     	;# 
  2514     000C                     	;# 
  2515     000D                     	;# 
  2516     0011                     	;# 
  2517     0012                     	;# 
  2518     0013                     	;# 
  2519     0014                     	;# 
  2520     0015                     	;# 
  2521     0016                     	;# 
  2522     0016                     	;# 
  2523     0017                     	;# 
  2524     0018                     	;# 
  2525     0019                     	;# 
  2526     001A                     	;# 
  2527     001B                     	;# 
  2528     001C                     	;# 
  2529     001E                     	;# 
  2530     001F                     	;# 
  2531     008C                     	;# 
  2532     008D                     	;# 
  2533     0091                     	;# 
  2534     0092                     	;# 
  2535     0093                     	;# 
  2536     0094                     	;# 
  2537     0095                     	;# 
  2538     0096                     	;# 
  2539     0097                     	;# 
  2540     0098                     	;# 
  2541     0099                     	;# 
  2542     009A                     	;# 
  2543     009B                     	;# 
  2544     009B                     	;# 
  2545     009C                     	;# 
  2546     009D                     	;# 
  2547     009E                     	;# 
  2548     010C                     	;# 
  2549     010D                     	;# 
  2550     0111                     	;# 
  2551     0112                     	;# 
  2552     0113                     	;# 
  2553     0114                     	;# 
  2554     0115                     	;# 
  2555     0116                     	;# 
  2556     0117                     	;# 
  2557     0118                     	;# 
  2558     0119                     	;# 
  2559     011A                     	;# 
  2560     011B                     	;# 
  2561     011D                     	;# 
  2562     011E                     	;# 
  2563     018C                     	;# 
  2564     018D                     	;# 
  2565     0191                     	;# 
  2566     0191                     	;# 
  2567     0192                     	;# 
  2568     0193                     	;# 
  2569     0193                     	;# 
  2570     0193                     	;# 
  2571     0194                     	;# 
  2572     0195                     	;# 
  2573     0196                     	;# 
  2574     0199                     	;# 
  2575     019A                     	;# 
  2576     019B                     	;# 
  2577     019B                     	;# 
  2578     019B                     	;# 
  2579     019B                     	;# 
  2580     019C                     	;# 
  2581     019C                     	;# 
  2582     019D                     	;# 
  2583     019E                     	;# 
  2584     019F                     	;# 
  2585     020C                     	;# 
  2586     020D                     	;# 
  2587     0211                     	;# 
  2588     0211                     	;# 
  2589     0212                     	;# 
  2590     0212                     	;# 
  2591     0213                     	;# 
  2592     0213                     	;# 
  2593     0214                     	;# 
  2594     0214                     	;# 
  2595     0215                     	;# 
  2596     0215                     	;# 
  2597     0215                     	;# 
  2598     0216                     	;# 
  2599     0216                     	;# 
  2600     0217                     	;# 
  2601     0217                     	;# 
  2602     0219                     	;# 
  2603     021A                     	;# 
  2604     021B                     	;# 
  2605     021C                     	;# 
  2606     021D                     	;# 
  2607     021E                     	;# 
  2608     021F                     	;# 
  2609     0291                     	;# 
  2610     0291                     	;# 
  2611     0292                     	;# 
  2612     0293                     	;# 
  2613     0294                     	;# 
  2614     0295                     	;# 
  2615     0295                     	;# 
  2616     0296                     	;# 
  2617     0298                     	;# 
  2618     0298                     	;# 
  2619     0299                     	;# 
  2620     029A                     	;# 
  2621     029B                     	;# 
  2622     029C                     	;# 
  2623     029C                     	;# 
  2624     029D                     	;# 
  2625     029E                     	;# 
  2626     029E                     	;# 
  2627     0311                     	;# 
  2628     0311                     	;# 
  2629     0312                     	;# 
  2630     0313                     	;# 
  2631     0318                     	;# 
  2632     0318                     	;# 
  2633     0319                     	;# 
  2634     031A                     	;# 
  2635     0394                     	;# 
  2636     0395                     	;# 
  2637     0396                     	;# 
  2638     039A                     	;# 
  2639     039C                     	;# 
  2640     039D                     	;# 
  2641     039E                     	;# 
  2642     039F                     	;# 
  2643     0415                     	;# 
  2644     0416                     	;# 
  2645     0417                     	;# 
  2646     041C                     	;# 
  2647     041D                     	;# 
  2648     041E                     	;# 
  2649     0FE4                     	;# 
  2650     0FE5                     	;# 
  2651     0FE6                     	;# 
  2652     0FE7                     	;# 
  2653     0FE8                     	;# 
  2654     0FE9                     	;# 
  2655     0FEA                     	;# 
  2656     0FEB                     	;# 
  2657     0FED                     	;# 
  2658     0FEE                     	;# 
  2659     0FEF                     	;# 
  2660     0000                     	;# 
  2661     0001                     	;# 
  2662     0002                     	;# 
  2663     0003                     	;# 
  2664     0004                     	;# 
  2665     0005                     	;# 
  2666     0006                     	;# 
  2667     0007                     	;# 
  2668     0008                     	;# 
  2669     0009                     	;# 
  2670     000A                     	;# 
  2671     000B                     	;# 
  2672     000C                     	;# 
  2673     000D                     	;# 
  2674     0011                     	;# 
  2675     0012                     	;# 
  2676     0013                     	;# 
  2677     0014                     	;# 
  2678     0015                     	;# 
  2679     0016                     	;# 
  2680     0016                     	;# 
  2681     0017                     	;# 
  2682     0018                     	;# 
  2683     0019                     	;# 
  2684     001A                     	;# 
  2685     001B                     	;# 
  2686     001C                     	;# 
  2687     001E                     	;# 
  2688     001F                     	;# 
  2689     008C                     	;# 
  2690     008D                     	;# 
  2691     0091                     	;# 
  2692     0092                     	;# 
  2693     0093                     	;# 
  2694     0094                     	;# 
  2695     0095                     	;# 
  2696     0096                     	;# 
  2697     0097                     	;# 
  2698     0098                     	;# 
  2699     0099                     	;# 
  2700     009A                     	;# 
  2701     009B                     	;# 
  2702     009B                     	;# 
  2703     009C                     	;# 
  2704     009D                     	;# 
  2705     009E                     	;# 
  2706     010C                     	;# 
  2707     010D                     	;# 
  2708     0111                     	;# 
  2709     0112                     	;# 
  2710     0113                     	;# 
  2711     0114                     	;# 
  2712     0115                     	;# 
  2713     0116                     	;# 
  2714     0117                     	;# 
  2715     0118                     	;# 
  2716     0119                     	;# 
  2717     011A                     	;# 
  2718     011B                     	;# 
  2719     011D                     	;# 
  2720     011E                     	;# 
  2721     018C                     	;# 
  2722     018D                     	;# 
  2723     0191                     	;# 
  2724     0191                     	;# 
  2725     0192                     	;# 
  2726     0193                     	;# 
  2727     0193                     	;# 
  2728     0193                     	;# 
  2729     0194                     	;# 
  2730     0195                     	;# 
  2731     0196                     	;# 
  2732     0199                     	;# 
  2733     019A                     	;# 
  2734     019B                     	;# 
  2735     019B                     	;# 
  2736     019B                     	;# 
  2737     019B                     	;# 
  2738     019C                     	;# 
  2739     019C                     	;# 
  2740     019D                     	;# 
  2741     019E                     	;# 
  2742     019F                     	;# 
  2743     020C                     	;# 
  2744     020D                     	;# 
  2745     0211                     	;# 
  2746     0211                     	;# 
  2747     0212                     	;# 
  2748     0212                     	;# 
  2749     0213                     	;# 
  2750     0213                     	;# 
  2751     0214                     	;# 
  2752     0214                     	;# 
  2753     0215                     	;# 
  2754     0215                     	;# 
  2755     0215                     	;# 
  2756     0216                     	;# 
  2757     0216                     	;# 
  2758     0217                     	;# 
  2759     0217                     	;# 
  2760     0219                     	;# 
  2761     021A                     	;# 
  2762     021B                     	;# 
  2763     021C                     	;# 
  2764     021D                     	;# 
  2765     021E                     	;# 
  2766     021F                     	;# 
  2767     0291                     	;# 
  2768     0291                     	;# 
  2769     0292                     	;# 
  2770     0293                     	;# 
  2771     0294                     	;# 
  2772     0295                     	;# 
  2773     0295                     	;# 
  2774     0296                     	;# 
  2775     0298                     	;# 
  2776     0298                     	;# 
  2777     0299                     	;# 
  2778     029A                     	;# 
  2779     029B                     	;# 
  2780     029C                     	;# 
  2781     029C                     	;# 
  2782     029D                     	;# 
  2783     029E                     	;# 
  2784     029E                     	;# 
  2785     0311                     	;# 
  2786     0311                     	;# 
  2787     0312                     	;# 
  2788     0313                     	;# 
  2789     0318                     	;# 
  2790     0318                     	;# 
  2791     0319                     	;# 
  2792     031A                     	;# 
  2793     0394                     	;# 
  2794     0395                     	;# 
  2795     0396                     	;# 
  2796     039A                     	;# 
  2797     039C                     	;# 
  2798     039D                     	;# 
  2799     039E                     	;# 
  2800     039F                     	;# 
  2801     0415                     	;# 
  2802     0416                     	;# 
  2803     0417                     	;# 
  2804     041C                     	;# 
  2805     041D                     	;# 
  2806     041E                     	;# 
  2807     0FE4                     	;# 
  2808     0FE5                     	;# 
  2809     0FE6                     	;# 
  2810     0FE7                     	;# 
  2811     0FE8                     	;# 
  2812     0FE9                     	;# 
  2813     0FEA                     	;# 
  2814     0FEB                     	;# 
  2815     0FED                     	;# 
  2816     0FEE                     	;# 
  2817     0FEF                     	;# 
  2818                           
  2819 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2820     0000                     
  2821 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2822     0000                     
  2823 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2824     0000                     
  2825                           	psect	idataBANK1
  2826     0003                     __pidataBANK1:
  2827                           
  2828                           ;initializer for _subindo
  2829     0003  3401               	retlw	1
  2830                           
  2831                           	psect	stringtext1
  2832     07FB                     __pstringtext1:
  2833     07FB                     _matrix_conf:
  2834     07FB  3409               	retlw	9
  2835     07FC  3400               	retlw	0
  2836     07FD  340A               	retlw	10
  2837     07FE  3400               	retlw	0
  2838     07FF  340B               	retlw	11
  2839     0800  3407               	retlw	7
  2840     0801  340C               	retlw	12
  2841     0802  3401               	retlw	1
  2842     0803  340F               	retlw	15
  2843     0804  3401               	retlw	1
  2844     0805  340F               	retlw	15
  2845     0806  3400               	retlw	0
  2846     0807                     __end_of_matrix_conf:
  2847                           
  2848                           	psect	stringtext2
  2849     0807                     __pstringtext2:
  2850     0807                     _spi1_configuration:
  2851     0807  3400               	retlw	0
  2852     0808  3440               	retlw	64
  2853     0809  3401               	retlw	1
  2854     080A  3400               	retlw	0
  2855     080B                     __end_of_spi1_configuration:
  2856                           
  2857                           	psect	nvBANK1
  2858     00CE                     __pnvBANK1:
  2859     00CE                     _TMR4_InterruptHandler:
  2860     00CE                     	ds	2
  2861     00D0                     _CCP4_CallBack:
  2862     00D0                     	ds	2
  2863     00D2                     _TMR0_InterruptHandler:
  2864     00D2                     	ds	2
  2865     00D4                     _EUSART_ErrorHandler:
  2866     00D4                     	ds	2
  2867     00D6                     _EUSART_OverrunErrorHandler:
  2868     00D6                     	ds	2
  2869     00D8                     _EUSART_FramingErrorHandler:
  2870     00D8                     	ds	2
  2871     00DA                     _IOCBF3_InterruptHandler:
  2872     00DA                     	ds	2
  2873     00DC                     _IOCBF0_InterruptHandler:
  2874     00DC                     	ds	2
  2875     0015                     _TMR0	set	21
  2876     001C                     _T2CONbits	set	28
  2877     001C                     _T2CON	set	28
  2878     001A                     _TMR2	set	26
  2879     001B                     _PR2	set	27
  2880     0019                     _T1GCONbits	set	25
  2881     0018                     _T1CONbits	set	24
  2882     0018                     _T1CON	set	24
  2883     0016                     _TMR1L	set	22
  2884     0017                     _TMR1H	set	23
  2885     0019                     _T1GCON	set	25
  2886     0013                     _PIR3bits	set	19
  2887     0011                     _PIR1bits	set	17
  2888     000B                     _INTCONbits	set	11
  2889     0012                     _PIR2bits	set	18
  2890     0095                     _OPTION_REG	set	149
  2891     0093                     _PIE3bits	set	147
  2892     008D                     _TRISBbits	set	141
  2893     009D                     _ADCON0bits	set	157
  2894     009D                     _ADCON0	set	157
  2895     009C                     _ADRESH	set	156
  2896     009B                     _ADRESL	set	155
  2897     009E                     _ADCON1	set	158
  2898     0097                     _WDTCON	set	151
  2899     0098                     _OSCTUNE	set	152
  2900     0099                     _OSCCON	set	153
  2901     0095                     _OPTION_REGbits	set	149
  2902     008D                     _TRISB	set	141
  2903     008C                     _TRISA	set	140
  2904     0092                     _PIE2bits	set	146
  2905     010C                     _LATAbits	set	268
  2906     010D                     _LATBbits	set	269
  2907     0117                     _FVRCONbits	set	279
  2908     0117                     _FVRCON	set	279
  2909     0116                     _BORCON	set	278
  2910     011E                     _APFCON1	set	286
  2911     011D                     _APFCON0	set	285
  2912     010D                     _LATB	set	269
  2913     010C                     _LATA	set	268
  2914     0112                     _CM1CON1	set	274
  2915     0111                     _CM1CON0	set	273
  2916     0115                     _CMOUTbits	set	277
  2917     0114                     _CM2CON1	set	276
  2918     0113                     _CM2CON0	set	275
  2919     019A                     _TXREG	set	410
  2920     0199                     _RCREG	set	409
  2921     019D                     _RCSTAbits	set	413
  2922     019E                     _TXSTAbits	set	414
  2923     019C                     _SPBRGH	set	412
  2924     019B                     _SPBRGL	set	411
  2925     019E                     _TXSTA	set	414
  2926     019D                     _RCSTA	set	413
  2927     019F                     _BAUDCON	set	415
  2928     018C                     _ANSELA	set	396
  2929     018D                     _ANSELB	set	397
  2930     0211                     _SSP1BUF	set	529
  2931     0216                     _SSP1CON2	set	534
  2932     0215                     _SSP1CON1bits	set	533
  2933     0212                     _SSP1ADD	set	530
  2934     0215                     _SSP1CON1	set	533
  2935     0214                     _SSP1STAT	set	532
  2936     020C                     _WPUA	set	524
  2937     020D                     _WPUB	set	525
  2938     029E                     _CCPTMRS0bits	set	670
  2939     0319                     _CCPR4H	set	793
  2940     0318                     _CCPR4L	set	792
  2941     031A                     _CCP4CON	set	794
  2942     0312                     _CCPR3H	set	786
  2943     0311                     _CCPR3L	set	785
  2944     0313                     _CCP3CON	set	787
  2945     0394                     _IOCBPbits	set	916
  2946     0395                     _IOCBNbits	set	917
  2947     0396                     _IOCBFbits	set	918
  2948     0417                     _T4CONbits	set	1047
  2949     0417                     _T4CON	set	1047
  2950     0415                     _TMR4	set	1045
  2951     0416                     _PR4	set	1046
  2952                           
  2953                           	psect	cinit
  2954     0058                     start_initialization:	
  2955                           ; #config settings
  2956                           
  2957     0058                     __initialization:
  2958                           
  2959                           ; Initialize objects allocated to BANK1
  2960     0058  0021               	movlb	1	; select bank1
  2961     0059  3180  2003  3180   	fcall	__pidataBANK1	;fetch initializer
  2962     005C  00DE               	movwf	__pdataBANK1& (0+127)
  2963                           
  2964                           ; Clear objects allocated to COMMON
  2965     005D  01FD               	clrf	__pbssCOMMON& (0+127)
  2966                           
  2967                           ; Clear objects allocated to BANK0
  2968     005E  305E               	movlw	low __pbssBANK0
  2969     005F  0084               	movwf	4
  2970     0060  3000               	movlw	high __pbssBANK0
  2971     0061  0085               	movwf	5
  2972     0062  3011               	movlw	17
  2973     0063  318A  229A  3180   	fcall	clear_ram0
  2974                           
  2975                           ; Clear objects allocated to BANK1
  2976     0066  30A0               	movlw	low __pbssBANK1
  2977     0067  0084               	movwf	4
  2978     0068  3000               	movlw	high __pbssBANK1
  2979     0069  0085               	movwf	5
  2980     006A  301B               	movlw	27
  2981     006B  318A  229A  3180   	fcall	clear_ram0
  2982     006E                     end_of_initialization:	
  2983                           ;End of C runtime variable initialization code
  2984                           
  2985     006E                     __end_of__initialization:
  2986     006E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2987     006F  0020               	movlb	0
  2988     0070  3185  2D02         	ljmp	_main	;jump to C main() function
  2989                           
  2990                           	psect	bssCOMMON
  2991     007D                     __pbssCOMMON:
  2992     007D                     controleMovimento@cont:
  2993     007D                     	ds	1
  2994                           
  2995                           	psect	bssBANK0
  2996     005E                     __pbssBANK0:
  2997     005E                     TMR4_ISR@CountCallBack:
  2998     005E                     	ds	2
  2999     0060                     TMR0_ISR@CountCallBack:
  3000     0060                     	ds	2
  3001     0062                     _timer1ReloadVal:
  3002     0062                     	ds	2
  3003     0064                     _t2:
  3004     0064                     	ds	2
  3005     0066                     _t1:
  3006     0066                     	ds	2
  3007     0068                     _timer0ReloadVal:
  3008     0068                     	ds	1
  3009     0069                     _altura:
  3010     0069                     	ds	1
  3011     006A                     _andarAtual:
  3012     006A                     	ds	1
  3013     006B                     _flag:
  3014     006B                     	ds	1
  3015     006C                     _pulsoEncoder:
  3016     006C                     	ds	1
  3017     006D                     _RXaccepted:
  3018     006D                     	ds	1
  3019     006E                     _waitRX:
  3020     006E                     	ds	1
  3021                           
  3022                           	psect	bssBANK1
  3023     00A0                     __pbssBANK1:
  3024     00A0                     _MatrixLed:
  3025     00A0                     	ds	8
  3026     00A8                     _velocidadeMotor:
  3027     00A8                     	ds	4
  3028     00AC                     _ADC_InterruptHandler:
  3029     00AC                     	ds	2
  3030     00AE                     _temperatura:
  3031     00AE                     	ds	2
  3032     00B0                     _eusartRxLastError:
  3033     00B0                     	ds	1
  3034     00B1                     _destinoDesc:
  3035     00B1                     	ds	1
  3036     00B2                     _destinoSub:
  3037     00B2                     	ds	1
  3038     00B3                     _dTemp:
  3039     00B3                     	ds	1
  3040     00B4                     _oTemp:
  3041     00B4                     	ds	1
  3042     00B5                     _contComandos:
  3043     00B5                     	ds	1
  3044     00B6                     _rxValue:
  3045     00B6                     	ds	1
  3046     00B7                     _mov:
  3047     00B7                     	ds	1
  3048     00B8                     _state:
  3049     00B8                     	ds	1
  3050     00B9                     _destino:
  3051     00B9                     	ds	1
  3052     00BA                     _origem:
  3053     00BA                     	ds	1
  3054                           
  3055                           	psect	dataBANK1
  3056     00DE                     __pdataBANK1:
  3057     00DE                     _subindo:
  3058     00DE                     	ds	1
  3059                           
  3060                           	psect	clrtext
  3061     0A9A                     clear_ram0:	
  3062                           ;	Called with FSR0 containing the base address, and
  3063                           ;	WREG with the size to clear
  3064                           
  3065     0A9A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3066     0A9B                     clrloop0:
  3067     0A9B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3068     0A9C  3101               	addfsr 0,1
  3069     0A9D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3070     0A9E  2A9B               	goto	clrloop0	;have we reached the end yet?
  3071     0A9F  3400               	retlw	0	;all done for this memory range, return
  3072                           
  3073                           	psect	cstackBANK1
  3074     00BB                     __pcstackBANK1:
  3075     00BB                     ?_IOCBF0_SetInterruptHandler:
  3076     00BB                     ?_IOCBF3_SetInterruptHandler:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079     00BB                     ??_SPI1_Initialize:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082     00BB                     ??_OSCILLATOR_Initialize:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085     00BB                     ??_WDT_Initialize:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088     00BB                     ??_FVR_Initialize:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091     00BB                     ??_TMR2_Initialize:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094     00BB                     ??_ADC_Initialize:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097     00BB                     ??_TMR1_Initialize:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100     00BB                     ?_EUSART_SetFramingErrorHandler:	
  3101                           ; 1 bytes @ 0x0
  3102                           
  3103     00BB                     ?_EUSART_SetOverrunErrorHandler:	
  3104                           ; 1 bytes @ 0x0
  3105                           
  3106     00BB                     ?_EUSART_SetErrorHandler:	
  3107                           ; 1 bytes @ 0x0
  3108                           
  3109     00BB                     ?_TMR0_SetInterruptHandler:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112     00BB                     ?_CCP4_SetCallBack:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115     00BB                     ?_TMR4_SetInterruptHandler:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118     00BB                     ??_PWM3_Initialize:	
  3119                           ; 1 bytes @ 0x0
  3120                           
  3121     00BB                     ??_CMP2_Initialize:	
  3122                           ; 1 bytes @ 0x0
  3123                           
  3124     00BB                     ??_CMP1_Initialize:	
  3125                           ; 1 bytes @ 0x0
  3126                           
  3127     00BB                     ??_EUSART_is_rx_ready:	
  3128                           ; 1 bytes @ 0x0
  3129                           
  3130     00BB                     ??_EUSART_Read:	
  3131                           ; 1 bytes @ 0x0
  3132                           
  3133     00BB                     ??_SPI1_Open:	
  3134                           ; 1 bytes @ 0x0
  3135                           
  3136     00BB                     ?_SPI1_ExchangeBlock:	
  3137                           ; 1 bytes @ 0x0
  3138                           
  3139     00BB                     ??_TMR4_StartTimer:	
  3140                           ; 1 bytes @ 0x0
  3141                           
  3142     00BB                     ??_TMR4_WriteTimer:	
  3143                           ; 1 bytes @ 0x0
  3144                           
  3145     00BB                     ??_isValidFloor:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148     00BB                     TMR4_WriteTimer@timerVal:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151     00BB                     _isValidFloor$1566:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154     00BB                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3155                           ; 1 bytes @ 0x0
  3156                           
  3157     00BB                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3158                           ; 2 bytes @ 0x0
  3159                           
  3160     00BB                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3161                           ; 2 bytes @ 0x0
  3162                           
  3163     00BB                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3164                           ; 2 bytes @ 0x0
  3165                           
  3166     00BB                     EUSART_SetErrorHandler@interruptHandler:	
  3167                           ; 2 bytes @ 0x0
  3168                           
  3169     00BB                     SPI1_ExchangeBlock@blockSize:	
  3170                           ; 2 bytes @ 0x0
  3171                           
  3172     00BB                     TMR0_SetInterruptHandler@InterruptHandler:	
  3173                           ; 2 bytes @ 0x0
  3174                           
  3175     00BB                     CCP4_SetCallBack@customCallBack:	
  3176                           ; 2 bytes @ 0x0
  3177                           
  3178     00BB                     TMR4_SetInterruptHandler@InterruptHandler:	
  3179                           ; 2 bytes @ 0x0
  3180                           
  3181                           
  3182                           ; 2 bytes @ 0x0
  3183     00BB                     	ds	1
  3184     00BC                     ??_organizaTrajeto:
  3185     00BC                     isValidFloor@floor:	
  3186                           ; 1 bytes @ 0x1
  3187                           
  3188                           
  3189                           ; 1 bytes @ 0x1
  3190     00BC                     	ds	1
  3191     00BD                     ??_IOCBF0_SetInterruptHandler:
  3192     00BD                     ??_IOCBF3_SetInterruptHandler:	
  3193                           ; 1 bytes @ 0x2
  3194                           
  3195     00BD                     ??_TMR4_Initialize:	
  3196                           ; 1 bytes @ 0x2
  3197                           
  3198     00BD                     ??_TMR0_Initialize:	
  3199                           ; 1 bytes @ 0x2
  3200                           
  3201     00BD                     ??_CCP4_Initialize:	
  3202                           ; 1 bytes @ 0x2
  3203                           
  3204     00BD                     ??_EUSART_Initialize:	
  3205                           ; 1 bytes @ 0x2
  3206                           
  3207     00BD                     ??_EUSART_SetFramingErrorHandler:	
  3208                           ; 1 bytes @ 0x2
  3209                           
  3210     00BD                     ??_EUSART_SetOverrunErrorHandler:	
  3211                           ; 1 bytes @ 0x2
  3212                           
  3213     00BD                     ??_EUSART_SetErrorHandler:	
  3214                           ; 1 bytes @ 0x2
  3215                           
  3216     00BD                     ??_TMR0_SetInterruptHandler:	
  3217                           ; 1 bytes @ 0x2
  3218                           
  3219     00BD                     ??_CCP4_SetCallBack:	
  3220                           ; 1 bytes @ 0x2
  3221                           
  3222     00BD                     ??_TMR4_SetInterruptHandler:	
  3223                           ; 1 bytes @ 0x2
  3224                           
  3225     00BD                     ??_PIN_MANAGER_Initialize:	
  3226                           ; 1 bytes @ 0x2
  3227                           
  3228     00BD                     ??_SYSTEM_Initialize:	
  3229                           ; 1 bytes @ 0x2
  3230                           
  3231     00BD                     ??_SPI1_ExchangeBlock:	
  3232                           ; 1 bytes @ 0x2
  3233                           
  3234     00BD                     organizaTrajeto@mascaraOrigem:	
  3235                           ; 1 bytes @ 0x2
  3236                           
  3237                           
  3238                           ; 1 bytes @ 0x2
  3239     00BD                     	ds	1
  3240     00BE                     SPI1_Open@spi1UniqueConfiguration:
  3241     00BE                     SPI1_ExchangeBlock@block:	
  3242                           ; 1 bytes @ 0x3
  3243                           
  3244     00BE                     organizaTrajeto@mascaraDestino:	
  3245                           ; 1 bytes @ 0x3
  3246                           
  3247                           
  3248                           ; 1 bytes @ 0x3
  3249     00BE                     	ds	1
  3250     00BF                     SPI1_ExchangeBlock@data:
  3251                           
  3252                           ; 1 bytes @ 0x4
  3253     00BF                     	ds	1
  3254     00C0                     ?_txSpi:
  3255     00C0                     txSpi@dataSize:	
  3256                           ; 1 bytes @ 0x5
  3257                           
  3258                           
  3259                           ; 2 bytes @ 0x5
  3260     00C0                     	ds	2
  3261     00C2                     ??_txSpi:
  3262     00C2                     txSpi@data:	
  3263                           ; 1 bytes @ 0x7
  3264                           
  3265                           
  3266                           ; 1 bytes @ 0x7
  3267     00C2                     	ds	1
  3268     00C3                     ??_matrixUpdate:
  3269     00C3                     ??_initMatrix:	
  3270                           ; 1 bytes @ 0x8
  3271                           
  3272     00C3                     matrixUpdate@data:	
  3273                           ; 1 bytes @ 0x8
  3274                           
  3275                           
  3276                           ; 2 bytes @ 0x8
  3277     00C3                     	ds	1
  3278     00C4                     initMatrix@data:
  3279                           
  3280                           ; 4 bytes @ 0x9
  3281     00C4                     	ds	1
  3282     00C5                     matrixUpdate@i:
  3283                           
  3284                           ; 1 bytes @ 0xA
  3285     00C5                     	ds	1
  3286     00C6                     ??_chegadaS1:
  3287                           
  3288                           ; 1 bytes @ 0xB
  3289     00C6                     	ds	2
  3290     00C8                     initMatrix@k:
  3291                           
  3292                           ; 1 bytes @ 0xD
  3293     00C8                     	ds	1
  3294     00C9                     initMatrix@i:
  3295                           
  3296                           ; 1 bytes @ 0xE
  3297     00C9                     	ds	1
  3298     00CA                     initMatrix@i_1605:
  3299                           
  3300                           ; 1 bytes @ 0xF
  3301     00CA                     	ds	1
  3302     00CB                     initMatrix@j:
  3303                           
  3304                           ; 1 bytes @ 0x10
  3305     00CB                     	ds	1
  3306     00CC                     ??_main:
  3307                           
  3308                           ; 1 bytes @ 0x11
  3309     00CC                     	ds	2
  3310                           
  3311                           	psect	cstackCOMMON
  3312     0070                     __pcstackCOMMON:
  3313     0070                     ?_chegadaS4:
  3314     0070                     ?_chegadaS3:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317     0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320     0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323     0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326     0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329     0070                     ?_IOCBF0_ISR:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332     0070                     ?_IOCBF3_ISR:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335     0070                     ?_SPI1_Initialize:	
  3336                           ; 1 bytes @ 0x0
  3337                           
  3338     0070                     ?_OSCILLATOR_Initialize:	
  3339                           ; 1 bytes @ 0x0
  3340                           
  3341     0070                     ?_WDT_Initialize:	
  3342                           ; 1 bytes @ 0x0
  3343                           
  3344     0070                     ?_FVR_Initialize:	
  3345                           ; 1 bytes @ 0x0
  3346                           
  3347     0070                     ?_TMR4_Initialize:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350     0070                     ?_TMR2_Initialize:	
  3351                           ; 1 bytes @ 0x0
  3352                           
  3353     0070                     ?_TMR0_Initialize:	
  3354                           ; 1 bytes @ 0x0
  3355                           
  3356     0070                     ?_ADC_Initialize:	
  3357                           ; 1 bytes @ 0x0
  3358                           
  3359     0070                     ?_CCP4_Initialize:	
  3360                           ; 1 bytes @ 0x0
  3361                           
  3362     0070                     ?_TMR1_Initialize:	
  3363                           ; 1 bytes @ 0x0
  3364                           
  3365     0070                     ?_EUSART_Initialize:	
  3366                           ; 1 bytes @ 0x0
  3367                           
  3368     0070                     ?_TMR0_ISR:	
  3369                           ; 1 bytes @ 0x0
  3370                           
  3371     0070                     ?_CCP4_CaptureISR:	
  3372                           ; 1 bytes @ 0x0
  3373                           
  3374     0070                     ?_TMR4_ISR:	
  3375                           ; 1 bytes @ 0x0
  3376                           
  3377     0070                     ?_TMR0_DefaultInterruptHandler:	
  3378                           ; 1 bytes @ 0x0
  3379                           
  3380     0070                     ??_TMR0_DefaultInterruptHandler:	
  3381                           ; 1 bytes @ 0x0
  3382                           
  3383     0070                     ?_TMR0_CallBack:	
  3384                           ; 1 bytes @ 0x0
  3385                           
  3386     0070                     ?_TMR4_DefaultInterruptHandler:	
  3387                           ; 1 bytes @ 0x0
  3388                           
  3389     0070                     ??_TMR4_DefaultInterruptHandler:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392     0070                     ?_TMR4_CallBack:	
  3393                           ; 1 bytes @ 0x0
  3394                           
  3395     0070                     ?_memset:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398     0070                     ?_PWM3_Initialize:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401     0070                     ?_PWM3_LoadDutyValue:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404     0070                     ?_CMP2_Initialize:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407     0070                     ?_CMP2_ISR:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410     0070                     ?_CMP1_Initialize:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413     0070                     ?_CMP1_ISR:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416     0070                     ?_PIN_MANAGER_Initialize:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419     0070                     ?_PIN_MANAGER_IOC:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422     0070                     ?_SYSTEM_Initialize:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425     0070                     ?_EUSART_is_rx_ready:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428     0070                     ?_EUSART_Read:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431     0070                     ?_EUSART_Write:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434     0070                     ??_EUSART_Write:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437     0070                     ?_SPI1_Open:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440     0070                     ?_INTERRUPT_InterruptManager:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443     0070                     ?_CCP4_DefaultCallBack:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446     0070                     ?_TMR4_StartTimer:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449     0070                     ?_TMR4_StopTimer:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452     0070                     ??_TMR4_StopTimer:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455     0070                     ?_TMR4_WriteTimer:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458     0070                     ?_organizaTrajeto:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461     0070                     ?_isValidFloor:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464     0070                     ?_sendInfo:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467     0070                     ?_interrupcaoCCP4:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470     0070                     ?_matrixUpdate:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473     0070                     ?_initMatrix:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476     0070                     ?_controleMovimento:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479     0070                     ?_chegadaS1:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482     0070                     ?_chegadaS2:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485     0070                     ?_main:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488     0070                     ?i1_SPI1_ExchangeBlock:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491     0070                     ?i1_TMR4_StartTimer:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494     0070                     ??i1_TMR4_StartTimer:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497     0070                     ?i1_TMR4_WriteTimer:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500     0070                     ??i1_TMR4_WriteTimer:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503     0070                     ?i1_matrixUpdate:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506     0070                     ?i1_chegadaS1:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509     0070                     ?__Umul8_16:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512     0070                     ?_ADC_GetConversion:	
  3513                           ; 2 bytes @ 0x0
  3514                           
  3515     0070                     ?___aldiv:	
  3516                           ; 2 bytes @ 0x0
  3517                           
  3518     0070                     EUSART_Write@txData:	
  3519                           ; 4 bytes @ 0x0
  3520                           
  3521     0070                     __Umul8_16@multiplicand:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524     0070                     i1TMR4_WriteTimer@timerVal:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527     0070                     PWM3_LoadDutyValue@dutyValue:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530     0070                     CCP4_DefaultCallBack@capturedValue:	
  3531                           ; 2 bytes @ 0x0
  3532                           
  3533     0070                     memset@c:	
  3534                           ; 2 bytes @ 0x0
  3535                           
  3536     0070                     i1SPI1_ExchangeBlock@blockSize:	
  3537                           ; 2 bytes @ 0x0
  3538                           
  3539     0070                     ___aldiv@divisor:	
  3540                           ; 2 bytes @ 0x0
  3541                           
  3542                           
  3543                           ; 4 bytes @ 0x0
  3544     0070                     	ds	2
  3545     0072                     ??__Umul8_16:
  3546     0072                     ??_PWM3_LoadDutyValue:	
  3547                           ; 1 bytes @ 0x2
  3548                           
  3549     0072                     ??_ADC_GetConversion:	
  3550                           ; 1 bytes @ 0x2
  3551                           
  3552     0072                     ??_CCP4_DefaultCallBack:	
  3553                           ; 1 bytes @ 0x2
  3554                           
  3555     0072                     ??i1_SPI1_ExchangeBlock:	
  3556                           ; 1 bytes @ 0x2
  3557                           
  3558     0072                     memset@n:	
  3559                           ; 1 bytes @ 0x2
  3560                           
  3561                           
  3562                           ; 2 bytes @ 0x2
  3563     0072                     	ds	1
  3564     0073                     ADC_GetConversion@channel:
  3565     0073                     i1SPI1_ExchangeBlock@block:	
  3566                           ; 1 bytes @ 0x3
  3567                           
  3568                           
  3569                           ; 1 bytes @ 0x3
  3570     0073                     	ds	1
  3571     0074                     ??_memset:
  3572     0074                     ??_controleMovimento:	
  3573                           ; 1 bytes @ 0x4
  3574                           
  3575     0074                     ?___wmul:	
  3576                           ; 1 bytes @ 0x4
  3577                           
  3578     0074                     i1SPI1_ExchangeBlock@data:	
  3579                           ; 2 bytes @ 0x4
  3580                           
  3581     0074                     ___wmul@multiplier:	
  3582                           ; 1 bytes @ 0x4
  3583                           
  3584     0074                     __Umul8_16@product:	
  3585                           ; 2 bytes @ 0x4
  3586                           
  3587     0074                     ___aldiv@dividend:	
  3588                           ; 2 bytes @ 0x4
  3589                           
  3590                           
  3591                           ; 4 bytes @ 0x4
  3592     0074                     	ds	1
  3593     0075                     ?i1_txSpi:
  3594     0075                     i1txSpi@dataSize:	
  3595                           ; 1 bytes @ 0x5
  3596                           
  3597                           
  3598                           ; 2 bytes @ 0x5
  3599     0075                     	ds	1
  3600     0076                     ??_TMR4_ISR:
  3601     0076                     ??_TMR4_CallBack:	
  3602                           ; 1 bytes @ 0x6
  3603                           
  3604     0076                     ___wmul@multiplicand:	
  3605                           ; 1 bytes @ 0x6
  3606                           
  3607     0076                     __Umul8_16@word_mpld:	
  3608                           ; 2 bytes @ 0x6
  3609                           
  3610     0076                     memset@k:	
  3611                           ; 2 bytes @ 0x6
  3612                           
  3613                           
  3614                           ; 2 bytes @ 0x6
  3615     0076                     	ds	1
  3616     0077                     ??i1_txSpi:
  3617     0077                     i1txSpi@data:	
  3618                           ; 1 bytes @ 0x7
  3619                           
  3620                           
  3621                           ; 1 bytes @ 0x7
  3622     0077                     	ds	1
  3623     0078                     ??___wmul:
  3624     0078                     ??___aldiv:	
  3625                           ; 1 bytes @ 0x8
  3626                           
  3627     0078                     ??i1_matrixUpdate:	
  3628                           ; 1 bytes @ 0x8
  3629                           
  3630     0078                     __Umul8_16@multiplier:	
  3631                           ; 1 bytes @ 0x8
  3632                           
  3633     0078                     memset@dest:	
  3634                           ; 1 bytes @ 0x8
  3635                           
  3636     0078                     ___wmul@product:	
  3637                           ; 1 bytes @ 0x8
  3638                           
  3639     0078                     i1matrixUpdate@data:	
  3640                           ; 2 bytes @ 0x8
  3641                           
  3642                           
  3643                           ; 2 bytes @ 0x8
  3644     0078                     	ds	1
  3645     0079                     ??___xxtofl:
  3646     0079                     memset@s:	
  3647                           ; 1 bytes @ 0x9
  3648                           
  3649                           
  3650                           ; 1 bytes @ 0x9
  3651     0079                     	ds	1
  3652     007A                     ?_bin2bcd:
  3653     007A                     i1matrixUpdate@i:	
  3654                           ; 2 bytes @ 0xA
  3655                           
  3656     007A                     bin2bcd@binVal:	
  3657                           ; 1 bytes @ 0xA
  3658                           
  3659                           
  3660                           ; 2 bytes @ 0xA
  3661     007A                     	ds	1
  3662     007B                     ??_chegadaS4:
  3663     007B                     ??_chegadaS3:	
  3664                           ; 1 bytes @ 0xB
  3665                           
  3666     007B                     ??_IOCBF0_ISR:	
  3667                           ; 1 bytes @ 0xB
  3668                           
  3669     007B                     ??_IOCBF3_ISR:	
  3670                           ; 1 bytes @ 0xB
  3671                           
  3672     007B                     ??_CMP2_ISR:	
  3673                           ; 1 bytes @ 0xB
  3674                           
  3675     007B                     ??_CMP1_ISR:	
  3676                           ; 1 bytes @ 0xB
  3677                           
  3678     007B                     ??_PIN_MANAGER_IOC:	
  3679                           ; 1 bytes @ 0xB
  3680                           
  3681     007B                     ??_chegadaS2:	
  3682                           ; 1 bytes @ 0xB
  3683                           
  3684     007B                     ??i1_chegadaS1:	
  3685                           ; 1 bytes @ 0xB
  3686                           
  3687                           
  3688                           ; 1 bytes @ 0xB
  3689     007B                     	ds	2
  3690     007D                     ??_TMR0_ISR:
  3691     007D                     ??_CCP4_CaptureISR:	
  3692                           ; 1 bytes @ 0xD
  3693                           
  3694     007D                     ??_TMR0_CallBack:	
  3695                           ; 1 bytes @ 0xD
  3696                           
  3697     007D                     ??_INTERRUPT_InterruptManager:	
  3698                           ; 1 bytes @ 0xD
  3699                           
  3700                           
  3701                           	psect	cstackBANK0
  3702     0020                     __pcstackBANK0:	
  3703                           ; 1 bytes @ 0xD
  3704                           
  3705     0020                     ??_bin2bcd:
  3706     0020                     ___aldiv@counter:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709                           
  3710                           ; 1 bytes @ 0x0
  3711     0020                     	ds	1
  3712     0021                     ___aldiv@sign:
  3713                           
  3714                           ; 1 bytes @ 0x1
  3715     0021                     	ds	1
  3716     0022                     ___aldiv@quotient:
  3717                           
  3718                           ; 4 bytes @ 0x2
  3719     0022                     	ds	2
  3720     0024                     bin2bcd@i:
  3721                           
  3722                           ; 1 bytes @ 0x4
  3723     0024                     	ds	1
  3724     0025                     bin2bcd@dataU:
  3725                           
  3726                           ; 4 bytes @ 0x5
  3727     0025                     	ds	1
  3728     0026                     ?___xxtofl:
  3729     0026                     ___xxtofl@val:	
  3730                           ; 4 bytes @ 0x6
  3731                           
  3732                           
  3733                           ; 4 bytes @ 0x6
  3734     0026                     	ds	4
  3735     002A                     ___xxtofl@sign:
  3736                           
  3737                           ; 1 bytes @ 0xA
  3738     002A                     	ds	1
  3739     002B                     ___xxtofl@exp:
  3740                           
  3741                           ; 1 bytes @ 0xB
  3742     002B                     	ds	1
  3743     002C                     ___xxtofl@arg:
  3744                           
  3745                           ; 4 bytes @ 0xC
  3746     002C                     	ds	4
  3747     0030                     ?___flmul:
  3748     0030                     ___flmul@b:	
  3749                           ; 4 bytes @ 0x10
  3750                           
  3751                           
  3752                           ; 4 bytes @ 0x10
  3753     0030                     	ds	4
  3754     0034                     ___flmul@a:
  3755                           
  3756                           ; 4 bytes @ 0x14
  3757     0034                     	ds	4
  3758     0038                     ??___flmul:
  3759                           
  3760                           ; 1 bytes @ 0x18
  3761     0038                     	ds	5
  3762     003D                     ___flmul@sign:
  3763                           
  3764                           ; 1 bytes @ 0x1D
  3765     003D                     	ds	1
  3766     003E                     ___flmul@grs:
  3767                           
  3768                           ; 4 bytes @ 0x1E
  3769     003E                     	ds	4
  3770     0042                     ___flmul@aexp:
  3771                           
  3772                           ; 1 bytes @ 0x22
  3773     0042                     	ds	1
  3774     0043                     ___flmul@bexp:
  3775                           
  3776                           ; 1 bytes @ 0x23
  3777     0043                     	ds	1
  3778     0044                     ___flmul@prod:
  3779                           
  3780                           ; 4 bytes @ 0x24
  3781     0044                     	ds	4
  3782     0048                     ___flmul@temp:
  3783                           
  3784                           ; 2 bytes @ 0x28
  3785     0048                     	ds	2
  3786     004A                     ?___fltol:
  3787     004A                     ___fltol@f1:	
  3788                           ; 4 bytes @ 0x2A
  3789                           
  3790                           
  3791                           ; 4 bytes @ 0x2A
  3792     004A                     	ds	4
  3793     004E                     ??___fltol:
  3794                           
  3795                           ; 1 bytes @ 0x2E
  3796     004E                     	ds	4
  3797     0052                     ___fltol@sign1:
  3798                           
  3799                           ; 1 bytes @ 0x32
  3800     0052                     	ds	1
  3801     0053                     ___fltol@exp1:
  3802                           
  3803                           ; 1 bytes @ 0x33
  3804     0053                     	ds	1
  3805     0054                     ??_sendInfo:
  3806     0054                     ??_interrupcaoCCP4:	
  3807                           ; 1 bytes @ 0x34
  3808                           
  3809                           
  3810                           ; 1 bytes @ 0x34
  3811     0054                     	ds	2
  3812     0056                     sendInfo@velocidade:
  3813                           
  3814                           ; 2 bytes @ 0x36
  3815     0056                     	ds	2
  3816     0058                     sendInfo@bcd:
  3817     0058                     _interrupcaoCCP4$2465:	
  3818                           ; 2 bytes @ 0x38
  3819                           
  3820                           
  3821                           ; 4 bytes @ 0x38
  3822     0058                     	ds	4
  3823     005C                     CCP4_CaptureISR@module:
  3824                           
  3825                           ; 2 bytes @ 0x3C
  3826     005C                     	ds	2
  3827                           
  3828                           	psect	maintext
  3829     0502                     __pmaintext:	
  3830 ;;
  3831 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3832 ;;
  3833 ;; *************** function _main *****************
  3834 ;; Defined at:
  3835 ;;		line 391 in file "main.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : B1F/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3849 ;;      Params:         0       0       0       0       0       0
  3850 ;;      Locals:         0       0       0       0       0       0
  3851 ;;      Temps:          0       0       2       0       0       0
  3852 ;;      Totals:         0       0       2       0       0       0
  3853 ;;Total ram usage:        2 bytes
  3854 ;; Hardware stack levels required when called: 11
  3855 ;; This function calls:
  3856 ;;		_CCP4_SetCallBack
  3857 ;;		_EUSART_Read
  3858 ;;		_EUSART_is_rx_ready
  3859 ;;		_IOCBF0_SetInterruptHandler
  3860 ;;		_IOCBF3_SetInterruptHandler
  3861 ;;		_SPI1_Open
  3862 ;;		_SYSTEM_Initialize
  3863 ;;		_TMR0_SetInterruptHandler
  3864 ;;		_TMR4_SetInterruptHandler
  3865 ;;		_chegadaS1
  3866 ;;		_initMatrix
  3867 ;;		_isValidFloor
  3868 ;;		_organizaTrajeto
  3869 ;; This function is called by:
  3870 ;;		Startup code after reset
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874     0502                     _main:	
  3875                           ;psect for function _main
  3876                           
  3877     0502                     l4063:	
  3878                           ;incstack = 0
  3879                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3880                           
  3881                           
  3882                           ;main.c: 394:     SYSTEM_Initialize();
  3883     0502  318D  2521  3185   	fcall	_SYSTEM_Initialize
  3884                           
  3885                           ;main.c: 403:     IOCBF0_SetInterruptHandler(chegadaS1);
  3886     0505  30C4               	movlw	low _chegadaS1
  3887     0506  0021               	movlb	1	; select bank1
  3888     0507  00BB               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  3889     0508  3007               	movlw	high _chegadaS1
  3890     0509  00BC               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3891     050A  318A  227C  3185   	fcall	_IOCBF0_SetInterruptHandler
  3892                           
  3893                           ;main.c: 404:     IOCBF3_SetInterruptHandler(chegadaS2);
  3894     050D  3099               	movlw	low _chegadaS2
  3895     050E  0021               	movlb	1	; select bank1
  3896     050F  00BB               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3897     0510  300E               	movlw	high _chegadaS2
  3898     0511  00BC               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3899     0512  318A  2282  3185   	fcall	_IOCBF3_SetInterruptHandler
  3900                           
  3901                           ;main.c: 405:     TMR4_SetInterruptHandler(controleMovimento);
  3902     0515  3045               	movlw	low _controleMovimento
  3903     0516  0021               	movlb	1	; select bank1
  3904     0517  00BB               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  3905     0518  300E               	movlw	high _controleMovimento
  3906     0519  00BC               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3907     051A  318A  228E  3185   	fcall	_TMR4_SetInterruptHandler
  3908                           
  3909                           ;main.c: 406:     TMR0_SetInterruptHandler(sendInfo);
  3910     051D  30AD               	movlw	low _sendInfo
  3911     051E  0021               	movlb	1	; select bank1
  3912     051F  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3913     0520  3002               	movlw	high _sendInfo
  3914     0521  00BC               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3915     0522  318A  2288  3185   	fcall	_TMR0_SetInterruptHandler
  3916                           
  3917                           ;main.c: 407:     CCP4_SetCallBack(interrupcaoCCP4);
  3918     0525  30A3               	movlw	low _interrupcaoCCP4
  3919     0526  0021               	movlb	1	; select bank1
  3920     0527  00BB               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  3921     0528  3003               	movlw	high _interrupcaoCCP4
  3922     0529  00BC               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  3923     052A  318A  2264  3185   	fcall	_CCP4_SetCallBack
  3924     052D                     l4065:
  3925     052D  0022               	movlb	2	; select bank2
  3926     052E  148D               	bsf	13,1	;volatile
  3927     052F                     l4067:
  3928                           
  3929                           ;main.c: 411:     SPI1_Open(SPI1_DEFAULT);
  3930     052F  3000               	movlw	0
  3931     0530  318E  26F0  3185   	fcall	_SPI1_Open
  3932     0533                     l4069:
  3933                           
  3934                           ;main.c: 412:     initMatrix();
  3935     0533  318D  25F6  3185   	fcall	_initMatrix
  3936     0536                     l4071:
  3937                           
  3938                           ;main.c: 415:     (INTCONbits.GIE = 1);
  3939     0536  178B               	bsf	11,7	;volatile
  3940     0537                     l4073:
  3941                           
  3942                           ;main.c: 418:     (INTCONbits.PEIE = 1);
  3943     0537  170B               	bsf	11,6	;volatile
  3944                           
  3945                           ;main.c: 425:     chegadaS1();
  3946     0538  3187  27C4  3185   	fcall	_chegadaS1
  3947     053B                     l4075:
  3948                           
  3949                           ;main.c: 427:     {;main.c: 429:         if(EUSART_is_rx_ready()){
  3950     053B  318A  2253  3185   	fcall	_EUSART_is_rx_ready
  3951     053E  3A00               	xorlw	0
  3952     053F  1903               	skipnz
  3953     0540  2D42               	goto	u3161
  3954     0541  2D43               	goto	u3160
  3955     0542                     u3161:
  3956     0542  2D3B               	goto	l4075
  3957     0543                     u3160:
  3958     0543                     l4077:
  3959                           
  3960                           ;main.c: 430:             rxValue = EUSART_Read();
  3961     0543  318B  2341  3185   	fcall	_EUSART_Read
  3962     0546  0021               	movlb	1	; select bank1
  3963     0547  00B6               	movwf	_rxValue^(0+128)
  3964                           
  3965                           ;main.c: 431:             switch(state){
  3966     0548  2D88               	goto	l4111
  3967     0549                     l4079:
  3968                           
  3969                           ;main.c: 433:                     if(rxValue == '$'){
  3970     0549  3024               	movlw	36
  3971     054A  0636               	xorwf	_rxValue^(0+128),w
  3972     054B  1D03               	btfss	3,2
  3973     054C  2D4E               	goto	u3171
  3974     054D  2D4F               	goto	u3170
  3975     054E                     u3171:
  3976     054E  2D9E               	goto	l908
  3977     054F                     u3170:
  3978     054F                     l4081:
  3979                           
  3980                           ;main.c: 434:                         state = FIRST_NUM;
  3981     054F  01B8               	clrf	_state^(0+128)
  3982     0550  0AB8               	incf	_state^(0+128),f
  3983     0551  2D3B               	goto	l4075
  3984     0552                     l4083:
  3985                           
  3986                           ;main.c: 438:                     if(isValidFloor(rxValue)){
  3987     0552  0836               	movf	_rxValue^(0+128),w
  3988     0553  318B  2397  3185   	fcall	_isValidFloor
  3989     0556  3A00               	xorlw	0
  3990     0557  1903               	skipnz
  3991     0558  2D5A               	goto	u3181
  3992     0559  2D5B               	goto	u3180
  3993     055A                     u3181:
  3994     055A  2D62               	goto	l4089
  3995     055B                     u3180:
  3996     055B                     l4085:
  3997                           
  3998                           ;main.c: 439:                         oTemp = rxValue - 0x30;
  3999     055B  0021               	movlb	1	; select bank1
  4000     055C  0836               	movf	_rxValue^(0+128),w
  4001     055D  3ED0               	addlw	208
  4002     055E  00B4               	movwf	_oTemp^(0+128)
  4003     055F                     l4087:
  4004                           
  4005                           ;main.c: 440:                         state = SECOND_NUM;
  4006     055F  3002               	movlw	2
  4007     0560  00B8               	movwf	_state^(0+128)
  4008                           
  4009                           ;main.c: 441:                     }else{
  4010     0561  2D3B               	goto	l4075
  4011     0562                     l4089:
  4012                           
  4013                           ;main.c: 442:                         state = START;
  4014     0562  0021               	movlb	1	; select bank1
  4015     0563  01B8               	clrf	_state^(0+128)
  4016     0564  2D3B               	goto	l4075
  4017     0565                     l4091:
  4018                           
  4019                           ;main.c: 446:                     if(isValidFloor(rxValue)){
  4020     0565  0836               	movf	_rxValue^(0+128),w
  4021     0566  318B  2397  3185   	fcall	_isValidFloor
  4022     0569  3A00               	xorlw	0
  4023     056A  1903               	skipnz
  4024     056B  2D6D               	goto	u3191
  4025     056C  2D6E               	goto	u3190
  4026     056D                     u3191:
  4027     056D  2D62               	goto	l4089
  4028     056E                     u3190:
  4029     056E                     l4093:
  4030                           
  4031                           ;main.c: 447:                         dTemp = rxValue - 0x30;
  4032     056E  0021               	movlb	1	; select bank1
  4033     056F  0836               	movf	_rxValue^(0+128),w
  4034     0570  3ED0               	addlw	208
  4035     0571  00B3               	movwf	_dTemp^(0+128)
  4036     0572                     l4095:
  4037                           
  4038                           ;main.c: 448:                         state = CR;
  4039     0572  3003               	movlw	3
  4040     0573  00B8               	movwf	_state^(0+128)
  4041                           
  4042                           ;main.c: 449:                     }else{
  4043     0574  2D3B               	goto	l4075
  4044     0575                     l4099:
  4045                           
  4046                           ;main.c: 454:                     if(rxValue == 0x0D){
  4047     0575  300D               	movlw	13
  4048     0576  0636               	xorwf	_rxValue^(0+128),w
  4049     0577  1D03               	btfss	3,2
  4050     0578  2D7A               	goto	u3201
  4051     0579  2D7B               	goto	u3200
  4052     057A                     u3201:
  4053     057A  2D62               	goto	l4089
  4054     057B                     u3200:
  4055     057B                     l4101:
  4056                           
  4057                           ;main.c: 455:                         origem = oTemp;
  4058     057B  0834               	movf	_oTemp^(0+128),w
  4059     057C  00BA               	movwf	_origem^(0+128)
  4060                           
  4061                           ;main.c: 456:                         destino = dTemp;
  4062     057D  0833               	movf	_dTemp^(0+128),w
  4063     057E  00B9               	movwf	_destino^(0+128)
  4064     057F                     l4103:
  4065                           
  4066                           ;main.c: 458:                         organizaTrajeto();
  4067     057F  318D  25B3  3185   	fcall	_organizaTrajeto
  4068     0582                     l4105:
  4069                           
  4070                           ;main.c: 459:                         contComandos++;
  4071     0582  3001               	movlw	1
  4072     0583  0021               	movlb	1	; select bank1
  4073     0584  00CC               	movwf	??_main^(0+128)
  4074     0585  084C               	movf	??_main^(0+128),w
  4075     0586  07B5               	addwf	_contComandos^(0+128),f
  4076     0587  2D62               	goto	l4089
  4077     0588                     l4111:
  4078     0588  0838               	movf	_state^(0+128),w
  4079     0589  00CC               	movwf	??_main^(0+128)
  4080     058A  01CD               	clrf	(??_main^(0+128)+1)
  4081                           
  4082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4083                           ; Switch size 1, requested type "simple"
  4084                           ; Number of cases is 1, Range of values is 0 to 0
  4085                           ; switch strategies available:
  4086                           ; Name         Instructions Cycles
  4087                           ; simple_byte            4     3 (average)
  4088                           ; direct_byte            8     6 (fixed)
  4089                           ; jumptable            260     6 (fixed)
  4090                           ;	Chosen strategy is simple_byte
  4091     058B  084D               	movf	(??_main+1)^(0+128),w
  4092     058C  3A00               	xorlw	0	; case 0
  4093     058D  1903               	skipnz
  4094     058E  2D90               	goto	l4179
  4095     058F  2D62               	goto	l4089
  4096     0590                     l4179:
  4097                           
  4098                           ; Switch size 1, requested type "simple"
  4099                           ; Number of cases is 4, Range of values is 0 to 3
  4100                           ; switch strategies available:
  4101                           ; Name         Instructions Cycles
  4102                           ; simple_byte           13     7 (average)
  4103                           ; direct_byte           14     6 (fixed)
  4104                           ; jumptable            260     6 (fixed)
  4105                           ;	Chosen strategy is simple_byte
  4106     0590  084C               	movf	??_main^(0+128),w
  4107     0591  3A00               	xorlw	0	; case 0
  4108     0592  1903               	skipnz
  4109     0593  2D49               	goto	l4079
  4110     0594  3A01               	xorlw	1	; case 1
  4111     0595  1903               	skipnz
  4112     0596  2D52               	goto	l4083
  4113     0597  3A03               	xorlw	3	; case 2
  4114     0598  1903               	skipnz
  4115     0599  2D65               	goto	l4091
  4116     059A  3A01               	xorlw	1	; case 3
  4117     059B  1903               	skipnz
  4118     059C  2D75               	goto	l4099
  4119     059D  2D62               	goto	l4089
  4120     059E                     l908:	
  4121                           ;main.c: 466:         }
  4122                           
  4123     059E  2D3B               	goto	l4075
  4124     059F  3180  2856         	ljmp	start
  4125     05A1                     __end_of_main:
  4126                           
  4127                           	psect	text1
  4128     0DB3                     __ptext1:	
  4129 ;; *************** function _organizaTrajeto *****************
  4130 ;; Defined at:
  4131 ;;		line 52 in file "main.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  mascaraDesti    1    3[BANK1 ] unsigned char 
  4136 ;;  mascaraOrige    1    2[BANK1 ] unsigned char 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0, pclath, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4146 ;;      Params:         0       0       0       0       0       0
  4147 ;;      Locals:         0       0       2       0       0       0
  4148 ;;      Temps:          0       0       1       0       0       0
  4149 ;;      Totals:         0       0       3       0       0       0
  4150 ;;Total ram usage:        3 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; Hardware stack levels required when called: 8
  4153 ;; This function calls:
  4154 ;;		_TMR4_WriteTimer
  4155 ;; This function is called by:
  4156 ;;		_main
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160     0DB3                     _organizaTrajeto:	
  4161                           ;psect for function _organizaTrajeto
  4162                           
  4163     0DB3                     l3923:	
  4164                           ;incstack = 0
  4165                           ; Regs used in _organizaTrajeto: [wreg+status,2+status,0+pclath+cstack]
  4166                           
  4167                           
  4168                           ;main.c: 53:     uint8_t mascaraOrigem = 1<<origem;
  4169     0DB3  3001               	movlw	1
  4170     0DB4  0021               	movlb	1	; select bank1
  4171     0DB5  00BC               	movwf	??_organizaTrajeto^(0+128)
  4172     0DB6  0A3A               	incf	_origem^(0+128),w
  4173     0DB7  2DB9               	goto	u2914
  4174     0DB8                     u2915:
  4175     0DB8  35BC               	lslf	??_organizaTrajeto^(0+128),f
  4176     0DB9                     u2914:
  4177     0DB9  0B89               	decfsz	9,f
  4178     0DBA  2DB8               	goto	u2915
  4179     0DBB  083C               	movf	??_organizaTrajeto^(0+128),w
  4180     0DBC  00BD               	movwf	organizaTrajeto@mascaraOrigem^(0+128)
  4181                           
  4182                           ;main.c: 54:     uint8_t mascaraDestino = 1<<destino;
  4183     0DBD  3001               	movlw	1
  4184     0DBE  00BC               	movwf	??_organizaTrajeto^(0+128)
  4185     0DBF  0A39               	incf	_destino^(0+128),w
  4186     0DC0  2DC2               	goto	u2924
  4187     0DC1                     u2925:
  4188     0DC1  35BC               	lslf	??_organizaTrajeto^(0+128),f
  4189     0DC2                     u2924:
  4190     0DC2  0B89               	decfsz	9,f
  4191     0DC3  2DC1               	goto	u2925
  4192     0DC4  083C               	movf	??_organizaTrajeto^(0+128),w
  4193     0DC5  00BE               	movwf	organizaTrajeto@mascaraDestino^(0+128)
  4194                           
  4195                           ;main.c: 56:     if(origem == 0){
  4196     0DC6  083A               	movf	_origem^(0+128),w
  4197     0DC7  1D03               	btfss	3,2
  4198     0DC8  2DCA               	goto	u2931
  4199     0DC9  2DCB               	goto	u2930
  4200     0DCA                     u2931:
  4201     0DCA  2DCF               	goto	l3927
  4202     0DCB                     u2930:
  4203     0DCB                     l3925:
  4204                           
  4205                           ;main.c: 57:         destinoSub = destinoSub | mascaraDestino;
  4206     0DCB  0832               	movf	_destinoSub^(0+128),w
  4207     0DCC  043E               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4208     0DCD  00B2               	movwf	_destinoSub^(0+128)
  4209                           
  4210                           ;main.c: 58:     }else if (origem < destino)
  4211     0DCE  2DE6               	goto	l795
  4212     0DCF                     l3927:
  4213     0DCF  0839               	movf	_destino^(0+128),w
  4214     0DD0  023A               	subwf	_origem^(0+128),w
  4215     0DD1  1803               	skipnc
  4216     0DD2  2DD4               	goto	u2941
  4217     0DD3  2DD5               	goto	u2940
  4218     0DD4                     u2941:
  4219     0DD4  2DDA               	goto	l3931
  4220     0DD5                     u2940:
  4221     0DD5                     l3929:
  4222                           
  4223                           ;main.c: 59:     {;main.c: 60:         destinoSub =destinoSub | mascaraOrigem | mascaraD
      +                          estino;
  4224     0DD5  0832               	movf	_destinoSub^(0+128),w
  4225     0DD6  043D               	iorwf	organizaTrajeto@mascaraOrigem^(0+128),w
  4226     0DD7  043E               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4227     0DD8  00B2               	movwf	_destinoSub^(0+128)
  4228                           
  4229                           ;main.c: 61:     }else if(origem > destino){
  4230     0DD9  2DE6               	goto	l795
  4231     0DDA                     l3931:
  4232     0DDA  083A               	movf	_origem^(0+128),w
  4233     0DDB  0239               	subwf	_destino^(0+128),w
  4234     0DDC  1803               	skipnc
  4235     0DDD  2DDF               	goto	u2951
  4236     0DDE  2DE0               	goto	u2950
  4237     0DDF                     u2951:
  4238     0DDF  2DE6               	goto	l795
  4239     0DE0                     u2950:
  4240     0DE0                     l3933:
  4241                           
  4242                           ;main.c: 64:         destinoSub = destinoSub| mascaraOrigem;
  4243     0DE0  0832               	movf	_destinoSub^(0+128),w
  4244     0DE1  043D               	iorwf	organizaTrajeto@mascaraOrigem^(0+128),w
  4245     0DE2  00B2               	movwf	_destinoSub^(0+128)
  4246                           
  4247                           ;main.c: 65:         destinoDesc = destinoDesc| mascaraDestino;
  4248     0DE3  0831               	movf	_destinoDesc^(0+128),w
  4249     0DE4  043E               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4250     0DE5  00B1               	movwf	_destinoDesc^(0+128)
  4251     0DE6                     l795:
  4252                           
  4253                           ;main.c: 68:     if (mov == RetornaS0)
  4254     0DE6  3003               	movlw	3
  4255     0DE7  0637               	xorwf	_mov^(0+128),w
  4256     0DE8  1D03               	btfss	3,2
  4257     0DE9  2DEB               	goto	u2961
  4258     0DEA  2DEC               	goto	u2960
  4259     0DEB                     u2961:
  4260     0DEB  2DF3               	goto	l3939
  4261     0DEC                     u2960:
  4262     0DEC                     l3935:
  4263                           
  4264                           ;main.c: 69:     {;main.c: 70:         mov = EmTrajeto;
  4265     0DEC  3002               	movlw	2
  4266     0DED  00B7               	movwf	_mov^(0+128)
  4267     0DEE                     l3937:
  4268                           
  4269                           ;main.c: 72:         TMR4_WriteTimer(0);
  4270     0DEE  3000               	movlw	0
  4271     0DEF  318A  2294  318D   	fcall	_TMR4_WriteTimer
  4272                           
  4273                           ;main.c: 74:     }else{
  4274     0DF2  2DF5               	goto	l801
  4275     0DF3                     l3939:
  4276                           
  4277                           ;main.c: 75:         mov = EmTrajeto;
  4278     0DF3  3002               	movlw	2
  4279     0DF4  00B7               	movwf	_mov^(0+128)
  4280     0DF5                     l801:
  4281     0DF5  0008               	return
  4282     0DF6                     __end_of_organizaTrajeto:
  4283                           
  4284                           	psect	text2
  4285     0A94                     __ptext2:	
  4286 ;; *************** function _TMR4_WriteTimer *****************
  4287 ;; Defined at:
  4288 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  timerVal        1    wreg     unsigned char 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  timerVal        1    0[BANK1 ] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4302 ;;      Params:         0       0       0       0       0       0
  4303 ;;      Locals:         0       0       1       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0
  4305 ;;      Totals:         0       0       1       0       0       0
  4306 ;;Total ram usage:        1 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 7
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_organizaTrajeto
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316     0A94                     _TMR4_WriteTimer:	
  4317                           ;psect for function _TMR4_WriteTimer
  4318                           
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _TMR4_WriteTimer: [wreg]
  4322                           ;TMR4_WriteTimer@timerVal stored from wreg
  4323     0A94  0021               	movlb	1	; select bank1
  4324     0A95  00BB               	movwf	TMR4_WriteTimer@timerVal^(0+128)
  4325     0A96                     l3773:
  4326                           
  4327                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  4328     0A96  083B               	movf	TMR4_WriteTimer@timerVal^(0+128),w
  4329     0A97  0028               	movlb	8	; select bank8
  4330     0A98  0095               	movwf	21	;volatile
  4331     0A99                     l682:
  4332     0A99  0008               	return
  4333     0A9A                     __end_of_TMR4_WriteTimer:
  4334                           
  4335                           	psect	text3
  4336     0B97                     __ptext3:	
  4337 ;; *************** function _isValidFloor *****************
  4338 ;; Defined at:
  4339 ;;		line 85 in file "main.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  floor           1    wreg     unsigned char 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  floor           1    1[BANK1 ] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      _Bool 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4353 ;;      Params:         0       0       0       0       0       0
  4354 ;;      Locals:         0       0       2       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0
  4356 ;;      Totals:         0       0       2       0       0       0
  4357 ;;Total ram usage:        2 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 7
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_main
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367     0B97                     _isValidFloor:	
  4368                           ;psect for function _isValidFloor
  4369                           
  4370                           
  4371                           ;incstack = 0
  4372                           ; Regs used in _isValidFloor: [wreg+status,2]
  4373                           ;isValidFloor@floor stored from wreg
  4374     0B97  0021               	movlb	1	; select bank1
  4375     0B98  00BC               	movwf	isValidFloor@floor^(0+128)
  4376     0B99                     l3941:
  4377                           
  4378                           ;main.c: 86:     return floor >= '0' && floor <= '3';
  4379     0B99  01BB               	clrf	_isValidFloor$1566^(0+128)
  4380     0B9A                     l3943:
  4381     0B9A  3030               	movlw	48
  4382     0B9B  023C               	subwf	isValidFloor@floor^(0+128),w
  4383     0B9C  1C03               	skipc
  4384     0B9D  2B9F               	goto	u2971
  4385     0B9E  2BA0               	goto	u2970
  4386     0B9F                     u2971:
  4387     0B9F  2BA8               	goto	l3949
  4388     0BA0                     u2970:
  4389     0BA0                     l3945:
  4390     0BA0  3034               	movlw	52
  4391     0BA1  023C               	subwf	isValidFloor@floor^(0+128),w
  4392     0BA2  1803               	skipnc
  4393     0BA3  2BA5               	goto	u2981
  4394     0BA4  2BA6               	goto	u2980
  4395     0BA5                     u2981:
  4396     0BA5  2BA8               	goto	l3949
  4397     0BA6                     u2980:
  4398     0BA6                     l3947:
  4399     0BA6  01BB               	clrf	_isValidFloor$1566^(0+128)
  4400     0BA7  0ABB               	incf	_isValidFloor$1566^(0+128),f
  4401     0BA8                     l3949:
  4402     0BA8  083B               	movf	_isValidFloor$1566^(0+128),w
  4403     0BA9                     l806:
  4404     0BA9  0008               	return
  4405     0BAA                     __end_of_isValidFloor:
  4406                           
  4407                           	psect	text4
  4408     0DF6                     __ptext4:	
  4409 ;; *************** function _initMatrix *****************
  4410 ;; Defined at:
  4411 ;;		line 183 in file "main.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  j               1   16[BANK1 ] unsigned char 
  4416 ;;  i               1   15[BANK1 ] unsigned char 
  4417 ;;  i               1   14[BANK1 ] unsigned char 
  4418 ;;  data            4    9[BANK1 ] unsigned char [4]
  4419 ;;  k               1   13[BANK1 ] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4429 ;;      Params:         0       0       0       0       0       0
  4430 ;;      Locals:         0       0       8       0       0       0
  4431 ;;      Temps:          0       0       1       0       0       0
  4432 ;;      Totals:         0       0       9       0       0       0
  4433 ;;Total ram usage:        9 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 9
  4436 ;; This function calls:
  4437 ;;		_txSpi
  4438 ;; This function is called by:
  4439 ;;		_main
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443     0DF6                     _initMatrix:	
  4444                           ;psect for function _initMatrix
  4445                           
  4446     0DF6                     l3953:	
  4447                           ;incstack = 0
  4448                           ; Regs used in _initMatrix: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4449                           
  4450                           
  4451                           ;main.c: 184:     uint8_t data[4];;main.c: 185:     uint8_t k=0;
  4452     0DF6  0021               	movlb	1	; select bank1
  4453     0DF7  01C8               	clrf	initMatrix@k^(0+128)
  4454                           
  4455                           ;main.c: 186:    for(uint8_t i =0; i<8; i++){
  4456     0DF8  01C9               	clrf	initMatrix@i^(0+128)
  4457     0DF9                     l3959:
  4458                           
  4459                           ;main.c: 187:             MatrixLed[i] = 0;
  4460     0DF9  0849               	movf	initMatrix@i^(0+128),w
  4461     0DFA  3EA0               	addlw	(low (_MatrixLed| 0))& (0+255)
  4462     0DFB  0086               	movwf	6
  4463     0DFC  0187               	clrf	7
  4464     0DFD  0181               	clrf	1
  4465     0DFE                     l3961:
  4466                           
  4467                           ;main.c: 188:         }
  4468     0DFE  3001               	movlw	1
  4469     0DFF  00C3               	movwf	??_initMatrix^(0+128)
  4470     0E00  0843               	movf	??_initMatrix^(0+128),w
  4471     0E01  07C9               	addwf	initMatrix@i^(0+128),f
  4472     0E02                     l3963:
  4473     0E02  3008               	movlw	8
  4474     0E03  0249               	subwf	initMatrix@i^(0+128),w
  4475     0E04  1C03               	skipc
  4476     0E05  2E07               	goto	u2991
  4477     0E06  2E08               	goto	u2990
  4478     0E07                     u2991:
  4479     0E07  2DF9               	goto	l3959
  4480     0E08                     u2990:
  4481     0E08                     l3965:
  4482                           
  4483                           ;main.c: 189:     for(uint8_t i=0;i<6;i++){
  4484     0E08  01CA               	clrf	initMatrix@i_1605^(0+128)
  4485     0E09                     l3971:
  4486                           
  4487                           ;main.c: 190:         for(uint8_t j=0;j<4;j=j+2){
  4488     0E09  01CB               	clrf	initMatrix@j^(0+128)
  4489     0E0A                     l3977:
  4490                           
  4491                           ;main.c: 191:             data[j]= matrix_conf[k];
  4492     0E0A  084B               	movf	initMatrix@j^(0+128),w
  4493     0E0B  3EC4               	addlw	(low (initMatrix@data| 0))& (0+255)
  4494     0E0C  0086               	movwf	6
  4495     0E0D  0187               	clrf	7
  4496     0E0E  0848               	movf	initMatrix@k^(0+128),w
  4497     0E0F  3EFB               	addlw	low (_matrix_conf| (0+32768))
  4498     0E10  0084               	movwf	4
  4499     0E11  3087               	movlw	high (_matrix_conf| (0+32768))
  4500     0E12  1803               	skipnc
  4501     0E13  3E01               	addlw	1
  4502     0E14  0085               	movwf	5
  4503     0E15  0800               	movf	0,w	;code access
  4504     0E16  0081               	movwf	1
  4505                           
  4506                           ;main.c: 192:             data[j+1]= matrix_conf[k+1];
  4507     0E17  084B               	movf	initMatrix@j^(0+128),w
  4508     0E18  3E01               	addlw	1
  4509     0E19  3EC4               	addlw	(low (initMatrix@data| 0))& (0+255)
  4510     0E1A  0086               	movwf	6
  4511     0E1B  0187               	clrf	7
  4512     0E1C  0848               	movf	initMatrix@k^(0+128),w
  4513     0E1D  3EFC               	addlw	low ((_matrix_conf+1)| (0+32768))
  4514     0E1E  0084               	movwf	4
  4515     0E1F  3087               	movlw	high ((_matrix_conf+1)| (0+32768))
  4516     0E20  1803               	skipnc
  4517     0E21  3E01               	addlw	1
  4518     0E22  0085               	movwf	5
  4519     0E23  0800               	movf	0,w	;code access
  4520     0E24  0081               	movwf	1
  4521     0E25                     l3979:
  4522                           
  4523                           ;main.c: 193:         }
  4524     0E25  084B               	movf	initMatrix@j^(0+128),w
  4525     0E26  3E02               	addlw	2
  4526     0E27  00CB               	movwf	initMatrix@j^(0+128)
  4527     0E28                     l3981:
  4528     0E28  3004               	movlw	4
  4529     0E29  024B               	subwf	initMatrix@j^(0+128),w
  4530     0E2A  1C03               	skipc
  4531     0E2B  2E2D               	goto	u3001
  4532     0E2C  2E2E               	goto	u3000
  4533     0E2D                     u3001:
  4534     0E2D  2E0A               	goto	l3977
  4535     0E2E                     u3000:
  4536     0E2E                     l3983:
  4537                           
  4538                           ;main.c: 194:         k=k+2;
  4539     0E2E  0848               	movf	initMatrix@k^(0+128),w
  4540     0E2F  3E02               	addlw	2
  4541     0E30  00C8               	movwf	initMatrix@k^(0+128)
  4542     0E31                     l3985:
  4543                           
  4544                           ;main.c: 195:         txSpi( data, 4);
  4545     0E31  3004               	movlw	4
  4546     0E32  00C0               	movwf	txSpi@dataSize^(0+128)
  4547     0E33  3000               	movlw	0
  4548     0E34  00C1               	movwf	(txSpi@dataSize^(0+128)+1)
  4549     0E35  30C4               	movlw	(low (initMatrix@data| 0))& (0+255)
  4550     0E36  318B  2351  318D   	fcall	_txSpi
  4551     0E39                     l3989:
  4552                           
  4553                           ;main.c: 199:     }
  4554     0E39  3001               	movlw	1
  4555     0E3A  0021               	movlb	1	; select bank1
  4556     0E3B  00C3               	movwf	??_initMatrix^(0+128)
  4557     0E3C  0843               	movf	??_initMatrix^(0+128),w
  4558     0E3D  07CA               	addwf	initMatrix@i_1605^(0+128),f
  4559     0E3E                     l3991:
  4560     0E3E  3006               	movlw	6
  4561     0E3F  024A               	subwf	initMatrix@i_1605^(0+128),w
  4562     0E40  1C03               	skipc
  4563     0E41  2E43               	goto	u3011
  4564     0E42  2E44               	goto	u3010
  4565     0E43                     u3011:
  4566     0E43  2E09               	goto	l3971
  4567     0E44                     u3010:
  4568     0E44                     l843:
  4569     0E44  0008               	return
  4570     0E45                     __end_of_initMatrix:
  4571                           
  4572                           	psect	text5
  4573     07C4                     __ptext5:	
  4574 ;; *************** function _chegadaS1 *****************
  4575 ;; Defined at:
  4576 ;;		line 242 in file "main.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4590 ;;      Params:         0       0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0
  4593 ;;      Totals:         0       0       0       0       0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; Hardware stack levels required when called: 10
  4597 ;; This function calls:
  4598 ;;		_TMR4_StartTimer
  4599 ;;		_matrixUpdate
  4600 ;; This function is called by:
  4601 ;;		_main
  4602 ;;		_IOCBF0_ISR
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606     07C4                     _chegadaS1:	
  4607                           ;psect for function _chegadaS1
  4608                           
  4609                           
  4610                           ;Skip over the trampoline to the duplicate function for level 1
  4611     07C4  1C7E               	btfss	int$flags,0
  4612     07C5  2FC8               	goto	_chegadaS1$intlevel0
  4613     07C6  318D  2D80         	ljmp	i1_chegadaS1
  4614     07C8                     _chegadaS1$intlevel0:
  4615     07C8                     l3993:	
  4616                           ;incstack = 0
  4617                           ; Regs used in _chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4618                           
  4619                           
  4620                           ;main.c: 244:     andarAtual = 0;
  4621     07C8  0020               	movlb	0	; select bank0
  4622     07C9  01EA               	clrf	_andarAtual
  4623     07CA                     l3995:
  4624                           
  4625                           ;main.c: 248:     MatrixLed[0] = 0b01111110;
  4626     07CA  307E               	movlw	126
  4627     07CB  0021               	movlb	1	; select bank1
  4628     07CC  00A0               	movwf	_MatrixLed^(0+128)
  4629     07CD                     l3997:
  4630                           
  4631                           ;main.c: 249:     MatrixLed[1] = 0b10000001;
  4632     07CD  3081               	movlw	129
  4633     07CE  00A1               	movwf	(_MatrixLed^(0+128)+1)
  4634     07CF                     l3999:
  4635                           
  4636                           ;main.c: 250:     MatrixLed[2] = 0b10000001;
  4637     07CF  3081               	movlw	129
  4638     07D0  00A2               	movwf	(_MatrixLed^(0+128)+2)
  4639     07D1                     l4001:
  4640                           
  4641                           ;main.c: 251:     MatrixLed[3] = 0b01111110;
  4642     07D1  307E               	movlw	126
  4643     07D2  00A3               	movwf	(_MatrixLed^(0+128)+3)
  4644                           
  4645                           ;main.c: 252:     MatrixLed[4] = 0;
  4646     07D3  01A4               	clrf	(_MatrixLed^(0+128)+4)
  4647     07D4                     l4003:
  4648                           
  4649                           ;main.c: 253:     if(subindo){
  4650     07D4  085E               	movf	_subindo^(0+128),w
  4651     07D5  1903               	btfsc	3,2
  4652     07D6  2FD8               	goto	u3021
  4653     07D7  2FD9               	goto	u3020
  4654     07D8                     u3021:
  4655     07D8  2FE3               	goto	l4009
  4656     07D9                     u3020:
  4657     07D9                     l4005:
  4658                           
  4659                           ;main.c: 254:         MatrixLed[5] = 0b01100000;
  4660     07D9  3060               	movlw	96
  4661     07DA  00A5               	movwf	(_MatrixLed^(0+128)+5)
  4662                           
  4663                           ;main.c: 255:         MatrixLed[6] = 0b11000000;
  4664     07DB  30C0               	movlw	192
  4665     07DC  00A6               	movwf	(_MatrixLed^(0+128)+6)
  4666                           
  4667                           ;main.c: 256:         MatrixLed[7] = 0b01100000;
  4668     07DD  3060               	movlw	96
  4669     07DE  00A7               	movwf	(_MatrixLed^(0+128)+7)
  4670     07DF                     l4007:
  4671                           
  4672                           ;main.c: 257:         destinoSub = destinoSub & 0b11111110;
  4673     07DF  0832               	movf	_destinoSub^(0+128),w
  4674     07E0  39FE               	andlw	254
  4675     07E1  00B2               	movwf	_destinoSub^(0+128)
  4676                           
  4677                           ;main.c: 258:     }else{
  4678     07E2  2FF0               	goto	l4015
  4679     07E3                     l4009:
  4680                           
  4681                           ;main.c: 259:         MatrixLed[5] = 0b11000000;
  4682     07E3  30C0               	movlw	192
  4683     07E4  00A5               	movwf	(_MatrixLed^(0+128)+5)
  4684                           
  4685                           ;main.c: 260:         MatrixLed[6] = 0b01100000;
  4686     07E5  3060               	movlw	96
  4687     07E6  00A6               	movwf	(_MatrixLed^(0+128)+6)
  4688                           
  4689                           ;main.c: 261:         MatrixLed[7] = 0b11000000;
  4690     07E7  30C0               	movlw	192
  4691     07E8  00A7               	movwf	(_MatrixLed^(0+128)+7)
  4692     07E9                     l4011:
  4693                           
  4694                           ;main.c: 262:         destinoDesc = destinoDesc & 0b11111110;
  4695     07E9  0831               	movf	_destinoDesc^(0+128),w
  4696     07EA  39FE               	andlw	254
  4697     07EB  00B1               	movwf	_destinoDesc^(0+128)
  4698                           
  4699                           ;main.c: 263:         mov = Repouso;
  4700     07EC  01B7               	clrf	_mov^(0+128)
  4701     07ED                     l4013:
  4702                           
  4703                           ;main.c: 265:         TMR4_StartTimer();
  4704     07ED  318A  2243  3187   	fcall	_TMR4_StartTimer
  4705     07F0                     l4015:
  4706                           
  4707                           ;main.c: 267:     matrixUpdate();
  4708     07F0  318C  244D  3187   	fcall	_matrixUpdate
  4709     07F3                     l4017:
  4710                           
  4711                           ;main.c: 269:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  4712     07F3  0021               	movlb	1	; select bank1
  4713     07F4  0827               	movf	(_MatrixLed^(0+128)+7),w
  4714     07F5  0432               	iorwf	_destinoSub^(0+128),w
  4715     07F6  00A7               	movwf	(_MatrixLed^(0+128)+7)
  4716     07F7                     l4019:
  4717                           
  4718                           ;main.c: 270:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  4719     07F7  0826               	movf	(_MatrixLed^(0+128)+6),w
  4720     07F8  0431               	iorwf	_destinoDesc^(0+128),w
  4721     07F9  00A6               	movwf	(_MatrixLed^(0+128)+6)
  4722     07FA                     l867:
  4723     07FA  0008               	return
  4724     07FB                     __end_of_chegadaS1:
  4725                           
  4726                           	psect	text6
  4727     0C4D                     __ptext6:	
  4728 ;; *************** function _matrixUpdate *****************
  4729 ;; Defined at:
  4730 ;;		line 163 in file "main.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  i               1    0        unsigned char 
  4735 ;;  i               1   10[BANK1 ] unsigned char 
  4736 ;;  index           1    0        unsigned char 
  4737 ;;  data            2    8[BANK1 ] unsigned char [2]
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      void 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4747 ;;      Params:         0       0       0       0       0       0
  4748 ;;      Locals:         0       0       3       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0
  4750 ;;      Totals:         0       0       3       0       0       0
  4751 ;;Total ram usage:        3 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; Hardware stack levels required when called: 9
  4754 ;; This function calls:
  4755 ;;		_txSpi
  4756 ;; This function is called by:
  4757 ;;		_chegadaS1
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761     0C4D                     _matrixUpdate:	
  4762                           ;psect for function _matrixUpdate
  4763                           
  4764     0C4D                     l3805:	
  4765                           ;incstack = 0
  4766                           ; Regs used in _matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4767                           
  4768                           
  4769                           ;main.c: 166:         for(uint8_t i=8;i>0;i--){
  4770     0C4D  3008               	movlw	8
  4771     0C4E  0021               	movlb	1	; select bank1
  4772     0C4F  00C5               	movwf	matrixUpdate@i^(0+128)
  4773     0C50                     l3811:
  4774                           
  4775                           ;main.c: 167:             data[0] = i;
  4776     0C50  0845               	movf	matrixUpdate@i^(0+128),w
  4777     0C51  00C3               	movwf	matrixUpdate@data^(0+128)
  4778     0C52                     l3813:
  4779                           
  4780                           ;main.c: 168:             data[1] = MatrixLed[i-1];
  4781     0C52  0845               	movf	matrixUpdate@i^(0+128),w
  4782     0C53  3E9F               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
  4783     0C54  0086               	movwf	6
  4784     0C55  0187               	clrf	7
  4785     0C56  0801               	movf	1,w
  4786     0C57  00C4               	movwf	(matrixUpdate@data^(0+128)+1)
  4787     0C58                     l3815:
  4788                           
  4789                           ;main.c: 169:             txSpi(data, 2);
  4790     0C58  3002               	movlw	2
  4791     0C59  00C0               	movwf	txSpi@dataSize^(0+128)
  4792     0C5A  3000               	movlw	0
  4793     0C5B  00C1               	movwf	(txSpi@dataSize^(0+128)+1)
  4794     0C5C  30C3               	movlw	(low (matrixUpdate@data| 0))& (0+255)
  4795     0C5D  318B  2351  318C   	fcall	_txSpi
  4796     0C60                     l3817:
  4797                           
  4798                           ;main.c: 170:         }
  4799     0C60  3001               	movlw	1
  4800     0C61  0021               	movlb	1	; select bank1
  4801     0C62  02C5               	subwf	matrixUpdate@i^(0+128),f
  4802     0C63                     l3819:
  4803     0C63  0845               	movf	matrixUpdate@i^(0+128),w
  4804     0C64  1D03               	btfss	3,2
  4805     0C65  2C67               	goto	u2821
  4806     0C66  2C68               	goto	u2820
  4807     0C67                     u2821:
  4808     0C67  2C50               	goto	l3811
  4809     0C68                     u2820:
  4810     0C68                     l833:
  4811     0C68  0008               	return
  4812     0C69                     __end_of_matrixUpdate:
  4813                           
  4814                           	psect	text7
  4815     0B51                     __ptext7:	
  4816 ;; *************** function _txSpi *****************
  4817 ;; Defined at:
  4818 ;;		line 155 in file "main.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  data            1    wreg     PTR unsigned char 
  4821 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4822 ;;  dataSize        2    5[BANK1 ] unsigned int 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  data            1    7[BANK1 ] PTR unsigned char 
  4825 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4835 ;;      Params:         0       0       2       0       0       0
  4836 ;;      Locals:         0       0       1       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0
  4838 ;;      Totals:         0       0       3       0       0       0
  4839 ;;Total ram usage:        3 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; Hardware stack levels required when called: 8
  4842 ;; This function calls:
  4843 ;;		_SPI1_ExchangeBlock
  4844 ;; This function is called by:
  4845 ;;		_matrixUpdate
  4846 ;;		_initMatrix
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850     0B51                     _txSpi:	
  4851                           ;psect for function _txSpi
  4852                           
  4853                           
  4854                           ;incstack = 0
  4855                           ; Regs used in _txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4856                           ;txSpi@data stored from wreg
  4857     0B51  0021               	movlb	1	; select bank1
  4858     0B52  00C2               	movwf	txSpi@data^(0+128)
  4859     0B53                     l820:	
  4860                           ;main.c: 156:     do { LATBbits.LATB1 = 0; } while(0);
  4861                           
  4862     0B53  0022               	movlb	2	; select bank2
  4863     0B54  108D               	bcf	13,1	;volatile
  4864     0B55                     l3323:
  4865                           
  4866                           ;main.c: 157:     SPI1_ExchangeBlock(data,dataSize);
  4867     0B55  0021               	movlb	1	; select bank1
  4868     0B56  0841               	movf	(txSpi@dataSize+1)^(0+128),w
  4869     0B57  00BC               	movwf	(SPI1_ExchangeBlock@blockSize+1)^(0+128)
  4870     0B58  0840               	movf	txSpi@dataSize^(0+128),w
  4871     0B59  00BB               	movwf	SPI1_ExchangeBlock@blockSize^(0+128)
  4872     0B5A  0842               	movf	txSpi@data^(0+128),w
  4873     0B5B  318C  24F7  318B   	fcall	_SPI1_ExchangeBlock
  4874     0B5E                     l3325:
  4875     0B5E  0022               	movlb	2	; select bank2
  4876     0B5F  148D               	bsf	13,1	;volatile
  4877     0B60                     l824:
  4878     0B60  0008               	return
  4879     0B61                     __end_of_txSpi:
  4880                           
  4881                           	psect	text8
  4882     0CF7                     __ptext8:	
  4883 ;; *************** function _SPI1_ExchangeBlock *****************
  4884 ;; Defined at:
  4885 ;;		line 100 in file "mcc_generated_files/spi1.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  block           1    wreg     PTR void 
  4888 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4889 ;;  blockSize       2    0[BANK1 ] unsigned int 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  block           1    3[BANK1 ] PTR void 
  4892 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4893 ;;  data            1    4[BANK1 ] PTR unsigned char 
  4894 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4904 ;;      Params:         0       0       2       0       0       0
  4905 ;;      Locals:         0       0       2       0       0       0
  4906 ;;      Temps:          0       0       1       0       0       0
  4907 ;;      Totals:         0       0       5       0       0       0
  4908 ;;Total ram usage:        5 bytes
  4909 ;; Hardware stack levels used: 1
  4910 ;; Hardware stack levels required when called: 7
  4911 ;; This function calls:
  4912 ;;		Nothing
  4913 ;; This function is called by:
  4914 ;;		_txSpi
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918     0CF7                     _SPI1_ExchangeBlock:	
  4919                           ;psect for function _SPI1_ExchangeBlock
  4920                           
  4921                           
  4922                           ;incstack = 0
  4923                           ; Regs used in _SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4924                           ;SPI1_ExchangeBlock@block stored from wreg
  4925     0CF7  0021               	movlb	1	; select bank1
  4926     0CF8  00BE               	movwf	SPI1_ExchangeBlock@block^(0+128)
  4927     0CF9                     l3013:
  4928                           
  4929                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  4930     0CF9  083E               	movf	SPI1_ExchangeBlock@block^(0+128),w
  4931     0CFA  00BF               	movwf	SPI1_ExchangeBlock@data^(0+128)
  4932                           
  4933                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4934     0CFB  2D14               	goto	l3021
  4935     0CFC                     l3015:
  4936                           
  4937                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  4938     0CFC  083F               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4939     0CFD  0086               	movwf	6
  4940     0CFE  0187               	clrf	7
  4941     0CFF  0801               	movf	1,w
  4942     0D00  0024               	movlb	4	; select bank4
  4943     0D01  0091               	movwf	17	;volatile
  4944     0D02                     l444:	
  4945                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  4946                           
  4947     0D02  0020               	movlb	0	; select bank0
  4948     0D03  1D91               	btfss	17,3	;volatile
  4949     0D04  2D06               	goto	u1771
  4950     0D05  2D07               	goto	u1770
  4951     0D06                     u1771:
  4952     0D06  2D02               	goto	l444
  4953     0D07                     u1770:
  4954     0D07                     l446:
  4955                           
  4956                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  4957     0D07  1191               	bcf	17,3	;volatile
  4958     0D08                     l3017:
  4959                           
  4960                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  4961     0D08  0021               	movlb	1	; select bank1
  4962     0D09  083F               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4963     0D0A  0086               	movwf	6
  4964     0D0B  0187               	clrf	7
  4965     0D0C  0024               	movlb	4	; select bank4
  4966     0D0D  0811               	movf	17,w	;volatile
  4967     0D0E  0081               	movwf	1
  4968     0D0F                     l3019:
  4969     0D0F  3001               	movlw	1
  4970     0D10  0021               	movlb	1	; select bank1
  4971     0D11  00BD               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4972     0D12  083D               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4973     0D13  07BF               	addwf	SPI1_ExchangeBlock@data^(0+128),f
  4974     0D14                     l3021:
  4975                           
  4976                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4977     0D14  3001               	movlw	1
  4978     0D15  02BB               	subwf	SPI1_ExchangeBlock@blockSize^(0+128),f
  4979     0D16  3000               	movlw	0
  4980     0D17  3BBC               	subwfb	(SPI1_ExchangeBlock@blockSize+1)^(0+128),f
  4981     0D18  0A3B               	incf	SPI1_ExchangeBlock@blockSize^(0+128),w
  4982     0D19  1D03               	skipz
  4983     0D1A  2D1F               	goto	u1781
  4984     0D1B  0A3C               	incf	(SPI1_ExchangeBlock@blockSize+1)^(0+128),w
  4985     0D1C  1D03               	btfss	3,2
  4986     0D1D  2D1F               	goto	u1781
  4987     0D1E  2D20               	goto	u1780
  4988     0D1F                     u1781:
  4989     0D1F  2CFC               	goto	l3015
  4990     0D20                     u1780:
  4991     0D20                     l448:
  4992     0D20  0008               	return
  4993     0D21                     __end_of_SPI1_ExchangeBlock:
  4994                           
  4995                           	psect	text9
  4996     0A43                     __ptext9:	
  4997 ;; *************** function _TMR4_StartTimer *****************
  4998 ;; Defined at:
  4999 ;;		line 87 in file "mcc_generated_files/tmr4.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		None
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5013 ;;      Params:         0       0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; Hardware stack levels required when called: 7
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_chegadaS1
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027     0A43                     _TMR4_StartTimer:	
  5028                           ;psect for function _TMR4_StartTimer
  5029                           
  5030     0A43                     l3771:	
  5031                           ;incstack = 0
  5032                           ; Regs used in _TMR4_StartTimer: []
  5033                           
  5034                           
  5035                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
  5036     0A43  0028               	movlb	8	; select bank8
  5037     0A44  1517               	bsf	23,2	;volatile
  5038     0A45                     l673:
  5039     0A45  0008               	return
  5040     0A46                     __end_of_TMR4_StartTimer:
  5041                           
  5042                           	psect	text10
  5043     0D21                     __ptext10:	
  5044 ;; *************** function _SYSTEM_Initialize *****************
  5045 ;; Defined at:
  5046 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;		None
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      void 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0, pclath, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5060 ;;      Params:         0       0       0       0       0       0
  5061 ;;      Locals:         0       0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0
  5063 ;;      Totals:         0       0       0       0       0       0
  5064 ;;Total ram usage:        0 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; Hardware stack levels required when called: 9
  5067 ;; This function calls:
  5068 ;;		_ADC_Initialize
  5069 ;;		_CCP4_Initialize
  5070 ;;		_CMP1_Initialize
  5071 ;;		_CMP2_Initialize
  5072 ;;		_EUSART_Initialize
  5073 ;;		_FVR_Initialize
  5074 ;;		_OSCILLATOR_Initialize
  5075 ;;		_PIN_MANAGER_Initialize
  5076 ;;		_PWM3_Initialize
  5077 ;;		_SPI1_Initialize
  5078 ;;		_TMR0_Initialize
  5079 ;;		_TMR1_Initialize
  5080 ;;		_TMR2_Initialize
  5081 ;;		_TMR4_Initialize
  5082 ;;		_WDT_Initialize
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088     0D21                     _SYSTEM_Initialize:	
  5089                           ;psect for function _SYSTEM_Initialize
  5090                           
  5091     0D21                     l3855:	
  5092                           ;incstack = 0
  5093                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5094                           
  5095                           
  5096                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  5097     0D21  318A  22CA  318D   	fcall	_SPI1_Initialize
  5098                           
  5099                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5100     0D24  318D  254F  318D   	fcall	_PIN_MANAGER_Initialize
  5101                           
  5102                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5103     0D27  318A  22A0  318D   	fcall	_OSCILLATOR_Initialize
  5104                           
  5105                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  5106     0D2A  318A  224A  318D   	fcall	_WDT_Initialize
  5107                           
  5108                           ;mcc_generated_files/mcc.c: 57:     CMP2_Initialize();
  5109     0D2D  318A  22E1  318D   	fcall	_CMP2_Initialize
  5110                           
  5111                           ;mcc_generated_files/mcc.c: 58:     FVR_Initialize();
  5112     0D30  318A  2246  318D   	fcall	_FVR_Initialize
  5113                           
  5114                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  5115     0D33  318B  2384  318D   	fcall	_TMR4_Initialize
  5116                           
  5117                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  5118     0D36  318A  22AF  318D   	fcall	_TMR2_Initialize
  5119                           
  5120                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  5121     0D39  318B  23BF  318D   	fcall	_TMR0_Initialize
  5122                           
  5123                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  5124     0D3C  318A  22D5  318D   	fcall	_CMP1_Initialize
  5125                           
  5126                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  5127     0D3F  318A  22A7  318D   	fcall	_ADC_Initialize
  5128                           
  5129                           ;mcc_generated_files/mcc.c: 64:     CCP4_Initialize();
  5130     0D42  318B  2372  318D   	fcall	_CCP4_Initialize
  5131                           
  5132                           ;mcc_generated_files/mcc.c: 65:     PWM3_Initialize();
  5133     0D45  318A  22B7  318D   	fcall	_PWM3_Initialize
  5134                           
  5135                           ;mcc_generated_files/mcc.c: 66:     TMR1_Initialize();
  5136     0D48  318B  2315  318D   	fcall	_TMR1_Initialize
  5137                           
  5138                           ;mcc_generated_files/mcc.c: 67:     EUSART_Initialize();
  5139     0D4B  318C  24AB  318D   	fcall	_EUSART_Initialize
  5140     0D4E                     l263:
  5141     0D4E  0008               	return
  5142     0D4F                     __end_of_SYSTEM_Initialize:
  5143                           
  5144                           	psect	text11
  5145     0A4A                     __ptext11:	
  5146 ;; *************** function _WDT_Initialize *****************
  5147 ;; Defined at:
  5148 ;;		line 80 in file "mcc_generated_files/mcc.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5162 ;;      Params:         0       0       0       0       0       0
  5163 ;;      Locals:         0       0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0       0
  5165 ;;      Totals:         0       0       0       0       0       0
  5166 ;;Total ram usage:        0 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 7
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_SYSTEM_Initialize
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176     0A4A                     _WDT_Initialize:	
  5177                           ;psect for function _WDT_Initialize
  5178                           
  5179     0A4A                     l3689:	
  5180                           ;incstack = 0
  5181                           ; Regs used in _WDT_Initialize: [wreg]
  5182                           
  5183                           
  5184                           ;mcc_generated_files/mcc.c: 83:     WDTCON = 0x16;
  5185     0A4A  3016               	movlw	22
  5186     0A4B  0021               	movlb	1	; select bank1
  5187     0A4C  0097               	movwf	23	;volatile
  5188     0A4D                     l269:
  5189     0A4D  0008               	return
  5190     0A4E                     __end_of_WDT_Initialize:
  5191                           
  5192                           	psect	text12
  5193     0B84                     __ptext12:	
  5194 ;; *************** function _TMR4_Initialize *****************
  5195 ;; Defined at:
  5196 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, pclath, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5210 ;;      Params:         0       0       0       0       0       0
  5211 ;;      Locals:         0       0       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0
  5213 ;;      Totals:         0       0       0       0       0       0
  5214 ;;Total ram usage:        0 bytes
  5215 ;; Hardware stack levels used: 1
  5216 ;; Hardware stack levels required when called: 8
  5217 ;; This function calls:
  5218 ;;		_TMR4_SetInterruptHandler
  5219 ;; This function is called by:
  5220 ;;		_SYSTEM_Initialize
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224     0B84                     _TMR4_Initialize:	
  5225                           ;psect for function _TMR4_Initialize
  5226                           
  5227     0B84                     l3693:	
  5228                           ;incstack = 0
  5229                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5230                           
  5231                           
  5232                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF3;
  5233     0B84  30F3               	movlw	243
  5234     0B85  0028               	movlb	8	; select bank8
  5235     0B86  0096               	movwf	22	;volatile
  5236     0B87                     l3695:
  5237                           
  5238                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5239     0B87  0195               	clrf	21	;volatile
  5240     0B88                     l3697:
  5241                           
  5242                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  5243     0B88  0020               	movlb	0	; select bank0
  5244     0B89  1093               	bcf	19,1	;volatile
  5245     0B8A                     l3699:
  5246                           
  5247                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  5248     0B8A  0021               	movlb	1	; select bank1
  5249     0B8B  1493               	bsf	19,1	;volatile
  5250     0B8C                     l3701:
  5251                           
  5252                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5253     0B8C  3002               	movlw	low _TMR4_DefaultInterruptHandler
  5254     0B8D  00BB               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  5255     0B8E  3000               	movlw	high _TMR4_DefaultInterruptHandler
  5256     0B8F  00BC               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5257     0B90  318A  228E  318B   	fcall	_TMR4_SetInterruptHandler
  5258     0B93                     l3703:
  5259                           
  5260                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x7F;
  5261     0B93  307F               	movlw	127
  5262     0B94  0028               	movlb	8	; select bank8
  5263     0B95  0097               	movwf	23	;volatile
  5264     0B96                     l670:
  5265     0B96  0008               	return
  5266     0B97                     __end_of_TMR4_Initialize:
  5267                           
  5268                           	psect	text13
  5269     0A8E                     __ptext13:	
  5270 ;; *************** function _TMR4_SetInterruptHandler *****************
  5271 ;; Defined at:
  5272 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5275 ;;		 -> controleMovimento(1), TMR4_DefaultInterruptHandler(1), 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5287 ;;      Params:         0       0       2       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0
  5290 ;;      Totals:         0       0       2       0       0       0
  5291 ;;Total ram usage:        2 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 7
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_TMR4_Initialize
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302     0A8E                     _TMR4_SetInterruptHandler:	
  5303                           ;psect for function _TMR4_SetInterruptHandler
  5304                           
  5305     0A8E                     l3293:	
  5306                           ;incstack = 0
  5307                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  5308                           
  5309                           
  5310                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  5311     0A8E  0021               	movlb	1	; select bank1
  5312     0A8F  083C               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5313     0A90  00CF               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  5314     0A91  083B               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  5315     0A92  00CE               	movwf	_TMR4_InterruptHandler^(0+128)
  5316     0A93                     l698:
  5317     0A93  0008               	return
  5318     0A94                     __end_of_TMR4_SetInterruptHandler:
  5319                           
  5320                           	psect	text14
  5321     0AAF                     __ptext14:	
  5322 ;; *************** function _TMR2_Initialize *****************
  5323 ;; Defined at:
  5324 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5338 ;;      Params:         0       0       0       0       0       0
  5339 ;;      Locals:         0       0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0
  5341 ;;      Totals:         0       0       0       0       0       0
  5342 ;;Total ram usage:        0 bytes
  5343 ;; Hardware stack levels used: 1
  5344 ;; Hardware stack levels required when called: 7
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_SYSTEM_Initialize
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352     0AAF                     _TMR2_Initialize:	
  5353                           ;psect for function _TMR2_Initialize
  5354                           
  5355     0AAF                     l3705:	
  5356                           ;incstack = 0
  5357                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5358                           
  5359                           
  5360                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  5361     0AAF  30FF               	movlw	255
  5362     0AB0  0020               	movlb	0	; select bank0
  5363     0AB1  009B               	movwf	27	;volatile
  5364     0AB2                     l3707:
  5365                           
  5366                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5367     0AB2  019A               	clrf	26	;volatile
  5368     0AB3                     l3709:
  5369                           
  5370                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5371     0AB3  1091               	bcf	17,1	;volatile
  5372     0AB4                     l3711:
  5373                           
  5374                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  5375     0AB4  3004               	movlw	4
  5376     0AB5  009C               	movwf	28	;volatile
  5377     0AB6                     l558:
  5378     0AB6  0008               	return
  5379     0AB7                     __end_of_TMR2_Initialize:
  5380                           
  5381                           	psect	text15
  5382     0B15                     __ptext15:	
  5383 ;; *************** function _TMR1_Initialize *****************
  5384 ;; Defined at:
  5385 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5399 ;;      Params:         0       0       0       0       0       0
  5400 ;;      Locals:         0       0       0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0
  5402 ;;      Totals:         0       0       0       0       0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; Hardware stack levels required when called: 7
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_SYSTEM_Initialize
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413     0B15                     _TMR1_Initialize:	
  5414                           ;psect for function _TMR1_Initialize
  5415                           
  5416     0B15                     l3743:	
  5417                           ;incstack = 0
  5418                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  5419                           
  5420                           
  5421                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5422     0B15  0020               	movlb	0	; select bank0
  5423     0B16  0199               	clrf	25	;volatile
  5424     0B17                     l3745:
  5425                           
  5426                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  5427     0B17  300B               	movlw	11
  5428     0B18  0097               	movwf	23	;volatile
  5429     0B19                     l3747:
  5430                           
  5431                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  5432     0B19  30DC               	movlw	220
  5433     0B1A  0096               	movwf	22	;volatile
  5434     0B1B                     l3749:
  5435                           
  5436                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  5437     0B1B  1011               	bcf	17,0	;volatile
  5438     0B1C                     l3751:
  5439                           
  5440                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5441     0B1C  0817               	movf	23,w	;volatile
  5442     0B1D  00E3               	movwf	_timer1ReloadVal+1	;volatile
  5443     0B1E  0816               	movf	22,w	;volatile
  5444     0B1F  00E2               	movwf	_timer1ReloadVal	;volatile
  5445     0B20                     l3753:
  5446                           
  5447                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  5448     0B20  3031               	movlw	49
  5449     0B21  0098               	movwf	24	;volatile
  5450     0B22                     l519:
  5451     0B22  0008               	return
  5452     0B23                     __end_of_TMR1_Initialize:
  5453                           
  5454                           	psect	text16
  5455     0BBF                     __ptext16:	
  5456 ;; *************** function _TMR0_Initialize *****************
  5457 ;; Defined at:
  5458 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;		None
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;		None
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5472 ;;      Params:         0       0       0       0       0       0
  5473 ;;      Locals:         0       0       0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0       0
  5475 ;;      Totals:         0       0       0       0       0       0
  5476 ;;Total ram usage:        0 bytes
  5477 ;; Hardware stack levels used: 1
  5478 ;; Hardware stack levels required when called: 8
  5479 ;; This function calls:
  5480 ;;		_TMR0_SetInterruptHandler
  5481 ;; This function is called by:
  5482 ;;		_SYSTEM_Initialize
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486     0BBF                     _TMR0_Initialize:	
  5487                           ;psect for function _TMR0_Initialize
  5488                           
  5489     0BBF                     l3713:	
  5490                           ;incstack = 0
  5491                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5492                           
  5493                           
  5494                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  5495     0BBF  0021               	movlb	1	; select bank1
  5496     0BC0  0815               	movf	21,w	;volatile
  5497     0BC1  39C0               	andlw	192
  5498     0BC2  3817               	iorlw	23
  5499     0BC3  0095               	movwf	21	;volatile
  5500     0BC4                     l3715:
  5501                           
  5502                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  5503     0BC4  3016               	movlw	22
  5504     0BC5  0020               	movlb	0	; select bank0
  5505     0BC6  0095               	movwf	21	;volatile
  5506     0BC7                     l3717:
  5507                           
  5508                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  5509     0BC7  3016               	movlw	22
  5510     0BC8  00E8               	movwf	_timer0ReloadVal	;volatile
  5511     0BC9                     l3719:
  5512                           
  5513                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  5514     0BC9  110B               	bcf	11,2	;volatile
  5515     0BCA                     l3721:
  5516                           
  5517                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  5518     0BCA  168B               	bsf	11,5	;volatile
  5519     0BCB                     l3723:
  5520                           
  5521                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5522     0BCB  303C               	movlw	low _TMR0_DefaultInterruptHandler
  5523     0BCC  0021               	movlb	1	; select bank1
  5524     0BCD  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  5525     0BCE  300A               	movlw	high _TMR0_DefaultInterruptHandler
  5526     0BCF  00BC               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5527     0BD0  318A  2288  318B   	fcall	_TMR0_SetInterruptHandler
  5528     0BD3                     l596:
  5529     0BD3  0008               	return
  5530     0BD4                     __end_of_TMR0_Initialize:
  5531                           
  5532                           	psect	text17
  5533     0A88                     __ptext17:	
  5534 ;; *************** function _TMR0_SetInterruptHandler *****************
  5535 ;; Defined at:
  5536 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5539 ;;		 -> sendInfo(1), TMR0_DefaultInterruptHandler(1), 
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5551 ;;      Params:         0       0       2       0       0       0
  5552 ;;      Locals:         0       0       0       0       0       0
  5553 ;;      Temps:          0       0       0       0       0       0
  5554 ;;      Totals:         0       0       2       0       0       0
  5555 ;;Total ram usage:        2 bytes
  5556 ;; Hardware stack levels used: 1
  5557 ;; Hardware stack levels required when called: 7
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_TMR0_Initialize
  5562 ;;		_main
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566     0A88                     _TMR0_SetInterruptHandler:	
  5567                           ;psect for function _TMR0_SetInterruptHandler
  5568                           
  5569     0A88                     l3289:	
  5570                           ;incstack = 0
  5571                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5572                           
  5573                           
  5574                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  5575     0A88  0021               	movlb	1	; select bank1
  5576     0A89  083C               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5577     0A8A  00D3               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  5578     0A8B  083B               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  5579     0A8C  00D2               	movwf	_TMR0_InterruptHandler^(0+128)
  5580     0A8D                     l618:
  5581     0A8D  0008               	return
  5582     0A8E                     __end_of_TMR0_SetInterruptHandler:
  5583                           
  5584                           	psect	text18
  5585     0ACA                     __ptext18:	
  5586 ;; *************** function _SPI1_Initialize *****************
  5587 ;; Defined at:
  5588 ;;		line 62 in file "mcc_generated_files/spi1.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      void 
  5595 ;; Registers used:
  5596 ;;		wreg, status,2
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5602 ;;      Params:         0       0       0       0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0
  5605 ;;      Totals:         0       0       0       0       0       0
  5606 ;;Total ram usage:        0 bytes
  5607 ;; Hardware stack levels used: 1
  5608 ;; Hardware stack levels required when called: 7
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_SYSTEM_Initialize
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616     0ACA                     _SPI1_Initialize:	
  5617                           ;psect for function _SPI1_Initialize
  5618                           
  5619     0ACA                     l3673:	
  5620                           ;incstack = 0
  5621                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  5622                           
  5623                           
  5624                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  5625     0ACA  3040               	movlw	64
  5626     0ACB  0024               	movlb	4	; select bank4
  5627     0ACC  0094               	movwf	20	;volatile
  5628     0ACD                     l3675:
  5629                           
  5630                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  5631     0ACD  0195               	clrf	21	;volatile
  5632     0ACE                     l3677:
  5633                           
  5634                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  5635     0ACE  3001               	movlw	1
  5636     0ACF  0092               	movwf	18	;volatile
  5637     0AD0                     l3679:
  5638                           
  5639                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  5640     0AD0  0021               	movlb	1	; select bank1
  5641     0AD1  120D               	bcf	13,4	;volatile
  5642     0AD2                     l3681:
  5643                           
  5644                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  5645     0AD2  0024               	movlb	4	; select bank4
  5646     0AD3  1295               	bcf	21,5	;volatile
  5647     0AD4                     l426:
  5648     0AD4  0008               	return
  5649     0AD5                     __end_of_SPI1_Initialize:
  5650                           
  5651                           	psect	text19
  5652     0AB7                     __ptext19:	
  5653 ;; *************** function _PWM3_Initialize *****************
  5654 ;; Defined at:
  5655 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5669 ;;      Params:         0       0       0       0       0       0
  5670 ;;      Locals:         0       0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0
  5672 ;;      Totals:         0       0       0       0       0       0
  5673 ;;Total ram usage:        0 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 7
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_SYSTEM_Initialize
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683     0AB7                     _PWM3_Initialize:	
  5684                           ;psect for function _PWM3_Initialize
  5685                           
  5686     0AB7                     l3527:	
  5687                           ;incstack = 0
  5688                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  5689                           
  5690                           
  5691                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  5692     0AB7  300C               	movlw	12
  5693     0AB8  0026               	movlb	6	; select bank6
  5694     0AB9  0093               	movwf	19	;volatile
  5695     0ABA                     l3529:
  5696                           
  5697                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  5698     0ABA  0191               	clrf	17	;volatile
  5699     0ABB                     l3531:
  5700                           
  5701                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  5702     0ABB  0192               	clrf	18	;volatile
  5703     0ABC                     l3533:
  5704                           
  5705                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  5706     0ABC  30CF               	movlw	-49
  5707     0ABD  0025               	movlb	5	; select bank5
  5708     0ABE  059E               	andwf	30,f	;volatile
  5709     0ABF                     l11:
  5710     0ABF  0008               	return
  5711     0AC0                     __end_of_PWM3_Initialize:
  5712                           
  5713                           	psect	text20
  5714     0D4F                     __ptext20:	
  5715 ;; *************** function _PIN_MANAGER_Initialize *****************
  5716 ;; Defined at:
  5717 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  1    wreg      void 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0, pclath, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5731 ;;      Params:         0       0       0       0       0       0
  5732 ;;      Locals:         0       0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0
  5734 ;;      Totals:         0       0       0       0       0       0
  5735 ;;Total ram usage:        0 bytes
  5736 ;; Hardware stack levels used: 1
  5737 ;; Hardware stack levels required when called: 8
  5738 ;; This function calls:
  5739 ;;		_IOCBF0_SetInterruptHandler
  5740 ;;		_IOCBF3_SetInterruptHandler
  5741 ;; This function is called by:
  5742 ;;		_SYSTEM_Initialize
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746     0D4F                     _PIN_MANAGER_Initialize:	
  5747                           ;psect for function _PIN_MANAGER_Initialize
  5748                           
  5749     0D4F                     l3627:	
  5750                           ;incstack = 0
  5751                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5752                           
  5753                           
  5754                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  5755     0D4F  0022               	movlb	2	; select bank2
  5756     0D50  018C               	clrf	12	;volatile
  5757                           
  5758                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  5759     0D51  018D               	clrf	13	;volatile
  5760     0D52                     l3629:
  5761                           
  5762                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  5763     0D52  3037               	movlw	55
  5764     0D53  0021               	movlb	1	; select bank1
  5765     0D54  008C               	movwf	12	;volatile
  5766     0D55                     l3631:
  5767                           
  5768                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xED;
  5769     0D55  30ED               	movlw	237
  5770     0D56  008D               	movwf	13	;volatile
  5771     0D57                     l3633:
  5772                           
  5773                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5774     0D57  30C0               	movlw	192
  5775     0D58  0023               	movlb	3	; select bank3
  5776     0D59  008D               	movwf	13	;volatile
  5777     0D5A                     l3635:
  5778                           
  5779                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0F;
  5780     0D5A  300F               	movlw	15
  5781     0D5B  008C               	movwf	12	;volatile
  5782     0D5C                     l3637:
  5783                           
  5784                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x09;
  5785     0D5C  3009               	movlw	9
  5786     0D5D  0024               	movlb	4	; select bank4
  5787     0D5E  008D               	movwf	13	;volatile
  5788     0D5F                     l3639:
  5789                           
  5790                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5791     0D5F  018C               	clrf	12	;volatile
  5792     0D60                     l3641:
  5793                           
  5794                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 0;
  5795     0D60  0021               	movlb	1	; select bank1
  5796     0D61  1395               	bcf	21,7	;volatile
  5797                           
  5798                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  5799     0D62  30C0               	movlw	192
  5800     0D63  0022               	movlb	2	; select bank2
  5801     0D64  009D               	movwf	29	;volatile
  5802                           
  5803                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  5804     0D65  3001               	movlw	1
  5805     0D66  009E               	movwf	30	;volatile
  5806     0D67                     l3643:
  5807                           
  5808                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  5809     0D67  0027               	movlb	7	; select bank7
  5810     0D68  1016               	bcf	22,0	;volatile
  5811     0D69                     l3645:
  5812                           
  5813                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  5814     0D69  1196               	bcf	22,3	;volatile
  5815     0D6A                     l3647:
  5816                           
  5817                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  5818     0D6A  1415               	bsf	21,0	;volatile
  5819     0D6B                     l3649:
  5820                           
  5821                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  5822     0D6B  1595               	bsf	21,3	;volatile
  5823     0D6C                     l3651:
  5824                           
  5825                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 0;
  5826     0D6C  1014               	bcf	20,0	;volatile
  5827     0D6D                     l3653:
  5828                           
  5829                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 0;
  5830     0D6D  1194               	bcf	20,3	;volatile
  5831     0D6E                     l3655:
  5832                           
  5833                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  5834     0D6E  303A               	movlw	low _IOCBF0_DefaultInterruptHandler
  5835     0D6F  0021               	movlb	1	; select bank1
  5836     0D70  00BB               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  5837     0D71  300A               	movlw	high _IOCBF0_DefaultInterruptHandler
  5838     0D72  00BC               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5839     0D73  318A  227C  318D   	fcall	_IOCBF0_SetInterruptHandler
  5840     0D76                     l3657:
  5841                           
  5842                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  5843     0D76  303B               	movlw	low _IOCBF3_DefaultInterruptHandler
  5844     0D77  0021               	movlb	1	; select bank1
  5845     0D78  00BB               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  5846     0D79  300A               	movlw	high _IOCBF3_DefaultInterruptHandler
  5847     0D7A  00BC               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5848     0D7B  318A  2282  318D   	fcall	_IOCBF3_SetInterruptHandler
  5849     0D7E                     l3659:
  5850                           
  5851                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  5852     0D7E  158B               	bsf	11,3	;volatile
  5853     0D7F                     l197:
  5854     0D7F  0008               	return
  5855     0D80                     __end_of_PIN_MANAGER_Initialize:
  5856                           
  5857                           	psect	text21
  5858     0A82                     __ptext21:	
  5859 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  5860 ;; Defined at:
  5861 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5864 ;;		 -> chegadaS2(1), IOCBF3_DefaultInterruptHandler(1), 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5876 ;;      Params:         0       0       2       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0
  5879 ;;      Totals:         0       0       2       0       0       0
  5880 ;;Total ram usage:        2 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 7
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_PIN_MANAGER_Initialize
  5887 ;;		_main
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891     0A82                     _IOCBF3_SetInterruptHandler:	
  5892                           ;psect for function _IOCBF3_SetInterruptHandler
  5893                           
  5894     0A82                     l3281:	
  5895                           ;incstack = 0
  5896                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  5897                           
  5898                           
  5899                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  5900     0A82  0021               	movlb	1	; select bank1
  5901     0A83  083C               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5902     0A84  00DB               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  5903     0A85  083B               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  5904     0A86  00DA               	movwf	_IOCBF3_InterruptHandler^(0+128)
  5905     0A87                     l219:
  5906     0A87  0008               	return
  5907     0A88                     __end_of_IOCBF3_SetInterruptHandler:
  5908                           
  5909                           	psect	text22
  5910     0A7C                     __ptext22:	
  5911 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  5912 ;; Defined at:
  5913 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5916 ;;		 -> chegadaS1(1), IOCBF0_DefaultInterruptHandler(1), 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5928 ;;      Params:         0       0       2       0       0       0
  5929 ;;      Locals:         0       0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0
  5931 ;;      Totals:         0       0       2       0       0       0
  5932 ;;Total ram usage:        2 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 7
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_PIN_MANAGER_Initialize
  5939 ;;		_main
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943     0A7C                     _IOCBF0_SetInterruptHandler:	
  5944                           ;psect for function _IOCBF0_SetInterruptHandler
  5945                           
  5946     0A7C                     l3279:	
  5947                           ;incstack = 0
  5948                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  5949                           
  5950                           
  5951                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  5952     0A7C  0021               	movlb	1	; select bank1
  5953     0A7D  083C               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5954     0A7E  00DD               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  5955     0A7F  083B               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  5956     0A80  00DC               	movwf	_IOCBF0_InterruptHandler^(0+128)
  5957     0A81                     l209:
  5958     0A81  0008               	return
  5959     0A82                     __end_of_IOCBF0_SetInterruptHandler:
  5960                           
  5961                           	psect	text23
  5962     0AA0                     __ptext23:	
  5963 ;; *************** function _OSCILLATOR_Initialize *****************
  5964 ;; Defined at:
  5965 ;;		line 70 in file "mcc_generated_files/mcc.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5979 ;;      Params:         0       0       0       0       0       0
  5980 ;;      Locals:         0       0       0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0
  5982 ;;      Totals:         0       0       0       0       0       0
  5983 ;;Total ram usage:        0 bytes
  5984 ;; Hardware stack levels used: 1
  5985 ;; Hardware stack levels required when called: 7
  5986 ;; This function calls:
  5987 ;;		Nothing
  5988 ;; This function is called by:
  5989 ;;		_SYSTEM_Initialize
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993     0AA0                     _OSCILLATOR_Initialize:	
  5994                           ;psect for function _OSCILLATOR_Initialize
  5995                           
  5996     0AA0                     l3683:	
  5997                           ;incstack = 0
  5998                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5999                           
  6000                           
  6001                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x68;
  6002     0AA0  3068               	movlw	104
  6003     0AA1  0021               	movlb	1	; select bank1
  6004     0AA2  0099               	movwf	25	;volatile
  6005     0AA3                     l3685:
  6006                           
  6007                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  6008     0AA3  0198               	clrf	24	;volatile
  6009     0AA4                     l3687:
  6010                           
  6011                           ;mcc_generated_files/mcc.c: 77:     BORCON = 0x00;
  6012     0AA4  0022               	movlb	2	; select bank2
  6013     0AA5  0196               	clrf	22	;volatile
  6014     0AA6                     l266:
  6015     0AA6  0008               	return
  6016     0AA7                     __end_of_OSCILLATOR_Initialize:
  6017                           
  6018                           	psect	text24
  6019     0A46                     __ptext24:	
  6020 ;; *************** function _FVR_Initialize *****************
  6021 ;; Defined at:
  6022 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;		None
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;		None
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6036 ;;      Params:         0       0       0       0       0       0
  6037 ;;      Locals:         0       0       0       0       0       0
  6038 ;;      Temps:          0       0       0       0       0       0
  6039 ;;      Totals:         0       0       0       0       0       0
  6040 ;;Total ram usage:        0 bytes
  6041 ;; Hardware stack levels used: 1
  6042 ;; Hardware stack levels required when called: 7
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_SYSTEM_Initialize
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050     0A46                     _FVR_Initialize:	
  6051                           ;psect for function _FVR_Initialize
  6052                           
  6053     0A46                     l3691:	
  6054                           ;incstack = 0
  6055                           ; Regs used in _FVR_Initialize: [wreg]
  6056                           
  6057                           
  6058                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x89;
  6059     0A46  3089               	movlw	137
  6060     0A47  0022               	movlb	2	; select bank2
  6061     0A48  0097               	movwf	23	;volatile
  6062     0A49                     l314:
  6063     0A49  0008               	return
  6064     0A4A                     __end_of_FVR_Initialize:
  6065                           
  6066                           	psect	text25
  6067     0CAB                     __ptext25:	
  6068 ;; *************** function _EUSART_Initialize *****************
  6069 ;; Defined at:
  6070 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, status,2, status,0, pclath, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6084 ;;      Params:         0       0       0       0       0       0
  6085 ;;      Locals:         0       0       0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0
  6087 ;;      Totals:         0       0       0       0       0       0
  6088 ;;Total ram usage:        0 bytes
  6089 ;; Hardware stack levels used: 1
  6090 ;; Hardware stack levels required when called: 8
  6091 ;; This function calls:
  6092 ;;		_EUSART_SetErrorHandler
  6093 ;;		_EUSART_SetFramingErrorHandler
  6094 ;;		_EUSART_SetOverrunErrorHandler
  6095 ;; This function is called by:
  6096 ;;		_SYSTEM_Initialize
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100     0CAB                     _EUSART_Initialize:	
  6101                           ;psect for function _EUSART_Initialize
  6102                           
  6103     0CAB                     l3755:	
  6104                           ;incstack = 0
  6105                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6106                           
  6107                           
  6108                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6109     0CAB  3008               	movlw	8
  6110     0CAC  0023               	movlb	3	; select bank3
  6111     0CAD  009F               	movwf	31	;volatile
  6112                           
  6113                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6114     0CAE  3090               	movlw	144
  6115     0CAF  009D               	movwf	29	;volatile
  6116                           
  6117                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  6118     0CB0  3024               	movlw	36
  6119     0CB1  009E               	movwf	30	;volatile
  6120                           
  6121                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x33;
  6122     0CB2  3033               	movlw	51
  6123     0CB3  009B               	movwf	27	;volatile
  6124     0CB4                     l3757:
  6125                           
  6126                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  6127     0CB4  019C               	clrf	28	;volatile
  6128     0CB5                     l3759:
  6129                           
  6130                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6131     0CB5  3000               	movlw	0
  6132     0CB6  0021               	movlb	1	; select bank1
  6133     0CB7  00BB               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  6134     0CB8  3000               	movlw	0
  6135     0CB9  00BC               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  6136     0CBA  318A  2270  318C   	fcall	_EUSART_SetFramingErrorHandler
  6137     0CBD                     l3761:
  6138                           
  6139                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6140     0CBD  3000               	movlw	0
  6141     0CBE  0021               	movlb	1	; select bank1
  6142     0CBF  00BB               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  6143     0CC0  3000               	movlw	0
  6144     0CC1  00BC               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  6145     0CC2  318A  2276  318C   	fcall	_EUSART_SetOverrunErrorHandler
  6146     0CC5                     l3763:
  6147                           
  6148                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6149     0CC5  3000               	movlw	0
  6150     0CC6  0021               	movlb	1	; select bank1
  6151     0CC7  00BB               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  6152     0CC8  3000               	movlw	0
  6153     0CC9  00BC               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  6154     0CCA  318A  226A  318C   	fcall	_EUSART_SetErrorHandler
  6155     0CCD                     l3765:
  6156                           
  6157                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6158     0CCD  0021               	movlb	1	; select bank1
  6159     0CCE  01B0               	clrf	_eusartRxLastError^(0+128)	;volatile
  6160     0CCF                     l360:
  6161     0CCF  0008               	return
  6162     0CD0                     __end_of_EUSART_Initialize:
  6163                           
  6164                           	psect	text26
  6165     0A76                     __ptext26:	
  6166 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6167 ;; Defined at:
  6168 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6171 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;		None
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6183 ;;      Params:         0       0       2       0       0       0
  6184 ;;      Locals:         0       0       0       0       0       0
  6185 ;;      Temps:          0       0       0       0       0       0
  6186 ;;      Totals:         0       0       2       0       0       0
  6187 ;;Total ram usage:        2 bytes
  6188 ;; Hardware stack levels used: 1
  6189 ;; Hardware stack levels required when called: 7
  6190 ;; This function calls:
  6191 ;;		Nothing
  6192 ;; This function is called by:
  6193 ;;		_EUSART_Initialize
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197     0A76                     _EUSART_SetOverrunErrorHandler:	
  6198                           ;psect for function _EUSART_SetOverrunErrorHandler
  6199                           
  6200     0A76                     l3285:	
  6201                           ;incstack = 0
  6202                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6203                           
  6204                           
  6205                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6206     0A76  0021               	movlb	1	; select bank1
  6207     0A77  083C               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  6208     0A78  00D7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6209     0A79  083B               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  6210     0A7A  00D6               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6211     0A7B                     l402:
  6212     0A7B  0008               	return
  6213     0A7C                     __end_of_EUSART_SetOverrunErrorHandler:
  6214                           
  6215                           	psect	text27
  6216     0A70                     __ptext27:	
  6217 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6218 ;; Defined at:
  6219 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6222 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      void 
  6227 ;; Registers used:
  6228 ;;		wreg
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6234 ;;      Params:         0       0       2       0       0       0
  6235 ;;      Locals:         0       0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0
  6237 ;;      Totals:         0       0       2       0       0       0
  6238 ;;Total ram usage:        2 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; Hardware stack levels required when called: 7
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_EUSART_Initialize
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248     0A70                     _EUSART_SetFramingErrorHandler:	
  6249                           ;psect for function _EUSART_SetFramingErrorHandler
  6250                           
  6251     0A70                     l3283:	
  6252                           ;incstack = 0
  6253                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6254                           
  6255                           
  6256                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  6257     0A70  0021               	movlb	1	; select bank1
  6258     0A71  083C               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  6259     0A72  00D9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  6260     0A73  083B               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  6261     0A74  00D8               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6262     0A75                     l399:
  6263     0A75  0008               	return
  6264     0A76                     __end_of_EUSART_SetFramingErrorHandler:
  6265                           
  6266                           	psect	text28
  6267     0A6A                     __ptext28:	
  6268 ;; *************** function _EUSART_SetErrorHandler *****************
  6269 ;; Defined at:
  6270 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6273 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6285 ;;      Params:         0       0       2       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0
  6288 ;;      Totals:         0       0       2       0       0       0
  6289 ;;Total ram usage:        2 bytes
  6290 ;; Hardware stack levels used: 1
  6291 ;; Hardware stack levels required when called: 7
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_EUSART_Initialize
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299     0A6A                     _EUSART_SetErrorHandler:	
  6300                           ;psect for function _EUSART_SetErrorHandler
  6301                           
  6302     0A6A                     l3287:	
  6303                           ;incstack = 0
  6304                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6305                           
  6306                           
  6307                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6308     0A6A  0021               	movlb	1	; select bank1
  6309     0A6B  083C               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  6310     0A6C  00D5               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  6311     0A6D  083B               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  6312     0A6E  00D4               	movwf	_EUSART_ErrorHandler^(0+128)
  6313     0A6F                     l405:
  6314     0A6F  0008               	return
  6315     0A70                     __end_of_EUSART_SetErrorHandler:
  6316                           
  6317                           	psect	text29
  6318     0AE1                     __ptext29:	
  6319 ;; *************** function _CMP2_Initialize *****************
  6320 ;; Defined at:
  6321 ;;		line 59 in file "mcc_generated_files/cmp2.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		wreg
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6335 ;;      Params:         0       0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0
  6338 ;;      Totals:         0       0       0       0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; Hardware stack levels required when called: 7
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_SYSTEM_Initialize
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349     0AE1                     _CMP2_Initialize:	
  6350                           ;psect for function _CMP2_Initialize
  6351                           
  6352     0AE1                     l3535:	
  6353                           ;incstack = 0
  6354                           ; Regs used in _CMP2_Initialize: [wreg]
  6355                           
  6356                           
  6357                           ;mcc_generated_files/cmp2.c: 66:     PIE2bits.C2IE = 0;
  6358     0AE1  0021               	movlb	1	; select bank1
  6359     0AE2  1312               	bcf	18,6	;volatile
  6360     0AE3                     l3537:
  6361                           
  6362                           ;mcc_generated_files/cmp2.c: 69:     CM2CON0 = 0x84;
  6363     0AE3  3084               	movlw	132
  6364     0AE4  0022               	movlb	2	; select bank2
  6365     0AE5  0093               	movwf	19	;volatile
  6366                           
  6367                           ;mcc_generated_files/cmp2.c: 72:     CM2CON1 = 0xA1;
  6368     0AE6  30A1               	movlw	161
  6369     0AE7  0094               	movwf	20	;volatile
  6370     0AE8                     l3539:
  6371                           
  6372                           ;mcc_generated_files/cmp2.c: 75:     PIR2bits.C2IF = 0;
  6373     0AE8  0020               	movlb	0	; select bank0
  6374     0AE9  1312               	bcf	18,6	;volatile
  6375     0AEA                     l3541:
  6376                           
  6377                           ;mcc_generated_files/cmp2.c: 78:     PIE2bits.C2IE = 1;
  6378     0AEA  0021               	movlb	1	; select bank1
  6379     0AEB  1712               	bsf	18,6	;volatile
  6380     0AEC                     l75:
  6381     0AEC  0008               	return
  6382     0AED                     __end_of_CMP2_Initialize:
  6383                           
  6384                           	psect	text30
  6385     0AD5                     __ptext30:	
  6386 ;; *************** function _CMP1_Initialize *****************
  6387 ;; Defined at:
  6388 ;;		line 59 in file "mcc_generated_files/cmp1.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		wreg
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6402 ;;      Params:         0       0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0       0
  6405 ;;      Totals:         0       0       0       0       0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used: 1
  6408 ;; Hardware stack levels required when called: 7
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_SYSTEM_Initialize
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416     0AD5                     _CMP1_Initialize:	
  6417                           ;psect for function _CMP1_Initialize
  6418                           
  6419     0AD5                     l3581:	
  6420                           ;incstack = 0
  6421                           ; Regs used in _CMP1_Initialize: [wreg]
  6422                           
  6423                           
  6424                           ;mcc_generated_files/cmp1.c: 66:     PIE2bits.C1IE = 0;
  6425     0AD5  0021               	movlb	1	; select bank1
  6426     0AD6  1292               	bcf	18,5	;volatile
  6427     0AD7                     l3583:
  6428                           
  6429                           ;mcc_generated_files/cmp1.c: 69:     CM1CON0 = 0x84;
  6430     0AD7  3084               	movlw	132
  6431     0AD8  0022               	movlb	2	; select bank2
  6432     0AD9  0091               	movwf	17	;volatile
  6433                           
  6434                           ;mcc_generated_files/cmp1.c: 72:     CM1CON1 = 0x60;
  6435     0ADA  3060               	movlw	96
  6436     0ADB  0092               	movwf	18	;volatile
  6437     0ADC                     l3585:
  6438                           
  6439                           ;mcc_generated_files/cmp1.c: 75:     PIR2bits.C1IF = 0;
  6440     0ADC  0020               	movlb	0	; select bank0
  6441     0ADD  1292               	bcf	18,5	;volatile
  6442     0ADE                     l3587:
  6443                           
  6444                           ;mcc_generated_files/cmp1.c: 78:     PIE2bits.C1IE = 1;
  6445     0ADE  0021               	movlb	1	; select bank1
  6446     0ADF  1692               	bsf	18,5	;volatile
  6447     0AE0                     l142:
  6448     0AE0  0008               	return
  6449     0AE1                     __end_of_CMP1_Initialize:
  6450                           
  6451                           	psect	text31
  6452     0B72                     __ptext31:	
  6453 ;; *************** function _CCP4_Initialize *****************
  6454 ;; Defined at:
  6455 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;		None
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1    wreg      void 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0, pclath, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6469 ;;      Params:         0       0       0       0       0       0
  6470 ;;      Locals:         0       0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0
  6472 ;;      Totals:         0       0       0       0       0       0
  6473 ;;Total ram usage:        0 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; Hardware stack levels required when called: 8
  6476 ;; This function calls:
  6477 ;;		_CCP4_SetCallBack
  6478 ;; This function is called by:
  6479 ;;		_SYSTEM_Initialize
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483     0B72                     _CCP4_Initialize:	
  6484                           ;psect for function _CCP4_Initialize
  6485                           
  6486     0B72                     l3731:	
  6487                           ;incstack = 0
  6488                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6489                           
  6490                           
  6491                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  6492     0B72  3004               	movlw	4
  6493     0B73  0026               	movlb	6	; select bank6
  6494     0B74  009A               	movwf	26	;volatile
  6495     0B75                     l3733:
  6496                           
  6497                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  6498     0B75  0198               	clrf	24	;volatile
  6499     0B76                     l3735:
  6500                           
  6501                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  6502     0B76  0199               	clrf	25	;volatile
  6503     0B77                     l3737:
  6504                           
  6505                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  6506     0B77  3039               	movlw	low _CCP4_DefaultCallBack
  6507     0B78  0021               	movlb	1	; select bank1
  6508     0B79  00BB               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  6509     0B7A  300A               	movlw	high _CCP4_DefaultCallBack
  6510     0B7B  00BC               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  6511     0B7C  318A  2264  318B   	fcall	_CCP4_SetCallBack
  6512     0B7F                     l3739:
  6513                           
  6514                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  6515     0B7F  0020               	movlb	0	; select bank0
  6516     0B80  1293               	bcf	19,5	;volatile
  6517     0B81                     l3741:
  6518                           
  6519                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  6520     0B81  0021               	movlb	1	; select bank1
  6521     0B82  1693               	bsf	19,5	;volatile
  6522     0B83                     l641:
  6523     0B83  0008               	return
  6524     0B84                     __end_of_CCP4_Initialize:
  6525                           
  6526                           	psect	text32
  6527     0A64                     __ptext32:	
  6528 ;; *************** function _CCP4_SetCallBack *****************
  6529 ;; Defined at:
  6530 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  6533 ;;		 -> interrupcaoCCP4(1), CCP4_DefaultCallBack(1), 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6545 ;;      Params:         0       0       2       0       0       0
  6546 ;;      Locals:         0       0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0
  6548 ;;      Totals:         0       0       2       0       0       0
  6549 ;;Total ram usage:        2 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; Hardware stack levels required when called: 7
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_CCP4_Initialize
  6556 ;;		_main
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560     0A64                     _CCP4_SetCallBack:	
  6561                           ;psect for function _CCP4_SetCallBack
  6562                           
  6563     0A64                     l3291:	
  6564                           ;incstack = 0
  6565                           ; Regs used in _CCP4_SetCallBack: [wreg]
  6566                           
  6567                           
  6568                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  6569     0A64  0021               	movlb	1	; select bank1
  6570     0A65  083C               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  6571     0A66  00D1               	movwf	(_CCP4_CallBack+1)^(0+128)
  6572     0A67  083B               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  6573     0A68  00D0               	movwf	_CCP4_CallBack^(0+128)
  6574     0A69                     l647:
  6575     0A69  0008               	return
  6576     0A6A                     __end_of_CCP4_SetCallBack:
  6577                           
  6578                           	psect	text33
  6579     0AA7                     __ptext33:	
  6580 ;; *************** function _ADC_Initialize *****************
  6581 ;; Defined at:
  6582 ;;		line 67 in file "mcc_generated_files/adc.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      void 
  6589 ;; Registers used:
  6590 ;;		wreg, status,2
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6596 ;;      Params:         0       0       0       0       0       0
  6597 ;;      Locals:         0       0       0       0       0       0
  6598 ;;      Temps:          0       0       0       0       0       0
  6599 ;;      Totals:         0       0       0       0       0       0
  6600 ;;Total ram usage:        0 bytes
  6601 ;; Hardware stack levels used: 1
  6602 ;; Hardware stack levels required when called: 7
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_SYSTEM_Initialize
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610     0AA7                     _ADC_Initialize:	
  6611                           ;psect for function _ADC_Initialize
  6612                           
  6613     0AA7                     l3725:	
  6614                           ;incstack = 0
  6615                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6616                           
  6617                           
  6618                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC3;
  6619     0AA7  30C3               	movlw	195
  6620     0AA8  0021               	movlb	1	; select bank1
  6621     0AA9  009E               	movwf	30	;volatile
  6622     0AAA                     l3727:
  6623                           
  6624                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  6625     0AAA  019B               	clrf	27	;volatile
  6626     0AAB                     l3729:
  6627                           
  6628                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  6629     0AAB  019C               	clrf	28	;volatile
  6630                           
  6631                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  6632     0AAC  3001               	movlw	1
  6633     0AAD  009D               	movwf	29	;volatile
  6634     0AAE                     l286:
  6635     0AAE  0008               	return
  6636     0AAF                     __end_of_ADC_Initialize:
  6637                           
  6638                           	psect	text34
  6639     0EF0                     __ptext34:	
  6640 ;; *************** function _SPI1_Open *****************
  6641 ;; Defined at:
  6642 ;;		line 72 in file "mcc_generated_files/spi1.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  spi1UniqueCo    1    wreg     enum E358
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  spi1UniqueCo    1    3[BANK1 ] enum E358
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      _Bool 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6656 ;;      Params:         0       0       0       0       0       0
  6657 ;;      Locals:         0       0       1       0       0       0
  6658 ;;      Temps:          0       0       3       0       0       0
  6659 ;;      Totals:         0       0       4       0       0       0
  6660 ;;Total ram usage:        4 bytes
  6661 ;; Hardware stack levels used: 1
  6662 ;; Hardware stack levels required when called: 7
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_main
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670     0EF0                     _SPI1_Open:	
  6671                           ;psect for function _SPI1_Open
  6672                           
  6673                           
  6674                           ;incstack = 0
  6675                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
  6676                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  6677     0EF0  0021               	movlb	1	; select bank1
  6678     0EF1  00BE               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+128)
  6679     0EF2                     l3873:
  6680                           
  6681                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  6682     0EF2  0024               	movlb	4	; select bank4
  6683     0EF3  1A95               	btfsc	21,5	;volatile
  6684     0EF4  2EF6               	goto	u2871
  6685     0EF5  2EF7               	goto	u2870
  6686     0EF6                     u2871:
  6687     0EF6  2F47               	goto	l430
  6688     0EF7                     u2870:
  6689     0EF7                     l3875:
  6690                           
  6691                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  6692     0EF7  0021               	movlb	1	; select bank1
  6693     0EF8  083E               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6694     0EF9  00BB               	movwf	??_SPI1_Open^(0+128)
  6695     0EFA  01BC               	clrf	(??_SPI1_Open^(0+128)+1)
  6696     0EFB  35BB               	lslf	??_SPI1_Open^(0+128),f
  6697     0EFC  0DBC               	rlf	(??_SPI1_Open^(0+128)+1),f
  6698     0EFD  35BB               	lslf	??_SPI1_Open^(0+128),f
  6699     0EFE  0DBC               	rlf	(??_SPI1_Open^(0+128)+1),f
  6700     0EFF  3008               	movlw	low (_spi1_configuration+1)
  6701     0F00  073B               	addwf	??_SPI1_Open^(0+128),w
  6702     0F01  0084               	movwf	4
  6703     0F02  3008               	movlw	high (_spi1_configuration+1)
  6704     0F03  3D3C               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6705     0F04  3880               	iorlw	128
  6706     0F05  0085               	movwf	5
  6707     0F06  0800               	movf	0,w	;code access
  6708     0F07  0024               	movlb	4	; select bank4
  6709     0F08  0094               	movwf	20	;volatile
  6710                           
  6711                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  6712     0F09  0021               	movlb	1	; select bank1
  6713     0F0A  083E               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6714     0F0B  00BB               	movwf	??_SPI1_Open^(0+128)
  6715     0F0C  01BC               	clrf	(??_SPI1_Open^(0+128)+1)
  6716     0F0D  35BB               	lslf	??_SPI1_Open^(0+128),f
  6717     0F0E  0DBC               	rlf	(??_SPI1_Open^(0+128)+1),f
  6718     0F0F  35BB               	lslf	??_SPI1_Open^(0+128),f
  6719     0F10  0DBC               	rlf	(??_SPI1_Open^(0+128)+1),f
  6720     0F11  3007               	movlw	low _spi1_configuration
  6721     0F12  073B               	addwf	??_SPI1_Open^(0+128),w
  6722     0F13  0084               	movwf	4
  6723     0F14  3008               	movlw	high _spi1_configuration
  6724     0F15  3D3C               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6725     0F16  3880               	iorlw	128
  6726     0F17  0085               	movwf	5
  6727     0F18  0800               	movf	0,w	;code access
  6728     0F19  0024               	movlb	4	; select bank4
  6729     0F1A  0095               	movwf	21	;volatile
  6730     0F1B                     l3877:
  6731                           
  6732                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  6733     0F1B  0196               	clrf	22	;volatile
  6734     0F1C                     l3879:
  6735                           
  6736                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  6737     0F1C  0021               	movlb	1	; select bank1
  6738     0F1D  083E               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6739     0F1E  00BB               	movwf	??_SPI1_Open^(0+128)
  6740     0F1F  01BC               	clrf	(??_SPI1_Open^(0+128)+1)
  6741     0F20  35BB               	lslf	??_SPI1_Open^(0+128),f
  6742     0F21  0DBC               	rlf	(??_SPI1_Open^(0+128)+1),f
  6743     0F22  35BB               	lslf	??_SPI1_Open^(0+128),f
  6744     0F23  0DBC               	rlf	(??_SPI1_Open^(0+128)+1),f
  6745     0F24  3009               	movlw	low (_spi1_configuration+2)
  6746     0F25  073B               	addwf	??_SPI1_Open^(0+128),w
  6747     0F26  0084               	movwf	4
  6748     0F27  3008               	movlw	high (_spi1_configuration+2)
  6749     0F28  3D3C               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6750     0F29  3880               	iorlw	128
  6751     0F2A  0085               	movwf	5
  6752     0F2B  0800               	movf	0,w	;code access
  6753     0F2C  0024               	movlb	4	; select bank4
  6754     0F2D  0092               	movwf	18	;volatile
  6755     0F2E                     l3881:
  6756                           
  6757                           ;mcc_generated_files/spi1.c: 80:         TRISBbits.TRISB4 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  6758     0F2E  0021               	movlb	1	; select bank1
  6759     0F2F  083E               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6760     0F30  00BB               	movwf	??_SPI1_Open^(0+128)
  6761     0F31  01BC               	clrf	(??_SPI1_Open^(0+128)+1)
  6762     0F32  35BB               	lslf	??_SPI1_Open^(0+128),f
  6763     0F33  0DBC               	rlf	(??_SPI1_Open^(0+128)+1),f
  6764     0F34  35BB               	lslf	??_SPI1_Open^(0+128),f
  6765     0F35  0DBC               	rlf	(??_SPI1_Open^(0+128)+1),f
  6766     0F36  300A               	movlw	low (_spi1_configuration+3)
  6767     0F37  073B               	addwf	??_SPI1_Open^(0+128),w
  6768     0F38  0084               	movwf	4
  6769     0F39  3008               	movlw	high (_spi1_configuration+3)
  6770     0F3A  3D3C               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6771     0F3B  3880               	iorlw	128
  6772     0F3C  0085               	movwf	5
  6773     0F3D  0800               	movf	0,w	;code access
  6774     0F3E  00BD               	movwf	(??_SPI1_Open+2)^(0+128)
  6775     0F3F  0EBD               	swapf	(??_SPI1_Open+2)^(0+128),f
  6776     0F40  080D               	movf	13,w	;volatile
  6777     0F41  063D               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6778     0F42  39EF               	andlw	-17
  6779     0F43  063D               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6780     0F44  008D               	movwf	13	;volatile
  6781     0F45                     l3883:
  6782                           
  6783                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  6784     0F45  0024               	movlb	4	; select bank4
  6785     0F46  1695               	bsf	21,5	;volatile
  6786     0F47                     l430:
  6787     0F47  0008               	return
  6788     0F48                     __end_of_SPI1_Open:
  6789                           
  6790                           	psect	text35
  6791     0A53                     __ptext35:	
  6792 ;; *************** function _EUSART_is_rx_ready *****************
  6793 ;; Defined at:
  6794 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;		None
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;		None
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      _Bool 
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6808 ;;      Params:         0       0       0       0       0       0
  6809 ;;      Locals:         0       0       0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0
  6811 ;;      Totals:         0       0       0       0       0       0
  6812 ;;Total ram usage:        0 bytes
  6813 ;; Hardware stack levels used: 1
  6814 ;; Hardware stack levels required when called: 7
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		_main
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822     0A53                     _EUSART_is_rx_ready:	
  6823                           ;psect for function _EUSART_is_rx_ready
  6824                           
  6825     0A53                     l3857:	
  6826                           ;incstack = 0
  6827                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6828                           
  6829                           
  6830                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  6831     0A53  0020               	movlb	0	; select bank0
  6832     0A54  0E11               	swapf	17,w	;volatile
  6833     0A55  0C89               	rrf	9,f
  6834     0A56  3901               	andlw	1
  6835     0A57                     l368:
  6836     0A57  0008               	return
  6837     0A58                     __end_of_EUSART_is_rx_ready:
  6838                           
  6839                           	psect	text36
  6840     0B41                     __ptext36:	
  6841 ;; *************** function _EUSART_Read *****************
  6842 ;; Defined at:
  6843 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      unsigned char 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6857 ;;      Params:         0       0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 7
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_main
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871     0B41                     _EUSART_Read:	
  6872                           ;psect for function _EUSART_Read
  6873                           
  6874     0B41                     l3861:	
  6875                           ;incstack = 0
  6876                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6877                           
  6878     0B41                     l377:	
  6879                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6880                           
  6881                           
  6882                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  6883     0B41  0020               	movlb	0	; select bank0
  6884     0B42  1E91               	btfss	17,5	;volatile
  6885     0B43  2B45               	goto	u2851
  6886     0B44  2B46               	goto	u2850
  6887     0B45                     u2851:
  6888     0B45  2B41               	goto	l377
  6889     0B46                     u2850:
  6890     0B46                     l3863:
  6891                           
  6892                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6893     0B46  0021               	movlb	1	; select bank1
  6894     0B47  01B0               	clrf	_eusartRxLastError^(0+128)	;volatile
  6895     0B48                     l3865:
  6896                           
  6897                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  6898     0B48  0023               	movlb	3	; select bank3
  6899     0B49  1C9D               	btfss	29,1	;volatile
  6900     0B4A  2B4C               	goto	u2861
  6901     0B4B  2B4D               	goto	u2860
  6902     0B4C                     u2861:
  6903     0B4C  2B4F               	goto	l3869
  6904     0B4D                     u2860:
  6905     0B4D                     l3867:
  6906                           
  6907                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  6908     0B4D  121D               	bcf	29,4	;volatile
  6909                           
  6910                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  6911     0B4E  161D               	bsf	29,4	;volatile
  6912     0B4F                     l3869:
  6913                           
  6914                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  6915     0B4F  0819               	movf	25,w	;volatile
  6916     0B50                     l381:
  6917     0B50  0008               	return
  6918     0B51                     __end_of_EUSART_Read:
  6919                           
  6920                           	psect	intentry
  6921     0004                     __pintentry:	
  6922 ;; *************** function _INTERRUPT_InterruptManager *****************
  6923 ;; Defined at:
  6924 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;		None
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6938 ;;      Params:         0       0       0       0       0       0
  6939 ;;      Locals:         0       0       0       0       0       0
  6940 ;;      Temps:          0       0       0       0       0       0
  6941 ;;      Totals:         0       0       0       0       0       0
  6942 ;;Total ram usage:        0 bytes
  6943 ;; Hardware stack levels used: 1
  6944 ;; Hardware stack levels required when called: 6
  6945 ;; This function calls:
  6946 ;;		_CCP4_CaptureISR
  6947 ;;		_CMP1_ISR
  6948 ;;		_CMP2_ISR
  6949 ;;		_PIN_MANAGER_IOC
  6950 ;;		_TMR0_ISR
  6951 ;;		_TMR4_ISR
  6952 ;; This function is called by:
  6953 ;;		Interrupt level 1
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957     0004                     _INTERRUPT_InterruptManager:
  6958                           
  6959                           ;incstack = 0
  6960     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6961                           
  6962                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6963     0005  3180               	pagesel	$
  6964     0006                     i1l4021:
  6965                           
  6966                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  6967     0006  1D8B               	btfss	11,3	;volatile
  6968     0007  2809               	goto	u303_21
  6969     0008  280A               	goto	u303_20
  6970     0009                     u303_21:
  6971     0009  2811               	goto	i1l4027
  6972     000A                     u303_20:
  6973     000A                     i1l4023:
  6974     000A  1C0B               	btfss	11,0	;volatile
  6975     000B  280D               	goto	u304_21
  6976     000C  280E               	goto	u304_20
  6977     000D                     u304_21:
  6978     000D  2811               	goto	i1l4027
  6979     000E                     u304_20:
  6980     000E                     i1l4025:
  6981                           
  6982                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6983     000E  318B  2361  3180   	fcall	_PIN_MANAGER_IOC
  6984     0011                     i1l4027:
  6985                           
  6986                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6987     0011  1E8B               	btfss	11,5	;volatile
  6988     0012  2814               	goto	u305_21
  6989     0013  2815               	goto	u305_20
  6990     0014                     u305_21:
  6991     0014  281C               	goto	i1l4033
  6992     0015                     u305_20:
  6993     0015                     i1l4029:
  6994     0015  1D0B               	btfss	11,2	;volatile
  6995     0016  2818               	goto	u306_21
  6996     0017  2819               	goto	u306_20
  6997     0018                     u306_21:
  6998     0018  281C               	goto	i1l4033
  6999     0019                     u306_20:
  7000     0019                     i1l4031:
  7001                           
  7002                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  7003     0019  318C  2401  3180   	fcall	_TMR0_ISR
  7004     001C                     i1l4033:
  7005                           
  7006                           ;mcc_generated_files/interrupt_manager.c: 63:     if(INTCONbits.PEIE == 1)
  7007     001C  1F0B               	btfss	11,6	;volatile
  7008     001D  281F               	goto	u307_21
  7009     001E  2820               	goto	u307_20
  7010     001F                     u307_21:
  7011     001F  2854               	goto	i1l500
  7012     0020                     u307_20:
  7013     0020                     i1l4035:
  7014                           
  7015                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE2bits.C2IE == 1 && PIR2bits.C2IF == 1)
  7016     0020  0021               	movlb	1	; select bank1
  7017     0021  1F12               	btfss	18,6	;volatile
  7018     0022  2824               	goto	u308_21
  7019     0023  2825               	goto	u308_20
  7020     0024                     u308_21:
  7021     0024  282D               	goto	i1l4041
  7022     0025                     u308_20:
  7023     0025                     i1l4037:
  7024     0025  0020               	movlb	0	; select bank0
  7025     0026  1F12               	btfss	18,6	;volatile
  7026     0027  2829               	goto	u309_21
  7027     0028  282A               	goto	u309_20
  7028     0029                     u309_21:
  7029     0029  282D               	goto	i1l4041
  7030     002A                     u309_20:
  7031     002A                     i1l4039:
  7032                           
  7033                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             CMP2_ISR();
  7034     002A  318A  225E  3180   	fcall	_CMP2_ISR
  7035     002D                     i1l4041:
  7036                           
  7037                           ;mcc_generated_files/interrupt_manager.c: 69:         if(PIE2bits.C1IE == 1 && PIR2bits.
      +                          C1IF == 1)
  7038     002D  0021               	movlb	1	; select bank1
  7039     002E  1E92               	btfss	18,5	;volatile
  7040     002F  2831               	goto	u310_21
  7041     0030  2832               	goto	u310_20
  7042     0031                     u310_21:
  7043     0031  283A               	goto	i1l4047
  7044     0032                     u310_20:
  7045     0032                     i1l4043:
  7046     0032  0020               	movlb	0	; select bank0
  7047     0033  1E92               	btfss	18,5	;volatile
  7048     0034  2836               	goto	u311_21
  7049     0035  2837               	goto	u311_20
  7050     0036                     u311_21:
  7051     0036  283A               	goto	i1l4047
  7052     0037                     u311_20:
  7053     0037                     i1l4045:
  7054                           
  7055                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP1_ISR();
  7056     0037  318A  2258  3180   	fcall	_CMP1_ISR
  7057     003A                     i1l4047:
  7058                           
  7059                           ;mcc_generated_files/interrupt_manager.c: 73:         if(PIE3bits.CCP4IE == 1 && PIR3bit
      +                          s.CCP4IF == 1)
  7060     003A  0021               	movlb	1	; select bank1
  7061     003B  1E93               	btfss	19,5	;volatile
  7062     003C  283E               	goto	u312_21
  7063     003D  283F               	goto	u312_20
  7064     003E                     u312_21:
  7065     003E  2847               	goto	i1l4053
  7066     003F                     u312_20:
  7067     003F                     i1l4049:
  7068     003F  0020               	movlb	0	; select bank0
  7069     0040  1E93               	btfss	19,5	;volatile
  7070     0041  2843               	goto	u313_21
  7071     0042  2844               	goto	u313_20
  7072     0043                     u313_21:
  7073     0043  2847               	goto	i1l4053
  7074     0044                     u313_20:
  7075     0044                     i1l4051:
  7076                           
  7077                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CCP4_CaptureISR();
  7078     0044  318B  23AA  3180   	fcall	_CCP4_CaptureISR
  7079     0047                     i1l4053:
  7080                           
  7081                           ;mcc_generated_files/interrupt_manager.c: 77:         if(PIE3bits.TMR4IE == 1 && PIR3bit
      +                          s.TMR4IF == 1)
  7082     0047  0021               	movlb	1	; select bank1
  7083     0048  1C93               	btfss	19,1	;volatile
  7084     0049  284B               	goto	u314_21
  7085     004A  284C               	goto	u314_20
  7086     004B                     u314_21:
  7087     004B  2854               	goto	i1l500
  7088     004C                     u314_20:
  7089     004C                     i1l4055:
  7090     004C  0020               	movlb	0	; select bank0
  7091     004D  1C93               	btfss	19,1	;volatile
  7092     004E  2850               	goto	u315_21
  7093     004F  2851               	goto	u315_20
  7094     0050                     u315_21:
  7095     0050  2854               	goto	i1l500
  7096     0051                     u315_20:
  7097     0051                     i1l4057:
  7098                           
  7099                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR4_ISR();
  7100     0051  318B  23D4  3180   	fcall	_TMR4_ISR
  7101     0054                     i1l500:
  7102     0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7103     0055  0009               	retfie
  7104     0056                     __end_of_INTERRUPT_InterruptManager:
  7105                           
  7106                           	psect	text38
  7107     0BD4                     __ptext38:	
  7108 ;; *************** function _TMR4_ISR *****************
  7109 ;; Defined at:
  7110 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;		None
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;		None
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  1    wreg      void 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7124 ;;      Params:         0       0       0       0       0       0
  7125 ;;      Locals:         0       0       0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0       0
  7127 ;;      Totals:         0       0       0       0       0       0
  7128 ;;Total ram usage:        0 bytes
  7129 ;; Hardware stack levels used: 1
  7130 ;; Hardware stack levels required when called: 3
  7131 ;; This function calls:
  7132 ;;		_TMR4_CallBack
  7133 ;; This function is called by:
  7134 ;;		_INTERRUPT_InterruptManager
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138     0BD4                     _TMR4_ISR:	
  7139                           ;psect for function _TMR4_ISR
  7140                           
  7141     0BD4                     i1l3901:	
  7142                           ;incstack = 0
  7143                           ; Regs used in _TMR4_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7144                           
  7145                           
  7146                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  7147     0BD4  0020               	movlb	0	; select bank0
  7148     0BD5  1093               	bcf	19,1	;volatile
  7149     0BD6                     i1l3903:
  7150                           
  7151                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 2)
  7152     0BD6  3001               	movlw	1
  7153     0BD7  07DE               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  7154     0BD8  3000               	movlw	0
  7155     0BD9  3DDF               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  7156     0BDA  3000               	movlw	0
  7157     0BDB  025F               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  7158     0BDC  3002               	movlw	2
  7159     0BDD  1903               	skipnz
  7160     0BDE  025E               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  7161     0BDF  1C03               	skipc
  7162     0BE0  2BE2               	goto	u289_21
  7163     0BE1  2BE3               	goto	u289_20
  7164     0BE2                     u289_21:
  7165     0BE2  2BE9               	goto	i1l691
  7166     0BE3                     u289_20:
  7167     0BE3                     i1l3905:
  7168                           
  7169                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  7170     0BE3  318A  22FA  318B   	fcall	_TMR4_CallBack
  7171     0BE6                     i1l3907:
  7172                           
  7173                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  7174     0BE6  0020               	movlb	0	; select bank0
  7175     0BE7  01DE               	clrf	TMR4_ISR@CountCallBack	;volatile
  7176     0BE8  01DF               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  7177     0BE9                     i1l691:
  7178     0BE9  0008               	return
  7179     0BEA                     __end_of_TMR4_ISR:
  7180                           
  7181                           	psect	text39
  7182     0AFA                     __ptext39:	
  7183 ;; *************** function _TMR4_CallBack *****************
  7184 ;; Defined at:
  7185 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;		None
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;		None
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  1    wreg      void 
  7192 ;; Registers used:
  7193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7199 ;;      Params:         0       0       0       0       0       0
  7200 ;;      Locals:         0       0       0       0       0       0
  7201 ;;      Temps:          0       0       0       0       0       0
  7202 ;;      Totals:         0       0       0       0       0       0
  7203 ;;Total ram usage:        0 bytes
  7204 ;; Hardware stack levels used: 1
  7205 ;; Hardware stack levels required when called: 2
  7206 ;; This function calls:
  7207 ;;		NULL
  7208 ;;		_TMR4_DefaultInterruptHandler
  7209 ;;		_controleMovimento
  7210 ;; This function is called by:
  7211 ;;		_TMR4_ISR
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215     0AFA                     _TMR4_CallBack:	
  7216                           ;psect for function _TMR4_CallBack
  7217                           
  7218     0AFA                     i1l3775:	
  7219                           ;incstack = 0
  7220                           ; Regs used in _TMR4_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7221                           
  7222                           
  7223                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  7224     0AFA  0021               	movlb	1	; select bank1
  7225     0AFB  084E               	movf	_TMR4_InterruptHandler^(0+128),w
  7226     0AFC  044F               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  7227     0AFD  1903               	btfsc	3,2
  7228     0AFE  2B00               	goto	u278_21
  7229     0AFF  2B01               	goto	u278_20
  7230     0B00                     u278_21:
  7231     0B00  2B06               	goto	i1l695
  7232     0B01                     u278_20:
  7233     0B01                     i1l3777:
  7234                           
  7235                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  7236     0B01  084F               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  7237     0B02  008A               	movwf	10
  7238     0B03  084E               	movf	_TMR4_InterruptHandler^(0+128),w
  7239     0B04  000A               	callw
  7240     0B05  318A               	pagesel	$
  7241     0B06                     i1l695:
  7242     0B06  0008               	return
  7243     0B07                     __end_of_TMR4_CallBack:
  7244                           
  7245                           	psect	text40
  7246     0002                     __ptext40:	
  7247 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  7248 ;; Defined at:
  7249 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;		None
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;		None
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  1    wreg      void 
  7256 ;; Registers used:
  7257 ;;		None
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7263 ;;      Params:         0       0       0       0       0       0
  7264 ;;      Locals:         0       0       0       0       0       0
  7265 ;;      Temps:          0       0       0       0       0       0
  7266 ;;      Totals:         0       0       0       0       0       0
  7267 ;;Total ram usage:        0 bytes
  7268 ;; Hardware stack levels used: 1
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_TMR4_Initialize
  7273 ;;		_TMR4_CallBack
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277     0002                     _TMR4_DefaultInterruptHandler:	
  7278                           ;psect for function _TMR4_DefaultInterruptHandler
  7279                           
  7280     0002                     i1l701:	
  7281                           ;incstack = 0
  7282                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  7283                           
  7284     0002  0008               	return
  7285     0003                     __end_of_TMR4_DefaultInterruptHandler:
  7286                           
  7287                           	psect	text41
  7288     0E45                     __ptext41:	
  7289 ;; *************** function _controleMovimento *****************
  7290 ;; Defined at:
  7291 ;;		line 202 in file "main.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;		None
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;		None
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      void 
  7298 ;; Registers used:
  7299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7305 ;;      Params:         0       0       0       0       0       0
  7306 ;;      Locals:         0       0       0       0       0       0
  7307 ;;      Temps:          2       0       0       0       0       0
  7308 ;;      Totals:         2       0       0       0       0       0
  7309 ;;Total ram usage:        2 bytes
  7310 ;; Hardware stack levels used: 1
  7311 ;; Hardware stack levels required when called: 1
  7312 ;; This function calls:
  7313 ;;		_PWM3_LoadDutyValue
  7314 ;;		_TMR4_StopTimer
  7315 ;; This function is called by:
  7316 ;;		_main
  7317 ;;		_TMR4_CallBack
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321     0E45                     _controleMovimento:	
  7322                           ;psect for function _controleMovimento
  7323                           
  7324     0E45                     i1l3327:	
  7325                           ;incstack = 0
  7326                           ; Regs used in _controleMovimento: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7327                           
  7328                           
  7329                           ;main.c: 203:     static uint8_t cont = 0;;main.c: 204:     switch(mov){
  7330     0E45  2E73               	goto	i1l3355
  7331     0E46                     i1l3329:
  7332                           
  7333                           ;main.c: 206:             PWM3_LoadDutyValue(0);
  7334     0E46  3000               	movlw	0
  7335     0E47  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7336     0E48  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7337     0E49  318B  23EA  318E   	fcall	_PWM3_LoadDutyValue
  7338     0E4C                     i1l3331:
  7339                           
  7340                           ;main.c: 207:             cont = 0;
  7341     0E4C  01FD               	clrf	controleMovimento@cont
  7342                           
  7343                           ;main.c: 208:             break;
  7344     0E4D  2E8A               	goto	i1l3357
  7345     0E4E                     i1l3333:
  7346                           
  7347                           ;main.c: 210:             if (cont >=4){
  7348     0E4E  3004               	movlw	4
  7349     0E4F  027D               	subwf	controleMovimento@cont,w
  7350     0E50  1C03               	skipc
  7351     0E51  2E53               	goto	u228_21
  7352     0E52  2E54               	goto	u228_20
  7353     0E53                     u228_21:
  7354     0E53  2E57               	goto	i1l3339
  7355     0E54                     u228_20:
  7356     0E54                     i1l3335:
  7357                           
  7358                           ;main.c: 212:                 mov = RetornaS0;
  7359     0E54  3003               	movlw	3
  7360     0E55  00B7               	movwf	_mov^(0+128)
  7361     0E56  2E4C               	goto	i1l3331
  7362     0E57                     i1l3339:
  7363                           
  7364                           ;main.c: 215:                 cont++;
  7365     0E57  3001               	movlw	1
  7366     0E58  00F4               	movwf	??_controleMovimento
  7367     0E59  0874               	movf	??_controleMovimento,w
  7368     0E5A  07FD               	addwf	controleMovimento@cont,f
  7369     0E5B  2E8A               	goto	i1l3357
  7370     0E5C                     i1l3341:
  7371                           
  7372                           ;main.c: 219:             PWM3_LoadDutyValue(500);
  7373     0E5C  30F4               	movlw	244
  7374     0E5D  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7375     0E5E  3001               	movlw	1
  7376     0E5F  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7377     0E60  318B  23EA  318E   	fcall	_PWM3_LoadDutyValue
  7378     0E63                     i1l3343:
  7379                           
  7380                           ;main.c: 220:             TMR4_StopTimer();
  7381     0E63  318A  2240  318E   	fcall	_TMR4_StopTimer
  7382     0E66  2E4C               	goto	i1l3331
  7383     0E67                     i1l3347:
  7384                           
  7385                           ;main.c: 224:             PWM3_LoadDutyValue(500);
  7386     0E67  30F4               	movlw	244
  7387     0E68  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7388     0E69  3001               	movlw	1
  7389     0E6A  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7390     0E6B  318B  23EA  318E   	fcall	_PWM3_LoadDutyValue
  7391     0E6E                     i1l3349:
  7392                           
  7393                           ;main.c: 225:             cont = 0;
  7394     0E6E  01FD               	clrf	controleMovimento@cont
  7395     0E6F                     i1l3351:
  7396                           
  7397                           ;main.c: 226:             TMR4_StopTimer();
  7398     0E6F  318A  2240  318E   	fcall	_TMR4_StopTimer
  7399                           
  7400                           ;main.c: 227:             break;
  7401     0E72  2E8A               	goto	i1l3357
  7402     0E73                     i1l3355:
  7403     0E73  0021               	movlb	1	; select bank1
  7404     0E74  0837               	movf	_mov^(0+128),w
  7405     0E75  00F4               	movwf	??_controleMovimento
  7406     0E76  01F5               	clrf	??_controleMovimento+1
  7407                           
  7408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7409                           ; Switch size 1, requested type "simple"
  7410                           ; Number of cases is 1, Range of values is 0 to 0
  7411                           ; switch strategies available:
  7412                           ; Name         Instructions Cycles
  7413                           ; simple_byte            4     3 (average)
  7414                           ; direct_byte            8     6 (fixed)
  7415                           ; jumptable            260     6 (fixed)
  7416                           ;	Chosen strategy is simple_byte
  7417     0E77  0875               	movf	??_controleMovimento+1,w
  7418     0E78  3A00               	xorlw	0	; case 0
  7419     0E79  1903               	skipnz
  7420     0E7A  2E7C               	goto	i1l4181
  7421     0E7B  2E8A               	goto	i1l3357
  7422     0E7C                     i1l4181:
  7423                           
  7424                           ; Switch size 1, requested type "simple"
  7425                           ; Number of cases is 4, Range of values is 0 to 3
  7426                           ; switch strategies available:
  7427                           ; Name         Instructions Cycles
  7428                           ; simple_byte           13     7 (average)
  7429                           ; direct_byte           14     6 (fixed)
  7430                           ; jumptable            260     6 (fixed)
  7431                           ;	Chosen strategy is simple_byte
  7432     0E7C  0874               	movf	??_controleMovimento,w
  7433     0E7D  3A00               	xorlw	0	; case 0
  7434     0E7E  1903               	skipnz
  7435     0E7F  2E46               	goto	i1l3329
  7436     0E80  3A01               	xorlw	1	; case 1
  7437     0E81  1903               	skipnz
  7438     0E82  2E4E               	goto	i1l3333
  7439     0E83  3A03               	xorlw	3	; case 2
  7440     0E84  1903               	skipnz
  7441     0E85  2E5C               	goto	i1l3341
  7442     0E86  3A01               	xorlw	1	; case 3
  7443     0E87  1903               	skipnz
  7444     0E88  2E67               	goto	i1l3347
  7445     0E89  2E8A               	goto	i1l3357
  7446     0E8A                     i1l3357:
  7447                           
  7448                           ;main.c: 230:     if(destinoSub != 0 ){
  7449     0E8A  0021               	movlb	1	; select bank1
  7450     0E8B  0832               	movf	_destinoSub^(0+128),w
  7451     0E8C  1903               	btfsc	3,2
  7452     0E8D  2E8F               	goto	u229_21
  7453     0E8E  2E90               	goto	u229_20
  7454     0E8F                     u229_21:
  7455     0E8F  2E95               	goto	i1l3361
  7456     0E90                     u229_20:
  7457     0E90                     i1l3359:
  7458                           
  7459                           ;main.c: 232:         subindo = 1;
  7460     0E90  01DE               	clrf	_subindo^(0+128)
  7461     0E91  0ADE               	incf	_subindo^(0+128),f
  7462     0E92                     i1l857:	
  7463                           ;main.c: 233:         do { LATAbits.LATA7 = 1; } while(0);
  7464                           
  7465     0E92  0022               	movlb	2	; select bank2
  7466     0E93  178C               	bsf	12,7	;volatile
  7467     0E94  2E98               	goto	i1l862
  7468     0E95                     i1l3361:
  7469                           
  7470                           ;main.c: 236:         subindo = 0;
  7471     0E95  01DE               	clrf	_subindo^(0+128)
  7472     0E96                     i1l3363:
  7473     0E96  0022               	movlb	2	; select bank2
  7474     0E97  138C               	bcf	12,7	;volatile
  7475     0E98                     i1l862:
  7476     0E98  0008               	return
  7477     0E99                     __end_of_controleMovimento:
  7478                           
  7479                           	psect	text42
  7480     0A40                     __ptext42:	
  7481 ;; *************** function _TMR4_StopTimer *****************
  7482 ;; Defined at:
  7483 ;;		line 93 in file "mcc_generated_files/tmr4.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;		None
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;		None
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		None
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7497 ;;      Params:         0       0       0       0       0       0
  7498 ;;      Locals:         0       0       0       0       0       0
  7499 ;;      Temps:          0       0       0       0       0       0
  7500 ;;      Totals:         0       0       0       0       0       0
  7501 ;;Total ram usage:        0 bytes
  7502 ;; Hardware stack levels used: 1
  7503 ;; This function calls:
  7504 ;;		Nothing
  7505 ;; This function is called by:
  7506 ;;		_controleMovimento
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510     0A40                     _TMR4_StopTimer:	
  7511                           ;psect for function _TMR4_StopTimer
  7512                           
  7513     0A40                     i1l3023:	
  7514                           ;incstack = 0
  7515                           ; Regs used in _TMR4_StopTimer: []
  7516                           
  7517                           
  7518                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
  7519     0A40  0028               	movlb	8	; select bank8
  7520     0A41  1117               	bcf	23,2	;volatile
  7521     0A42                     i1l676:
  7522     0A42  0008               	return
  7523     0A43                     __end_of_TMR4_StopTimer:
  7524                           
  7525                           	psect	text43
  7526     0C01                     __ptext43:	
  7527 ;; *************** function _TMR0_ISR *****************
  7528 ;; Defined at:
  7529 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;		None
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;		None
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  1    wreg      void 
  7536 ;; Registers used:
  7537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7543 ;;      Params:         0       0       0       0       0       0
  7544 ;;      Locals:         0       0       0       0       0       0
  7545 ;;      Temps:          0       0       0       0       0       0
  7546 ;;      Totals:         0       0       0       0       0       0
  7547 ;;Total ram usage:        0 bytes
  7548 ;; Hardware stack levels used: 1
  7549 ;; Hardware stack levels required when called: 4
  7550 ;; This function calls:
  7551 ;;		_TMR0_CallBack
  7552 ;; This function is called by:
  7553 ;;		_INTERRUPT_InterruptManager
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557     0C01                     _TMR0_ISR:	
  7558                           ;psect for function _TMR0_ISR
  7559                           
  7560     0C01                     i1l3887:	
  7561                           ;incstack = 0
  7562                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7563                           
  7564                           
  7565                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  7566     0C01  110B               	bcf	11,2	;volatile
  7567     0C02                     i1l3889:
  7568                           
  7569                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  7570     0C02  0020               	movlb	0	; select bank0
  7571     0C03  0868               	movf	_timer0ReloadVal,w	;volatile
  7572     0C04  0095               	movwf	21	;volatile
  7573                           
  7574                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 5)
  7575     0C05  3001               	movlw	1
  7576     0C06  07E0               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  7577     0C07  3000               	movlw	0
  7578     0C08  3DE1               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  7579     0C09  3000               	movlw	0
  7580     0C0A  0261               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  7581     0C0B  3005               	movlw	5
  7582     0C0C  1903               	skipnz
  7583     0C0D  0260               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  7584     0C0E  1C03               	skipc
  7585     0C0F  2C11               	goto	u288_21
  7586     0C10  2C12               	goto	u288_20
  7587     0C11                     u288_21:
  7588     0C11  2C18               	goto	i1l611
  7589     0C12                     u288_20:
  7590     0C12                     i1l3891:
  7591                           
  7592                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  7593     0C12  318A  22ED  318C   	fcall	_TMR0_CallBack
  7594     0C15                     i1l3893:
  7595                           
  7596                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  7597     0C15  0020               	movlb	0	; select bank0
  7598     0C16  01E0               	clrf	TMR0_ISR@CountCallBack	;volatile
  7599     0C17  01E1               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  7600     0C18                     i1l611:
  7601     0C18  0008               	return
  7602     0C19                     __end_of_TMR0_ISR:
  7603                           
  7604                           	psect	text44
  7605     0AED                     __ptext44:	
  7606 ;; *************** function _TMR0_CallBack *****************
  7607 ;; Defined at:
  7608 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;		None
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;		None
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  1    wreg      void 
  7615 ;; Registers used:
  7616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7622 ;;      Params:         0       0       0       0       0       0
  7623 ;;      Locals:         0       0       0       0       0       0
  7624 ;;      Temps:          0       0       0       0       0       0
  7625 ;;      Totals:         0       0       0       0       0       0
  7626 ;;Total ram usage:        0 bytes
  7627 ;; Hardware stack levels used: 1
  7628 ;; Hardware stack levels required when called: 3
  7629 ;; This function calls:
  7630 ;;		NULL
  7631 ;;		_TMR0_DefaultInterruptHandler
  7632 ;;		_sendInfo
  7633 ;; This function is called by:
  7634 ;;		_TMR0_ISR
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638     0AED                     _TMR0_CallBack:	
  7639                           ;psect for function _TMR0_CallBack
  7640                           
  7641     0AED                     i1l3767:	
  7642                           ;incstack = 0
  7643                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7644                           
  7645                           
  7646                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  7647     0AED  0021               	movlb	1	; select bank1
  7648     0AEE  0852               	movf	_TMR0_InterruptHandler^(0+128),w
  7649     0AEF  0453               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  7650     0AF0  1903               	btfsc	3,2
  7651     0AF1  2AF3               	goto	u277_21
  7652     0AF2  2AF4               	goto	u277_20
  7653     0AF3                     u277_21:
  7654     0AF3  2AF9               	goto	i1l615
  7655     0AF4                     u277_20:
  7656     0AF4                     i1l3769:
  7657                           
  7658                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  7659     0AF4  0853               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  7660     0AF5  008A               	movwf	10
  7661     0AF6  0852               	movf	_TMR0_InterruptHandler^(0+128),w
  7662     0AF7  000A               	callw
  7663     0AF8  318A               	pagesel	$
  7664     0AF9                     i1l615:
  7665     0AF9  0008               	return
  7666     0AFA                     __end_of_TMR0_CallBack:
  7667                           
  7668                           	psect	text45
  7669     0A3C                     __ptext45:	
  7670 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7671 ;; Defined at:
  7672 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		None
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7686 ;;      Params:         0       0       0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0       0
  7689 ;;      Totals:         0       0       0       0       0       0
  7690 ;;Total ram usage:        0 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_TMR0_Initialize
  7696 ;;		_TMR0_CallBack
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700     0A3C                     _TMR0_DefaultInterruptHandler:	
  7701                           ;psect for function _TMR0_DefaultInterruptHandler
  7702                           
  7703     0A3C                     i1l621:	
  7704                           ;incstack = 0
  7705                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7706                           
  7707     0A3C  0008               	return
  7708     0A3D                     __end_of_TMR0_DefaultInterruptHandler:
  7709                           
  7710                           	psect	text46
  7711     02AD                     __ptext46:	
  7712 ;; *************** function _sendInfo *****************
  7713 ;; Defined at:
  7714 ;;		line 92 in file "main.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;		None
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  bcd             2   56[BANK0 ] struct .
  7719 ;;  velocidade      2   54[BANK0 ] unsigned short 
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  1    wreg      void 
  7722 ;; Registers used:
  7723 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7729 ;;      Params:         0       0       0       0       0       0
  7730 ;;      Locals:         0       4       0       0       0       0
  7731 ;;      Temps:          0       2       0       0       0       0
  7732 ;;      Totals:         0       6       0       0       0       0
  7733 ;;Total ram usage:        6 bytes
  7734 ;; Hardware stack levels used: 1
  7735 ;; Hardware stack levels required when called: 2
  7736 ;; This function calls:
  7737 ;;		_ADC_GetConversion
  7738 ;;		_EUSART_Write
  7739 ;;		___flmul
  7740 ;;		___fltol
  7741 ;;		___wmul
  7742 ;;		_bin2bcd
  7743 ;; This function is called by:
  7744 ;;		_main
  7745 ;;		_TMR0_CallBack
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749     02AD                     _sendInfo:	
  7750                           ;psect for function _sendInfo
  7751                           
  7752     02AD                     i1l3295:	
  7753                           ;incstack = 0
  7754                           ; Regs used in _sendInfo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7755                           
  7756                           
  7757                           ;main.c: 94:     bcd16_t bcd;;main.c: 95:     uint16_t velocidade;;main.c: 97:     veloc
      +                          idade = (uint16_t)(velocidadeMotor * 10);
  7758     02AD  0021               	movlb	1	; select bank1
  7759     02AE  082B               	movf	(_velocidadeMotor+3)^(0+128),w
  7760     02AF  0020               	movlb	0	; select bank0
  7761     02B0  00B7               	movwf	___flmul@a+3
  7762     02B1  0021               	movlb	1	; select bank1
  7763     02B2  082A               	movf	(_velocidadeMotor+2)^(0+128),w
  7764     02B3  0020               	movlb	0	; select bank0
  7765     02B4  00B6               	movwf	___flmul@a+2
  7766     02B5  0021               	movlb	1	; select bank1
  7767     02B6  0829               	movf	(_velocidadeMotor+1)^(0+128),w
  7768     02B7  0020               	movlb	0	; select bank0
  7769     02B8  00B5               	movwf	___flmul@a+1
  7770     02B9  0021               	movlb	1	; select bank1
  7771     02BA  0828               	movf	_velocidadeMotor^(0+128),w
  7772     02BB  0020               	movlb	0	; select bank0
  7773     02BC  00B4               	movwf	___flmul@a
  7774     02BD  3041               	movlw	65
  7775     02BE  00B3               	movwf	___flmul@b+3
  7776     02BF  3020               	movlw	32
  7777     02C0  00B2               	movwf	___flmul@b+2
  7778     02C1  3000               	movlw	0
  7779     02C2  00B1               	movwf	___flmul@b+1
  7780     02C3  3000               	movlw	0
  7781     02C4  00B0               	movwf	___flmul@b
  7782     02C5  3180  2072  3182   	fcall	___flmul
  7783     02C8  0020               	movlb	0	; select bank0
  7784     02C9  0833               	movf	?___flmul+3,w
  7785     02CA  00CD               	movwf	___fltol@f1+3
  7786     02CB  0832               	movf	?___flmul+2,w
  7787     02CC  00CC               	movwf	___fltol@f1+2
  7788     02CD  0831               	movf	?___flmul+1,w
  7789     02CE  00CB               	movwf	___fltol@f1+1
  7790     02CF  0830               	movf	?___flmul,w
  7791     02D0  00CA               	movwf	___fltol@f1
  7792     02D1  3187  2753  3182   	fcall	___fltol
  7793     02D4  0020               	movlb	0	; select bank0
  7794     02D5  084B               	movf	?___fltol+1,w
  7795     02D6  00D7               	movwf	sendInfo@velocidade+1
  7796     02D7  084A               	movf	?___fltol,w
  7797     02D8  00D6               	movwf	sendInfo@velocidade
  7798                           
  7799                           ;main.c: 98:     temperatura = (ADC_GetConversion(2) / 1024) * 999;
  7800     02D9  3002               	movlw	2
  7801     02DA  318C  2433  3182   	fcall	_ADC_GetConversion
  7802     02DD  0870               	movf	?_ADC_GetConversion,w
  7803     02DE  0020               	movlb	0	; select bank0
  7804     02DF  00D4               	movwf	??_sendInfo
  7805     02E0  0871               	movf	?_ADC_GetConversion+1,w
  7806     02E1  00D5               	movwf	??_sendInfo+1
  7807     02E2  300A               	movlw	10
  7808     02E3                     u227_25:
  7809     02E3  36D5               	lsrf	??_sendInfo+1,f
  7810     02E4  0CD4               	rrf	??_sendInfo,f
  7811     02E5  0B89               	decfsz	9,f
  7812     02E6  2AE3               	goto	u227_25
  7813     02E7  0854               	movf	??_sendInfo,w
  7814     02E8  00F4               	movwf	___wmul@multiplier
  7815     02E9  0855               	movf	??_sendInfo+1,w
  7816     02EA  00F5               	movwf	___wmul@multiplier+1
  7817     02EB  30E7               	movlw	231
  7818     02EC  00F6               	movwf	___wmul@multiplicand
  7819     02ED  3003               	movlw	3
  7820     02EE  00F7               	movwf	___wmul@multiplicand+1
  7821     02EF  318C  2469  3182   	fcall	___wmul
  7822     02F2  0875               	movf	?___wmul+1,w
  7823     02F3  0021               	movlb	1	; select bank1
  7824     02F4  00AF               	movwf	(_temperatura+1)^(0+128)
  7825     02F5  0874               	movf	?___wmul,w
  7826     02F6  00AE               	movwf	_temperatura^(0+128)
  7827                           
  7828                           ;main.c: 100:     EUSART_Write('$');
  7829     02F7  3024               	movlw	36
  7830     02F8  318A  22C0  3182   	fcall	_EUSART_Write
  7831                           
  7832                           ;main.c: 101:     EUSART_Write(0x30 + origem);
  7833     02FB  0021               	movlb	1	; select bank1
  7834     02FC  083A               	movf	_origem^(0+128),w
  7835     02FD  3E30               	addlw	48
  7836     02FE  318A  22C0  3182   	fcall	_EUSART_Write
  7837                           
  7838                           ;main.c: 102:     EUSART_Write(0x2C);
  7839     0301  302C               	movlw	44
  7840     0302  318A  22C0  3182   	fcall	_EUSART_Write
  7841                           
  7842                           ;main.c: 103:     EUSART_Write(0x30 + destino);
  7843     0305  0021               	movlb	1	; select bank1
  7844     0306  0839               	movf	_destino^(0+128),w
  7845     0307  3E30               	addlw	48
  7846     0308  318A  22C0  3182   	fcall	_EUSART_Write
  7847                           
  7848                           ;main.c: 104:     EUSART_Write(0x2C);
  7849     030B  302C               	movlw	44
  7850     030C  318A  22C0  3182   	fcall	_EUSART_Write
  7851                           
  7852                           ;main.c: 105:     EUSART_Write(0x30 + andarAtual);
  7853     030F  0020               	movlb	0	; select bank0
  7854     0310  086A               	movf	_andarAtual,w
  7855     0311  3E30               	addlw	48
  7856     0312  318A  22C0  3182   	fcall	_EUSART_Write
  7857                           
  7858                           ;main.c: 106:     EUSART_Write(0x2C);
  7859     0315  302C               	movlw	44
  7860     0316  318A  22C0  3182   	fcall	_EUSART_Write
  7861                           
  7862                           ;main.c: 107:     EUSART_Write(0x30);
  7863     0319  3030               	movlw	48
  7864     031A  318A  22C0  3182   	fcall	_EUSART_Write
  7865                           
  7866                           ;main.c: 108:     EUSART_Write(0x2C);
  7867     031D  302C               	movlw	44
  7868     031E  318A  22C0  3182   	fcall	_EUSART_Write
  7869     0321                     i1l3297:
  7870                           
  7871                           ;main.c: 110:     bcd.v = bin2bcd(altura);
  7872     0321  0020               	movlb	0	; select bank0
  7873     0322  0869               	movf	_altura,w
  7874     0323  00D4               	movwf	??_sendInfo
  7875     0324  01D5               	clrf	??_sendInfo+1
  7876     0325  0854               	movf	??_sendInfo,w
  7877     0326  00FA               	movwf	bin2bcd@binVal
  7878     0327  0855               	movf	??_sendInfo+1,w
  7879     0328  00FB               	movwf	bin2bcd@binVal+1
  7880     0329  3185  25A1  3182   	fcall	_bin2bcd
  7881     032C  087B               	movf	?_bin2bcd+1,w
  7882     032D  0020               	movlb	0	; select bank0
  7883     032E  00D9               	movwf	sendInfo@bcd+1
  7884     032F  087A               	movf	?_bin2bcd,w
  7885     0330  00D8               	movwf	sendInfo@bcd
  7886     0331                     i1l3299:
  7887                           
  7888                           ;main.c: 111:     EUSART_Write(bcd.num2 + 0x30);
  7889     0331  0859               	movf	sendInfo@bcd+1,w
  7890     0332  390F               	andlw	15
  7891     0333  3E30               	addlw	48
  7892     0334  318A  22C0  3182   	fcall	_EUSART_Write
  7893     0337                     i1l3301:
  7894                           
  7895                           ;main.c: 112:     EUSART_Write(bcd.num3 + 0x30);
  7896     0337  0020               	movlb	0	; select bank0
  7897     0338  0E58               	swapf	sendInfo@bcd,w
  7898     0339  390F               	andlw	15
  7899     033A  3E30               	addlw	48
  7900     033B  318A  22C0  3182   	fcall	_EUSART_Write
  7901     033E                     i1l3303:
  7902                           
  7903                           ;main.c: 113:     EUSART_Write(bcd.num4 + 0x30);
  7904     033E  0020               	movlb	0	; select bank0
  7905     033F  0858               	movf	sendInfo@bcd,w
  7906     0340  390F               	andlw	15
  7907     0341  3E30               	addlw	48
  7908     0342  318A  22C0  3182   	fcall	_EUSART_Write
  7909     0345                     i1l3305:
  7910                           
  7911                           ;main.c: 114:     EUSART_Write(0x2C);
  7912     0345  302C               	movlw	44
  7913     0346  318A  22C0  3182   	fcall	_EUSART_Write
  7914     0349                     i1l3307:
  7915                           
  7916                           ;main.c: 116:     bcd.v = bin2bcd(velocidade);
  7917     0349  0020               	movlb	0	; select bank0
  7918     034A  0857               	movf	sendInfo@velocidade+1,w
  7919     034B  00FB               	movwf	bin2bcd@binVal+1
  7920     034C  0856               	movf	sendInfo@velocidade,w
  7921     034D  00FA               	movwf	bin2bcd@binVal
  7922     034E  3185  25A1  3182   	fcall	_bin2bcd
  7923     0351  087B               	movf	?_bin2bcd+1,w
  7924     0352  0020               	movlb	0	; select bank0
  7925     0353  00D9               	movwf	sendInfo@bcd+1
  7926     0354  087A               	movf	?_bin2bcd,w
  7927     0355  00D8               	movwf	sendInfo@bcd
  7928                           
  7929                           ;main.c: 117:     EUSART_Write(bcd.num2 + 0x30);
  7930     0356  0859               	movf	sendInfo@bcd+1,w
  7931     0357  390F               	andlw	15
  7932     0358  3E30               	addlw	48
  7933     0359  318A  22C0  3182   	fcall	_EUSART_Write
  7934                           
  7935                           ;main.c: 118:     EUSART_Write(bcd.num3 + 0x30);
  7936     035C  0020               	movlb	0	; select bank0
  7937     035D  0E58               	swapf	sendInfo@bcd,w
  7938     035E  390F               	andlw	15
  7939     035F  3E30               	addlw	48
  7940     0360  318A  22C0  3182   	fcall	_EUSART_Write
  7941                           
  7942                           ;main.c: 119:     EUSART_Write(0x2E);
  7943     0363  302E               	movlw	46
  7944     0364  318A  22C0  3182   	fcall	_EUSART_Write
  7945                           
  7946                           ;main.c: 120:     EUSART_Write(bcd.num4 + 0x30);
  7947     0367  0020               	movlb	0	; select bank0
  7948     0368  0858               	movf	sendInfo@bcd,w
  7949     0369  390F               	andlw	15
  7950     036A  3E30               	addlw	48
  7951     036B  318A  22C0  3182   	fcall	_EUSART_Write
  7952                           
  7953                           ;main.c: 121:     EUSART_Write(0x2C);
  7954     036E  302C               	movlw	44
  7955     036F  318A  22C0  3182   	fcall	_EUSART_Write
  7956     0372                     i1l3309:
  7957                           
  7958                           ;main.c: 123:     bcd.v = bin2bcd(temperatura);
  7959     0372  0021               	movlb	1	; select bank1
  7960     0373  082F               	movf	(_temperatura+1)^(0+128),w
  7961     0374  00FB               	movwf	bin2bcd@binVal+1
  7962     0375  082E               	movf	_temperatura^(0+128),w
  7963     0376  00FA               	movwf	bin2bcd@binVal
  7964     0377  3185  25A1  3182   	fcall	_bin2bcd
  7965     037A  087B               	movf	?_bin2bcd+1,w
  7966     037B  0020               	movlb	0	; select bank0
  7967     037C  00D9               	movwf	sendInfo@bcd+1
  7968     037D  087A               	movf	?_bin2bcd,w
  7969     037E  00D8               	movwf	sendInfo@bcd
  7970     037F                     i1l3311:
  7971                           
  7972                           ;main.c: 124:     EUSART_Write(bcd.num1 + 0x30);
  7973     037F  0E59               	swapf	sendInfo@bcd+1,w
  7974     0380  390F               	andlw	15
  7975     0381  3E30               	addlw	48
  7976     0382  318A  22C0  3182   	fcall	_EUSART_Write
  7977     0385                     i1l3313:
  7978                           
  7979                           ;main.c: 125:     EUSART_Write(bcd.num2 + 0x30);
  7980     0385  0020               	movlb	0	; select bank0
  7981     0386  0859               	movf	sendInfo@bcd+1,w
  7982     0387  390F               	andlw	15
  7983     0388  3E30               	addlw	48
  7984     0389  318A  22C0  3182   	fcall	_EUSART_Write
  7985     038C                     i1l3315:
  7986                           
  7987                           ;main.c: 126:     EUSART_Write(bcd.num3 + 0x30);
  7988     038C  0020               	movlb	0	; select bank0
  7989     038D  0E58               	swapf	sendInfo@bcd,w
  7990     038E  390F               	andlw	15
  7991     038F  3E30               	addlw	48
  7992     0390  318A  22C0  3182   	fcall	_EUSART_Write
  7993     0393                     i1l3317:
  7994                           
  7995                           ;main.c: 127:     EUSART_Write(0x2E);
  7996     0393  302E               	movlw	46
  7997     0394  318A  22C0  3182   	fcall	_EUSART_Write
  7998     0397                     i1l3319:
  7999                           
  8000                           ;main.c: 128:     EUSART_Write(bcd.num4 + 0x30);
  8001     0397  0020               	movlb	0	; select bank0
  8002     0398  0858               	movf	sendInfo@bcd,w
  8003     0399  390F               	andlw	15
  8004     039A  3E30               	addlw	48
  8005     039B  318A  22C0  3182   	fcall	_EUSART_Write
  8006     039E                     i1l3321:
  8007                           
  8008                           ;main.c: 129:     EUSART_Write(0x0D);
  8009     039E  300D               	movlw	13
  8010     039F  318A  22C0  3182   	fcall	_EUSART_Write
  8011     03A2                     i1l809:
  8012     03A2  0008               	return
  8013     03A3                     __end_of_sendInfo:
  8014                           
  8015                           	psect	text47
  8016     05A1                     __ptext47:	
  8017 ;; *************** function _bin2bcd *****************
  8018 ;; Defined at:
  8019 ;;		line 10 in file "bin2bcd.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  binVal          2   10[COMMON] unsigned short 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  i               1    4[BANK0 ] unsigned char 
  8024 ;;  dataU           4    5[BANK0 ] struct .
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  2   10[COMMON] unsigned short 
  8027 ;; Registers used:
  8028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8034 ;;      Params:         2       0       0       0       0       0
  8035 ;;      Locals:         0       5       0       0       0       0
  8036 ;;      Temps:          0       4       0       0       0       0
  8037 ;;      Totals:         2       9       0       0       0       0
  8038 ;;Total ram usage:       11 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; Hardware stack levels required when called: 1
  8041 ;; This function calls:
  8042 ;;		_memset
  8043 ;; This function is called by:
  8044 ;;		_sendInfo
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048     05A1                     _bin2bcd:	
  8049                           ;psect for function _bin2bcd
  8050                           
  8051     05A1                     i1l3025:	
  8052                           ;incstack = 0
  8053                           ; Regs used in _bin2bcd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8054                           
  8055                           
  8056                           ;bin2bcd.c: 22:     }dataU;;bin2bcd.c: 23:     memset(&dataU,0,4);
  8057     05A1  3000               	movlw	0
  8058     05A2  00F0               	movwf	memset@c
  8059     05A3  00F1               	movwf	memset@c+1
  8060     05A4  3004               	movlw	4
  8061     05A5  00F2               	movwf	memset@n
  8062     05A6  3000               	movlw	0
  8063     05A7  00F3               	movwf	memset@n+1
  8064     05A8  3025               	movlw	(low (bin2bcd@dataU| 0))& (0+255)
  8065     05A9  3186  2633  3185   	fcall	_memset
  8066     05AC                     i1l3027:
  8067                           
  8068                           ;bin2bcd.c: 24:     dataU.shift = (uint32_t)binVal;
  8069     05AC  087A               	movf	bin2bcd@binVal,w
  8070     05AD  0020               	movlb	0	; select bank0
  8071     05AE  00A5               	movwf	bin2bcd@dataU
  8072     05AF  087B               	movf	bin2bcd@binVal+1,w
  8073     05B0  00A6               	movwf	bin2bcd@dataU+1
  8074     05B1  01A7               	clrf	bin2bcd@dataU+2
  8075     05B2  01A8               	clrf	bin2bcd@dataU+3
  8076     05B3                     i1l3029:
  8077                           
  8078                           ;bin2bcd.c: 25:     for(uint8_t i=0;i<12;i++){
  8079     05B3  01A4               	clrf	bin2bcd@i
  8080     05B4                     i1l3035:
  8081                           
  8082                           ;bin2bcd.c: 26:    if(dataU.dat.d0>=5){
  8083     05B4  0828               	movf	bin2bcd@dataU+3,w
  8084     05B5  390F               	andlw	15
  8085     05B6  00A0               	movwf	??_bin2bcd
  8086     05B7  3005               	movlw	5
  8087     05B8  0220               	subwf	??_bin2bcd,w
  8088     05B9  1C03               	skipc
  8089     05BA  2DBC               	goto	u179_21
  8090     05BB  2DBD               	goto	u179_20
  8091     05BC                     u179_21:
  8092     05BC  2DC6               	goto	i1l931
  8093     05BD                     u179_20:
  8094     05BD                     i1l3037:
  8095                           
  8096                           ;bin2bcd.c: 27:     dataU.dat.d0 = dataU.dat.d0 + 3;
  8097     05BD  0828               	movf	bin2bcd@dataU+3,w
  8098     05BE  390F               	andlw	15
  8099     05BF  3E03               	addlw	3
  8100     05C0  00A0               	movwf	??_bin2bcd
  8101     05C1  0828               	movf	bin2bcd@dataU+3,w
  8102     05C2  0620               	xorwf	??_bin2bcd,w
  8103     05C3  39F0               	andlw	-16
  8104     05C4  0620               	xorwf	??_bin2bcd,w
  8105     05C5  00A8               	movwf	bin2bcd@dataU+3
  8106     05C6                     i1l931:	
  8107                           ;bin2bcd.c: 28:    }
  8108                           
  8109                           
  8110                           ;bin2bcd.c: 29:    if(dataU.dat.d1>=5){
  8111     05C6  0E27               	swapf	bin2bcd@dataU+2,w
  8112     05C7  390F               	andlw	15
  8113     05C8  00A0               	movwf	??_bin2bcd
  8114     05C9  3005               	movlw	5
  8115     05CA  0220               	subwf	??_bin2bcd,w
  8116     05CB  1C03               	skipc
  8117     05CC  2DCE               	goto	u180_21
  8118     05CD  2DCF               	goto	u180_20
  8119     05CE                     u180_21:
  8120     05CE  2DD9               	goto	i1l932
  8121     05CF                     u180_20:
  8122     05CF                     i1l3039:
  8123                           
  8124                           ;bin2bcd.c: 30:     dataU.dat.d1 = dataU.dat.d1 + 3;
  8125     05CF  0E27               	swapf	bin2bcd@dataU+2,w
  8126     05D0  390F               	andlw	15
  8127     05D1  3E03               	addlw	3
  8128     05D2  00A0               	movwf	??_bin2bcd
  8129     05D3  0EA0               	swapf	??_bin2bcd,f
  8130     05D4  0827               	movf	bin2bcd@dataU+2,w
  8131     05D5  0620               	xorwf	??_bin2bcd,w
  8132     05D6  390F               	andlw	-241
  8133     05D7  0620               	xorwf	??_bin2bcd,w
  8134     05D8  00A7               	movwf	bin2bcd@dataU+2
  8135     05D9                     i1l932:	
  8136                           ;bin2bcd.c: 31:    }
  8137                           
  8138                           
  8139                           ;bin2bcd.c: 32:             if(dataU.dat.d2>=5){
  8140     05D9  0827               	movf	bin2bcd@dataU+2,w
  8141     05DA  390F               	andlw	15
  8142     05DB  00A0               	movwf	??_bin2bcd
  8143     05DC  3005               	movlw	5
  8144     05DD  0220               	subwf	??_bin2bcd,w
  8145     05DE  1C03               	skipc
  8146     05DF  2DE1               	goto	u181_21
  8147     05E0  2DE2               	goto	u181_20
  8148     05E1                     u181_21:
  8149     05E1  2DEB               	goto	i1l933
  8150     05E2                     u181_20:
  8151     05E2                     i1l3041:
  8152                           
  8153                           ;bin2bcd.c: 33:     dataU.dat.d2 = dataU.dat.d2 + 3;
  8154     05E2  0827               	movf	bin2bcd@dataU+2,w
  8155     05E3  390F               	andlw	15
  8156     05E4  3E03               	addlw	3
  8157     05E5  00A0               	movwf	??_bin2bcd
  8158     05E6  0827               	movf	bin2bcd@dataU+2,w
  8159     05E7  0620               	xorwf	??_bin2bcd,w
  8160     05E8  39F0               	andlw	-16
  8161     05E9  0620               	xorwf	??_bin2bcd,w
  8162     05EA  00A7               	movwf	bin2bcd@dataU+2
  8163     05EB                     i1l933:	
  8164                           ;bin2bcd.c: 34:    }
  8165                           
  8166                           
  8167                           ;bin2bcd.c: 35:             if(dataU.dat.d3>=5){
  8168     05EB  0E26               	swapf	bin2bcd@dataU+1,w
  8169     05EC  390F               	andlw	15
  8170     05ED  00A0               	movwf	??_bin2bcd
  8171     05EE  3005               	movlw	5
  8172     05EF  0220               	subwf	??_bin2bcd,w
  8173     05F0  1C03               	skipc
  8174     05F1  2DF3               	goto	u182_21
  8175     05F2  2DF4               	goto	u182_20
  8176     05F3                     u182_21:
  8177     05F3  2DFE               	goto	i1l934
  8178     05F4                     u182_20:
  8179     05F4                     i1l3043:
  8180                           
  8181                           ;bin2bcd.c: 36:     dataU.dat.d3 = dataU.dat.d3 + 3;
  8182     05F4  0E26               	swapf	bin2bcd@dataU+1,w
  8183     05F5  390F               	andlw	15
  8184     05F6  3E03               	addlw	3
  8185     05F7  00A0               	movwf	??_bin2bcd
  8186     05F8  0EA0               	swapf	??_bin2bcd,f
  8187     05F9  0826               	movf	bin2bcd@dataU+1,w
  8188     05FA  0620               	xorwf	??_bin2bcd,w
  8189     05FB  390F               	andlw	-241
  8190     05FC  0620               	xorwf	??_bin2bcd,w
  8191     05FD  00A6               	movwf	bin2bcd@dataU+1
  8192     05FE                     i1l934:	
  8193                           ;bin2bcd.c: 37:    }
  8194                           
  8195                           
  8196                           ;bin2bcd.c: 38:    dataU.shift = dataU.shift<<1;
  8197     05FE  0825               	movf	bin2bcd@dataU,w
  8198     05FF  00A0               	movwf	??_bin2bcd
  8199     0600  0826               	movf	bin2bcd@dataU+1,w
  8200     0601  00A1               	movwf	??_bin2bcd+1
  8201     0602  0827               	movf	bin2bcd@dataU+2,w
  8202     0603  00A2               	movwf	??_bin2bcd+2
  8203     0604  0828               	movf	bin2bcd@dataU+3,w
  8204     0605  00A3               	movwf	??_bin2bcd+3
  8205     0606  3001               	movlw	1
  8206     0607                     u183_25:
  8207     0607  35A0               	lslf	??_bin2bcd,f
  8208     0608  0DA1               	rlf	??_bin2bcd+1,f
  8209     0609  0DA2               	rlf	??_bin2bcd+2,f
  8210     060A  0DA3               	rlf	??_bin2bcd+3,f
  8211     060B                     u183_20:
  8212     060B  0B89               	decfsz	9,f
  8213     060C  2E07               	goto	u183_25
  8214     060D  0823               	movf	??_bin2bcd+3,w
  8215     060E  00A8               	movwf	bin2bcd@dataU+3
  8216     060F  0822               	movf	??_bin2bcd+2,w
  8217     0610  00A7               	movwf	bin2bcd@dataU+2
  8218     0611  0821               	movf	??_bin2bcd+1,w
  8219     0612  00A6               	movwf	bin2bcd@dataU+1
  8220     0613  0820               	movf	??_bin2bcd,w
  8221     0614  00A5               	movwf	bin2bcd@dataU
  8222                           
  8223                           ;bin2bcd.c: 39:     }
  8224     0615  3001               	movlw	1
  8225     0616  00A0               	movwf	??_bin2bcd
  8226     0617  0820               	movf	??_bin2bcd,w
  8227     0618  07A4               	addwf	bin2bcd@i,f
  8228     0619                     i1l3045:
  8229     0619  300C               	movlw	12
  8230     061A  0224               	subwf	bin2bcd@i,w
  8231     061B  1C03               	skipc
  8232     061C  2E1E               	goto	u184_21
  8233     061D  2E1F               	goto	u184_20
  8234     061E                     u184_21:
  8235     061E  2DB4               	goto	i1l3035
  8236     061F                     u184_20:
  8237     061F                     i1l3047:
  8238                           
  8239                           ;bin2bcd.c: 40:     return (uint16_t)(dataU.shift>>12);
  8240     061F  0825               	movf	bin2bcd@dataU,w
  8241     0620  00A0               	movwf	??_bin2bcd
  8242     0621  0826               	movf	bin2bcd@dataU+1,w
  8243     0622  00A1               	movwf	??_bin2bcd+1
  8244     0623  0827               	movf	bin2bcd@dataU+2,w
  8245     0624  00A2               	movwf	??_bin2bcd+2
  8246     0625  0828               	movf	bin2bcd@dataU+3,w
  8247     0626  00A3               	movwf	??_bin2bcd+3
  8248     0627  300C               	movlw	12
  8249     0628                     u185_25:
  8250     0628  36A3               	lsrf	??_bin2bcd+3,f
  8251     0629  0CA2               	rrf	??_bin2bcd+2,f
  8252     062A  0CA1               	rrf	??_bin2bcd+1,f
  8253     062B  0CA0               	rrf	??_bin2bcd,f
  8254     062C                     u185_20:
  8255     062C  0B89               	decfsz	9,f
  8256     062D  2E28               	goto	u185_25
  8257     062E  0821               	movf	??_bin2bcd+1,w
  8258     062F  00FB               	movwf	?_bin2bcd+1
  8259     0630  0820               	movf	??_bin2bcd,w
  8260     0631  00FA               	movwf	?_bin2bcd
  8261     0632                     i1l935:
  8262     0632  0008               	return
  8263     0633                     __end_of_bin2bcd:
  8264                           
  8265                           	psect	text48
  8266     0633                     __ptext48:	
  8267 ;; *************** function _memset *****************
  8268 ;; Defined at:
  8269 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  dest            1    wreg     PTR void 
  8272 ;;		 -> bin2bcd@dataU(4), 
  8273 ;;  c               2    0[COMMON] int 
  8274 ;;  n               2    2[COMMON] unsigned int 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  dest            1    8[COMMON] PTR void 
  8277 ;;		 -> bin2bcd@dataU(4), 
  8278 ;;  k               2    6[COMMON] unsigned int 
  8279 ;;  s               1    9[COMMON] PTR unsigned char 
  8280 ;;		 -> bin2bcd@dataU(4), 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      PTR void 
  8283 ;; Registers used:
  8284 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8290 ;;      Params:         4       0       0       0       0       0
  8291 ;;      Locals:         4       0       0       0       0       0
  8292 ;;      Temps:          2       0       0       0       0       0
  8293 ;;      Totals:        10       0       0       0       0       0
  8294 ;;Total ram usage:       10 bytes
  8295 ;; Hardware stack levels used: 1
  8296 ;; This function calls:
  8297 ;;		Nothing
  8298 ;; This function is called by:
  8299 ;;		_bin2bcd
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303     0633                     _memset:	
  8304                           ;psect for function _memset
  8305                           
  8306                           
  8307                           ;incstack = 0
  8308                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8309                           ;memset@dest stored from wreg
  8310     0633  00F8               	movwf	memset@dest
  8311     0634                     i1l2931:
  8312     0634  0878               	movf	memset@dest,w
  8313     0635  00F9               	movwf	memset@s
  8314     0636                     i1l2933:
  8315     0636  0872               	movf	memset@n,w
  8316     0637  0473               	iorwf	memset@n+1,w
  8317     0638  1D03               	btfss	3,2
  8318     0639  2E3B               	goto	u166_21
  8319     063A  2E3C               	goto	u166_20
  8320     063B                     u166_21:
  8321     063B  2E3D               	goto	i1l2937
  8322     063C                     u166_20:
  8323     063C  2EC2               	goto	i1l1545
  8324     063D                     i1l2937:
  8325     063D  0879               	movf	memset@s,w
  8326     063E  0086               	movwf	6
  8327     063F  0187               	clrf	7
  8328     0640  0870               	movf	memset@c,w
  8329     0641  0081               	movwf	1
  8330     0642                     i1l2939:
  8331     0642  0872               	movf	memset@n,w
  8332     0643  0779               	addwf	memset@s,w
  8333     0644  00F4               	movwf	??_memset
  8334     0645  0874               	movf	??_memset,w
  8335     0646  3EFF               	addlw	255
  8336     0647  0086               	movwf	6
  8337     0648  0187               	clrf	7
  8338     0649  0870               	movf	memset@c,w
  8339     064A  0081               	movwf	1
  8340     064B                     i1l2941:
  8341     064B  3000               	movlw	0
  8342     064C  0273               	subwf	memset@n+1,w
  8343     064D  3003               	movlw	3
  8344     064E  1903               	skipnz
  8345     064F  0272               	subwf	memset@n,w
  8346     0650  1803               	skipnc
  8347     0651  2E53               	goto	u167_21
  8348     0652  2E54               	goto	u167_20
  8349     0653                     u167_21:
  8350     0653  2E55               	goto	i1l2945
  8351     0654                     u167_20:
  8352     0654  2EC2               	goto	i1l1545
  8353     0655                     i1l2945:
  8354     0655  0A79               	incf	memset@s,w
  8355     0656  0086               	movwf	6
  8356     0657  0187               	clrf	7
  8357     0658  0870               	movf	memset@c,w
  8358     0659  0081               	movwf	1
  8359     065A                     i1l2947:
  8360     065A  0879               	movf	memset@s,w
  8361     065B  3E02               	addlw	2
  8362     065C  0086               	movwf	6
  8363     065D  0187               	clrf	7
  8364     065E  0870               	movf	memset@c,w
  8365     065F  0081               	movwf	1
  8366     0660                     i1l2949:
  8367     0660  0872               	movf	memset@n,w
  8368     0661  0779               	addwf	memset@s,w
  8369     0662  00F4               	movwf	??_memset
  8370     0663  0874               	movf	??_memset,w
  8371     0664  3EFE               	addlw	254
  8372     0665  0086               	movwf	6
  8373     0666  0187               	clrf	7
  8374     0667  0870               	movf	memset@c,w
  8375     0668  0081               	movwf	1
  8376     0669                     i1l2951:
  8377     0669  0872               	movf	memset@n,w
  8378     066A  0779               	addwf	memset@s,w
  8379     066B  00F4               	movwf	??_memset
  8380     066C  0874               	movf	??_memset,w
  8381     066D  3EFD               	addlw	253
  8382     066E  0086               	movwf	6
  8383     066F  0187               	clrf	7
  8384     0670  0870               	movf	memset@c,w
  8385     0671  0081               	movwf	1
  8386     0672                     i1l2953:
  8387     0672  3000               	movlw	0
  8388     0673  0273               	subwf	memset@n+1,w
  8389     0674  3007               	movlw	7
  8390     0675  1903               	skipnz
  8391     0676  0272               	subwf	memset@n,w
  8392     0677  1803               	skipnc
  8393     0678  2E7A               	goto	u168_21
  8394     0679  2E7B               	goto	u168_20
  8395     067A                     u168_21:
  8396     067A  2E7C               	goto	i1l2957
  8397     067B                     u168_20:
  8398     067B  2EC2               	goto	i1l1545
  8399     067C                     i1l2957:
  8400     067C  0879               	movf	memset@s,w
  8401     067D  3E03               	addlw	3
  8402     067E  0086               	movwf	6
  8403     067F  0187               	clrf	7
  8404     0680  0870               	movf	memset@c,w
  8405     0681  0081               	movwf	1
  8406     0682  0872               	movf	memset@n,w
  8407     0683  0779               	addwf	memset@s,w
  8408     0684  00F4               	movwf	??_memset
  8409     0685  0874               	movf	??_memset,w
  8410     0686  3EFC               	addlw	252
  8411     0687  0086               	movwf	6
  8412     0688  0187               	clrf	7
  8413     0689  0870               	movf	memset@c,w
  8414     068A  0081               	movwf	1
  8415     068B                     i1l2959:
  8416     068B  3000               	movlw	0
  8417     068C  0273               	subwf	memset@n+1,w
  8418     068D  3009               	movlw	9
  8419     068E  1903               	skipnz
  8420     068F  0272               	subwf	memset@n,w
  8421     0690  1803               	skipnc
  8422     0691  2E93               	goto	u169_21
  8423     0692  2E94               	goto	u169_20
  8424     0693                     u169_21:
  8425     0693  2E95               	goto	i1l2963
  8426     0694                     u169_20:
  8427     0694  2EC2               	goto	i1l1545
  8428     0695                     i1l2963:
  8429     0695  0979               	comf	memset@s,w
  8430     0696  00F4               	movwf	??_memset
  8431     0697  097A               	comf	memset@s+1,w
  8432     0698  00F5               	movwf	??_memset+1
  8433     0699  0AF4               	incf	??_memset,f
  8434     069A  1903               	skipnz
  8435     069B  0AF5               	incf	??_memset+1,f
  8436     069C  3003               	movlw	3
  8437     069D  0574               	andwf	??_memset,w
  8438     069E  00F6               	movwf	memset@k
  8439     069F  3000               	movlw	0
  8440     06A0  0575               	andwf	??_memset+1,w
  8441     06A1  00F7               	movwf	memset@k+1
  8442     06A2  0876               	movf	memset@k,w
  8443     06A3  00F4               	movwf	??_memset
  8444     06A4  0874               	movf	??_memset,w
  8445     06A5  07F9               	addwf	memset@s,f
  8446     06A6                     i1l2965:
  8447     06A6  0876               	movf	memset@k,w
  8448     06A7  02F2               	subwf	memset@n,f
  8449     06A8  0877               	movf	memset@k+1,w
  8450     06A9  3BF3               	subwfb	memset@n+1,f
  8451     06AA                     i1l2967:
  8452     06AA  30FC               	movlw	252
  8453     06AB  05F2               	andwf	memset@n,f
  8454     06AC  30FF               	movlw	255
  8455     06AD  05F3               	andwf	memset@n+1,f
  8456     06AE  2EBC               	goto	i1l2975
  8457     06AF                     i1l2969:
  8458     06AF  0879               	movf	memset@s,w
  8459     06B0  0086               	movwf	6
  8460     06B1  0187               	clrf	7
  8461     06B2  0870               	movf	memset@c,w
  8462     06B3  0081               	movwf	1
  8463     06B4                     i1l2971:
  8464     06B4  3001               	movlw	1
  8465     06B5  02F2               	subwf	memset@n,f
  8466     06B6  3000               	movlw	0
  8467     06B7  3BF3               	subwfb	memset@n+1,f
  8468     06B8                     i1l2973:
  8469     06B8  3001               	movlw	1
  8470     06B9  00F4               	movwf	??_memset
  8471     06BA  0874               	movf	??_memset,w
  8472     06BB  07F9               	addwf	memset@s,f
  8473     06BC                     i1l2975:
  8474     06BC  0872               	movf	memset@n,w
  8475     06BD  0473               	iorwf	memset@n+1,w
  8476     06BE  1D03               	btfss	3,2
  8477     06BF  2EC1               	goto	u170_21
  8478     06C0  2EC2               	goto	u170_20
  8479     06C1                     u170_21:
  8480     06C1  2EAF               	goto	i1l2969
  8481     06C2                     u170_20:
  8482     06C2                     i1l1545:
  8483     06C2  0008               	return
  8484     06C3                     __end_of_memset:
  8485                           
  8486                           	psect	text49
  8487     0C69                     __ptext49:	
  8488 ;; *************** function ___wmul *****************
  8489 ;; Defined at:
  8490 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  multiplier      2    4[COMMON] unsigned int 
  8493 ;;  multiplicand    2    6[COMMON] unsigned int 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  product         2    8[COMMON] unsigned int 
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  2    4[COMMON] unsigned int 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8505 ;;      Params:         4       0       0       0       0       0
  8506 ;;      Locals:         2       0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0       0
  8508 ;;      Totals:         6       0       0       0       0       0
  8509 ;;Total ram usage:        6 bytes
  8510 ;; Hardware stack levels used: 1
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_sendInfo
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518     0C69                     ___wmul:	
  8519                           ;psect for function ___wmul
  8520                           
  8521     0C69                     i1l3051:	
  8522                           ;incstack = 0
  8523                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8524                           
  8525     0C69  01F8               	clrf	___wmul@product
  8526     0C6A  01F9               	clrf	___wmul@product+1
  8527     0C6B                     i1l3053:
  8528     0C6B  1C74               	btfss	___wmul@multiplier,0
  8529     0C6C  2C6E               	goto	u186_21
  8530     0C6D  2C6F               	goto	u186_20
  8531     0C6E                     u186_21:
  8532     0C6E  2C73               	goto	i1l1085
  8533     0C6F                     u186_20:
  8534     0C6F                     i1l3055:
  8535     0C6F  0876               	movf	___wmul@multiplicand,w
  8536     0C70  07F8               	addwf	___wmul@product,f
  8537     0C71  0877               	movf	___wmul@multiplicand+1,w
  8538     0C72  3DF9               	addwfc	___wmul@product+1,f
  8539     0C73                     i1l1085:
  8540     0C73  3001               	movlw	1
  8541     0C74                     u187_25:
  8542     0C74  35F6               	lslf	___wmul@multiplicand,f
  8543     0C75  0DF7               	rlf	___wmul@multiplicand+1,f
  8544     0C76  0B89               	decfsz	9,f
  8545     0C77  2C74               	goto	u187_25
  8546     0C78                     i1l3057:
  8547     0C78  3001               	movlw	1
  8548     0C79                     u188_25:
  8549     0C79  36F5               	lsrf	___wmul@multiplier+1,f
  8550     0C7A  0CF4               	rrf	___wmul@multiplier,f
  8551     0C7B  0B89               	decfsz	9,f
  8552     0C7C  2C79               	goto	u188_25
  8553     0C7D                     i1l3059:
  8554     0C7D  0874               	movf	___wmul@multiplier,w
  8555     0C7E  0475               	iorwf	___wmul@multiplier+1,w
  8556     0C7F  1D03               	btfss	3,2
  8557     0C80  2C82               	goto	u189_21
  8558     0C81  2C83               	goto	u189_20
  8559     0C82                     u189_21:
  8560     0C82  2C6B               	goto	i1l3053
  8561     0C83                     u189_20:
  8562     0C83                     i1l3061:
  8563     0C83  0879               	movf	___wmul@product+1,w
  8564     0C84  00F5               	movwf	?___wmul+1
  8565     0C85  0878               	movf	___wmul@product,w
  8566     0C86  00F4               	movwf	?___wmul
  8567     0C87                     i1l1087:
  8568     0C87  0008               	return
  8569     0C88                     __end_of___wmul:
  8570                           
  8571                           	psect	text50
  8572     0AC0                     __ptext50:	
  8573 ;; *************** function _EUSART_Write *****************
  8574 ;; Defined at:
  8575 ;;		line 132 in file "mcc_generated_files/eusart.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  txData          1    wreg     unsigned char 
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  txData          1    0[COMMON] unsigned char 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8589 ;;      Params:         0       0       0       0       0       0
  8590 ;;      Locals:         1       0       0       0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0
  8592 ;;      Totals:         1       0       0       0       0       0
  8593 ;;Total ram usage:        1 bytes
  8594 ;; Hardware stack levels used: 1
  8595 ;; This function calls:
  8596 ;;		Nothing
  8597 ;; This function is called by:
  8598 ;;		_sendInfo
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602     0AC0                     _EUSART_Write:	
  8603                           ;psect for function _EUSART_Write
  8604                           
  8605                           
  8606                           ;incstack = 0
  8607                           ; Regs used in _EUSART_Write: [wreg]
  8608                           ;EUSART_Write@txData stored from wreg
  8609     0AC0  00F0               	movwf	EUSART_Write@txData
  8610     0AC1                     i1l3009:
  8611     0AC1                     i1l384:	
  8612                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  8613                           
  8614                           
  8615                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  8616     0AC1  0020               	movlb	0	; select bank0
  8617     0AC2  1E11               	btfss	17,4	;volatile
  8618     0AC3  2AC5               	goto	u176_21
  8619     0AC4  2AC6               	goto	u176_20
  8620     0AC5                     u176_21:
  8621     0AC5  2AC1               	goto	i1l384
  8622     0AC6                     u176_20:
  8623     0AC6                     i1l3011:
  8624                           
  8625                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  8626     0AC6  0870               	movf	EUSART_Write@txData,w
  8627     0AC7  0023               	movlb	3	; select bank3
  8628     0AC8  009A               	movwf	26	;volatile
  8629     0AC9                     i1l387:
  8630     0AC9  0008               	return
  8631     0ACA                     __end_of_EUSART_Write:
  8632                           
  8633                           	psect	text51
  8634     0C33                     __ptext51:	
  8635 ;; *************** function _ADC_GetConversion *****************
  8636 ;; Defined at:
  8637 ;;		line 112 in file "mcc_generated_files/adc.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  channel         1    wreg     enum E2485
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  channel         1    3[COMMON] enum E2485
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  2    0[COMMON] unsigned short 
  8644 ;; Registers used:
  8645 ;;		wreg, status,2, status,0
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8651 ;;      Params:         2       0       0       0       0       0
  8652 ;;      Locals:         1       0       0       0       0       0
  8653 ;;      Temps:          1       0       0       0       0       0
  8654 ;;      Totals:         4       0       0       0       0       0
  8655 ;;Total ram usage:        4 bytes
  8656 ;; Hardware stack levels used: 1
  8657 ;; This function calls:
  8658 ;;		Nothing
  8659 ;; This function is called by:
  8660 ;;		_sendInfo
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664     0C33                     _ADC_GetConversion:	
  8665                           ;psect for function _ADC_GetConversion
  8666                           
  8667                           
  8668                           ;incstack = 0
  8669                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  8670                           ;ADC_GetConversion@channel stored from wreg
  8671     0C33  00F3               	movwf	ADC_GetConversion@channel
  8672     0C34                     i1l2997:
  8673                           
  8674                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  8675     0C34  0873               	movf	ADC_GetConversion@channel,w
  8676     0C35  00F2               	movwf	??_ADC_GetConversion
  8677     0C36  0DF2               	rlf	??_ADC_GetConversion,f
  8678     0C37  0DF2               	rlf	??_ADC_GetConversion,f
  8679     0C38  0021               	movlb	1	; select bank1
  8680     0C39  081D               	movf	29,w	;volatile
  8681     0C3A  0672               	xorwf	??_ADC_GetConversion,w
  8682     0C3B  3983               	andlw	-125
  8683     0C3C  0672               	xorwf	??_ADC_GetConversion,w
  8684     0C3D  009D               	movwf	29	;volatile
  8685     0C3E                     i1l2999:
  8686                           
  8687                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  8688     0C3E  141D               	bsf	29,0	;volatile
  8689     0C3F                     i1l3001:
  8690                           
  8691                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8692     0C3F  3200               	nop2	;2 cycle nop
  8693     0C40  3200               	nop2	;2 cycle nop
  8694     0C41  0000               	nop
  8695     0C42                     i1l3003:
  8696                           
  8697                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  8698     0C42  0021               	movlb	1	; select bank1
  8699     0C43  149D               	bsf	29,1	;volatile
  8700     0C44                     i1l301:	
  8701                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  8702                           
  8703                           
  8704                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  8705     0C44  189D               	btfsc	29,1	;volatile
  8706     0C45  2C47               	goto	u175_21
  8707     0C46  2C48               	goto	u175_20
  8708     0C47                     u175_21:
  8709     0C47  2C44               	goto	i1l301
  8710     0C48                     u175_20:
  8711     0C48                     i1l3005:
  8712                           
  8713                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8714     0C48  081C               	movf	28,w	;volatile
  8715     0C49  00F1               	movwf	?_ADC_GetConversion+1
  8716     0C4A  081B               	movf	27,w	;volatile
  8717     0C4B  00F0               	movwf	?_ADC_GetConversion
  8718     0C4C                     i1l304:
  8719     0C4C  0008               	return
  8720     0C4D                     __end_of_ADC_GetConversion:
  8721                           
  8722                           	psect	text52
  8723     0B61                     __ptext52:	
  8724 ;; *************** function _PIN_MANAGER_IOC *****************
  8725 ;; Defined at:
  8726 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;		None
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;		None
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  1    wreg      void 
  8733 ;; Registers used:
  8734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8740 ;;      Params:         0       0       0       0       0       0
  8741 ;;      Locals:         0       0       0       0       0       0
  8742 ;;      Temps:          0       0       0       0       0       0
  8743 ;;      Totals:         0       0       0       0       0       0
  8744 ;;Total ram usage:        0 bytes
  8745 ;; Hardware stack levels used: 1
  8746 ;; Hardware stack levels required when called: 5
  8747 ;; This function calls:
  8748 ;;		_IOCBF0_ISR
  8749 ;;		_IOCBF3_ISR
  8750 ;; This function is called by:
  8751 ;;		_INTERRUPT_InterruptManager
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755     0B61                     _PIN_MANAGER_IOC:	
  8756                           ;psect for function _PIN_MANAGER_IOC
  8757                           
  8758     0B61                     i1l3847:	
  8759                           ;incstack = 0
  8760                           ; Regs used in _PIN_MANAGER_IOC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8761                           
  8762                           
  8763                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  8764     0B61  0027               	movlb	7	; select bank7
  8765     0B62  1C16               	btfss	22,0	;volatile
  8766     0B63  2B65               	goto	u283_21
  8767     0B64  2B66               	goto	u283_20
  8768     0B65                     u283_21:
  8769     0B65  2B69               	goto	i1l3851
  8770     0B66                     u283_20:
  8771     0B66                     i1l3849:
  8772                           
  8773                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  8774     0B66  318B  2323  318B   	fcall	_IOCBF0_ISR
  8775     0B69                     i1l3851:
  8776                           
  8777                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  8778     0B69  0027               	movlb	7	; select bank7
  8779     0B6A  1D96               	btfss	22,3	;volatile
  8780     0B6B  2B6D               	goto	u284_21
  8781     0B6C  2B6E               	goto	u284_20
  8782     0B6D                     u284_21:
  8783     0B6D  2B71               	goto	i1l202
  8784     0B6E                     u284_20:
  8785     0B6E                     i1l3853:
  8786                           
  8787                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  8788     0B6E  318B  2332  318B   	fcall	_IOCBF3_ISR
  8789     0B71                     i1l202:
  8790     0B71  0008               	return
  8791     0B72                     __end_of_PIN_MANAGER_IOC:
  8792                           
  8793                           	psect	text53
  8794     0B32                     __ptext53:	
  8795 ;; *************** function _IOCBF3_ISR *****************
  8796 ;; Defined at:
  8797 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8811 ;;      Params:         0       0       0       0       0       0
  8812 ;;      Locals:         0       0       0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0
  8814 ;;      Totals:         0       0       0       0       0       0
  8815 ;;Total ram usage:        0 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; Hardware stack levels required when called: 4
  8818 ;; This function calls:
  8819 ;;		NULL
  8820 ;;		_IOCBF3_DefaultInterruptHandler
  8821 ;;		_chegadaS2
  8822 ;; This function is called by:
  8823 ;;		_PIN_MANAGER_IOC
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827     0B32                     _IOCBF3_ISR:	
  8828                           ;psect for function _IOCBF3_ISR
  8829                           
  8830     0B32                     i1l3667:	
  8831                           ;incstack = 0
  8832                           ; Regs used in _IOCBF3_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8833                           
  8834                           
  8835                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  8836     0B32  0021               	movlb	1	; select bank1
  8837     0B33  085A               	movf	_IOCBF3_InterruptHandler^(0+128),w
  8838     0B34  045B               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  8839     0B35  1903               	btfsc	3,2
  8840     0B36  2B38               	goto	u276_21
  8841     0B37  2B39               	goto	u276_20
  8842     0B38                     u276_21:
  8843     0B38  2B3E               	goto	i1l3671
  8844     0B39                     u276_20:
  8845     0B39                     i1l3669:
  8846                           
  8847                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  8848     0B39  085B               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  8849     0B3A  008A               	movwf	10
  8850     0B3B  085A               	movf	_IOCBF3_InterruptHandler^(0+128),w
  8851     0B3C  000A               	callw
  8852     0B3D  318B               	pagesel	$
  8853     0B3E                     i1l3671:
  8854                           
  8855                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  8856     0B3E  0027               	movlb	7	; select bank7
  8857     0B3F  1196               	bcf	22,3	;volatile
  8858     0B40                     i1l216:
  8859     0B40  0008               	return
  8860     0B41                     __end_of_IOCBF3_ISR:
  8861                           
  8862                           	psect	text54
  8863     0A3B                     __ptext54:	
  8864 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  8865 ;; Defined at:
  8866 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;		None
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  1    wreg      void 
  8873 ;; Registers used:
  8874 ;;		None
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8880 ;;      Params:         0       0       0       0       0       0
  8881 ;;      Locals:         0       0       0       0       0       0
  8882 ;;      Temps:          0       0       0       0       0       0
  8883 ;;      Totals:         0       0       0       0       0       0
  8884 ;;Total ram usage:        0 bytes
  8885 ;; Hardware stack levels used: 1
  8886 ;; This function calls:
  8887 ;;		Nothing
  8888 ;; This function is called by:
  8889 ;;		_PIN_MANAGER_Initialize
  8890 ;;		_IOCBF3_ISR
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894     0A3B                     _IOCBF3_DefaultInterruptHandler:	
  8895                           ;psect for function _IOCBF3_DefaultInterruptHandler
  8896                           
  8897     0A3B                     i1l222:	
  8898                           ;incstack = 0
  8899                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  8900                           
  8901     0A3B  0008               	return
  8902     0A3C                     __end_of_IOCBF3_DefaultInterruptHandler:
  8903                           
  8904                           	psect	text55
  8905     0E99                     __ptext55:	
  8906 ;; *************** function _chegadaS2 *****************
  8907 ;; Defined at:
  8908 ;;		line 273 in file "main.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;		None
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;		None
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  1    wreg      void 
  8915 ;; Registers used:
  8916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8922 ;;      Params:         0       0       0       0       0       0
  8923 ;;      Locals:         0       0       0       0       0       0
  8924 ;;      Temps:          0       0       0       0       0       0
  8925 ;;      Totals:         0       0       0       0       0       0
  8926 ;;Total ram usage:        0 bytes
  8927 ;; Hardware stack levels used: 1
  8928 ;; Hardware stack levels required when called: 3
  8929 ;; This function calls:
  8930 ;;		_PWM3_LoadDutyValue
  8931 ;;		i1_TMR4_StartTimer
  8932 ;;		i1_TMR4_WriteTimer
  8933 ;;		i1_matrixUpdate
  8934 ;; This function is called by:
  8935 ;;		_main
  8936 ;;		_IOCBF3_ISR
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940     0E99                     _chegadaS2:	
  8941                           ;psect for function _chegadaS2
  8942                           
  8943     0E99                     i1l3371:	
  8944                           ;incstack = 0
  8945                           ; Regs used in _chegadaS2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8946                           
  8947                           
  8948                           ;main.c: 275:     andarAtual = 1;
  8949     0E99  0020               	movlb	0	; select bank0
  8950     0E9A  01EA               	clrf	_andarAtual
  8951     0E9B  0AEA               	incf	_andarAtual,f
  8952                           
  8953                           ;main.c: 278:     if((((destinoSub & 0b00000010) == 2 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00000010) == 2) ) ){
  8954     0E9C  0021               	movlb	1	; select bank1
  8955     0E9D  1CB2               	btfss	_destinoSub^(0+128),1
  8956     0E9E  2EA0               	goto	u230_21
  8957     0E9F  2EA1               	goto	u230_20
  8958     0EA0                     u230_21:
  8959     0EA0  2EA6               	goto	i1l3375
  8960     0EA1                     u230_20:
  8961     0EA1                     i1l3373:
  8962     0EA1  085E               	movf	_subindo^(0+128),w
  8963     0EA2  1D03               	btfss	3,2
  8964     0EA3  2EA5               	goto	u231_21
  8965     0EA4  2EA6               	goto	u231_20
  8966     0EA5                     u231_21:
  8967     0EA5  2EAF               	goto	i1l3379
  8968     0EA6                     u231_20:
  8969     0EA6                     i1l3375:
  8970     0EA6  085E               	movf	_subindo^(0+128),w
  8971     0EA7  1D03               	btfss	3,2
  8972     0EA8  2EAA               	goto	u232_21
  8973     0EA9  2EAB               	goto	u232_20
  8974     0EAA                     u232_21:
  8975     0EAA  2EBC               	goto	i1l3383
  8976     0EAB                     u232_20:
  8977     0EAB                     i1l3377:
  8978     0EAB  1CB1               	btfss	_destinoDesc^(0+128),1
  8979     0EAC  2EAE               	goto	u233_21
  8980     0EAD  2EAF               	goto	u233_20
  8981     0EAE                     u233_21:
  8982     0EAE  2EBC               	goto	i1l3383
  8983     0EAF                     u233_20:
  8984     0EAF                     i1l3379:
  8985                           
  8986                           ;main.c: 279:         PWM3_LoadDutyValue(0);
  8987     0EAF  3000               	movlw	0
  8988     0EB0  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  8989     0EB1  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  8990     0EB2  318B  23EA  318E   	fcall	_PWM3_LoadDutyValue
  8991                           
  8992                           ;main.c: 280:         TMR4_WriteTimer(0);
  8993     0EB5  3000               	movlw	0
  8994     0EB6  318A  224E  318E   	fcall	i1_TMR4_WriteTimer
  8995     0EB9                     i1l3381:
  8996                           
  8997                           ;main.c: 281:         TMR4_StartTimer();
  8998     0EB9  318A  223D  318E   	fcall	i1_TMR4_StartTimer
  8999     0EBC                     i1l3383:
  9000                           
  9001                           ;main.c: 286:     MatrixLed[0] = 0b00000000;
  9002     0EBC  0021               	movlb	1	; select bank1
  9003     0EBD  01A0               	clrf	_MatrixLed^(0+128)
  9004     0EBE                     i1l3385:
  9005                           
  9006                           ;main.c: 287:     MatrixLed[1] = 0b01000001;
  9007     0EBE  3041               	movlw	65
  9008     0EBF  00A1               	movwf	(_MatrixLed^(0+128)+1)
  9009     0EC0                     i1l3387:
  9010                           
  9011                           ;main.c: 288:     MatrixLed[2] = 0b11111111;
  9012     0EC0  30FF               	movlw	255
  9013     0EC1  00A2               	movwf	(_MatrixLed^(0+128)+2)
  9014     0EC2                     i1l3389:
  9015                           
  9016                           ;main.c: 289:     MatrixLed[3] = 0b00000001;
  9017     0EC2  01A3               	clrf	(_MatrixLed^(0+128)+3)
  9018     0EC3  0AA3               	incf	(_MatrixLed^(0+128)+3),f
  9019     0EC4                     i1l3391:
  9020                           
  9021                           ;main.c: 290:     MatrixLed[4] = 0;
  9022     0EC4  01A4               	clrf	(_MatrixLed^(0+128)+4)
  9023     0EC5                     i1l3393:
  9024                           
  9025                           ;main.c: 291:     if(subindo){
  9026     0EC5  085E               	movf	_subindo^(0+128),w
  9027     0EC6  1903               	btfsc	3,2
  9028     0EC7  2EC9               	goto	u234_21
  9029     0EC8  2ECA               	goto	u234_20
  9030     0EC9                     u234_21:
  9031     0EC9  2ED6               	goto	i1l3401
  9032     0ECA                     u234_20:
  9033     0ECA                     i1l3395:
  9034                           
  9035                           ;main.c: 292:         MatrixLed[5] = 0b01100000;
  9036     0ECA  3060               	movlw	96
  9037     0ECB  00A5               	movwf	(_MatrixLed^(0+128)+5)
  9038                           
  9039                           ;main.c: 293:         MatrixLed[6] = 0b11000000;
  9040     0ECC  30C0               	movlw	192
  9041     0ECD  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9042                           
  9043                           ;main.c: 294:         MatrixLed[7] = 0b01100000;
  9044     0ECE  3060               	movlw	96
  9045     0ECF  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9046     0ED0                     i1l3397:
  9047                           
  9048                           ;main.c: 295:         destinoSub = destinoSub & 0b11111101;
  9049     0ED0  0832               	movf	_destinoSub^(0+128),w
  9050     0ED1  39FD               	andlw	253
  9051     0ED2  00B2               	movwf	_destinoSub^(0+128)
  9052     0ED3                     i1l3399:
  9053                           
  9054                           ;main.c: 297:         mov = EmTrajeto;
  9055     0ED3  3002               	movlw	2
  9056     0ED4  00B7               	movwf	_mov^(0+128)
  9057                           
  9058                           ;main.c: 298:     }else{
  9059     0ED5  2EE6               	goto	i1l3409
  9060     0ED6                     i1l3401:
  9061                           
  9062                           ;main.c: 299:         MatrixLed[5] = 0b11000000;
  9063     0ED6  30C0               	movlw	192
  9064     0ED7  00A5               	movwf	(_MatrixLed^(0+128)+5)
  9065                           
  9066                           ;main.c: 300:         MatrixLed[6] = 0b01100000;
  9067     0ED8  3060               	movlw	96
  9068     0ED9  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9069                           
  9070                           ;main.c: 301:         MatrixLed[7] = 0b11000000;
  9071     0EDA  30C0               	movlw	192
  9072     0EDB  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9073     0EDC                     i1l3403:
  9074                           
  9075                           ;main.c: 302:         destinoDesc = destinoDesc & 0b11111101;
  9076     0EDC  0831               	movf	_destinoDesc^(0+128),w
  9077     0EDD  39FD               	andlw	253
  9078     0EDE  00B1               	movwf	_destinoDesc^(0+128)
  9079     0EDF                     i1l3405:
  9080                           
  9081                           ;main.c: 305:         if(destinoDesc == 0){
  9082     0EDF  0831               	movf	_destinoDesc^(0+128),w
  9083     0EE0  1D03               	btfss	3,2
  9084     0EE1  2EE3               	goto	u235_21
  9085     0EE2  2EE4               	goto	u235_20
  9086     0EE3                     u235_21:
  9087     0EE3  2EE6               	goto	i1l3409
  9088     0EE4                     u235_20:
  9089     0EE4                     i1l3407:
  9090                           
  9091                           ;main.c: 306:             mov = RetornaS0;
  9092     0EE4  3003               	movlw	3
  9093     0EE5  00B7               	movwf	_mov^(0+128)
  9094     0EE6                     i1l3409:
  9095                           
  9096                           ;main.c: 309:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9097     0EE6  0827               	movf	(_MatrixLed^(0+128)+7),w
  9098     0EE7  0432               	iorwf	_destinoSub^(0+128),w
  9099     0EE8  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9100     0EE9                     i1l3411:
  9101                           
  9102                           ;main.c: 310:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9103     0EE9  0826               	movf	(_MatrixLed^(0+128)+6),w
  9104     0EEA  0431               	iorwf	_destinoDesc^(0+128),w
  9105     0EEB  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9106     0EEC                     i1l3413:
  9107                           
  9108                           ;main.c: 311:     matrixUpdate();
  9109     0EEC  318C  2419  318E   	fcall	i1_matrixUpdate
  9110     0EEF                     i1l878:
  9111     0EEF  0008               	return
  9112     0EF0                     __end_of_chegadaS2:
  9113                           
  9114                           	psect	text56
  9115     0B23                     __ptext56:	
  9116 ;; *************** function _IOCBF0_ISR *****************
  9117 ;; Defined at:
  9118 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;		None
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;		None
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  1    wreg      void 
  9125 ;; Registers used:
  9126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9132 ;;      Params:         0       0       0       0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0
  9135 ;;      Totals:         0       0       0       0       0       0
  9136 ;;Total ram usage:        0 bytes
  9137 ;; Hardware stack levels used: 1
  9138 ;; Hardware stack levels required when called: 4
  9139 ;; This function calls:
  9140 ;;		NULL
  9141 ;;		_IOCBF0_DefaultInterruptHandler
  9142 ;;		i1_chegadaS1
  9143 ;; This function is called by:
  9144 ;;		_PIN_MANAGER_IOC
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148     0B23                     _IOCBF0_ISR:	
  9149                           ;psect for function _IOCBF0_ISR
  9150                           
  9151     0B23                     i1l3661:	
  9152                           ;incstack = 0
  9153                           ; Regs used in _IOCBF0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9154                           
  9155                           
  9156                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
  9157     0B23  0021               	movlb	1	; select bank1
  9158     0B24  085C               	movf	_IOCBF0_InterruptHandler^(0+128),w
  9159     0B25  045D               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+128),w
  9160     0B26  1903               	btfsc	3,2
  9161     0B27  2B29               	goto	u275_21
  9162     0B28  2B2A               	goto	u275_20
  9163     0B29                     u275_21:
  9164     0B29  2B2F               	goto	i1l3665
  9165     0B2A                     u275_20:
  9166     0B2A                     i1l3663:
  9167                           
  9168                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
  9169     0B2A  085D               	movf	(_IOCBF0_InterruptHandler+1)^(0+128),w
  9170     0B2B  008A               	movwf	10
  9171     0B2C  085C               	movf	_IOCBF0_InterruptHandler^(0+128),w
  9172     0B2D  000A               	callw
  9173     0B2E  318B               	pagesel	$
  9174     0B2F                     i1l3665:
  9175                           
  9176                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
  9177     0B2F  0027               	movlb	7	; select bank7
  9178     0B30  1016               	bcf	22,0	;volatile
  9179     0B31                     i1l206:
  9180     0B31  0008               	return
  9181     0B32                     __end_of_IOCBF0_ISR:
  9182                           
  9183                           	psect	text57
  9184     0A3A                     __ptext57:	
  9185 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  9186 ;; Defined at:
  9187 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;		None
  9190 ;; Auto vars:     Size  Location     Type
  9191 ;;		None
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  1    wreg      void 
  9194 ;; Registers used:
  9195 ;;		None
  9196 ;; Tracked objects:
  9197 ;;		On entry : 0/0
  9198 ;;		On exit  : 0/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9201 ;;      Params:         0       0       0       0       0       0
  9202 ;;      Locals:         0       0       0       0       0       0
  9203 ;;      Temps:          0       0       0       0       0       0
  9204 ;;      Totals:         0       0       0       0       0       0
  9205 ;;Total ram usage:        0 bytes
  9206 ;; Hardware stack levels used: 1
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		_PIN_MANAGER_Initialize
  9211 ;;		_IOCBF0_ISR
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215     0A3A                     _IOCBF0_DefaultInterruptHandler:	
  9216                           ;psect for function _IOCBF0_DefaultInterruptHandler
  9217                           
  9218     0A3A                     i1l212:	
  9219                           ;incstack = 0
  9220                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  9221                           
  9222     0A3A  0008               	return
  9223     0A3B                     __end_of_IOCBF0_DefaultInterruptHandler:
  9224                           
  9225                           	psect	text58
  9226     0D80                     __ptext58:	
  9227 ;; *************** function i1_chegadaS1 *****************
  9228 ;; Defined at:
  9229 ;;		line 242 in file "main.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;		None
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;		None
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1    wreg      void 
  9236 ;; Registers used:
  9237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9243 ;;      Params:         0       0       0       0       0       0
  9244 ;;      Locals:         0       0       0       0       0       0
  9245 ;;      Temps:          0       0       0       0       0       0
  9246 ;;      Totals:         0       0       0       0       0       0
  9247 ;;Total ram usage:        0 bytes
  9248 ;; Hardware stack levels used: 1
  9249 ;; Hardware stack levels required when called: 3
  9250 ;; This function calls:
  9251 ;;		i1_TMR4_StartTimer
  9252 ;;		i1_matrixUpdate
  9253 ;; This function is called by:
  9254 ;;		_IOCBF0_ISR
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258     0D80                     i1_chegadaS1:	
  9259                           ;psect for function i1_chegadaS1
  9260                           
  9261     0D80                     i1l3499:	
  9262                           ;incstack = 0
  9263                           ; Regs used in i1_chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9264                           
  9265                           
  9266                           ;main.c: 244:     andarAtual = 0;
  9267     0D80  0020               	movlb	0	; select bank0
  9268     0D81  01EA               	clrf	_andarAtual
  9269     0D82                     i1l3501:
  9270                           
  9271                           ;main.c: 248:     MatrixLed[0] = 0b01111110;
  9272     0D82  307E               	movlw	126
  9273     0D83  0021               	movlb	1	; select bank1
  9274     0D84  00A0               	movwf	_MatrixLed^(0+128)
  9275     0D85                     i1l3503:
  9276                           
  9277                           ;main.c: 249:     MatrixLed[1] = 0b10000001;
  9278     0D85  3081               	movlw	129
  9279     0D86  00A1               	movwf	(_MatrixLed^(0+128)+1)
  9280     0D87                     i1l3505:
  9281                           
  9282                           ;main.c: 250:     MatrixLed[2] = 0b10000001;
  9283     0D87  3081               	movlw	129
  9284     0D88  00A2               	movwf	(_MatrixLed^(0+128)+2)
  9285     0D89                     i1l3507:
  9286                           
  9287                           ;main.c: 251:     MatrixLed[3] = 0b01111110;
  9288     0D89  307E               	movlw	126
  9289     0D8A  00A3               	movwf	(_MatrixLed^(0+128)+3)
  9290                           
  9291                           ;main.c: 252:     MatrixLed[4] = 0;
  9292     0D8B  01A4               	clrf	(_MatrixLed^(0+128)+4)
  9293     0D8C                     i1l3509:
  9294                           
  9295                           ;main.c: 253:     if(subindo){
  9296     0D8C  085E               	movf	_subindo^(0+128),w
  9297     0D8D  1903               	btfsc	3,2
  9298     0D8E  2D90               	goto	u260_21
  9299     0D8F  2D91               	goto	u260_20
  9300     0D90                     u260_21:
  9301     0D90  2D9B               	goto	i1l3515
  9302     0D91                     u260_20:
  9303     0D91                     i1l3511:
  9304                           
  9305                           ;main.c: 254:         MatrixLed[5] = 0b01100000;
  9306     0D91  3060               	movlw	96
  9307     0D92  00A5               	movwf	(_MatrixLed^(0+128)+5)
  9308                           
  9309                           ;main.c: 255:         MatrixLed[6] = 0b11000000;
  9310     0D93  30C0               	movlw	192
  9311     0D94  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9312                           
  9313                           ;main.c: 256:         MatrixLed[7] = 0b01100000;
  9314     0D95  3060               	movlw	96
  9315     0D96  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9316     0D97                     i1l3513:
  9317                           
  9318                           ;main.c: 257:         destinoSub = destinoSub & 0b11111110;
  9319     0D97  0832               	movf	_destinoSub^(0+128),w
  9320     0D98  39FE               	andlw	254
  9321     0D99  00B2               	movwf	_destinoSub^(0+128)
  9322                           
  9323                           ;main.c: 258:     }else{
  9324     0D9A  2DA8               	goto	i1l3521
  9325     0D9B                     i1l3515:
  9326                           
  9327                           ;main.c: 259:         MatrixLed[5] = 0b11000000;
  9328     0D9B  30C0               	movlw	192
  9329     0D9C  00A5               	movwf	(_MatrixLed^(0+128)+5)
  9330                           
  9331                           ;main.c: 260:         MatrixLed[6] = 0b01100000;
  9332     0D9D  3060               	movlw	96
  9333     0D9E  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9334                           
  9335                           ;main.c: 261:         MatrixLed[7] = 0b11000000;
  9336     0D9F  30C0               	movlw	192
  9337     0DA0  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9338     0DA1                     i1l3517:
  9339                           
  9340                           ;main.c: 262:         destinoDesc = destinoDesc & 0b11111110;
  9341     0DA1  0831               	movf	_destinoDesc^(0+128),w
  9342     0DA2  39FE               	andlw	254
  9343     0DA3  00B1               	movwf	_destinoDesc^(0+128)
  9344                           
  9345                           ;main.c: 263:         mov = Repouso;
  9346     0DA4  01B7               	clrf	_mov^(0+128)
  9347     0DA5                     i1l3519:
  9348                           
  9349                           ;main.c: 265:         TMR4_StartTimer();
  9350     0DA5  318A  223D  318D   	fcall	i1_TMR4_StartTimer
  9351     0DA8                     i1l3521:
  9352                           
  9353                           ;main.c: 267:     matrixUpdate();
  9354     0DA8  318C  2419  318D   	fcall	i1_matrixUpdate
  9355     0DAB                     i1l3523:
  9356                           
  9357                           ;main.c: 269:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9358     0DAB  0021               	movlb	1	; select bank1
  9359     0DAC  0827               	movf	(_MatrixLed^(0+128)+7),w
  9360     0DAD  0432               	iorwf	_destinoSub^(0+128),w
  9361     0DAE  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9362     0DAF                     i1l3525:
  9363                           
  9364                           ;main.c: 270:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9365     0DAF  0826               	movf	(_MatrixLed^(0+128)+6),w
  9366     0DB0  0431               	iorwf	_destinoDesc^(0+128),w
  9367     0DB1  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9368     0DB2                     i1l867:
  9369     0DB2  0008               	return
  9370     0DB3                     __end_ofi1_chegadaS1:
  9371                           
  9372                           	psect	text59
  9373     0A5E                     __ptext59:	
  9374 ;; *************** function _CMP2_ISR *****************
  9375 ;; Defined at:
  9376 ;;		line 86 in file "mcc_generated_files/cmp2.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      void 
  9383 ;; Registers used:
  9384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9390 ;;      Params:         0       0       0       0       0       0
  9391 ;;      Locals:         0       0       0       0       0       0
  9392 ;;      Temps:          0       0       0       0       0       0
  9393 ;;      Totals:         0       0       0       0       0       0
  9394 ;;Total ram usage:        0 bytes
  9395 ;; Hardware stack levels used: 1
  9396 ;; Hardware stack levels required when called: 4
  9397 ;; This function calls:
  9398 ;;		_chegadaS4
  9399 ;; This function is called by:
  9400 ;;		_INTERRUPT_InterruptManager
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404     0A5E                     _CMP2_ISR:	
  9405                           ;psect for function _CMP2_ISR
  9406                           
  9407     0A5E                     i1l3839:	
  9408                           ;incstack = 0
  9409                           ; Regs used in _CMP2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9410                           
  9411                           
  9412                           ;mcc_generated_files/cmp2.c: 89:     PIR2bits.C2IF = 0;
  9413     0A5E  0020               	movlb	0	; select bank0
  9414     0A5F  1312               	bcf	18,6	;volatile
  9415     0A60                     i1l3841:
  9416                           
  9417                           ;mcc_generated_files/cmp2.c: 90:     chegadaS4();
  9418     0A60  318F  27A4  318A   	fcall	_chegadaS4
  9419     0A63                     i1l81:
  9420     0A63  0008               	return
  9421     0A64                     __end_of_CMP2_ISR:
  9422                           
  9423                           	psect	text60
  9424     0FA4                     __ptext60:	
  9425 ;; *************** function _chegadaS4 *****************
  9426 ;; Defined at:
  9427 ;;		line 353 in file "main.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;		None
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;		None
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  1    wreg      void 
  9434 ;; Registers used:
  9435 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9441 ;;      Params:         0       0       0       0       0       0
  9442 ;;      Locals:         0       0       0       0       0       0
  9443 ;;      Temps:          0       0       0       0       0       0
  9444 ;;      Totals:         0       0       0       0       0       0
  9445 ;;Total ram usage:        0 bytes
  9446 ;; Hardware stack levels used: 1
  9447 ;; Hardware stack levels required when called: 3
  9448 ;; This function calls:
  9449 ;;		_PWM3_LoadDutyValue
  9450 ;;		i1_TMR4_StartTimer
  9451 ;;		i1_TMR4_WriteTimer
  9452 ;;		i1_matrixUpdate
  9453 ;; This function is called by:
  9454 ;;		_CMP2_ISR
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458     0FA4                     _chegadaS4:	
  9459                           ;psect for function _chegadaS4
  9460                           
  9461     0FA4                     i1l3543:	
  9462                           ;incstack = 0
  9463                           ; Regs used in _chegadaS4: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9464                           
  9465                           
  9466                           ;main.c: 355:     andarAtual = 3;
  9467     0FA4  3003               	movlw	3
  9468     0FA5  0020               	movlb	0	; select bank0
  9469     0FA6  00EA               	movwf	_andarAtual
  9470     0FA7                     i1l3545:
  9471                           
  9472                           ;main.c: 358:     if((((destinoSub & 0b00001000) == 8 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00001000) == 8 )) ){
  9473     0FA7  0021               	movlb	1	; select bank1
  9474     0FA8  1DB2               	btfss	_destinoSub^(0+128),3
  9475     0FA9  2FAB               	goto	u261_21
  9476     0FAA  2FAC               	goto	u261_20
  9477     0FAB                     u261_21:
  9478     0FAB  2FB1               	goto	i1l3549
  9479     0FAC                     u261_20:
  9480     0FAC                     i1l3547:
  9481     0FAC  085E               	movf	_subindo^(0+128),w
  9482     0FAD  1D03               	btfss	3,2
  9483     0FAE  2FB0               	goto	u262_21
  9484     0FAF  2FB1               	goto	u262_20
  9485     0FB0                     u262_21:
  9486     0FB0  2FBA               	goto	i1l3553
  9487     0FB1                     u262_20:
  9488     0FB1                     i1l3549:
  9489     0FB1  085E               	movf	_subindo^(0+128),w
  9490     0FB2  1D03               	btfss	3,2
  9491     0FB3  2FB5               	goto	u263_21
  9492     0FB4  2FB6               	goto	u263_20
  9493     0FB5                     u263_21:
  9494     0FB5  2FC7               	goto	i1l892
  9495     0FB6                     u263_20:
  9496     0FB6                     i1l3551:
  9497     0FB6  1DB1               	btfss	_destinoDesc^(0+128),3
  9498     0FB7  2FB9               	goto	u264_21
  9499     0FB8  2FBA               	goto	u264_20
  9500     0FB9                     u264_21:
  9501     0FB9  2FC7               	goto	i1l892
  9502     0FBA                     u264_20:
  9503     0FBA                     i1l3553:
  9504                           
  9505                           ;main.c: 359:         PWM3_LoadDutyValue(0);
  9506     0FBA  3000               	movlw	0
  9507     0FBB  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  9508     0FBC  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  9509     0FBD  318B  23EA  318F   	fcall	_PWM3_LoadDutyValue
  9510                           
  9511                           ;main.c: 360:         TMR4_WriteTimer(0);
  9512     0FC0  3000               	movlw	0
  9513     0FC1  318A  224E  318F   	fcall	i1_TMR4_WriteTimer
  9514     0FC4                     i1l3555:
  9515                           
  9516                           ;main.c: 361:         TMR4_StartTimer();
  9517     0FC4  318A  223D  318F   	fcall	i1_TMR4_StartTimer
  9518     0FC7                     i1l892:	
  9519                           ;main.c: 362:     }
  9520                           
  9521                           
  9522                           ;main.c: 365:     MatrixLed[0] = 0b10000001;
  9523     0FC7  3081               	movlw	129
  9524     0FC8  0021               	movlb	1	; select bank1
  9525     0FC9  00A0               	movwf	_MatrixLed^(0+128)
  9526                           
  9527                           ;main.c: 366:     MatrixLed[1] = 0b10010001;
  9528     0FCA  3091               	movlw	145
  9529     0FCB  00A1               	movwf	(_MatrixLed^(0+128)+1)
  9530                           
  9531                           ;main.c: 367:     MatrixLed[2] = 0b10010001;
  9532     0FCC  3091               	movlw	145
  9533     0FCD  00A2               	movwf	(_MatrixLed^(0+128)+2)
  9534                           
  9535                           ;main.c: 368:     MatrixLed[3] = 0b01101110;
  9536     0FCE  306E               	movlw	110
  9537     0FCF  00A3               	movwf	(_MatrixLed^(0+128)+3)
  9538     0FD0                     i1l3557:
  9539                           
  9540                           ;main.c: 369:     MatrixLed[4] = 0;
  9541     0FD0  01A4               	clrf	(_MatrixLed^(0+128)+4)
  9542     0FD1                     i1l3559:
  9543                           
  9544                           ;main.c: 370:     if(subindo){
  9545     0FD1  085E               	movf	_subindo^(0+128),w
  9546     0FD2  1903               	btfsc	3,2
  9547     0FD3  2FD5               	goto	u265_21
  9548     0FD4  2FD6               	goto	u265_20
  9549     0FD5                     u265_21:
  9550     0FD5  2FE0               	goto	i1l3565
  9551     0FD6                     u265_20:
  9552     0FD6                     i1l3561:
  9553                           
  9554                           ;main.c: 371:         MatrixLed[5] = 0b01100000;
  9555     0FD6  3060               	movlw	96
  9556     0FD7  00A5               	movwf	(_MatrixLed^(0+128)+5)
  9557                           
  9558                           ;main.c: 372:         MatrixLed[6] = 0b11000000;
  9559     0FD8  30C0               	movlw	192
  9560     0FD9  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9561                           
  9562                           ;main.c: 373:         MatrixLed[7] = 0b01100000;
  9563     0FDA  3060               	movlw	96
  9564     0FDB  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9565     0FDC                     i1l3563:
  9566                           
  9567                           ;main.c: 374:         destinoSub = destinoSub & 0b11110111;
  9568     0FDC  0832               	movf	_destinoSub^(0+128),w
  9569     0FDD  39F7               	andlw	247
  9570     0FDE  00B2               	movwf	_destinoSub^(0+128)
  9571                           
  9572                           ;main.c: 375:     }else{
  9573     0FDF  2FE9               	goto	i1l3569
  9574     0FE0                     i1l3565:
  9575                           
  9576                           ;main.c: 376:         MatrixLed[5] = 0b11000000;
  9577     0FE0  30C0               	movlw	192
  9578     0FE1  00A5               	movwf	(_MatrixLed^(0+128)+5)
  9579                           
  9580                           ;main.c: 377:         MatrixLed[6] = 0b01100000;
  9581     0FE2  3060               	movlw	96
  9582     0FE3  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9583                           
  9584                           ;main.c: 378:         MatrixLed[7] = 0b11000000;
  9585     0FE4  30C0               	movlw	192
  9586     0FE5  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9587     0FE6                     i1l3567:
  9588                           
  9589                           ;main.c: 379:         destinoDesc = destinoDesc & 0b11110111;
  9590     0FE6  0831               	movf	_destinoDesc^(0+128),w
  9591     0FE7  39F7               	andlw	247
  9592     0FE8  00B1               	movwf	_destinoDesc^(0+128)
  9593     0FE9                     i1l3569:
  9594                           
  9595                           ;main.c: 381:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9596     0FE9  0827               	movf	(_MatrixLed^(0+128)+7),w
  9597     0FEA  0432               	iorwf	_destinoSub^(0+128),w
  9598     0FEB  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9599     0FEC                     i1l3571:
  9600                           
  9601                           ;main.c: 382:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9602     0FEC  0826               	movf	(_MatrixLed^(0+128)+6),w
  9603     0FED  0431               	iorwf	_destinoDesc^(0+128),w
  9604     0FEE  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9605     0FEF                     i1l3573:
  9606                           
  9607                           ;main.c: 383:     matrixUpdate();
  9608     0FEF  318C  2419  318F   	fcall	i1_matrixUpdate
  9609     0FF2                     i1l3575:
  9610                           
  9611                           ;main.c: 386:     if(destinoDesc ==0 && destinoSub == 0){
  9612     0FF2  0021               	movlb	1	; select bank1
  9613     0FF3  0831               	movf	_destinoDesc^(0+128),w
  9614     0FF4  1D03               	btfss	3,2
  9615     0FF5  2FF7               	goto	u266_21
  9616     0FF6  2FF8               	goto	u266_20
  9617     0FF7                     u266_21:
  9618     0FF7  2FFF               	goto	i1l900
  9619     0FF8                     u266_20:
  9620     0FF8                     i1l3577:
  9621     0FF8  0832               	movf	_destinoSub^(0+128),w
  9622     0FF9  1D03               	btfss	3,2
  9623     0FFA  2FFC               	goto	u267_21
  9624     0FFB  2FFD               	goto	u267_20
  9625     0FFC                     u267_21:
  9626     0FFC  2FFF               	goto	i1l900
  9627     0FFD                     u267_20:
  9628     0FFD                     i1l3579:
  9629                           
  9630                           ;main.c: 387:         mov = RetornaS0;
  9631     0FFD  3003               	movlw	3
  9632     0FFE  00B7               	movwf	_mov^(0+128)
  9633     0FFF                     i1l900:
  9634     0FFF  0008               	return
  9635     1000                     __end_of_chegadaS4:
  9636                           
  9637                           	psect	text61
  9638     0A58                     __ptext61:	
  9639 ;; *************** function _CMP1_ISR *****************
  9640 ;; Defined at:
  9641 ;;		line 86 in file "mcc_generated_files/cmp1.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;		None
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;		None
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  1    wreg      void 
  9648 ;; Registers used:
  9649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9655 ;;      Params:         0       0       0       0       0       0
  9656 ;;      Locals:         0       0       0       0       0       0
  9657 ;;      Temps:          0       0       0       0       0       0
  9658 ;;      Totals:         0       0       0       0       0       0
  9659 ;;Total ram usage:        0 bytes
  9660 ;; Hardware stack levels used: 1
  9661 ;; Hardware stack levels required when called: 4
  9662 ;; This function calls:
  9663 ;;		_chegadaS3
  9664 ;; This function is called by:
  9665 ;;		_INTERRUPT_InterruptManager
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669     0A58                     _CMP1_ISR:	
  9670                           ;psect for function _CMP1_ISR
  9671                           
  9672     0A58                     i1l3843:	
  9673                           ;incstack = 0
  9674                           ; Regs used in _CMP1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9675                           
  9676                           
  9677                           ;mcc_generated_files/cmp1.c: 89:     PIR2bits.C1IF = 0;
  9678     0A58  0020               	movlb	0	; select bank0
  9679     0A59  1292               	bcf	18,5	;volatile
  9680     0A5A                     i1l3845:
  9681                           
  9682                           ;mcc_generated_files/cmp1.c: 90:     chegadaS3();
  9683     0A5A  318F  2748  318A   	fcall	_chegadaS3
  9684     0A5D                     i1l148:
  9685     0A5D  0008               	return
  9686     0A5E                     __end_of_CMP1_ISR:
  9687                           
  9688                           	psect	text62
  9689     0F48                     __ptext62:	
  9690 ;; *************** function _chegadaS3 *****************
  9691 ;; Defined at:
  9692 ;;		line 314 in file "main.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;		None
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9706 ;;      Params:         0       0       0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0
  9709 ;;      Totals:         0       0       0       0       0       0
  9710 ;;Total ram usage:        0 bytes
  9711 ;; Hardware stack levels used: 1
  9712 ;; Hardware stack levels required when called: 3
  9713 ;; This function calls:
  9714 ;;		_PWM3_LoadDutyValue
  9715 ;;		i1_TMR4_StartTimer
  9716 ;;		i1_TMR4_WriteTimer
  9717 ;;		i1_matrixUpdate
  9718 ;; This function is called by:
  9719 ;;		_CMP1_ISR
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723     0F48                     _chegadaS3:	
  9724                           ;psect for function _chegadaS3
  9725                           
  9726     0F48                     i1l3589:	
  9727                           ;incstack = 0
  9728                           ; Regs used in _chegadaS3: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9729                           
  9730                           
  9731                           ;main.c: 316:     andarAtual = 2;
  9732     0F48  3002               	movlw	2
  9733     0F49  0020               	movlb	0	; select bank0
  9734     0F4A  00EA               	movwf	_andarAtual
  9735     0F4B                     i1l3591:
  9736                           
  9737                           ;main.c: 319:     if((((destinoSub & 0b00000100) == 4 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00000100) == 4 )) ){
  9738     0F4B  0021               	movlb	1	; select bank1
  9739     0F4C  1D32               	btfss	_destinoSub^(0+128),2
  9740     0F4D  2F4F               	goto	u268_21
  9741     0F4E  2F50               	goto	u268_20
  9742     0F4F                     u268_21:
  9743     0F4F  2F55               	goto	i1l3595
  9744     0F50                     u268_20:
  9745     0F50                     i1l3593:
  9746     0F50  085E               	movf	_subindo^(0+128),w
  9747     0F51  1D03               	btfss	3,2
  9748     0F52  2F54               	goto	u269_21
  9749     0F53  2F55               	goto	u269_20
  9750     0F54                     u269_21:
  9751     0F54  2F5E               	goto	i1l3599
  9752     0F55                     u269_20:
  9753     0F55                     i1l3595:
  9754     0F55  085E               	movf	_subindo^(0+128),w
  9755     0F56  1D03               	btfss	3,2
  9756     0F57  2F59               	goto	u270_21
  9757     0F58  2F5A               	goto	u270_20
  9758     0F59                     u270_21:
  9759     0F59  2F6B               	goto	i1l881
  9760     0F5A                     u270_20:
  9761     0F5A                     i1l3597:
  9762     0F5A  1D31               	btfss	_destinoDesc^(0+128),2
  9763     0F5B  2F5D               	goto	u271_21
  9764     0F5C  2F5E               	goto	u271_20
  9765     0F5D                     u271_21:
  9766     0F5D  2F6B               	goto	i1l881
  9767     0F5E                     u271_20:
  9768     0F5E                     i1l3599:
  9769                           
  9770                           ;main.c: 320:         PWM3_LoadDutyValue(0);
  9771     0F5E  3000               	movlw	0
  9772     0F5F  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  9773     0F60  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  9774     0F61  318B  23EA  318F   	fcall	_PWM3_LoadDutyValue
  9775                           
  9776                           ;main.c: 321:         TMR4_WriteTimer(0);
  9777     0F64  3000               	movlw	0
  9778     0F65  318A  224E  318F   	fcall	i1_TMR4_WriteTimer
  9779     0F68                     i1l3601:
  9780                           
  9781                           ;main.c: 322:         TMR4_StartTimer();
  9782     0F68  318A  223D  318F   	fcall	i1_TMR4_StartTimer
  9783     0F6B                     i1l881:	
  9784                           ;main.c: 323:     }
  9785                           
  9786                           
  9787                           ;main.c: 326:     MatrixLed[0] = 0b01000011;
  9788     0F6B  3043               	movlw	67
  9789     0F6C  0021               	movlb	1	; select bank1
  9790     0F6D  00A0               	movwf	_MatrixLed^(0+128)
  9791                           
  9792                           ;main.c: 327:     MatrixLed[1] = 0b10000101;
  9793     0F6E  3085               	movlw	133
  9794     0F6F  00A1               	movwf	(_MatrixLed^(0+128)+1)
  9795                           
  9796                           ;main.c: 328:     MatrixLed[2] = 0b10001001;
  9797     0F70  3089               	movlw	137
  9798     0F71  00A2               	movwf	(_MatrixLed^(0+128)+2)
  9799                           
  9800                           ;main.c: 329:     MatrixLed[3] = 0b01110001;
  9801     0F72  3071               	movlw	113
  9802     0F73  00A3               	movwf	(_MatrixLed^(0+128)+3)
  9803     0F74                     i1l3603:
  9804                           
  9805                           ;main.c: 330:     MatrixLed[4] = 0;
  9806     0F74  01A4               	clrf	(_MatrixLed^(0+128)+4)
  9807     0F75                     i1l3605:
  9808                           
  9809                           ;main.c: 331:     if(subindo){
  9810     0F75  085E               	movf	_subindo^(0+128),w
  9811     0F76  1903               	btfsc	3,2
  9812     0F77  2F79               	goto	u272_21
  9813     0F78  2F7A               	goto	u272_20
  9814     0F79                     u272_21:
  9815     0F79  2F84               	goto	i1l3611
  9816     0F7A                     u272_20:
  9817     0F7A                     i1l3607:
  9818                           
  9819                           ;main.c: 332:         MatrixLed[5] = 0b01100000;
  9820     0F7A  3060               	movlw	96
  9821     0F7B  00A5               	movwf	(_MatrixLed^(0+128)+5)
  9822                           
  9823                           ;main.c: 333:         MatrixLed[6] = 0b11000000;
  9824     0F7C  30C0               	movlw	192
  9825     0F7D  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9826                           
  9827                           ;main.c: 334:         MatrixLed[7] = 0b01100000;
  9828     0F7E  3060               	movlw	96
  9829     0F7F  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9830     0F80                     i1l3609:
  9831                           
  9832                           ;main.c: 335:         destinoSub = destinoSub & 0b11111011;
  9833     0F80  0832               	movf	_destinoSub^(0+128),w
  9834     0F81  39FB               	andlw	251
  9835     0F82  00B2               	movwf	_destinoSub^(0+128)
  9836                           
  9837                           ;main.c: 336:     }else{
  9838     0F83  2F8D               	goto	i1l3615
  9839     0F84                     i1l3611:
  9840                           
  9841                           ;main.c: 337:         MatrixLed[5] = 0b11000000;
  9842     0F84  30C0               	movlw	192
  9843     0F85  00A5               	movwf	(_MatrixLed^(0+128)+5)
  9844                           
  9845                           ;main.c: 338:         MatrixLed[6] = 0b01100000;
  9846     0F86  3060               	movlw	96
  9847     0F87  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9848                           
  9849                           ;main.c: 339:         MatrixLed[7] = 0b11000000;
  9850     0F88  30C0               	movlw	192
  9851     0F89  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9852     0F8A                     i1l3613:
  9853                           
  9854                           ;main.c: 340:         destinoDesc = destinoDesc & 0b11111011;
  9855     0F8A  0831               	movf	_destinoDesc^(0+128),w
  9856     0F8B  39FB               	andlw	251
  9857     0F8C  00B1               	movwf	_destinoDesc^(0+128)
  9858     0F8D                     i1l3615:
  9859                           
  9860                           ;main.c: 342:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9861     0F8D  0827               	movf	(_MatrixLed^(0+128)+7),w
  9862     0F8E  0432               	iorwf	_destinoSub^(0+128),w
  9863     0F8F  00A7               	movwf	(_MatrixLed^(0+128)+7)
  9864     0F90                     i1l3617:
  9865                           
  9866                           ;main.c: 343:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9867     0F90  0826               	movf	(_MatrixLed^(0+128)+6),w
  9868     0F91  0431               	iorwf	_destinoDesc^(0+128),w
  9869     0F92  00A6               	movwf	(_MatrixLed^(0+128)+6)
  9870     0F93                     i1l3619:
  9871                           
  9872                           ;main.c: 344:     matrixUpdate();
  9873     0F93  318C  2419  318F   	fcall	i1_matrixUpdate
  9874     0F96                     i1l3621:
  9875                           
  9876                           ;main.c: 347:     if(destinoDesc ==0 && destinoSub == 0){
  9877     0F96  0021               	movlb	1	; select bank1
  9878     0F97  0831               	movf	_destinoDesc^(0+128),w
  9879     0F98  1D03               	btfss	3,2
  9880     0F99  2F9B               	goto	u273_21
  9881     0F9A  2F9C               	goto	u273_20
  9882     0F9B                     u273_21:
  9883     0F9B  2FA3               	goto	i1l889
  9884     0F9C                     u273_20:
  9885     0F9C                     i1l3623:
  9886     0F9C  0832               	movf	_destinoSub^(0+128),w
  9887     0F9D  1D03               	btfss	3,2
  9888     0F9E  2FA0               	goto	u274_21
  9889     0F9F  2FA1               	goto	u274_20
  9890     0FA0                     u274_21:
  9891     0FA0  2FA3               	goto	i1l889
  9892     0FA1                     u274_20:
  9893     0FA1                     i1l3625:
  9894                           
  9895                           ;main.c: 348:         mov = RetornaS0;
  9896     0FA1  3003               	movlw	3
  9897     0FA2  00B7               	movwf	_mov^(0+128)
  9898     0FA3                     i1l889:
  9899     0FA3  0008               	return
  9900     0FA4                     __end_of_chegadaS3:
  9901                           
  9902                           	psect	text63
  9903     0C19                     __ptext63:	
  9904 ;; *************** function i1_matrixUpdate *****************
  9905 ;; Defined at:
  9906 ;;		line 163 in file "main.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;		None
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;  data            2    8[COMMON] unsigned char [2]
  9911 ;;  i               1   10[COMMON] unsigned char 
  9912 ;;  i               1    0        unsigned char 
  9913 ;;  index           1    0        unsigned char 
  9914 ;; Return value:  Size  Location     Type
  9915 ;;                  1    wreg      void 
  9916 ;; Registers used:
  9917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9918 ;; Tracked objects:
  9919 ;;		On entry : 0/0
  9920 ;;		On exit  : 0/0
  9921 ;;		Unchanged: 0/0
  9922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9923 ;;      Params:         0       0       0       0       0       0
  9924 ;;      Locals:         3       0       0       0       0       0
  9925 ;;      Temps:          0       0       0       0       0       0
  9926 ;;      Totals:         3       0       0       0       0       0
  9927 ;;Total ram usage:        3 bytes
  9928 ;; Hardware stack levels used: 1
  9929 ;; Hardware stack levels required when called: 2
  9930 ;; This function calls:
  9931 ;;		i1_txSpi
  9932 ;; This function is called by:
  9933 ;;		_chegadaS2
  9934 ;;		_chegadaS3
  9935 ;;		_chegadaS4
  9936 ;;		i1_chegadaS1
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940     0C19                     i1_matrixUpdate:	
  9941                           ;psect for function i1_matrixUpdate
  9942                           
  9943     0C19                     i1l3245:	
  9944                           ;incstack = 0
  9945                           ; Regs used in i1_matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9946                           
  9947                           
  9948                           ;main.c: 166:         for(uint8_t i=8;i>0;i--){
  9949     0C19  3008               	movlw	8
  9950     0C1A  00FA               	movwf	i1matrixUpdate@i
  9951     0C1B                     i1l3251:
  9952                           
  9953                           ;main.c: 167:             data[0] = i;
  9954     0C1B  087A               	movf	i1matrixUpdate@i,w
  9955     0C1C  00F8               	movwf	i1matrixUpdate@data
  9956     0C1D                     i1l3253:
  9957                           
  9958                           ;main.c: 168:             data[1] = MatrixLed[i-1];
  9959     0C1D  087A               	movf	i1matrixUpdate@i,w
  9960     0C1E  3E9F               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
  9961     0C1F  0086               	movwf	6
  9962     0C20  0187               	clrf	7
  9963     0C21  0801               	movf	1,w
  9964     0C22  00F9               	movwf	i1matrixUpdate@data+1
  9965     0C23                     i1l3255:
  9966                           
  9967                           ;main.c: 169:             txSpi(data, 2);
  9968     0C23  3002               	movlw	2
  9969     0C24  00F5               	movwf	i1txSpi@dataSize
  9970     0C25  3000               	movlw	0
  9971     0C26  00F6               	movwf	i1txSpi@dataSize+1
  9972     0C27  3078               	movlw	(low (i1matrixUpdate@data| 0))& (0+255)
  9973     0C28  318B  2307  318C   	fcall	i1_txSpi
  9974     0C2B                     i1l3257:
  9975                           
  9976                           ;main.c: 170:         }
  9977     0C2B  3001               	movlw	1
  9978     0C2C  02FA               	subwf	i1matrixUpdate@i,f
  9979     0C2D                     i1l3259:
  9980     0C2D  087A               	movf	i1matrixUpdate@i,w
  9981     0C2E  1D03               	btfss	3,2
  9982     0C2F  2C31               	goto	u226_21
  9983     0C30  2C32               	goto	u226_20
  9984     0C31                     u226_21:
  9985     0C31  2C1B               	goto	i1l3251
  9986     0C32                     u226_20:
  9987     0C32                     i1l833:
  9988     0C32  0008               	return
  9989     0C33                     __end_ofi1_matrixUpdate:
  9990                           
  9991                           	psect	text64
  9992     0B07                     __ptext64:	
  9993 ;; *************** function i1_txSpi *****************
  9994 ;; Defined at:
  9995 ;;		line 155 in file "main.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  data            1    wreg     PTR unsigned char 
  9998 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
  9999 ;;  dataSize        2    5[COMMON] unsigned int 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  data            1    7[COMMON] PTR unsigned char 
 10002 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  1    wreg      void 
 10005 ;; Registers used:
 10006 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10012 ;;      Params:         2       0       0       0       0       0
 10013 ;;      Locals:         1       0       0       0       0       0
 10014 ;;      Temps:          0       0       0       0       0       0
 10015 ;;      Totals:         3       0       0       0       0       0
 10016 ;;Total ram usage:        3 bytes
 10017 ;; Hardware stack levels used: 1
 10018 ;; Hardware stack levels required when called: 1
 10019 ;; This function calls:
 10020 ;;		i1_SPI1_ExchangeBlock
 10021 ;; This function is called by:
 10022 ;;		i1_matrixUpdate
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026     0B07                     i1_txSpi:	
 10027                           ;psect for function i1_txSpi
 10028                           
 10029                           
 10030                           ;incstack = 0
 10031                           ; Regs used in i1_txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10032                           ;i1txSpi@data stored from wreg
 10033     0B07  00F7               	movwf	i1txSpi@data
 10034     0B08                     i1l820:	
 10035                           ;main.c: 156:     do { LATBbits.LATB1 = 0; } while(0);
 10036                           
 10037     0B08  0022               	movlb	2	; select bank2
 10038     0B09  108D               	bcf	13,1	;volatile
 10039     0B0A                     i1l2991:
 10040                           
 10041                           ;main.c: 157:     SPI1_ExchangeBlock(data,dataSize);
 10042     0B0A  0876               	movf	i1txSpi@dataSize+1,w
 10043     0B0B  00F1               	movwf	i1SPI1_ExchangeBlock@blockSize+1
 10044     0B0C  0875               	movf	i1txSpi@dataSize,w
 10045     0B0D  00F0               	movwf	i1SPI1_ExchangeBlock@blockSize
 10046     0B0E  0877               	movf	i1txSpi@data,w
 10047     0B0F  318C  24D0  318B   	fcall	i1_SPI1_ExchangeBlock
 10048     0B12                     i1l2993:
 10049     0B12  0022               	movlb	2	; select bank2
 10050     0B13  148D               	bsf	13,1	;volatile
 10051     0B14                     i1l824:
 10052     0B14  0008               	return
 10053     0B15                     __end_ofi1_txSpi:
 10054                           
 10055                           	psect	text65
 10056     0CD0                     __ptext65:	
 10057 ;; *************** function i1_SPI1_ExchangeBlock *****************
 10058 ;; Defined at:
 10059 ;;		line 100 in file "mcc_generated_files/spi1.c"
 10060 ;; Parameters:    Size  Location     Type
 10061 ;;  block           1    wreg     PTR void 
 10062 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 10063 ;;  blockSize       2    0[COMMON] unsigned int 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;  block           1    3[COMMON] PTR void 
 10066 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 10067 ;;  data            1    4[COMMON] PTR unsigned char 
 10068 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10078 ;;      Params:         2       0       0       0       0       0
 10079 ;;      Locals:         2       0       0       0       0       0
 10080 ;;      Temps:          1       0       0       0       0       0
 10081 ;;      Totals:         5       0       0       0       0       0
 10082 ;;Total ram usage:        5 bytes
 10083 ;; Hardware stack levels used: 1
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		i1_txSpi
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091     0CD0                     i1_SPI1_ExchangeBlock:	
 10092                           ;psect for function i1_SPI1_ExchangeBlock
 10093                           
 10094                           
 10095                           ;incstack = 0
 10096                           ; Regs used in i1_SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
 10097                           ;i1SPI1_ExchangeBlock@block stored from wreg
 10098     0CD0  00F3               	movwf	i1SPI1_ExchangeBlock@block
 10099     0CD1                     i1l2921:
 10100                           
 10101                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
 10102     0CD1  0873               	movf	i1SPI1_ExchangeBlock@block,w
 10103     0CD2  00F4               	movwf	i1SPI1_ExchangeBlock@data
 10104                           
 10105                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 10106     0CD3  2CEA               	goto	i1l2929
 10107     0CD4                     i1l2923:
 10108                           
 10109                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
 10110     0CD4  0874               	movf	i1SPI1_ExchangeBlock@data,w
 10111     0CD5  0086               	movwf	6
 10112     0CD6  0187               	clrf	7
 10113     0CD7  0801               	movf	1,w
 10114     0CD8  0024               	movlb	4	; select bank4
 10115     0CD9  0091               	movwf	17	;volatile
 10116     0CDA                     i1l444:	
 10117                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
 10118                           
 10119     0CDA  0020               	movlb	0	; select bank0
 10120     0CDB  1D91               	btfss	17,3	;volatile
 10121     0CDC  2CDE               	goto	u164_21
 10122     0CDD  2CDF               	goto	u164_20
 10123     0CDE                     u164_21:
 10124     0CDE  2CDA               	goto	i1l444
 10125     0CDF                     u164_20:
 10126     0CDF                     i1l446:
 10127                           
 10128                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
 10129     0CDF  1191               	bcf	17,3	;volatile
 10130     0CE0                     i1l2925:
 10131                           
 10132                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
 10133     0CE0  0874               	movf	i1SPI1_ExchangeBlock@data,w
 10134     0CE1  0086               	movwf	6
 10135     0CE2  0187               	clrf	7
 10136     0CE3  0024               	movlb	4	; select bank4
 10137     0CE4  0811               	movf	17,w	;volatile
 10138     0CE5  0081               	movwf	1
 10139     0CE6                     i1l2927:
 10140     0CE6  3001               	movlw	1
 10141     0CE7  00F2               	movwf	??i1_SPI1_ExchangeBlock
 10142     0CE8  0872               	movf	??i1_SPI1_ExchangeBlock,w
 10143     0CE9  07F4               	addwf	i1SPI1_ExchangeBlock@data,f
 10144     0CEA                     i1l2929:
 10145                           
 10146                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 10147     0CEA  3001               	movlw	1
 10148     0CEB  02F0               	subwf	i1SPI1_ExchangeBlock@blockSize,f
 10149     0CEC  3000               	movlw	0
 10150     0CED  3BF1               	subwfb	i1SPI1_ExchangeBlock@blockSize+1,f
 10151     0CEE  0A70               	incf	i1SPI1_ExchangeBlock@blockSize,w
 10152     0CEF  1D03               	skipz
 10153     0CF0  2CF5               	goto	u165_21
 10154     0CF1  0A71               	incf	i1SPI1_ExchangeBlock@blockSize+1,w
 10155     0CF2  1D03               	btfss	3,2
 10156     0CF3  2CF5               	goto	u165_21
 10157     0CF4  2CF6               	goto	u165_20
 10158     0CF5                     u165_21:
 10159     0CF5  2CD4               	goto	i1l2923
 10160     0CF6                     u165_20:
 10161     0CF6                     i1l448:
 10162     0CF6  0008               	return
 10163     0CF7                     __end_ofi1_SPI1_ExchangeBlock:
 10164                           
 10165                           	psect	text66
 10166     0A4E                     __ptext66:	
 10167 ;; *************** function i1_TMR4_WriteTimer *****************
 10168 ;; Defined at:
 10169 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  timerVal        1    wreg     unsigned char 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  timerVal        1    0[COMMON] unsigned char 
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1    wreg      void 
 10176 ;; Registers used:
 10177 ;;		wreg
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10183 ;;      Params:         0       0       0       0       0       0
 10184 ;;      Locals:         1       0       0       0       0       0
 10185 ;;      Temps:          0       0       0       0       0       0
 10186 ;;      Totals:         1       0       0       0       0       0
 10187 ;;Total ram usage:        1 bytes
 10188 ;; Hardware stack levels used: 1
 10189 ;; This function calls:
 10190 ;;		Nothing
 10191 ;; This function is called by:
 10192 ;;		_chegadaS2
 10193 ;;		_chegadaS3
 10194 ;;		_chegadaS4
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198     0A4E                     i1_TMR4_WriteTimer:	
 10199                           ;psect for function i1_TMR4_WriteTimer
 10200                           
 10201                           
 10202                           ;incstack = 0
 10203                           ; Regs used in i1_TMR4_WriteTimer: [wreg]
 10204                           ;i1TMR4_WriteTimer@timerVal stored from wreg
 10205     0A4E  00F0               	movwf	i1TMR4_WriteTimer@timerVal
 10206     0A4F                     i1l3243:
 10207                           
 10208                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
 10209     0A4F  0870               	movf	i1TMR4_WriteTimer@timerVal,w
 10210     0A50  0028               	movlb	8	; select bank8
 10211     0A51  0095               	movwf	21	;volatile
 10212     0A52                     i1l682:
 10213     0A52  0008               	return
 10214     0A53                     __end_ofi1_TMR4_WriteTimer:
 10215                           
 10216                           	psect	text67
 10217     0A3D                     __ptext67:	
 10218 ;; *************** function i1_TMR4_StartTimer *****************
 10219 ;; Defined at:
 10220 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;		None
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;		None
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1    wreg      void 
 10227 ;; Registers used:
 10228 ;;		None
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10234 ;;      Params:         0       0       0       0       0       0
 10235 ;;      Locals:         0       0       0       0       0       0
 10236 ;;      Temps:          0       0       0       0       0       0
 10237 ;;      Totals:         0       0       0       0       0       0
 10238 ;;Total ram usage:        0 bytes
 10239 ;; Hardware stack levels used: 1
 10240 ;; This function calls:
 10241 ;;		Nothing
 10242 ;; This function is called by:
 10243 ;;		_chegadaS2
 10244 ;;		_chegadaS3
 10245 ;;		_chegadaS4
 10246 ;;		i1_chegadaS1
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250     0A3D                     i1_TMR4_StartTimer:	
 10251                           ;psect for function i1_TMR4_StartTimer
 10252                           
 10253     0A3D                     i1l3241:	
 10254                           ;incstack = 0
 10255                           ; Regs used in i1_TMR4_StartTimer: []
 10256                           
 10257                           
 10258                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 10259     0A3D  0028               	movlb	8	; select bank8
 10260     0A3E  1517               	bsf	23,2	;volatile
 10261     0A3F                     i1l673:
 10262     0A3F  0008               	return
 10263     0A40                     __end_ofi1_TMR4_StartTimer:
 10264                           
 10265                           	psect	text68
 10266     0BEA                     __ptext68:	
 10267 ;; *************** function _PWM3_LoadDutyValue *****************
 10268 ;; Defined at:
 10269 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;  dutyValue       2    0[COMMON] unsigned short 
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      void 
 10276 ;; Registers used:
 10277 ;;		wreg, status,2, status,0
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10283 ;;      Params:         2       0       0       0       0       0
 10284 ;;      Locals:         0       0       0       0       0       0
 10285 ;;      Temps:          2       0       0       0       0       0
 10286 ;;      Totals:         4       0       0       0       0       0
 10287 ;;Total ram usage:        4 bytes
 10288 ;; Hardware stack levels used: 1
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		_controleMovimento
 10293 ;;		_chegadaS2
 10294 ;;		_chegadaS3
 10295 ;;		_chegadaS4
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299     0BEA                     _PWM3_LoadDutyValue:	
 10300                           ;psect for function _PWM3_LoadDutyValue
 10301                           
 10302     0BEA                     i1l2995:	
 10303                           ;incstack = 0
 10304                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 10305                           
 10306                           
 10307                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
 10308     0BEA  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 10309     0BEB  00F3               	movwf	??_PWM3_LoadDutyValue+1
 10310     0BEC  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 10311     0BED  00F2               	movwf	??_PWM3_LoadDutyValue
 10312     0BEE  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 10313     0BEF  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 10314     0BF0  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 10315     0BF1  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 10316     0BF2  0872               	movf	??_PWM3_LoadDutyValue,w
 10317     0BF3  0026               	movlb	6	; select bank6
 10318     0BF4  0091               	movwf	17	;volatile
 10319                           
 10320                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
 10321     0BF5  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 10322     0BF6  3903               	andlw	3
 10323     0BF7  00F2               	movwf	??_PWM3_LoadDutyValue
 10324     0BF8  3004               	movlw	4
 10325     0BF9                     u174_25:
 10326     0BF9  35F2               	lslf	??_PWM3_LoadDutyValue,f
 10327     0BFA  0B89               	decfsz	9,f
 10328     0BFB  2BF9               	goto	u174_25
 10329     0BFC  0813               	movf	19,w	;volatile
 10330     0BFD  39CF               	andlw	207
 10331     0BFE  0472               	iorwf	??_PWM3_LoadDutyValue,w
 10332     0BFF  0093               	movwf	19	;volatile
 10333     0C00                     i1l14:
 10334     0C00  0008               	return
 10335     0C01                     __end_of_PWM3_LoadDutyValue:
 10336                           
 10337                           	psect	text69
 10338     0BAA                     __ptext69:	
 10339 ;; *************** function _CCP4_CaptureISR *****************
 10340 ;; Defined at:
 10341 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;		None
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;  module          2   60[BANK0 ] struct CCPR4Reg_tag
 10346 ;; Return value:  Size  Location     Type
 10347 ;;                  1    wreg      void 
 10348 ;; Registers used:
 10349 ;;		wreg, status,2, status,0, pclath, cstack
 10350 ;; Tracked objects:
 10351 ;;		On entry : 0/0
 10352 ;;		On exit  : 0/0
 10353 ;;		Unchanged: 0/0
 10354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10355 ;;      Params:         0       0       0       0       0       0
 10356 ;;      Locals:         0       2       0       0       0       0
 10357 ;;      Temps:          0       0       0       0       0       0
 10358 ;;      Totals:         0       2       0       0       0       0
 10359 ;;Total ram usage:        2 bytes
 10360 ;; Hardware stack levels used: 1
 10361 ;; Hardware stack levels required when called: 3
 10362 ;; This function calls:
 10363 ;;		NULL
 10364 ;;		_CCP4_DefaultCallBack
 10365 ;;		_interrupcaoCCP4
 10366 ;; This function is called by:
 10367 ;;		_INTERRUPT_InterruptManager
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371     0BAA                     _CCP4_CaptureISR:	
 10372                           ;psect for function _CCP4_CaptureISR
 10373                           
 10374     0BAA                     i1l3895:	
 10375                           ;incstack = 0
 10376                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 10377                           
 10378                           
 10379                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 10380     0BAA  0020               	movlb	0	; select bank0
 10381     0BAB  1293               	bcf	19,5	;volatile
 10382     0BAC                     i1l3897:
 10383                           
 10384                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 10385     0BAC  0026               	movlb	6	; select bank6
 10386     0BAD  0818               	movf	24,w	;volatile
 10387     0BAE  0020               	movlb	0	; select bank0
 10388     0BAF  00DC               	movwf	CCP4_CaptureISR@module
 10389                           
 10390                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 10391     0BB0  0026               	movlb	6	; select bank6
 10392     0BB1  0819               	movf	25,w	;volatile
 10393     0BB2  0020               	movlb	0	; select bank0
 10394     0BB3  00DD               	movwf	CCP4_CaptureISR@module+1
 10395     0BB4                     i1l3899:
 10396                           
 10397                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 10398     0BB4  085D               	movf	CCP4_CaptureISR@module+1,w
 10399     0BB5  00F1               	movwf	CCP4_DefaultCallBack@capturedValue+1
 10400     0BB6  085C               	movf	CCP4_CaptureISR@module,w
 10401     0BB7  00F0               	movwf	CCP4_DefaultCallBack@capturedValue
 10402     0BB8  0021               	movlb	1	; select bank1
 10403     0BB9  0851               	movf	(_CCP4_CallBack+1)^(0+128),w
 10404     0BBA  008A               	movwf	10
 10405     0BBB  0850               	movf	_CCP4_CallBack^(0+128),w
 10406     0BBC  000A               	callw
 10407     0BBD  318B               	pagesel	$
 10408     0BBE                     i1l644:
 10409     0BBE  0008               	return
 10410     0BBF                     __end_of_CCP4_CaptureISR:
 10411                           
 10412                           	psect	text70
 10413     0A39                     __ptext70:	
 10414 ;; *************** function _CCP4_DefaultCallBack *****************
 10415 ;; Defined at:
 10416 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 10417 ;; Parameters:    Size  Location     Type
 10418 ;;  capturedValu    2    0[COMMON] unsigned short 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;		None
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  1    wreg      void 
 10423 ;; Registers used:
 10424 ;;		None
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10430 ;;      Params:         2       0       0       0       0       0
 10431 ;;      Locals:         0       0       0       0       0       0
 10432 ;;      Temps:          0       0       0       0       0       0
 10433 ;;      Totals:         2       0       0       0       0       0
 10434 ;;Total ram usage:        2 bytes
 10435 ;; Hardware stack levels used: 1
 10436 ;; This function calls:
 10437 ;;		Nothing
 10438 ;; This function is called by:
 10439 ;;		_CCP4_Initialize
 10440 ;;		_CCP4_CaptureISR
 10441 ;; This function uses a non-reentrant model
 10442 ;;
 10443                           
 10444     0A39                     _CCP4_DefaultCallBack:	
 10445                           ;psect for function _CCP4_DefaultCallBack
 10446                           
 10447     0A39                     i1l638:	
 10448                           ;incstack = 0
 10449                           ; Regs used in _CCP4_DefaultCallBack: []
 10450                           
 10451     0A39  0008               	return
 10452     0A3A                     __end_of_CCP4_DefaultCallBack:
 10453                           
 10454                           	psect	text71
 10455     03A3                     __ptext71:	
 10456 ;; *************** function _interrupcaoCCP4 *****************
 10457 ;; Defined at:
 10458 ;;		line 132 in file "main.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;		None
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;		None
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      void 
 10465 ;; Registers used:
 10466 ;;		wreg, status,2, status,0, pclath, cstack
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10472 ;;      Params:         0       0       0       0       0       0
 10473 ;;      Locals:         0       4       0       0       0       0
 10474 ;;      Temps:          0       4       0       0       0       0
 10475 ;;      Totals:         0       8       0       0       0       0
 10476 ;;Total ram usage:        8 bytes
 10477 ;; Hardware stack levels used: 1
 10478 ;; Hardware stack levels required when called: 2
 10479 ;; This function calls:
 10480 ;;		___aldiv
 10481 ;;		___flmul
 10482 ;;		___fltol
 10483 ;;		___xxtofl
 10484 ;; This function is called by:
 10485 ;;		_main
 10486 ;;		_CCP4_CaptureISR
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490     03A3                     _interrupcaoCCP4:	
 10491                           ;psect for function _interrupcaoCCP4
 10492                           
 10493     03A3                     i1l3779:	
 10494                           ;incstack = 0
 10495                           ; Regs used in _interrupcaoCCP4: [wreg+status,2+status,0+pclath+cstack]
 10496                           
 10497                           
 10498                           ;main.c: 134:     if (pulsoEncoder <= 215){
 10499     03A3  30D8               	movlw	216
 10500     03A4  0020               	movlb	0	; select bank0
 10501     03A5  026C               	subwf	_pulsoEncoder,w
 10502     03A6  1803               	skipnc
 10503     03A7  2BA9               	goto	u279_21
 10504     03A8  2BAA               	goto	u279_20
 10505     03A9                     u279_21:
 10506     03A9  2BAF               	goto	i1l3783
 10507     03AA                     u279_20:
 10508     03AA                     i1l3781:
 10509                           
 10510                           ;main.c: 135:         pulsoEncoder++;
 10511     03AA  3001               	movlw	1
 10512     03AB  00D4               	movwf	??_interrupcaoCCP4
 10513     03AC  0854               	movf	??_interrupcaoCCP4,w
 10514     03AD  07EC               	addwf	_pulsoEncoder,f
 10515                           
 10516                           ;main.c: 136:     } else {
 10517     03AE  2BB0               	goto	i1l3785
 10518     03AF                     i1l3783:
 10519                           
 10520                           ;main.c: 137:         pulsoEncoder = 0;
 10521     03AF  01EC               	clrf	_pulsoEncoder
 10522     03B0                     i1l3785:
 10523                           
 10524                           ;main.c: 140:     altura = (uint8_t)(pulsoEncoder * 0.83720930);
 10525     03B0  086C               	movf	_pulsoEncoder,w
 10526     03B1  00D4               	movwf	??_interrupcaoCCP4
 10527     03B2  01D5               	clrf	??_interrupcaoCCP4+1
 10528     03B3  01D6               	clrf	??_interrupcaoCCP4+2
 10529     03B4  01D7               	clrf	??_interrupcaoCCP4+3
 10530     03B5  0857               	movf	??_interrupcaoCCP4+3,w
 10531     03B6  00A9               	movwf	___xxtofl@val+3
 10532     03B7  0856               	movf	??_interrupcaoCCP4+2,w
 10533     03B8  00A8               	movwf	___xxtofl@val+2
 10534     03B9  0855               	movf	??_interrupcaoCCP4+1,w
 10535     03BA  00A7               	movwf	___xxtofl@val+1
 10536     03BB  0854               	movf	??_interrupcaoCCP4,w
 10537     03BC  00A6               	movwf	___xxtofl@val
 10538     03BD  3001               	movlw	1
 10539     03BE  3184  2457  3183   	fcall	___xxtofl
 10540     03C1  0020               	movlb	0	; select bank0
 10541     03C2  0829               	movf	?___xxtofl+3,w
 10542     03C3  00B7               	movwf	___flmul@a+3
 10543     03C4  0828               	movf	?___xxtofl+2,w
 10544     03C5  00B6               	movwf	___flmul@a+2
 10545     03C6  0827               	movf	?___xxtofl+1,w
 10546     03C7  00B5               	movwf	___flmul@a+1
 10547     03C8  0826               	movf	?___xxtofl,w
 10548     03C9  00B4               	movwf	___flmul@a
 10549     03CA  303F               	movlw	63
 10550     03CB  00B3               	movwf	___flmul@b+3
 10551     03CC  3056               	movlw	86
 10552     03CD  00B2               	movwf	___flmul@b+2
 10553     03CE  3053               	movlw	83
 10554     03CF  00B1               	movwf	___flmul@b+1
 10555     03D0  3059               	movlw	89
 10556     03D1  00B0               	movwf	___flmul@b
 10557     03D2  3180  2072  3183   	fcall	___flmul
 10558     03D5  0020               	movlb	0	; select bank0
 10559     03D6  0833               	movf	?___flmul+3,w
 10560     03D7  00CD               	movwf	___fltol@f1+3
 10561     03D8  0832               	movf	?___flmul+2,w
 10562     03D9  00CC               	movwf	___fltol@f1+2
 10563     03DA  0831               	movf	?___flmul+1,w
 10564     03DB  00CB               	movwf	___fltol@f1+1
 10565     03DC  0830               	movf	?___flmul,w
 10566     03DD  00CA               	movwf	___fltol@f1
 10567     03DE  3187  2753  3183   	fcall	___fltol
 10568     03E1  0020               	movlb	0	; select bank0
 10569     03E2  084A               	movf	?___fltol,w
 10570     03E3  00E9               	movwf	_altura
 10571     03E4                     i1l3787:
 10572                           
 10573                           ;main.c: 141:     if(pulsoEncoder == 215) altura = 180;
 10574     03E4  30D7               	movlw	215
 10575     03E5  066C               	xorwf	_pulsoEncoder,w
 10576     03E6  1D03               	btfss	3,2
 10577     03E7  2BE9               	goto	u280_21
 10578     03E8  2BEA               	goto	u280_20
 10579     03E9                     u280_21:
 10580     03E9  2BEC               	goto	i1l3791
 10581     03EA                     u280_20:
 10582     03EA                     i1l3789:
 10583     03EA  30B4               	movlw	180
 10584     03EB  00E9               	movwf	_altura
 10585     03EC                     i1l3791:
 10586                           
 10587                           ;main.c: 143:     if(!flag){
 10588     03EC  086B               	movf	_flag,w
 10589     03ED  1D03               	btfss	3,2
 10590     03EE  2BF0               	goto	u281_21
 10591     03EF  2BF1               	goto	u281_20
 10592     03F0                     u281_21:
 10593     03F0  2BFC               	goto	i1l3797
 10594     03F1                     u281_20:
 10595     03F1                     i1l3793:
 10596                           
 10597                           ;main.c: 144:         t1 = (CCPR4H << 8) + CCPR4L;
 10598     03F1  0026               	movlb	6	; select bank6
 10599     03F2  0819               	movf	25,w	;volatile
 10600     03F3  0020               	movlb	0	; select bank0
 10601     03F4  00E7               	movwf	_t1+1
 10602     03F5  0026               	movlb	6	; select bank6
 10603     03F6  0818               	movf	24,w	;volatile
 10604     03F7  0020               	movlb	0	; select bank0
 10605     03F8  00E6               	movwf	_t1
 10606     03F9                     i1l3795:
 10607                           
 10608                           ;main.c: 145:         flag = 0x01;
 10609     03F9  01EB               	clrf	_flag
 10610     03FA  0AEB               	incf	_flag,f
 10611                           
 10612                           ;main.c: 146:     } else {
 10613     03FB  2C56               	goto	i1l817
 10614     03FC                     i1l3797:
 10615                           
 10616                           ;main.c: 147:         t2 = (CCPR4H << 8) + CCPR4L;
 10617     03FC  0026               	movlb	6	; select bank6
 10618     03FD  0819               	movf	25,w	;volatile
 10619     03FE  0020               	movlb	0	; select bank0
 10620     03FF  00E5               	movwf	_t2+1
 10621     0400  0026               	movlb	6	; select bank6
 10622     0401  0818               	movf	24,w	;volatile
 10623     0402  0020               	movlb	0	; select bank0
 10624     0403  00E4               	movwf	_t2
 10625     0404                     i1l3799:
 10626                           
 10627                           ;main.c: 148:         flag = 0x00;
 10628     0404  01EB               	clrf	_flag
 10629     0405                     i1l3801:
 10630                           
 10631                           ;main.c: 150:         velocidadeMotor = (altura) / ((t2 - t1) / 1000000);
 10632     0405  0866               	movf	_t1,w
 10633     0406  0264               	subwf	_t2,w
 10634     0407  00F4               	movwf	___aldiv@dividend
 10635     0408  0867               	movf	_t1+1,w
 10636     0409  3B65               	subwfb	_t2+1,w
 10637     040A  00F5               	movwf	___aldiv@dividend+1
 10638     040B  01F6               	clrf	___aldiv@dividend+2
 10639     040C  01F7               	clrf	___aldiv@dividend+3
 10640     040D  3000               	movlw	0
 10641     040E  00F3               	movwf	___aldiv@divisor+3
 10642     040F  300F               	movlw	15
 10643     0410  00F2               	movwf	___aldiv@divisor+2
 10644     0411  3042               	movlw	66
 10645     0412  00F1               	movwf	___aldiv@divisor+1
 10646     0413  3040               	movlw	64
 10647     0414  00F0               	movwf	___aldiv@divisor
 10648     0415  3186  26C3  3183   	fcall	___aldiv
 10649     0418  0873               	movf	?___aldiv+3,w
 10650     0419  0020               	movlb	0	; select bank0
 10651     041A  00DB               	movwf	_interrupcaoCCP4$2465+3
 10652     041B  0872               	movf	?___aldiv+2,w
 10653     041C  00DA               	movwf	_interrupcaoCCP4$2465+2
 10654     041D  0871               	movf	?___aldiv+1,w
 10655     041E  00D9               	movwf	_interrupcaoCCP4$2465+1
 10656     041F  0870               	movf	?___aldiv,w
 10657     0420  00D8               	movwf	_interrupcaoCCP4$2465
 10658     0421                     i1l3803:
 10659                           
 10660                           ;main.c: 150:         velocidadeMotor = (altura) / ((t2 - t1) / 1000000);
 10661     0421  0869               	movf	_altura,w
 10662     0422  00D4               	movwf	??_interrupcaoCCP4
 10663     0423  01D5               	clrf	??_interrupcaoCCP4+1
 10664     0424  01D6               	clrf	??_interrupcaoCCP4+2
 10665     0425  01D7               	clrf	??_interrupcaoCCP4+3
 10666     0426  0857               	movf	??_interrupcaoCCP4+3,w
 10667     0427  00F7               	movwf	___aldiv@dividend+3
 10668     0428  0856               	movf	??_interrupcaoCCP4+2,w
 10669     0429  00F6               	movwf	___aldiv@dividend+2
 10670     042A  0855               	movf	??_interrupcaoCCP4+1,w
 10671     042B  00F5               	movwf	___aldiv@dividend+1
 10672     042C  0854               	movf	??_interrupcaoCCP4,w
 10673     042D  00F4               	movwf	___aldiv@dividend
 10674     042E  085B               	movf	_interrupcaoCCP4$2465+3,w
 10675     042F  00F3               	movwf	___aldiv@divisor+3
 10676     0430  085A               	movf	_interrupcaoCCP4$2465+2,w
 10677     0431  00F2               	movwf	___aldiv@divisor+2
 10678     0432  0859               	movf	_interrupcaoCCP4$2465+1,w
 10679     0433  00F1               	movwf	___aldiv@divisor+1
 10680     0434  0858               	movf	_interrupcaoCCP4$2465,w
 10681     0435  00F0               	movwf	___aldiv@divisor
 10682     0436  3186  26C3  3183   	fcall	___aldiv
 10683     0439  0873               	movf	?___aldiv+3,w
 10684     043A  0020               	movlb	0	; select bank0
 10685     043B  00A9               	movwf	___xxtofl@val+3
 10686     043C  0872               	movf	?___aldiv+2,w
 10687     043D  00A8               	movwf	___xxtofl@val+2
 10688     043E  0871               	movf	?___aldiv+1,w
 10689     043F  00A7               	movwf	___xxtofl@val+1
 10690     0440  0870               	movf	?___aldiv,w
 10691     0441  00A6               	movwf	___xxtofl@val
 10692     0442  3001               	movlw	1
 10693     0443  3184  2457  3183   	fcall	___xxtofl
 10694     0446  0020               	movlb	0	; select bank0
 10695     0447  0829               	movf	?___xxtofl+3,w
 10696     0448  0021               	movlb	1	; select bank1
 10697     0449  00AB               	movwf	(_velocidadeMotor+3)^(0+128)
 10698     044A  0020               	movlb	0	; select bank0
 10699     044B  0828               	movf	?___xxtofl+2,w
 10700     044C  0021               	movlb	1	; select bank1
 10701     044D  00AA               	movwf	(_velocidadeMotor+2)^(0+128)
 10702     044E  0020               	movlb	0	; select bank0
 10703     044F  0827               	movf	?___xxtofl+1,w
 10704     0450  0021               	movlb	1	; select bank1
 10705     0451  00A9               	movwf	(_velocidadeMotor+1)^(0+128)
 10706     0452  0020               	movlb	0	; select bank0
 10707     0453  0826               	movf	?___xxtofl,w
 10708     0454  0021               	movlb	1	; select bank1
 10709     0455  00A8               	movwf	_velocidadeMotor^(0+128)
 10710     0456                     i1l817:
 10711     0456  0008               	return
 10712     0457                     __end_of_interrupcaoCCP4:
 10713                           
 10714                           	psect	text72
 10715     0457                     __ptext72:	
 10716 ;; *************** function ___xxtofl *****************
 10717 ;; Defined at:
 10718 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;  sign            1    wreg     unsigned char 
 10721 ;;  val             4    6[BANK0 ] long 
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;  sign            1   10[BANK0 ] unsigned char 
 10724 ;;  arg             4   12[BANK0 ] unsigned long 
 10725 ;;  exp             1   11[BANK0 ] unsigned char 
 10726 ;; Return value:  Size  Location     Type
 10727 ;;                  4    6[BANK0 ] unsigned char 
 10728 ;; Registers used:
 10729 ;;		wreg, status,2, status,0
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10735 ;;      Params:         0       4       0       0       0       0
 10736 ;;      Locals:         0       6       0       0       0       0
 10737 ;;      Temps:          4       0       0       0       0       0
 10738 ;;      Totals:         4      10       0       0       0       0
 10739 ;;Total ram usage:       14 bytes
 10740 ;; Hardware stack levels used: 1
 10741 ;; This function calls:
 10742 ;;		Nothing
 10743 ;; This function is called by:
 10744 ;;		_interrupcaoCCP4
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748     0457                     ___xxtofl:	
 10749                           ;psect for function ___xxtofl
 10750                           
 10751                           
 10752                           ;incstack = 0
 10753                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10754                           ;___xxtofl@sign stored from wreg
 10755     0457  0020               	movlb	0	; select bank0
 10756     0458  00AA               	movwf	___xxtofl@sign
 10757     0459                     i1l3455:
 10758     0459  082A               	movf	___xxtofl@sign,w
 10759     045A  1903               	btfsc	3,2
 10760     045B  2C5D               	goto	u246_21
 10761     045C  2C5E               	goto	u246_20
 10762     045D                     u246_21:
 10763     045D  2C72               	goto	i1l3461
 10764     045E                     u246_20:
 10765     045E                     i1l3457:
 10766     045E  1FA9               	btfss	___xxtofl@val+3,7
 10767     045F  2C61               	goto	u247_21
 10768     0460  2C62               	goto	u247_20
 10769     0461                     u247_21:
 10770     0461  2C72               	goto	i1l3461
 10771     0462                     u247_20:
 10772     0462                     i1l3459:
 10773     0462  0926               	comf	___xxtofl@val,w
 10774     0463  00AC               	movwf	___xxtofl@arg
 10775     0464  0927               	comf	___xxtofl@val+1,w
 10776     0465  00AD               	movwf	___xxtofl@arg+1
 10777     0466  0928               	comf	___xxtofl@val+2,w
 10778     0467  00AE               	movwf	___xxtofl@arg+2
 10779     0468  0929               	comf	___xxtofl@val+3,w
 10780     0469  00AF               	movwf	___xxtofl@arg+3
 10781     046A  0AAC               	incf	___xxtofl@arg,f
 10782     046B  1903               	skipnz
 10783     046C  0AAD               	incf	___xxtofl@arg+1,f
 10784     046D  1903               	skipnz
 10785     046E  0AAE               	incf	___xxtofl@arg+2,f
 10786     046F  1903               	skipnz
 10787     0470  0AAF               	incf	___xxtofl@arg+3,f
 10788     0471  2C7A               	goto	i1l1526
 10789     0472                     i1l3461:
 10790     0472  0829               	movf	___xxtofl@val+3,w
 10791     0473  00AF               	movwf	___xxtofl@arg+3
 10792     0474  0828               	movf	___xxtofl@val+2,w
 10793     0475  00AE               	movwf	___xxtofl@arg+2
 10794     0476  0827               	movf	___xxtofl@val+1,w
 10795     0477  00AD               	movwf	___xxtofl@arg+1
 10796     0478  0826               	movf	___xxtofl@val,w
 10797     0479  00AC               	movwf	___xxtofl@arg
 10798     047A                     i1l1526:
 10799     047A  0829               	movf	___xxtofl@val+3,w
 10800     047B  0428               	iorwf	___xxtofl@val+2,w
 10801     047C  0427               	iorwf	___xxtofl@val+1,w
 10802     047D  0426               	iorwf	___xxtofl@val,w
 10803     047E  1D03               	skipz
 10804     047F  2C81               	goto	u248_21
 10805     0480  2C82               	goto	u248_20
 10806     0481                     u248_21:
 10807     0481  2C8B               	goto	i1l3467
 10808     0482                     u248_20:
 10809     0482                     i1l3463:
 10810     0482  3000               	movlw	0
 10811     0483  00A9               	movwf	?___xxtofl+3
 10812     0484  3000               	movlw	0
 10813     0485  00A8               	movwf	?___xxtofl+2
 10814     0486  3000               	movlw	0
 10815     0487  00A7               	movwf	?___xxtofl+1
 10816     0488  3000               	movlw	0
 10817     0489  00A6               	movwf	?___xxtofl
 10818     048A  2D01               	goto	i1l1528
 10819     048B                     i1l3467:
 10820     048B  3096               	movlw	150
 10821     048C  00AB               	movwf	___xxtofl@exp
 10822     048D  2C99               	goto	i1l3471
 10823     048E                     i1l3469:
 10824     048E  3001               	movlw	1
 10825     048F  00F9               	movwf	??___xxtofl
 10826     0490  0879               	movf	??___xxtofl,w
 10827     0491  07AB               	addwf	___xxtofl@exp,f
 10828     0492  3001               	movlw	1
 10829     0493                     u249_25:
 10830     0493  36AF               	lsrf	___xxtofl@arg+3,f
 10831     0494  0CAE               	rrf	___xxtofl@arg+2,f
 10832     0495  0CAD               	rrf	___xxtofl@arg+1,f
 10833     0496  0CAC               	rrf	___xxtofl@arg,f
 10834     0497  0B89               	decfsz	9,f
 10835     0498  2C93               	goto	u249_25
 10836     0499                     i1l3471:
 10837     0499  30FE               	movlw	254
 10838     049A  052F               	andwf	___xxtofl@arg+3,w
 10839     049B  1D03               	btfss	3,2
 10840     049C  2C9E               	goto	u250_21
 10841     049D  2C9F               	goto	u250_20
 10842     049E                     u250_21:
 10843     049E  2C8E               	goto	i1l3469
 10844     049F                     u250_20:
 10845     049F  2CB3               	goto	i1l1532
 10846     04A0                     i1l3473:
 10847     04A0  3001               	movlw	1
 10848     04A1  00F9               	movwf	??___xxtofl
 10849     04A2  0879               	movf	??___xxtofl,w
 10850     04A3  07AB               	addwf	___xxtofl@exp,f
 10851     04A4                     i1l3475:
 10852     04A4  3001               	movlw	1
 10853     04A5  07AC               	addwf	___xxtofl@arg,f
 10854     04A6  3000               	movlw	0
 10855     04A7  3DAD               	addwfc	___xxtofl@arg+1,f
 10856     04A8  3000               	movlw	0
 10857     04A9  3DAE               	addwfc	___xxtofl@arg+2,f
 10858     04AA  3000               	movlw	0
 10859     04AB  3DAF               	addwfc	___xxtofl@arg+3,f
 10860     04AC                     i1l3477:
 10861     04AC  3001               	movlw	1
 10862     04AD                     u251_25:
 10863     04AD  36AF               	lsrf	___xxtofl@arg+3,f
 10864     04AE  0CAE               	rrf	___xxtofl@arg+2,f
 10865     04AF  0CAD               	rrf	___xxtofl@arg+1,f
 10866     04B0  0CAC               	rrf	___xxtofl@arg,f
 10867     04B1  0B89               	decfsz	9,f
 10868     04B2  2CAD               	goto	u251_25
 10869     04B3                     i1l1532:
 10870     04B3  30FF               	movlw	255
 10871     04B4  052F               	andwf	___xxtofl@arg+3,w
 10872     04B5  1D03               	btfss	3,2
 10873     04B6  2CB8               	goto	u252_21
 10874     04B7  2CB9               	goto	u252_20
 10875     04B8                     u252_21:
 10876     04B8  2CA0               	goto	i1l3473
 10877     04B9                     u252_20:
 10878     04B9  2CC3               	goto	i1l3481
 10879     04BA                     i1l3479:
 10880     04BA  3001               	movlw	1
 10881     04BB  02AB               	subwf	___xxtofl@exp,f
 10882     04BC  3001               	movlw	1
 10883     04BD                     u253_25:
 10884     04BD  35AC               	lslf	___xxtofl@arg,f
 10885     04BE  0DAD               	rlf	___xxtofl@arg+1,f
 10886     04BF  0DAE               	rlf	___xxtofl@arg+2,f
 10887     04C0  0DAF               	rlf	___xxtofl@arg+3,f
 10888     04C1  0B89               	decfsz	9,f
 10889     04C2  2CBD               	goto	u253_25
 10890     04C3                     i1l3481:
 10891     04C3  1BAE               	btfsc	___xxtofl@arg+2,7
 10892     04C4  2CC6               	goto	u254_21
 10893     04C5  2CC7               	goto	u254_20
 10894     04C6                     u254_21:
 10895     04C6  2CCD               	goto	i1l1539
 10896     04C7                     u254_20:
 10897     04C7                     i1l3483:
 10898     04C7  3002               	movlw	2
 10899     04C8  022B               	subwf	___xxtofl@exp,w
 10900     04C9  1803               	skipnc
 10901     04CA  2CCC               	goto	u255_21
 10902     04CB  2CCD               	goto	u255_20
 10903     04CC                     u255_21:
 10904     04CC  2CBA               	goto	i1l3479
 10905     04CD                     u255_20:
 10906     04CD                     i1l1539:
 10907     04CD  182B               	btfsc	___xxtofl@exp,0
 10908     04CE  2CD0               	goto	u256_21
 10909     04CF  2CD1               	goto	u256_20
 10910     04D0                     u256_21:
 10911     04D0  2CD9               	goto	i1l1540
 10912     04D1                     u256_20:
 10913     04D1                     i1l3485:
 10914     04D1  30FF               	movlw	255
 10915     04D2  05AC               	andwf	___xxtofl@arg,f
 10916     04D3  30FF               	movlw	255
 10917     04D4  05AD               	andwf	___xxtofl@arg+1,f
 10918     04D5  307F               	movlw	127
 10919     04D6  05AE               	andwf	___xxtofl@arg+2,f
 10920     04D7  30FF               	movlw	255
 10921     04D8  05AF               	andwf	___xxtofl@arg+3,f
 10922     04D9                     i1l1540:
 10923     04D9  1003               	clrc
 10924     04DA  0CAB               	rrf	___xxtofl@exp,f
 10925     04DB                     i1l3487:
 10926     04DB  082B               	movf	___xxtofl@exp,w
 10927     04DC  00F9               	movwf	??___xxtofl
 10928     04DD  01FA               	clrf	??___xxtofl+1
 10929     04DE  01FB               	clrf	??___xxtofl+2
 10930     04DF  01FC               	clrf	??___xxtofl+3
 10931     04E0  3018               	movlw	24
 10932     04E1                     u257_25:
 10933     04E1  35F9               	lslf	??___xxtofl,f
 10934     04E2  0DFA               	rlf	??___xxtofl+1,f
 10935     04E3  0DFB               	rlf	??___xxtofl+2,f
 10936     04E4  0DFC               	rlf	??___xxtofl+3,f
 10937     04E5                     u257_20:
 10938     04E5  0B89               	decfsz	9,f
 10939     04E6  2CE1               	goto	u257_25
 10940     04E7  0879               	movf	??___xxtofl,w
 10941     04E8  04AC               	iorwf	___xxtofl@arg,f
 10942     04E9  087A               	movf	??___xxtofl+1,w
 10943     04EA  04AD               	iorwf	___xxtofl@arg+1,f
 10944     04EB  087B               	movf	??___xxtofl+2,w
 10945     04EC  04AE               	iorwf	___xxtofl@arg+2,f
 10946     04ED  087C               	movf	??___xxtofl+3,w
 10947     04EE  04AF               	iorwf	___xxtofl@arg+3,f
 10948     04EF                     i1l3489:
 10949     04EF  082A               	movf	___xxtofl@sign,w
 10950     04F0  1903               	btfsc	3,2
 10951     04F1  2CF3               	goto	u258_21
 10952     04F2  2CF4               	goto	u258_20
 10953     04F3                     u258_21:
 10954     04F3  2CF9               	goto	i1l3495
 10955     04F4                     u258_20:
 10956     04F4                     i1l3491:
 10957     04F4  1FA9               	btfss	___xxtofl@val+3,7
 10958     04F5  2CF7               	goto	u259_21
 10959     04F6  2CF8               	goto	u259_20
 10960     04F7                     u259_21:
 10961     04F7  2CF9               	goto	i1l3495
 10962     04F8                     u259_20:
 10963     04F8                     i1l3493:
 10964     04F8  17AF               	bsf	___xxtofl@arg+3,7
 10965     04F9                     i1l3495:
 10966     04F9  082F               	movf	___xxtofl@arg+3,w
 10967     04FA  00A9               	movwf	?___xxtofl+3
 10968     04FB  082E               	movf	___xxtofl@arg+2,w
 10969     04FC  00A8               	movwf	?___xxtofl+2
 10970     04FD  082D               	movf	___xxtofl@arg+1,w
 10971     04FE  00A7               	movwf	?___xxtofl+1
 10972     04FF  082C               	movf	___xxtofl@arg,w
 10973     0500  00A6               	movwf	?___xxtofl
 10974     0501                     i1l1528:
 10975     0501  0008               	return
 10976     0502                     __end_of___xxtofl:
 10977                           
 10978                           	psect	text73
 10979     0753                     __ptext73:	
 10980 ;; *************** function ___fltol *****************
 10981 ;; Defined at:
 10982 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  f1              4   42[BANK0 ] unsigned char 
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;  exp1            1   51[BANK0 ] unsigned char 
 10987 ;;  sign1           1   50[BANK0 ] unsigned char 
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  4   42[BANK0 ] long 
 10990 ;; Registers used:
 10991 ;;		wreg, status,2, status,0
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10997 ;;      Params:         0       4       0       0       0       0
 10998 ;;      Locals:         0       2       0       0       0       0
 10999 ;;      Temps:          0       4       0       0       0       0
 11000 ;;      Totals:         0      10       0       0       0       0
 11001 ;;Total ram usage:       10 bytes
 11002 ;; Hardware stack levels used: 1
 11003 ;; This function calls:
 11004 ;;		Nothing
 11005 ;; This function is called by:
 11006 ;;		_sendInfo
 11007 ;;		_interrupcaoCCP4
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011     0753                     ___fltol:	
 11012                           ;psect for function ___fltol
 11013                           
 11014     0753                     i1l3065:	
 11015                           ;incstack = 0
 11016                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11017                           
 11018     0753  1003               	clrc
 11019     0754  0020               	movlb	0	; select bank0
 11020     0755  0D4C               	rlf	___fltol@f1+2,w
 11021     0756  0D4D               	rlf	___fltol@f1+3,w
 11022     0757  00D3               	movwf	___fltol@exp1
 11023     0758  0853               	movf	___fltol@exp1,w
 11024     0759  1D03               	btfss	3,2
 11025     075A  2F5C               	goto	u190_21
 11026     075B  2F5D               	goto	u190_20
 11027     075C                     u190_21:
 11028     075C  2F66               	goto	i1l3071
 11029     075D                     u190_20:
 11030     075D                     i1l3067:
 11031     075D  3000               	movlw	0
 11032     075E  00CD               	movwf	?___fltol+3
 11033     075F  3000               	movlw	0
 11034     0760  00CC               	movwf	?___fltol+2
 11035     0761  3000               	movlw	0
 11036     0762  00CB               	movwf	?___fltol+1
 11037     0763  3000               	movlw	0
 11038     0764  00CA               	movwf	?___fltol
 11039     0765  2FC3               	goto	i1l1279
 11040     0766                     i1l3071:
 11041     0766  084A               	movf	___fltol@f1,w
 11042     0767  00CE               	movwf	??___fltol
 11043     0768  084B               	movf	___fltol@f1+1,w
 11044     0769  00CF               	movwf	??___fltol+1
 11045     076A  084C               	movf	___fltol@f1+2,w
 11046     076B  00D0               	movwf	??___fltol+2
 11047     076C  084D               	movf	___fltol@f1+3,w
 11048     076D  00D1               	movwf	??___fltol+3
 11049     076E  301F               	movlw	31
 11050     076F                     u191_25:
 11051     076F  36D1               	lsrf	??___fltol+3,f
 11052     0770  0CD0               	rrf	??___fltol+2,f
 11053     0771  0CCF               	rrf	??___fltol+1,f
 11054     0772  0CCE               	rrf	??___fltol,f
 11055     0773                     u191_20:
 11056     0773  0B89               	decfsz	9,f
 11057     0774  2F6F               	goto	u191_25
 11058     0775  084E               	movf	??___fltol,w
 11059     0776  00D2               	movwf	___fltol@sign1
 11060     0777                     i1l3073:
 11061     0777  17CC               	bsf	___fltol@f1+2,7
 11062     0778                     i1l3075:
 11063     0778  30FF               	movlw	255
 11064     0779  05CA               	andwf	___fltol@f1,f
 11065     077A  30FF               	movlw	255
 11066     077B  05CB               	andwf	___fltol@f1+1,f
 11067     077C  30FF               	movlw	255
 11068     077D  05CC               	andwf	___fltol@f1+2,f
 11069     077E  3000               	movlw	0
 11070     077F  05CD               	andwf	___fltol@f1+3,f
 11071     0780                     i1l3077:
 11072     0780  3096               	movlw	150
 11073     0781  02D3               	subwf	___fltol@exp1,f
 11074     0782                     i1l3079:
 11075     0782  1FD3               	btfss	___fltol@exp1,7
 11076     0783  2F85               	goto	u192_21
 11077     0784  2F86               	goto	u192_20
 11078     0785                     u192_21:
 11079     0785  2F9E               	goto	i1l3089
 11080     0786                     u192_20:
 11081     0786                     i1l3081:
 11082     0786  0853               	movf	___fltol@exp1,w
 11083     0787  3A80               	xorlw	128
 11084     0788  3E97               	addlw	151
 11085     0789  1803               	skipnc
 11086     078A  2F8C               	goto	u193_21
 11087     078B  2F8D               	goto	u193_20
 11088     078C                     u193_21:
 11089     078C  2F8E               	goto	i1l3087
 11090     078D                     u193_20:
 11091     078D  2F5D               	goto	i1l3067
 11092     078E                     i1l3087:
 11093     078E  3001               	movlw	1
 11094     078F                     u194_25:
 11095     078F  36CD               	lsrf	___fltol@f1+3,f
 11096     0790  0CCC               	rrf	___fltol@f1+2,f
 11097     0791  0CCB               	rrf	___fltol@f1+1,f
 11098     0792  0CCA               	rrf	___fltol@f1,f
 11099     0793  0B89               	decfsz	9,f
 11100     0794  2F8F               	goto	u194_25
 11101     0795  3001               	movlw	1
 11102     0796  00CE               	movwf	??___fltol
 11103     0797  084E               	movf	??___fltol,w
 11104     0798  07D3               	addwf	___fltol@exp1,f
 11105     0799  1D03               	btfss	3,2
 11106     079A  2F9C               	goto	u195_21
 11107     079B  2F9D               	goto	u195_20
 11108     079C                     u195_21:
 11109     079C  2F8E               	goto	i1l3087
 11110     079D                     u195_20:
 11111     079D  2FB3               	goto	i1l3097
 11112     079E                     i1l3089:
 11113     079E  3020               	movlw	32
 11114     079F  0253               	subwf	___fltol@exp1,w
 11115     07A0  1C03               	skipc
 11116     07A1  2FA3               	goto	u196_21
 11117     07A2  2FA4               	goto	u196_20
 11118     07A3                     u196_21:
 11119     07A3  2FAE               	goto	i1l1286
 11120     07A4                     u196_20:
 11121     07A4  2F5D               	goto	i1l3067
 11122     07A5                     i1l3095:
 11123     07A5  3001               	movlw	1
 11124     07A6                     u197_25:
 11125     07A6  35CA               	lslf	___fltol@f1,f
 11126     07A7  0DCB               	rlf	___fltol@f1+1,f
 11127     07A8  0DCC               	rlf	___fltol@f1+2,f
 11128     07A9  0DCD               	rlf	___fltol@f1+3,f
 11129     07AA  0B89               	decfsz	9,f
 11130     07AB  2FA6               	goto	u197_25
 11131     07AC  3001               	movlw	1
 11132     07AD  02D3               	subwf	___fltol@exp1,f
 11133     07AE                     i1l1286:
 11134     07AE  0853               	movf	___fltol@exp1,w
 11135     07AF  1D03               	btfss	3,2
 11136     07B0  2FB2               	goto	u198_21
 11137     07B1  2FB3               	goto	u198_20
 11138     07B2                     u198_21:
 11139     07B2  2FA5               	goto	i1l3095
 11140     07B3                     u198_20:
 11141     07B3                     i1l3097:
 11142     07B3  0852               	movf	___fltol@sign1,w
 11143     07B4  1903               	btfsc	3,2
 11144     07B5  2FB7               	goto	u199_21
 11145     07B6  2FB8               	goto	u199_20
 11146     07B7                     u199_21:
 11147     07B7  2FC3               	goto	i1l1289
 11148     07B8                     u199_20:
 11149     07B8                     i1l3099:
 11150     07B8  09CA               	comf	___fltol@f1,f
 11151     07B9  09CB               	comf	___fltol@f1+1,f
 11152     07BA  09CC               	comf	___fltol@f1+2,f
 11153     07BB  09CD               	comf	___fltol@f1+3,f
 11154     07BC  0ACA               	incf	___fltol@f1,f
 11155     07BD  1903               	skipnz
 11156     07BE  0ACB               	incf	___fltol@f1+1,f
 11157     07BF  1903               	skipnz
 11158     07C0  0ACC               	incf	___fltol@f1+2,f
 11159     07C1  1903               	skipnz
 11160     07C2  0ACD               	incf	___fltol@f1+3,f
 11161     07C3                     i1l1289:
 11162     07C3                     i1l1279:
 11163     07C3  0008               	return
 11164     07C4                     __end_of___fltol:
 11165                           
 11166                           	psect	text74
 11167     0072                     __ptext74:	
 11168 ;; *************** function ___flmul *****************
 11169 ;; Defined at:
 11170 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;  b               4   16[BANK0 ] long 
 11173 ;;  a               4   20[BANK0 ] long 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;  prod            4   36[BANK0 ] struct .
 11176 ;;  grs             4   30[BANK0 ] unsigned long 
 11177 ;;  temp            2   40[BANK0 ] struct .
 11178 ;;  bexp            1   35[BANK0 ] unsigned char 
 11179 ;;  aexp            1   34[BANK0 ] unsigned char 
 11180 ;;  sign            1   29[BANK0 ] unsigned char 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  4   16[BANK0 ] unsigned char 
 11183 ;; Registers used:
 11184 ;;		wreg, status,2, status,0, pclath, cstack
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11190 ;;      Params:         0       8       0       0       0       0
 11191 ;;      Locals:         0      13       0       0       0       0
 11192 ;;      Temps:          0       5       0       0       0       0
 11193 ;;      Totals:         0      26       0       0       0       0
 11194 ;;Total ram usage:       26 bytes
 11195 ;; Hardware stack levels used: 1
 11196 ;; Hardware stack levels required when called: 1
 11197 ;; This function calls:
 11198 ;;		__Umul8_16
 11199 ;; This function is called by:
 11200 ;;		_sendInfo
 11201 ;;		_interrupcaoCCP4
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205     0072                     ___flmul:	
 11206                           ;psect for function ___flmul
 11207                           
 11208     0072                     i1l3101:	
 11209                           ;incstack = 0
 11210                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 11211                           
 11212     0072  0020               	movlb	0	; select bank0
 11213     0073  0833               	movf	___flmul@b+3,w
 11214     0074  3980               	andlw	128
 11215     0075  00BD               	movwf	___flmul@sign
 11216     0076                     i1l3103:
 11217     0076  3533               	lslf	___flmul@b+3,w
 11218     0077  00C3               	movwf	___flmul@bexp
 11219     0078                     i1l3105:
 11220     0078  1FB2               	btfss	___flmul@b+2,7
 11221     0079  287B               	goto	u200_21
 11222     007A  287C               	goto	u200_20
 11223     007B                     u200_21:
 11224     007B  287D               	goto	i1l3109
 11225     007C                     u200_20:
 11226     007C                     i1l3107:
 11227     007C  1443               	bsf	___flmul@bexp,0
 11228     007D                     i1l3109:
 11229     007D  0843               	movf	___flmul@bexp,w
 11230     007E  1903               	btfsc	3,2
 11231     007F  2881               	goto	u201_21
 11232     0080  2882               	goto	u201_20
 11233     0081                     u201_21:
 11234     0081  2891               	goto	i1l3117
 11235     0082                     u201_20:
 11236     0082                     i1l3111:
 11237     0082  0A43               	incf	___flmul@bexp,w
 11238     0083  1D03               	btfss	3,2
 11239     0084  2886               	goto	u202_21
 11240     0085  2887               	goto	u202_20
 11241     0086                     u202_21:
 11242     0086  288F               	goto	i1l3115
 11243     0087                     u202_20:
 11244     0087                     i1l3113:
 11245     0087  3000               	movlw	0
 11246     0088  00B3               	movwf	___flmul@b+3
 11247     0089  3000               	movlw	0
 11248     008A  00B2               	movwf	___flmul@b+2
 11249     008B  3000               	movlw	0
 11250     008C  00B1               	movwf	___flmul@b+1
 11251     008D  3000               	movlw	0
 11252     008E  00B0               	movwf	___flmul@b
 11253     008F                     i1l3115:
 11254     008F  17B2               	bsf	___flmul@b+2,7
 11255     0090  2899               	goto	i1l3119
 11256     0091                     i1l3117:
 11257     0091  3000               	movlw	0
 11258     0092  00B3               	movwf	___flmul@b+3
 11259     0093  3000               	movlw	0
 11260     0094  00B2               	movwf	___flmul@b+2
 11261     0095  3000               	movlw	0
 11262     0096  00B1               	movwf	___flmul@b+1
 11263     0097  3000               	movlw	0
 11264     0098  00B0               	movwf	___flmul@b
 11265     0099                     i1l3119:
 11266     0099  0837               	movf	___flmul@a+3,w
 11267     009A  3980               	andlw	128
 11268     009B  00B8               	movwf	??___flmul
 11269     009C  0838               	movf	??___flmul,w
 11270     009D  06BD               	xorwf	___flmul@sign,f
 11271     009E                     i1l3121:
 11272     009E  3537               	lslf	___flmul@a+3,w
 11273     009F  00C2               	movwf	___flmul@aexp
 11274     00A0                     i1l3123:
 11275     00A0  1FB6               	btfss	___flmul@a+2,7
 11276     00A1  28A3               	goto	u203_21
 11277     00A2  28A4               	goto	u203_20
 11278     00A3                     u203_21:
 11279     00A3  28A5               	goto	i1l3127
 11280     00A4                     u203_20:
 11281     00A4                     i1l3125:
 11282     00A4  1442               	bsf	___flmul@aexp,0
 11283     00A5                     i1l3127:
 11284     00A5  0842               	movf	___flmul@aexp,w
 11285     00A6  1903               	btfsc	3,2
 11286     00A7  28A9               	goto	u204_21
 11287     00A8  28AA               	goto	u204_20
 11288     00A9                     u204_21:
 11289     00A9  28B9               	goto	i1l3135
 11290     00AA                     u204_20:
 11291     00AA                     i1l3129:
 11292     00AA  0A42               	incf	___flmul@aexp,w
 11293     00AB  1D03               	btfss	3,2
 11294     00AC  28AE               	goto	u205_21
 11295     00AD  28AF               	goto	u205_20
 11296     00AE                     u205_21:
 11297     00AE  28B7               	goto	i1l3133
 11298     00AF                     u205_20:
 11299     00AF                     i1l3131:
 11300     00AF  3000               	movlw	0
 11301     00B0  00B7               	movwf	___flmul@a+3
 11302     00B1  3000               	movlw	0
 11303     00B2  00B6               	movwf	___flmul@a+2
 11304     00B3  3000               	movlw	0
 11305     00B4  00B5               	movwf	___flmul@a+1
 11306     00B5  3000               	movlw	0
 11307     00B6  00B4               	movwf	___flmul@a
 11308     00B7                     i1l3133:
 11309     00B7  17B6               	bsf	___flmul@a+2,7
 11310     00B8  28C1               	goto	i1l3137
 11311     00B9                     i1l3135:
 11312     00B9  3000               	movlw	0
 11313     00BA  00B7               	movwf	___flmul@a+3
 11314     00BB  3000               	movlw	0
 11315     00BC  00B6               	movwf	___flmul@a+2
 11316     00BD  3000               	movlw	0
 11317     00BE  00B5               	movwf	___flmul@a+1
 11318     00BF  3000               	movlw	0
 11319     00C0  00B4               	movwf	___flmul@a
 11320     00C1                     i1l3137:
 11321     00C1  0842               	movf	___flmul@aexp,w
 11322     00C2  1903               	btfsc	3,2
 11323     00C3  28C5               	goto	u206_21
 11324     00C4  28C6               	goto	u206_20
 11325     00C5                     u206_21:
 11326     00C5  28CB               	goto	i1l3141
 11327     00C6                     u206_20:
 11328     00C6                     i1l3139:
 11329     00C6  0843               	movf	___flmul@bexp,w
 11330     00C7  1D03               	btfss	3,2
 11331     00C8  28CA               	goto	u207_21
 11332     00C9  28CB               	goto	u207_20
 11333     00CA                     u207_21:
 11334     00CA  28D4               	goto	i1l3145
 11335     00CB                     u207_20:
 11336     00CB                     i1l3141:
 11337     00CB  3000               	movlw	0
 11338     00CC  00B3               	movwf	?___flmul+3
 11339     00CD  3000               	movlw	0
 11340     00CE  00B2               	movwf	?___flmul+2
 11341     00CF  3000               	movlw	0
 11342     00D0  00B1               	movwf	?___flmul+1
 11343     00D1  3000               	movlw	0
 11344     00D2  00B0               	movwf	?___flmul
 11345     00D3  2AAC               	goto	i1l1482
 11346     00D4                     i1l3145:
 11347     00D4  0830               	movf	___flmul@b,w
 11348     00D5  00F0               	movwf	__Umul8_16@multiplicand
 11349     00D6  0836               	movf	___flmul@a+2,w
 11350     00D7  318C  2488  3180   	fcall	__Umul8_16
 11351     00DA  0871               	movf	?__Umul8_16+1,w
 11352     00DB  0020               	movlb	0	; select bank0
 11353     00DC  00C9               	movwf	___flmul@temp+1
 11354     00DD  0870               	movf	?__Umul8_16,w
 11355     00DE  00C8               	movwf	___flmul@temp
 11356     00DF                     i1l3147:
 11357     00DF  0848               	movf	___flmul@temp,w
 11358     00E0  00B8               	movwf	??___flmul
 11359     00E1  01B9               	clrf	??___flmul+1
 11360     00E2  01BA               	clrf	??___flmul+2
 11361     00E3  01BB               	clrf	??___flmul+3
 11362     00E4  083B               	movf	??___flmul+3,w
 11363     00E5  00C1               	movwf	___flmul@grs+3
 11364     00E6  083A               	movf	??___flmul+2,w
 11365     00E7  00C0               	movwf	___flmul@grs+2
 11366     00E8  0839               	movf	??___flmul+1,w
 11367     00E9  00BF               	movwf	___flmul@grs+1
 11368     00EA  0838               	movf	??___flmul,w
 11369     00EB  00BE               	movwf	___flmul@grs
 11370     00EC                     i1l3149:
 11371     00EC  0849               	movf	___flmul@temp+1,w
 11372     00ED  00B8               	movwf	??___flmul
 11373     00EE  01B9               	clrf	??___flmul+1
 11374     00EF  01BA               	clrf	??___flmul+2
 11375     00F0  01BB               	clrf	??___flmul+3
 11376     00F1  083B               	movf	??___flmul+3,w
 11377     00F2  00C7               	movwf	___flmul@prod+3
 11378     00F3  083A               	movf	??___flmul+2,w
 11379     00F4  00C6               	movwf	___flmul@prod+2
 11380     00F5  0839               	movf	??___flmul+1,w
 11381     00F6  00C5               	movwf	___flmul@prod+1
 11382     00F7  0838               	movf	??___flmul,w
 11383     00F8  00C4               	movwf	___flmul@prod
 11384     00F9  0831               	movf	___flmul@b+1,w
 11385     00FA  00F0               	movwf	__Umul8_16@multiplicand
 11386     00FB  0835               	movf	___flmul@a+1,w
 11387     00FC  318C  2488  3180   	fcall	__Umul8_16
 11388     00FF  0871               	movf	?__Umul8_16+1,w
 11389     0100  0020               	movlb	0	; select bank0
 11390     0101  00C9               	movwf	___flmul@temp+1
 11391     0102  0870               	movf	?__Umul8_16,w
 11392     0103  00C8               	movwf	___flmul@temp
 11393     0104                     i1l3151:
 11394     0104  0848               	movf	___flmul@temp,w
 11395     0105  00B8               	movwf	??___flmul
 11396     0106  01B9               	clrf	??___flmul+1
 11397     0107  01BA               	clrf	??___flmul+2
 11398     0108  01BB               	clrf	??___flmul+3
 11399     0109  0838               	movf	??___flmul,w
 11400     010A  07BE               	addwf	___flmul@grs,f
 11401     010B  0839               	movf	??___flmul+1,w
 11402     010C  3DBF               	addwfc	___flmul@grs+1,f
 11403     010D  083A               	movf	??___flmul+2,w
 11404     010E  3DC0               	addwfc	___flmul@grs+2,f
 11405     010F  083B               	movf	??___flmul+3,w
 11406     0110  3DC1               	addwfc	___flmul@grs+3,f
 11407     0111                     i1l3153:
 11408     0111  0849               	movf	___flmul@temp+1,w
 11409     0112  00B8               	movwf	??___flmul
 11410     0113  01B9               	clrf	??___flmul+1
 11411     0114  01BA               	clrf	??___flmul+2
 11412     0115  01BB               	clrf	??___flmul+3
 11413     0116  0838               	movf	??___flmul,w
 11414     0117  07C4               	addwf	___flmul@prod,f
 11415     0118  0839               	movf	??___flmul+1,w
 11416     0119  3DC5               	addwfc	___flmul@prod+1,f
 11417     011A  083A               	movf	??___flmul+2,w
 11418     011B  3DC6               	addwfc	___flmul@prod+2,f
 11419     011C  083B               	movf	??___flmul+3,w
 11420     011D  3DC7               	addwfc	___flmul@prod+3,f
 11421     011E  0832               	movf	___flmul@b+2,w
 11422     011F  00F0               	movwf	__Umul8_16@multiplicand
 11423     0120  0834               	movf	___flmul@a,w
 11424     0121  318C  2488  3180   	fcall	__Umul8_16
 11425     0124  0871               	movf	?__Umul8_16+1,w
 11426     0125  0020               	movlb	0	; select bank0
 11427     0126  00C9               	movwf	___flmul@temp+1
 11428     0127  0870               	movf	?__Umul8_16,w
 11429     0128  00C8               	movwf	___flmul@temp
 11430     0129                     i1l3155:
 11431     0129  0848               	movf	___flmul@temp,w
 11432     012A  00B8               	movwf	??___flmul
 11433     012B  01B9               	clrf	??___flmul+1
 11434     012C  01BA               	clrf	??___flmul+2
 11435     012D  01BB               	clrf	??___flmul+3
 11436     012E  0838               	movf	??___flmul,w
 11437     012F  07BE               	addwf	___flmul@grs,f
 11438     0130  0839               	movf	??___flmul+1,w
 11439     0131  3DBF               	addwfc	___flmul@grs+1,f
 11440     0132  083A               	movf	??___flmul+2,w
 11441     0133  3DC0               	addwfc	___flmul@grs+2,f
 11442     0134  083B               	movf	??___flmul+3,w
 11443     0135  3DC1               	addwfc	___flmul@grs+3,f
 11444     0136                     i1l3157:
 11445     0136  0849               	movf	___flmul@temp+1,w
 11446     0137  00B8               	movwf	??___flmul
 11447     0138  01B9               	clrf	??___flmul+1
 11448     0139  01BA               	clrf	??___flmul+2
 11449     013A  01BB               	clrf	??___flmul+3
 11450     013B  0838               	movf	??___flmul,w
 11451     013C  07C4               	addwf	___flmul@prod,f
 11452     013D  0839               	movf	??___flmul+1,w
 11453     013E  3DC5               	addwfc	___flmul@prod+1,f
 11454     013F  083A               	movf	??___flmul+2,w
 11455     0140  3DC6               	addwfc	___flmul@prod+2,f
 11456     0141  083B               	movf	??___flmul+3,w
 11457     0142  3DC7               	addwfc	___flmul@prod+3,f
 11458     0143                     i1l3159:
 11459     0143  3008               	movlw	8
 11460     0144                     u208_25:
 11461     0144  35BE               	lslf	___flmul@grs,f
 11462     0145  0DBF               	rlf	___flmul@grs+1,f
 11463     0146  0DC0               	rlf	___flmul@grs+2,f
 11464     0147  0DC1               	rlf	___flmul@grs+3,f
 11465     0148  0B89               	decfsz	9,f
 11466     0149  2944               	goto	u208_25
 11467     014A                     i1l3161:
 11468     014A  0831               	movf	___flmul@b+1,w
 11469     014B  00F0               	movwf	__Umul8_16@multiplicand
 11470     014C  0834               	movf	___flmul@a,w
 11471     014D  318C  2488  3180   	fcall	__Umul8_16
 11472     0150  0871               	movf	?__Umul8_16+1,w
 11473     0151  0020               	movlb	0	; select bank0
 11474     0152  00C9               	movwf	___flmul@temp+1
 11475     0153  0870               	movf	?__Umul8_16,w
 11476     0154  00C8               	movwf	___flmul@temp
 11477     0155                     i1l3163:
 11478     0155  0848               	movf	___flmul@temp,w
 11479     0156  07BE               	addwf	___flmul@grs,f
 11480     0157  0849               	movf	___flmul@temp+1,w
 11481     0158  3DBF               	addwfc	___flmul@grs+1,f
 11482     0159  3000               	movlw	0
 11483     015A  3DC0               	addwfc	___flmul@grs+2,f
 11484     015B  3DC1               	addwfc	___flmul@grs+3,f
 11485     015C                     i1l3165:
 11486     015C  0830               	movf	___flmul@b,w
 11487     015D  00F0               	movwf	__Umul8_16@multiplicand
 11488     015E  0835               	movf	___flmul@a+1,w
 11489     015F  318C  2488  3180   	fcall	__Umul8_16
 11490     0162  0871               	movf	?__Umul8_16+1,w
 11491     0163  0020               	movlb	0	; select bank0
 11492     0164  00C9               	movwf	___flmul@temp+1
 11493     0165  0870               	movf	?__Umul8_16,w
 11494     0166  00C8               	movwf	___flmul@temp
 11495     0167                     i1l3167:
 11496     0167  0848               	movf	___flmul@temp,w
 11497     0168  07BE               	addwf	___flmul@grs,f
 11498     0169  0849               	movf	___flmul@temp+1,w
 11499     016A  3DBF               	addwfc	___flmul@grs+1,f
 11500     016B  3000               	movlw	0
 11501     016C  3DC0               	addwfc	___flmul@grs+2,f
 11502     016D  3DC1               	addwfc	___flmul@grs+3,f
 11503     016E                     i1l3169:
 11504     016E  3008               	movlw	8
 11505     016F                     u209_25:
 11506     016F  35BE               	lslf	___flmul@grs,f
 11507     0170  0DBF               	rlf	___flmul@grs+1,f
 11508     0171  0DC0               	rlf	___flmul@grs+2,f
 11509     0172  0DC1               	rlf	___flmul@grs+3,f
 11510     0173  0B89               	decfsz	9,f
 11511     0174  296F               	goto	u209_25
 11512     0175  0830               	movf	___flmul@b,w
 11513     0176  00F0               	movwf	__Umul8_16@multiplicand
 11514     0177  0834               	movf	___flmul@a,w
 11515     0178  318C  2488  3180   	fcall	__Umul8_16
 11516     017B  0871               	movf	?__Umul8_16+1,w
 11517     017C  0020               	movlb	0	; select bank0
 11518     017D  00C9               	movwf	___flmul@temp+1
 11519     017E  0870               	movf	?__Umul8_16,w
 11520     017F  00C8               	movwf	___flmul@temp
 11521     0180                     i1l3171:
 11522     0180  0848               	movf	___flmul@temp,w
 11523     0181  07BE               	addwf	___flmul@grs,f
 11524     0182  0849               	movf	___flmul@temp+1,w
 11525     0183  3DBF               	addwfc	___flmul@grs+1,f
 11526     0184  3000               	movlw	0
 11527     0185  3DC0               	addwfc	___flmul@grs+2,f
 11528     0186  3DC1               	addwfc	___flmul@grs+3,f
 11529     0187                     i1l3173:
 11530     0187  0831               	movf	___flmul@b+1,w
 11531     0188  00F0               	movwf	__Umul8_16@multiplicand
 11532     0189  0836               	movf	___flmul@a+2,w
 11533     018A  318C  2488  3180   	fcall	__Umul8_16
 11534     018D  0871               	movf	?__Umul8_16+1,w
 11535     018E  0020               	movlb	0	; select bank0
 11536     018F  00C9               	movwf	___flmul@temp+1
 11537     0190  0870               	movf	?__Umul8_16,w
 11538     0191  00C8               	movwf	___flmul@temp
 11539     0192  0848               	movf	___flmul@temp,w
 11540     0193  07C4               	addwf	___flmul@prod,f
 11541     0194  0849               	movf	___flmul@temp+1,w
 11542     0195  3DC5               	addwfc	___flmul@prod+1,f
 11543     0196  3000               	movlw	0
 11544     0197  3DC6               	addwfc	___flmul@prod+2,f
 11545     0198  3DC7               	addwfc	___flmul@prod+3,f
 11546     0199                     i1l3175:
 11547     0199  0832               	movf	___flmul@b+2,w
 11548     019A  00F0               	movwf	__Umul8_16@multiplicand
 11549     019B  0835               	movf	___flmul@a+1,w
 11550     019C  318C  2488  3180   	fcall	__Umul8_16
 11551     019F  0871               	movf	?__Umul8_16+1,w
 11552     01A0  0020               	movlb	0	; select bank0
 11553     01A1  00C9               	movwf	___flmul@temp+1
 11554     01A2  0870               	movf	?__Umul8_16,w
 11555     01A3  00C8               	movwf	___flmul@temp
 11556     01A4                     i1l3177:
 11557     01A4  0848               	movf	___flmul@temp,w
 11558     01A5  07C4               	addwf	___flmul@prod,f
 11559     01A6  0849               	movf	___flmul@temp+1,w
 11560     01A7  3DC5               	addwfc	___flmul@prod+1,f
 11561     01A8  3000               	movlw	0
 11562     01A9  3DC6               	addwfc	___flmul@prod+2,f
 11563     01AA  3DC7               	addwfc	___flmul@prod+3,f
 11564     01AB  0832               	movf	___flmul@b+2,w
 11565     01AC  00F0               	movwf	__Umul8_16@multiplicand
 11566     01AD  0836               	movf	___flmul@a+2,w
 11567     01AE  318C  2488  3180   	fcall	__Umul8_16
 11568     01B1  0871               	movf	?__Umul8_16+1,w
 11569     01B2  0020               	movlb	0	; select bank0
 11570     01B3  00C9               	movwf	___flmul@temp+1
 11571     01B4  0870               	movf	?__Umul8_16,w
 11572     01B5  00C8               	movwf	___flmul@temp
 11573     01B6                     i1l3179:
 11574     01B6  0848               	movf	___flmul@temp,w
 11575     01B7  00B8               	movwf	??___flmul
 11576     01B8  0849               	movf	___flmul@temp+1,w
 11577     01B9  00B9               	movwf	??___flmul+1
 11578     01BA  01BA               	clrf	??___flmul+2
 11579     01BB  01BB               	clrf	??___flmul+3
 11580     01BC  3008               	movlw	8
 11581     01BD                     u210_25:
 11582     01BD  35B8               	lslf	??___flmul,f
 11583     01BE  0DB9               	rlf	??___flmul+1,f
 11584     01BF  0DBA               	rlf	??___flmul+2,f
 11585     01C0  0DBB               	rlf	??___flmul+3,f
 11586     01C1                     u210_20:
 11587     01C1  0B89               	decfsz	9,f
 11588     01C2  29BD               	goto	u210_25
 11589     01C3  0838               	movf	??___flmul,w
 11590     01C4  07C4               	addwf	___flmul@prod,f
 11591     01C5  0839               	movf	??___flmul+1,w
 11592     01C6  3DC5               	addwfc	___flmul@prod+1,f
 11593     01C7  083A               	movf	??___flmul+2,w
 11594     01C8  3DC6               	addwfc	___flmul@prod+2,f
 11595     01C9  083B               	movf	??___flmul+3,w
 11596     01CA  3DC7               	addwfc	___flmul@prod+3,f
 11597     01CB                     i1l3181:
 11598     01CB  083E               	movf	___flmul@grs,w
 11599     01CC  00B8               	movwf	??___flmul
 11600     01CD  083F               	movf	___flmul@grs+1,w
 11601     01CE  00B9               	movwf	??___flmul+1
 11602     01CF  0840               	movf	___flmul@grs+2,w
 11603     01D0  00BA               	movwf	??___flmul+2
 11604     01D1  0841               	movf	___flmul@grs+3,w
 11605     01D2  00BB               	movwf	??___flmul+3
 11606     01D3  3018               	movlw	24
 11607     01D4                     u211_25:
 11608     01D4  36BB               	lsrf	??___flmul+3,f
 11609     01D5  0CBA               	rrf	??___flmul+2,f
 11610     01D6  0CB9               	rrf	??___flmul+1,f
 11611     01D7  0CB8               	rrf	??___flmul,f
 11612     01D8                     u211_20:
 11613     01D8  0B89               	decfsz	9,f
 11614     01D9  29D4               	goto	u211_25
 11615     01DA  0838               	movf	??___flmul,w
 11616     01DB  07C4               	addwf	___flmul@prod,f
 11617     01DC  0839               	movf	??___flmul+1,w
 11618     01DD  3DC5               	addwfc	___flmul@prod+1,f
 11619     01DE  083A               	movf	??___flmul+2,w
 11620     01DF  3DC6               	addwfc	___flmul@prod+2,f
 11621     01E0  083B               	movf	??___flmul+3,w
 11622     01E1  3DC7               	addwfc	___flmul@prod+3,f
 11623     01E2                     i1l3183:
 11624     01E2  3008               	movlw	8
 11625     01E3                     u212_25:
 11626     01E3  35BE               	lslf	___flmul@grs,f
 11627     01E4  0DBF               	rlf	___flmul@grs+1,f
 11628     01E5  0DC0               	rlf	___flmul@grs+2,f
 11629     01E6  0DC1               	rlf	___flmul@grs+3,f
 11630     01E7  0B89               	decfsz	9,f
 11631     01E8  29E3               	goto	u212_25
 11632     01E9                     i1l3185:
 11633     01E9  0843               	movf	___flmul@bexp,w
 11634     01EA  0742               	addwf	___flmul@aexp,w
 11635     01EB  00B8               	movwf	??___flmul
 11636     01EC  01B9               	clrf	??___flmul+1
 11637     01ED  0DB9               	rlf	??___flmul+1,f
 11638     01EE  0838               	movf	??___flmul,w
 11639     01EF  3E82               	addlw	130
 11640     01F0  00C8               	movwf	___flmul@temp
 11641     01F1  30FF               	movlw	255
 11642     01F2  3D39               	addwfc	??___flmul+1,w
 11643     01F3  00C9               	movwf	___flmul@temp+1
 11644     01F4  2A0C               	goto	i1l3197
 11645     01F5                     i1l3187:
 11646     01F5  3001               	movlw	1
 11647     01F6                     u213_25:
 11648     01F6  35C4               	lslf	___flmul@prod,f
 11649     01F7  0DC5               	rlf	___flmul@prod+1,f
 11650     01F8  0DC6               	rlf	___flmul@prod+2,f
 11651     01F9  0DC7               	rlf	___flmul@prod+3,f
 11652     01FA  0B89               	decfsz	9,f
 11653     01FB  29F6               	goto	u213_25
 11654     01FC                     i1l3189:
 11655     01FC  1FC1               	btfss	___flmul@grs+3,7
 11656     01FD  29FF               	goto	u214_21
 11657     01FE  2A00               	goto	u214_20
 11658     01FF                     u214_21:
 11659     01FF  2A01               	goto	i1l3193
 11660     0200                     u214_20:
 11661     0200                     i1l3191:
 11662     0200  1444               	bsf	___flmul@prod,0
 11663     0201                     i1l3193:
 11664     0201  3001               	movlw	1
 11665     0202                     u215_25:
 11666     0202  35BE               	lslf	___flmul@grs,f
 11667     0203  0DBF               	rlf	___flmul@grs+1,f
 11668     0204  0DC0               	rlf	___flmul@grs+2,f
 11669     0205  0DC1               	rlf	___flmul@grs+3,f
 11670     0206  0B89               	decfsz	9,f
 11671     0207  2A02               	goto	u215_25
 11672     0208                     i1l3195:
 11673     0208  30FF               	movlw	255
 11674     0209  07C8               	addwf	___flmul@temp,f
 11675     020A  30FF               	movlw	255
 11676     020B  3DC9               	addwfc	___flmul@temp+1,f
 11677     020C                     i1l3197:
 11678     020C  1FC6               	btfss	___flmul@prod+2,7
 11679     020D  2A0F               	goto	u216_21
 11680     020E  2A10               	goto	u216_20
 11681     020F                     u216_21:
 11682     020F  29F5               	goto	i1l3187
 11683     0210                     u216_20:
 11684     0210                     i1l3199:
 11685     0210  01C2               	clrf	___flmul@aexp
 11686     0211                     i1l3201:
 11687     0211  1FC1               	btfss	___flmul@grs+3,7
 11688     0212  2A14               	goto	u217_21
 11689     0213  2A15               	goto	u217_20
 11690     0214                     u217_21:
 11691     0214  2A31               	goto	i1l3209
 11692     0215                     u217_20:
 11693     0215                     i1l3203:
 11694     0215  30FF               	movlw	255
 11695     0216  053E               	andwf	___flmul@grs,w
 11696     0217  00B8               	movwf	??___flmul
 11697     0218  30FF               	movlw	255
 11698     0219  053F               	andwf	___flmul@grs+1,w
 11699     021A  00B9               	movwf	??___flmul+1
 11700     021B  30FF               	movlw	255
 11701     021C  0540               	andwf	___flmul@grs+2,w
 11702     021D  00BA               	movwf	??___flmul+2
 11703     021E  307F               	movlw	127
 11704     021F  0541               	andwf	___flmul@grs+3,w
 11705     0220  00BB               	movwf	??___flmul+3
 11706     0221  083B               	movf	??___flmul+3,w
 11707     0222  043A               	iorwf	??___flmul+2,w
 11708     0223  0439               	iorwf	??___flmul+1,w
 11709     0224  0438               	iorwf	??___flmul,w
 11710     0225  1903               	skipnz
 11711     0226  2A28               	goto	u218_21
 11712     0227  2A29               	goto	u218_20
 11713     0228                     u218_21:
 11714     0228  2A2C               	goto	i1l1488
 11715     0229                     u218_20:
 11716     0229                     i1l3205:
 11717     0229  01C2               	clrf	___flmul@aexp
 11718     022A  0AC2               	incf	___flmul@aexp,f
 11719     022B  2A31               	goto	i1l3209
 11720     022C                     i1l1488:
 11721     022C  1C44               	btfss	___flmul@prod,0
 11722     022D  2A2F               	goto	u219_21
 11723     022E  2A30               	goto	u219_20
 11724     022F                     u219_21:
 11725     022F  2A31               	goto	i1l3209
 11726     0230                     u219_20:
 11727     0230  2A29               	goto	i1l3205
 11728     0231                     i1l3209:
 11729     0231  0842               	movf	___flmul@aexp,w
 11730     0232  1903               	btfsc	3,2
 11731     0233  2A35               	goto	u220_21
 11732     0234  2A36               	goto	u220_20
 11733     0235                     u220_21:
 11734     0235  2A5E               	goto	i1l3219
 11735     0236                     u220_20:
 11736     0236                     i1l3211:
 11737     0236  3001               	movlw	1
 11738     0237  07C4               	addwf	___flmul@prod,f
 11739     0238  3000               	movlw	0
 11740     0239  3DC5               	addwfc	___flmul@prod+1,f
 11741     023A  3000               	movlw	0
 11742     023B  3DC6               	addwfc	___flmul@prod+2,f
 11743     023C  3000               	movlw	0
 11744     023D  3DC7               	addwfc	___flmul@prod+3,f
 11745     023E                     i1l3213:
 11746     023E  1C47               	btfss	___flmul@prod+3,0
 11747     023F  2A41               	goto	u221_21
 11748     0240  2A42               	goto	u221_20
 11749     0241                     u221_21:
 11750     0241  2A5E               	goto	i1l3219
 11751     0242                     u221_20:
 11752     0242                     i1l3215:
 11753     0242  0844               	movf	___flmul@prod,w
 11754     0243  00B8               	movwf	??___flmul
 11755     0244  0845               	movf	___flmul@prod+1,w
 11756     0245  00B9               	movwf	??___flmul+1
 11757     0246  0846               	movf	___flmul@prod+2,w
 11758     0247  00BA               	movwf	??___flmul+2
 11759     0248  0847               	movf	___flmul@prod+3,w
 11760     0249  00BB               	movwf	??___flmul+3
 11761     024A  3001               	movlw	1
 11762     024B  00BC               	movwf	??___flmul+4
 11763     024C                     u222_25:
 11764     024C  37BB               	asrf	??___flmul+3,f
 11765     024D  0CBA               	rrf	??___flmul+2,f
 11766     024E  0CB9               	rrf	??___flmul+1,f
 11767     024F  0CB8               	rrf	??___flmul,f
 11768     0250                     u222_20:
 11769     0250  0BBC               	decfsz	??___flmul+4,f
 11770     0251  2A4C               	goto	u222_25
 11771     0252  083B               	movf	??___flmul+3,w
 11772     0253  00C7               	movwf	___flmul@prod+3
 11773     0254  083A               	movf	??___flmul+2,w
 11774     0255  00C6               	movwf	___flmul@prod+2
 11775     0256  0839               	movf	??___flmul+1,w
 11776     0257  00C5               	movwf	___flmul@prod+1
 11777     0258  0838               	movf	??___flmul,w
 11778     0259  00C4               	movwf	___flmul@prod
 11779     025A                     i1l3217:
 11780     025A  3001               	movlw	1
 11781     025B  07C8               	addwf	___flmul@temp,f
 11782     025C  3000               	movlw	0
 11783     025D  3DC9               	addwfc	___flmul@temp+1,f
 11784     025E                     i1l3219:
 11785     025E  0849               	movf	___flmul@temp+1,w
 11786     025F  3A80               	xorlw	128
 11787     0260  00B8               	movwf	??___flmul
 11788     0261  3080               	movlw	128
 11789     0262  0238               	subwf	??___flmul,w
 11790     0263  1D03               	skipz
 11791     0264  2A67               	goto	u223_25
 11792     0265  30FF               	movlw	255
 11793     0266  0248               	subwf	___flmul@temp,w
 11794     0267                     u223_25:
 11795     0267  1C03               	skipc
 11796     0268  2A6A               	goto	u223_21
 11797     0269  2A6B               	goto	u223_20
 11798     026A                     u223_21:
 11799     026A  2A75               	goto	i1l3223
 11800     026B                     u223_20:
 11801     026B                     i1l3221:
 11802     026B  307F               	movlw	127
 11803     026C  0020               	movlb	0	; select bank0
 11804     026D  00C7               	movwf	___flmul@prod+3
 11805     026E  3080               	movlw	128
 11806     026F  00C6               	movwf	___flmul@prod+2
 11807     0270  3000               	movlw	0
 11808     0271  00C5               	movwf	___flmul@prod+1
 11809     0272  3000               	movlw	0
 11810     0273  00C4               	movwf	___flmul@prod
 11811     0274  2AA0               	goto	i1l1494
 11812     0275                     i1l3223:
 11813     0275  0020               	movlb	0	; select bank0
 11814     0276  0849               	movf	___flmul@temp+1,w
 11815     0277  3A80               	xorlw	128
 11816     0278  00B8               	movwf	??___flmul
 11817     0279  3080               	movlw	128
 11818     027A  0238               	subwf	??___flmul,w
 11819     027B  1D03               	skipz
 11820     027C  2A7F               	goto	u224_25
 11821     027D  3001               	movlw	1
 11822     027E  0248               	subwf	___flmul@temp,w
 11823     027F                     u224_25:
 11824     027F  1803               	skipnc
 11825     0280  2A82               	goto	u224_21
 11826     0281  2A83               	goto	u224_20
 11827     0282                     u224_21:
 11828     0282  2A8E               	goto	i1l3229
 11829     0283                     u224_20:
 11830     0283                     i1l3225:
 11831     0283  3000               	movlw	0
 11832     0284  0020               	movlb	0	; select bank0
 11833     0285  00C7               	movwf	___flmul@prod+3
 11834     0286  3000               	movlw	0
 11835     0287  00C6               	movwf	___flmul@prod+2
 11836     0288  3000               	movlw	0
 11837     0289  00C5               	movwf	___flmul@prod+1
 11838     028A  3000               	movlw	0
 11839     028B  00C4               	movwf	___flmul@prod
 11840     028C                     i1l3227:
 11841     028C  01BD               	clrf	___flmul@sign
 11842     028D  2AA0               	goto	i1l1494
 11843     028E                     i1l3229:
 11844     028E  0020               	movlb	0	; select bank0
 11845     028F  0848               	movf	___flmul@temp,w
 11846     0290  00C3               	movwf	___flmul@bexp
 11847     0291  30FF               	movlw	255
 11848     0292  05C4               	andwf	___flmul@prod,f
 11849     0293  30FF               	movlw	255
 11850     0294  05C5               	andwf	___flmul@prod+1,f
 11851     0295  307F               	movlw	127
 11852     0296  05C6               	andwf	___flmul@prod+2,f
 11853     0297  3000               	movlw	0
 11854     0298  05C7               	andwf	___flmul@prod+3,f
 11855     0299                     i1l3231:
 11856     0299  1C43               	btfss	___flmul@bexp,0
 11857     029A  2A9C               	goto	u225_21
 11858     029B  2A9D               	goto	u225_20
 11859     029C                     u225_21:
 11860     029C  2A9E               	goto	i1l3235
 11861     029D                     u225_20:
 11862     029D                     i1l3233:
 11863     029D  17C6               	bsf	___flmul@prod+2,7
 11864     029E                     i1l3235:
 11865     029E  3643               	lsrf	___flmul@bexp,w
 11866     029F  00C7               	movwf	___flmul@prod+3
 11867     02A0                     i1l1494:
 11868     02A0  083D               	movf	___flmul@sign,w
 11869     02A1  00B8               	movwf	??___flmul
 11870     02A2  0838               	movf	??___flmul,w
 11871     02A3  04C7               	iorwf	___flmul@prod+3,f
 11872     02A4                     i1l3237:
 11873     02A4  0847               	movf	___flmul@prod+3,w
 11874     02A5  00B3               	movwf	?___flmul+3
 11875     02A6  0846               	movf	___flmul@prod+2,w
 11876     02A7  00B2               	movwf	?___flmul+2
 11877     02A8  0845               	movf	___flmul@prod+1,w
 11878     02A9  00B1               	movwf	?___flmul+1
 11879     02AA  0844               	movf	___flmul@prod,w
 11880     02AB  00B0               	movwf	?___flmul
 11881     02AC                     i1l1482:
 11882     02AC  0008               	return
 11883     02AD                     __end_of___flmul:
 11884                           
 11885                           	psect	text75
 11886     0C88                     __ptext75:	
 11887 ;; *************** function __Umul8_16 *****************
 11888 ;; Defined at:
 11889 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;  multiplier      1    wreg     unsigned char 
 11892 ;;  multiplicand    1    0[COMMON] unsigned char 
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  multiplier      1    8[COMMON] unsigned char 
 11895 ;;  word_mpld       2    6[COMMON] unsigned int 
 11896 ;;  product         2    4[COMMON] unsigned int 
 11897 ;; Return value:  Size  Location     Type
 11898 ;;                  2    0[COMMON] unsigned int 
 11899 ;; Registers used:
 11900 ;;		wreg, status,2, status,0
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11906 ;;      Params:         2       0       0       0       0       0
 11907 ;;      Locals:         5       0       0       0       0       0
 11908 ;;      Temps:          2       0       0       0       0       0
 11909 ;;      Totals:         9       0       0       0       0       0
 11910 ;;Total ram usage:        9 bytes
 11911 ;; Hardware stack levels used: 1
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		___flmul
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919     0C88                     __Umul8_16:	
 11920                           ;psect for function __Umul8_16
 11921                           
 11922                           
 11923                           ;incstack = 0
 11924                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11925                           ;__Umul8_16@multiplier stored from wreg
 11926     0C88  00F8               	movwf	__Umul8_16@multiplier
 11927     0C89                     i1l2977:
 11928     0C89  01F4               	clrf	__Umul8_16@product
 11929     0C8A  01F5               	clrf	__Umul8_16@product+1
 11930     0C8B                     i1l2979:
 11931     0C8B  0870               	movf	__Umul8_16@multiplicand,w
 11932     0C8C  00F2               	movwf	??__Umul8_16
 11933     0C8D  01F3               	clrf	??__Umul8_16+1
 11934     0C8E  0872               	movf	??__Umul8_16,w
 11935     0C8F  00F6               	movwf	__Umul8_16@word_mpld
 11936     0C90  0873               	movf	??__Umul8_16+1,w
 11937     0C91  00F7               	movwf	__Umul8_16@word_mpld+1
 11938     0C92                     i1l2981:
 11939     0C92  1C78               	btfss	__Umul8_16@multiplier,0
 11940     0C93  2C95               	goto	u171_21
 11941     0C94  2C96               	goto	u171_20
 11942     0C95                     u171_21:
 11943     0C95  2C9A               	goto	i1l1501
 11944     0C96                     u171_20:
 11945     0C96                     i1l2983:
 11946     0C96  0876               	movf	__Umul8_16@word_mpld,w
 11947     0C97  07F4               	addwf	__Umul8_16@product,f
 11948     0C98  0877               	movf	__Umul8_16@word_mpld+1,w
 11949     0C99  3DF5               	addwfc	__Umul8_16@product+1,f
 11950     0C9A                     i1l1501:
 11951     0C9A  3001               	movlw	1
 11952     0C9B                     u172_25:
 11953     0C9B  35F6               	lslf	__Umul8_16@word_mpld,f
 11954     0C9C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11955     0C9D  0B89               	decfsz	9,f
 11956     0C9E  2C9B               	goto	u172_25
 11957     0C9F  1003               	clrc
 11958     0CA0  0CF8               	rrf	__Umul8_16@multiplier,f
 11959     0CA1                     i1l2985:
 11960     0CA1  0878               	movf	__Umul8_16@multiplier,w
 11961     0CA2  1D03               	btfss	3,2
 11962     0CA3  2CA5               	goto	u173_21
 11963     0CA4  2CA6               	goto	u173_20
 11964     0CA5                     u173_21:
 11965     0CA5  2C92               	goto	i1l2981
 11966     0CA6                     u173_20:
 11967     0CA6                     i1l2987:
 11968     0CA6  0875               	movf	__Umul8_16@product+1,w
 11969     0CA7  00F1               	movwf	?__Umul8_16+1
 11970     0CA8  0874               	movf	__Umul8_16@product,w
 11971     0CA9  00F0               	movwf	?__Umul8_16
 11972     0CAA                     i1l1503:
 11973     0CAA  0008               	return
 11974     0CAB                     __end_of__Umul8_16:
 11975                           
 11976                           	psect	text76
 11977     06C3                     __ptext76:	
 11978 ;; *************** function ___aldiv *****************
 11979 ;; Defined at:
 11980 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;  divisor         4    0[COMMON] long 
 11983 ;;  dividend        4    4[COMMON] long 
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;  quotient        4    2[BANK0 ] long 
 11986 ;;  sign            1    1[BANK0 ] unsigned char 
 11987 ;;  counter         1    0[BANK0 ] unsigned char 
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  4    0[COMMON] long 
 11990 ;; Registers used:
 11991 ;;		wreg, status,2, status,0
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11997 ;;      Params:         8       0       0       0       0       0
 11998 ;;      Locals:         0       6       0       0       0       0
 11999 ;;      Temps:          1       0       0       0       0       0
 12000 ;;      Totals:         9       6       0       0       0       0
 12001 ;;Total ram usage:       15 bytes
 12002 ;; Hardware stack levels used: 1
 12003 ;; This function calls:
 12004 ;;		Nothing
 12005 ;; This function is called by:
 12006 ;;		_interrupcaoCCP4
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010     06C3                     ___aldiv:	
 12011                           ;psect for function ___aldiv
 12012                           
 12013     06C3                     i1l3415:	
 12014                           ;incstack = 0
 12015                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 12016                           
 12017     06C3  0020               	movlb	0	; select bank0
 12018     06C4  01A1               	clrf	___aldiv@sign
 12019     06C5                     i1l3417:
 12020     06C5  1FF3               	btfss	___aldiv@divisor+3,7
 12021     06C6  2EC8               	goto	u236_21
 12022     06C7  2EC9               	goto	u236_20
 12023     06C8                     u236_21:
 12024     06C8  2ED6               	goto	i1l1150
 12025     06C9                     u236_20:
 12026     06C9                     i1l3419:
 12027     06C9  09F0               	comf	___aldiv@divisor,f
 12028     06CA  09F1               	comf	___aldiv@divisor+1,f
 12029     06CB  09F2               	comf	___aldiv@divisor+2,f
 12030     06CC  09F3               	comf	___aldiv@divisor+3,f
 12031     06CD  0AF0               	incf	___aldiv@divisor,f
 12032     06CE  1903               	skipnz
 12033     06CF  0AF1               	incf	___aldiv@divisor+1,f
 12034     06D0  1903               	skipnz
 12035     06D1  0AF2               	incf	___aldiv@divisor+2,f
 12036     06D2  1903               	skipnz
 12037     06D3  0AF3               	incf	___aldiv@divisor+3,f
 12038     06D4  01A1               	clrf	___aldiv@sign
 12039     06D5  0AA1               	incf	___aldiv@sign,f
 12040     06D6                     i1l1150:
 12041     06D6  1FF7               	btfss	___aldiv@dividend+3,7
 12042     06D7  2ED9               	goto	u237_21
 12043     06D8  2EDA               	goto	u237_20
 12044     06D9                     u237_21:
 12045     06D9  2EE9               	goto	i1l3425
 12046     06DA                     u237_20:
 12047     06DA                     i1l3421:
 12048     06DA  09F4               	comf	___aldiv@dividend,f
 12049     06DB  09F5               	comf	___aldiv@dividend+1,f
 12050     06DC  09F6               	comf	___aldiv@dividend+2,f
 12051     06DD  09F7               	comf	___aldiv@dividend+3,f
 12052     06DE  0AF4               	incf	___aldiv@dividend,f
 12053     06DF  1903               	skipnz
 12054     06E0  0AF5               	incf	___aldiv@dividend+1,f
 12055     06E1  1903               	skipnz
 12056     06E2  0AF6               	incf	___aldiv@dividend+2,f
 12057     06E3  1903               	skipnz
 12058     06E4  0AF7               	incf	___aldiv@dividend+3,f
 12059     06E5                     i1l3423:
 12060     06E5  3001               	movlw	1
 12061     06E6  00F8               	movwf	??___aldiv
 12062     06E7  0878               	movf	??___aldiv,w
 12063     06E8  06A1               	xorwf	___aldiv@sign,f
 12064     06E9                     i1l3425:
 12065     06E9  3000               	movlw	0
 12066     06EA  00A5               	movwf	___aldiv@quotient+3
 12067     06EB  3000               	movlw	0
 12068     06EC  00A4               	movwf	___aldiv@quotient+2
 12069     06ED  3000               	movlw	0
 12070     06EE  00A3               	movwf	___aldiv@quotient+1
 12071     06EF  3000               	movlw	0
 12072     06F0  00A2               	movwf	___aldiv@quotient
 12073     06F1                     i1l3427:
 12074     06F1  0873               	movf	___aldiv@divisor+3,w
 12075     06F2  0472               	iorwf	___aldiv@divisor+2,w
 12076     06F3  0471               	iorwf	___aldiv@divisor+1,w
 12077     06F4  0470               	iorwf	___aldiv@divisor,w
 12078     06F5  1903               	skipnz
 12079     06F6  2EF8               	goto	u238_21
 12080     06F7  2EF9               	goto	u238_20
 12081     06F8                     u238_21:
 12082     06F8  2F3A               	goto	i1l3447
 12083     06F9                     u238_20:
 12084     06F9                     i1l3429:
 12085     06F9  01A0               	clrf	___aldiv@counter
 12086     06FA  0AA0               	incf	___aldiv@counter,f
 12087     06FB  2F07               	goto	i1l3433
 12088     06FC                     i1l3431:
 12089     06FC  3001               	movlw	1
 12090     06FD                     u239_25:
 12091     06FD  35F0               	lslf	___aldiv@divisor,f
 12092     06FE  0DF1               	rlf	___aldiv@divisor+1,f
 12093     06FF  0DF2               	rlf	___aldiv@divisor+2,f
 12094     0700  0DF3               	rlf	___aldiv@divisor+3,f
 12095     0701  0B89               	decfsz	9,f
 12096     0702  2EFD               	goto	u239_25
 12097     0703  3001               	movlw	1
 12098     0704  00F8               	movwf	??___aldiv
 12099     0705  0878               	movf	??___aldiv,w
 12100     0706  07A0               	addwf	___aldiv@counter,f
 12101     0707                     i1l3433:
 12102     0707  1FF3               	btfss	___aldiv@divisor+3,7
 12103     0708  2F0A               	goto	u240_21
 12104     0709  2F0B               	goto	u240_20
 12105     070A                     u240_21:
 12106     070A  2EFC               	goto	i1l3431
 12107     070B                     u240_20:
 12108     070B                     i1l3435:
 12109     070B  3001               	movlw	1
 12110     070C                     u241_25:
 12111     070C  35A2               	lslf	___aldiv@quotient,f
 12112     070D  0DA3               	rlf	___aldiv@quotient+1,f
 12113     070E  0DA4               	rlf	___aldiv@quotient+2,f
 12114     070F  0DA5               	rlf	___aldiv@quotient+3,f
 12115     0710  0B89               	decfsz	9,f
 12116     0711  2F0C               	goto	u241_25
 12117     0712                     i1l3437:
 12118     0712  0873               	movf	___aldiv@divisor+3,w
 12119     0713  0277               	subwf	___aldiv@dividend+3,w
 12120     0714  1D03               	skipz
 12121     0715  2F20               	goto	u242_25
 12122     0716  0872               	movf	___aldiv@divisor+2,w
 12123     0717  0276               	subwf	___aldiv@dividend+2,w
 12124     0718  1D03               	skipz
 12125     0719  2F20               	goto	u242_25
 12126     071A  0871               	movf	___aldiv@divisor+1,w
 12127     071B  0275               	subwf	___aldiv@dividend+1,w
 12128     071C  1D03               	skipz
 12129     071D  2F20               	goto	u242_25
 12130     071E  0870               	movf	___aldiv@divisor,w
 12131     071F  0274               	subwf	___aldiv@dividend,w
 12132     0720                     u242_25:
 12133     0720  1C03               	skipc
 12134     0721  2F23               	goto	u242_21
 12135     0722  2F24               	goto	u242_20
 12136     0723                     u242_21:
 12137     0723  2F2D               	goto	i1l3443
 12138     0724                     u242_20:
 12139     0724                     i1l3439:
 12140     0724  0870               	movf	___aldiv@divisor,w
 12141     0725  02F4               	subwf	___aldiv@dividend,f
 12142     0726  0871               	movf	___aldiv@divisor+1,w
 12143     0727  3BF5               	subwfb	___aldiv@dividend+1,f
 12144     0728  0872               	movf	___aldiv@divisor+2,w
 12145     0729  3BF6               	subwfb	___aldiv@dividend+2,f
 12146     072A  0873               	movf	___aldiv@divisor+3,w
 12147     072B  3BF7               	subwfb	___aldiv@dividend+3,f
 12148     072C                     i1l3441:
 12149     072C  1422               	bsf	___aldiv@quotient,0
 12150     072D                     i1l3443:
 12151     072D  3001               	movlw	1
 12152     072E                     u243_25:
 12153     072E  36F3               	lsrf	___aldiv@divisor+3,f
 12154     072F  0CF2               	rrf	___aldiv@divisor+2,f
 12155     0730  0CF1               	rrf	___aldiv@divisor+1,f
 12156     0731  0CF0               	rrf	___aldiv@divisor,f
 12157     0732  0B89               	decfsz	9,f
 12158     0733  2F2E               	goto	u243_25
 12159     0734                     i1l3445:
 12160     0734  3001               	movlw	1
 12161     0735  02A0               	subwf	___aldiv@counter,f
 12162     0736  1D03               	btfss	3,2
 12163     0737  2F39               	goto	u244_21
 12164     0738  2F3A               	goto	u244_20
 12165     0739                     u244_21:
 12166     0739  2F0B               	goto	i1l3435
 12167     073A                     u244_20:
 12168     073A                     i1l3447:
 12169     073A  0821               	movf	___aldiv@sign,w
 12170     073B  1903               	btfsc	3,2
 12171     073C  2F3E               	goto	u245_21
 12172     073D  2F3F               	goto	u245_20
 12173     073E                     u245_21:
 12174     073E  2F4A               	goto	i1l3451
 12175     073F                     u245_20:
 12176     073F                     i1l3449:
 12177     073F  09A2               	comf	___aldiv@quotient,f
 12178     0740  09A3               	comf	___aldiv@quotient+1,f
 12179     0741  09A4               	comf	___aldiv@quotient+2,f
 12180     0742  09A5               	comf	___aldiv@quotient+3,f
 12181     0743  0AA2               	incf	___aldiv@quotient,f
 12182     0744  1903               	skipnz
 12183     0745  0AA3               	incf	___aldiv@quotient+1,f
 12184     0746  1903               	skipnz
 12185     0747  0AA4               	incf	___aldiv@quotient+2,f
 12186     0748  1903               	skipnz
 12187     0749  0AA5               	incf	___aldiv@quotient+3,f
 12188     074A                     i1l3451:
 12189     074A  0825               	movf	___aldiv@quotient+3,w
 12190     074B  00F3               	movwf	?___aldiv+3
 12191     074C  0824               	movf	___aldiv@quotient+2,w
 12192     074D  00F2               	movwf	?___aldiv+2
 12193     074E  0823               	movf	___aldiv@quotient+1,w
 12194     074F  00F1               	movwf	?___aldiv+1
 12195     0750  0822               	movf	___aldiv@quotient,w
 12196     0751  00F0               	movwf	?___aldiv
 12197     0752                     i1l1160:
 12198     0752  0008               	return
 12199     0753                     __end_of___aldiv:
 12200     007E                     btemp	set	126	;btemp
 12201     007E                     int$flags	set	126
 12202     007E                     wtemp0	set	126
 12203                           
 12204                           	psect	idloc
 12205                           
 12206                           ;Config register IDLOC0 @ 0x8000
 12207                           ;	unspecified, using default values
 12208     8000                     	org	32768
 12209     8000  3FFF               	dw	16383
 12210                           
 12211                           ;Config register IDLOC1 @ 0x8001
 12212                           ;	unspecified, using default values
 12213     8001                     	org	32769
 12214     8001  3FFF               	dw	16383
 12215                           
 12216                           ;Config register IDLOC2 @ 0x8002
 12217                           ;	unspecified, using default values
 12218     8002                     	org	32770
 12219     8002  3FFF               	dw	16383
 12220                           
 12221                           ;Config register IDLOC3 @ 0x8003
 12222                           ;	unspecified, using default values
 12223     8003                     	org	32771
 12224     8003  3FFF               	dw	16383
 12225                           
 12226                           	psect	config
 12227                           
 12228                           ;Config register CONFIG1 @ 0x8007
 12229                           ;	Oscillator Selection
 12230                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 12231                           ;	Watchdog Timer Enable
 12232                           ;	WDTE = OFF, WDT disabled
 12233                           ;	Power-up Timer Enable
 12234                           ;	PWRTE = OFF, PWRT disabled
 12235                           ;	MCLR Pin Function Select
 12236                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 12237                           ;	Flash Program Memory Code Protection
 12238                           ;	CP = OFF, Program memory code protection is disabled
 12239                           ;	Data Memory Code Protection
 12240                           ;	CPD = OFF, Data memory code protection is disabled
 12241                           ;	Brown-out Reset Enable
 12242                           ;	BOREN = ON, Brown-out Reset enabled
 12243                           ;	Clock Out Enable
 12244                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 12245                           ;	Internal/External Switchover
 12246                           ;	IESO = ON, Internal/External Switchover mode is enabled
 12247                           ;	Fail-Safe Clock Monitor Enable
 12248                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 12249     8007                     	org	32775
 12250     8007  3FE4               	dw	16356
 12251                           
 12252                           ;Config register CONFIG2 @ 0x8008
 12253                           ;	Flash Memory Self-Write Protection
 12254                           ;	WRT = OFF, Write protection off
 12255                           ;	PLL Enable
 12256                           ;	PLLEN = OFF, 4x PLL disabled
 12257                           ;	Stack Overflow/Underflow Reset Enable
 12258                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 12259                           ;	Brown-out Reset Voltage Selection
 12260                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 12261                           ;	Low-Voltage Programming Enable
 12262                           ;	LVP = ON, Low-voltage programming enabled
 12263     8008                     	org	32776
 12264     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    16
    Data        1
    BSS         45
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     62      79
    BANK1            80     19      63
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    memset@s	PTR unsigned char  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    txSpi@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controleMovimento(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controleMovimento(), TMR4_DefaultInterruptHandler(), NULL(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> interrupcaoCCP4(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> interrupcaoCCP4(), CCP4_DefaultCallBack(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), NULL(), 

    SPI1_ExchangeBlock@block	PTR void  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(BANK1[2]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(BANK1[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), NULL(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS1(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_chegadaS1(), chegadaS1(), NULL(), IOCBF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR4_CallBack->_controleMovimento
    _controleMovimento->_PWM3_LoadDutyValue
    _bin2bcd->_memset
    ___wmul->_ADC_GetConversion
    _chegadaS2->i1_matrixUpdate
    i1_chegadaS1->i1_matrixUpdate
    _chegadaS4->i1_matrixUpdate
    _chegadaS3->i1_matrixUpdate
    i1_matrixUpdate->i1_txSpi
    i1_txSpi->i1_SPI1_ExchangeBlock
    _interrupcaoCCP4->___xxtofl
    ___xxtofl->___aldiv
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _TMR0_CallBack->_sendInfo
    _sendInfo->___fltol
    _CCP4_CaptureISR->_interrupcaoCCP4
    _interrupcaoCCP4->___fltol
    ___xxtofl->___aldiv
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK1

    _main->_initMatrix
    _organizaTrajeto->_TMR4_WriteTimer
    _initMatrix->_txSpi
    _chegadaS1->_matrixUpdate
    _matrixUpdate->_txSpi
    _txSpi->_SPI1_ExchangeBlock
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4138
                                             17 BANK1      2     2      0
                   _CCP4_SetCallBack
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR4_SetInterruptHandler
                          _chegadaS1
                         _initMatrix
                       _isValidFloor
                    _organizaTrajeto
 ---------------------------------------------------------------------------------
 (1) _organizaTrajeto                                      3     3      0     134
                                              1 BANK1      3     3      0
                    _TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR4_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _isValidFloor                                         2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initMatrix                                           9     9      0     962
                                              8 BANK1      9     9      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (1) _chegadaS1                                            0     0      0     852
                    _TMR4_StartTimer
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (2) _matrixUpdate                                         5     5      0     852
                                              8 BANK1      3     3      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (2) _txSpi                                                3     1      2     570
                                              5 BANK1      3     1      2
                 _SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeBlock                                   5     3      2     199
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1164
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     348
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     174
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0      88
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   13231
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0     500
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0     500
                                NULL *
       _TMR4_DefaultInterruptHandler *
                  _controleMovimento *
 ---------------------------------------------------------------------------------
 (8) _controleMovimento                                    2     2      0     500
                                              4 COMMON     2     2      0
                 _PWM3_LoadDutyValue
                     _TMR4_StopTimer
 ---------------------------------------------------------------------------------
 (9) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0    5050
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0    5050
                                NULL *
       _TMR0_DefaultInterruptHandler *
                           _sendInfo *
 ---------------------------------------------------------------------------------
 (8) _sendInfo                                             6     6      0    5050
                                             52 BANK0      6     6      0
                  _ADC_GetConversion
                       _EUSART_Write
                            ___flmul
                            ___fltol
                             ___wmul
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (9) _bin2bcd                                             11     9      2    1562
                                             10 COMMON     2     0      2
                                              0 BANK0      9     9      0
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                             10     6      4     904
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     244
                                              4 COMMON     6     2      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0    1504
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_ISR                                           0     0      0    1013
                                NULL *
     _IOCBF3_DefaultInterruptHandler *
                          _chegadaS2 *
 ---------------------------------------------------------------------------------
 (8) _chegadaS2                                            0     0      0    1013
                 _PWM3_LoadDutyValue
                  i1_TMR4_StartTimer
                  i1_TMR4_WriteTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_ISR                                           0     0      0     491
                                NULL *
     _IOCBF0_DefaultInterruptHandler *
                        i1_chegadaS1 *
 ---------------------------------------------------------------------------------
 (8) i1_chegadaS1                                          0     0      0     491
                  i1_TMR4_StartTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CMP2_ISR                                             0     0      0    1013
                          _chegadaS4
 ---------------------------------------------------------------------------------
 (7) _chegadaS4                                            0     0      0    1013
                 _PWM3_LoadDutyValue
                  i1_TMR4_StartTimer
                  i1_TMR4_WriteTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (6) _CMP1_ISR                                             0     0      0    1013
                          _chegadaS3
 ---------------------------------------------------------------------------------
 (7) _chegadaS3                                            0     0      0    1013
                 _PWM3_LoadDutyValue
                  i1_TMR4_StartTimer
                  i1_TMR4_WriteTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (9) i1_matrixUpdate                                       5     5      0     491
                                              8 COMMON     3     3      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (10) i1_txSpi                                             3     1      2     212
                                              5 COMMON     3     1      2
               i1_SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (11) i1_SPI1_ExchangeBlock                                5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) i1_TMR4_WriteTimer                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) i1_TMR4_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PWM3_LoadDutyValue                                   4     2      2     500
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _CCP4_CaptureISR                                      2     2      0    4151
                                             60 BANK0      2     2      0
                                NULL *
               _CCP4_DefaultCallBack *
                    _interrupcaoCCP4 *
 ---------------------------------------------------------------------------------
 (7) _interrupcaoCCP4                                      8     8      0    4051
                                             52 BANK0      8     8      0
                            ___aldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     474
                                              9 COMMON     4     4      0
                                              6 BANK0     10     6      4
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fltol                                             10     6      4     381
                                             42 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) ___flmul                                             26    18      8    2569
                                             16 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) _CCP4_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _SPI1_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _chegadaS1
     _TMR4_StartTimer
     _matrixUpdate
       _txSpi
         _SPI1_ExchangeBlock
   _initMatrix
     _txSpi
   _isValidFloor
   _organizaTrajeto
     _TMR4_WriteTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     NULL(Fake) *
     _CCP4_DefaultCallBack *
     _interrupcaoCCP4 *
       ___aldiv
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
           ___aldiv (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _CMP1_ISR
     _chegadaS3
       _PWM3_LoadDutyValue
       i1_TMR4_StartTimer
       i1_TMR4_WriteTimer
       i1_matrixUpdate
         i1_txSpi
           i1_SPI1_ExchangeBlock
   _CMP2_ISR
     _chegadaS4
       _PWM3_LoadDutyValue
       i1_TMR4_StartTimer
       i1_TMR4_WriteTimer
       i1_matrixUpdate
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       NULL(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       i1_chegadaS1 *
         i1_TMR4_StartTimer
         i1_matrixUpdate
     _IOCBF3_ISR
       NULL(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _chegadaS2 *
         _PWM3_LoadDutyValue
         i1_TMR4_StartTimer
         i1_TMR4_WriteTimer
         i1_matrixUpdate
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _sendInfo *
         _ADC_GetConversion
         _EUSART_Write
         ___flmul
         ___fltol
         ___wmul
           _ADC_GetConversion (ARG)
         _bin2bcd
           _memset
   _TMR4_ISR
     _TMR4_CallBack
       NULL(Fake) *
       _TMR4_DefaultInterruptHandler *
       _controleMovimento *
         _PWM3_LoadDutyValue
         _TMR4_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      9C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3E      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     13      3F       8       78.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      9C      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 19 22:36:35 2023

                              _CCP4_Initialize 0B72               ??_IOCBF3_DefaultInterruptHandler 0070  
              ?_IOCBF3_DefaultInterruptHandler 0070                             _SPI1_ExchangeBlock 0CF7  
                                           l11 0ABF                        __end_of_organizaTrajeto 0DF6  
                            ??_CMP1_Initialize 00BB                                             l75 0AEC  
                                           _t1 0066                                             _t2 0064  
                       __end_of_FVR_Initialize 0A4A                            ___wmul@multiplicand 0076  
                      __end_of_interrupcaoCCP4 0457                                _timer0ReloadVal 0068  
                          __Umul8_16@word_mpld 0076                                            l142 0AE0  
                                          l209 0A81                                            l402 0A7B  
                                          l314 0A49                                            l219 0A87  
                                          l405 0A6F                                            l430 0F47  
                                          l263 0D4E                                            l360 0CCF  
                                          l266 0AA6                                            l426 0AD4  
                                          l444 0D02                                            l381 0B50  
                                          l197 0D7F                                            l269 0A4D  
                                          l286 0AAE                                            l446 0D07  
                                          l519 0B22                                            l368 0A57  
                                          l448 0D20                                            l377 0B41  
                                          l641 0B83                                            l801 0DF5  
                                          l618 0A8D                                            l820 0B53  
                                          l558 0AB6                                            l670 0B96  
                                          l806 0BA9                                            l647 0A69  
                                          l399 0A75                                            l824 0B60  
                                          l673 0A45                                            l833 0C68  
                                          l682 0A99                                            l843 0E44  
                                          l596 0BD3                                            l908 059E  
                                          l698 0A93                                            l867 07FA  
                                          l795 0DE6                                            _PR2 001B  
                                          _PR4 0416                            ?_SPI1_ExchangeBlock 00BB  
                              _timer1ReloadVal 0062                                   _pulsoEncoder 006C  
                                          _mov 00B7                 ?_EUSART_SetFramingErrorHandler 00BB  
                              _TMR2_Initialize 0AAF                 CCP4_SetCallBack@customCallBack 00BB  
                                          wreg 0009                               _CCP4_SetCallBack 0A64  
                                 ___flmul@aexp 0042                                   ___flmul@bexp 0043  
                      SPI1_ExchangeBlock@block 00BE                                   ___flmul@sign 003D  
                                 ___flmul@temp 0048                                   ___flmul@prod 0044  
                      __end_of_CCP4_CaptureISR 0BBF                                   ?_EUSART_Read 0070  
                                  i1_chegadaS1 0D80                                   ___fltol@exp1 0053  
                                         l3021 0D14                                           l3013 0CF9  
                                         l3015 0CFC                                           l3017 0D08  
                                         l4001 07D1                                           l3019 0D0F  
                                         l4011 07E9                                           l4003 07D4  
                                         l4013 07ED                                           l4005 07D9  
                                         l4101 057B                                           l4015 07F0  
                                         l4007 07DF                                           l4103 057F  
                                         l4111 0588                                           l4017 07F3  
                                         l4009 07E3                                           l4105 0582  
                                         l3323 0B55                                           l4019 07F7  
                                         l3325 0B5E                                           l4071 0536  
                                         l4063 0502                                           l3281 0A82  
                                         l4081 054F                                           l4073 0537  
                                         l4065 052D                                           l3291 0A64  
                                         l3283 0A70                                           l3531 0ABB  
                                         l4091 0565                                           l4083 0552  
                                         l4075 053B                                           l4067 052F  
                                         l3541 0AEA                                           l3285 0A76  
                                         l3533 0ABC                                           l3293 0A8E  
                                         l3701 0B8C                                           l4093 056E  
                                         l4085 055B                                           l4077 0543  
                                         l4069 0533                                           l3535 0AE1  
                                         l3287 0A6A                                           l3279 0A7C  
                                         l3631 0D55                                           l3527 0AB7  
                                         l3711 0AB4                                           l3703 0B93  
                                         l4095 0572                                           l4087 055F  
                                         l4079 0549                                           l3537 0AE3  
                                         l3641 0D60                                           l3633 0D57  
                                         l3529 0ABA                                           l3289 0A88  
                                         l3721 0BCA                                           l3713 0BBF  
                                         l3705 0AAF                                           l4089 0562  
                                         l3731 0B72                                           l3539 0AE8  
                                         l3651 0D6C                                           l3643 0D67  
                                         l3635 0D5A                                           l3627 0D4F  
                                         l3723 0BCB                                           l3715 0BC4  
                                         l3707 0AB2                                           l3811 0C50  
                                         l4179 0590                                           l4099 0575  
                                         l3725 0AA7                                           l3741 0B81  
                                         l3733 0B75                                           l3581 0AD5  
                                         l3653 0D6D                                           l3645 0D69  
                                         l3637 0D5C                                           l3629 0D52  
                                         l3717 0BC7                                           l3709 0AB3  
                                         l3813 0C52                                           l3805 0C4D  
                                         l3727 0AAA                                           l3735 0B76  
                                         l3583 0AD7                                           l3655 0D6E  
                                         l3647 0D6A                                           l3639 0D5F  
                                         l3719 0BC9                                           l3751 0B1C  
                                         l3743 0B15                                           l3815 0C58  
                                         l3729 0AAB                                           l3737 0B77  
                                         l3585 0ADC                                           l3761 0CBD  
                                         l3657 0D76                                           l3649 0D6B  
                                         l3681 0AD2                                           l3673 0ACA  
                                         l3753 0B20                                           l3745 0B17  
                                         l3817 0C60                                           l3739 0B7F  
                                         l3587 0ADE                                           l3763 0CC5  
                                         l3755 0CAB                                           l3691 0A46  
                                         l3683 0AA0                                           l3659 0D7E  
                                         l3675 0ACD                                           l3747 0B19  
                                         l3771 0A43                                           l3819 0C63  
                                         l3931 0DDA                                           l3923 0DB3  
                                         l3861 0B41                                           l3765 0CCD  
                                         l3757 0CB4                                           l3685 0AA3  
                                         l3677 0ACE                                           l3749 0B1B  
                                         l3693 0B84                                           l3941 0B99  
                                         l3773 0A96                                           l3933 0DE0  
                                         l3925 0DCB                                           l3863 0B46  
                                         l3759 0CB5                                           l3687 0AA4  
                                         l3679 0AD0                                           l3695 0B87  
                                         l3855 0D21                                           l3943 0B9A  
                                         l3935 0DEC                                           l3927 0DCF  
                                         l3865 0B48                                           l3857 0A53  
                                         l3881 0F2E                                           l3873 0EF2  
                                         l3697 0B88                                           l3689 0A4A  
                                         l3961 0DFE                                           l3953 0DF6  
                                         l3945 0BA0                                           l3937 0DEE  
                                         l3929 0DD5                                           l3867 0B4D  
                                         l3883 0F45                                           l3875 0EF7  
                                         l3699 0B8A                                           l3971 0E09  
                                         l3963 0E02                                           l3947 0BA6  
                                         l3939 0DF3                                           l3869 0B4F  
                                         l3877 0F1B                                           l3981 0E28  
                                         l3965 0E08                                           l3949 0BA8  
                                         l3879 0F1C                                           l3991 0E3E  
                                         l3983 0E2E                                           l3959 0DF9  
                                         l3993 07C8                                           l3985 0E31  
                                         l3977 0E0A                                           l3995 07CA  
                                         l3979 0E25                                           l3997 07CD  
                                         l3989 0E39                                           l3999 07CF  
                                ?_isValidFloor 0070                                           u3000 0E2E  
                                         u3001 0E2D                                           u3010 0E44  
                                         u3011 0E43                                           u3020 07D9  
                                         u3021 07D8                                           _LATA 010C  
                                         _LATB 010D                                           u3200 057B  
                                         u3201 057A                                           u3160 0543  
                                         u3161 0542                                           u3170 054F  
                                         u3171 054E                                           u3180 055B  
                                         u3181 055A                                           u3190 056E  
                                         u3191 056D                                           u1770 0D07  
                            ??_CMP2_Initialize 00BB                                           u1771 0D06  
                                         u1780 0D20                                           u2820 0C68  
                                         u1781 0D1F                                           u2821 0C67  
                                         u2850 0B46                                           u2930 0DCB  
                                         u2914 0DB9                                           u2851 0B45  
                                         u2931 0DCA                                           u2915 0DB8  
                                         u2860 0B4D                                           u2940 0DD5  
                                         u2924 0DC2                                           u2861 0B4C  
                                         u2941 0DD4                                           u2925 0DC1  
                                         i1l14 0C00                                           u2870 0EF7  
                                         u2950 0DE0                                           u2871 0EF6  
                                         u2951 0DDF                                           u2960 0DEC  
                                         u2961 0DEB                                           u2970 0BA0  
                                         u2971 0B9F                                           u2980 0BA6  
                                         u2981 0BA5                                           u2990 0E08  
                                         u2991 0E07                                           i1l81 0A63  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _WPUA 020C  
                                         _WPUB 020D                                           _flag 006B  
                                         _main 0502                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                         ??_SPI1_ExchangeBlock 00BD                      i1SPI1_ExchangeBlock@block 0073  
                                         start 0056                                __end_ofi1_txSpi 0B15  
                             __end_of_CMP1_ISR 0A5E                               __end_of_CMP2_ISR 0A64  
                   ??_TMR4_SetInterruptHandler 00BD                             i1matrixUpdate@data 0078  
                      __end_of_TMR0_Initialize 0BD4                 ??_TMR0_DefaultInterruptHandler 0070  
                              ?_FVR_Initialize 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0AA7                              isValidFloor@floor 00BC  
                                ___fltol@sign1 0052                                __end_of___aldiv 0753  
                                        ?_main 0070                         ??_CCP4_DefaultCallBack 0072  
                              __end_of___flmul 02AD               SPI1_Open@spi1UniqueConfiguration 00BE  
                              __end_of___fltol 07C4                                          _T1CON 0018  
                                        _T2CON 001C                                __end_of_bin2bcd 0633  
                                        _T4CON 0417                                          i1l202 0B71  
                                        i1l212 0A3A                                          i1l301 0C44  
                                        i1l206 0B31                                          i1l222 0A3B  
                                        i1l216 0B40                                          i1l304 0C4C  
                                        i1l148 0A5D                                          i1l500 0054  
                                        i1l611 0C18                                          i1l444 0CDA  
                                        i1l621 0A3C                                          i1l701 0002  
                                        i1l446 0CDF                                          i1l615 0AF9  
                                        i1l448 0CF6                                          i1l384 0AC1  
                                        i1l387 0AC9                                          i1l644 0BBE  
                                        i1l820 0B08                                          i1l900 0FFF  
                                        i1l638 0A39                                          i1l824 0B14  
                                        i1l817 0456                                          i1l673 0A3F  
                                        i1l833 0C32                                          i1l809 03A2  
                                        i1l682 0A52                                          i1l931 05C6  
                                        i1l691 0BE9                                          i1l932 05D9  
                                        i1l676 0A42                                          i1l933 05EB  
                                        i1l934 05FE                                          i1l862 0E98  
                                        i1l935 0632                                          i1l695 0B06  
                                        i1l881 0F6B                                          i1l857 0E92  
                                        i1l867 0DB2                                          i1l892 0FC7  
                                        i1l878 0EEF                                          i1l889 0FA3  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                   _RXaccepted 006D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0B84  
                    ?_TMR0_SetInterruptHandler 00BB                               __end_of_TMR0_ISR 0C19  
                                        _dTemp 00B3                               __end_of_TMR4_ISR 0BEA  
                                        _oTemp 00B4                        __end_of_PIN_MANAGER_IOC 0B72  
                               _WDT_Initialize 0A4A                                 ??_isValidFloor 00BB  
                                        _txSpi 0B51                                          _state 00B8  
                      __end_of_PWM3_Initialize 0AC0                        __end_of_TMR1_Initialize 0B23  
                                        pclath 000A                                          status 0003  
                      __end_of_CCP4_Initialize 0B84                                          wtemp0 007E  
                                txSpi@dataSize 00C0                               ??i1_matrixUpdate 0078  
                              __initialization 0058                                i1matrixUpdate@i 007A  
                                 __end_of_main 05A1                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 0AB7                               ?_organizaTrajeto 0070  
                  ?_INTERRUPT_InterruptManager 0070                               ?_interrupcaoCCP4 0070  
                                       ??_main 00CC                            _chegadaS1$intlevel0 07C8  
                      _IOCBF0_InterruptHandler 00DC                         __end_of_WDT_Initialize 0A4E  
                             ?_CCP4_CaptureISR 0070              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00D6                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         ?_txSpi 00C0  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0A58                                         _BORCON 0116  
                                       _T1GCON 0019                                         i1l1150 06D6  
                                       i1l1160 0752                                         i1l3001 0C3F  
                                       i1l3003 0C42                                         i1l3011 0AC6  
                                       i1l1501 0C9A                                         i1l3101 0072  
                                       i1l3005 0C48                                         i1l1085 0C73  
                                       i1l1503 0CAA                                         i1l3111 0082  
                                       i1l3103 0076                                         i1l1087 0C87  
                                       i1l3023 0A40                                         u200_20 007C  
                                       i1l3201 0211                                         i1l3121 009E  
                                       i1l3113 0087                                         u200_21 007B  
                                       i1l3105 0078                                         i1l3009 0AC1  
                                       i1l3041 05E2                                         i1l3025 05A1  
                                       i1l3211 0236                                         i1l3203 0215  
                                       i1l3131 00AF                                         i1l3123 00A0  
                                       i1l3115 008F                                         i1l3107 007C  
                                       i1l3051 0C69                                         i1l3043 05F4  
                                       i1l3035 05B4                                         i1l3027 05AC  
                                       i1l1540 04D9                                         i1l1532 04B3  
                                       i1l3221 026B                                         i1l3213 023E  
                                       i1l3205 0229                                         i1l3141 00CB  
                                       i1l3133 00B7                                         i1l3125 00A4  
                                       i1l3117 0091                                         i1l3109 007D  
                                       i1l3061 0C83                                         i1l3053 0C6B  
                                       i1l3045 0619                                         i1l3037 05BD  
                                       i1l3029 05B3                                         i1l3301 0337  
                                       i1l4021 0006                                         i1l1286 07AE  
                                       i1l1526 047A                                         i1l3231 0299  
                                       i1l3223 0275                                         i1l3215 0242  
                                       i1l3151 0104                                         i1l3135 00B9  
                                       i1l3127 00A5                                         i1l3119 0099  
                                       i1l1279 07C3                                         i1l3071 0766  
                                       i1l3055 0C6F                                         i1l3047 061F  
                                       i1l3039 05CF                                         i1l3311 037F  
                                       i1l3303 033E                                         i1l4031 0019  
                                       i1l4023 000A                                         u201_20 0082  
                                       i1l1528 0501                                         i1l3233 029D  
                                       i1l3225 0283                                         i1l3217 025A  
                                       i1l3209 0231                                         i1l3161 014A  
                                       i1l3153 0111                                         i1l3145 00D4  
                                       i1l3137 00C1                                         i1l3129 00AA  
                                       u201_21 0081                                         i1l1289 07C3  
                                       i1l3081 0786                                         i1l3073 0777  
                                       i1l3065 0753                                         i1l3241 0A3D  
                                       i1l3401 0ED6                                         i1l3057 0C78  
                                       i1l1545 06C2                                         i1l3321 039E  
                                       i1l3313 0385                                         i1l3305 0345  
                                       i1l4041 002D                                         i1l4033 001C  
                                       i1l4025 000E                                         i1l1482 02AC  
                                       i1l3235 029E                                         i1l3227 028C  
                                       i1l3219 025E                                         i1l3171 0180  
                                       i1l3163 0155                                         i1l3155 0129  
                                       i1l3147 00DF                                         i1l3139 00C6  
                                       i1l3075 0778                                         i1l3067 075D  
                                       i1l1539 04CD                                         i1l3243 0A4F  
                                       i1l3251 0C1B                                         i1l3411 0EE9  
                                       i1l3403 0EDC                                         i1l3059 0C7D  
                                       i1l3315 038C                                         i1l3307 0349  
                                       i1l3331 0E4C                                         i1l4051 0044  
                                       i1l4043 0032                                         i1l4035 0020  
                                       i1l4027 0011                                         i1l3421 06DA  
                                       i1l3237 02A4                                         i1l3229 028E  
                                       i1l3181 01CB                                         i1l3173 0187  
                                       i1l3165 015C                                         i1l3157 0136  
                                       i1l3149 00EC                                         i1l3077 0780  
                                       i1l3253 0C1D                                         i1l3245 0C19  
                                       i1l3501 0D82                                         i1l3413 0EEC  
                                       i1l3405 0EDF                                         i1l3317 0393  
                                       i1l3309 0372                                         i1l3341 0E5C  
                                       i1l3333 0E4E                                         i1l4053 0047  
                                       i1l4045 0037                                         i1l4037 0025  
                                       i1l4029 0015                                         i1l1494 02A0  
                                       i1l3431 06FC                                         i1l3423 06E5  
                                       i1l3415 06C3                                         i1l3191 0200  
                                       i1l3183 01E2                                         i1l3175 0199  
                                       i1l3167 0167                                         i1l3159 0143  
                                       i1l3095 07A5                                         i1l3087 078E  
                                       i1l3079 0782                                         i1l3255 0C23  
                                       i1l3511 0D91                                         i1l3503 0D85  
                                       i1l3407 0EE4                                         i1l3319 0397  
                                       i1l3351 0E6F                                         i1l3343 0E63  
                                       i1l3335 0E54                                         i1l3327 0E45  
                                       i1l4055 004C                                         i1l4047 003A  
                                       i1l4039 002A                                         i1l1488 022C  
                                       u210_20 01C1                                         u202_20 0087  
                                       i1l3441 072C                                         i1l3433 0707  
                                       i1l3425 06E9                                         i1l3417 06C5  
                                       i1l3193 0201                                         i1l3185 01E9  
                                       i1l3177 01A4                                         i1l3169 016E  
                                       u202_21 0086                                         i1l3097 07B3  
                                       i1l3089 079E                                         i1l3257 0C2B  
                                       i1l3601 0F68                                         i1l3521 0DA8  
                                       i1l3513 0D97                                         i1l3505 0D87  
                                       i1l3409 0EE6                                         i1l3361 0E95  
                                       i1l3329 0E46                                         i1l4057 0051  
                                       i1l4049 003F                                         i1l3451 074A  
                                       i1l3443 072D                                         i1l3435 070B  
                                       i1l3427 06F1                                         i1l3419 06C9  
                                       i1l3195 0208                                         i1l3187 01F5  
                                       i1l3179 01B6                                         i1l3099 07B8  
                                       i1l3259 0C2D                                         i1l3611 0F84  
                                       i1l3603 0F74                                         i1l3523 0DAB  
                                       i1l3515 0D9B                                         i1l3507 0D89  
                                       i1l3371 0E99                                         i1l3363 0E96  
                                       i1l3347 0E67                                         i1l3339 0E57  
                                       i1l3355 0E73                                         i1l3445 0734  
                                       i1l3437 0712                                         i1l3429 06F9  
                                       i1l3189 01FC                                         i1l3197 020C  
                                       u210_25 01BD                                         i1l3461 0472  
                                       i1l3621 0F96                                         i1l3613 0F8A  
                                       i1l3605 0F75                                         i1l3525 0DAF  
                                       i1l3517 0DA1                                         i1l3509 0D8C  
                                       i1l3381 0EB9                                         i1l3373 0EA1  
                                       i1l4181 0E7C                                         i1l3349 0E6E  
                                       i1l3357 0E8A                                         i1l3439 0724  
                                       i1l3447 073A                                         i1l3199 0210  
                                       i1l3471 0499                                         i1l3463 0482  
                                       i1l3455 0459                                         i1l3623 0F9C  
                                       i1l3615 0F8D                                         i1l3607 0F7A  
                                       i1l3551 0FB6                                         i1l3543 0FA4  
                                       i1l3519 0DA5                                         i1l3391 0EC4  
                                       i1l3383 0EBC                                         i1l3375 0EA6  
                                       i1l3295 02AD                                         i1l3359 0E90  
                                       u211_20 01D8                                         u203_20 00A4  
                                       i1l3449 073F                                         u203_21 00A3  
                                       i1l3481 04C3                                         i1l3473 04A0  
                                       i1l3457 045E                                         i1l3801 0405  
                                       i1l2921 0CD1                                         i1l3625 0FA1  
                                       i1l3617 0F90                                         i1l3609 0F80  
                                       i1l3561 0FD6                                         i1l3553 0FBA  
                                       i1l3545 0FA7                                         i1l3393 0EC5  
                                       i1l3385 0EBE                                         i1l3377 0EAB  
                                       i1l3297 0321                                         i1l3491 04F4  
                                       i1l3483 04C7                                         i1l3475 04A4  
                                       i1l3467 048B                                         i1l3459 0462  
                                       i1l3803 0421                                         i1l2923 0CD4  
                                       i1l3619 0F93                                         i1l3571 0FEC  
                                       i1l3563 0FDC                                         i1l3555 0FC4  
                                       i1l3547 0FAC                                         i1l3395 0ECA  
                                       i1l3387 0EC0                                         i1l3379 0EAF  
                                       i1l2931 0634                                         i1l3299 0331  
                                       u211_25 01D4                                         i1l3493 04F8  
                                       i1l3485 04D1                                         i1l3477 04AC  
                                       i1l3469 048E                                         i1l2925 0CE0  
                                       i1l3573 0FEF                                         i1l3565 0FE0  
                                       i1l3557 0FD0                                         i1l3549 0FB1  
                                       i1l3661 0B23                                         i1l3397 0ED0  
                                       i1l3389 0EC2                                         i1l2941 064B  
                                       i1l2933 0636                                         i1l3901 0BD4  
                                       i1l3495 04F9                                         i1l3487 04DB  
                                       i1l3479 04BA                                         i1l2927 0CE6  
                                       i1l3591 0F4B                                         i1l3575 0FF2  
                                       i1l3567 0FE6                                         i1l3559 0FD1  
                                       i1l3663 0B2A                                         i1l3399 0ED3  
                                       i1l3671 0B3E                                         i1l2951 0669  
                                       i1l3903 0BD6                                         u220_20 0236  
                                       u204_20 00AA                                         u220_21 0235  
                                       u204_21 00A9                                         i1l3489 04EF  
                                       i1l2929 0CEA                                         i1l3593 0F50  
                                       i1l3577 0FF8                                         i1l3569 0FE9  
                                       i1l3841 0A60                                         i1l3665 0B2F  
                                       i1l2953 0672                                         i1l2945 0655  
                                       i1l2937 063D                                         i1l3905 0BE3  
                                       i1l3595 0F55                                         i1l3843 0A58  
                                       i1l3579 0FFD                                         i1l3499 0D80  
                                       i1l3667 0B32                                         i1l3851 0B69  
                                       i1l2971 06B4                                         i1l2963 0695  
                                       i1l2947 065A                                         i1l2939 0642  
                                       i1l3907 0BE6                                         i1l2981 0C92  
                                       u212_25 01E3                                         i1l3781 03AA  
                                       i1l3597 0F5A                                         i1l3589 0F48  
                                       i1l3845 0A5A                                         i1l3669 0B39  
                                       i1l3853 0B6E                                         i1l2973 06B8  
                                       i1l2965 06A6                                         i1l2957 067C  
                                       i1l2949 0660                                         i1l2983 0C96  
                                       i1l3791 03EC                                         i1l3783 03AF  
                                       i1l2991 0B0A                                         i1l3599 0F5E  
                                       i1l3839 0A5E                                         i1l3847 0B61  
                                       i1l2975 06BC                                         i1l2967 06AA  
                                       i1l2959 068B                                         i1l3767 0AED  
                                       i1l3775 0AFA                                         u221_20 0242  
                                       u205_20 00AF                                         i1l2985 0CA1  
                                       i1l2977 0C89                                         u221_21 0241  
                                       u205_21 00AE                                         i1l3793 03F1  
                                       i1l3785 03B0                                         i1l2993 0B12  
                                       i1l3849 0B66                                         i1l2969 06AF  
                                       i1l3769 0AF4                                         i1l3777 0B01  
                                       i1l2987 0CA6                                         i1l2979 0C8B  
                                       i1l3795 03F9                                         i1l3787 03E4  
                                       i1l3779 03A3                                         i1l2995 0BEA  
                                       i1l3891 0C12                                         u213_25 01F6  
                                       i1l3797 03FC                                         i1l3789 03EA  
                                       i1l2997 0C34                                         i1l3893 0C15  
                                       i1l3799 0404                                         i1l3895 0BAA  
                                       i1l2999 0C3E                                         i1l3887 0C01  
                                       u222_20 0250                                         u214_20 0200  
                                       u206_20 00C6                                         u230_20 0EA1  
                                       u310_20 0032                                         u214_21 01FF  
                                       u206_21 00C5                                         i1l3897 0BAC  
                                       u230_21 0EA0                                         i1l3889 0C02  
                                       u310_21 0031                                         i1l3899 0BB4  
                                       u222_25 024C                                         u223_20 026B  
                                       u207_20 00CB                                         u231_20 0EA6  
                                       u311_20 0037                                         u303_20 000A  
                                       u223_21 026A                                         u207_21 00CA  
                                       u231_21 0EA5                                         u311_21 0036  
                                       u303_21 0009                                         u223_25 0267  
                                       u215_25 0202                                         u240_20 070B  
                                       u224_20 0283                                         u216_20 0210  
                                       u232_20 0EAB                                         u312_20 003F  
                                       u304_20 000E                                         u240_21 070A  
                                       u224_21 0282                                         u216_21 020F  
                                       u232_21 0EAA                                         u312_21 003E  
                                       u304_21 000D                                         u224_25 027F  
                                       u208_25 0144                                    initMatrix@i 00C9  
                                  initMatrix@j 00CB                                         u225_20 029D  
                                       u217_20 0215                                         u233_20 0EAF  
                                       u313_20 0044                                         u305_20 0015  
                                  initMatrix@k 00C8                                         u225_21 029C  
                                       u217_21 0214                                         u233_21 0EAE  
                                       u313_21 0043                                         u305_21 0014  
                                       u241_25 070C                                         u209_25 016F  
                      TMR4_WriteTimer@timerVal 00BB                                         u242_20 0724  
                                       u218_20 0229                                         u250_20 049F  
                                       u226_20 0C32                                         u234_20 0ECA  
                                       u170_20 06C2                                         u314_20 004C  
                                       u306_20 0019                                         u242_21 0723  
                                       u218_21 0228                                         u250_21 049E  
                                       u226_21 0C31                                         u234_21 0EC9  
                                       u170_21 06C1                                         u314_21 004B  
                                       u306_21 0018                                         u242_25 0720  
                                       u171_20 0C96                                         u219_20 0230  
                                       u235_20 0EE4                                         u315_20 0051  
                                       u307_20 0020                                         _FVRCON 0117  
                                       u171_21 0C95                                         u219_21 022F  
                                       u235_21 0EE3                                         u315_21 0050  
                                       u307_21 001F                                         u243_25 072E  
                                       u251_25 04AD                                         u227_25 02E3  
                                       u244_20 073A                                         u236_20 06C9  
                                       u252_20 04B9                                         u164_20 0CDF  
                                       u260_20 0D91                                         u180_20 05CF  
                                       u228_20 0E54                                         u308_20 0025  
                                       u244_21 0739                                         u236_21 06C8  
                                       u252_21 04B8                                         u164_21 0CDE  
                                       u260_21 0D90                                         u180_21 05CE  
                                       u228_21 0E53                                         u308_21 0024  
                                       u172_25 0C9B                                         u245_20 073F  
                                       u237_20 06DA                                         u173_20 0CA6  
                                       u165_20 0CF6                                         u261_20 0FAC  
                                       u181_20 05E2                                         u229_20 0E90  
                                       u309_20 002A                                         u245_21 073E  
                                       u237_21 06D9                                         u173_21 0CA5  
                                       u165_21 0CF5                                         u261_21 0FAB  
                                       u181_21 05E1                                         u229_21 0E8F  
                                       u309_21 0029                                         u253_25 04BD  
                                       u238_20 06F9                                         u190_20 075D  
                                       u254_20 04C7                                         u246_20 045E  
                                       u270_20 0F5A                                         u262_20 0FB1  
                                       u166_20 063C                                         u182_20 05F4  
                                       u238_21 06F8                                         u190_21 075C  
                                       u254_21 04C6                                         u246_21 045D  
                                       u270_21 0F59                                         u262_21 0FB0  
                                       u166_21 063B                                         u182_21 05F3  
                                       u174_25 0BF9                                         u191_20 0773  
                                       u255_20 04CD                                         u247_20 0462  
                                       u271_20 0F5E                                         u263_20 0FB6  
                                       u175_20 0C48                                         u167_20 0654  
                                       u183_20 060B                                         u255_21 04CC  
                                       u247_21 0461                                         u271_21 0F5D  
                                       u263_21 0FB5                                         u175_21 0C47  
                                       u167_21 0653                                         u239_25 06FD  
                                       u191_25 076F                                         u183_25 0607  
                                       u192_20 0786                                         u256_20 04D1  
                                       u248_20 0482                                         u280_20 03EA  
                                       u272_20 0F7A                                         u264_20 0FBA  
                                       u176_20 0AC6                                         u168_20 067B  
                                       u184_20 061F                                         u192_21 0785  
                                       u256_21 04D0                                         u248_21 0481  
                                       u280_21 03E9                                         u272_21 0F79  
                                       u264_21 0FB9                                         u176_21 0AC5  
                                       u168_21 067A                                         u184_21 061E  
                                       u193_20 078D                                         u257_20 04E5  
                                       u281_20 03F1                                         u273_20 0F9C  
                                       u265_20 0FD6                                         u169_20 0694  
                                       u185_20 062C                                         u193_21 078C  
                                       u281_21 03F0                                         u273_21 0F9B  
                                       u265_21 0FD5                                         u169_21 0693  
                                       u257_25 04E1                                         u249_25 0493  
                                       u185_25 0628                                         u258_20 04F4  
                                       u274_20 0FA1                                         u266_20 0FF8  
                                       u186_20 0C6F                                         u258_21 04F3  
                                       u274_21 0FA0                                         u266_21 0FF7  
                                       u186_21 0C6E                                         u194_25 078F  
                                       u195_20 079D                                         u259_20 04F8  
                                       u267_20 0FFD                                         u275_20 0B2A  
                                       u283_20 0B66                                         u179_20 05BD  
                                       u195_21 079C                                         u259_21 04F7  
                                       u267_21 0FFC                                         u275_21 0B29  
                                       u283_21 0B65                                         u179_21 05BC  
                                       u187_25 0C74                                         u196_20 07A4  
                                       u268_20 0F50                                         u276_20 0B39  
                                       u284_20 0B6E                                         u196_21 07A3  
                                       u268_21 0F4F                                         u276_21 0B38  
                                       u284_21 0B6D                                         u188_25 0C79  
                                       u269_20 0F55                                         u189_20 0C83  
                                       u277_20 0AF4                                         u269_21 0F54  
                                       u189_21 0C82                                         u277_21 0AF3  
                                       u197_25 07A6                                         u198_20 07B3  
                                       u278_20 0B01                                         u198_21 07B2  
                                       u278_21 0B00                                         u199_20 07B8  
                                       u279_20 03AA                                         u199_21 07B7  
                                       u279_21 03A9                                         u288_20 0C12  
                                       u288_21 0C11                                         u289_20 0BE3  
                                       u289_21 0BE2                                         _OSCCON 0099  
                                    ??i1_txSpi 0077                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 0502                                _TMR4_StartTimer 0A43  
                            __end_of_SPI1_Open 0F48                                   _CCPTMRS0bits 029E  
                                    ??___aldiv 0078                      i1TMR4_WriteTimer@timerVal 0070  
                                       ___wmul 0C69                                      ??___flmul 0038  
                                    ??___fltol 004E                                      ??_bin2bcd 0020  
                                       _altura 0069                                  ?_matrixUpdate 0070  
                             ?_TMR0_Initialize 0070                                         _memset 0633  
                      __end_of_TMR4_Initialize 0B97                                         _waitRX 006E  
                                       _origem 00BA                                  _CCP4_CallBack 00D0  
                             __end_of_sendInfo 03A3           __end_of_TMR4_DefaultInterruptHandler 0003  
                 _TMR4_DefaultInterruptHandler 0002                                _TMR4_WriteTimer 0A94  
                              ?_WDT_Initialize 0070                       i1SPI1_ExchangeBlock@data 0074  
                     ADC_GetConversion@channel 0073                                      ?_CMP1_ISR 0070  
                        __end_of_TMR0_CallBack 0AFA                                      ?_CMP2_ISR 0070  
     TMR4_SetInterruptHandler@InterruptHandler 00BB       TMR0_SetInterruptHandler@InterruptHandler 00BB  
   IOCBF3_SetInterruptHandler@InterruptHandler 00BB     IOCBF0_SetInterruptHandler@InterruptHandler 00BB  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCBF0_ISR 007B  
                                 ??_IOCBF3_ISR 007B                               ?_PWM3_Initialize 0070  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 002C  
                                 ___xxtofl@exp 002B                              _SYSTEM_Initialize 0D21  
                                 ___xxtofl@val 0026                        __end_of__initialization 006E  
                             ?_CCP4_Initialize 0070                                _CMP1_Initialize 0AD5  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 004A  
                     __end_of_CCP4_SetCallBack 0A6A                                    i1txSpi@data 0077  
                               __pcstackCOMMON 0070                          __end_of_TMR4_CallBack 0B07  
                                 __pidataBANK1 0003                            ??_SYSTEM_Initialize 00BD  
                                    ?_TMR0_ISR 0070                                i1txSpi@dataSize 0075  
                               ??_matrixUpdate 00C3                                      ?_TMR4_ISR 0070  
                         __end_of_isValidFloor 0BAA                              ??_SPI1_Initialize 00BB  
       __end_of_IOCBF0_DefaultInterruptHandler 0A3B                 _IOCBF0_DefaultInterruptHandler 0A3A  
                                __end_of_txSpi 0B61                               ?_TMR2_Initialize 0070  
                           __end_of_IOCBF0_ISR 0B32                             __end_of_IOCBF3_ISR 0B41  
                              _CMP2_Initialize 0AE1                             _spi1_configuration 0807  
                                 bin2bcd@dataU 0025                                 _OPTION_REGbits 0095  
                        TMR0_ISR@CountCallBack 0060                  ?_TMR4_DefaultInterruptHandler 0070  
              ??_EUSART_SetOverrunErrorHandler 00BD         __end_of_IOCBF3_DefaultInterruptHandler 0A3C  
               _IOCBF3_DefaultInterruptHandler 0A3B                                     ??_CMP1_ISR 007B  
                                   ??_CMP2_ISR 007B                                   ?i1_chegadaS1 0070  
                      __end_of_TMR4_StartTimer 0A46                      __end_of_SYSTEM_Initialize 0D4F  
                                      ??_txSpi 00C2                                     __pbssBANK0 005E  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0ACA  
                                   _andarAtual 006A                          _TMR4_InterruptHandler 00CE  
                            __end_of__Umul8_16 0CAB                               ??_FVR_Initialize 00BB  
                                  sendInfo@bcd 0058                                     __pmaintext 0502  
             __end_of_TMR0_SetInterruptHandler 0A8E                                        ?___wmul 0074  
                                   ??_TMR0_ISR 007D                                     ??_TMR4_ISR 0076  
                                   __pintentry 0004                        __end_of_TMR4_WriteTimer 0A9A  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_memset 0070  
                             ?_TMR4_Initialize 0070                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _destinoSub 00B2  
                            _isValidFloor$1566 00BB                                      ?___xxtofl 0026  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                        __end_of_CMP1_Initialize 0AE1  
                     ??_EUSART_SetErrorHandler 00BD                              __end_of_chegadaS1 07FB  
                            __end_of_chegadaS2 0EF0                              __end_of_chegadaS3 0FA4  
                            __end_of_chegadaS4 1000                                        i1_txSpi 0B07  
                                    ?_sendInfo 0070                           _ADC_InterruptHandler 00AC  
                                   _initMatrix 0DF6                                        ___aldiv 06C3  
                      __end_of_CMP2_Initialize 0AED                                        ___flmul 0072  
                                      ___fltol 0753                                        _bin2bcd 05A1  
                                      __ptext1 0DB3                                        __ptext2 0A94  
                                      __ptext3 0B97                                        __ptext4 0DF6  
                                      __ptext5 07C4                                        __ptext6 0C4D  
                                      __ptext7 0B51                                        __ptext8 0CF7  
                                      __ptext9 0A43                                        _destino 00B9  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0AA0  
                                    _T2CONbits 001C                                     ??___xxtofl 0079  
                                    _CMOUTbits 0115                               ___aldiv@dividend 0074  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 00BD  
                                    _IOCBFbits 0396                      ?_TMR4_SetInterruptHandler 00BB  
                 organizaTrajeto@mascaraOrigem 00BD                                      _IOCBNbits 0395  
                                    _IOCBPbits 0394                                        _rxValue 00B6  
                                      _subindo 00DE                                        clrloop0 0A9B  
                             ?_TMR4_StartTimer 0070                  organizaTrajeto@mascaraDestino 00BE  
                         end_of_initialization 006E                           __end_of_matrixUpdate 0C69  
                               initMatrix@data 00C4                 ??_TMR4_DefaultInterruptHandler 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0A7C                  _EUSART_SetOverrunErrorHandler 0A76  
                                      memset@c 0070                                        memset@k 0076  
                                      memset@n 0072                                        memset@s 0079  
                                 _contComandos 00B5                              _EUSART_Initialize 0CAB  
                                   ??_sendInfo 0054                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0A53  
                             ___aldiv@quotient 0022                                      _SPI1_Open 0EF0  
                             ?_TMR4_WriteTimer 0070                            ??_EUSART_Initialize 00BD  
                             ??_WDT_Initialize 00BB                       _TMR0_SetInterruptHandler 0A88  
                          ?_EUSART_is_rx_ready 0070                                  ___xxtofl@sign 002A  
                                    _TRISBbits 008D                   ??_IOCBF0_SetInterruptHandler 00BD  
                 ??_IOCBF3_SetInterruptHandler 00BD                               ?_CMP1_Initialize 0070  
                                 _isValidFloor 0B97                         SPI1_ExchangeBlock@data 00BF  
                                  ___flmul@grs 003E                      __end_of_EUSART_Initialize 0CD0  
                         ??_EUSART_is_rx_ready 00BB                                _SPI1_Initialize 0ACA  
                                    _TXSTAbits 019E              CCP4_DefaultCallBack@capturedValue 0070  
                   __end_of_PWM3_LoadDutyValue 0C01                              ?_CCP4_SetCallBack 00BB  
                                  ?_initMatrix 0070                               ?_CMP2_Initialize 0070  
                                   ?_SPI1_Open 0070                             ??_CCP4_SetCallBack 00BD  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0C88  
                                 _EUSART_Write 0AC0                                 _ADC_Initialize 0AA7  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_memset 06C3  
                          start_initialization 0058                   __end_ofi1_SPI1_ExchangeBlock 0CF7  
                              _velocidadeMotor 00A8                                  ??_EUSART_Read 00BB  
                                    _MatrixLed 00A0                                  bin2bcd@binVal 007A  
               ?_EUSART_SetOverrunErrorHandler 00BB                                 _TMR4_StopTimer 0A40  
                   _EUSART_FramingErrorHandler 00D8                                       ??___wmul 0078  
                       _EUSART_SetErrorHandler 0A6A                         __end_of_ADC_Initialize 0AAF  
                                    __Umul8_16 0C88                                    __pdataBANK1 00DE  
                                     ??_memset 0074                                     memset@dest 0078  
                        CCP4_CaptureISR@module 005C                          TMR4_ISR@CountCallBack 005E  
                                    ___flmul@a 0034                                      ___flmul@b 0030  
                                  __pbssCOMMON 007D                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00BB  
                      __end_of_SPI1_Initialize 0AD5                                       ?i1_txSpi 0075  
                            ??_organizaTrajeto 00BC                              ??_interrupcaoCCP4 0054  
                                    _chegadaS1 07C4                                      _chegadaS2 0E99  
                                    _chegadaS3 0F48                                      _chegadaS4 0FA4  
                          __end_of_EUSART_Read 0B51                          _TMR0_InterruptHandler 00D2  
                                    __pnvBANK1 00CE                         __end_of_TMR4_StopTimer 0A43  
                      _IOCBF3_InterruptHandler 00DA                         _PIN_MANAGER_Initialize 0D4F  
                                     ?___aldiv 0070               __end_of_TMR4_SetInterruptHandler 0A94  
                            ??_CCP4_CaptureISR 007D                                       ?___flmul 0030  
                                     ?___fltol 004A                                       ?_bin2bcd 007A  
                                   ?__Umul8_16 0070                                    ??_SPI1_Open 00BB  
                              ?_ADC_Initialize 0070                              _controleMovimento 0E45  
                                 _matrixUpdate 0C4D                   ??_INTERRUPT_InterruptManager 007D  
                           ?_controleMovimento 0070             __end_of_IOCBF0_SetInterruptHandler 0A82  
                   _IOCBF0_SetInterruptHandler 0A7C             __end_of_IOCBF3_SetInterruptHandler 0A88  
                   _IOCBF3_SetInterruptHandler 0A82                            ??_controleMovimento 0074  
                                     _CMP1_ISR 0A58                                       _CMP2_ISR 0A5E  
                                _TMR0_CallBack 0AED                     __end_of_SPI1_ExchangeBlock 0D21  
                              ___aldiv@divisor 0070                              ??_TMR0_Initialize 00BD  
                                  _destinoDesc 00B1                                ___aldiv@counter 0020  
                               ___wmul@product 0078                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00BB                                       _LATBbits 010D  
                                   ?_chegadaS1 0070                                     ?_chegadaS2 0070  
                                   ?_chegadaS3 0070                                     ?_chegadaS4 0070  
                          __end_of_matrix_conf 0807                                      clear_ram0 0A9A  
                 __end_of_CCP4_DefaultCallBack 0A3A                                       _PIE2bits 0092  
                                     _PIE3bits 0093                              _eusartRxLastError 00B0  
                              ?_TMR4_StopTimer 0070                     ??_TMR0_SetInterruptHandler 00BD  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00BD  
                                     _PIR2bits 0012                           _interrupcaoCCP4$2465 0058  
                                     _PIR3bits 0013                      __end_of_controleMovimento 0E99  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
                         i1_SPI1_ExchangeBlock 0CD0                                       _TMR0_ISR 0C01  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 0BD4  
                                _TMR4_CallBack 0AFA                                       _SSP1STAT 0214  
                            ??_PIN_MANAGER_IOC 007B                              ??_PWM3_Initialize 00BB  
                            ??_TMR1_Initialize 00BB                                     _ADCON0bits 009D  
                               i1_matrixUpdate 0C19                              ___wmul@multiplier 0074  
                            ??_CCP4_Initialize 00BD                                 ?_TMR0_CallBack 0070  
                             initMatrix@i_1605 00CA                                    _EUSART_Read 0B41  
                             ?_SPI1_Initialize 0070                              i1_TMR4_StartTimer 0A3D  
                            ??_TMR2_Initialize 00BB                             ?i1_TMR4_StartTimer 0070  
                            _ADC_GetConversion 0C33                                   ??_initMatrix 00C3  
                        ?i1_SPI1_ExchangeBlock 0070                                 ?_TMR4_CallBack 0070  
                          ??i1_TMR4_StartTimer 0070                        ??_OSCILLATOR_Initialize 00BB  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 00D4  
                           ?_ADC_GetConversion 0070                         __end_ofi1_matrixUpdate 0C33  
                            i1_TMR4_WriteTimer 0A4E                             sendInfo@velocidade 0056  
                     _TMR4_SetInterruptHandler 0A8E                             _PWM3_LoadDutyValue 0BEA  
                          ??_ADC_GetConversion 0072                             ?i1_TMR4_WriteTimer 0070  
                                     ___xxtofl 0457                                       bin2bcd@i 0024  
                                ??i1_chegadaS1 007B                                       __ptext10 0D21  
                                     __ptext11 0A4A                                       __ptext20 0D4F  
                                     __ptext12 0B84                                       __ptext21 0A82  
                                     __ptext13 0A8E                                     _T1GCONbits 0019  
                                     __ptext30 0AD5                                       __ptext22 0A7C  
                                     __ptext14 0AAF                                       __ptext31 0B72  
                                     __ptext23 0AA0                                       __ptext15 0B15  
                                     __ptext40 0002                                       __ptext32 0A64  
                                     __ptext24 0A46                                       __ptext16 0BBF  
                                     __ptext41 0E45                                       __ptext33 0AA7  
                                     __ptext25 0CAB                                       __ptext17 0A88  
                                     __ptext50 0AC0                                       __ptext42 0A40  
                                     __ptext34 0EF0                                       __ptext26 0A76  
                                     __ptext18 0ACA                                       __ptext51 0C33  
                                     __ptext43 0C01                                       __ptext35 0A53  
                                     __ptext27 0A70                                       __ptext19 0AB7  
                                     __ptext60 0FA4                                       __ptext52 0B61  
                                     __ptext44 0AED                                       __ptext36 0B41  
                                     __ptext28 0A6A                                       __ptext61 0A58  
                                     __ptext53 0B32                                       __ptext45 0A3C  
                                     __ptext29 0AE1                                       __ptext70 0A39  
                                     __ptext62 0F48                                       __ptext54 0A3B  
                                     __ptext46 02AD                                       __ptext38 0BD4  
                                     __ptext71 03A3                                       __ptext63 0C19  
                                     __ptext55 0E99                                       __ptext47 05A1  
                                     __ptext39 0AFA                                       __ptext72 0457  
                                     __ptext64 0B07                                       __ptext56 0B23  
                                     __ptext48 0633                                       __ptext73 0753  
                                     __ptext65 0CD0                                       __ptext57 0A3A  
                                     __ptext49 0C69                                       __ptext74 0072  
                                     __ptext66 0A4E                                       __ptext58 0D80  
                          ?_PWM3_LoadDutyValue 0070                                       __ptext75 0C88  
                                     __ptext67 0A3D                                       __ptext59 0A5E  
                                     __ptext76 06C3                                       __ptext68 0BEA  
                                     __ptext69 0BAA                                   _SSP1CON1bits 0215  
                    __end_ofi1_TMR4_StartTimer 0A40                          controleMovimento@cont 007D  
                          ??i1_TMR4_WriteTimer 0070                                    _matrix_conf 07FB  
                           __end_of_initMatrix 0E45                                     _IOCBF0_ISR 0B23  
                                   _IOCBF3_ISR 0B32                              ??_TMR4_Initialize 00BD  
                                  ??_chegadaS1 00C6                                    ??_chegadaS2 007B  
                                  ??_chegadaS3 007B                                    ??_chegadaS4 007B  
         __end_of_TMR0_DefaultInterruptHandler 0A3D                   _TMR0_DefaultInterruptHandler 0A3C  
                    __end_of_ADC_GetConversion 0C4D                                       _sendInfo 02AD  
                      ?_EUSART_SetErrorHandler 00BB                  i1SPI1_ExchangeBlock@blockSize 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 00BB                           ??_PWM3_LoadDutyValue 0072  
                                     int$flags 007E                      __end_ofi1_TMR4_WriteTimer 0A53  
           __end_of_INTERRUPT_InterruptManager 0056                     _INTERRUPT_InterruptManager 0004  
                              ?i1_matrixUpdate 0070          __end_of_EUSART_SetFramingErrorHandler 0A76  
                _EUSART_SetFramingErrorHandler 0A70                                      txSpi@data 00C2  
                  SPI1_ExchangeBlock@blockSize 00BB                               matrixUpdate@data 00C3  
                                   _INTCONbits 000B                                _organizaTrajeto 0DB3  
                         _CCP4_DefaultCallBack 0A39                                ??_TMR0_CallBack 007D  
                                   _FVRCONbits 0117                                _interrupcaoCCP4 03A3  
                                     intlevel1 0000                                _CCP4_CaptureISR 0BAA  
                      ?_PIN_MANAGER_Initialize 0070                            __end_ofi1_chegadaS1 0DB3  
               __end_of_EUSART_SetErrorHandler 0A70                               ??_ADC_Initialize 00BB  
                              ??_TMR4_CallBack 0076                         ??i1_SPI1_ExchangeBlock 0072  
                ?_TMR0_DefaultInterruptHandler 0070  EUSART_SetFramingErrorHandler@interruptHandler 00BB  
                  PWM3_LoadDutyValue@dutyValue 0070                              ??_TMR4_StartTimer 00BB  
                                __pstringtext1 07FB                                  __pstringtext2 0807  
                               _FVR_Initialize 0A46                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                    _temperatura 00AE  
                        ?_CCP4_DefaultCallBack 0070                                _TMR0_Initialize 0BBF  
                                 ___aldiv@sign 0021                    ?_IOCBF0_SetInterruptHandler 00BB  
                  ?_IOCBF3_SetInterruptHandler 00BB                                    ?_IOCBF0_ISR 0070  
                           EUSART_Write@txData 0070                                    ?_IOCBF3_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 0D80                               ??_TMR4_StopTimer 0070  
                            ??_TMR4_WriteTimer 00BB               ??_IOCBF0_DefaultInterruptHandler 0070  
              ?_IOCBF0_DefaultInterruptHandler 0070                                  matrixUpdate@i 00C5  
                              _PIN_MANAGER_IOC 0B61                           __Umul8_16@multiplier 0078  
                              _TMR1_Initialize 0B15                                _PWM3_Initialize 0AB7  
                   __end_of_spi1_configuration 080B                              __Umul8_16@product 0074  
