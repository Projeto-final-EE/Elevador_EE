

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jul 19 16:45:57 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    93                           	dabs	1,0x7E,2
    94  0000                     
    95                           ; Version 2.40
    96                           ; Generated 17/11/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC16F1827 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  0111                     	;# 
   179  0112                     	;# 
   180  0113                     	;# 
   181  0114                     	;# 
   182  0115                     	;# 
   183  0116                     	;# 
   184  0117                     	;# 
   185  0118                     	;# 
   186  0119                     	;# 
   187  011A                     	;# 
   188  011B                     	;# 
   189  011D                     	;# 
   190  011E                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0191                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0193                     	;# 
   197  0193                     	;# 
   198  0193                     	;# 
   199  0194                     	;# 
   200  0195                     	;# 
   201  0196                     	;# 
   202  0199                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019C                     	;# 
   209  019C                     	;# 
   210  019D                     	;# 
   211  019E                     	;# 
   212  019F                     	;# 
   213  020C                     	;# 
   214  020D                     	;# 
   215  0211                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0212                     	;# 
   219  0213                     	;# 
   220  0213                     	;# 
   221  0214                     	;# 
   222  0214                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0216                     	;# 
   227  0216                     	;# 
   228  0217                     	;# 
   229  0217                     	;# 
   230  0219                     	;# 
   231  021A                     	;# 
   232  021B                     	;# 
   233  021C                     	;# 
   234  021D                     	;# 
   235  021E                     	;# 
   236  021F                     	;# 
   237  0291                     	;# 
   238  0291                     	;# 
   239  0292                     	;# 
   240  0293                     	;# 
   241  0294                     	;# 
   242  0295                     	;# 
   243  0295                     	;# 
   244  0296                     	;# 
   245  0298                     	;# 
   246  0298                     	;# 
   247  0299                     	;# 
   248  029A                     	;# 
   249  029B                     	;# 
   250  029C                     	;# 
   251  029C                     	;# 
   252  029D                     	;# 
   253  029E                     	;# 
   254  029E                     	;# 
   255  0311                     	;# 
   256  0311                     	;# 
   257  0312                     	;# 
   258  0313                     	;# 
   259  0318                     	;# 
   260  0318                     	;# 
   261  0319                     	;# 
   262  031A                     	;# 
   263  0394                     	;# 
   264  0395                     	;# 
   265  0396                     	;# 
   266  039A                     	;# 
   267  039C                     	;# 
   268  039D                     	;# 
   269  039E                     	;# 
   270  039F                     	;# 
   271  0415                     	;# 
   272  0416                     	;# 
   273  0417                     	;# 
   274  041C                     	;# 
   275  041D                     	;# 
   276  041E                     	;# 
   277  0FE4                     	;# 
   278  0FE5                     	;# 
   279  0FE6                     	;# 
   280  0FE7                     	;# 
   281  0FE8                     	;# 
   282  0FE9                     	;# 
   283  0FEA                     	;# 
   284  0FEB                     	;# 
   285  0FED                     	;# 
   286  0FEE                     	;# 
   287  0FEF                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  0091                     	;# 
   320  0092                     	;# 
   321  0093                     	;# 
   322  0094                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0098                     	;# 
   327  0099                     	;# 
   328  009A                     	;# 
   329  009B                     	;# 
   330  009B                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  0111                     	;# 
   337  0112                     	;# 
   338  0113                     	;# 
   339  0114                     	;# 
   340  0115                     	;# 
   341  0116                     	;# 
   342  0117                     	;# 
   343  0118                     	;# 
   344  0119                     	;# 
   345  011A                     	;# 
   346  011B                     	;# 
   347  011D                     	;# 
   348  011E                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  0191                     	;# 
   352  0191                     	;# 
   353  0192                     	;# 
   354  0193                     	;# 
   355  0193                     	;# 
   356  0193                     	;# 
   357  0194                     	;# 
   358  0195                     	;# 
   359  0196                     	;# 
   360  0199                     	;# 
   361  019A                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019C                     	;# 
   367  019C                     	;# 
   368  019D                     	;# 
   369  019E                     	;# 
   370  019F                     	;# 
   371  020C                     	;# 
   372  020D                     	;# 
   373  0211                     	;# 
   374  0211                     	;# 
   375  0212                     	;# 
   376  0212                     	;# 
   377  0213                     	;# 
   378  0213                     	;# 
   379  0214                     	;# 
   380  0214                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0216                     	;# 
   385  0216                     	;# 
   386  0217                     	;# 
   387  0217                     	;# 
   388  0219                     	;# 
   389  021A                     	;# 
   390  021B                     	;# 
   391  021C                     	;# 
   392  021D                     	;# 
   393  021E                     	;# 
   394  021F                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0294                     	;# 
   400  0295                     	;# 
   401  0295                     	;# 
   402  0296                     	;# 
   403  0298                     	;# 
   404  0298                     	;# 
   405  0299                     	;# 
   406  029A                     	;# 
   407  029B                     	;# 
   408  029C                     	;# 
   409  029C                     	;# 
   410  029D                     	;# 
   411  029E                     	;# 
   412  029E                     	;# 
   413  0311                     	;# 
   414  0311                     	;# 
   415  0312                     	;# 
   416  0313                     	;# 
   417  0318                     	;# 
   418  0318                     	;# 
   419  0319                     	;# 
   420  031A                     	;# 
   421  0394                     	;# 
   422  0395                     	;# 
   423  0396                     	;# 
   424  039A                     	;# 
   425  039C                     	;# 
   426  039D                     	;# 
   427  039E                     	;# 
   428  039F                     	;# 
   429  0415                     	;# 
   430  0416                     	;# 
   431  0417                     	;# 
   432  041C                     	;# 
   433  041D                     	;# 
   434  041E                     	;# 
   435  0FE4                     	;# 
   436  0FE5                     	;# 
   437  0FE6                     	;# 
   438  0FE7                     	;# 
   439  0FE8                     	;# 
   440  0FE9                     	;# 
   441  0FEA                     	;# 
   442  0FEB                     	;# 
   443  0FED                     	;# 
   444  0FEE                     	;# 
   445  0FEF                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  0011                     	;# 
   461  0012                     	;# 
   462  0013                     	;# 
   463  0014                     	;# 
   464  0015                     	;# 
   465  0016                     	;# 
   466  0016                     	;# 
   467  0017                     	;# 
   468  0018                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001C                     	;# 
   473  001E                     	;# 
   474  001F                     	;# 
   475  008C                     	;# 
   476  008D                     	;# 
   477  0091                     	;# 
   478  0092                     	;# 
   479  0093                     	;# 
   480  0094                     	;# 
   481  0095                     	;# 
   482  0096                     	;# 
   483  0097                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009A                     	;# 
   487  009B                     	;# 
   488  009B                     	;# 
   489  009C                     	;# 
   490  009D                     	;# 
   491  009E                     	;# 
   492  010C                     	;# 
   493  010D                     	;# 
   494  0111                     	;# 
   495  0112                     	;# 
   496  0113                     	;# 
   497  0114                     	;# 
   498  0115                     	;# 
   499  0116                     	;# 
   500  0117                     	;# 
   501  0118                     	;# 
   502  0119                     	;# 
   503  011A                     	;# 
   504  011B                     	;# 
   505  011D                     	;# 
   506  011E                     	;# 
   507  018C                     	;# 
   508  018D                     	;# 
   509  0191                     	;# 
   510  0191                     	;# 
   511  0192                     	;# 
   512  0193                     	;# 
   513  0193                     	;# 
   514  0193                     	;# 
   515  0194                     	;# 
   516  0195                     	;# 
   517  0196                     	;# 
   518  0199                     	;# 
   519  019A                     	;# 
   520  019B                     	;# 
   521  019B                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019C                     	;# 
   525  019C                     	;# 
   526  019D                     	;# 
   527  019E                     	;# 
   528  019F                     	;# 
   529  020C                     	;# 
   530  020D                     	;# 
   531  0211                     	;# 
   532  0211                     	;# 
   533  0212                     	;# 
   534  0212                     	;# 
   535  0213                     	;# 
   536  0213                     	;# 
   537  0214                     	;# 
   538  0214                     	;# 
   539  0215                     	;# 
   540  0215                     	;# 
   541  0215                     	;# 
   542  0216                     	;# 
   543  0216                     	;# 
   544  0217                     	;# 
   545  0217                     	;# 
   546  0219                     	;# 
   547  021A                     	;# 
   548  021B                     	;# 
   549  021C                     	;# 
   550  021D                     	;# 
   551  021E                     	;# 
   552  021F                     	;# 
   553  0291                     	;# 
   554  0291                     	;# 
   555  0292                     	;# 
   556  0293                     	;# 
   557  0294                     	;# 
   558  0295                     	;# 
   559  0295                     	;# 
   560  0296                     	;# 
   561  0298                     	;# 
   562  0298                     	;# 
   563  0299                     	;# 
   564  029A                     	;# 
   565  029B                     	;# 
   566  029C                     	;# 
   567  029C                     	;# 
   568  029D                     	;# 
   569  029E                     	;# 
   570  029E                     	;# 
   571  0311                     	;# 
   572  0311                     	;# 
   573  0312                     	;# 
   574  0313                     	;# 
   575  0318                     	;# 
   576  0318                     	;# 
   577  0319                     	;# 
   578  031A                     	;# 
   579  0394                     	;# 
   580  0395                     	;# 
   581  0396                     	;# 
   582  039A                     	;# 
   583  039C                     	;# 
   584  039D                     	;# 
   585  039E                     	;# 
   586  039F                     	;# 
   587  0415                     	;# 
   588  0416                     	;# 
   589  0417                     	;# 
   590  041C                     	;# 
   591  041D                     	;# 
   592  041E                     	;# 
   593  0FE4                     	;# 
   594  0FE5                     	;# 
   595  0FE6                     	;# 
   596  0FE7                     	;# 
   597  0FE8                     	;# 
   598  0FE9                     	;# 
   599  0FEA                     	;# 
   600  0FEB                     	;# 
   601  0FED                     	;# 
   602  0FEE                     	;# 
   603  0FEF                     	;# 
   604  0000                     	;# 
   605  0001                     	;# 
   606  0002                     	;# 
   607  0003                     	;# 
   608  0004                     	;# 
   609  0005                     	;# 
   610  0006                     	;# 
   611  0007                     	;# 
   612  0008                     	;# 
   613  0009                     	;# 
   614  000A                     	;# 
   615  000B                     	;# 
   616  000C                     	;# 
   617  000D                     	;# 
   618  0011                     	;# 
   619  0012                     	;# 
   620  0013                     	;# 
   621  0014                     	;# 
   622  0015                     	;# 
   623  0016                     	;# 
   624  0016                     	;# 
   625  0017                     	;# 
   626  0018                     	;# 
   627  0019                     	;# 
   628  001A                     	;# 
   629  001B                     	;# 
   630  001C                     	;# 
   631  001E                     	;# 
   632  001F                     	;# 
   633  008C                     	;# 
   634  008D                     	;# 
   635  0091                     	;# 
   636  0092                     	;# 
   637  0093                     	;# 
   638  0094                     	;# 
   639  0095                     	;# 
   640  0096                     	;# 
   641  0097                     	;# 
   642  0098                     	;# 
   643  0099                     	;# 
   644  009A                     	;# 
   645  009B                     	;# 
   646  009B                     	;# 
   647  009C                     	;# 
   648  009D                     	;# 
   649  009E                     	;# 
   650  010C                     	;# 
   651  010D                     	;# 
   652  0111                     	;# 
   653  0112                     	;# 
   654  0113                     	;# 
   655  0114                     	;# 
   656  0115                     	;# 
   657  0116                     	;# 
   658  0117                     	;# 
   659  0118                     	;# 
   660  0119                     	;# 
   661  011A                     	;# 
   662  011B                     	;# 
   663  011D                     	;# 
   664  011E                     	;# 
   665  018C                     	;# 
   666  018D                     	;# 
   667  0191                     	;# 
   668  0191                     	;# 
   669  0192                     	;# 
   670  0193                     	;# 
   671  0193                     	;# 
   672  0193                     	;# 
   673  0194                     	;# 
   674  0195                     	;# 
   675  0196                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019B                     	;# 
   681  019B                     	;# 
   682  019C                     	;# 
   683  019C                     	;# 
   684  019D                     	;# 
   685  019E                     	;# 
   686  019F                     	;# 
   687  020C                     	;# 
   688  020D                     	;# 
   689  0211                     	;# 
   690  0211                     	;# 
   691  0212                     	;# 
   692  0212                     	;# 
   693  0213                     	;# 
   694  0213                     	;# 
   695  0214                     	;# 
   696  0214                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0216                     	;# 
   701  0216                     	;# 
   702  0217                     	;# 
   703  0217                     	;# 
   704  0219                     	;# 
   705  021A                     	;# 
   706  021B                     	;# 
   707  021C                     	;# 
   708  021D                     	;# 
   709  021E                     	;# 
   710  021F                     	;# 
   711  0291                     	;# 
   712  0291                     	;# 
   713  0292                     	;# 
   714  0293                     	;# 
   715  0294                     	;# 
   716  0295                     	;# 
   717  0295                     	;# 
   718  0296                     	;# 
   719  0298                     	;# 
   720  0298                     	;# 
   721  0299                     	;# 
   722  029A                     	;# 
   723  029B                     	;# 
   724  029C                     	;# 
   725  029C                     	;# 
   726  029D                     	;# 
   727  029E                     	;# 
   728  029E                     	;# 
   729  0311                     	;# 
   730  0311                     	;# 
   731  0312                     	;# 
   732  0313                     	;# 
   733  0318                     	;# 
   734  0318                     	;# 
   735  0319                     	;# 
   736  031A                     	;# 
   737  0394                     	;# 
   738  0395                     	;# 
   739  0396                     	;# 
   740  039A                     	;# 
   741  039C                     	;# 
   742  039D                     	;# 
   743  039E                     	;# 
   744  039F                     	;# 
   745  0415                     	;# 
   746  0416                     	;# 
   747  0417                     	;# 
   748  041C                     	;# 
   749  041D                     	;# 
   750  041E                     	;# 
   751  0FE4                     	;# 
   752  0FE5                     	;# 
   753  0FE6                     	;# 
   754  0FE7                     	;# 
   755  0FE8                     	;# 
   756  0FE9                     	;# 
   757  0FEA                     	;# 
   758  0FEB                     	;# 
   759  0FED                     	;# 
   760  0FEE                     	;# 
   761  0FEF                     	;# 
   762  0000                     	;# 
   763  0001                     	;# 
   764  0002                     	;# 
   765  0003                     	;# 
   766  0004                     	;# 
   767  0005                     	;# 
   768  0006                     	;# 
   769  0007                     	;# 
   770  0008                     	;# 
   771  0009                     	;# 
   772  000A                     	;# 
   773  000B                     	;# 
   774  000C                     	;# 
   775  000D                     	;# 
   776  0011                     	;# 
   777  0012                     	;# 
   778  0013                     	;# 
   779  0014                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0016                     	;# 
   783  0017                     	;# 
   784  0018                     	;# 
   785  0019                     	;# 
   786  001A                     	;# 
   787  001B                     	;# 
   788  001C                     	;# 
   789  001E                     	;# 
   790  001F                     	;# 
   791  008C                     	;# 
   792  008D                     	;# 
   793  0091                     	;# 
   794  0092                     	;# 
   795  0093                     	;# 
   796  0094                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0098                     	;# 
   801  0099                     	;# 
   802  009A                     	;# 
   803  009B                     	;# 
   804  009B                     	;# 
   805  009C                     	;# 
   806  009D                     	;# 
   807  009E                     	;# 
   808  010C                     	;# 
   809  010D                     	;# 
   810  0111                     	;# 
   811  0112                     	;# 
   812  0113                     	;# 
   813  0114                     	;# 
   814  0115                     	;# 
   815  0116                     	;# 
   816  0117                     	;# 
   817  0118                     	;# 
   818  0119                     	;# 
   819  011A                     	;# 
   820  011B                     	;# 
   821  011D                     	;# 
   822  011E                     	;# 
   823  018C                     	;# 
   824  018D                     	;# 
   825  0191                     	;# 
   826  0191                     	;# 
   827  0192                     	;# 
   828  0193                     	;# 
   829  0193                     	;# 
   830  0193                     	;# 
   831  0194                     	;# 
   832  0195                     	;# 
   833  0196                     	;# 
   834  0199                     	;# 
   835  019A                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019C                     	;# 
   841  019C                     	;# 
   842  019D                     	;# 
   843  019E                     	;# 
   844  019F                     	;# 
   845  020C                     	;# 
   846  020D                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0213                     	;# 
   853  0214                     	;# 
   854  0214                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0216                     	;# 
   859  0216                     	;# 
   860  0217                     	;# 
   861  0217                     	;# 
   862  0219                     	;# 
   863  021A                     	;# 
   864  021B                     	;# 
   865  021C                     	;# 
   866  021D                     	;# 
   867  021E                     	;# 
   868  021F                     	;# 
   869  0291                     	;# 
   870  0291                     	;# 
   871  0292                     	;# 
   872  0293                     	;# 
   873  0294                     	;# 
   874  0295                     	;# 
   875  0295                     	;# 
   876  0296                     	;# 
   877  0298                     	;# 
   878  0298                     	;# 
   879  0299                     	;# 
   880  029A                     	;# 
   881  029B                     	;# 
   882  029C                     	;# 
   883  029C                     	;# 
   884  029D                     	;# 
   885  029E                     	;# 
   886  029E                     	;# 
   887  0311                     	;# 
   888  0311                     	;# 
   889  0312                     	;# 
   890  0313                     	;# 
   891  0318                     	;# 
   892  0318                     	;# 
   893  0319                     	;# 
   894  031A                     	;# 
   895  0394                     	;# 
   896  0395                     	;# 
   897  0396                     	;# 
   898  039A                     	;# 
   899  039C                     	;# 
   900  039D                     	;# 
   901  039E                     	;# 
   902  039F                     	;# 
   903  0415                     	;# 
   904  0416                     	;# 
   905  0417                     	;# 
   906  041C                     	;# 
   907  041D                     	;# 
   908  041E                     	;# 
   909  0FE4                     	;# 
   910  0FE5                     	;# 
   911  0FE6                     	;# 
   912  0FE7                     	;# 
   913  0FE8                     	;# 
   914  0FE9                     	;# 
   915  0FEA                     	;# 
   916  0FEB                     	;# 
   917  0FED                     	;# 
   918  0FEE                     	;# 
   919  0FEF                     	;# 
   920  0000                     	;# 
   921  0001                     	;# 
   922  0002                     	;# 
   923  0003                     	;# 
   924  0004                     	;# 
   925  0005                     	;# 
   926  0006                     	;# 
   927  0007                     	;# 
   928  0008                     	;# 
   929  0009                     	;# 
   930  000A                     	;# 
   931  000B                     	;# 
   932  000C                     	;# 
   933  000D                     	;# 
   934  0011                     	;# 
   935  0012                     	;# 
   936  0013                     	;# 
   937  0014                     	;# 
   938  0015                     	;# 
   939  0016                     	;# 
   940  0016                     	;# 
   941  0017                     	;# 
   942  0018                     	;# 
   943  0019                     	;# 
   944  001A                     	;# 
   945  001B                     	;# 
   946  001C                     	;# 
   947  001E                     	;# 
   948  001F                     	;# 
   949  008C                     	;# 
   950  008D                     	;# 
   951  0091                     	;# 
   952  0092                     	;# 
   953  0093                     	;# 
   954  0094                     	;# 
   955  0095                     	;# 
   956  0096                     	;# 
   957  0097                     	;# 
   958  0098                     	;# 
   959  0099                     	;# 
   960  009A                     	;# 
   961  009B                     	;# 
   962  009B                     	;# 
   963  009C                     	;# 
   964  009D                     	;# 
   965  009E                     	;# 
   966  010C                     	;# 
   967  010D                     	;# 
   968  0111                     	;# 
   969  0112                     	;# 
   970  0113                     	;# 
   971  0114                     	;# 
   972  0115                     	;# 
   973  0116                     	;# 
   974  0117                     	;# 
   975  0118                     	;# 
   976  0119                     	;# 
   977  011A                     	;# 
   978  011B                     	;# 
   979  011D                     	;# 
   980  011E                     	;# 
   981  018C                     	;# 
   982  018D                     	;# 
   983  0191                     	;# 
   984  0191                     	;# 
   985  0192                     	;# 
   986  0193                     	;# 
   987  0193                     	;# 
   988  0193                     	;# 
   989  0194                     	;# 
   990  0195                     	;# 
   991  0196                     	;# 
   992  0199                     	;# 
   993  019A                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019B                     	;# 
   998  019C                     	;# 
   999  019C                     	;# 
  1000  019D                     	;# 
  1001  019E                     	;# 
  1002  019F                     	;# 
  1003  020C                     	;# 
  1004  020D                     	;# 
  1005  0211                     	;# 
  1006  0211                     	;# 
  1007  0212                     	;# 
  1008  0212                     	;# 
  1009  0213                     	;# 
  1010  0213                     	;# 
  1011  0214                     	;# 
  1012  0214                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0215                     	;# 
  1016  0216                     	;# 
  1017  0216                     	;# 
  1018  0217                     	;# 
  1019  0217                     	;# 
  1020  0219                     	;# 
  1021  021A                     	;# 
  1022  021B                     	;# 
  1023  021C                     	;# 
  1024  021D                     	;# 
  1025  021E                     	;# 
  1026  021F                     	;# 
  1027  0291                     	;# 
  1028  0291                     	;# 
  1029  0292                     	;# 
  1030  0293                     	;# 
  1031  0294                     	;# 
  1032  0295                     	;# 
  1033  0295                     	;# 
  1034  0296                     	;# 
  1035  0298                     	;# 
  1036  0298                     	;# 
  1037  0299                     	;# 
  1038  029A                     	;# 
  1039  029B                     	;# 
  1040  029C                     	;# 
  1041  029C                     	;# 
  1042  029D                     	;# 
  1043  029E                     	;# 
  1044  029E                     	;# 
  1045  0311                     	;# 
  1046  0311                     	;# 
  1047  0312                     	;# 
  1048  0313                     	;# 
  1049  0318                     	;# 
  1050  0318                     	;# 
  1051  0319                     	;# 
  1052  031A                     	;# 
  1053  0394                     	;# 
  1054  0395                     	;# 
  1055  0396                     	;# 
  1056  039A                     	;# 
  1057  039C                     	;# 
  1058  039D                     	;# 
  1059  039E                     	;# 
  1060  039F                     	;# 
  1061  0415                     	;# 
  1062  0416                     	;# 
  1063  0417                     	;# 
  1064  041C                     	;# 
  1065  041D                     	;# 
  1066  041E                     	;# 
  1067  0FE4                     	;# 
  1068  0FE5                     	;# 
  1069  0FE6                     	;# 
  1070  0FE7                     	;# 
  1071  0FE8                     	;# 
  1072  0FE9                     	;# 
  1073  0FEA                     	;# 
  1074  0FEB                     	;# 
  1075  0FED                     	;# 
  1076  0FEE                     	;# 
  1077  0FEF                     	;# 
  1078  0000                     	;# 
  1079  0001                     	;# 
  1080  0002                     	;# 
  1081  0003                     	;# 
  1082  0004                     	;# 
  1083  0005                     	;# 
  1084  0006                     	;# 
  1085  0007                     	;# 
  1086  0008                     	;# 
  1087  0009                     	;# 
  1088  000A                     	;# 
  1089  000B                     	;# 
  1090  000C                     	;# 
  1091  000D                     	;# 
  1092  0011                     	;# 
  1093  0012                     	;# 
  1094  0013                     	;# 
  1095  0014                     	;# 
  1096  0015                     	;# 
  1097  0016                     	;# 
  1098  0016                     	;# 
  1099  0017                     	;# 
  1100  0018                     	;# 
  1101  0019                     	;# 
  1102  001A                     	;# 
  1103  001B                     	;# 
  1104  001C                     	;# 
  1105  001E                     	;# 
  1106  001F                     	;# 
  1107  008C                     	;# 
  1108  008D                     	;# 
  1109  0091                     	;# 
  1110  0092                     	;# 
  1111  0093                     	;# 
  1112  0094                     	;# 
  1113  0095                     	;# 
  1114  0096                     	;# 
  1115  0097                     	;# 
  1116  0098                     	;# 
  1117  0099                     	;# 
  1118  009A                     	;# 
  1119  009B                     	;# 
  1120  009B                     	;# 
  1121  009C                     	;# 
  1122  009D                     	;# 
  1123  009E                     	;# 
  1124  010C                     	;# 
  1125  010D                     	;# 
  1126  0111                     	;# 
  1127  0112                     	;# 
  1128  0113                     	;# 
  1129  0114                     	;# 
  1130  0115                     	;# 
  1131  0116                     	;# 
  1132  0117                     	;# 
  1133  0118                     	;# 
  1134  0119                     	;# 
  1135  011A                     	;# 
  1136  011B                     	;# 
  1137  011D                     	;# 
  1138  011E                     	;# 
  1139  018C                     	;# 
  1140  018D                     	;# 
  1141  0191                     	;# 
  1142  0191                     	;# 
  1143  0192                     	;# 
  1144  0193                     	;# 
  1145  0193                     	;# 
  1146  0193                     	;# 
  1147  0194                     	;# 
  1148  0195                     	;# 
  1149  0196                     	;# 
  1150  0199                     	;# 
  1151  019A                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019C                     	;# 
  1157  019C                     	;# 
  1158  019D                     	;# 
  1159  019E                     	;# 
  1160  019F                     	;# 
  1161  020C                     	;# 
  1162  020D                     	;# 
  1163  0211                     	;# 
  1164  0211                     	;# 
  1165  0212                     	;# 
  1166  0212                     	;# 
  1167  0213                     	;# 
  1168  0213                     	;# 
  1169  0214                     	;# 
  1170  0214                     	;# 
  1171  0215                     	;# 
  1172  0215                     	;# 
  1173  0215                     	;# 
  1174  0216                     	;# 
  1175  0216                     	;# 
  1176  0217                     	;# 
  1177  0217                     	;# 
  1178  0219                     	;# 
  1179  021A                     	;# 
  1180  021B                     	;# 
  1181  021C                     	;# 
  1182  021D                     	;# 
  1183  021E                     	;# 
  1184  021F                     	;# 
  1185  0291                     	;# 
  1186  0291                     	;# 
  1187  0292                     	;# 
  1188  0293                     	;# 
  1189  0294                     	;# 
  1190  0295                     	;# 
  1191  0295                     	;# 
  1192  0296                     	;# 
  1193  0298                     	;# 
  1194  0298                     	;# 
  1195  0299                     	;# 
  1196  029A                     	;# 
  1197  029B                     	;# 
  1198  029C                     	;# 
  1199  029C                     	;# 
  1200  029D                     	;# 
  1201  029E                     	;# 
  1202  029E                     	;# 
  1203  0311                     	;# 
  1204  0311                     	;# 
  1205  0312                     	;# 
  1206  0313                     	;# 
  1207  0318                     	;# 
  1208  0318                     	;# 
  1209  0319                     	;# 
  1210  031A                     	;# 
  1211  0394                     	;# 
  1212  0395                     	;# 
  1213  0396                     	;# 
  1214  039A                     	;# 
  1215  039C                     	;# 
  1216  039D                     	;# 
  1217  039E                     	;# 
  1218  039F                     	;# 
  1219  0415                     	;# 
  1220  0416                     	;# 
  1221  0417                     	;# 
  1222  041C                     	;# 
  1223  041D                     	;# 
  1224  041E                     	;# 
  1225  0FE4                     	;# 
  1226  0FE5                     	;# 
  1227  0FE6                     	;# 
  1228  0FE7                     	;# 
  1229  0FE8                     	;# 
  1230  0FE9                     	;# 
  1231  0FEA                     	;# 
  1232  0FEB                     	;# 
  1233  0FED                     	;# 
  1234  0FEE                     	;# 
  1235  0FEF                     	;# 
  1236  0000                     	;# 
  1237  0001                     	;# 
  1238  0002                     	;# 
  1239  0003                     	;# 
  1240  0004                     	;# 
  1241  0005                     	;# 
  1242  0006                     	;# 
  1243  0007                     	;# 
  1244  0008                     	;# 
  1245  0009                     	;# 
  1246  000A                     	;# 
  1247  000B                     	;# 
  1248  000C                     	;# 
  1249  000D                     	;# 
  1250  0011                     	;# 
  1251  0012                     	;# 
  1252  0013                     	;# 
  1253  0014                     	;# 
  1254  0015                     	;# 
  1255  0016                     	;# 
  1256  0016                     	;# 
  1257  0017                     	;# 
  1258  0018                     	;# 
  1259  0019                     	;# 
  1260  001A                     	;# 
  1261  001B                     	;# 
  1262  001C                     	;# 
  1263  001E                     	;# 
  1264  001F                     	;# 
  1265  008C                     	;# 
  1266  008D                     	;# 
  1267  0091                     	;# 
  1268  0092                     	;# 
  1269  0093                     	;# 
  1270  0094                     	;# 
  1271  0095                     	;# 
  1272  0096                     	;# 
  1273  0097                     	;# 
  1274  0098                     	;# 
  1275  0099                     	;# 
  1276  009A                     	;# 
  1277  009B                     	;# 
  1278  009B                     	;# 
  1279  009C                     	;# 
  1280  009D                     	;# 
  1281  009E                     	;# 
  1282  010C                     	;# 
  1283  010D                     	;# 
  1284  0111                     	;# 
  1285  0112                     	;# 
  1286  0113                     	;# 
  1287  0114                     	;# 
  1288  0115                     	;# 
  1289  0116                     	;# 
  1290  0117                     	;# 
  1291  0118                     	;# 
  1292  0119                     	;# 
  1293  011A                     	;# 
  1294  011B                     	;# 
  1295  011D                     	;# 
  1296  011E                     	;# 
  1297  018C                     	;# 
  1298  018D                     	;# 
  1299  0191                     	;# 
  1300  0191                     	;# 
  1301  0192                     	;# 
  1302  0193                     	;# 
  1303  0193                     	;# 
  1304  0193                     	;# 
  1305  0194                     	;# 
  1306  0195                     	;# 
  1307  0196                     	;# 
  1308  0199                     	;# 
  1309  019A                     	;# 
  1310  019B                     	;# 
  1311  019B                     	;# 
  1312  019B                     	;# 
  1313  019B                     	;# 
  1314  019C                     	;# 
  1315  019C                     	;# 
  1316  019D                     	;# 
  1317  019E                     	;# 
  1318  019F                     	;# 
  1319  020C                     	;# 
  1320  020D                     	;# 
  1321  0211                     	;# 
  1322  0211                     	;# 
  1323  0212                     	;# 
  1324  0212                     	;# 
  1325  0213                     	;# 
  1326  0213                     	;# 
  1327  0214                     	;# 
  1328  0214                     	;# 
  1329  0215                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0216                     	;# 
  1333  0216                     	;# 
  1334  0217                     	;# 
  1335  0217                     	;# 
  1336  0219                     	;# 
  1337  021A                     	;# 
  1338  021B                     	;# 
  1339  021C                     	;# 
  1340  021D                     	;# 
  1341  021E                     	;# 
  1342  021F                     	;# 
  1343  0291                     	;# 
  1344  0291                     	;# 
  1345  0292                     	;# 
  1346  0293                     	;# 
  1347  0294                     	;# 
  1348  0295                     	;# 
  1349  0295                     	;# 
  1350  0296                     	;# 
  1351  0298                     	;# 
  1352  0298                     	;# 
  1353  0299                     	;# 
  1354  029A                     	;# 
  1355  029B                     	;# 
  1356  029C                     	;# 
  1357  029C                     	;# 
  1358  029D                     	;# 
  1359  029E                     	;# 
  1360  029E                     	;# 
  1361  0311                     	;# 
  1362  0311                     	;# 
  1363  0312                     	;# 
  1364  0313                     	;# 
  1365  0318                     	;# 
  1366  0318                     	;# 
  1367  0319                     	;# 
  1368  031A                     	;# 
  1369  0394                     	;# 
  1370  0395                     	;# 
  1371  0396                     	;# 
  1372  039A                     	;# 
  1373  039C                     	;# 
  1374  039D                     	;# 
  1375  039E                     	;# 
  1376  039F                     	;# 
  1377  0415                     	;# 
  1378  0416                     	;# 
  1379  0417                     	;# 
  1380  041C                     	;# 
  1381  041D                     	;# 
  1382  041E                     	;# 
  1383  0FE4                     	;# 
  1384  0FE5                     	;# 
  1385  0FE6                     	;# 
  1386  0FE7                     	;# 
  1387  0FE8                     	;# 
  1388  0FE9                     	;# 
  1389  0FEA                     	;# 
  1390  0FEB                     	;# 
  1391  0FED                     	;# 
  1392  0FEE                     	;# 
  1393  0FEF                     	;# 
  1394  0000                     	;# 
  1395  0001                     	;# 
  1396  0002                     	;# 
  1397  0003                     	;# 
  1398  0004                     	;# 
  1399  0005                     	;# 
  1400  0006                     	;# 
  1401  0007                     	;# 
  1402  0008                     	;# 
  1403  0009                     	;# 
  1404  000A                     	;# 
  1405  000B                     	;# 
  1406  000C                     	;# 
  1407  000D                     	;# 
  1408  0011                     	;# 
  1409  0012                     	;# 
  1410  0013                     	;# 
  1411  0014                     	;# 
  1412  0015                     	;# 
  1413  0016                     	;# 
  1414  0016                     	;# 
  1415  0017                     	;# 
  1416  0018                     	;# 
  1417  0019                     	;# 
  1418  001A                     	;# 
  1419  001B                     	;# 
  1420  001C                     	;# 
  1421  001E                     	;# 
  1422  001F                     	;# 
  1423  008C                     	;# 
  1424  008D                     	;# 
  1425  0091                     	;# 
  1426  0092                     	;# 
  1427  0093                     	;# 
  1428  0094                     	;# 
  1429  0095                     	;# 
  1430  0096                     	;# 
  1431  0097                     	;# 
  1432  0098                     	;# 
  1433  0099                     	;# 
  1434  009A                     	;# 
  1435  009B                     	;# 
  1436  009B                     	;# 
  1437  009C                     	;# 
  1438  009D                     	;# 
  1439  009E                     	;# 
  1440  010C                     	;# 
  1441  010D                     	;# 
  1442  0111                     	;# 
  1443  0112                     	;# 
  1444  0113                     	;# 
  1445  0114                     	;# 
  1446  0115                     	;# 
  1447  0116                     	;# 
  1448  0117                     	;# 
  1449  0118                     	;# 
  1450  0119                     	;# 
  1451  011A                     	;# 
  1452  011B                     	;# 
  1453  011D                     	;# 
  1454  011E                     	;# 
  1455  018C                     	;# 
  1456  018D                     	;# 
  1457  0191                     	;# 
  1458  0191                     	;# 
  1459  0192                     	;# 
  1460  0193                     	;# 
  1461  0193                     	;# 
  1462  0193                     	;# 
  1463  0194                     	;# 
  1464  0195                     	;# 
  1465  0196                     	;# 
  1466  0199                     	;# 
  1467  019A                     	;# 
  1468  019B                     	;# 
  1469  019B                     	;# 
  1470  019B                     	;# 
  1471  019B                     	;# 
  1472  019C                     	;# 
  1473  019C                     	;# 
  1474  019D                     	;# 
  1475  019E                     	;# 
  1476  019F                     	;# 
  1477  020C                     	;# 
  1478  020D                     	;# 
  1479  0211                     	;# 
  1480  0211                     	;# 
  1481  0212                     	;# 
  1482  0212                     	;# 
  1483  0213                     	;# 
  1484  0213                     	;# 
  1485  0214                     	;# 
  1486  0214                     	;# 
  1487  0215                     	;# 
  1488  0215                     	;# 
  1489  0215                     	;# 
  1490  0216                     	;# 
  1491  0216                     	;# 
  1492  0217                     	;# 
  1493  0217                     	;# 
  1494  0219                     	;# 
  1495  021A                     	;# 
  1496  021B                     	;# 
  1497  021C                     	;# 
  1498  021D                     	;# 
  1499  021E                     	;# 
  1500  021F                     	;# 
  1501  0291                     	;# 
  1502  0291                     	;# 
  1503  0292                     	;# 
  1504  0293                     	;# 
  1505  0294                     	;# 
  1506  0295                     	;# 
  1507  0295                     	;# 
  1508  0296                     	;# 
  1509  0298                     	;# 
  1510  0298                     	;# 
  1511  0299                     	;# 
  1512  029A                     	;# 
  1513  029B                     	;# 
  1514  029C                     	;# 
  1515  029C                     	;# 
  1516  029D                     	;# 
  1517  029E                     	;# 
  1518  029E                     	;# 
  1519  0311                     	;# 
  1520  0311                     	;# 
  1521  0312                     	;# 
  1522  0313                     	;# 
  1523  0318                     	;# 
  1524  0318                     	;# 
  1525  0319                     	;# 
  1526  031A                     	;# 
  1527  0394                     	;# 
  1528  0395                     	;# 
  1529  0396                     	;# 
  1530  039A                     	;# 
  1531  039C                     	;# 
  1532  039D                     	;# 
  1533  039E                     	;# 
  1534  039F                     	;# 
  1535  0415                     	;# 
  1536  0416                     	;# 
  1537  0417                     	;# 
  1538  041C                     	;# 
  1539  041D                     	;# 
  1540  041E                     	;# 
  1541  0FE4                     	;# 
  1542  0FE5                     	;# 
  1543  0FE6                     	;# 
  1544  0FE7                     	;# 
  1545  0FE8                     	;# 
  1546  0FE9                     	;# 
  1547  0FEA                     	;# 
  1548  0FEB                     	;# 
  1549  0FED                     	;# 
  1550  0FEE                     	;# 
  1551  0FEF                     	;# 
  1552  0000                     	;# 
  1553  0001                     	;# 
  1554  0002                     	;# 
  1555  0003                     	;# 
  1556  0004                     	;# 
  1557  0005                     	;# 
  1558  0006                     	;# 
  1559  0007                     	;# 
  1560  0008                     	;# 
  1561  0009                     	;# 
  1562  000A                     	;# 
  1563  000B                     	;# 
  1564  000C                     	;# 
  1565  000D                     	;# 
  1566  0011                     	;# 
  1567  0012                     	;# 
  1568  0013                     	;# 
  1569  0014                     	;# 
  1570  0015                     	;# 
  1571  0016                     	;# 
  1572  0016                     	;# 
  1573  0017                     	;# 
  1574  0018                     	;# 
  1575  0019                     	;# 
  1576  001A                     	;# 
  1577  001B                     	;# 
  1578  001C                     	;# 
  1579  001E                     	;# 
  1580  001F                     	;# 
  1581  008C                     	;# 
  1582  008D                     	;# 
  1583  0091                     	;# 
  1584  0092                     	;# 
  1585  0093                     	;# 
  1586  0094                     	;# 
  1587  0095                     	;# 
  1588  0096                     	;# 
  1589  0097                     	;# 
  1590  0098                     	;# 
  1591  0099                     	;# 
  1592  009A                     	;# 
  1593  009B                     	;# 
  1594  009B                     	;# 
  1595  009C                     	;# 
  1596  009D                     	;# 
  1597  009E                     	;# 
  1598  010C                     	;# 
  1599  010D                     	;# 
  1600  0111                     	;# 
  1601  0112                     	;# 
  1602  0113                     	;# 
  1603  0114                     	;# 
  1604  0115                     	;# 
  1605  0116                     	;# 
  1606  0117                     	;# 
  1607  0118                     	;# 
  1608  0119                     	;# 
  1609  011A                     	;# 
  1610  011B                     	;# 
  1611  011D                     	;# 
  1612  011E                     	;# 
  1613  018C                     	;# 
  1614  018D                     	;# 
  1615  0191                     	;# 
  1616  0191                     	;# 
  1617  0192                     	;# 
  1618  0193                     	;# 
  1619  0193                     	;# 
  1620  0193                     	;# 
  1621  0194                     	;# 
  1622  0195                     	;# 
  1623  0196                     	;# 
  1624  0199                     	;# 
  1625  019A                     	;# 
  1626  019B                     	;# 
  1627  019B                     	;# 
  1628  019B                     	;# 
  1629  019B                     	;# 
  1630  019C                     	;# 
  1631  019C                     	;# 
  1632  019D                     	;# 
  1633  019E                     	;# 
  1634  019F                     	;# 
  1635  020C                     	;# 
  1636  020D                     	;# 
  1637  0211                     	;# 
  1638  0211                     	;# 
  1639  0212                     	;# 
  1640  0212                     	;# 
  1641  0213                     	;# 
  1642  0213                     	;# 
  1643  0214                     	;# 
  1644  0214                     	;# 
  1645  0215                     	;# 
  1646  0215                     	;# 
  1647  0215                     	;# 
  1648  0216                     	;# 
  1649  0216                     	;# 
  1650  0217                     	;# 
  1651  0217                     	;# 
  1652  0219                     	;# 
  1653  021A                     	;# 
  1654  021B                     	;# 
  1655  021C                     	;# 
  1656  021D                     	;# 
  1657  021E                     	;# 
  1658  021F                     	;# 
  1659  0291                     	;# 
  1660  0291                     	;# 
  1661  0292                     	;# 
  1662  0293                     	;# 
  1663  0294                     	;# 
  1664  0295                     	;# 
  1665  0295                     	;# 
  1666  0296                     	;# 
  1667  0298                     	;# 
  1668  0298                     	;# 
  1669  0299                     	;# 
  1670  029A                     	;# 
  1671  029B                     	;# 
  1672  029C                     	;# 
  1673  029C                     	;# 
  1674  029D                     	;# 
  1675  029E                     	;# 
  1676  029E                     	;# 
  1677  0311                     	;# 
  1678  0311                     	;# 
  1679  0312                     	;# 
  1680  0313                     	;# 
  1681  0318                     	;# 
  1682  0318                     	;# 
  1683  0319                     	;# 
  1684  031A                     	;# 
  1685  0394                     	;# 
  1686  0395                     	;# 
  1687  0396                     	;# 
  1688  039A                     	;# 
  1689  039C                     	;# 
  1690  039D                     	;# 
  1691  039E                     	;# 
  1692  039F                     	;# 
  1693  0415                     	;# 
  1694  0416                     	;# 
  1695  0417                     	;# 
  1696  041C                     	;# 
  1697  041D                     	;# 
  1698  041E                     	;# 
  1699  0FE4                     	;# 
  1700  0FE5                     	;# 
  1701  0FE6                     	;# 
  1702  0FE7                     	;# 
  1703  0FE8                     	;# 
  1704  0FE9                     	;# 
  1705  0FEA                     	;# 
  1706  0FEB                     	;# 
  1707  0FED                     	;# 
  1708  0FEE                     	;# 
  1709  0FEF                     	;# 
  1710  0000                     	;# 
  1711  0001                     	;# 
  1712  0002                     	;# 
  1713  0003                     	;# 
  1714  0004                     	;# 
  1715  0005                     	;# 
  1716  0006                     	;# 
  1717  0007                     	;# 
  1718  0008                     	;# 
  1719  0009                     	;# 
  1720  000A                     	;# 
  1721  000B                     	;# 
  1722  000C                     	;# 
  1723  000D                     	;# 
  1724  0011                     	;# 
  1725  0012                     	;# 
  1726  0013                     	;# 
  1727  0014                     	;# 
  1728  0015                     	;# 
  1729  0016                     	;# 
  1730  0016                     	;# 
  1731  0017                     	;# 
  1732  0018                     	;# 
  1733  0019                     	;# 
  1734  001A                     	;# 
  1735  001B                     	;# 
  1736  001C                     	;# 
  1737  001E                     	;# 
  1738  001F                     	;# 
  1739  008C                     	;# 
  1740  008D                     	;# 
  1741  0091                     	;# 
  1742  0092                     	;# 
  1743  0093                     	;# 
  1744  0094                     	;# 
  1745  0095                     	;# 
  1746  0096                     	;# 
  1747  0097                     	;# 
  1748  0098                     	;# 
  1749  0099                     	;# 
  1750  009A                     	;# 
  1751  009B                     	;# 
  1752  009B                     	;# 
  1753  009C                     	;# 
  1754  009D                     	;# 
  1755  009E                     	;# 
  1756  010C                     	;# 
  1757  010D                     	;# 
  1758  0111                     	;# 
  1759  0112                     	;# 
  1760  0113                     	;# 
  1761  0114                     	;# 
  1762  0115                     	;# 
  1763  0116                     	;# 
  1764  0117                     	;# 
  1765  0118                     	;# 
  1766  0119                     	;# 
  1767  011A                     	;# 
  1768  011B                     	;# 
  1769  011D                     	;# 
  1770  011E                     	;# 
  1771  018C                     	;# 
  1772  018D                     	;# 
  1773  0191                     	;# 
  1774  0191                     	;# 
  1775  0192                     	;# 
  1776  0193                     	;# 
  1777  0193                     	;# 
  1778  0193                     	;# 
  1779  0194                     	;# 
  1780  0195                     	;# 
  1781  0196                     	;# 
  1782  0199                     	;# 
  1783  019A                     	;# 
  1784  019B                     	;# 
  1785  019B                     	;# 
  1786  019B                     	;# 
  1787  019B                     	;# 
  1788  019C                     	;# 
  1789  019C                     	;# 
  1790  019D                     	;# 
  1791  019E                     	;# 
  1792  019F                     	;# 
  1793  020C                     	;# 
  1794  020D                     	;# 
  1795  0211                     	;# 
  1796  0211                     	;# 
  1797  0212                     	;# 
  1798  0212                     	;# 
  1799  0213                     	;# 
  1800  0213                     	;# 
  1801  0214                     	;# 
  1802  0214                     	;# 
  1803  0215                     	;# 
  1804  0215                     	;# 
  1805  0215                     	;# 
  1806  0216                     	;# 
  1807  0216                     	;# 
  1808  0217                     	;# 
  1809  0217                     	;# 
  1810  0219                     	;# 
  1811  021A                     	;# 
  1812  021B                     	;# 
  1813  021C                     	;# 
  1814  021D                     	;# 
  1815  021E                     	;# 
  1816  021F                     	;# 
  1817  0291                     	;# 
  1818  0291                     	;# 
  1819  0292                     	;# 
  1820  0293                     	;# 
  1821  0294                     	;# 
  1822  0295                     	;# 
  1823  0295                     	;# 
  1824  0296                     	;# 
  1825  0298                     	;# 
  1826  0298                     	;# 
  1827  0299                     	;# 
  1828  029A                     	;# 
  1829  029B                     	;# 
  1830  029C                     	;# 
  1831  029C                     	;# 
  1832  029D                     	;# 
  1833  029E                     	;# 
  1834  029E                     	;# 
  1835  0311                     	;# 
  1836  0311                     	;# 
  1837  0312                     	;# 
  1838  0313                     	;# 
  1839  0318                     	;# 
  1840  0318                     	;# 
  1841  0319                     	;# 
  1842  031A                     	;# 
  1843  0394                     	;# 
  1844  0395                     	;# 
  1845  0396                     	;# 
  1846  039A                     	;# 
  1847  039C                     	;# 
  1848  039D                     	;# 
  1849  039E                     	;# 
  1850  039F                     	;# 
  1851  0415                     	;# 
  1852  0416                     	;# 
  1853  0417                     	;# 
  1854  041C                     	;# 
  1855  041D                     	;# 
  1856  041E                     	;# 
  1857  0FE4                     	;# 
  1858  0FE5                     	;# 
  1859  0FE6                     	;# 
  1860  0FE7                     	;# 
  1861  0FE8                     	;# 
  1862  0FE9                     	;# 
  1863  0FEA                     	;# 
  1864  0FEB                     	;# 
  1865  0FED                     	;# 
  1866  0FEE                     	;# 
  1867  0FEF                     	;# 
  1868  0000                     	;# 
  1869  0001                     	;# 
  1870  0002                     	;# 
  1871  0003                     	;# 
  1872  0004                     	;# 
  1873  0005                     	;# 
  1874  0006                     	;# 
  1875  0007                     	;# 
  1876  0008                     	;# 
  1877  0009                     	;# 
  1878  000A                     	;# 
  1879  000B                     	;# 
  1880  000C                     	;# 
  1881  000D                     	;# 
  1882  0011                     	;# 
  1883  0012                     	;# 
  1884  0013                     	;# 
  1885  0014                     	;# 
  1886  0015                     	;# 
  1887  0016                     	;# 
  1888  0016                     	;# 
  1889  0017                     	;# 
  1890  0018                     	;# 
  1891  0019                     	;# 
  1892  001A                     	;# 
  1893  001B                     	;# 
  1894  001C                     	;# 
  1895  001E                     	;# 
  1896  001F                     	;# 
  1897  008C                     	;# 
  1898  008D                     	;# 
  1899  0091                     	;# 
  1900  0092                     	;# 
  1901  0093                     	;# 
  1902  0094                     	;# 
  1903  0095                     	;# 
  1904  0096                     	;# 
  1905  0097                     	;# 
  1906  0098                     	;# 
  1907  0099                     	;# 
  1908  009A                     	;# 
  1909  009B                     	;# 
  1910  009B                     	;# 
  1911  009C                     	;# 
  1912  009D                     	;# 
  1913  009E                     	;# 
  1914  010C                     	;# 
  1915  010D                     	;# 
  1916  0111                     	;# 
  1917  0112                     	;# 
  1918  0113                     	;# 
  1919  0114                     	;# 
  1920  0115                     	;# 
  1921  0116                     	;# 
  1922  0117                     	;# 
  1923  0118                     	;# 
  1924  0119                     	;# 
  1925  011A                     	;# 
  1926  011B                     	;# 
  1927  011D                     	;# 
  1928  011E                     	;# 
  1929  018C                     	;# 
  1930  018D                     	;# 
  1931  0191                     	;# 
  1932  0191                     	;# 
  1933  0192                     	;# 
  1934  0193                     	;# 
  1935  0193                     	;# 
  1936  0193                     	;# 
  1937  0194                     	;# 
  1938  0195                     	;# 
  1939  0196                     	;# 
  1940  0199                     	;# 
  1941  019A                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019C                     	;# 
  1947  019C                     	;# 
  1948  019D                     	;# 
  1949  019E                     	;# 
  1950  019F                     	;# 
  1951  020C                     	;# 
  1952  020D                     	;# 
  1953  0211                     	;# 
  1954  0211                     	;# 
  1955  0212                     	;# 
  1956  0212                     	;# 
  1957  0213                     	;# 
  1958  0213                     	;# 
  1959  0214                     	;# 
  1960  0214                     	;# 
  1961  0215                     	;# 
  1962  0215                     	;# 
  1963  0215                     	;# 
  1964  0216                     	;# 
  1965  0216                     	;# 
  1966  0217                     	;# 
  1967  0217                     	;# 
  1968  0219                     	;# 
  1969  021A                     	;# 
  1970  021B                     	;# 
  1971  021C                     	;# 
  1972  021D                     	;# 
  1973  021E                     	;# 
  1974  021F                     	;# 
  1975  0291                     	;# 
  1976  0291                     	;# 
  1977  0292                     	;# 
  1978  0293                     	;# 
  1979  0294                     	;# 
  1980  0295                     	;# 
  1981  0295                     	;# 
  1982  0296                     	;# 
  1983  0298                     	;# 
  1984  0298                     	;# 
  1985  0299                     	;# 
  1986  029A                     	;# 
  1987  029B                     	;# 
  1988  029C                     	;# 
  1989  029C                     	;# 
  1990  029D                     	;# 
  1991  029E                     	;# 
  1992  029E                     	;# 
  1993  0311                     	;# 
  1994  0311                     	;# 
  1995  0312                     	;# 
  1996  0313                     	;# 
  1997  0318                     	;# 
  1998  0318                     	;# 
  1999  0319                     	;# 
  2000  031A                     	;# 
  2001  0394                     	;# 
  2002  0395                     	;# 
  2003  0396                     	;# 
  2004  039A                     	;# 
  2005  039C                     	;# 
  2006  039D                     	;# 
  2007  039E                     	;# 
  2008  039F                     	;# 
  2009  0415                     	;# 
  2010  0416                     	;# 
  2011  0417                     	;# 
  2012  041C                     	;# 
  2013  041D                     	;# 
  2014  041E                     	;# 
  2015  0FE4                     	;# 
  2016  0FE5                     	;# 
  2017  0FE6                     	;# 
  2018  0FE7                     	;# 
  2019  0FE8                     	;# 
  2020  0FE9                     	;# 
  2021  0FEA                     	;# 
  2022  0FEB                     	;# 
  2023  0FED                     	;# 
  2024  0FEE                     	;# 
  2025  0FEF                     	;# 
  2026  0000                     	;# 
  2027  0001                     	;# 
  2028  0002                     	;# 
  2029  0003                     	;# 
  2030  0004                     	;# 
  2031  0005                     	;# 
  2032  0006                     	;# 
  2033  0007                     	;# 
  2034  0008                     	;# 
  2035  0009                     	;# 
  2036  000A                     	;# 
  2037  000B                     	;# 
  2038  000C                     	;# 
  2039  000D                     	;# 
  2040  0011                     	;# 
  2041  0012                     	;# 
  2042  0013                     	;# 
  2043  0014                     	;# 
  2044  0015                     	;# 
  2045  0016                     	;# 
  2046  0016                     	;# 
  2047  0017                     	;# 
  2048  0018                     	;# 
  2049  0019                     	;# 
  2050  001A                     	;# 
  2051  001B                     	;# 
  2052  001C                     	;# 
  2053  001E                     	;# 
  2054  001F                     	;# 
  2055  008C                     	;# 
  2056  008D                     	;# 
  2057  0091                     	;# 
  2058  0092                     	;# 
  2059  0093                     	;# 
  2060  0094                     	;# 
  2061  0095                     	;# 
  2062  0096                     	;# 
  2063  0097                     	;# 
  2064  0098                     	;# 
  2065  0099                     	;# 
  2066  009A                     	;# 
  2067  009B                     	;# 
  2068  009B                     	;# 
  2069  009C                     	;# 
  2070  009D                     	;# 
  2071  009E                     	;# 
  2072  010C                     	;# 
  2073  010D                     	;# 
  2074  0111                     	;# 
  2075  0112                     	;# 
  2076  0113                     	;# 
  2077  0114                     	;# 
  2078  0115                     	;# 
  2079  0116                     	;# 
  2080  0117                     	;# 
  2081  0118                     	;# 
  2082  0119                     	;# 
  2083  011A                     	;# 
  2084  011B                     	;# 
  2085  011D                     	;# 
  2086  011E                     	;# 
  2087  018C                     	;# 
  2088  018D                     	;# 
  2089  0191                     	;# 
  2090  0191                     	;# 
  2091  0192                     	;# 
  2092  0193                     	;# 
  2093  0193                     	;# 
  2094  0193                     	;# 
  2095  0194                     	;# 
  2096  0195                     	;# 
  2097  0196                     	;# 
  2098  0199                     	;# 
  2099  019A                     	;# 
  2100  019B                     	;# 
  2101  019B                     	;# 
  2102  019B                     	;# 
  2103  019B                     	;# 
  2104  019C                     	;# 
  2105  019C                     	;# 
  2106  019D                     	;# 
  2107  019E                     	;# 
  2108  019F                     	;# 
  2109  020C                     	;# 
  2110  020D                     	;# 
  2111  0211                     	;# 
  2112  0211                     	;# 
  2113  0212                     	;# 
  2114  0212                     	;# 
  2115  0213                     	;# 
  2116  0213                     	;# 
  2117  0214                     	;# 
  2118  0214                     	;# 
  2119  0215                     	;# 
  2120  0215                     	;# 
  2121  0215                     	;# 
  2122  0216                     	;# 
  2123  0216                     	;# 
  2124  0217                     	;# 
  2125  0217                     	;# 
  2126  0219                     	;# 
  2127  021A                     	;# 
  2128  021B                     	;# 
  2129  021C                     	;# 
  2130  021D                     	;# 
  2131  021E                     	;# 
  2132  021F                     	;# 
  2133  0291                     	;# 
  2134  0291                     	;# 
  2135  0292                     	;# 
  2136  0293                     	;# 
  2137  0294                     	;# 
  2138  0295                     	;# 
  2139  0295                     	;# 
  2140  0296                     	;# 
  2141  0298                     	;# 
  2142  0298                     	;# 
  2143  0299                     	;# 
  2144  029A                     	;# 
  2145  029B                     	;# 
  2146  029C                     	;# 
  2147  029C                     	;# 
  2148  029D                     	;# 
  2149  029E                     	;# 
  2150  029E                     	;# 
  2151  0311                     	;# 
  2152  0311                     	;# 
  2153  0312                     	;# 
  2154  0313                     	;# 
  2155  0318                     	;# 
  2156  0318                     	;# 
  2157  0319                     	;# 
  2158  031A                     	;# 
  2159  0394                     	;# 
  2160  0395                     	;# 
  2161  0396                     	;# 
  2162  039A                     	;# 
  2163  039C                     	;# 
  2164  039D                     	;# 
  2165  039E                     	;# 
  2166  039F                     	;# 
  2167  0415                     	;# 
  2168  0416                     	;# 
  2169  0417                     	;# 
  2170  041C                     	;# 
  2171  041D                     	;# 
  2172  041E                     	;# 
  2173  0FE4                     	;# 
  2174  0FE5                     	;# 
  2175  0FE6                     	;# 
  2176  0FE7                     	;# 
  2177  0FE8                     	;# 
  2178  0FE9                     	;# 
  2179  0FEA                     	;# 
  2180  0FEB                     	;# 
  2181  0FED                     	;# 
  2182  0FEE                     	;# 
  2183  0FEF                     	;# 
  2184  0000                     	;# 
  2185  0001                     	;# 
  2186  0002                     	;# 
  2187  0003                     	;# 
  2188  0004                     	;# 
  2189  0005                     	;# 
  2190  0006                     	;# 
  2191  0007                     	;# 
  2192  0008                     	;# 
  2193  0009                     	;# 
  2194  000A                     	;# 
  2195  000B                     	;# 
  2196  000C                     	;# 
  2197  000D                     	;# 
  2198  0011                     	;# 
  2199  0012                     	;# 
  2200  0013                     	;# 
  2201  0014                     	;# 
  2202  0015                     	;# 
  2203  0016                     	;# 
  2204  0016                     	;# 
  2205  0017                     	;# 
  2206  0018                     	;# 
  2207  0019                     	;# 
  2208  001A                     	;# 
  2209  001B                     	;# 
  2210  001C                     	;# 
  2211  001E                     	;# 
  2212  001F                     	;# 
  2213  008C                     	;# 
  2214  008D                     	;# 
  2215  0091                     	;# 
  2216  0092                     	;# 
  2217  0093                     	;# 
  2218  0094                     	;# 
  2219  0095                     	;# 
  2220  0096                     	;# 
  2221  0097                     	;# 
  2222  0098                     	;# 
  2223  0099                     	;# 
  2224  009A                     	;# 
  2225  009B                     	;# 
  2226  009B                     	;# 
  2227  009C                     	;# 
  2228  009D                     	;# 
  2229  009E                     	;# 
  2230  010C                     	;# 
  2231  010D                     	;# 
  2232  0111                     	;# 
  2233  0112                     	;# 
  2234  0113                     	;# 
  2235  0114                     	;# 
  2236  0115                     	;# 
  2237  0116                     	;# 
  2238  0117                     	;# 
  2239  0118                     	;# 
  2240  0119                     	;# 
  2241  011A                     	;# 
  2242  011B                     	;# 
  2243  011D                     	;# 
  2244  011E                     	;# 
  2245  018C                     	;# 
  2246  018D                     	;# 
  2247  0191                     	;# 
  2248  0191                     	;# 
  2249  0192                     	;# 
  2250  0193                     	;# 
  2251  0193                     	;# 
  2252  0193                     	;# 
  2253  0194                     	;# 
  2254  0195                     	;# 
  2255  0196                     	;# 
  2256  0199                     	;# 
  2257  019A                     	;# 
  2258  019B                     	;# 
  2259  019B                     	;# 
  2260  019B                     	;# 
  2261  019B                     	;# 
  2262  019C                     	;# 
  2263  019C                     	;# 
  2264  019D                     	;# 
  2265  019E                     	;# 
  2266  019F                     	;# 
  2267  020C                     	;# 
  2268  020D                     	;# 
  2269  0211                     	;# 
  2270  0211                     	;# 
  2271  0212                     	;# 
  2272  0212                     	;# 
  2273  0213                     	;# 
  2274  0213                     	;# 
  2275  0214                     	;# 
  2276  0214                     	;# 
  2277  0215                     	;# 
  2278  0215                     	;# 
  2279  0215                     	;# 
  2280  0216                     	;# 
  2281  0216                     	;# 
  2282  0217                     	;# 
  2283  0217                     	;# 
  2284  0219                     	;# 
  2285  021A                     	;# 
  2286  021B                     	;# 
  2287  021C                     	;# 
  2288  021D                     	;# 
  2289  021E                     	;# 
  2290  021F                     	;# 
  2291  0291                     	;# 
  2292  0291                     	;# 
  2293  0292                     	;# 
  2294  0293                     	;# 
  2295  0294                     	;# 
  2296  0295                     	;# 
  2297  0295                     	;# 
  2298  0296                     	;# 
  2299  0298                     	;# 
  2300  0298                     	;# 
  2301  0299                     	;# 
  2302  029A                     	;# 
  2303  029B                     	;# 
  2304  029C                     	;# 
  2305  029C                     	;# 
  2306  029D                     	;# 
  2307  029E                     	;# 
  2308  029E                     	;# 
  2309  0311                     	;# 
  2310  0311                     	;# 
  2311  0312                     	;# 
  2312  0313                     	;# 
  2313  0318                     	;# 
  2314  0318                     	;# 
  2315  0319                     	;# 
  2316  031A                     	;# 
  2317  0394                     	;# 
  2318  0395                     	;# 
  2319  0396                     	;# 
  2320  039A                     	;# 
  2321  039C                     	;# 
  2322  039D                     	;# 
  2323  039E                     	;# 
  2324  039F                     	;# 
  2325  0415                     	;# 
  2326  0416                     	;# 
  2327  0417                     	;# 
  2328  041C                     	;# 
  2329  041D                     	;# 
  2330  041E                     	;# 
  2331  0FE4                     	;# 
  2332  0FE5                     	;# 
  2333  0FE6                     	;# 
  2334  0FE7                     	;# 
  2335  0FE8                     	;# 
  2336  0FE9                     	;# 
  2337  0FEA                     	;# 
  2338  0FEB                     	;# 
  2339  0FED                     	;# 
  2340  0FEE                     	;# 
  2341  0FEF                     	;# 
  2342  0000                     	;# 
  2343  0001                     	;# 
  2344  0002                     	;# 
  2345  0003                     	;# 
  2346  0004                     	;# 
  2347  0005                     	;# 
  2348  0006                     	;# 
  2349  0007                     	;# 
  2350  0008                     	;# 
  2351  0009                     	;# 
  2352  000A                     	;# 
  2353  000B                     	;# 
  2354  000C                     	;# 
  2355  000D                     	;# 
  2356  0011                     	;# 
  2357  0012                     	;# 
  2358  0013                     	;# 
  2359  0014                     	;# 
  2360  0015                     	;# 
  2361  0016                     	;# 
  2362  0016                     	;# 
  2363  0017                     	;# 
  2364  0018                     	;# 
  2365  0019                     	;# 
  2366  001A                     	;# 
  2367  001B                     	;# 
  2368  001C                     	;# 
  2369  001E                     	;# 
  2370  001F                     	;# 
  2371  008C                     	;# 
  2372  008D                     	;# 
  2373  0091                     	;# 
  2374  0092                     	;# 
  2375  0093                     	;# 
  2376  0094                     	;# 
  2377  0095                     	;# 
  2378  0096                     	;# 
  2379  0097                     	;# 
  2380  0098                     	;# 
  2381  0099                     	;# 
  2382  009A                     	;# 
  2383  009B                     	;# 
  2384  009B                     	;# 
  2385  009C                     	;# 
  2386  009D                     	;# 
  2387  009E                     	;# 
  2388  010C                     	;# 
  2389  010D                     	;# 
  2390  0111                     	;# 
  2391  0112                     	;# 
  2392  0113                     	;# 
  2393  0114                     	;# 
  2394  0115                     	;# 
  2395  0116                     	;# 
  2396  0117                     	;# 
  2397  0118                     	;# 
  2398  0119                     	;# 
  2399  011A                     	;# 
  2400  011B                     	;# 
  2401  011D                     	;# 
  2402  011E                     	;# 
  2403  018C                     	;# 
  2404  018D                     	;# 
  2405  0191                     	;# 
  2406  0191                     	;# 
  2407  0192                     	;# 
  2408  0193                     	;# 
  2409  0193                     	;# 
  2410  0193                     	;# 
  2411  0194                     	;# 
  2412  0195                     	;# 
  2413  0196                     	;# 
  2414  0199                     	;# 
  2415  019A                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019B                     	;# 
  2420  019C                     	;# 
  2421  019C                     	;# 
  2422  019D                     	;# 
  2423  019E                     	;# 
  2424  019F                     	;# 
  2425  020C                     	;# 
  2426  020D                     	;# 
  2427  0211                     	;# 
  2428  0211                     	;# 
  2429  0212                     	;# 
  2430  0212                     	;# 
  2431  0213                     	;# 
  2432  0213                     	;# 
  2433  0214                     	;# 
  2434  0214                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0215                     	;# 
  2438  0216                     	;# 
  2439  0216                     	;# 
  2440  0217                     	;# 
  2441  0217                     	;# 
  2442  0219                     	;# 
  2443  021A                     	;# 
  2444  021B                     	;# 
  2445  021C                     	;# 
  2446  021D                     	;# 
  2447  021E                     	;# 
  2448  021F                     	;# 
  2449  0291                     	;# 
  2450  0291                     	;# 
  2451  0292                     	;# 
  2452  0293                     	;# 
  2453  0294                     	;# 
  2454  0295                     	;# 
  2455  0295                     	;# 
  2456  0296                     	;# 
  2457  0298                     	;# 
  2458  0298                     	;# 
  2459  0299                     	;# 
  2460  029A                     	;# 
  2461  029B                     	;# 
  2462  029C                     	;# 
  2463  029C                     	;# 
  2464  029D                     	;# 
  2465  029E                     	;# 
  2466  029E                     	;# 
  2467  0311                     	;# 
  2468  0311                     	;# 
  2469  0312                     	;# 
  2470  0313                     	;# 
  2471  0318                     	;# 
  2472  0318                     	;# 
  2473  0319                     	;# 
  2474  031A                     	;# 
  2475  0394                     	;# 
  2476  0395                     	;# 
  2477  0396                     	;# 
  2478  039A                     	;# 
  2479  039C                     	;# 
  2480  039D                     	;# 
  2481  039E                     	;# 
  2482  039F                     	;# 
  2483  0415                     	;# 
  2484  0416                     	;# 
  2485  0417                     	;# 
  2486  041C                     	;# 
  2487  041D                     	;# 
  2488  041E                     	;# 
  2489  0FE4                     	;# 
  2490  0FE5                     	;# 
  2491  0FE6                     	;# 
  2492  0FE7                     	;# 
  2493  0FE8                     	;# 
  2494  0FE9                     	;# 
  2495  0FEA                     	;# 
  2496  0FEB                     	;# 
  2497  0FED                     	;# 
  2498  0FEE                     	;# 
  2499  0FEF                     	;# 
  2500  0000                     	;# 
  2501  0001                     	;# 
  2502  0002                     	;# 
  2503  0003                     	;# 
  2504  0004                     	;# 
  2505  0005                     	;# 
  2506  0006                     	;# 
  2507  0007                     	;# 
  2508  0008                     	;# 
  2509  0009                     	;# 
  2510  000A                     	;# 
  2511  000B                     	;# 
  2512  000C                     	;# 
  2513  000D                     	;# 
  2514  0011                     	;# 
  2515  0012                     	;# 
  2516  0013                     	;# 
  2517  0014                     	;# 
  2518  0015                     	;# 
  2519  0016                     	;# 
  2520  0016                     	;# 
  2521  0017                     	;# 
  2522  0018                     	;# 
  2523  0019                     	;# 
  2524  001A                     	;# 
  2525  001B                     	;# 
  2526  001C                     	;# 
  2527  001E                     	;# 
  2528  001F                     	;# 
  2529  008C                     	;# 
  2530  008D                     	;# 
  2531  0091                     	;# 
  2532  0092                     	;# 
  2533  0093                     	;# 
  2534  0094                     	;# 
  2535  0095                     	;# 
  2536  0096                     	;# 
  2537  0097                     	;# 
  2538  0098                     	;# 
  2539  0099                     	;# 
  2540  009A                     	;# 
  2541  009B                     	;# 
  2542  009B                     	;# 
  2543  009C                     	;# 
  2544  009D                     	;# 
  2545  009E                     	;# 
  2546  010C                     	;# 
  2547  010D                     	;# 
  2548  0111                     	;# 
  2549  0112                     	;# 
  2550  0113                     	;# 
  2551  0114                     	;# 
  2552  0115                     	;# 
  2553  0116                     	;# 
  2554  0117                     	;# 
  2555  0118                     	;# 
  2556  0119                     	;# 
  2557  011A                     	;# 
  2558  011B                     	;# 
  2559  011D                     	;# 
  2560  011E                     	;# 
  2561  018C                     	;# 
  2562  018D                     	;# 
  2563  0191                     	;# 
  2564  0191                     	;# 
  2565  0192                     	;# 
  2566  0193                     	;# 
  2567  0193                     	;# 
  2568  0193                     	;# 
  2569  0194                     	;# 
  2570  0195                     	;# 
  2571  0196                     	;# 
  2572  0199                     	;# 
  2573  019A                     	;# 
  2574  019B                     	;# 
  2575  019B                     	;# 
  2576  019B                     	;# 
  2577  019B                     	;# 
  2578  019C                     	;# 
  2579  019C                     	;# 
  2580  019D                     	;# 
  2581  019E                     	;# 
  2582  019F                     	;# 
  2583  020C                     	;# 
  2584  020D                     	;# 
  2585  0211                     	;# 
  2586  0211                     	;# 
  2587  0212                     	;# 
  2588  0212                     	;# 
  2589  0213                     	;# 
  2590  0213                     	;# 
  2591  0214                     	;# 
  2592  0214                     	;# 
  2593  0215                     	;# 
  2594  0215                     	;# 
  2595  0215                     	;# 
  2596  0216                     	;# 
  2597  0216                     	;# 
  2598  0217                     	;# 
  2599  0217                     	;# 
  2600  0219                     	;# 
  2601  021A                     	;# 
  2602  021B                     	;# 
  2603  021C                     	;# 
  2604  021D                     	;# 
  2605  021E                     	;# 
  2606  021F                     	;# 
  2607  0291                     	;# 
  2608  0291                     	;# 
  2609  0292                     	;# 
  2610  0293                     	;# 
  2611  0294                     	;# 
  2612  0295                     	;# 
  2613  0295                     	;# 
  2614  0296                     	;# 
  2615  0298                     	;# 
  2616  0298                     	;# 
  2617  0299                     	;# 
  2618  029A                     	;# 
  2619  029B                     	;# 
  2620  029C                     	;# 
  2621  029C                     	;# 
  2622  029D                     	;# 
  2623  029E                     	;# 
  2624  029E                     	;# 
  2625  0311                     	;# 
  2626  0311                     	;# 
  2627  0312                     	;# 
  2628  0313                     	;# 
  2629  0318                     	;# 
  2630  0318                     	;# 
  2631  0319                     	;# 
  2632  031A                     	;# 
  2633  0394                     	;# 
  2634  0395                     	;# 
  2635  0396                     	;# 
  2636  039A                     	;# 
  2637  039C                     	;# 
  2638  039D                     	;# 
  2639  039E                     	;# 
  2640  039F                     	;# 
  2641  0415                     	;# 
  2642  0416                     	;# 
  2643  0417                     	;# 
  2644  041C                     	;# 
  2645  041D                     	;# 
  2646  041E                     	;# 
  2647  0FE4                     	;# 
  2648  0FE5                     	;# 
  2649  0FE6                     	;# 
  2650  0FE7                     	;# 
  2651  0FE8                     	;# 
  2652  0FE9                     	;# 
  2653  0FEA                     	;# 
  2654  0FEB                     	;# 
  2655  0FED                     	;# 
  2656  0FEE                     	;# 
  2657  0FEF                     	;# 
  2658  0000                     	;# 
  2659  0001                     	;# 
  2660  0002                     	;# 
  2661  0003                     	;# 
  2662  0004                     	;# 
  2663  0005                     	;# 
  2664  0006                     	;# 
  2665  0007                     	;# 
  2666  0008                     	;# 
  2667  0009                     	;# 
  2668  000A                     	;# 
  2669  000B                     	;# 
  2670  000C                     	;# 
  2671  000D                     	;# 
  2672  0011                     	;# 
  2673  0012                     	;# 
  2674  0013                     	;# 
  2675  0014                     	;# 
  2676  0015                     	;# 
  2677  0016                     	;# 
  2678  0016                     	;# 
  2679  0017                     	;# 
  2680  0018                     	;# 
  2681  0019                     	;# 
  2682  001A                     	;# 
  2683  001B                     	;# 
  2684  001C                     	;# 
  2685  001E                     	;# 
  2686  001F                     	;# 
  2687  008C                     	;# 
  2688  008D                     	;# 
  2689  0091                     	;# 
  2690  0092                     	;# 
  2691  0093                     	;# 
  2692  0094                     	;# 
  2693  0095                     	;# 
  2694  0096                     	;# 
  2695  0097                     	;# 
  2696  0098                     	;# 
  2697  0099                     	;# 
  2698  009A                     	;# 
  2699  009B                     	;# 
  2700  009B                     	;# 
  2701  009C                     	;# 
  2702  009D                     	;# 
  2703  009E                     	;# 
  2704  010C                     	;# 
  2705  010D                     	;# 
  2706  0111                     	;# 
  2707  0112                     	;# 
  2708  0113                     	;# 
  2709  0114                     	;# 
  2710  0115                     	;# 
  2711  0116                     	;# 
  2712  0117                     	;# 
  2713  0118                     	;# 
  2714  0119                     	;# 
  2715  011A                     	;# 
  2716  011B                     	;# 
  2717  011D                     	;# 
  2718  011E                     	;# 
  2719  018C                     	;# 
  2720  018D                     	;# 
  2721  0191                     	;# 
  2722  0191                     	;# 
  2723  0192                     	;# 
  2724  0193                     	;# 
  2725  0193                     	;# 
  2726  0193                     	;# 
  2727  0194                     	;# 
  2728  0195                     	;# 
  2729  0196                     	;# 
  2730  0199                     	;# 
  2731  019A                     	;# 
  2732  019B                     	;# 
  2733  019B                     	;# 
  2734  019B                     	;# 
  2735  019B                     	;# 
  2736  019C                     	;# 
  2737  019C                     	;# 
  2738  019D                     	;# 
  2739  019E                     	;# 
  2740  019F                     	;# 
  2741  020C                     	;# 
  2742  020D                     	;# 
  2743  0211                     	;# 
  2744  0211                     	;# 
  2745  0212                     	;# 
  2746  0212                     	;# 
  2747  0213                     	;# 
  2748  0213                     	;# 
  2749  0214                     	;# 
  2750  0214                     	;# 
  2751  0215                     	;# 
  2752  0215                     	;# 
  2753  0215                     	;# 
  2754  0216                     	;# 
  2755  0216                     	;# 
  2756  0217                     	;# 
  2757  0217                     	;# 
  2758  0219                     	;# 
  2759  021A                     	;# 
  2760  021B                     	;# 
  2761  021C                     	;# 
  2762  021D                     	;# 
  2763  021E                     	;# 
  2764  021F                     	;# 
  2765  0291                     	;# 
  2766  0291                     	;# 
  2767  0292                     	;# 
  2768  0293                     	;# 
  2769  0294                     	;# 
  2770  0295                     	;# 
  2771  0295                     	;# 
  2772  0296                     	;# 
  2773  0298                     	;# 
  2774  0298                     	;# 
  2775  0299                     	;# 
  2776  029A                     	;# 
  2777  029B                     	;# 
  2778  029C                     	;# 
  2779  029C                     	;# 
  2780  029D                     	;# 
  2781  029E                     	;# 
  2782  029E                     	;# 
  2783  0311                     	;# 
  2784  0311                     	;# 
  2785  0312                     	;# 
  2786  0313                     	;# 
  2787  0318                     	;# 
  2788  0318                     	;# 
  2789  0319                     	;# 
  2790  031A                     	;# 
  2791  0394                     	;# 
  2792  0395                     	;# 
  2793  0396                     	;# 
  2794  039A                     	;# 
  2795  039C                     	;# 
  2796  039D                     	;# 
  2797  039E                     	;# 
  2798  039F                     	;# 
  2799  0415                     	;# 
  2800  0416                     	;# 
  2801  0417                     	;# 
  2802  041C                     	;# 
  2803  041D                     	;# 
  2804  041E                     	;# 
  2805  0FE4                     	;# 
  2806  0FE5                     	;# 
  2807  0FE6                     	;# 
  2808  0FE7                     	;# 
  2809  0FE8                     	;# 
  2810  0FE9                     	;# 
  2811  0FEA                     	;# 
  2812  0FEB                     	;# 
  2813  0FED                     	;# 
  2814  0FEE                     	;# 
  2815  0FEF                     	;# 
  2816                           
  2817 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2818  0000                     
  2819 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2820  0000                     
  2821 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2822  0000                     
  2823                           	psect	idataBANK1
  2824  0003                     __pidataBANK1:
  2825                           
  2826                           ;initializer for _subindo
  2827  0003  3401               	retlw	1
  2828                           
  2829                           	psect	stringtext1
  2830  07FD                     __pstringtext1:
  2831  07FD                     _matrix_conf:
  2832  07FD  3409               	retlw	9
  2833  07FE  3400               	retlw	0
  2834  07FF  340A               	retlw	10
  2835  0800  3400               	retlw	0
  2836  0801  340B               	retlw	11
  2837  0802  3407               	retlw	7
  2838  0803  340C               	retlw	12
  2839  0804  3401               	retlw	1
  2840  0805  340F               	retlw	15
  2841  0806  3401               	retlw	1
  2842  0807  340F               	retlw	15
  2843  0808  3400               	retlw	0
  2844  0809                     __end_of_matrix_conf:
  2845                           
  2846                           	psect	stringtext2
  2847  0809                     __pstringtext2:
  2848  0809                     _spi1_configuration:
  2849  0809  3400               	retlw	0
  2850  080A  3440               	retlw	64
  2851  080B  3401               	retlw	1
  2852  080C  3400               	retlw	0
  2853  080D                     __end_of_spi1_configuration:
  2854                           
  2855                           	psect	nvBANK0
  2856  005E                     __pnvBANK0:
  2857  005E                     _TMR4_InterruptHandler:
  2858  005E                     	ds	2
  2859  0060                     _CCP4_CallBack:
  2860  0060                     	ds	2
  2861  0062                     _TMR0_InterruptHandler:
  2862  0062                     	ds	2
  2863  0064                     _timer1ReloadVal:
  2864  0064                     	ds	2
  2865  0066                     _IOCBF3_InterruptHandler:
  2866  0066                     	ds	2
  2867  0068                     _IOCBF0_InterruptHandler:
  2868  0068                     	ds	2
  2869  006A                     _timer0ReloadVal:
  2870  006A                     	ds	1
  2871                           
  2872                           	psect	nvBANK1
  2873  00C5                     __pnvBANK1:
  2874  00C5                     _EUSART_ErrorHandler:
  2875  00C5                     	ds	2
  2876  00C7                     _EUSART_OverrunErrorHandler:
  2877  00C7                     	ds	2
  2878  00C9                     _EUSART_FramingErrorHandler:
  2879  00C9                     	ds	2
  2880  0015                     _TMR0	set	21
  2881  001C                     _T2CONbits	set	28
  2882  001C                     _T2CON	set	28
  2883  001A                     _TMR2	set	26
  2884  001B                     _PR2	set	27
  2885  0019                     _T1GCONbits	set	25
  2886  0018                     _T1CONbits	set	24
  2887  0018                     _T1CON	set	24
  2888  0016                     _TMR1L	set	22
  2889  0017                     _TMR1H	set	23
  2890  0019                     _T1GCON	set	25
  2891  0013                     _PIR3bits	set	19
  2892  0011                     _PIR1bits	set	17
  2893  000B                     _INTCONbits	set	11
  2894  0012                     _PIR2bits	set	18
  2895  0095                     _OPTION_REG	set	149
  2896  0093                     _PIE3bits	set	147
  2897  008D                     _TRISBbits	set	141
  2898  009D                     _ADCON0bits	set	157
  2899  009D                     _ADCON0	set	157
  2900  009C                     _ADRESH	set	156
  2901  009B                     _ADRESL	set	155
  2902  009E                     _ADCON1	set	158
  2903  0097                     _WDTCON	set	151
  2904  0098                     _OSCTUNE	set	152
  2905  0099                     _OSCCON	set	153
  2906  0095                     _OPTION_REGbits	set	149
  2907  008D                     _TRISB	set	141
  2908  008C                     _TRISA	set	140
  2909  0092                     _PIE2bits	set	146
  2910  010C                     _LATAbits	set	268
  2911  010D                     _LATBbits	set	269
  2912  0117                     _FVRCONbits	set	279
  2913  0117                     _FVRCON	set	279
  2914  0116                     _BORCON	set	278
  2915  011E                     _APFCON1	set	286
  2916  011D                     _APFCON0	set	285
  2917  010D                     _LATB	set	269
  2918  010C                     _LATA	set	268
  2919  0112                     _CM1CON1	set	274
  2920  0111                     _CM1CON0	set	273
  2921  0115                     _CMOUTbits	set	277
  2922  0114                     _CM2CON1	set	276
  2923  0113                     _CM2CON0	set	275
  2924  019A                     _TXREG	set	410
  2925  0199                     _RCREG	set	409
  2926  019D                     _RCSTAbits	set	413
  2927  019E                     _TXSTAbits	set	414
  2928  019C                     _SPBRGH	set	412
  2929  019B                     _SPBRGL	set	411
  2930  019E                     _TXSTA	set	414
  2931  019D                     _RCSTA	set	413
  2932  019F                     _BAUDCON	set	415
  2933  018C                     _ANSELA	set	396
  2934  018D                     _ANSELB	set	397
  2935  0211                     _SSP1BUF	set	529
  2936  0216                     _SSP1CON2	set	534
  2937  0215                     _SSP1CON1bits	set	533
  2938  0212                     _SSP1ADD	set	530
  2939  0215                     _SSP1CON1	set	533
  2940  0214                     _SSP1STAT	set	532
  2941  020C                     _WPUA	set	524
  2942  020D                     _WPUB	set	525
  2943  029E                     _CCPTMRS0bits	set	670
  2944  0319                     _CCPR4H	set	793
  2945  0318                     _CCPR4L	set	792
  2946  031A                     _CCP4CON	set	794
  2947  0312                     _CCPR3H	set	786
  2948  0311                     _CCPR3L	set	785
  2949  0313                     _CCP3CON	set	787
  2950  0394                     _IOCBPbits	set	916
  2951  0395                     _IOCBNbits	set	917
  2952  0396                     _IOCBFbits	set	918
  2953  0417                     _T4CONbits	set	1047
  2954  0417                     _T4CON	set	1047
  2955  0415                     _TMR4	set	1045
  2956  0416                     _PR4	set	1046
  2957                           
  2958                           	psect	cinit
  2959  0058                     start_initialization:	
  2960                           ; #config settings
  2961                           
  2962  0058                     __initialization:
  2963                           
  2964                           ; Initialize objects allocated to BANK1
  2965  0058  0021               	movlb	1	; select bank1
  2966  0059  3180  2003  3180   	fcall	__pidataBANK1	;fetch initializer
  2967  005C  00CB               	movwf	__pdataBANK1& (0+127)
  2968                           
  2969                           ; Clear objects allocated to BANK0
  2970  005D  3046               	movlw	low __pbssBANK0
  2971  005E  0084               	movwf	4
  2972  005F  3000               	movlw	high __pbssBANK0
  2973  0060  0085               	movwf	5
  2974  0061  3018               	movlw	24
  2975  0062  318B  2367  3180   	fcall	clear_ram0
  2976                           
  2977                           ; Clear objects allocated to BANK1
  2978  0065  30B3               	movlw	low __pbssBANK1
  2979  0066  0084               	movwf	4
  2980  0067  3000               	movlw	high __pbssBANK1
  2981  0068  0085               	movwf	5
  2982  0069  3012               	movlw	18
  2983  006A  318B  2367  3180   	fcall	clear_ram0
  2984  006D                     end_of_initialization:	
  2985                           ;End of C runtime variable initialization code
  2986                           
  2987  006D                     __end_of__initialization:
  2988  006D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2989  006E  0020               	movlb	0
  2990  006F  3183  2BB7         	ljmp	_main	;jump to C main() function
  2991                           
  2992                           	psect	bssBANK0
  2993  0046                     __pbssBANK0:
  2994  0046                     _velocidadeMotor:
  2995  0046                     	ds	4
  2996  004A                     TMR4_ISR@CountCallBack:
  2997  004A                     	ds	2
  2998  004C                     TMR0_ISR@CountCallBack:
  2999  004C                     	ds	2
  3000  004E                     _ADC_InterruptHandler:
  3001  004E                     	ds	2
  3002  0050                     _temperatura:
  3003  0050                     	ds	2
  3004  0052                     _t2:
  3005  0052                     	ds	2
  3006  0054                     _t1:
  3007  0054                     	ds	2
  3008  0056                     controleMovimento@cont:
  3009  0056                     	ds	1
  3010  0057                     _eusartRxLastError:
  3011  0057                     	ds	1
  3012  0058                     _altura:
  3013  0058                     	ds	1
  3014  0059                     _andarAtual:
  3015  0059                     	ds	1
  3016  005A                     _flag:
  3017  005A                     	ds	1
  3018  005B                     _pulsoEncoder:
  3019  005B                     	ds	1
  3020  005C                     _RXaccepted:
  3021  005C                     	ds	1
  3022  005D                     _waitRX:
  3023  005D                     	ds	1
  3024                           
  3025                           	psect	bssBANK1
  3026  00B3                     __pbssBANK1:
  3027  00B3                     _MatrixLed:
  3028  00B3                     	ds	8
  3029  00BB                     _destinoDesc:
  3030  00BB                     	ds	1
  3031  00BC                     _destinoSub:
  3032  00BC                     	ds	1
  3033  00BD                     _dTemp:
  3034  00BD                     	ds	1
  3035  00BE                     _oTemp:
  3036  00BE                     	ds	1
  3037  00BF                     _contComandos:
  3038  00BF                     	ds	1
  3039  00C0                     _rxValue:
  3040  00C0                     	ds	1
  3041  00C1                     _mov:
  3042  00C1                     	ds	1
  3043  00C2                     _state:
  3044  00C2                     	ds	1
  3045  00C3                     _destino:
  3046  00C3                     	ds	1
  3047  00C4                     _origem:
  3048  00C4                     	ds	1
  3049                           
  3050                           	psect	dataBANK1
  3051  00CB                     __pdataBANK1:
  3052  00CB                     _subindo:
  3053  00CB                     	ds	1
  3054                           
  3055                           	psect	clrtext
  3056  0B67                     clear_ram0:	
  3057                           ;	Called with FSR0 containing the base address, and
  3058                           ;	WREG with the size to clear
  3059                           
  3060  0B67  0064               	clrwdt	;clear the watchdog before getting into this loop
  3061  0B68                     clrloop0:
  3062  0B68  0180               	clrf	0	;clear RAM location pointed to by FSR
  3063  0B69  3101               	addfsr 0,1
  3064  0B6A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3065  0B6B  2B68               	goto	clrloop0	;have we reached the end yet?
  3066  0B6C  3400               	retlw	0	;all done for this memory range, return
  3067                           
  3068                           	psect	cstackBANK1
  3069  00A0                     __pcstackBANK1:
  3070  00A0                     ?_IOCBF0_SetInterruptHandler:
  3071  00A0                     ?_IOCBF3_SetInterruptHandler:	
  3072                           ; 1 bytes @ 0x0
  3073                           
  3074  00A0                     ??_SPI1_Initialize:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077  00A0                     ??_OSCILLATOR_Initialize:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080  00A0                     ??_WDT_Initialize:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083  00A0                     ??_FVR_Initialize:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086  00A0                     ??_TMR2_Initialize:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089  00A0                     ??_ADC_Initialize:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092  00A0                     ??_TMR1_Initialize:	
  3093                           ; 1 bytes @ 0x0
  3094                           
  3095  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3096                           ; 1 bytes @ 0x0
  3097                           
  3098  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3099                           ; 1 bytes @ 0x0
  3100                           
  3101  00A0                     ?_EUSART_SetErrorHandler:	
  3102                           ; 1 bytes @ 0x0
  3103                           
  3104  00A0                     ?_TMR0_SetInterruptHandler:	
  3105                           ; 1 bytes @ 0x0
  3106                           
  3107  00A0                     ?_CCP4_SetCallBack:	
  3108                           ; 1 bytes @ 0x0
  3109                           
  3110  00A0                     ?_TMR4_SetInterruptHandler:	
  3111                           ; 1 bytes @ 0x0
  3112                           
  3113  00A0                     ??_PWM3_Initialize:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116  00A0                     ??_CMP2_Initialize:	
  3117                           ; 1 bytes @ 0x0
  3118                           
  3119  00A0                     ??_CMP1_Initialize:	
  3120                           ; 1 bytes @ 0x0
  3121                           
  3122  00A0                     ??_EUSART_is_rx_ready:	
  3123                           ; 1 bytes @ 0x0
  3124                           
  3125  00A0                     ??_EUSART_Read:	
  3126                           ; 1 bytes @ 0x0
  3127                           
  3128  00A0                     ??_SPI1_Open:	
  3129                           ; 1 bytes @ 0x0
  3130                           
  3131  00A0                     ?_SPI1_ExchangeBlock:	
  3132                           ; 1 bytes @ 0x0
  3133                           
  3134  00A0                     ??_TMR4_StartTimer:	
  3135                           ; 1 bytes @ 0x0
  3136                           
  3137  00A0                     ??_TMR4_WriteTimer:	
  3138                           ; 1 bytes @ 0x0
  3139                           
  3140  00A0                     ??_isValidFloor:	
  3141                           ; 1 bytes @ 0x0
  3142                           
  3143  00A0                     TMR4_WriteTimer@timerVal:	
  3144                           ; 1 bytes @ 0x0
  3145                           
  3146  00A0                     _isValidFloor$1563:	
  3147                           ; 1 bytes @ 0x0
  3148                           
  3149  00A0                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152  00A0                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3153                           ; 2 bytes @ 0x0
  3154                           
  3155  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3156                           ; 2 bytes @ 0x0
  3157                           
  3158  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3159                           ; 2 bytes @ 0x0
  3160                           
  3161  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3162                           ; 2 bytes @ 0x0
  3163                           
  3164  00A0                     SPI1_ExchangeBlock@blockSize:	
  3165                           ; 2 bytes @ 0x0
  3166                           
  3167  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3168                           ; 2 bytes @ 0x0
  3169                           
  3170  00A0                     CCP4_SetCallBack@customCallBack:	
  3171                           ; 2 bytes @ 0x0
  3172                           
  3173  00A0                     TMR4_SetInterruptHandler@InterruptHandler:	
  3174                           ; 2 bytes @ 0x0
  3175                           
  3176                           
  3177                           ; 2 bytes @ 0x0
  3178  00A0                     	ds	1
  3179  00A1                     ??_organizaTrajeto:
  3180  00A1                     isValidFloor@floor:	
  3181                           ; 1 bytes @ 0x1
  3182                           
  3183                           
  3184                           ; 1 bytes @ 0x1
  3185  00A1                     	ds	1
  3186  00A2                     ??_IOCBF0_SetInterruptHandler:
  3187  00A2                     ??_IOCBF3_SetInterruptHandler:	
  3188                           ; 1 bytes @ 0x2
  3189                           
  3190  00A2                     ??_TMR4_Initialize:	
  3191                           ; 1 bytes @ 0x2
  3192                           
  3193  00A2                     ??_TMR0_Initialize:	
  3194                           ; 1 bytes @ 0x2
  3195                           
  3196  00A2                     ??_CCP4_Initialize:	
  3197                           ; 1 bytes @ 0x2
  3198                           
  3199  00A2                     ??_EUSART_Initialize:	
  3200                           ; 1 bytes @ 0x2
  3201                           
  3202  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3203                           ; 1 bytes @ 0x2
  3204                           
  3205  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3206                           ; 1 bytes @ 0x2
  3207                           
  3208  00A2                     ??_EUSART_SetErrorHandler:	
  3209                           ; 1 bytes @ 0x2
  3210                           
  3211  00A2                     ??_TMR0_SetInterruptHandler:	
  3212                           ; 1 bytes @ 0x2
  3213                           
  3214  00A2                     ??_CCP4_SetCallBack:	
  3215                           ; 1 bytes @ 0x2
  3216                           
  3217  00A2                     ??_TMR4_SetInterruptHandler:	
  3218                           ; 1 bytes @ 0x2
  3219                           
  3220  00A2                     ??_PIN_MANAGER_Initialize:	
  3221                           ; 1 bytes @ 0x2
  3222                           
  3223  00A2                     ??_SPI1_ExchangeBlock:	
  3224                           ; 1 bytes @ 0x2
  3225                           
  3226                           
  3227                           ; 1 bytes @ 0x2
  3228  00A2                     	ds	1
  3229  00A3                     ??_SYSTEM_Initialize:
  3230  00A3                     SPI1_Open@spi1UniqueConfiguration:	
  3231                           ; 1 bytes @ 0x3
  3232                           
  3233  00A3                     SPI1_ExchangeBlock@block:	
  3234                           ; 1 bytes @ 0x3
  3235                           
  3236  00A3                     organizaTrajeto@mascaraOrigem:	
  3237                           ; 1 bytes @ 0x3
  3238                           
  3239                           
  3240                           ; 1 bytes @ 0x3
  3241  00A3                     	ds	1
  3242  00A4                     SPI1_ExchangeBlock@data:
  3243  00A4                     organizaTrajeto@mascaraDestino:	
  3244                           ; 1 bytes @ 0x4
  3245                           
  3246                           
  3247                           ; 1 bytes @ 0x4
  3248  00A4                     	ds	1
  3249  00A5                     ?_txSpi:
  3250  00A5                     txSpi@dataSize:	
  3251                           ; 1 bytes @ 0x5
  3252                           
  3253                           
  3254                           ; 2 bytes @ 0x5
  3255  00A5                     	ds	2
  3256  00A7                     ??_txSpi:
  3257  00A7                     txSpi@data:	
  3258                           ; 1 bytes @ 0x7
  3259                           
  3260                           
  3261                           ; 1 bytes @ 0x7
  3262  00A7                     	ds	1
  3263  00A8                     ??_matrixUpdate:
  3264  00A8                     ??_initMatrix:	
  3265                           ; 1 bytes @ 0x8
  3266                           
  3267                           
  3268                           ; 1 bytes @ 0x8
  3269  00A8                     	ds	1
  3270  00A9                     matrixUpdate@data:
  3271  00A9                     initMatrix@data:	
  3272                           ; 2 bytes @ 0x9
  3273                           
  3274                           
  3275                           ; 4 bytes @ 0x9
  3276  00A9                     	ds	2
  3277  00AB                     matrixUpdate@i:
  3278                           
  3279                           ; 1 bytes @ 0xB
  3280  00AB                     	ds	1
  3281  00AC                     ??_chegadaS1:
  3282                           
  3283                           ; 1 bytes @ 0xC
  3284  00AC                     	ds	1
  3285  00AD                     initMatrix@k:
  3286                           
  3287                           ; 1 bytes @ 0xD
  3288  00AD                     	ds	1
  3289  00AE                     initMatrix@i:
  3290                           
  3291                           ; 1 bytes @ 0xE
  3292  00AE                     	ds	1
  3293  00AF                     initMatrix@i_1602:
  3294                           
  3295                           ; 1 bytes @ 0xF
  3296  00AF                     	ds	1
  3297  00B0                     initMatrix@j:
  3298                           
  3299                           ; 1 bytes @ 0x10
  3300  00B0                     	ds	1
  3301  00B1                     ??_main:
  3302                           
  3303                           ; 1 bytes @ 0x11
  3304  00B1                     	ds	2
  3305                           
  3306                           	psect	cstackCOMMON
  3307  0070                     __pcstackCOMMON:
  3308  0070                     ?_chegadaS4:
  3309  0070                     ?_chegadaS3:	
  3310                           ; 1 bytes @ 0x0
  3311                           
  3312  0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3313                           ; 1 bytes @ 0x0
  3314                           
  3315  0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3316                           ; 1 bytes @ 0x0
  3317                           
  3318  0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3319                           ; 1 bytes @ 0x0
  3320                           
  3321  0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3322                           ; 1 bytes @ 0x0
  3323                           
  3324  0070                     ?_IOCBF0_ISR:	
  3325                           ; 1 bytes @ 0x0
  3326                           
  3327  0070                     ?_IOCBF3_ISR:	
  3328                           ; 1 bytes @ 0x0
  3329                           
  3330  0070                     ?_SPI1_Initialize:	
  3331                           ; 1 bytes @ 0x0
  3332                           
  3333  0070                     ?_OSCILLATOR_Initialize:	
  3334                           ; 1 bytes @ 0x0
  3335                           
  3336  0070                     ?_WDT_Initialize:	
  3337                           ; 1 bytes @ 0x0
  3338                           
  3339  0070                     ?_FVR_Initialize:	
  3340                           ; 1 bytes @ 0x0
  3341                           
  3342  0070                     ?_TMR4_Initialize:	
  3343                           ; 1 bytes @ 0x0
  3344                           
  3345  0070                     ?_TMR2_Initialize:	
  3346                           ; 1 bytes @ 0x0
  3347                           
  3348  0070                     ?_TMR0_Initialize:	
  3349                           ; 1 bytes @ 0x0
  3350                           
  3351  0070                     ?_ADC_Initialize:	
  3352                           ; 1 bytes @ 0x0
  3353                           
  3354  0070                     ?_CCP4_Initialize:	
  3355                           ; 1 bytes @ 0x0
  3356                           
  3357  0070                     ?_TMR1_Initialize:	
  3358                           ; 1 bytes @ 0x0
  3359                           
  3360  0070                     ?_EUSART_Initialize:	
  3361                           ; 1 bytes @ 0x0
  3362                           
  3363  0070                     ?_TMR0_ISR:	
  3364                           ; 1 bytes @ 0x0
  3365                           
  3366  0070                     ?_CCP4_CaptureISR:	
  3367                           ; 1 bytes @ 0x0
  3368                           
  3369  0070                     ?_TMR4_ISR:	
  3370                           ; 1 bytes @ 0x0
  3371                           
  3372  0070                     ?_TMR0_DefaultInterruptHandler:	
  3373                           ; 1 bytes @ 0x0
  3374                           
  3375  0070                     ??_TMR0_DefaultInterruptHandler:	
  3376                           ; 1 bytes @ 0x0
  3377                           
  3378  0070                     ?_TMR0_CallBack:	
  3379                           ; 1 bytes @ 0x0
  3380                           
  3381  0070                     ?_TMR4_DefaultInterruptHandler:	
  3382                           ; 1 bytes @ 0x0
  3383                           
  3384  0070                     ??_TMR4_DefaultInterruptHandler:	
  3385                           ; 1 bytes @ 0x0
  3386                           
  3387  0070                     ?_TMR4_CallBack:	
  3388                           ; 1 bytes @ 0x0
  3389                           
  3390  0070                     ?_memset:	
  3391                           ; 1 bytes @ 0x0
  3392                           
  3393  0070                     ?_PWM3_Initialize:	
  3394                           ; 1 bytes @ 0x0
  3395                           
  3396  0070                     ?_PWM3_LoadDutyValue:	
  3397                           ; 1 bytes @ 0x0
  3398                           
  3399  0070                     ?_CMP2_Initialize:	
  3400                           ; 1 bytes @ 0x0
  3401                           
  3402  0070                     ?_CMP2_ISR:	
  3403                           ; 1 bytes @ 0x0
  3404                           
  3405  0070                     ?_CMP1_Initialize:	
  3406                           ; 1 bytes @ 0x0
  3407                           
  3408  0070                     ?_CMP1_ISR:	
  3409                           ; 1 bytes @ 0x0
  3410                           
  3411  0070                     ?_PIN_MANAGER_Initialize:	
  3412                           ; 1 bytes @ 0x0
  3413                           
  3414  0070                     ?_PIN_MANAGER_IOC:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417  0070                     ?_SYSTEM_Initialize:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0070                     ?_EUSART_is_rx_ready:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423  0070                     ?_EUSART_Read:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426  0070                     ?_EUSART_Write:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429  0070                     ??_EUSART_Write:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  0070                     ?_SPI1_Open:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  0070                     ?_INTERRUPT_InterruptManager:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  0070                     ?_CCP4_DefaultCallBack:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  0070                     ?_TMR4_StartTimer:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444  0070                     ?_TMR4_StopTimer:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447  0070                     ??_TMR4_StopTimer:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450  0070                     ?_TMR4_WriteTimer:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453  0070                     ?_organizaTrajeto:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456  0070                     ?_isValidFloor:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459  0070                     ?_sendInfo:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  0070                     ?_matrixUpdate:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  0070                     ?_initMatrix:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  0070                     ?_controleMovimento:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  0070                     ?_chegadaS1:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  0070                     ?_chegadaS2:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  0070                     ?_main:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  0070                     ?i1_SPI1_ExchangeBlock:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  0070                     ?i1_TMR4_StartTimer:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486  0070                     ??i1_TMR4_StartTimer:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489  0070                     ?i1_TMR4_WriteTimer:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492  0070                     ??i1_TMR4_WriteTimer:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495  0070                     ?i1_matrixUpdate:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498  0070                     ?i1_chegadaS1:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501  0070                     ?__Umul8_16:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504  0070                     ?_ADC_GetConversion:	
  3505                           ; 2 bytes @ 0x0
  3506                           
  3507  0070                     EUSART_Write@txData:	
  3508                           ; 2 bytes @ 0x0
  3509                           
  3510  0070                     __Umul8_16@multiplicand:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513  0070                     i1TMR4_WriteTimer@timerVal:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516  0070                     PWM3_LoadDutyValue@dutyValue:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519  0070                     CCP4_DefaultCallBack@capturedValue:	
  3520                           ; 2 bytes @ 0x0
  3521                           
  3522  0070                     memset@c:	
  3523                           ; 2 bytes @ 0x0
  3524                           
  3525  0070                     i1SPI1_ExchangeBlock@blockSize:	
  3526                           ; 2 bytes @ 0x0
  3527                           
  3528                           
  3529                           ; 2 bytes @ 0x0
  3530  0070                     	ds	2
  3531  0072                     ??_CCP4_CaptureISR:
  3532  0072                     ??__Umul8_16:	
  3533                           ; 1 bytes @ 0x2
  3534                           
  3535  0072                     ??_PWM3_LoadDutyValue:	
  3536                           ; 1 bytes @ 0x2
  3537                           
  3538  0072                     ??_ADC_GetConversion:	
  3539                           ; 1 bytes @ 0x2
  3540                           
  3541  0072                     ??_CCP4_DefaultCallBack:	
  3542                           ; 1 bytes @ 0x2
  3543                           
  3544  0072                     ??i1_SPI1_ExchangeBlock:	
  3545                           ; 1 bytes @ 0x2
  3546                           
  3547  0072                     memset@n:	
  3548                           ; 1 bytes @ 0x2
  3549                           
  3550                           
  3551                           ; 2 bytes @ 0x2
  3552  0072                     	ds	1
  3553  0073                     ADC_GetConversion@channel:
  3554  0073                     i1SPI1_ExchangeBlock@block:	
  3555                           ; 1 bytes @ 0x3
  3556                           
  3557  0073                     CCP4_CaptureISR@module:	
  3558                           ; 1 bytes @ 0x3
  3559                           
  3560                           
  3561                           ; 2 bytes @ 0x3
  3562  0073                     	ds	1
  3563  0074                     ??_memset:
  3564  0074                     ??_controleMovimento:	
  3565                           ; 1 bytes @ 0x4
  3566                           
  3567  0074                     ?___wmul:	
  3568                           ; 1 bytes @ 0x4
  3569                           
  3570  0074                     i1SPI1_ExchangeBlock@data:	
  3571                           ; 2 bytes @ 0x4
  3572                           
  3573  0074                     ___wmul@multiplier:	
  3574                           ; 1 bytes @ 0x4
  3575                           
  3576  0074                     __Umul8_16@product:	
  3577                           ; 2 bytes @ 0x4
  3578                           
  3579                           
  3580                           ; 2 bytes @ 0x4
  3581  0074                     	ds	1
  3582  0075                     ?i1_txSpi:
  3583  0075                     i1txSpi@dataSize:	
  3584                           ; 1 bytes @ 0x5
  3585                           
  3586                           
  3587                           ; 2 bytes @ 0x5
  3588  0075                     	ds	1
  3589  0076                     ??_TMR4_ISR:
  3590  0076                     ??_TMR4_CallBack:	
  3591                           ; 1 bytes @ 0x6
  3592                           
  3593  0076                     ___wmul@multiplicand:	
  3594                           ; 1 bytes @ 0x6
  3595                           
  3596  0076                     __Umul8_16@word_mpld:	
  3597                           ; 2 bytes @ 0x6
  3598                           
  3599  0076                     memset@k:	
  3600                           ; 2 bytes @ 0x6
  3601                           
  3602                           
  3603                           ; 2 bytes @ 0x6
  3604  0076                     	ds	1
  3605  0077                     ??i1_txSpi:
  3606  0077                     i1txSpi@data:	
  3607                           ; 1 bytes @ 0x7
  3608                           
  3609                           
  3610                           ; 1 bytes @ 0x7
  3611  0077                     	ds	1
  3612  0078                     ??___wmul:
  3613  0078                     ??i1_matrixUpdate:	
  3614                           ; 1 bytes @ 0x8
  3615                           
  3616  0078                     __Umul8_16@multiplier:	
  3617                           ; 1 bytes @ 0x8
  3618                           
  3619  0078                     memset@dest:	
  3620                           ; 1 bytes @ 0x8
  3621                           
  3622  0078                     ___wmul@product:	
  3623                           ; 1 bytes @ 0x8
  3624                           
  3625                           
  3626                           ; 2 bytes @ 0x8
  3627  0078                     	ds	1
  3628  0079                     ??___flmul:
  3629  0079                     memset@s:	
  3630                           ; 1 bytes @ 0x9
  3631                           
  3632  0079                     i1matrixUpdate@data:	
  3633                           ; 1 bytes @ 0x9
  3634                           
  3635                           
  3636                           ; 2 bytes @ 0x9
  3637  0079                     	ds	1
  3638  007A                     ?_bin2bcd:
  3639  007A                     bin2bcd@binVal:	
  3640                           ; 2 bytes @ 0xA
  3641                           
  3642                           
  3643                           ; 2 bytes @ 0xA
  3644  007A                     	ds	1
  3645  007B                     i1matrixUpdate@i:
  3646                           
  3647                           ; 1 bytes @ 0xB
  3648  007B                     	ds	1
  3649  007C                     ??_chegadaS4:
  3650  007C                     ??_chegadaS3:	
  3651                           ; 1 bytes @ 0xC
  3652                           
  3653  007C                     ??_chegadaS2:	
  3654                           ; 1 bytes @ 0xC
  3655                           
  3656  007C                     ??i1_chegadaS1:	
  3657                           ; 1 bytes @ 0xC
  3658                           
  3659                           
  3660                           ; 1 bytes @ 0xC
  3661  007C                     	ds	1
  3662  007D                     ??_IOCBF0_ISR:
  3663  007D                     ??_IOCBF3_ISR:	
  3664                           ; 1 bytes @ 0xD
  3665                           
  3666  007D                     ??_CMP2_ISR:	
  3667                           ; 1 bytes @ 0xD
  3668                           
  3669  007D                     ??_CMP1_ISR:	
  3670                           ; 1 bytes @ 0xD
  3671                           
  3672  007D                     ??_PIN_MANAGER_IOC:	
  3673                           ; 1 bytes @ 0xD
  3674                           
  3675                           
  3676                           ; 1 bytes @ 0xD
  3677  007D                     	ds	1
  3678  007E                     ??_TMR0_ISR:
  3679  007E                     ??_TMR0_CallBack:	
  3680                           ; 1 bytes @ 0xE
  3681                           
  3682  007E                     ??_INTERRUPT_InterruptManager:	
  3683                           ; 1 bytes @ 0xE
  3684                           
  3685                           
  3686                           	psect	cstackBANK0
  3687  0020                     __pcstackBANK0:	
  3688                           ; 1 bytes @ 0xE
  3689                           
  3690  0020                     ??_bin2bcd:
  3691  0020                     ?___flmul:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694  0020                     ___flmul@b:	
  3695                           ; 4 bytes @ 0x0
  3696                           
  3697                           
  3698                           ; 4 bytes @ 0x0
  3699  0020                     	ds	4
  3700  0024                     bin2bcd@i:
  3701  0024                     ___flmul@a:	
  3702                           ; 1 bytes @ 0x4
  3703                           
  3704                           
  3705                           ; 4 bytes @ 0x4
  3706  0024                     	ds	1
  3707  0025                     bin2bcd@dataU:
  3708                           
  3709                           ; 4 bytes @ 0x5
  3710  0025                     	ds	3
  3711  0028                     ___flmul@sign:
  3712                           
  3713                           ; 1 bytes @ 0x8
  3714  0028                     	ds	1
  3715  0029                     ___flmul@grs:
  3716                           
  3717                           ; 4 bytes @ 0x9
  3718  0029                     	ds	4
  3719  002D                     ___flmul@aexp:
  3720                           
  3721                           ; 1 bytes @ 0xD
  3722  002D                     	ds	1
  3723  002E                     ___flmul@bexp:
  3724                           
  3725                           ; 1 bytes @ 0xE
  3726  002E                     	ds	1
  3727  002F                     ___flmul@prod:
  3728                           
  3729                           ; 4 bytes @ 0xF
  3730  002F                     	ds	4
  3731  0033                     ___flmul@temp:
  3732                           
  3733                           ; 2 bytes @ 0x13
  3734  0033                     	ds	2
  3735  0035                     ?___fltol:
  3736  0035                     ___fltol@f1:	
  3737                           ; 4 bytes @ 0x15
  3738                           
  3739                           
  3740                           ; 4 bytes @ 0x15
  3741  0035                     	ds	4
  3742  0039                     ??___fltol:
  3743                           
  3744                           ; 1 bytes @ 0x19
  3745  0039                     	ds	5
  3746  003E                     ___fltol@sign1:
  3747                           
  3748                           ; 1 bytes @ 0x1E
  3749  003E                     	ds	1
  3750  003F                     ___fltol@exp1:
  3751                           
  3752                           ; 1 bytes @ 0x1F
  3753  003F                     	ds	1
  3754  0040                     ??_sendInfo:
  3755                           
  3756                           ; 1 bytes @ 0x20
  3757  0040                     	ds	2
  3758  0042                     sendInfo@velocidade:
  3759                           
  3760                           ; 2 bytes @ 0x22
  3761  0042                     	ds	2
  3762  0044                     sendInfo@bcd:
  3763                           
  3764                           ; 2 bytes @ 0x24
  3765  0044                     	ds	2
  3766                           
  3767                           	psect	maintext
  3768  03B7                     __pmaintext:	
  3769 ;;
  3770 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3771 ;;
  3772 ;; *************** function _main *****************
  3773 ;; Defined at:
  3774 ;;		line 384 in file "main.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : B1F/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3788 ;;      Params:         0       0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0
  3790 ;;      Temps:          0       0       2       0       0       0
  3791 ;;      Totals:         0       0       2       0       0       0
  3792 ;;Total ram usage:        2 bytes
  3793 ;; Hardware stack levels required when called: 11
  3794 ;; This function calls:
  3795 ;;		_EUSART_Read
  3796 ;;		_EUSART_is_rx_ready
  3797 ;;		_IOCBF0_SetInterruptHandler
  3798 ;;		_IOCBF3_SetInterruptHandler
  3799 ;;		_SPI1_Open
  3800 ;;		_SYSTEM_Initialize
  3801 ;;		_TMR0_SetInterruptHandler
  3802 ;;		_TMR4_SetInterruptHandler
  3803 ;;		_chegadaS1
  3804 ;;		_initMatrix
  3805 ;;		_isValidFloor
  3806 ;;		_organizaTrajeto
  3807 ;; This function is called by:
  3808 ;;		Startup code after reset
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812  03B7                     _main:	
  3813                           ;psect for function _main
  3814                           
  3815  03B7                     l4495:	
  3816                           ;incstack = 0
  3817                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3818                           
  3819                           
  3820                           ;main.c: 387:     SYSTEM_Initialize();
  3821  03B7  318E  2632  3183   	fcall	_SYSTEM_Initialize
  3822                           
  3823                           ;main.c: 396:     IOCBF0_SetInterruptHandler(chegadaS1);
  3824  03BA  30AF               	movlw	low _chegadaS1
  3825  03BB  0021               	movlb	1	; select bank1
  3826  03BC  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  3827  03BD  300E               	movlw	high _chegadaS1
  3828  03BE  00A1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3829  03BF  318B  238D  3183   	fcall	_IOCBF0_SetInterruptHandler
  3830                           
  3831                           ;main.c: 397:     IOCBF3_SetInterruptHandler(chegadaS2);
  3832  03C2  30FF               	movlw	low _chegadaS2
  3833  03C3  0021               	movlb	1	; select bank1
  3834  03C4  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3835  03C5  3006               	movlw	high _chegadaS2
  3836  03C6  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3837  03C7  318B  2396  3183   	fcall	_IOCBF3_SetInterruptHandler
  3838                           
  3839                           ;main.c: 398:     TMR4_SetInterruptHandler(controleMovimento);
  3840  03CA  3072               	movlw	low _controleMovimento
  3841  03CB  0021               	movlb	1	; select bank1
  3842  03CC  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  3843  03CD  3007               	movlw	high _controleMovimento
  3844  03CE  00A1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3845  03CF  318B  23B1  3183   	fcall	_TMR4_SetInterruptHandler
  3846                           
  3847                           ;main.c: 399:     TMR0_SetInterruptHandler(sendInfo);
  3848  03D2  30C8               	movlw	low _sendInfo
  3849  03D3  0021               	movlb	1	; select bank1
  3850  03D4  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3851  03D5  3002               	movlw	high _sendInfo
  3852  03D6  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3853  03D7  318B  23A8  3183   	fcall	_TMR0_SetInterruptHandler
  3854  03DA                     l4497:
  3855  03DA  0022               	movlb	2	; select bank2
  3856  03DB  148D               	bsf	13,1	;volatile
  3857  03DC                     l4499:
  3858                           
  3859                           ;main.c: 403:     SPI1_Open(SPI1_DEFAULT);
  3860  03DC  3000               	movlw	0
  3861  03DD  318F  2755  3183   	fcall	_SPI1_Open
  3862  03E0                     l4501:
  3863                           
  3864                           ;main.c: 404:     initMatrix();
  3865  03E0  318F  27A9  3183   	fcall	_initMatrix
  3866  03E3                     l4503:
  3867                           
  3868                           ;main.c: 407:     (INTCONbits.GIE = 1);
  3869  03E3  178B               	bsf	11,7	;volatile
  3870  03E4                     l4505:
  3871                           
  3872                           ;main.c: 410:     (INTCONbits.PEIE = 1);
  3873  03E4  170B               	bsf	11,6	;volatile
  3874                           
  3875                           ;main.c: 417:     chegadaS1();
  3876  03E5  318E  26AF  3183   	fcall	_chegadaS1
  3877  03E8                     l4507:
  3878                           
  3879                           ;main.c: 419:     {;main.c: 421:         if(EUSART_is_rx_ready()){
  3880  03E8  318B  233E  3183   	fcall	_EUSART_is_rx_ready
  3881  03EB  3A00               	xorlw	0
  3882  03EC  1903               	skipnz
  3883  03ED  2BEF               	goto	u3311
  3884  03EE  2BF0               	goto	u3310
  3885  03EF                     u3311:
  3886  03EF  2BE8               	goto	l4507
  3887  03F0                     u3310:
  3888  03F0                     l4509:
  3889                           
  3890                           ;main.c: 422:             rxValue = EUSART_Read();
  3891  03F0  318C  243B  3183   	fcall	_EUSART_Read
  3892  03F3  0021               	movlb	1	; select bank1
  3893  03F4  00B1               	movwf	??_main^(0+128)
  3894  03F5  0831               	movf	??_main^(0+128),w
  3895  03F6  00C0               	movwf	_rxValue^(0+128)
  3896                           
  3897                           ;main.c: 423:             switch(state){
  3898  03F7  2C43               	goto	l4543
  3899  03F8                     l4511:
  3900                           
  3901                           ;main.c: 425:                     if(rxValue == '$'){
  3902  03F8  3024               	movlw	36
  3903  03F9  0640               	xorwf	_rxValue^(0+128),w
  3904  03FA  1D03               	btfss	3,2
  3905  03FB  2BFD               	goto	u3321
  3906  03FC  2BFE               	goto	u3320
  3907  03FD                     u3321:
  3908  03FD  2C59               	goto	l906
  3909  03FE                     u3320:
  3910  03FE                     l4513:
  3911                           
  3912                           ;main.c: 426:                         state = FIRST_NUM;
  3913  03FE  01C2               	clrf	_state^(0+128)
  3914  03FF  0AC2               	incf	_state^(0+128),f
  3915  0400  2BE8               	goto	l4507
  3916  0401                     l4515:
  3917                           
  3918                           ;main.c: 430:                     if(isValidFloor(rxValue)){
  3919  0401  0840               	movf	_rxValue^(0+128),w
  3920  0402  318C  2490  3183   	fcall	_isValidFloor
  3921  0405  3A00               	xorlw	0
  3922  0406  1903               	skipnz
  3923  0407  2C09               	goto	u3331
  3924  0408  2C0A               	goto	u3330
  3925  0409                     u3331:
  3926  0409  2C15               	goto	l4521
  3927  040A                     u3330:
  3928  040A                     l4517:
  3929                           
  3930                           ;main.c: 431:                         oTemp = rxValue - 0x30;
  3931  040A  0021               	movlb	1	; select bank1
  3932  040B  0840               	movf	_rxValue^(0+128),w
  3933  040C  3ED0               	addlw	208
  3934  040D  00B1               	movwf	??_main^(0+128)
  3935  040E  0831               	movf	??_main^(0+128),w
  3936  040F  00BE               	movwf	_oTemp^(0+128)
  3937  0410                     l4519:
  3938                           
  3939                           ;main.c: 432:                         state = SECOND_NUM;
  3940  0410  3002               	movlw	2
  3941  0411  00B1               	movwf	??_main^(0+128)
  3942  0412  0831               	movf	??_main^(0+128),w
  3943  0413  00C2               	movwf	_state^(0+128)
  3944                           
  3945                           ;main.c: 433:                     }else{
  3946  0414  2BE8               	goto	l4507
  3947  0415                     l4521:
  3948                           
  3949                           ;main.c: 434:                         state = START;
  3950  0415  0021               	movlb	1	; select bank1
  3951  0416  01C2               	clrf	_state^(0+128)
  3952  0417  2BE8               	goto	l4507
  3953  0418                     l4523:
  3954                           
  3955                           ;main.c: 438:                     if(isValidFloor(rxValue)){
  3956  0418  0840               	movf	_rxValue^(0+128),w
  3957  0419  318C  2490  3183   	fcall	_isValidFloor
  3958  041C  3A00               	xorlw	0
  3959  041D  1903               	skipnz
  3960  041E  2C20               	goto	u3341
  3961  041F  2C21               	goto	u3340
  3962  0420                     u3341:
  3963  0420  2C15               	goto	l4521
  3964  0421                     u3340:
  3965  0421                     l4525:
  3966                           
  3967                           ;main.c: 439:                         dTemp = rxValue - 0x30;
  3968  0421  0021               	movlb	1	; select bank1
  3969  0422  0840               	movf	_rxValue^(0+128),w
  3970  0423  3ED0               	addlw	208
  3971  0424  00B1               	movwf	??_main^(0+128)
  3972  0425  0831               	movf	??_main^(0+128),w
  3973  0426  00BD               	movwf	_dTemp^(0+128)
  3974  0427                     l4527:
  3975                           
  3976                           ;main.c: 440:                         state = CR;
  3977  0427  3003               	movlw	3
  3978  0428  00B1               	movwf	??_main^(0+128)
  3979  0429  0831               	movf	??_main^(0+128),w
  3980  042A  00C2               	movwf	_state^(0+128)
  3981                           
  3982                           ;main.c: 441:                     }else{
  3983  042B  2BE8               	goto	l4507
  3984  042C                     l4531:
  3985                           
  3986                           ;main.c: 446:                     if(rxValue == 0x0D){
  3987  042C  300D               	movlw	13
  3988  042D  0640               	xorwf	_rxValue^(0+128),w
  3989  042E  1D03               	btfss	3,2
  3990  042F  2C31               	goto	u3351
  3991  0430  2C32               	goto	u3350
  3992  0431                     u3351:
  3993  0431  2C15               	goto	l4521
  3994  0432                     u3350:
  3995  0432                     l4533:
  3996                           
  3997                           ;main.c: 447:                         origem = oTemp;
  3998  0432  083E               	movf	_oTemp^(0+128),w
  3999  0433  00B1               	movwf	??_main^(0+128)
  4000  0434  0831               	movf	??_main^(0+128),w
  4001  0435  00C4               	movwf	_origem^(0+128)
  4002                           
  4003                           ;main.c: 448:                         destino = dTemp;
  4004  0436  083D               	movf	_dTemp^(0+128),w
  4005  0437  00B1               	movwf	??_main^(0+128)
  4006  0438  0831               	movf	??_main^(0+128),w
  4007  0439  00C3               	movwf	_destino^(0+128)
  4008  043A                     l4535:
  4009                           
  4010                           ;main.c: 450:                         organizaTrajeto();
  4011  043A  318F  2702  3183   	fcall	_organizaTrajeto
  4012  043D                     l4537:
  4013                           
  4014                           ;main.c: 451:                         contComandos++;
  4015  043D  3001               	movlw	1
  4016  043E  0021               	movlb	1	; select bank1
  4017  043F  00B1               	movwf	??_main^(0+128)
  4018  0440  0831               	movf	??_main^(0+128),w
  4019  0441  07BF               	addwf	_contComandos^(0+128),f
  4020  0442  2C15               	goto	l4521
  4021  0443                     l4543:
  4022  0443  0842               	movf	_state^(0+128),w
  4023  0444  00B1               	movwf	??_main^(0+128)
  4024  0445  01B2               	clrf	(??_main^(0+128)+1)
  4025                           
  4026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4027                           ; Switch size 1, requested type "simple"
  4028                           ; Number of cases is 1, Range of values is 0 to 0
  4029                           ; switch strategies available:
  4030                           ; Name         Instructions Cycles
  4031                           ; simple_byte            4     3 (average)
  4032                           ; direct_byte            8     6 (fixed)
  4033                           ; jumptable            260     6 (fixed)
  4034                           ;	Chosen strategy is simple_byte
  4035  0446  0832               	movf	(??_main+1)^(0+128),w
  4036  0447  3A00               	xorlw	0	; case 0
  4037  0448  1903               	skipnz
  4038  0449  2C4B               	goto	l4611
  4039  044A  2C15               	goto	l4521
  4040  044B                     l4611:
  4041                           
  4042                           ; Switch size 1, requested type "simple"
  4043                           ; Number of cases is 4, Range of values is 0 to 3
  4044                           ; switch strategies available:
  4045                           ; Name         Instructions Cycles
  4046                           ; simple_byte           13     7 (average)
  4047                           ; direct_byte           14     6 (fixed)
  4048                           ; jumptable            260     6 (fixed)
  4049                           ;	Chosen strategy is simple_byte
  4050  044B  0831               	movf	??_main^(0+128),w
  4051  044C  3A00               	xorlw	0	; case 0
  4052  044D  1903               	skipnz
  4053  044E  2BF8               	goto	l4511
  4054  044F  3A01               	xorlw	1	; case 1
  4055  0450  1903               	skipnz
  4056  0451  2C01               	goto	l4515
  4057  0452  3A03               	xorlw	3	; case 2
  4058  0453  1903               	skipnz
  4059  0454  2C18               	goto	l4523
  4060  0455  3A01               	xorlw	1	; case 3
  4061  0456  1903               	skipnz
  4062  0457  2C2C               	goto	l4531
  4063  0458  2C15               	goto	l4521
  4064  0459                     l906:	
  4065                           ;main.c: 458:         }
  4066                           
  4067  0459  2BE8               	goto	l4507
  4068  045A  3180  2856         	ljmp	start
  4069  045C                     __end_of_main:
  4070                           
  4071                           	psect	text1
  4072  0F02                     __ptext1:	
  4073 ;; *************** function _organizaTrajeto *****************
  4074 ;; Defined at:
  4075 ;;		line 52 in file "main.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  mascaraDesti    1    4[BANK1 ] unsigned char 
  4080 ;;  mascaraOrige    1    3[BANK1 ] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, pclath, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4090 ;;      Params:         0       0       0       0       0       0
  4091 ;;      Locals:         0       0       2       0       0       0
  4092 ;;      Temps:          0       0       2       0       0       0
  4093 ;;      Totals:         0       0       4       0       0       0
  4094 ;;Total ram usage:        4 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 8
  4097 ;; This function calls:
  4098 ;;		_TMR4_WriteTimer
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104  0F02                     _organizaTrajeto:	
  4105                           ;psect for function _organizaTrajeto
  4106                           
  4107  0F02                     l4359:	
  4108                           ;incstack = 0
  4109                           ; Regs used in _organizaTrajeto: [wreg+status,2+status,0+pclath+cstack]
  4110                           
  4111                           
  4112                           ;main.c: 53:     uint8_t mascaraOrigem = 1<<origem;
  4113  0F02  3001               	movlw	1
  4114  0F03  0021               	movlb	1	; select bank1
  4115  0F04  00A1               	movwf	??_organizaTrajeto^(0+128)
  4116  0F05  0A44               	incf	_origem^(0+128),w
  4117  0F06  2F08               	goto	u3064
  4118  0F07                     u3065:
  4119  0F07  35A1               	lslf	??_organizaTrajeto^(0+128),f
  4120  0F08                     u3064:
  4121  0F08  0B89               	decfsz	9,f
  4122  0F09  2F07               	goto	u3065
  4123  0F0A  0821               	movf	??_organizaTrajeto^(0+128),w
  4124  0F0B  00A2               	movwf	(??_organizaTrajeto+1)^(0+128)
  4125  0F0C  0822               	movf	(??_organizaTrajeto+1)^(0+128),w
  4126  0F0D  00A3               	movwf	organizaTrajeto@mascaraOrigem^(0+128)
  4127                           
  4128                           ;main.c: 54:     uint8_t mascaraDestino = 1<<destino;
  4129  0F0E  3001               	movlw	1
  4130  0F0F  00A1               	movwf	??_organizaTrajeto^(0+128)
  4131  0F10  0A43               	incf	_destino^(0+128),w
  4132  0F11  2F13               	goto	u3074
  4133  0F12                     u3075:
  4134  0F12  35A1               	lslf	??_organizaTrajeto^(0+128),f
  4135  0F13                     u3074:
  4136  0F13  0B89               	decfsz	9,f
  4137  0F14  2F12               	goto	u3075
  4138  0F15  0821               	movf	??_organizaTrajeto^(0+128),w
  4139  0F16  00A2               	movwf	(??_organizaTrajeto+1)^(0+128)
  4140  0F17  0822               	movf	(??_organizaTrajeto+1)^(0+128),w
  4141  0F18  00A4               	movwf	organizaTrajeto@mascaraDestino^(0+128)
  4142                           
  4143                           ;main.c: 56:     if(origem == 0){
  4144  0F19  0844               	movf	_origem^(0+128),w
  4145  0F1A  1D03               	btfss	3,2
  4146  0F1B  2F1D               	goto	u3081
  4147  0F1C  2F1E               	goto	u3080
  4148  0F1D                     u3081:
  4149  0F1D  2F24               	goto	l4363
  4150  0F1E                     u3080:
  4151  0F1E                     l4361:
  4152                           
  4153                           ;main.c: 57:         destinoSub = destinoSub | mascaraDestino;
  4154  0F1E  083C               	movf	_destinoSub^(0+128),w
  4155  0F1F  0424               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4156  0F20  00A1               	movwf	??_organizaTrajeto^(0+128)
  4157  0F21  0821               	movf	??_organizaTrajeto^(0+128),w
  4158  0F22  00BC               	movwf	_destinoSub^(0+128)
  4159                           
  4160                           ;main.c: 58:     }else if (origem < destino)
  4161  0F23  2F41               	goto	l793
  4162  0F24                     l4363:
  4163  0F24  0843               	movf	_destino^(0+128),w
  4164  0F25  0244               	subwf	_origem^(0+128),w
  4165  0F26  1803               	skipnc
  4166  0F27  2F29               	goto	u3091
  4167  0F28  2F2A               	goto	u3090
  4168  0F29                     u3091:
  4169  0F29  2F31               	goto	l4367
  4170  0F2A                     u3090:
  4171  0F2A                     l4365:
  4172                           
  4173                           ;main.c: 59:     {;main.c: 60:         destinoSub =destinoSub | mascaraOrigem | mascaraD
      +                          estino;
  4174  0F2A  083C               	movf	_destinoSub^(0+128),w
  4175  0F2B  0423               	iorwf	organizaTrajeto@mascaraOrigem^(0+128),w
  4176  0F2C  0424               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4177  0F2D  00A1               	movwf	??_organizaTrajeto^(0+128)
  4178  0F2E  0821               	movf	??_organizaTrajeto^(0+128),w
  4179  0F2F  00BC               	movwf	_destinoSub^(0+128)
  4180                           
  4181                           ;main.c: 61:     }else if(origem > destino){
  4182  0F30  2F41               	goto	l793
  4183  0F31                     l4367:
  4184  0F31  0844               	movf	_origem^(0+128),w
  4185  0F32  0243               	subwf	_destino^(0+128),w
  4186  0F33  1803               	skipnc
  4187  0F34  2F36               	goto	u3101
  4188  0F35  2F37               	goto	u3100
  4189  0F36                     u3101:
  4190  0F36  2F41               	goto	l793
  4191  0F37                     u3100:
  4192  0F37                     l4369:
  4193                           
  4194                           ;main.c: 64:         destinoSub = destinoSub| mascaraOrigem;
  4195  0F37  083C               	movf	_destinoSub^(0+128),w
  4196  0F38  0423               	iorwf	organizaTrajeto@mascaraOrigem^(0+128),w
  4197  0F39  00A1               	movwf	??_organizaTrajeto^(0+128)
  4198  0F3A  0821               	movf	??_organizaTrajeto^(0+128),w
  4199  0F3B  00BC               	movwf	_destinoSub^(0+128)
  4200                           
  4201                           ;main.c: 65:         destinoDesc = destinoDesc| mascaraDestino;
  4202  0F3C  083B               	movf	_destinoDesc^(0+128),w
  4203  0F3D  0424               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4204  0F3E  00A1               	movwf	??_organizaTrajeto^(0+128)
  4205  0F3F  0821               	movf	??_organizaTrajeto^(0+128),w
  4206  0F40  00BB               	movwf	_destinoDesc^(0+128)
  4207  0F41                     l793:
  4208                           
  4209                           ;main.c: 68:     if (mov == RetornaS0)
  4210  0F41  3003               	movlw	3
  4211  0F42  0641               	xorwf	_mov^(0+128),w
  4212  0F43  1D03               	btfss	3,2
  4213  0F44  2F46               	goto	u3111
  4214  0F45  2F47               	goto	u3110
  4215  0F46                     u3111:
  4216  0F46  2F50               	goto	l4375
  4217  0F47                     u3110:
  4218  0F47                     l4371:
  4219                           
  4220                           ;main.c: 69:     {;main.c: 70:         mov = EmTrajeto;
  4221  0F47  3002               	movlw	2
  4222  0F48  00A1               	movwf	??_organizaTrajeto^(0+128)
  4223  0F49  0821               	movf	??_organizaTrajeto^(0+128),w
  4224  0F4A  00C1               	movwf	_mov^(0+128)
  4225  0F4B                     l4373:
  4226                           
  4227                           ;main.c: 72:         TMR4_WriteTimer(0);
  4228  0F4B  3000               	movlw	0
  4229  0F4C  318B  2361  318F   	fcall	_TMR4_WriteTimer
  4230                           
  4231                           ;main.c: 74:     }else{
  4232  0F4F  2F54               	goto	l799
  4233  0F50                     l4375:
  4234                           
  4235                           ;main.c: 75:         mov = EmTrajeto;
  4236  0F50  3002               	movlw	2
  4237  0F51  00A1               	movwf	??_organizaTrajeto^(0+128)
  4238  0F52  0821               	movf	??_organizaTrajeto^(0+128),w
  4239  0F53  00C1               	movwf	_mov^(0+128)
  4240  0F54                     l799:
  4241  0F54  0008               	return
  4242  0F55                     __end_of_organizaTrajeto:
  4243                           
  4244                           	psect	text2
  4245  0B61                     __ptext2:	
  4246 ;; *************** function _TMR4_WriteTimer *****************
  4247 ;; Defined at:
  4248 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  timerVal        1    wreg     unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  timerVal        1    0[BANK1 ] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4262 ;;      Params:         0       0       0       0       0       0
  4263 ;;      Locals:         0       0       1       0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0
  4265 ;;      Totals:         0       0       1       0       0       0
  4266 ;;Total ram usage:        1 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 7
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_organizaTrajeto
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276  0B61                     _TMR4_WriteTimer:	
  4277                           ;psect for function _TMR4_WriteTimer
  4278                           
  4279                           
  4280                           ;incstack = 0
  4281                           ; Regs used in _TMR4_WriteTimer: [wreg]
  4282                           ;TMR4_WriteTimer@timerVal stored from wreg
  4283  0B61  0021               	movlb	1	; select bank1
  4284  0B62  00A0               	movwf	TMR4_WriteTimer@timerVal^(0+128)
  4285  0B63                     l4283:
  4286                           
  4287                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  4288  0B63  0820               	movf	TMR4_WriteTimer@timerVal^(0+128),w
  4289  0B64  0028               	movlb	8	; select bank8
  4290  0B65  0095               	movwf	21	;volatile
  4291  0B66                     l682:
  4292  0B66  0008               	return
  4293  0B67                     __end_of_TMR4_WriteTimer:
  4294                           
  4295                           	psect	text3
  4296  0C90                     __ptext3:	
  4297 ;; *************** function _isValidFloor *****************
  4298 ;; Defined at:
  4299 ;;		line 81 in file "main.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  floor           1    wreg     unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  floor           1    1[BANK1 ] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      _Bool 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4313 ;;      Params:         0       0       0       0       0       0
  4314 ;;      Locals:         0       0       2       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0
  4316 ;;      Totals:         0       0       2       0       0       0
  4317 ;;Total ram usage:        2 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 7
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_main
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327  0C90                     _isValidFloor:	
  4328                           ;psect for function _isValidFloor
  4329                           
  4330                           
  4331                           ;incstack = 0
  4332                           ; Regs used in _isValidFloor: [wreg+status,2]
  4333                           ;isValidFloor@floor stored from wreg
  4334  0C90  0021               	movlb	1	; select bank1
  4335  0C91  00A1               	movwf	isValidFloor@floor^(0+128)
  4336  0C92                     l4377:
  4337                           
  4338                           ;main.c: 82:     return floor >= '0' && floor <= '3';
  4339  0C92  01A0               	clrf	_isValidFloor$1563^(0+128)
  4340  0C93                     l4379:
  4341  0C93  3030               	movlw	48
  4342  0C94  0221               	subwf	isValidFloor@floor^(0+128),w
  4343  0C95  1C03               	skipc
  4344  0C96  2C98               	goto	u3121
  4345  0C97  2C99               	goto	u3120
  4346  0C98                     u3121:
  4347  0C98  2CA1               	goto	l4385
  4348  0C99                     u3120:
  4349  0C99                     l4381:
  4350  0C99  3034               	movlw	52
  4351  0C9A  0221               	subwf	isValidFloor@floor^(0+128),w
  4352  0C9B  1803               	skipnc
  4353  0C9C  2C9E               	goto	u3131
  4354  0C9D  2C9F               	goto	u3130
  4355  0C9E                     u3131:
  4356  0C9E  2CA1               	goto	l4385
  4357  0C9F                     u3130:
  4358  0C9F                     l4383:
  4359  0C9F  01A0               	clrf	_isValidFloor$1563^(0+128)
  4360  0CA0  0AA0               	incf	_isValidFloor$1563^(0+128),f
  4361  0CA1                     l4385:
  4362  0CA1  0820               	movf	_isValidFloor$1563^(0+128),w
  4363  0CA2                     l804:
  4364  0CA2  0008               	return
  4365  0CA3                     __end_of_isValidFloor:
  4366                           
  4367                           	psect	text4
  4368  0FA9                     __ptext4:	
  4369 ;; *************** function _initMatrix *****************
  4370 ;; Defined at:
  4371 ;;		line 176 in file "main.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  j               1   16[BANK1 ] unsigned char 
  4376 ;;  i               1   15[BANK1 ] unsigned char 
  4377 ;;  i               1   14[BANK1 ] unsigned char 
  4378 ;;  data            4    9[BANK1 ] unsigned char [4]
  4379 ;;  k               1   13[BANK1 ] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4389 ;;      Params:         0       0       0       0       0       0
  4390 ;;      Locals:         0       0       8       0       0       0
  4391 ;;      Temps:          0       0       1       0       0       0
  4392 ;;      Totals:         0       0       9       0       0       0
  4393 ;;Total ram usage:        9 bytes
  4394 ;; Hardware stack levels used: 1
  4395 ;; Hardware stack levels required when called: 9
  4396 ;; This function calls:
  4397 ;;		_txSpi
  4398 ;; This function is called by:
  4399 ;;		_main
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403  0FA9                     _initMatrix:	
  4404                           ;psect for function _initMatrix
  4405                           
  4406  0FA9                     l4389:	
  4407                           ;incstack = 0
  4408                           ; Regs used in _initMatrix: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4409                           
  4410                           
  4411                           ;main.c: 177:     uint8_t data[4];;main.c: 178:     uint8_t k=0;
  4412  0FA9  0021               	movlb	1	; select bank1
  4413  0FAA  01AD               	clrf	initMatrix@k^(0+128)
  4414                           
  4415                           ;main.c: 179:    for(uint8_t i =0; i<8; i++){
  4416  0FAB  01AE               	clrf	initMatrix@i^(0+128)
  4417  0FAC                     l4395:
  4418                           
  4419                           ;main.c: 180:             MatrixLed[i] = 0;
  4420  0FAC  082E               	movf	initMatrix@i^(0+128),w
  4421  0FAD  3EB3               	addlw	(low (_MatrixLed| 0))& (0+255)
  4422  0FAE  0086               	movwf	6
  4423  0FAF  0187               	clrf	7
  4424  0FB0  0181               	clrf	1
  4425  0FB1                     l4397:
  4426                           
  4427                           ;main.c: 181:         }
  4428  0FB1  3001               	movlw	1
  4429  0FB2  00A8               	movwf	??_initMatrix^(0+128)
  4430  0FB3  0828               	movf	??_initMatrix^(0+128),w
  4431  0FB4  07AE               	addwf	initMatrix@i^(0+128),f
  4432  0FB5                     l4399:
  4433  0FB5  3008               	movlw	8
  4434  0FB6  022E               	subwf	initMatrix@i^(0+128),w
  4435  0FB7  1C03               	skipc
  4436  0FB8  2FBA               	goto	u3141
  4437  0FB9  2FBB               	goto	u3140
  4438  0FBA                     u3141:
  4439  0FBA  2FAC               	goto	l4395
  4440  0FBB                     u3140:
  4441  0FBB                     l4401:
  4442                           
  4443                           ;main.c: 182:     for(uint8_t i=0;i<6;i++){
  4444  0FBB  01AF               	clrf	initMatrix@i_1602^(0+128)
  4445  0FBC                     l4407:
  4446                           
  4447                           ;main.c: 183:         for(uint8_t j=0;j<4;j=j+2){
  4448  0FBC  01B0               	clrf	initMatrix@j^(0+128)
  4449  0FBD                     l4413:
  4450                           
  4451                           ;main.c: 184:             data[j]= matrix_conf[k];
  4452  0FBD  082D               	movf	initMatrix@k^(0+128),w
  4453  0FBE  3EFD               	addlw	low (_matrix_conf| (0+32768))
  4454  0FBF  0084               	movwf	4
  4455  0FC0  3087               	movlw	high (_matrix_conf| (0+32768))
  4456  0FC1  1803               	skipnc
  4457  0FC2  3E01               	addlw	1
  4458  0FC3  0085               	movwf	5
  4459  0FC4  0800               	movf	0,w	;code access
  4460  0FC5  00A8               	movwf	??_initMatrix^(0+128)
  4461  0FC6  0830               	movf	initMatrix@j^(0+128),w
  4462  0FC7  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4463  0FC8  0086               	movwf	6
  4464  0FC9  0187               	clrf	7
  4465  0FCA  0828               	movf	??_initMatrix^(0+128),w
  4466  0FCB  0081               	movwf	1
  4467                           
  4468                           ;main.c: 185:             data[j+1]= matrix_conf[k+1];
  4469  0FCC  082D               	movf	initMatrix@k^(0+128),w
  4470  0FCD  3EFE               	addlw	low ((_matrix_conf+1)| (0+32768))
  4471  0FCE  0084               	movwf	4
  4472  0FCF  3087               	movlw	high ((_matrix_conf+1)| (0+32768))
  4473  0FD0  1803               	skipnc
  4474  0FD1  3E01               	addlw	1
  4475  0FD2  0085               	movwf	5
  4476  0FD3  0800               	movf	0,w	;code access
  4477  0FD4  00A8               	movwf	??_initMatrix^(0+128)
  4478  0FD5  0830               	movf	initMatrix@j^(0+128),w
  4479  0FD6  3E01               	addlw	1
  4480  0FD7  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4481  0FD8  0086               	movwf	6
  4482  0FD9  0187               	clrf	7
  4483  0FDA  0828               	movf	??_initMatrix^(0+128),w
  4484  0FDB  0081               	movwf	1
  4485  0FDC                     l4415:
  4486                           
  4487                           ;main.c: 186:         }
  4488  0FDC  0830               	movf	initMatrix@j^(0+128),w
  4489  0FDD  3E02               	addlw	2
  4490  0FDE  00A8               	movwf	??_initMatrix^(0+128)
  4491  0FDF  0828               	movf	??_initMatrix^(0+128),w
  4492  0FE0  00B0               	movwf	initMatrix@j^(0+128)
  4493  0FE1                     l4417:
  4494  0FE1  3004               	movlw	4
  4495  0FE2  0230               	subwf	initMatrix@j^(0+128),w
  4496  0FE3  1C03               	skipc
  4497  0FE4  2FE6               	goto	u3151
  4498  0FE5  2FE7               	goto	u3150
  4499  0FE6                     u3151:
  4500  0FE6  2FBD               	goto	l4413
  4501  0FE7                     u3150:
  4502  0FE7                     l4419:
  4503                           
  4504                           ;main.c: 187:         k=k+2;
  4505  0FE7  082D               	movf	initMatrix@k^(0+128),w
  4506  0FE8  3E02               	addlw	2
  4507  0FE9  00A8               	movwf	??_initMatrix^(0+128)
  4508  0FEA  0828               	movf	??_initMatrix^(0+128),w
  4509  0FEB  00AD               	movwf	initMatrix@k^(0+128)
  4510  0FEC                     l4421:
  4511                           
  4512                           ;main.c: 188:         txSpi( data, 4);
  4513  0FEC  3004               	movlw	4
  4514  0FED  00A5               	movwf	txSpi@dataSize^(0+128)
  4515  0FEE  3000               	movlw	0
  4516  0FEF  00A6               	movwf	(txSpi@dataSize^(0+128)+1)
  4517  0FF0  30A9               	movlw	(low (initMatrix@data| 0))& (0+255)
  4518  0FF1  318C  244A  318F   	fcall	_txSpi
  4519  0FF4                     l4425:
  4520                           
  4521                           ;main.c: 192:     }
  4522  0FF4  3001               	movlw	1
  4523  0FF5  0021               	movlb	1	; select bank1
  4524  0FF6  00A8               	movwf	??_initMatrix^(0+128)
  4525  0FF7  0828               	movf	??_initMatrix^(0+128),w
  4526  0FF8  07AF               	addwf	initMatrix@i_1602^(0+128),f
  4527  0FF9                     l4427:
  4528  0FF9  3006               	movlw	6
  4529  0FFA  022F               	subwf	initMatrix@i_1602^(0+128),w
  4530  0FFB  1C03               	skipc
  4531  0FFC  2FFE               	goto	u3161
  4532  0FFD  2FFF               	goto	u3160
  4533  0FFE                     u3161:
  4534  0FFE  2FBC               	goto	l4407
  4535  0FFF                     u3160:
  4536  0FFF                     l841:
  4537  0FFF  0008               	return
  4538  1000                     __end_of_initMatrix:
  4539                           
  4540                           	psect	text5
  4541  0EAF                     __ptext5:	
  4542 ;; *************** function _chegadaS1 *****************
  4543 ;; Defined at:
  4544 ;;		line 235 in file "main.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4558 ;;      Params:         0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0
  4560 ;;      Temps:          0       0       1       0       0       0
  4561 ;;      Totals:         0       0       1       0       0       0
  4562 ;;Total ram usage:        1 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 10
  4565 ;; This function calls:
  4566 ;;		_TMR4_StartTimer
  4567 ;;		_matrixUpdate
  4568 ;; This function is called by:
  4569 ;;		_main
  4570 ;;		_IOCBF0_ISR
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574  0EAF                     _chegadaS1:	
  4575                           ;psect for function _chegadaS1
  4576                           
  4577                           
  4578                           ;Skip over the trampoline to the duplicate function for level 1
  4579  0EAF  1C7E               	btfss	int$flags,0
  4580  0EB0  2EB3               	goto	_chegadaS1$intlevel0
  4581  0EB1  318E  2E60         	ljmp	i1_chegadaS1
  4582  0EB3                     _chegadaS1$intlevel0:
  4583  0EB3                     l4429:	
  4584                           ;incstack = 0
  4585                           ; Regs used in _chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4586                           
  4587                           
  4588                           ;main.c: 237:     andarAtual = 0;
  4589  0EB3  0020               	movlb	0	; select bank0
  4590  0EB4  01D9               	clrf	_andarAtual
  4591  0EB5                     l4431:
  4592                           
  4593                           ;main.c: 241:     MatrixLed[0] = 0b01111110;
  4594  0EB5  307E               	movlw	126
  4595  0EB6  0021               	movlb	1	; select bank1
  4596  0EB7  00AC               	movwf	??_chegadaS1^(0+128)
  4597  0EB8  082C               	movf	??_chegadaS1^(0+128),w
  4598  0EB9  00B3               	movwf	_MatrixLed^(0+128)
  4599  0EBA                     l4433:
  4600                           
  4601                           ;main.c: 242:     MatrixLed[1] = 0b10000001;
  4602  0EBA  3081               	movlw	129
  4603  0EBB  00AC               	movwf	??_chegadaS1^(0+128)
  4604  0EBC  082C               	movf	??_chegadaS1^(0+128),w
  4605  0EBD  00B4               	movwf	(_MatrixLed^(0+128)+1)
  4606  0EBE                     l4435:
  4607                           
  4608                           ;main.c: 243:     MatrixLed[2] = 0b10000001;
  4609  0EBE  3081               	movlw	129
  4610  0EBF  00AC               	movwf	??_chegadaS1^(0+128)
  4611  0EC0  082C               	movf	??_chegadaS1^(0+128),w
  4612  0EC1  00B5               	movwf	(_MatrixLed^(0+128)+2)
  4613  0EC2                     l4437:
  4614                           
  4615                           ;main.c: 244:     MatrixLed[3] = 0b01111110;
  4616  0EC2  307E               	movlw	126
  4617  0EC3  00AC               	movwf	??_chegadaS1^(0+128)
  4618  0EC4  082C               	movf	??_chegadaS1^(0+128),w
  4619  0EC5  00B6               	movwf	(_MatrixLed^(0+128)+3)
  4620                           
  4621                           ;main.c: 245:     MatrixLed[4] = 0;
  4622  0EC6  01B7               	clrf	(_MatrixLed^(0+128)+4)
  4623  0EC7                     l4439:
  4624                           
  4625                           ;main.c: 246:     if(subindo){
  4626  0EC7  084B               	movf	_subindo^(0+128),w
  4627  0EC8  1903               	btfsc	3,2
  4628  0EC9  2ECB               	goto	u3171
  4629  0ECA  2ECC               	goto	u3170
  4630  0ECB                     u3171:
  4631  0ECB  2EDE               	goto	l4445
  4632  0ECC                     u3170:
  4633  0ECC                     l4441:
  4634                           
  4635                           ;main.c: 247:         MatrixLed[5] = 0b01100000;
  4636  0ECC  3060               	movlw	96
  4637  0ECD  00AC               	movwf	??_chegadaS1^(0+128)
  4638  0ECE  082C               	movf	??_chegadaS1^(0+128),w
  4639  0ECF  00B8               	movwf	(_MatrixLed^(0+128)+5)
  4640                           
  4641                           ;main.c: 248:         MatrixLed[6] = 0b11000000;
  4642  0ED0  30C0               	movlw	192
  4643  0ED1  00AC               	movwf	??_chegadaS1^(0+128)
  4644  0ED2  082C               	movf	??_chegadaS1^(0+128),w
  4645  0ED3  00B9               	movwf	(_MatrixLed^(0+128)+6)
  4646                           
  4647                           ;main.c: 249:         MatrixLed[7] = 0b01100000;
  4648  0ED4  3060               	movlw	96
  4649  0ED5  00AC               	movwf	??_chegadaS1^(0+128)
  4650  0ED6  082C               	movf	??_chegadaS1^(0+128),w
  4651  0ED7  00BA               	movwf	(_MatrixLed^(0+128)+7)
  4652  0ED8                     l4443:
  4653                           
  4654                           ;main.c: 250:         destinoSub = destinoSub & 0b11111110;
  4655  0ED8  083C               	movf	_destinoSub^(0+128),w
  4656  0ED9  39FE               	andlw	254
  4657  0EDA  00AC               	movwf	??_chegadaS1^(0+128)
  4658  0EDB  082C               	movf	??_chegadaS1^(0+128),w
  4659  0EDC  00BC               	movwf	_destinoSub^(0+128)
  4660                           
  4661                           ;main.c: 251:     }else{
  4662  0EDD  2EF3               	goto	l4451
  4663  0EDE                     l4445:
  4664                           
  4665                           ;main.c: 252:         MatrixLed[5] = 0b11000000;
  4666  0EDE  30C0               	movlw	192
  4667  0EDF  00AC               	movwf	??_chegadaS1^(0+128)
  4668  0EE0  082C               	movf	??_chegadaS1^(0+128),w
  4669  0EE1  00B8               	movwf	(_MatrixLed^(0+128)+5)
  4670                           
  4671                           ;main.c: 253:         MatrixLed[6] = 0b01100000;
  4672  0EE2  3060               	movlw	96
  4673  0EE3  00AC               	movwf	??_chegadaS1^(0+128)
  4674  0EE4  082C               	movf	??_chegadaS1^(0+128),w
  4675  0EE5  00B9               	movwf	(_MatrixLed^(0+128)+6)
  4676                           
  4677                           ;main.c: 254:         MatrixLed[7] = 0b11000000;
  4678  0EE6  30C0               	movlw	192
  4679  0EE7  00AC               	movwf	??_chegadaS1^(0+128)
  4680  0EE8  082C               	movf	??_chegadaS1^(0+128),w
  4681  0EE9  00BA               	movwf	(_MatrixLed^(0+128)+7)
  4682  0EEA                     l4447:
  4683                           
  4684                           ;main.c: 255:         destinoDesc = destinoDesc & 0b11111110;
  4685  0EEA  083B               	movf	_destinoDesc^(0+128),w
  4686  0EEB  39FE               	andlw	254
  4687  0EEC  00AC               	movwf	??_chegadaS1^(0+128)
  4688  0EED  082C               	movf	??_chegadaS1^(0+128),w
  4689  0EEE  00BB               	movwf	_destinoDesc^(0+128)
  4690                           
  4691                           ;main.c: 256:         mov = Repouso;
  4692  0EEF  01C1               	clrf	_mov^(0+128)
  4693  0EF0                     l4449:
  4694                           
  4695                           ;main.c: 258:         TMR4_StartTimer();
  4696  0EF0  318B  232E  318E   	fcall	_TMR4_StartTimer
  4697  0EF3                     l4451:
  4698                           
  4699                           ;main.c: 260:     matrixUpdate();
  4700  0EF3  318D  2570  318E   	fcall	_matrixUpdate
  4701  0EF6                     l4453:
  4702                           
  4703                           ;main.c: 262:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  4704  0EF6  0021               	movlb	1	; select bank1
  4705  0EF7  083A               	movf	(_MatrixLed^(0+128)+7),w
  4706  0EF8  043C               	iorwf	_destinoSub^(0+128),w
  4707  0EF9  00AC               	movwf	??_chegadaS1^(0+128)
  4708  0EFA  082C               	movf	??_chegadaS1^(0+128),w
  4709  0EFB  00BA               	movwf	(_MatrixLed^(0+128)+7)
  4710  0EFC                     l4455:
  4711                           
  4712                           ;main.c: 263:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  4713  0EFC  0839               	movf	(_MatrixLed^(0+128)+6),w
  4714  0EFD  043B               	iorwf	_destinoDesc^(0+128),w
  4715  0EFE  00AC               	movwf	??_chegadaS1^(0+128)
  4716  0EFF  082C               	movf	??_chegadaS1^(0+128),w
  4717  0F00  00B9               	movwf	(_MatrixLed^(0+128)+6)
  4718  0F01                     l865:
  4719  0F01  0008               	return
  4720  0F02                     __end_of_chegadaS1:
  4721                           
  4722                           	psect	text6
  4723  0D70                     __ptext6:	
  4724 ;; *************** function _matrixUpdate *****************
  4725 ;; Defined at:
  4726 ;;		line 156 in file "main.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  i               1    0        unsigned char 
  4731 ;;  i               1   11[BANK1 ] unsigned char 
  4732 ;;  index           1    0        unsigned char 
  4733 ;;  data            2    9[BANK1 ] unsigned char [2]
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4743 ;;      Params:         0       0       0       0       0       0
  4744 ;;      Locals:         0       0       3       0       0       0
  4745 ;;      Temps:          0       0       1       0       0       0
  4746 ;;      Totals:         0       0       4       0       0       0
  4747 ;;Total ram usage:        4 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 9
  4750 ;; This function calls:
  4751 ;;		_txSpi
  4752 ;; This function is called by:
  4753 ;;		_chegadaS1
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757  0D70                     _matrixUpdate:	
  4758                           ;psect for function _matrixUpdate
  4759                           
  4760  0D70                     l4285:	
  4761                           ;incstack = 0
  4762                           ; Regs used in _matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4763                           
  4764                           
  4765                           ;main.c: 159:         for(uint8_t i=8;i>0;i--){
  4766  0D70  3008               	movlw	8
  4767  0D71  0021               	movlb	1	; select bank1
  4768  0D72  00A8               	movwf	??_matrixUpdate^(0+128)
  4769  0D73  0828               	movf	??_matrixUpdate^(0+128),w
  4770  0D74  00AB               	movwf	matrixUpdate@i^(0+128)
  4771  0D75                     l4291:
  4772                           
  4773                           ;main.c: 160:             data[0] = i;
  4774  0D75  082B               	movf	matrixUpdate@i^(0+128),w
  4775  0D76  00A8               	movwf	??_matrixUpdate^(0+128)
  4776  0D77  0828               	movf	??_matrixUpdate^(0+128),w
  4777  0D78  00A9               	movwf	matrixUpdate@data^(0+128)
  4778  0D79                     l4293:
  4779                           
  4780                           ;main.c: 161:             data[1] = MatrixLed[i-1];
  4781  0D79  082B               	movf	matrixUpdate@i^(0+128),w
  4782  0D7A  3EB2               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
  4783  0D7B  0086               	movwf	6
  4784  0D7C  0187               	clrf	7
  4785  0D7D  0801               	movf	1,w
  4786  0D7E  00A8               	movwf	??_matrixUpdate^(0+128)
  4787  0D7F  0828               	movf	??_matrixUpdate^(0+128),w
  4788  0D80  00AA               	movwf	(matrixUpdate@data^(0+128)+1)
  4789  0D81                     l4295:
  4790                           
  4791                           ;main.c: 162:             txSpi(data, 2);
  4792  0D81  3002               	movlw	2
  4793  0D82  00A5               	movwf	txSpi@dataSize^(0+128)
  4794  0D83  3000               	movlw	0
  4795  0D84  00A6               	movwf	(txSpi@dataSize^(0+128)+1)
  4796  0D85  30A9               	movlw	(low (matrixUpdate@data| 0))& (0+255)
  4797  0D86  318C  244A  318D   	fcall	_txSpi
  4798  0D89                     l4297:
  4799                           
  4800                           ;main.c: 163:         }
  4801  0D89  3001               	movlw	1
  4802  0D8A  0021               	movlb	1	; select bank1
  4803  0D8B  02AB               	subwf	matrixUpdate@i^(0+128),f
  4804  0D8C                     l4299:
  4805  0D8C  082B               	movf	matrixUpdate@i^(0+128),w
  4806  0D8D  1D03               	btfss	3,2
  4807  0D8E  2D90               	goto	u3001
  4808  0D8F  2D91               	goto	u3000
  4809  0D90                     u3001:
  4810  0D90  2D75               	goto	l4291
  4811  0D91                     u3000:
  4812  0D91                     l831:
  4813  0D91  0008               	return
  4814  0D92                     __end_of_matrixUpdate:
  4815                           
  4816                           	psect	text7
  4817  0C4A                     __ptext7:	
  4818 ;; *************** function _txSpi *****************
  4819 ;; Defined at:
  4820 ;;		line 148 in file "main.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  data            1    wreg     PTR unsigned char 
  4823 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4824 ;;  dataSize        2    5[BANK1 ] unsigned int 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  data            1    7[BANK1 ] PTR unsigned char 
  4827 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4837 ;;      Params:         0       0       2       0       0       0
  4838 ;;      Locals:         0       0       1       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0
  4840 ;;      Totals:         0       0       3       0       0       0
  4841 ;;Total ram usage:        3 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 8
  4844 ;; This function calls:
  4845 ;;		_SPI1_ExchangeBlock
  4846 ;; This function is called by:
  4847 ;;		_matrixUpdate
  4848 ;;		_initMatrix
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852  0C4A                     _txSpi:	
  4853                           ;psect for function _txSpi
  4854                           
  4855                           
  4856                           ;incstack = 0
  4857                           ; Regs used in _txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4858                           ;txSpi@data stored from wreg
  4859  0C4A  0021               	movlb	1	; select bank1
  4860  0C4B  00A7               	movwf	txSpi@data^(0+128)
  4861  0C4C                     l818:	
  4862                           ;main.c: 149:     do { LATBbits.LATB1 = 0; } while(0);
  4863                           
  4864  0C4C  0022               	movlb	2	; select bank2
  4865  0C4D  108D               	bcf	13,1	;volatile
  4866  0C4E                     l4119:
  4867                           
  4868                           ;main.c: 150:     SPI1_ExchangeBlock(data,dataSize);
  4869  0C4E  0021               	movlb	1	; select bank1
  4870  0C4F  0826               	movf	(txSpi@dataSize+1)^(0+128),w
  4871  0C50  00A1               	movwf	(SPI1_ExchangeBlock@blockSize+1)^(0+128)
  4872  0C51  0825               	movf	txSpi@dataSize^(0+128),w
  4873  0C52  00A0               	movwf	SPI1_ExchangeBlock@blockSize^(0+128)
  4874  0C53  0827               	movf	txSpi@data^(0+128),w
  4875  0C54  318E  2605  318C   	fcall	_SPI1_ExchangeBlock
  4876  0C57                     l4121:
  4877  0C57  0022               	movlb	2	; select bank2
  4878  0C58  148D               	bsf	13,1	;volatile
  4879  0C59                     l822:
  4880  0C59  0008               	return
  4881  0C5A                     __end_of_txSpi:
  4882                           
  4883                           	psect	text8
  4884  0E05                     __ptext8:	
  4885 ;; *************** function _SPI1_ExchangeBlock *****************
  4886 ;; Defined at:
  4887 ;;		line 100 in file "mcc_generated_files/spi1.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  block           1    wreg     PTR void 
  4890 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4891 ;;  blockSize       2    0[BANK1 ] unsigned int 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  block           1    3[BANK1 ] PTR void 
  4894 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4895 ;;  data            1    4[BANK1 ] PTR unsigned char 
  4896 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4906 ;;      Params:         0       0       2       0       0       0
  4907 ;;      Locals:         0       0       2       0       0       0
  4908 ;;      Temps:          0       0       1       0       0       0
  4909 ;;      Totals:         0       0       5       0       0       0
  4910 ;;Total ram usage:        5 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 7
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_txSpi
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920  0E05                     _SPI1_ExchangeBlock:	
  4921                           ;psect for function _SPI1_ExchangeBlock
  4922                           
  4923                           
  4924                           ;incstack = 0
  4925                           ; Regs used in _SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4926                           ;SPI1_ExchangeBlock@block stored from wreg
  4927  0E05  0021               	movlb	1	; select bank1
  4928  0E06  00A3               	movwf	SPI1_ExchangeBlock@block^(0+128)
  4929  0E07                     l4093:
  4930                           
  4931                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  4932  0E07  0823               	movf	SPI1_ExchangeBlock@block^(0+128),w
  4933  0E08  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4934  0E09  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4935  0E0A  00A4               	movwf	SPI1_ExchangeBlock@data^(0+128)
  4936                           
  4937                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4938  0E0B  2E25               	goto	l4101
  4939  0E0C                     l4095:
  4940                           
  4941                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  4942  0E0C  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4943  0E0D  0086               	movwf	6
  4944  0E0E  0187               	clrf	7
  4945  0E0F  0801               	movf	1,w
  4946  0E10  0024               	movlb	4	; select bank4
  4947  0E11  0091               	movwf	17	;volatile
  4948  0E12                     l444:	
  4949                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  4950                           
  4951  0E12  0020               	movlb	0	; select bank0
  4952  0E13  1D91               	btfss	17,3	;volatile
  4953  0E14  2E16               	goto	u2971
  4954  0E15  2E17               	goto	u2970
  4955  0E16                     u2971:
  4956  0E16  2E12               	goto	l444
  4957  0E17                     u2970:
  4958  0E17                     l446:
  4959                           
  4960                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  4961  0E17  1191               	bcf	17,3	;volatile
  4962  0E18                     l4097:
  4963                           
  4964                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  4965  0E18  0024               	movlb	4	; select bank4
  4966  0E19  0811               	movf	17,w	;volatile
  4967  0E1A  0021               	movlb	1	; select bank1
  4968  0E1B  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4969  0E1C  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4970  0E1D  0086               	movwf	6
  4971  0E1E  0187               	clrf	7
  4972  0E1F  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4973  0E20  0081               	movwf	1
  4974  0E21                     l4099:
  4975  0E21  3001               	movlw	1
  4976  0E22  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4977  0E23  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4978  0E24  07A4               	addwf	SPI1_ExchangeBlock@data^(0+128),f
  4979  0E25                     l4101:
  4980                           
  4981                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4982  0E25  3001               	movlw	1
  4983  0E26  02A0               	subwf	SPI1_ExchangeBlock@blockSize^(0+128),f
  4984  0E27  3000               	movlw	0
  4985  0E28  3BA1               	subwfb	(SPI1_ExchangeBlock@blockSize+1)^(0+128),f
  4986  0E29  0A20               	incf	SPI1_ExchangeBlock@blockSize^(0+128),w
  4987  0E2A  1D03               	skipz
  4988  0E2B  2E30               	goto	u2981
  4989  0E2C  0A21               	incf	(SPI1_ExchangeBlock@blockSize+1)^(0+128),w
  4990  0E2D  1D03               	btfss	3,2
  4991  0E2E  2E30               	goto	u2981
  4992  0E2F  2E31               	goto	u2980
  4993  0E30                     u2981:
  4994  0E30  2E0C               	goto	l4095
  4995  0E31                     u2980:
  4996  0E31                     l448:
  4997  0E31  0008               	return
  4998  0E32                     __end_of_SPI1_ExchangeBlock:
  4999                           
  5000                           	psect	text9
  5001  0B2E                     __ptext9:	
  5002 ;; *************** function _TMR4_StartTimer *****************
  5003 ;; Defined at:
  5004 ;;		line 87 in file "mcc_generated_files/tmr4.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		None
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5018 ;;      Params:         0       0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0
  5020 ;;      Temps:          0       0       0       0       0       0
  5021 ;;      Totals:         0       0       0       0       0       0
  5022 ;;Total ram usage:        0 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 7
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_chegadaS1
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032  0B2E                     _TMR4_StartTimer:	
  5033                           ;psect for function _TMR4_StartTimer
  5034                           
  5035  0B2E                     l4281:	
  5036                           ;incstack = 0
  5037                           ; Regs used in _TMR4_StartTimer: []
  5038                           
  5039                           
  5040                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
  5041  0B2E  0028               	movlb	8	; select bank8
  5042  0B2F  1517               	bsf	23,2	;volatile
  5043  0B30                     l673:
  5044  0B30  0008               	return
  5045  0B31                     __end_of_TMR4_StartTimer:
  5046                           
  5047                           	psect	text10
  5048  0E32                     __ptext10:	
  5049 ;; *************** function _SYSTEM_Initialize *****************
  5050 ;; Defined at:
  5051 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;		None
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      void 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0, pclath, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5065 ;;      Params:         0       0       0       0       0       0
  5066 ;;      Locals:         0       0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0
  5068 ;;      Totals:         0       0       0       0       0       0
  5069 ;;Total ram usage:        0 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; Hardware stack levels required when called: 9
  5072 ;; This function calls:
  5073 ;;		_ADC_Initialize
  5074 ;;		_CCP4_Initialize
  5075 ;;		_CMP1_Initialize
  5076 ;;		_CMP2_Initialize
  5077 ;;		_EUSART_Initialize
  5078 ;;		_FVR_Initialize
  5079 ;;		_OSCILLATOR_Initialize
  5080 ;;		_PIN_MANAGER_Initialize
  5081 ;;		_PWM3_Initialize
  5082 ;;		_SPI1_Initialize
  5083 ;;		_TMR0_Initialize
  5084 ;;		_TMR1_Initialize
  5085 ;;		_TMR2_Initialize
  5086 ;;		_TMR4_Initialize
  5087 ;;		_WDT_Initialize
  5088 ;; This function is called by:
  5089 ;;		_main
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093  0E32                     _SYSTEM_Initialize:	
  5094                           ;psect for function _SYSTEM_Initialize
  5095                           
  5096  0E32                     l4327:	
  5097                           ;incstack = 0
  5098                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5099                           
  5100                           
  5101                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  5102  0E32  318B  23C4  318E   	fcall	_SPI1_Initialize
  5103                           
  5104                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5105  0E35  3187  27CC  318E   	fcall	_PIN_MANAGER_Initialize
  5106                           
  5107                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5108  0E38  318B  236D  318E   	fcall	_OSCILLATOR_Initialize
  5109                           
  5110                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  5111  0E3B  318B  2335  318E   	fcall	_WDT_Initialize
  5112                           
  5113                           ;mcc_generated_files/mcc.c: 57:     CMP2_Initialize();
  5114  0E3E  318B  23DB  318E   	fcall	_CMP2_Initialize
  5115                           
  5116                           ;mcc_generated_files/mcc.c: 58:     FVR_Initialize();
  5117  0E41  318B  2331  318E   	fcall	_FVR_Initialize
  5118                           
  5119                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  5120  0E44  318C  247D  318E   	fcall	_TMR4_Initialize
  5121                           
  5122                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  5123  0E47  318B  237C  318E   	fcall	_TMR2_Initialize
  5124                           
  5125                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  5126  0E4A  318C  24FE  318E   	fcall	_TMR0_Initialize
  5127                           
  5128                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  5129  0E4D  318B  23CF  318E   	fcall	_CMP1_Initialize
  5130                           
  5131                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  5132  0E50  318B  2374  318E   	fcall	_ADC_Initialize
  5133                           
  5134                           ;mcc_generated_files/mcc.c: 64:     CCP4_Initialize();
  5135  0E53  318C  246B  318E   	fcall	_CCP4_Initialize
  5136                           
  5137                           ;mcc_generated_files/mcc.c: 65:     PWM3_Initialize();
  5138  0E56  318B  239F  318E   	fcall	_PWM3_Initialize
  5139                           
  5140                           ;mcc_generated_files/mcc.c: 66:     TMR1_Initialize();
  5141  0E59  318C  240F  318E   	fcall	_TMR1_Initialize
  5142                           
  5143                           ;mcc_generated_files/mcc.c: 67:     EUSART_Initialize();
  5144  0E5C  318D  25B5  318E   	fcall	_EUSART_Initialize
  5145  0E5F                     l263:
  5146  0E5F  0008               	return
  5147  0E60                     __end_of_SYSTEM_Initialize:
  5148                           
  5149                           	psect	text11
  5150  0B35                     __ptext11:	
  5151 ;; *************** function _WDT_Initialize *****************
  5152 ;; Defined at:
  5153 ;;		line 80 in file "mcc_generated_files/mcc.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;		None
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5167 ;;      Params:         0       0       0       0       0       0
  5168 ;;      Locals:         0       0       0       0       0       0
  5169 ;;      Temps:          0       0       0       0       0       0
  5170 ;;      Totals:         0       0       0       0       0       0
  5171 ;;Total ram usage:        0 bytes
  5172 ;; Hardware stack levels used: 1
  5173 ;; Hardware stack levels required when called: 7
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_SYSTEM_Initialize
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181  0B35                     _WDT_Initialize:	
  5182                           ;psect for function _WDT_Initialize
  5183                           
  5184  0B35                     l4203:	
  5185                           ;incstack = 0
  5186                           ; Regs used in _WDT_Initialize: [wreg]
  5187                           
  5188                           
  5189                           ;mcc_generated_files/mcc.c: 83:     WDTCON = 0x16;
  5190  0B35  3016               	movlw	22
  5191  0B36  0021               	movlb	1	; select bank1
  5192  0B37  0097               	movwf	23	;volatile
  5193  0B38                     l269:
  5194  0B38  0008               	return
  5195  0B39                     __end_of_WDT_Initialize:
  5196                           
  5197                           	psect	text12
  5198  0C7D                     __ptext12:	
  5199 ;; *************** function _TMR4_Initialize *****************
  5200 ;; Defined at:
  5201 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0, pclath, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5215 ;;      Params:         0       0       0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0
  5218 ;;      Totals:         0       0       0       0       0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used: 1
  5221 ;; Hardware stack levels required when called: 8
  5222 ;; This function calls:
  5223 ;;		_TMR4_SetInterruptHandler
  5224 ;; This function is called by:
  5225 ;;		_SYSTEM_Initialize
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229  0C7D                     _TMR4_Initialize:	
  5230                           ;psect for function _TMR4_Initialize
  5231                           
  5232  0C7D                     l4207:	
  5233                           ;incstack = 0
  5234                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5235                           
  5236                           
  5237                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF3;
  5238  0C7D  30F3               	movlw	243
  5239  0C7E  0028               	movlb	8	; select bank8
  5240  0C7F  0096               	movwf	22	;volatile
  5241  0C80                     l4209:
  5242                           
  5243                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5244  0C80  0195               	clrf	21	;volatile
  5245  0C81                     l4211:
  5246                           
  5247                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  5248  0C81  0020               	movlb	0	; select bank0
  5249  0C82  1093               	bcf	19,1	;volatile
  5250  0C83                     l4213:
  5251                           
  5252                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  5253  0C83  0021               	movlb	1	; select bank1
  5254  0C84  1493               	bsf	19,1	;volatile
  5255  0C85                     l4215:
  5256                           
  5257                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5258  0C85  3002               	movlw	low _TMR4_DefaultInterruptHandler
  5259  0C86  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  5260  0C87  3000               	movlw	high _TMR4_DefaultInterruptHandler
  5261  0C88  00A1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5262  0C89  318B  23B1  318C   	fcall	_TMR4_SetInterruptHandler
  5263  0C8C                     l4217:
  5264                           
  5265                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x7F;
  5266  0C8C  307F               	movlw	127
  5267  0C8D  0028               	movlb	8	; select bank8
  5268  0C8E  0097               	movwf	23	;volatile
  5269  0C8F                     l670:
  5270  0C8F  0008               	return
  5271  0C90                     __end_of_TMR4_Initialize:
  5272                           
  5273                           	psect	text13
  5274  0BB1                     __ptext13:	
  5275 ;; *************** function _TMR4_SetInterruptHandler *****************
  5276 ;; Defined at:
  5277 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5280 ;;		 -> controleMovimento(1), TMR4_DefaultInterruptHandler(1), 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5292 ;;      Params:         0       0       2       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0
  5295 ;;      Totals:         0       0       2       0       0       0
  5296 ;;Total ram usage:        2 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 7
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_TMR4_Initialize
  5303 ;;		_main
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307  0BB1                     _TMR4_SetInterruptHandler:	
  5308                           ;psect for function _TMR4_SetInterruptHandler
  5309                           
  5310  0BB1                     l4117:	
  5311                           ;incstack = 0
  5312                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  5313                           
  5314                           
  5315                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  5316  0BB1  0021               	movlb	1	; select bank1
  5317  0BB2  0821               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5318  0BB3  0020               	movlb	0	; select bank0
  5319  0BB4  00DF               	movwf	_TMR4_InterruptHandler+1
  5320  0BB5  0021               	movlb	1	; select bank1
  5321  0BB6  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  5322  0BB7  0020               	movlb	0	; select bank0
  5323  0BB8  00DE               	movwf	_TMR4_InterruptHandler
  5324  0BB9                     l698:
  5325  0BB9  0008               	return
  5326  0BBA                     __end_of_TMR4_SetInterruptHandler:
  5327                           
  5328                           	psect	text14
  5329  0B7C                     __ptext14:	
  5330 ;; *************** function _TMR2_Initialize *****************
  5331 ;; Defined at:
  5332 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;		None
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;		None
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5346 ;;      Params:         0       0       0       0       0       0
  5347 ;;      Locals:         0       0       0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0       0
  5349 ;;      Totals:         0       0       0       0       0       0
  5350 ;;Total ram usage:        0 bytes
  5351 ;; Hardware stack levels used: 1
  5352 ;; Hardware stack levels required when called: 7
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_SYSTEM_Initialize
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360  0B7C                     _TMR2_Initialize:	
  5361                           ;psect for function _TMR2_Initialize
  5362                           
  5363  0B7C                     l4219:	
  5364                           ;incstack = 0
  5365                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5366                           
  5367                           
  5368                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  5369  0B7C  30FF               	movlw	255
  5370  0B7D  0020               	movlb	0	; select bank0
  5371  0B7E  009B               	movwf	27	;volatile
  5372  0B7F                     l4221:
  5373                           
  5374                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5375  0B7F  019A               	clrf	26	;volatile
  5376  0B80                     l4223:
  5377                           
  5378                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5379  0B80  1091               	bcf	17,1	;volatile
  5380  0B81                     l4225:
  5381                           
  5382                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  5383  0B81  3004               	movlw	4
  5384  0B82  009C               	movwf	28	;volatile
  5385  0B83                     l558:
  5386  0B83  0008               	return
  5387  0B84                     __end_of_TMR2_Initialize:
  5388                           
  5389                           	psect	text15
  5390  0C0F                     __ptext15:	
  5391 ;; *************** function _TMR1_Initialize *****************
  5392 ;; Defined at:
  5393 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;		None
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      void 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5407 ;;      Params:         0       0       0       0       0       0
  5408 ;;      Locals:         0       0       0       0       0       0
  5409 ;;      Temps:          0       0       0       0       0       0
  5410 ;;      Totals:         0       0       0       0       0       0
  5411 ;;Total ram usage:        0 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; Hardware stack levels required when called: 7
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_SYSTEM_Initialize
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421  0C0F                     _TMR1_Initialize:	
  5422                           ;psect for function _TMR1_Initialize
  5423                           
  5424  0C0F                     l4257:	
  5425                           ;incstack = 0
  5426                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  5427                           
  5428                           
  5429                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5430  0C0F  0020               	movlb	0	; select bank0
  5431  0C10  0199               	clrf	25	;volatile
  5432  0C11                     l4259:
  5433                           
  5434                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  5435  0C11  300B               	movlw	11
  5436  0C12  0097               	movwf	23	;volatile
  5437  0C13                     l4261:
  5438                           
  5439                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  5440  0C13  30DC               	movlw	220
  5441  0C14  0096               	movwf	22	;volatile
  5442  0C15                     l4263:
  5443                           
  5444                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  5445  0C15  1011               	bcf	17,0	;volatile
  5446  0C16                     l4265:
  5447                           
  5448                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5449  0C16  0817               	movf	23,w	;volatile
  5450  0C17  00E5               	movwf	_timer1ReloadVal+1	;volatile
  5451  0C18  0816               	movf	22,w	;volatile
  5452  0C19  00E4               	movwf	_timer1ReloadVal	;volatile
  5453  0C1A                     l4267:
  5454                           
  5455                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  5456  0C1A  3031               	movlw	49
  5457  0C1B  0098               	movwf	24	;volatile
  5458  0C1C                     l519:
  5459  0C1C  0008               	return
  5460  0C1D                     __end_of_TMR1_Initialize:
  5461                           
  5462                           	psect	text16
  5463  0CFE                     __ptext16:	
  5464 ;; *************** function _TMR0_Initialize *****************
  5465 ;; Defined at:
  5466 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;		None
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;		None
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0, pclath, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5480 ;;      Params:         0       0       0       0       0       0
  5481 ;;      Locals:         0       0       0       0       0       0
  5482 ;;      Temps:          0       0       1       0       0       0
  5483 ;;      Totals:         0       0       1       0       0       0
  5484 ;;Total ram usage:        1 bytes
  5485 ;; Hardware stack levels used: 1
  5486 ;; Hardware stack levels required when called: 8
  5487 ;; This function calls:
  5488 ;;		_TMR0_SetInterruptHandler
  5489 ;; This function is called by:
  5490 ;;		_SYSTEM_Initialize
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494  0CFE                     _TMR0_Initialize:	
  5495                           ;psect for function _TMR0_Initialize
  5496                           
  5497  0CFE                     l4227:	
  5498                           ;incstack = 0
  5499                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5500                           
  5501                           
  5502                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  5503  0CFE  0021               	movlb	1	; select bank1
  5504  0CFF  0815               	movf	21,w	;volatile
  5505  0D00  39C0               	andlw	192
  5506  0D01  3817               	iorlw	23
  5507  0D02  0095               	movwf	21	;volatile
  5508  0D03                     l4229:
  5509                           
  5510                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  5511  0D03  3016               	movlw	22
  5512  0D04  0020               	movlb	0	; select bank0
  5513  0D05  0095               	movwf	21	;volatile
  5514  0D06                     l4231:
  5515                           
  5516                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  5517  0D06  3016               	movlw	22
  5518  0D07  0021               	movlb	1	; select bank1
  5519  0D08  00A2               	movwf	??_TMR0_Initialize^(0+128)
  5520  0D09  0822               	movf	??_TMR0_Initialize^(0+128),w
  5521  0D0A  0020               	movlb	0	; select bank0
  5522  0D0B  00EA               	movwf	_timer0ReloadVal	;volatile
  5523  0D0C                     l4233:
  5524                           
  5525                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  5526  0D0C  110B               	bcf	11,2	;volatile
  5527  0D0D                     l4235:
  5528                           
  5529                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  5530  0D0D  168B               	bsf	11,5	;volatile
  5531  0D0E                     l4237:
  5532                           
  5533                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5534  0D0E  3027               	movlw	low _TMR0_DefaultInterruptHandler
  5535  0D0F  0021               	movlb	1	; select bank1
  5536  0D10  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  5537  0D11  300B               	movlw	high _TMR0_DefaultInterruptHandler
  5538  0D12  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5539  0D13  318B  23A8  318C   	fcall	_TMR0_SetInterruptHandler
  5540  0D16                     l596:
  5541  0D16  0008               	return
  5542  0D17                     __end_of_TMR0_Initialize:
  5543                           
  5544                           	psect	text17
  5545  0BA8                     __ptext17:	
  5546 ;; *************** function _TMR0_SetInterruptHandler *****************
  5547 ;; Defined at:
  5548 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5551 ;;		 -> sendInfo(1), TMR0_DefaultInterruptHandler(1), 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5563 ;;      Params:         0       0       2       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0
  5566 ;;      Totals:         0       0       2       0       0       0
  5567 ;;Total ram usage:        2 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 7
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_TMR0_Initialize
  5574 ;;		_main
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578  0BA8                     _TMR0_SetInterruptHandler:	
  5579                           ;psect for function _TMR0_SetInterruptHandler
  5580                           
  5581  0BA8                     l4113:	
  5582                           ;incstack = 0
  5583                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5584                           
  5585                           
  5586                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  5587  0BA8  0021               	movlb	1	; select bank1
  5588  0BA9  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5589  0BAA  0020               	movlb	0	; select bank0
  5590  0BAB  00E3               	movwf	_TMR0_InterruptHandler+1
  5591  0BAC  0021               	movlb	1	; select bank1
  5592  0BAD  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  5593  0BAE  0020               	movlb	0	; select bank0
  5594  0BAF  00E2               	movwf	_TMR0_InterruptHandler
  5595  0BB0                     l618:
  5596  0BB0  0008               	return
  5597  0BB1                     __end_of_TMR0_SetInterruptHandler:
  5598                           
  5599                           	psect	text18
  5600  0BC4                     __ptext18:	
  5601 ;; *************** function _SPI1_Initialize *****************
  5602 ;; Defined at:
  5603 ;;		line 62 in file "mcc_generated_files/spi1.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5617 ;;      Params:         0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0
  5620 ;;      Totals:         0       0       0       0       0       0
  5621 ;;Total ram usage:        0 bytes
  5622 ;; Hardware stack levels used: 1
  5623 ;; Hardware stack levels required when called: 7
  5624 ;; This function calls:
  5625 ;;		Nothing
  5626 ;; This function is called by:
  5627 ;;		_SYSTEM_Initialize
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631  0BC4                     _SPI1_Initialize:	
  5632                           ;psect for function _SPI1_Initialize
  5633                           
  5634  0BC4                     l4187:	
  5635                           ;incstack = 0
  5636                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  5637                           
  5638                           
  5639                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  5640  0BC4  3040               	movlw	64
  5641  0BC5  0024               	movlb	4	; select bank4
  5642  0BC6  0094               	movwf	20	;volatile
  5643  0BC7                     l4189:
  5644                           
  5645                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  5646  0BC7  0195               	clrf	21	;volatile
  5647  0BC8                     l4191:
  5648                           
  5649                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  5650  0BC8  3001               	movlw	1
  5651  0BC9  0092               	movwf	18	;volatile
  5652  0BCA                     l4193:
  5653                           
  5654                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  5655  0BCA  0021               	movlb	1	; select bank1
  5656  0BCB  120D               	bcf	13,4	;volatile
  5657  0BCC                     l4195:
  5658                           
  5659                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  5660  0BCC  0024               	movlb	4	; select bank4
  5661  0BCD  1295               	bcf	21,5	;volatile
  5662  0BCE                     l426:
  5663  0BCE  0008               	return
  5664  0BCF                     __end_of_SPI1_Initialize:
  5665                           
  5666                           	psect	text19
  5667  0B9F                     __ptext19:	
  5668 ;; *************** function _PWM3_Initialize *****************
  5669 ;; Defined at:
  5670 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      void 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5684 ;;      Params:         0       0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0
  5687 ;;      Totals:         0       0       0       0       0       0
  5688 ;;Total ram usage:        0 bytes
  5689 ;; Hardware stack levels used: 1
  5690 ;; Hardware stack levels required when called: 7
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_SYSTEM_Initialize
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698  0B9F                     _PWM3_Initialize:	
  5699                           ;psect for function _PWM3_Initialize
  5700                           
  5701  0B9F                     l4123:	
  5702                           ;incstack = 0
  5703                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  5704                           
  5705                           
  5706                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  5707  0B9F  300C               	movlw	12
  5708  0BA0  0026               	movlb	6	; select bank6
  5709  0BA1  0093               	movwf	19	;volatile
  5710  0BA2                     l4125:
  5711                           
  5712                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  5713  0BA2  0191               	clrf	17	;volatile
  5714  0BA3                     l4127:
  5715                           
  5716                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  5717  0BA3  0192               	clrf	18	;volatile
  5718  0BA4                     l4129:
  5719                           
  5720                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  5721  0BA4  30CF               	movlw	-49
  5722  0BA5  0025               	movlb	5	; select bank5
  5723  0BA6  059E               	andwf	30,f	;volatile
  5724  0BA7                     l11:
  5725  0BA7  0008               	return
  5726  0BA8                     __end_of_PWM3_Initialize:
  5727                           
  5728                           	psect	text20
  5729  07CC                     __ptext20:	
  5730 ;; *************** function _PIN_MANAGER_Initialize *****************
  5731 ;; Defined at:
  5732 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, status,2, status,0, pclath, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5746 ;;      Params:         0       0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0       0
  5749 ;;      Totals:         0       0       0       0       0       0
  5750 ;;Total ram usage:        0 bytes
  5751 ;; Hardware stack levels used: 1
  5752 ;; Hardware stack levels required when called: 8
  5753 ;; This function calls:
  5754 ;;		_IOCBF0_SetInterruptHandler
  5755 ;;		_IOCBF3_SetInterruptHandler
  5756 ;; This function is called by:
  5757 ;;		_SYSTEM_Initialize
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761  07CC                     _PIN_MANAGER_Initialize:	
  5762                           ;psect for function _PIN_MANAGER_Initialize
  5763                           
  5764  07CC                     l4147:	
  5765                           ;incstack = 0
  5766                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5767                           
  5768                           
  5769                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  5770  07CC  0022               	movlb	2	; select bank2
  5771  07CD  018C               	clrf	12	;volatile
  5772                           
  5773                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  5774  07CE  018D               	clrf	13	;volatile
  5775  07CF                     l4149:
  5776                           
  5777                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  5778  07CF  3037               	movlw	55
  5779  07D0  0021               	movlb	1	; select bank1
  5780  07D1  008C               	movwf	12	;volatile
  5781  07D2                     l4151:
  5782                           
  5783                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xED;
  5784  07D2  30ED               	movlw	237
  5785  07D3  008D               	movwf	13	;volatile
  5786  07D4                     l4153:
  5787                           
  5788                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5789  07D4  30C0               	movlw	192
  5790  07D5  0023               	movlb	3	; select bank3
  5791  07D6  008D               	movwf	13	;volatile
  5792  07D7                     l4155:
  5793                           
  5794                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0F;
  5795  07D7  300F               	movlw	15
  5796  07D8  008C               	movwf	12	;volatile
  5797  07D9                     l4157:
  5798                           
  5799                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x09;
  5800  07D9  3009               	movlw	9
  5801  07DA  0024               	movlb	4	; select bank4
  5802  07DB  008D               	movwf	13	;volatile
  5803  07DC                     l4159:
  5804                           
  5805                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5806  07DC  018C               	clrf	12	;volatile
  5807  07DD                     l4161:
  5808                           
  5809                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 0;
  5810  07DD  0021               	movlb	1	; select bank1
  5811  07DE  1395               	bcf	21,7	;volatile
  5812                           
  5813                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  5814  07DF  30C0               	movlw	192
  5815  07E0  0022               	movlb	2	; select bank2
  5816  07E1  009D               	movwf	29	;volatile
  5817                           
  5818                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  5819  07E2  3001               	movlw	1
  5820  07E3  009E               	movwf	30	;volatile
  5821  07E4                     l4163:
  5822                           
  5823                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  5824  07E4  0027               	movlb	7	; select bank7
  5825  07E5  1016               	bcf	22,0	;volatile
  5826  07E6                     l4165:
  5827                           
  5828                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  5829  07E6  1196               	bcf	22,3	;volatile
  5830  07E7                     l4167:
  5831                           
  5832                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  5833  07E7  1415               	bsf	21,0	;volatile
  5834  07E8                     l4169:
  5835                           
  5836                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  5837  07E8  1595               	bsf	21,3	;volatile
  5838  07E9                     l4171:
  5839                           
  5840                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 0;
  5841  07E9  1014               	bcf	20,0	;volatile
  5842  07EA                     l4173:
  5843                           
  5844                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 0;
  5845  07EA  1194               	bcf	20,3	;volatile
  5846  07EB                     l4175:
  5847                           
  5848                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  5849  07EB  3025               	movlw	low _IOCBF0_DefaultInterruptHandler
  5850  07EC  0021               	movlb	1	; select bank1
  5851  07ED  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  5852  07EE  300B               	movlw	high _IOCBF0_DefaultInterruptHandler
  5853  07EF  00A1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5854  07F0  318B  238D  3187   	fcall	_IOCBF0_SetInterruptHandler
  5855  07F3                     l4177:
  5856                           
  5857                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  5858  07F3  3026               	movlw	low _IOCBF3_DefaultInterruptHandler
  5859  07F4  0021               	movlb	1	; select bank1
  5860  07F5  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  5861  07F6  300B               	movlw	high _IOCBF3_DefaultInterruptHandler
  5862  07F7  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5863  07F8  318B  2396  3187   	fcall	_IOCBF3_SetInterruptHandler
  5864  07FB                     l4179:
  5865                           
  5866                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  5867  07FB  158B               	bsf	11,3	;volatile
  5868  07FC                     l197:
  5869  07FC  0008               	return
  5870  07FD                     __end_of_PIN_MANAGER_Initialize:
  5871                           
  5872                           	psect	text21
  5873  0B96                     __ptext21:	
  5874 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  5875 ;; Defined at:
  5876 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5879 ;;		 -> chegadaS2(1), IOCBF3_DefaultInterruptHandler(1), 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5891 ;;      Params:         0       0       2       0       0       0
  5892 ;;      Locals:         0       0       0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0
  5894 ;;      Totals:         0       0       2       0       0       0
  5895 ;;Total ram usage:        2 bytes
  5896 ;; Hardware stack levels used: 1
  5897 ;; Hardware stack levels required when called: 7
  5898 ;; This function calls:
  5899 ;;		Nothing
  5900 ;; This function is called by:
  5901 ;;		_PIN_MANAGER_Initialize
  5902 ;;		_main
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906  0B96                     _IOCBF3_SetInterruptHandler:	
  5907                           ;psect for function _IOCBF3_SetInterruptHandler
  5908                           
  5909  0B96                     l4105:	
  5910                           ;incstack = 0
  5911                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  5912                           
  5913                           
  5914                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  5915  0B96  0021               	movlb	1	; select bank1
  5916  0B97  0821               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5917  0B98  0020               	movlb	0	; select bank0
  5918  0B99  00E7               	movwf	_IOCBF3_InterruptHandler+1
  5919  0B9A  0021               	movlb	1	; select bank1
  5920  0B9B  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  5921  0B9C  0020               	movlb	0	; select bank0
  5922  0B9D  00E6               	movwf	_IOCBF3_InterruptHandler
  5923  0B9E                     l219:
  5924  0B9E  0008               	return
  5925  0B9F                     __end_of_IOCBF3_SetInterruptHandler:
  5926                           
  5927                           	psect	text22
  5928  0B8D                     __ptext22:	
  5929 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  5930 ;; Defined at:
  5931 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5934 ;;		 -> chegadaS1(1), IOCBF0_DefaultInterruptHandler(1), 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		wreg
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5946 ;;      Params:         0       0       2       0       0       0
  5947 ;;      Locals:         0       0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0
  5949 ;;      Totals:         0       0       2       0       0       0
  5950 ;;Total ram usage:        2 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 7
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_PIN_MANAGER_Initialize
  5957 ;;		_main
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961  0B8D                     _IOCBF0_SetInterruptHandler:	
  5962                           ;psect for function _IOCBF0_SetInterruptHandler
  5963                           
  5964  0B8D                     l4103:	
  5965                           ;incstack = 0
  5966                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  5967                           
  5968                           
  5969                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  5970  0B8D  0021               	movlb	1	; select bank1
  5971  0B8E  0821               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5972  0B8F  0020               	movlb	0	; select bank0
  5973  0B90  00E9               	movwf	_IOCBF0_InterruptHandler+1
  5974  0B91  0021               	movlb	1	; select bank1
  5975  0B92  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  5976  0B93  0020               	movlb	0	; select bank0
  5977  0B94  00E8               	movwf	_IOCBF0_InterruptHandler
  5978  0B95                     l209:
  5979  0B95  0008               	return
  5980  0B96                     __end_of_IOCBF0_SetInterruptHandler:
  5981                           
  5982                           	psect	text23
  5983  0B6D                     __ptext23:	
  5984 ;; *************** function _OSCILLATOR_Initialize *****************
  5985 ;; Defined at:
  5986 ;;		line 70 in file "mcc_generated_files/mcc.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, status,2
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6000 ;;      Params:         0       0       0       0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0
  6003 ;;      Totals:         0       0       0       0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 7
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_SYSTEM_Initialize
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014  0B6D                     _OSCILLATOR_Initialize:	
  6015                           ;psect for function _OSCILLATOR_Initialize
  6016                           
  6017  0B6D                     l4197:	
  6018                           ;incstack = 0
  6019                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6020                           
  6021                           
  6022                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x68;
  6023  0B6D  3068               	movlw	104
  6024  0B6E  0021               	movlb	1	; select bank1
  6025  0B6F  0099               	movwf	25	;volatile
  6026  0B70                     l4199:
  6027                           
  6028                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  6029  0B70  0198               	clrf	24	;volatile
  6030  0B71                     l4201:
  6031                           
  6032                           ;mcc_generated_files/mcc.c: 77:     BORCON = 0x00;
  6033  0B71  0022               	movlb	2	; select bank2
  6034  0B72  0196               	clrf	22	;volatile
  6035  0B73                     l266:
  6036  0B73  0008               	return
  6037  0B74                     __end_of_OSCILLATOR_Initialize:
  6038                           
  6039                           	psect	text24
  6040  0B31                     __ptext24:	
  6041 ;; *************** function _FVR_Initialize *****************
  6042 ;; Defined at:
  6043 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;		None
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		wreg
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6057 ;;      Params:         0       0       0       0       0       0
  6058 ;;      Locals:         0       0       0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0
  6060 ;;      Totals:         0       0       0       0       0       0
  6061 ;;Total ram usage:        0 bytes
  6062 ;; Hardware stack levels used: 1
  6063 ;; Hardware stack levels required when called: 7
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_SYSTEM_Initialize
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071  0B31                     _FVR_Initialize:	
  6072                           ;psect for function _FVR_Initialize
  6073                           
  6074  0B31                     l4205:	
  6075                           ;incstack = 0
  6076                           ; Regs used in _FVR_Initialize: [wreg]
  6077                           
  6078                           
  6079                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x89;
  6080  0B31  3089               	movlw	137
  6081  0B32  0022               	movlb	2	; select bank2
  6082  0B33  0097               	movwf	23	;volatile
  6083  0B34                     l314:
  6084  0B34  0008               	return
  6085  0B35                     __end_of_FVR_Initialize:
  6086                           
  6087                           	psect	text25
  6088  0DB5                     __ptext25:	
  6089 ;; *************** function _EUSART_Initialize *****************
  6090 ;; Defined at:
  6091 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;		None
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      void 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0, pclath, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6105 ;;      Params:         0       0       0       0       0       0
  6106 ;;      Locals:         0       0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0
  6108 ;;      Totals:         0       0       0       0       0       0
  6109 ;;Total ram usage:        0 bytes
  6110 ;; Hardware stack levels used: 1
  6111 ;; Hardware stack levels required when called: 8
  6112 ;; This function calls:
  6113 ;;		_EUSART_SetErrorHandler
  6114 ;;		_EUSART_SetFramingErrorHandler
  6115 ;;		_EUSART_SetOverrunErrorHandler
  6116 ;; This function is called by:
  6117 ;;		_SYSTEM_Initialize
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121  0DB5                     _EUSART_Initialize:	
  6122                           ;psect for function _EUSART_Initialize
  6123                           
  6124  0DB5                     l4269:	
  6125                           ;incstack = 0
  6126                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6127                           
  6128                           
  6129                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6130  0DB5  3008               	movlw	8
  6131  0DB6  0023               	movlb	3	; select bank3
  6132  0DB7  009F               	movwf	31	;volatile
  6133                           
  6134                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6135  0DB8  3090               	movlw	144
  6136  0DB9  009D               	movwf	29	;volatile
  6137                           
  6138                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  6139  0DBA  3024               	movlw	36
  6140  0DBB  009E               	movwf	30	;volatile
  6141                           
  6142                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x33;
  6143  0DBC  3033               	movlw	51
  6144  0DBD  009B               	movwf	27	;volatile
  6145  0DBE                     l4271:
  6146                           
  6147                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  6148  0DBE  019C               	clrf	28	;volatile
  6149  0DBF                     l4273:
  6150                           
  6151                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6152  0DBF  3000               	movlw	0
  6153  0DC0  0021               	movlb	1	; select bank1
  6154  0DC1  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  6155  0DC2  3000               	movlw	0
  6156  0DC3  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  6157  0DC4  318B  2355  318D   	fcall	_EUSART_SetFramingErrorHandler
  6158  0DC7                     l4275:
  6159                           
  6160                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6161  0DC7  3000               	movlw	0
  6162  0DC8  0021               	movlb	1	; select bank1
  6163  0DC9  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  6164  0DCA  3000               	movlw	0
  6165  0DCB  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  6166  0DCC  318B  235B  318D   	fcall	_EUSART_SetOverrunErrorHandler
  6167  0DCF                     l4277:
  6168                           
  6169                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6170  0DCF  3000               	movlw	0
  6171  0DD0  0021               	movlb	1	; select bank1
  6172  0DD1  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  6173  0DD2  3000               	movlw	0
  6174  0DD3  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  6175  0DD4  318B  234F  318D   	fcall	_EUSART_SetErrorHandler
  6176  0DD7                     l4279:
  6177                           
  6178                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6179  0DD7  0020               	movlb	0	; select bank0
  6180  0DD8  01D7               	clrf	_eusartRxLastError	;volatile
  6181  0DD9                     l360:
  6182  0DD9  0008               	return
  6183  0DDA                     __end_of_EUSART_Initialize:
  6184                           
  6185                           	psect	text26
  6186  0B5B                     __ptext26:	
  6187 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6188 ;; Defined at:
  6189 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6192 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6204 ;;      Params:         0       0       2       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0
  6207 ;;      Totals:         0       0       2       0       0       0
  6208 ;;Total ram usage:        2 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 7
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_EUSART_Initialize
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218  0B5B                     _EUSART_SetOverrunErrorHandler:	
  6219                           ;psect for function _EUSART_SetOverrunErrorHandler
  6220                           
  6221  0B5B                     l4109:	
  6222                           ;incstack = 0
  6223                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6224                           
  6225                           
  6226                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6227  0B5B  0021               	movlb	1	; select bank1
  6228  0B5C  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  6229  0B5D  00C8               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6230  0B5E  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  6231  0B5F  00C7               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6232  0B60                     l402:
  6233  0B60  0008               	return
  6234  0B61                     __end_of_EUSART_SetOverrunErrorHandler:
  6235                           
  6236                           	psect	text27
  6237  0B55                     __ptext27:	
  6238 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6239 ;; Defined at:
  6240 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6243 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      void 
  6248 ;; Registers used:
  6249 ;;		wreg
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6255 ;;      Params:         0       0       2       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0
  6258 ;;      Totals:         0       0       2       0       0       0
  6259 ;;Total ram usage:        2 bytes
  6260 ;; Hardware stack levels used: 1
  6261 ;; Hardware stack levels required when called: 7
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_EUSART_Initialize
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269  0B55                     _EUSART_SetFramingErrorHandler:	
  6270                           ;psect for function _EUSART_SetFramingErrorHandler
  6271                           
  6272  0B55                     l4107:	
  6273                           ;incstack = 0
  6274                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6275                           
  6276                           
  6277                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  6278  0B55  0021               	movlb	1	; select bank1
  6279  0B56  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  6280  0B57  00CA               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  6281  0B58  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  6282  0B59  00C9               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6283  0B5A                     l399:
  6284  0B5A  0008               	return
  6285  0B5B                     __end_of_EUSART_SetFramingErrorHandler:
  6286                           
  6287                           	psect	text28
  6288  0B4F                     __ptext28:	
  6289 ;; *************** function _EUSART_SetErrorHandler *****************
  6290 ;; Defined at:
  6291 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6294 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6306 ;;      Params:         0       0       2       0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0
  6309 ;;      Totals:         0       0       2       0       0       0
  6310 ;;Total ram usage:        2 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 7
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_EUSART_Initialize
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320  0B4F                     _EUSART_SetErrorHandler:	
  6321                           ;psect for function _EUSART_SetErrorHandler
  6322                           
  6323  0B4F                     l4111:	
  6324                           ;incstack = 0
  6325                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6326                           
  6327                           
  6328                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6329  0B4F  0021               	movlb	1	; select bank1
  6330  0B50  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  6331  0B51  00C6               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  6332  0B52  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  6333  0B53  00C5               	movwf	_EUSART_ErrorHandler^(0+128)
  6334  0B54                     l405:
  6335  0B54  0008               	return
  6336  0B55                     __end_of_EUSART_SetErrorHandler:
  6337                           
  6338                           	psect	text29
  6339  0BDB                     __ptext29:	
  6340 ;; *************** function _CMP2_Initialize *****************
  6341 ;; Defined at:
  6342 ;;		line 59 in file "mcc_generated_files/cmp2.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6356 ;;      Params:         0       0       0       0       0       0
  6357 ;;      Locals:         0       0       0       0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0
  6359 ;;      Totals:         0       0       0       0       0       0
  6360 ;;Total ram usage:        0 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 7
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_SYSTEM_Initialize
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370  0BDB                     _CMP2_Initialize:	
  6371                           ;psect for function _CMP2_Initialize
  6372                           
  6373  0BDB                     l4131:	
  6374                           ;incstack = 0
  6375                           ; Regs used in _CMP2_Initialize: [wreg]
  6376                           
  6377                           
  6378                           ;mcc_generated_files/cmp2.c: 66:     PIE2bits.C2IE = 0;
  6379  0BDB  0021               	movlb	1	; select bank1
  6380  0BDC  1312               	bcf	18,6	;volatile
  6381  0BDD                     l4133:
  6382                           
  6383                           ;mcc_generated_files/cmp2.c: 69:     CM2CON0 = 0x84;
  6384  0BDD  3084               	movlw	132
  6385  0BDE  0022               	movlb	2	; select bank2
  6386  0BDF  0093               	movwf	19	;volatile
  6387                           
  6388                           ;mcc_generated_files/cmp2.c: 72:     CM2CON1 = 0xA1;
  6389  0BE0  30A1               	movlw	161
  6390  0BE1  0094               	movwf	20	;volatile
  6391  0BE2                     l4135:
  6392                           
  6393                           ;mcc_generated_files/cmp2.c: 75:     PIR2bits.C2IF = 0;
  6394  0BE2  0020               	movlb	0	; select bank0
  6395  0BE3  1312               	bcf	18,6	;volatile
  6396  0BE4                     l4137:
  6397                           
  6398                           ;mcc_generated_files/cmp2.c: 78:     PIE2bits.C2IE = 1;
  6399  0BE4  0021               	movlb	1	; select bank1
  6400  0BE5  1712               	bsf	18,6	;volatile
  6401  0BE6                     l75:
  6402  0BE6  0008               	return
  6403  0BE7                     __end_of_CMP2_Initialize:
  6404                           
  6405                           	psect	text30
  6406  0BCF                     __ptext30:	
  6407 ;; *************** function _CMP1_Initialize *****************
  6408 ;; Defined at:
  6409 ;;		line 59 in file "mcc_generated_files/cmp1.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      void 
  6416 ;; Registers used:
  6417 ;;		wreg
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6423 ;;      Params:         0       0       0       0       0       0
  6424 ;;      Locals:         0       0       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0
  6426 ;;      Totals:         0       0       0       0       0       0
  6427 ;;Total ram usage:        0 bytes
  6428 ;; Hardware stack levels used: 1
  6429 ;; Hardware stack levels required when called: 7
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_SYSTEM_Initialize
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437  0BCF                     _CMP1_Initialize:	
  6438                           ;psect for function _CMP1_Initialize
  6439                           
  6440  0BCF                     l4139:	
  6441                           ;incstack = 0
  6442                           ; Regs used in _CMP1_Initialize: [wreg]
  6443                           
  6444                           
  6445                           ;mcc_generated_files/cmp1.c: 66:     PIE2bits.C1IE = 0;
  6446  0BCF  0021               	movlb	1	; select bank1
  6447  0BD0  1292               	bcf	18,5	;volatile
  6448  0BD1                     l4141:
  6449                           
  6450                           ;mcc_generated_files/cmp1.c: 69:     CM1CON0 = 0x84;
  6451  0BD1  3084               	movlw	132
  6452  0BD2  0022               	movlb	2	; select bank2
  6453  0BD3  0091               	movwf	17	;volatile
  6454                           
  6455                           ;mcc_generated_files/cmp1.c: 72:     CM1CON1 = 0x60;
  6456  0BD4  3060               	movlw	96
  6457  0BD5  0092               	movwf	18	;volatile
  6458  0BD6                     l4143:
  6459                           
  6460                           ;mcc_generated_files/cmp1.c: 75:     PIR2bits.C1IF = 0;
  6461  0BD6  0020               	movlb	0	; select bank0
  6462  0BD7  1292               	bcf	18,5	;volatile
  6463  0BD8                     l4145:
  6464                           
  6465                           ;mcc_generated_files/cmp1.c: 78:     PIE2bits.C1IE = 1;
  6466  0BD8  0021               	movlb	1	; select bank1
  6467  0BD9  1692               	bsf	18,5	;volatile
  6468  0BDA                     l142:
  6469  0BDA  0008               	return
  6470  0BDB                     __end_of_CMP1_Initialize:
  6471                           
  6472                           	psect	text31
  6473  0C6B                     __ptext31:	
  6474 ;; *************** function _CCP4_Initialize *****************
  6475 ;; Defined at:
  6476 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0, pclath, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6490 ;;      Params:         0       0       0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0
  6493 ;;      Totals:         0       0       0       0       0       0
  6494 ;;Total ram usage:        0 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; Hardware stack levels required when called: 8
  6497 ;; This function calls:
  6498 ;;		_CCP4_SetCallBack
  6499 ;; This function is called by:
  6500 ;;		_SYSTEM_Initialize
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504  0C6B                     _CCP4_Initialize:	
  6505                           ;psect for function _CCP4_Initialize
  6506                           
  6507  0C6B                     l4245:	
  6508                           ;incstack = 0
  6509                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6510                           
  6511                           
  6512                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  6513  0C6B  3004               	movlw	4
  6514  0C6C  0026               	movlb	6	; select bank6
  6515  0C6D  009A               	movwf	26	;volatile
  6516  0C6E                     l4247:
  6517                           
  6518                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  6519  0C6E  0198               	clrf	24	;volatile
  6520  0C6F                     l4249:
  6521                           
  6522                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  6523  0C6F  0199               	clrf	25	;volatile
  6524  0C70                     l4251:
  6525                           
  6526                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  6527  0C70  3024               	movlw	low _CCP4_DefaultCallBack
  6528  0C71  0021               	movlb	1	; select bank1
  6529  0C72  00A0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  6530  0C73  300B               	movlw	high _CCP4_DefaultCallBack
  6531  0C74  00A1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  6532  0C75  318B  2384  318C   	fcall	_CCP4_SetCallBack
  6533  0C78                     l4253:
  6534                           
  6535                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  6536  0C78  0020               	movlb	0	; select bank0
  6537  0C79  1293               	bcf	19,5	;volatile
  6538  0C7A                     l4255:
  6539                           
  6540                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  6541  0C7A  0021               	movlb	1	; select bank1
  6542  0C7B  1693               	bsf	19,5	;volatile
  6543  0C7C                     l641:
  6544  0C7C  0008               	return
  6545  0C7D                     __end_of_CCP4_Initialize:
  6546                           
  6547                           	psect	text32
  6548  0B84                     __ptext32:	
  6549 ;; *************** function _CCP4_SetCallBack *****************
  6550 ;; Defined at:
  6551 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  6554 ;;		 -> CCP4_DefaultCallBack(1), 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      void 
  6559 ;; Registers used:
  6560 ;;		wreg
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6566 ;;      Params:         0       0       2       0       0       0
  6567 ;;      Locals:         0       0       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0
  6569 ;;      Totals:         0       0       2       0       0       0
  6570 ;;Total ram usage:        2 bytes
  6571 ;; Hardware stack levels used: 1
  6572 ;; Hardware stack levels required when called: 7
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_CCP4_Initialize
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580  0B84                     _CCP4_SetCallBack:	
  6581                           ;psect for function _CCP4_SetCallBack
  6582                           
  6583  0B84                     l4115:	
  6584                           ;incstack = 0
  6585                           ; Regs used in _CCP4_SetCallBack: [wreg]
  6586                           
  6587                           
  6588                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  6589  0B84  0021               	movlb	1	; select bank1
  6590  0B85  0821               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  6591  0B86  0020               	movlb	0	; select bank0
  6592  0B87  00E1               	movwf	_CCP4_CallBack+1
  6593  0B88  0021               	movlb	1	; select bank1
  6594  0B89  0820               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  6595  0B8A  0020               	movlb	0	; select bank0
  6596  0B8B  00E0               	movwf	_CCP4_CallBack
  6597  0B8C                     l647:
  6598  0B8C  0008               	return
  6599  0B8D                     __end_of_CCP4_SetCallBack:
  6600                           
  6601                           	psect	text33
  6602  0B74                     __ptext33:	
  6603 ;; *************** function _ADC_Initialize *****************
  6604 ;; Defined at:
  6605 ;;		line 67 in file "mcc_generated_files/adc.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      void 
  6612 ;; Registers used:
  6613 ;;		wreg, status,2
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6619 ;;      Params:         0       0       0       0       0       0
  6620 ;;      Locals:         0       0       0       0       0       0
  6621 ;;      Temps:          0       0       0       0       0       0
  6622 ;;      Totals:         0       0       0       0       0       0
  6623 ;;Total ram usage:        0 bytes
  6624 ;; Hardware stack levels used: 1
  6625 ;; Hardware stack levels required when called: 7
  6626 ;; This function calls:
  6627 ;;		Nothing
  6628 ;; This function is called by:
  6629 ;;		_SYSTEM_Initialize
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633  0B74                     _ADC_Initialize:	
  6634                           ;psect for function _ADC_Initialize
  6635                           
  6636  0B74                     l4239:	
  6637                           ;incstack = 0
  6638                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6639                           
  6640                           
  6641                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC3;
  6642  0B74  30C3               	movlw	195
  6643  0B75  0021               	movlb	1	; select bank1
  6644  0B76  009E               	movwf	30	;volatile
  6645  0B77                     l4241:
  6646                           
  6647                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  6648  0B77  019B               	clrf	27	;volatile
  6649  0B78                     l4243:
  6650                           
  6651                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  6652  0B78  019C               	clrf	28	;volatile
  6653                           
  6654                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  6655  0B79  3001               	movlw	1
  6656  0B7A  009D               	movwf	29	;volatile
  6657  0B7B                     l286:
  6658  0B7B  0008               	return
  6659  0B7C                     __end_of_ADC_Initialize:
  6660                           
  6661                           	psect	text34
  6662  0F55                     __ptext34:	
  6663 ;; *************** function _SPI1_Open *****************
  6664 ;; Defined at:
  6665 ;;		line 72 in file "mcc_generated_files/spi1.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  spi1UniqueCo    1    wreg     enum E355
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  spi1UniqueCo    1    3[BANK1 ] enum E355
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  1    wreg      _Bool 
  6672 ;; Registers used:
  6673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6679 ;;      Params:         0       0       0       0       0       0
  6680 ;;      Locals:         0       0       1       0       0       0
  6681 ;;      Temps:          0       0       3       0       0       0
  6682 ;;      Totals:         0       0       4       0       0       0
  6683 ;;Total ram usage:        4 bytes
  6684 ;; Hardware stack levels used: 1
  6685 ;; Hardware stack levels required when called: 7
  6686 ;; This function calls:
  6687 ;;		Nothing
  6688 ;; This function is called by:
  6689 ;;		_main
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693  0F55                     _SPI1_Open:	
  6694                           ;psect for function _SPI1_Open
  6695                           
  6696                           
  6697                           ;incstack = 0
  6698                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
  6699                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  6700  0F55  0021               	movlb	1	; select bank1
  6701  0F56  00A3               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+128)
  6702  0F57                     l4345:
  6703                           
  6704                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  6705  0F57  0024               	movlb	4	; select bank4
  6706  0F58  1A95               	btfsc	21,5	;volatile
  6707  0F59  2F5B               	goto	u3051
  6708  0F5A  2F5C               	goto	u3050
  6709  0F5B                     u3051:
  6710  0F5B  2FA8               	goto	l430
  6711  0F5C                     u3050:
  6712  0F5C                     l4347:
  6713                           
  6714                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  6715  0F5C  0021               	movlb	1	; select bank1
  6716  0F5D  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6717  0F5E  00A0               	movwf	??_SPI1_Open^(0+128)
  6718  0F5F  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6719  0F60  35A0               	lslf	??_SPI1_Open^(0+128),f
  6720  0F61  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6721  0F62  35A0               	lslf	??_SPI1_Open^(0+128),f
  6722  0F63  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6723  0F64  300A               	movlw	low ((_spi1_configuration+1)| (0+32768))
  6724  0F65  0720               	addwf	??_SPI1_Open^(0+128),w
  6725  0F66  0084               	movwf	4
  6726  0F67  3088               	movlw	high ((_spi1_configuration+1)| (0+32768))
  6727  0F68  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6728  0F69  0085               	movwf	5
  6729  0F6A  0800               	movf	0,w	;code access
  6730  0F6B  0024               	movlb	4	; select bank4
  6731  0F6C  0094               	movwf	20	;volatile
  6732                           
  6733                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  6734  0F6D  0021               	movlb	1	; select bank1
  6735  0F6E  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6736  0F6F  00A0               	movwf	??_SPI1_Open^(0+128)
  6737  0F70  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6738  0F71  35A0               	lslf	??_SPI1_Open^(0+128),f
  6739  0F72  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6740  0F73  35A0               	lslf	??_SPI1_Open^(0+128),f
  6741  0F74  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6742  0F75  3009               	movlw	low (_spi1_configuration| (0+32768))
  6743  0F76  0720               	addwf	??_SPI1_Open^(0+128),w
  6744  0F77  0084               	movwf	4
  6745  0F78  3088               	movlw	high (_spi1_configuration| (0+32768))
  6746  0F79  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6747  0F7A  0085               	movwf	5
  6748  0F7B  0800               	movf	0,w	;code access
  6749  0F7C  0024               	movlb	4	; select bank4
  6750  0F7D  0095               	movwf	21	;volatile
  6751  0F7E                     l4349:
  6752                           
  6753                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  6754  0F7E  0196               	clrf	22	;volatile
  6755  0F7F                     l4351:
  6756                           
  6757                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  6758  0F7F  0021               	movlb	1	; select bank1
  6759  0F80  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6760  0F81  00A0               	movwf	??_SPI1_Open^(0+128)
  6761  0F82  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6762  0F83  35A0               	lslf	??_SPI1_Open^(0+128),f
  6763  0F84  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6764  0F85  35A0               	lslf	??_SPI1_Open^(0+128),f
  6765  0F86  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6766  0F87  300B               	movlw	low ((_spi1_configuration+2)| (0+32768))
  6767  0F88  0720               	addwf	??_SPI1_Open^(0+128),w
  6768  0F89  0084               	movwf	4
  6769  0F8A  3088               	movlw	high ((_spi1_configuration+2)| (0+32768))
  6770  0F8B  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6771  0F8C  0085               	movwf	5
  6772  0F8D  0800               	movf	0,w	;code access
  6773  0F8E  0024               	movlb	4	; select bank4
  6774  0F8F  0092               	movwf	18	;volatile
  6775  0F90                     l4353:
  6776                           
  6777                           ;mcc_generated_files/spi1.c: 80:         TRISBbits.TRISB4 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  6778  0F90  0021               	movlb	1	; select bank1
  6779  0F91  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6780  0F92  00A0               	movwf	??_SPI1_Open^(0+128)
  6781  0F93  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6782  0F94  35A0               	lslf	??_SPI1_Open^(0+128),f
  6783  0F95  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6784  0F96  35A0               	lslf	??_SPI1_Open^(0+128),f
  6785  0F97  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6786  0F98  300C               	movlw	low ((_spi1_configuration+3)| (0+32768))
  6787  0F99  0720               	addwf	??_SPI1_Open^(0+128),w
  6788  0F9A  0084               	movwf	4
  6789  0F9B  3088               	movlw	high ((_spi1_configuration+3)| (0+32768))
  6790  0F9C  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6791  0F9D  0085               	movwf	5
  6792  0F9E  0800               	movf	0,w	;code access
  6793  0F9F  00A2               	movwf	(??_SPI1_Open+2)^(0+128)
  6794  0FA0  0EA2               	swapf	(??_SPI1_Open+2)^(0+128),f
  6795  0FA1  080D               	movf	13,w	;volatile
  6796  0FA2  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6797  0FA3  39EF               	andlw	-17
  6798  0FA4  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6799  0FA5  008D               	movwf	13	;volatile
  6800  0FA6                     l4355:
  6801                           
  6802                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  6803  0FA6  0024               	movlb	4	; select bank4
  6804  0FA7  1695               	bsf	21,5	;volatile
  6805  0FA8                     l430:
  6806  0FA8  0008               	return
  6807  0FA9                     __end_of_SPI1_Open:
  6808                           
  6809                           	psect	text35
  6810  0B3E                     __ptext35:	
  6811 ;; *************** function _EUSART_is_rx_ready *****************
  6812 ;; Defined at:
  6813 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    wreg      _Bool 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6827 ;;      Params:         0       0       0       0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0
  6829 ;;      Temps:          0       0       0       0       0       0
  6830 ;;      Totals:         0       0       0       0       0       0
  6831 ;;Total ram usage:        0 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; Hardware stack levels required when called: 7
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_main
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841  0B3E                     _EUSART_is_rx_ready:	
  6842                           ;psect for function _EUSART_is_rx_ready
  6843                           
  6844  0B3E                     l4329:	
  6845                           ;incstack = 0
  6846                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6847                           
  6848                           
  6849                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  6850  0B3E  0020               	movlb	0	; select bank0
  6851  0B3F  0E11               	swapf	17,w	;volatile
  6852  0B40  0C89               	rrf	9,f
  6853  0B41  3901               	andlw	1
  6854  0B42                     l368:
  6855  0B42  0008               	return
  6856  0B43                     __end_of_EUSART_is_rx_ready:
  6857                           
  6858                           	psect	text36
  6859  0C3B                     __ptext36:	
  6860 ;; *************** function _EUSART_Read *****************
  6861 ;; Defined at:
  6862 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      unsigned char 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6876 ;;      Params:         0       0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; Hardware stack levels required when called: 7
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_main
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890  0C3B                     _EUSART_Read:	
  6891                           ;psect for function _EUSART_Read
  6892                           
  6893  0C3B                     l4333:	
  6894                           ;incstack = 0
  6895                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6896                           
  6897  0C3B                     l377:	
  6898                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6899                           
  6900                           
  6901                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  6902  0C3B  0020               	movlb	0	; select bank0
  6903  0C3C  1E91               	btfss	17,5	;volatile
  6904  0C3D  2C3F               	goto	u3031
  6905  0C3E  2C40               	goto	u3030
  6906  0C3F                     u3031:
  6907  0C3F  2C3B               	goto	l377
  6908  0C40                     u3030:
  6909  0C40                     l4335:
  6910                           
  6911                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6912  0C40  01D7               	clrf	_eusartRxLastError	;volatile
  6913  0C41                     l4337:
  6914                           
  6915                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  6916  0C41  0023               	movlb	3	; select bank3
  6917  0C42  1C9D               	btfss	29,1	;volatile
  6918  0C43  2C45               	goto	u3041
  6919  0C44  2C46               	goto	u3040
  6920  0C45                     u3041:
  6921  0C45  2C48               	goto	l4341
  6922  0C46                     u3040:
  6923  0C46                     l4339:
  6924                           
  6925                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  6926  0C46  121D               	bcf	29,4	;volatile
  6927                           
  6928                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  6929  0C47  161D               	bsf	29,4	;volatile
  6930  0C48                     l4341:
  6931                           
  6932                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  6933  0C48  0819               	movf	25,w	;volatile
  6934  0C49                     l381:
  6935  0C49  0008               	return
  6936  0C4A                     __end_of_EUSART_Read:
  6937                           
  6938                           	psect	intentry
  6939  0004                     __pintentry:	
  6940 ;; *************** function _INTERRUPT_InterruptManager *****************
  6941 ;; Defined at:
  6942 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;		None
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6956 ;;      Params:         0       0       0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0
  6959 ;;      Totals:         0       0       0       0       0       0
  6960 ;;Total ram usage:        0 bytes
  6961 ;; Hardware stack levels used: 1
  6962 ;; Hardware stack levels required when called: 6
  6963 ;; This function calls:
  6964 ;;		_CCP4_CaptureISR
  6965 ;;		_CMP1_ISR
  6966 ;;		_CMP2_ISR
  6967 ;;		_PIN_MANAGER_IOC
  6968 ;;		_TMR0_ISR
  6969 ;;		_TMR4_ISR
  6970 ;; This function is called by:
  6971 ;;		Interrupt level 1
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975  0004                     _INTERRUPT_InterruptManager:
  6976                           
  6977                           ;incstack = 0
  6978  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6979                           
  6980                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6981  0005  3180               	pagesel	$
  6982  0006                     i1l4457:
  6983                           
  6984                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  6985  0006  1D8B               	btfss	11,3	;volatile
  6986  0007  2809               	goto	u318_21
  6987  0008  280A               	goto	u318_20
  6988  0009                     u318_21:
  6989  0009  2811               	goto	i1l4463
  6990  000A                     u318_20:
  6991  000A                     i1l4459:
  6992  000A  1C0B               	btfss	11,0	;volatile
  6993  000B  280D               	goto	u319_21
  6994  000C  280E               	goto	u319_20
  6995  000D                     u319_21:
  6996  000D  2811               	goto	i1l4463
  6997  000E                     u319_20:
  6998  000E                     i1l4461:
  6999                           
  7000                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7001  000E  318C  245A  3180   	fcall	_PIN_MANAGER_IOC
  7002  0011                     i1l4463:
  7003                           
  7004                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7005  0011  1E8B               	btfss	11,5	;volatile
  7006  0012  2814               	goto	u320_21
  7007  0013  2815               	goto	u320_20
  7008  0014                     u320_21:
  7009  0014  281C               	goto	i1l4469
  7010  0015                     u320_20:
  7011  0015                     i1l4465:
  7012  0015  1D0B               	btfss	11,2	;volatile
  7013  0016  2818               	goto	u321_21
  7014  0017  2819               	goto	u321_20
  7015  0018                     u321_21:
  7016  0018  281C               	goto	i1l4469
  7017  0019                     u321_20:
  7018  0019                     i1l4467:
  7019                           
  7020                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  7021  0019  318C  24E6  3180   	fcall	_TMR0_ISR
  7022  001C                     i1l4469:
  7023                           
  7024                           ;mcc_generated_files/interrupt_manager.c: 63:     if(INTCONbits.PEIE == 1)
  7025  001C  1F0B               	btfss	11,6	;volatile
  7026  001D  281F               	goto	u322_21
  7027  001E  2820               	goto	u322_20
  7028  001F                     u322_21:
  7029  001F  2854               	goto	i1l500
  7030  0020                     u322_20:
  7031  0020                     i1l4471:
  7032                           
  7033                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE2bits.C2IE == 1 && PIR2bits.C2IF == 1)
  7034  0020  0021               	movlb	1	; select bank1
  7035  0021  1F12               	btfss	18,6	;volatile
  7036  0022  2824               	goto	u323_21
  7037  0023  2825               	goto	u323_20
  7038  0024                     u323_21:
  7039  0024  282D               	goto	i1l4477
  7040  0025                     u323_20:
  7041  0025                     i1l4473:
  7042  0025  0020               	movlb	0	; select bank0
  7043  0026  1F12               	btfss	18,6	;volatile
  7044  0027  2829               	goto	u324_21
  7045  0028  282A               	goto	u324_20
  7046  0029                     u324_21:
  7047  0029  282D               	goto	i1l4477
  7048  002A                     u324_20:
  7049  002A                     i1l4475:
  7050                           
  7051                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             CMP2_ISR();
  7052  002A  318B  2349  3180   	fcall	_CMP2_ISR
  7053  002D                     i1l4477:
  7054                           
  7055                           ;mcc_generated_files/interrupt_manager.c: 69:         if(PIE2bits.C1IE == 1 && PIR2bits.
      +                          C1IF == 1)
  7056  002D  0021               	movlb	1	; select bank1
  7057  002E  1E92               	btfss	18,5	;volatile
  7058  002F  2831               	goto	u325_21
  7059  0030  2832               	goto	u325_20
  7060  0031                     u325_21:
  7061  0031  283A               	goto	i1l4483
  7062  0032                     u325_20:
  7063  0032                     i1l4479:
  7064  0032  0020               	movlb	0	; select bank0
  7065  0033  1E92               	btfss	18,5	;volatile
  7066  0034  2836               	goto	u326_21
  7067  0035  2837               	goto	u326_20
  7068  0036                     u326_21:
  7069  0036  283A               	goto	i1l4483
  7070  0037                     u326_20:
  7071  0037                     i1l4481:
  7072                           
  7073                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP1_ISR();
  7074  0037  318B  2343  3180   	fcall	_CMP1_ISR
  7075  003A                     i1l4483:
  7076                           
  7077                           ;mcc_generated_files/interrupt_manager.c: 73:         if(PIE3bits.CCP4IE == 1 && PIR3bit
      +                          s.CCP4IF == 1)
  7078  003A  0021               	movlb	1	; select bank1
  7079  003B  1E93               	btfss	19,5	;volatile
  7080  003C  283E               	goto	u327_21
  7081  003D  283F               	goto	u327_20
  7082  003E                     u327_21:
  7083  003E  2847               	goto	i1l4489
  7084  003F                     u327_20:
  7085  003F                     i1l4485:
  7086  003F  0020               	movlb	0	; select bank0
  7087  0040  1E93               	btfss	19,5	;volatile
  7088  0041  2843               	goto	u328_21
  7089  0042  2844               	goto	u328_20
  7090  0043                     u328_21:
  7091  0043  2847               	goto	i1l4489
  7092  0044                     u328_20:
  7093  0044                     i1l4487:
  7094                           
  7095                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CCP4_CaptureISR();
  7096  0044  318C  24A3  3180   	fcall	_CCP4_CaptureISR
  7097  0047                     i1l4489:
  7098                           
  7099                           ;mcc_generated_files/interrupt_manager.c: 77:         if(PIE3bits.TMR4IE == 1 && PIR3bit
      +                          s.TMR4IF == 1)
  7100  0047  0021               	movlb	1	; select bank1
  7101  0048  1C93               	btfss	19,1	;volatile
  7102  0049  284B               	goto	u329_21
  7103  004A  284C               	goto	u329_20
  7104  004B                     u329_21:
  7105  004B  2854               	goto	i1l500
  7106  004C                     u329_20:
  7107  004C                     i1l4491:
  7108  004C  0020               	movlb	0	; select bank0
  7109  004D  1C93               	btfss	19,1	;volatile
  7110  004E  2850               	goto	u330_21
  7111  004F  2851               	goto	u330_20
  7112  0050                     u330_21:
  7113  0050  2854               	goto	i1l500
  7114  0051                     u330_20:
  7115  0051                     i1l4493:
  7116                           
  7117                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR4_ISR();
  7118  0051  318C  24B9  3180   	fcall	_TMR4_ISR
  7119  0054                     i1l500:
  7120  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7121  0055  0009               	retfie
  7122  0056                     __end_of_INTERRUPT_InterruptManager:
  7123                           
  7124                           	psect	text38
  7125  0CB9                     __ptext38:	
  7126 ;; *************** function _TMR4_ISR *****************
  7127 ;; Defined at:
  7128 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;		None
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7142 ;;      Params:         0       0       0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0       0
  7145 ;;      Totals:         0       0       0       0       0       0
  7146 ;;Total ram usage:        0 bytes
  7147 ;; Hardware stack levels used: 1
  7148 ;; Hardware stack levels required when called: 3
  7149 ;; This function calls:
  7150 ;;		_TMR4_CallBack
  7151 ;; This function is called by:
  7152 ;;		_INTERRUPT_InterruptManager
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156  0CB9                     _TMR4_ISR:	
  7157                           ;psect for function _TMR4_ISR
  7158                           
  7159  0CB9                     i1l3705:	
  7160                           ;incstack = 0
  7161                           ; Regs used in _TMR4_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7162                           
  7163                           
  7164                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  7165  0CB9  0020               	movlb	0	; select bank0
  7166  0CBA  1093               	bcf	19,1	;volatile
  7167  0CBB                     i1l3707:
  7168                           
  7169                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 2)
  7170  0CBB  3001               	movlw	1
  7171  0CBC  07CA               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  7172  0CBD  3000               	movlw	0
  7173  0CBE  3DCB               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  7174  0CBF  3000               	movlw	0
  7175  0CC0  024B               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  7176  0CC1  3002               	movlw	2
  7177  0CC2  1903               	skipnz
  7178  0CC3  024A               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  7179  0CC4  1C03               	skipc
  7180  0CC5  2CC7               	goto	u238_21
  7181  0CC6  2CC8               	goto	u238_20
  7182  0CC7                     u238_21:
  7183  0CC7  2CCE               	goto	i1l691
  7184  0CC8                     u238_20:
  7185  0CC8                     i1l3709:
  7186                           
  7187                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  7188  0CC8  318B  23F4  318C   	fcall	_TMR4_CallBack
  7189  0CCB                     i1l3711:
  7190                           
  7191                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  7192  0CCB  0020               	movlb	0	; select bank0
  7193  0CCC  01CA               	clrf	TMR4_ISR@CountCallBack	;volatile
  7194  0CCD  01CB               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  7195  0CCE                     i1l691:
  7196  0CCE  0008               	return
  7197  0CCF                     __end_of_TMR4_ISR:
  7198                           
  7199                           	psect	text39
  7200  0BF4                     __ptext39:	
  7201 ;; *************** function _TMR4_CallBack *****************
  7202 ;; Defined at:
  7203 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;		None
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7217 ;;      Params:         0       0       0       0       0       0
  7218 ;;      Locals:         0       0       0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0
  7220 ;;      Totals:         0       0       0       0       0       0
  7221 ;;Total ram usage:        0 bytes
  7222 ;; Hardware stack levels used: 1
  7223 ;; Hardware stack levels required when called: 2
  7224 ;; This function calls:
  7225 ;;		Absolute function
  7226 ;;		_TMR4_DefaultInterruptHandler
  7227 ;;		_controleMovimento
  7228 ;; This function is called by:
  7229 ;;		_TMR4_ISR
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233  0BF4                     _TMR4_CallBack:	
  7234                           ;psect for function _TMR4_CallBack
  7235                           
  7236  0BF4                     i1l3605:	
  7237                           ;incstack = 0
  7238                           ; Regs used in _TMR4_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7239                           
  7240                           
  7241                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  7242  0BF4  0020               	movlb	0	; select bank0
  7243  0BF5  085E               	movf	_TMR4_InterruptHandler,w
  7244  0BF6  045F               	iorwf	_TMR4_InterruptHandler+1,w
  7245  0BF7  1903               	btfsc	3,2
  7246  0BF8  2BFA               	goto	u230_21
  7247  0BF9  2BFB               	goto	u230_20
  7248  0BFA                     u230_21:
  7249  0BFA  2C00               	goto	i1l695
  7250  0BFB                     u230_20:
  7251  0BFB                     i1l3607:
  7252                           
  7253                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  7254  0BFB  085F               	movf	_TMR4_InterruptHandler+1,w
  7255  0BFC  008A               	movwf	10
  7256  0BFD  085E               	movf	_TMR4_InterruptHandler,w
  7257  0BFE  000A               	callw
  7258  0BFF  318B               	pagesel	$
  7259  0C00                     i1l695:
  7260  0C00  0008               	return
  7261  0C01                     __end_of_TMR4_CallBack:
  7262                           
  7263                           	psect	text40
  7264  0002                     __ptext40:	
  7265 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  7266 ;; Defined at:
  7267 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;		None
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;		None
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1    wreg      void 
  7274 ;; Registers used:
  7275 ;;		None
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7281 ;;      Params:         0       0       0       0       0       0
  7282 ;;      Locals:         0       0       0       0       0       0
  7283 ;;      Temps:          0       0       0       0       0       0
  7284 ;;      Totals:         0       0       0       0       0       0
  7285 ;;Total ram usage:        0 bytes
  7286 ;; Hardware stack levels used: 1
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_TMR4_Initialize
  7291 ;;		_TMR4_CallBack
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295  0002                     _TMR4_DefaultInterruptHandler:	
  7296                           ;psect for function _TMR4_DefaultInterruptHandler
  7297                           
  7298  0002                     i1l701:	
  7299                           ;incstack = 0
  7300                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  7301                           
  7302  0002  0008               	return
  7303  0003                     __end_of_TMR4_DefaultInterruptHandler:
  7304                           
  7305                           	psect	text41
  7306  0772                     __ptext41:	
  7307 ;; *************** function _controleMovimento *****************
  7308 ;; Defined at:
  7309 ;;		line 195 in file "main.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;		None
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  1    wreg      void 
  7316 ;; Registers used:
  7317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7323 ;;      Params:         0       0       0       0       0       0
  7324 ;;      Locals:         0       0       0       0       0       0
  7325 ;;      Temps:          2       0       0       0       0       0
  7326 ;;      Totals:         2       0       0       0       0       0
  7327 ;;Total ram usage:        2 bytes
  7328 ;; Hardware stack levels used: 1
  7329 ;; Hardware stack levels required when called: 1
  7330 ;; This function calls:
  7331 ;;		_PWM3_LoadDutyValue
  7332 ;;		_TMR4_StopTimer
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;;		_TMR4_CallBack
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339  0772                     _controleMovimento:	
  7340                           ;psect for function _controleMovimento
  7341                           
  7342  0772                     i1l3241:	
  7343                           ;incstack = 0
  7344                           ; Regs used in _controleMovimento: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7345                           
  7346                           
  7347                           ;main.c: 196:     static uint8_t cont = 0;;main.c: 197:     switch(mov){
  7348  0772  2FA6               	goto	i1l3269
  7349  0773                     i1l3243:
  7350                           
  7351                           ;main.c: 199:             PWM3_LoadDutyValue(0);
  7352  0773  3000               	movlw	0
  7353  0774  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7354  0775  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7355  0776  318C  24CF  3187   	fcall	_PWM3_LoadDutyValue
  7356  0779                     i1l3245:
  7357                           
  7358                           ;main.c: 200:             cont = 0;
  7359  0779  0020               	movlb	0	; select bank0
  7360  077A  01D6               	clrf	controleMovimento@cont
  7361                           
  7362                           ;main.c: 201:             break;
  7363  077B  2FBD               	goto	i1l3271
  7364  077C                     i1l3247:
  7365                           
  7366                           ;main.c: 203:             if (cont >=4){
  7367  077C  3004               	movlw	4
  7368  077D  0020               	movlb	0	; select bank0
  7369  077E  0256               	subwf	controleMovimento@cont,w
  7370  077F  1C03               	skipc
  7371  0780  2F82               	goto	u204_21
  7372  0781  2F83               	goto	u204_20
  7373  0782                     u204_21:
  7374  0782  2F89               	goto	i1l3253
  7375  0783                     u204_20:
  7376  0783                     i1l3249:
  7377                           
  7378                           ;main.c: 205:                 mov = RetornaS0;
  7379  0783  3003               	movlw	3
  7380  0784  00F4               	movwf	??_controleMovimento
  7381  0785  0874               	movf	??_controleMovimento,w
  7382  0786  0021               	movlb	1	; select bank1
  7383  0787  00C1               	movwf	_mov^(0+128)
  7384  0788  2F79               	goto	i1l3245
  7385  0789                     i1l3253:
  7386                           
  7387                           ;main.c: 208:                 cont++;
  7388  0789  3001               	movlw	1
  7389  078A  00F4               	movwf	??_controleMovimento
  7390  078B  0874               	movf	??_controleMovimento,w
  7391  078C  07D6               	addwf	controleMovimento@cont,f
  7392  078D  2FBD               	goto	i1l3271
  7393  078E                     i1l3255:
  7394                           
  7395                           ;main.c: 212:             PWM3_LoadDutyValue(300);
  7396  078E  302C               	movlw	44
  7397  078F  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7398  0790  3001               	movlw	1
  7399  0791  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7400  0792  318C  24CF  3187   	fcall	_PWM3_LoadDutyValue
  7401  0795                     i1l3257:
  7402                           
  7403                           ;main.c: 213:             TMR4_StopTimer();
  7404  0795  318B  232B  3187   	fcall	_TMR4_StopTimer
  7405  0798  2F79               	goto	i1l3245
  7406  0799                     i1l3261:
  7407                           
  7408                           ;main.c: 217:             PWM3_LoadDutyValue(300);
  7409  0799  302C               	movlw	44
  7410  079A  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7411  079B  3001               	movlw	1
  7412  079C  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7413  079D  318C  24CF  3187   	fcall	_PWM3_LoadDutyValue
  7414  07A0                     i1l3263:
  7415                           
  7416                           ;main.c: 218:             cont = 0;
  7417  07A0  0020               	movlb	0	; select bank0
  7418  07A1  01D6               	clrf	controleMovimento@cont
  7419  07A2                     i1l3265:
  7420                           
  7421                           ;main.c: 219:             TMR4_StopTimer();
  7422  07A2  318B  232B  3187   	fcall	_TMR4_StopTimer
  7423                           
  7424                           ;main.c: 220:             break;
  7425  07A5  2FBD               	goto	i1l3271
  7426  07A6                     i1l3269:
  7427  07A6  0021               	movlb	1	; select bank1
  7428  07A7  0841               	movf	_mov^(0+128),w
  7429  07A8  00F4               	movwf	??_controleMovimento
  7430  07A9  01F5               	clrf	??_controleMovimento+1
  7431                           
  7432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7433                           ; Switch size 1, requested type "simple"
  7434                           ; Number of cases is 1, Range of values is 0 to 0
  7435                           ; switch strategies available:
  7436                           ; Name         Instructions Cycles
  7437                           ; simple_byte            4     3 (average)
  7438                           ; direct_byte            8     6 (fixed)
  7439                           ; jumptable            260     6 (fixed)
  7440                           ;	Chosen strategy is simple_byte
  7441  07AA  0875               	movf	??_controleMovimento+1,w
  7442  07AB  3A00               	xorlw	0	; case 0
  7443  07AC  1903               	skipnz
  7444  07AD  2FAF               	goto	i1l4613
  7445  07AE  2FBD               	goto	i1l3271
  7446  07AF                     i1l4613:
  7447                           
  7448                           ; Switch size 1, requested type "simple"
  7449                           ; Number of cases is 4, Range of values is 0 to 3
  7450                           ; switch strategies available:
  7451                           ; Name         Instructions Cycles
  7452                           ; simple_byte           13     7 (average)
  7453                           ; direct_byte           14     6 (fixed)
  7454                           ; jumptable            260     6 (fixed)
  7455                           ;	Chosen strategy is simple_byte
  7456  07AF  0874               	movf	??_controleMovimento,w
  7457  07B0  3A00               	xorlw	0	; case 0
  7458  07B1  1903               	skipnz
  7459  07B2  2F73               	goto	i1l3243
  7460  07B3  3A01               	xorlw	1	; case 1
  7461  07B4  1903               	skipnz
  7462  07B5  2F7C               	goto	i1l3247
  7463  07B6  3A03               	xorlw	3	; case 2
  7464  07B7  1903               	skipnz
  7465  07B8  2F8E               	goto	i1l3255
  7466  07B9  3A01               	xorlw	1	; case 3
  7467  07BA  1903               	skipnz
  7468  07BB  2F99               	goto	i1l3261
  7469  07BC  2FBD               	goto	i1l3271
  7470  07BD                     i1l3271:
  7471                           
  7472                           ;main.c: 223:     if(destinoSub != 0 ){
  7473  07BD  0021               	movlb	1	; select bank1
  7474  07BE  083C               	movf	_destinoSub^(0+128),w
  7475  07BF  1903               	btfsc	3,2
  7476  07C0  2FC2               	goto	u205_21
  7477  07C1  2FC3               	goto	u205_20
  7478  07C2                     u205_21:
  7479  07C2  2FC8               	goto	i1l3275
  7480  07C3                     u205_20:
  7481  07C3                     i1l3273:
  7482                           
  7483                           ;main.c: 225:         subindo = 1;
  7484  07C3  01CB               	clrf	_subindo^(0+128)
  7485  07C4  0ACB               	incf	_subindo^(0+128),f
  7486  07C5                     i1l855:	
  7487                           ;main.c: 226:         do { LATAbits.LATA7 = 1; } while(0);
  7488                           
  7489  07C5  0022               	movlb	2	; select bank2
  7490  07C6  178C               	bsf	12,7	;volatile
  7491  07C7  2FCB               	goto	i1l860
  7492  07C8                     i1l3275:
  7493                           
  7494                           ;main.c: 229:         subindo = 0;
  7495  07C8  01CB               	clrf	_subindo^(0+128)
  7496  07C9                     i1l3277:
  7497  07C9  0022               	movlb	2	; select bank2
  7498  07CA  138C               	bcf	12,7	;volatile
  7499  07CB                     i1l860:
  7500  07CB  0008               	return
  7501  07CC                     __end_of_controleMovimento:
  7502                           
  7503                           	psect	text42
  7504  0B2B                     __ptext42:	
  7505 ;; *************** function _TMR4_StopTimer *****************
  7506 ;; Defined at:
  7507 ;;		line 93 in file "mcc_generated_files/tmr4.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      void 
  7514 ;; Registers used:
  7515 ;;		None
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7521 ;;      Params:         0       0       0       0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0
  7524 ;;      Totals:         0       0       0       0       0       0
  7525 ;;Total ram usage:        0 bytes
  7526 ;; Hardware stack levels used: 1
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_controleMovimento
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534  0B2B                     _TMR4_StopTimer:	
  7535                           ;psect for function _TMR4_StopTimer
  7536                           
  7537  0B2B                     i1l2937:	
  7538                           ;incstack = 0
  7539                           ; Regs used in _TMR4_StopTimer: []
  7540                           
  7541                           
  7542                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
  7543  0B2B  0028               	movlb	8	; select bank8
  7544  0B2C  1117               	bcf	23,2	;volatile
  7545  0B2D                     i1l676:
  7546  0B2D  0008               	return
  7547  0B2E                     __end_of_TMR4_StopTimer:
  7548                           
  7549                           	psect	text43
  7550  0CE6                     __ptext43:	
  7551 ;; *************** function _TMR0_ISR *****************
  7552 ;; Defined at:
  7553 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;		None
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1    wreg      void 
  7560 ;; Registers used:
  7561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7567 ;;      Params:         0       0       0       0       0       0
  7568 ;;      Locals:         0       0       0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0
  7570 ;;      Totals:         0       0       0       0       0       0
  7571 ;;Total ram usage:        0 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 4
  7574 ;; This function calls:
  7575 ;;		_TMR0_CallBack
  7576 ;; This function is called by:
  7577 ;;		_INTERRUPT_InterruptManager
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581  0CE6                     _TMR0_ISR:	
  7582                           ;psect for function _TMR0_ISR
  7583                           
  7584  0CE6                     i1l3691:	
  7585                           ;incstack = 0
  7586                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7587                           
  7588                           
  7589                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  7590  0CE6  110B               	bcf	11,2	;volatile
  7591  0CE7                     i1l3693:
  7592                           
  7593                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  7594  0CE7  0020               	movlb	0	; select bank0
  7595  0CE8  086A               	movf	_timer0ReloadVal,w	;volatile
  7596  0CE9  0095               	movwf	21	;volatile
  7597                           
  7598                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 5)
  7599  0CEA  3001               	movlw	1
  7600  0CEB  07CC               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  7601  0CEC  3000               	movlw	0
  7602  0CED  3DCD               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  7603  0CEE  3000               	movlw	0
  7604  0CEF  024D               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  7605  0CF0  3005               	movlw	5
  7606  0CF1  1903               	skipnz
  7607  0CF2  024C               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  7608  0CF3  1C03               	skipc
  7609  0CF4  2CF6               	goto	u237_21
  7610  0CF5  2CF7               	goto	u237_20
  7611  0CF6                     u237_21:
  7612  0CF6  2CFD               	goto	i1l611
  7613  0CF7                     u237_20:
  7614  0CF7                     i1l3695:
  7615                           
  7616                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  7617  0CF7  318B  23E7  318C   	fcall	_TMR0_CallBack
  7618  0CFA                     i1l3697:
  7619                           
  7620                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  7621  0CFA  0020               	movlb	0	; select bank0
  7622  0CFB  01CC               	clrf	TMR0_ISR@CountCallBack	;volatile
  7623  0CFC  01CD               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  7624  0CFD                     i1l611:
  7625  0CFD  0008               	return
  7626  0CFE                     __end_of_TMR0_ISR:
  7627                           
  7628                           	psect	text44
  7629  0BE7                     __ptext44:	
  7630 ;; *************** function _TMR0_CallBack *****************
  7631 ;; Defined at:
  7632 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;		None
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      void 
  7639 ;; Registers used:
  7640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7646 ;;      Params:         0       0       0       0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0
  7648 ;;      Temps:          0       0       0       0       0       0
  7649 ;;      Totals:         0       0       0       0       0       0
  7650 ;;Total ram usage:        0 bytes
  7651 ;; Hardware stack levels used: 1
  7652 ;; Hardware stack levels required when called: 3
  7653 ;; This function calls:
  7654 ;;		Absolute function
  7655 ;;		_TMR0_DefaultInterruptHandler
  7656 ;;		_sendInfo
  7657 ;; This function is called by:
  7658 ;;		_TMR0_ISR
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662  0BE7                     _TMR0_CallBack:	
  7663                           ;psect for function _TMR0_CallBack
  7664                           
  7665  0BE7                     i1l3597:	
  7666                           ;incstack = 0
  7667                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7668                           
  7669                           
  7670                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  7671  0BE7  0020               	movlb	0	; select bank0
  7672  0BE8  0862               	movf	_TMR0_InterruptHandler,w
  7673  0BE9  0463               	iorwf	_TMR0_InterruptHandler+1,w
  7674  0BEA  1903               	btfsc	3,2
  7675  0BEB  2BED               	goto	u229_21
  7676  0BEC  2BEE               	goto	u229_20
  7677  0BED                     u229_21:
  7678  0BED  2BF3               	goto	i1l615
  7679  0BEE                     u229_20:
  7680  0BEE                     i1l3599:
  7681                           
  7682                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  7683  0BEE  0863               	movf	_TMR0_InterruptHandler+1,w
  7684  0BEF  008A               	movwf	10
  7685  0BF0  0862               	movf	_TMR0_InterruptHandler,w
  7686  0BF1  000A               	callw
  7687  0BF2  318B               	pagesel	$
  7688  0BF3                     i1l615:
  7689  0BF3  0008               	return
  7690  0BF4                     __end_of_TMR0_CallBack:
  7691                           
  7692                           	psect	text45
  7693  0B27                     __ptext45:	
  7694 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7695 ;; Defined at:
  7696 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;		None
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1    wreg      void 
  7703 ;; Registers used:
  7704 ;;		None
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7710 ;;      Params:         0       0       0       0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0       0
  7713 ;;      Totals:         0       0       0       0       0       0
  7714 ;;Total ram usage:        0 bytes
  7715 ;; Hardware stack levels used: 1
  7716 ;; This function calls:
  7717 ;;		Nothing
  7718 ;; This function is called by:
  7719 ;;		_TMR0_Initialize
  7720 ;;		_TMR0_CallBack
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724  0B27                     _TMR0_DefaultInterruptHandler:	
  7725                           ;psect for function _TMR0_DefaultInterruptHandler
  7726                           
  7727  0B27                     i1l621:	
  7728                           ;incstack = 0
  7729                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7730                           
  7731  0B27  0008               	return
  7732  0B28                     __end_of_TMR0_DefaultInterruptHandler:
  7733                           
  7734                           	psect	text46
  7735  02C8                     __ptext46:	
  7736 ;; *************** function _sendInfo *****************
  7737 ;; Defined at:
  7738 ;;		line 85 in file "main.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;		None
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  bcd             2   36[BANK0 ] struct .
  7743 ;;  velocidade      2   34[BANK0 ] unsigned short 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  1    wreg      void 
  7746 ;; Registers used:
  7747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7753 ;;      Params:         0       0       0       0       0       0
  7754 ;;      Locals:         0       4       0       0       0       0
  7755 ;;      Temps:          0       2       0       0       0       0
  7756 ;;      Totals:         0       6       0       0       0       0
  7757 ;;Total ram usage:        6 bytes
  7758 ;; Hardware stack levels used: 1
  7759 ;; Hardware stack levels required when called: 2
  7760 ;; This function calls:
  7761 ;;		_ADC_GetConversion
  7762 ;;		_EUSART_Write
  7763 ;;		___flmul
  7764 ;;		___fltol
  7765 ;;		___wmul
  7766 ;;		_bin2bcd
  7767 ;; This function is called by:
  7768 ;;		_main
  7769 ;;		_TMR0_CallBack
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773  02C8                     _sendInfo:	
  7774                           ;psect for function _sendInfo
  7775                           
  7776  02C8                     i1l3209:	
  7777                           ;incstack = 0
  7778                           ; Regs used in _sendInfo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7779                           
  7780                           
  7781                           ;main.c: 87:     bcd16_t bcd;;main.c: 88:     uint16_t velocidade;;main.c: 90:     veloc
      +                          idade = (uint16_t)(velocidadeMotor * 10);
  7782  02C8  0020               	movlb	0	; select bank0
  7783  02C9  0849               	movf	_velocidadeMotor+3,w
  7784  02CA  00A7               	movwf	___flmul@a+3
  7785  02CB  0848               	movf	_velocidadeMotor+2,w
  7786  02CC  00A6               	movwf	___flmul@a+2
  7787  02CD  0847               	movf	_velocidadeMotor+1,w
  7788  02CE  00A5               	movwf	___flmul@a+1
  7789  02CF  0846               	movf	_velocidadeMotor,w
  7790  02D0  00A4               	movwf	___flmul@a
  7791  02D1  3041               	movlw	65
  7792  02D2  00A3               	movwf	___flmul@b+3
  7793  02D3  3020               	movlw	32
  7794  02D4  00A2               	movwf	___flmul@b+2
  7795  02D5  3000               	movlw	0
  7796  02D6  00A1               	movwf	___flmul@b+1
  7797  02D7  3000               	movlw	0
  7798  02D8  00A0               	movwf	___flmul@b
  7799  02D9  3180  2071  3182   	fcall	___flmul
  7800  02DC  0020               	movlb	0	; select bank0
  7801  02DD  0823               	movf	?___flmul+3,w
  7802  02DE  00B8               	movwf	___fltol@f1+3
  7803  02DF  0822               	movf	?___flmul+2,w
  7804  02E0  00B7               	movwf	___fltol@f1+2
  7805  02E1  0821               	movf	?___flmul+1,w
  7806  02E2  00B6               	movwf	___fltol@f1+1
  7807  02E3  0820               	movf	?___flmul,w
  7808  02E4  00B5               	movwf	___fltol@f1
  7809  02E5  3186  268A  3182   	fcall	___fltol
  7810  02E8  0020               	movlb	0	; select bank0
  7811  02E9  0836               	movf	?___fltol+1,w
  7812  02EA  00C3               	movwf	sendInfo@velocidade+1
  7813  02EB  0835               	movf	?___fltol,w
  7814  02EC  00C2               	movwf	sendInfo@velocidade
  7815                           
  7816                           ;main.c: 91:     temperatura = (ADC_GetConversion(2) / 1024) * 999;
  7817  02ED  3002               	movlw	2
  7818  02EE  318D  2517  3182   	fcall	_ADC_GetConversion
  7819  02F1  0870               	movf	?_ADC_GetConversion,w
  7820  02F2  0020               	movlb	0	; select bank0
  7821  02F3  00C0               	movwf	??_sendInfo
  7822  02F4  0871               	movf	?_ADC_GetConversion+1,w
  7823  02F5  00C1               	movwf	??_sendInfo+1
  7824  02F6  300A               	movlw	10
  7825  02F7                     u203_25:
  7826  02F7  36C1               	lsrf	??_sendInfo+1,f
  7827  02F8  0CC0               	rrf	??_sendInfo,f
  7828  02F9  0B89               	decfsz	9,f
  7829  02FA  2AF7               	goto	u203_25
  7830  02FB  0840               	movf	??_sendInfo,w
  7831  02FC  00F4               	movwf	___wmul@multiplier
  7832  02FD  0841               	movf	??_sendInfo+1,w
  7833  02FE  00F5               	movwf	___wmul@multiplier+1
  7834  02FF  30E7               	movlw	231
  7835  0300  00F6               	movwf	___wmul@multiplicand
  7836  0301  3003               	movlw	3
  7837  0302  00F7               	movwf	___wmul@multiplicand+1
  7838  0303  318D  2531  3182   	fcall	___wmul
  7839  0306  0875               	movf	?___wmul+1,w
  7840  0307  0020               	movlb	0	; select bank0
  7841  0308  00D1               	movwf	_temperatura+1
  7842  0309  0874               	movf	?___wmul,w
  7843  030A  00D0               	movwf	_temperatura
  7844                           
  7845                           ;main.c: 93:     EUSART_Write('$');
  7846  030B  3024               	movlw	36
  7847  030C  318B  23BA  3182   	fcall	_EUSART_Write
  7848                           
  7849                           ;main.c: 94:     EUSART_Write(0x30 + origem);
  7850  030F  0021               	movlb	1	; select bank1
  7851  0310  0844               	movf	_origem^(0+128),w
  7852  0311  3E30               	addlw	48
  7853  0312  318B  23BA  3182   	fcall	_EUSART_Write
  7854                           
  7855                           ;main.c: 95:     EUSART_Write(0x2C);
  7856  0315  302C               	movlw	44
  7857  0316  318B  23BA  3182   	fcall	_EUSART_Write
  7858                           
  7859                           ;main.c: 96:     EUSART_Write(0x30 + destino);
  7860  0319  0021               	movlb	1	; select bank1
  7861  031A  0843               	movf	_destino^(0+128),w
  7862  031B  3E30               	addlw	48
  7863  031C  318B  23BA  3182   	fcall	_EUSART_Write
  7864                           
  7865                           ;main.c: 97:     EUSART_Write(0x2C);
  7866  031F  302C               	movlw	44
  7867  0320  318B  23BA  3182   	fcall	_EUSART_Write
  7868                           
  7869                           ;main.c: 98:     EUSART_Write(0x30 + andarAtual);
  7870  0323  0020               	movlb	0	; select bank0
  7871  0324  0859               	movf	_andarAtual,w
  7872  0325  3E30               	addlw	48
  7873  0326  318B  23BA  3182   	fcall	_EUSART_Write
  7874                           
  7875                           ;main.c: 99:     EUSART_Write(0x2C);
  7876  0329  302C               	movlw	44
  7877  032A  318B  23BA  3182   	fcall	_EUSART_Write
  7878                           
  7879                           ;main.c: 100:     EUSART_Write(0x30);
  7880  032D  3030               	movlw	48
  7881  032E  318B  23BA  3182   	fcall	_EUSART_Write
  7882                           
  7883                           ;main.c: 101:     EUSART_Write(0x2C);
  7884  0331  302C               	movlw	44
  7885  0332  318B  23BA  3182   	fcall	_EUSART_Write
  7886  0335                     i1l3211:
  7887                           
  7888                           ;main.c: 103:     bcd.v = bin2bcd(altura);
  7889  0335  0020               	movlb	0	; select bank0
  7890  0336  0858               	movf	_altura,w
  7891  0337  00C0               	movwf	??_sendInfo
  7892  0338  01C1               	clrf	??_sendInfo+1
  7893  0339  0840               	movf	??_sendInfo,w
  7894  033A  00FA               	movwf	bin2bcd@binVal
  7895  033B  0841               	movf	??_sendInfo+1,w
  7896  033C  00FB               	movwf	bin2bcd@binVal+1
  7897  033D  3185  2500  3182   	fcall	_bin2bcd
  7898  0340  087B               	movf	?_bin2bcd+1,w
  7899  0341  0020               	movlb	0	; select bank0
  7900  0342  00C5               	movwf	sendInfo@bcd+1
  7901  0343  087A               	movf	?_bin2bcd,w
  7902  0344  00C4               	movwf	sendInfo@bcd
  7903  0345                     i1l3213:
  7904                           
  7905                           ;main.c: 104:     EUSART_Write(bcd.num2 + 0x30);
  7906  0345  0845               	movf	sendInfo@bcd+1,w
  7907  0346  390F               	andlw	15
  7908  0347  3E30               	addlw	48
  7909  0348  318B  23BA  3182   	fcall	_EUSART_Write
  7910  034B                     i1l3215:
  7911                           
  7912                           ;main.c: 105:     EUSART_Write(bcd.num3 + 0x30);
  7913  034B  0020               	movlb	0	; select bank0
  7914  034C  0E44               	swapf	sendInfo@bcd,w
  7915  034D  390F               	andlw	15
  7916  034E  3E30               	addlw	48
  7917  034F  318B  23BA  3182   	fcall	_EUSART_Write
  7918  0352                     i1l3217:
  7919                           
  7920                           ;main.c: 106:     EUSART_Write(bcd.num4 + 0x30);
  7921  0352  0020               	movlb	0	; select bank0
  7922  0353  0844               	movf	sendInfo@bcd,w
  7923  0354  390F               	andlw	15
  7924  0355  3E30               	addlw	48
  7925  0356  318B  23BA  3182   	fcall	_EUSART_Write
  7926  0359                     i1l3219:
  7927                           
  7928                           ;main.c: 107:     EUSART_Write(0x2C);
  7929  0359  302C               	movlw	44
  7930  035A  318B  23BA  3182   	fcall	_EUSART_Write
  7931  035D                     i1l3221:
  7932                           
  7933                           ;main.c: 109:     bcd.v = bin2bcd(velocidade);
  7934  035D  0020               	movlb	0	; select bank0
  7935  035E  0843               	movf	sendInfo@velocidade+1,w
  7936  035F  00FB               	movwf	bin2bcd@binVal+1
  7937  0360  0842               	movf	sendInfo@velocidade,w
  7938  0361  00FA               	movwf	bin2bcd@binVal
  7939  0362  3185  2500  3182   	fcall	_bin2bcd
  7940  0365  087B               	movf	?_bin2bcd+1,w
  7941  0366  0020               	movlb	0	; select bank0
  7942  0367  00C5               	movwf	sendInfo@bcd+1
  7943  0368  087A               	movf	?_bin2bcd,w
  7944  0369  00C4               	movwf	sendInfo@bcd
  7945                           
  7946                           ;main.c: 110:     EUSART_Write(bcd.num2 + 0x30);
  7947  036A  0845               	movf	sendInfo@bcd+1,w
  7948  036B  390F               	andlw	15
  7949  036C  3E30               	addlw	48
  7950  036D  318B  23BA  3182   	fcall	_EUSART_Write
  7951                           
  7952                           ;main.c: 111:     EUSART_Write(bcd.num3 + 0x30);
  7953  0370  0020               	movlb	0	; select bank0
  7954  0371  0E44               	swapf	sendInfo@bcd,w
  7955  0372  390F               	andlw	15
  7956  0373  3E30               	addlw	48
  7957  0374  318B  23BA  3182   	fcall	_EUSART_Write
  7958                           
  7959                           ;main.c: 112:     EUSART_Write(0x2E);
  7960  0377  302E               	movlw	46
  7961  0378  318B  23BA  3182   	fcall	_EUSART_Write
  7962                           
  7963                           ;main.c: 113:     EUSART_Write(bcd.num4 + 0x30);
  7964  037B  0020               	movlb	0	; select bank0
  7965  037C  0844               	movf	sendInfo@bcd,w
  7966  037D  390F               	andlw	15
  7967  037E  3E30               	addlw	48
  7968  037F  318B  23BA  3182   	fcall	_EUSART_Write
  7969                           
  7970                           ;main.c: 114:     EUSART_Write(0x2C);
  7971  0382  302C               	movlw	44
  7972  0383  318B  23BA  3182   	fcall	_EUSART_Write
  7973  0386                     i1l3223:
  7974                           
  7975                           ;main.c: 116:     bcd.v = bin2bcd(temperatura);
  7976  0386  0020               	movlb	0	; select bank0
  7977  0387  0851               	movf	_temperatura+1,w
  7978  0388  00FB               	movwf	bin2bcd@binVal+1
  7979  0389  0850               	movf	_temperatura,w
  7980  038A  00FA               	movwf	bin2bcd@binVal
  7981  038B  3185  2500  3182   	fcall	_bin2bcd
  7982  038E  087B               	movf	?_bin2bcd+1,w
  7983  038F  0020               	movlb	0	; select bank0
  7984  0390  00C5               	movwf	sendInfo@bcd+1
  7985  0391  087A               	movf	?_bin2bcd,w
  7986  0392  00C4               	movwf	sendInfo@bcd
  7987  0393                     i1l3225:
  7988                           
  7989                           ;main.c: 117:     EUSART_Write(bcd.num1 + 0x30);
  7990  0393  0E45               	swapf	sendInfo@bcd+1,w
  7991  0394  390F               	andlw	15
  7992  0395  3E30               	addlw	48
  7993  0396  318B  23BA  3182   	fcall	_EUSART_Write
  7994  0399                     i1l3227:
  7995                           
  7996                           ;main.c: 118:     EUSART_Write(bcd.num2 + 0x30);
  7997  0399  0020               	movlb	0	; select bank0
  7998  039A  0845               	movf	sendInfo@bcd+1,w
  7999  039B  390F               	andlw	15
  8000  039C  3E30               	addlw	48
  8001  039D  318B  23BA  3182   	fcall	_EUSART_Write
  8002  03A0                     i1l3229:
  8003                           
  8004                           ;main.c: 119:     EUSART_Write(bcd.num3 + 0x30);
  8005  03A0  0020               	movlb	0	; select bank0
  8006  03A1  0E44               	swapf	sendInfo@bcd,w
  8007  03A2  390F               	andlw	15
  8008  03A3  3E30               	addlw	48
  8009  03A4  318B  23BA  3182   	fcall	_EUSART_Write
  8010  03A7                     i1l3231:
  8011                           
  8012                           ;main.c: 120:     EUSART_Write(0x2E);
  8013  03A7  302E               	movlw	46
  8014  03A8  318B  23BA  3182   	fcall	_EUSART_Write
  8015  03AB                     i1l3233:
  8016                           
  8017                           ;main.c: 121:     EUSART_Write(bcd.num4 + 0x30);
  8018  03AB  0020               	movlb	0	; select bank0
  8019  03AC  0844               	movf	sendInfo@bcd,w
  8020  03AD  390F               	andlw	15
  8021  03AE  3E30               	addlw	48
  8022  03AF  318B  23BA  3182   	fcall	_EUSART_Write
  8023  03B2                     i1l3235:
  8024                           
  8025                           ;main.c: 122:     EUSART_Write(0x0D);
  8026  03B2  300D               	movlw	13
  8027  03B3  318B  23BA  3182   	fcall	_EUSART_Write
  8028  03B6                     i1l807:
  8029  03B6  0008               	return
  8030  03B7                     __end_of_sendInfo:
  8031                           
  8032                           	psect	text47
  8033  0500                     __ptext47:	
  8034 ;; *************** function _bin2bcd *****************
  8035 ;; Defined at:
  8036 ;;		line 10 in file "bin2bcd.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  binVal          2   10[COMMON] unsigned short 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  i               1    4[BANK0 ] unsigned char 
  8041 ;;  dataU           4    5[BANK0 ] struct .
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  2   10[COMMON] unsigned short 
  8044 ;; Registers used:
  8045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8051 ;;      Params:         2       0       0       0       0       0
  8052 ;;      Locals:         0       5       0       0       0       0
  8053 ;;      Temps:          0       4       0       0       0       0
  8054 ;;      Totals:         2       9       0       0       0       0
  8055 ;;Total ram usage:       11 bytes
  8056 ;; Hardware stack levels used: 1
  8057 ;; Hardware stack levels required when called: 1
  8058 ;; This function calls:
  8059 ;;		_memset
  8060 ;; This function is called by:
  8061 ;;		_sendInfo
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065  0500                     _bin2bcd:	
  8066                           ;psect for function _bin2bcd
  8067                           
  8068  0500                     i1l2939:	
  8069                           ;incstack = 0
  8070                           ; Regs used in _bin2bcd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8071                           
  8072                           
  8073                           ;bin2bcd.c: 22:     }dataU;;bin2bcd.c: 23:     memset(&dataU,0,4);
  8074  0500  3000               	movlw	0
  8075  0501  00F0               	movwf	memset@c
  8076  0502  00F1               	movwf	memset@c+1
  8077  0503  3004               	movlw	4
  8078  0504  00F2               	movwf	memset@n
  8079  0505  3000               	movlw	0
  8080  0506  00F3               	movwf	memset@n+1
  8081  0507  3025               	movlw	(low (bin2bcd@dataU| 0))& (0+255)
  8082  0508  3184  245C  3185   	fcall	_memset
  8083  050B                     i1l2941:
  8084                           
  8085                           ;bin2bcd.c: 24:     dataU.shift = (uint32_t)binVal;
  8086  050B  087A               	movf	bin2bcd@binVal,w
  8087  050C  0020               	movlb	0	; select bank0
  8088  050D  00A5               	movwf	bin2bcd@dataU
  8089  050E  087B               	movf	bin2bcd@binVal+1,w
  8090  050F  00A6               	movwf	bin2bcd@dataU+1
  8091  0510  01A7               	clrf	bin2bcd@dataU+2
  8092  0511  01A8               	clrf	bin2bcd@dataU+3
  8093  0512                     i1l2943:
  8094                           
  8095                           ;bin2bcd.c: 25:     for(uint8_t i=0;i<12;i++){
  8096  0512  01A4               	clrf	bin2bcd@i
  8097  0513                     i1l2949:
  8098                           
  8099                           ;bin2bcd.c: 26:    if(dataU.dat.d0>=5){
  8100  0513  0828               	movf	bin2bcd@dataU+3,w
  8101  0514  390F               	andlw	15
  8102  0515  00A0               	movwf	??_bin2bcd
  8103  0516  3005               	movlw	5
  8104  0517  0220               	subwf	??_bin2bcd,w
  8105  0518  1C03               	skipc
  8106  0519  2D1B               	goto	u155_21
  8107  051A  2D1C               	goto	u155_20
  8108  051B                     u155_21:
  8109  051B  2D25               	goto	i1l929
  8110  051C                     u155_20:
  8111  051C                     i1l2951:
  8112                           
  8113                           ;bin2bcd.c: 27:     dataU.dat.d0 = dataU.dat.d0 + 3;
  8114  051C  0828               	movf	bin2bcd@dataU+3,w
  8115  051D  390F               	andlw	15
  8116  051E  3E03               	addlw	3
  8117  051F  00A0               	movwf	??_bin2bcd
  8118  0520  0828               	movf	bin2bcd@dataU+3,w
  8119  0521  0620               	xorwf	??_bin2bcd,w
  8120  0522  39F0               	andlw	-16
  8121  0523  0620               	xorwf	??_bin2bcd,w
  8122  0524  00A8               	movwf	bin2bcd@dataU+3
  8123  0525                     i1l929:	
  8124                           ;bin2bcd.c: 28:    }
  8125                           
  8126                           
  8127                           ;bin2bcd.c: 29:    if(dataU.dat.d1>=5){
  8128  0525  0E27               	swapf	bin2bcd@dataU+2,w
  8129  0526  390F               	andlw	15
  8130  0527  00A0               	movwf	??_bin2bcd
  8131  0528  3005               	movlw	5
  8132  0529  0220               	subwf	??_bin2bcd,w
  8133  052A  1C03               	skipc
  8134  052B  2D2D               	goto	u156_21
  8135  052C  2D2E               	goto	u156_20
  8136  052D                     u156_21:
  8137  052D  2D38               	goto	i1l930
  8138  052E                     u156_20:
  8139  052E                     i1l2953:
  8140                           
  8141                           ;bin2bcd.c: 30:     dataU.dat.d1 = dataU.dat.d1 + 3;
  8142  052E  0E27               	swapf	bin2bcd@dataU+2,w
  8143  052F  390F               	andlw	15
  8144  0530  3E03               	addlw	3
  8145  0531  00A0               	movwf	??_bin2bcd
  8146  0532  0EA0               	swapf	??_bin2bcd,f
  8147  0533  0827               	movf	bin2bcd@dataU+2,w
  8148  0534  0620               	xorwf	??_bin2bcd,w
  8149  0535  390F               	andlw	-241
  8150  0536  0620               	xorwf	??_bin2bcd,w
  8151  0537  00A7               	movwf	bin2bcd@dataU+2
  8152  0538                     i1l930:	
  8153                           ;bin2bcd.c: 31:    }
  8154                           
  8155                           
  8156                           ;bin2bcd.c: 32:             if(dataU.dat.d2>=5){
  8157  0538  0827               	movf	bin2bcd@dataU+2,w
  8158  0539  390F               	andlw	15
  8159  053A  00A0               	movwf	??_bin2bcd
  8160  053B  3005               	movlw	5
  8161  053C  0220               	subwf	??_bin2bcd,w
  8162  053D  1C03               	skipc
  8163  053E  2D40               	goto	u157_21
  8164  053F  2D41               	goto	u157_20
  8165  0540                     u157_21:
  8166  0540  2D4A               	goto	i1l931
  8167  0541                     u157_20:
  8168  0541                     i1l2955:
  8169                           
  8170                           ;bin2bcd.c: 33:     dataU.dat.d2 = dataU.dat.d2 + 3;
  8171  0541  0827               	movf	bin2bcd@dataU+2,w
  8172  0542  390F               	andlw	15
  8173  0543  3E03               	addlw	3
  8174  0544  00A0               	movwf	??_bin2bcd
  8175  0545  0827               	movf	bin2bcd@dataU+2,w
  8176  0546  0620               	xorwf	??_bin2bcd,w
  8177  0547  39F0               	andlw	-16
  8178  0548  0620               	xorwf	??_bin2bcd,w
  8179  0549  00A7               	movwf	bin2bcd@dataU+2
  8180  054A                     i1l931:	
  8181                           ;bin2bcd.c: 34:    }
  8182                           
  8183                           
  8184                           ;bin2bcd.c: 35:             if(dataU.dat.d3>=5){
  8185  054A  0E26               	swapf	bin2bcd@dataU+1,w
  8186  054B  390F               	andlw	15
  8187  054C  00A0               	movwf	??_bin2bcd
  8188  054D  3005               	movlw	5
  8189  054E  0220               	subwf	??_bin2bcd,w
  8190  054F  1C03               	skipc
  8191  0550  2D52               	goto	u158_21
  8192  0551  2D53               	goto	u158_20
  8193  0552                     u158_21:
  8194  0552  2D5D               	goto	i1l932
  8195  0553                     u158_20:
  8196  0553                     i1l2957:
  8197                           
  8198                           ;bin2bcd.c: 36:     dataU.dat.d3 = dataU.dat.d3 + 3;
  8199  0553  0E26               	swapf	bin2bcd@dataU+1,w
  8200  0554  390F               	andlw	15
  8201  0555  3E03               	addlw	3
  8202  0556  00A0               	movwf	??_bin2bcd
  8203  0557  0EA0               	swapf	??_bin2bcd,f
  8204  0558  0826               	movf	bin2bcd@dataU+1,w
  8205  0559  0620               	xorwf	??_bin2bcd,w
  8206  055A  390F               	andlw	-241
  8207  055B  0620               	xorwf	??_bin2bcd,w
  8208  055C  00A6               	movwf	bin2bcd@dataU+1
  8209  055D                     i1l932:	
  8210                           ;bin2bcd.c: 37:    }
  8211                           
  8212                           
  8213                           ;bin2bcd.c: 38:    dataU.shift = dataU.shift<<1;
  8214  055D  0825               	movf	bin2bcd@dataU,w
  8215  055E  00A0               	movwf	??_bin2bcd
  8216  055F  0826               	movf	bin2bcd@dataU+1,w
  8217  0560  00A1               	movwf	??_bin2bcd+1
  8218  0561  0827               	movf	bin2bcd@dataU+2,w
  8219  0562  00A2               	movwf	??_bin2bcd+2
  8220  0563  0828               	movf	bin2bcd@dataU+3,w
  8221  0564  00A3               	movwf	??_bin2bcd+3
  8222  0565  3001               	movlw	1
  8223  0566                     u159_25:
  8224  0566  35A0               	lslf	??_bin2bcd,f
  8225  0567  0DA1               	rlf	??_bin2bcd+1,f
  8226  0568  0DA2               	rlf	??_bin2bcd+2,f
  8227  0569  0DA3               	rlf	??_bin2bcd+3,f
  8228  056A                     u159_20:
  8229  056A  0B89               	decfsz	9,f
  8230  056B  2D66               	goto	u159_25
  8231  056C  0823               	movf	??_bin2bcd+3,w
  8232  056D  00A8               	movwf	bin2bcd@dataU+3
  8233  056E  0822               	movf	??_bin2bcd+2,w
  8234  056F  00A7               	movwf	bin2bcd@dataU+2
  8235  0570  0821               	movf	??_bin2bcd+1,w
  8236  0571  00A6               	movwf	bin2bcd@dataU+1
  8237  0572  0820               	movf	??_bin2bcd,w
  8238  0573  00A5               	movwf	bin2bcd@dataU
  8239                           
  8240                           ;bin2bcd.c: 39:     }
  8241  0574  3001               	movlw	1
  8242  0575  00A0               	movwf	??_bin2bcd
  8243  0576  0820               	movf	??_bin2bcd,w
  8244  0577  07A4               	addwf	bin2bcd@i,f
  8245  0578                     i1l2959:
  8246  0578  300C               	movlw	12
  8247  0579  0224               	subwf	bin2bcd@i,w
  8248  057A  1C03               	skipc
  8249  057B  2D7D               	goto	u160_21
  8250  057C  2D7E               	goto	u160_20
  8251  057D                     u160_21:
  8252  057D  2D13               	goto	i1l2949
  8253  057E                     u160_20:
  8254  057E                     i1l2961:
  8255                           
  8256                           ;bin2bcd.c: 40:     return (uint16_t)(dataU.shift>>12);
  8257  057E  0825               	movf	bin2bcd@dataU,w
  8258  057F  00A0               	movwf	??_bin2bcd
  8259  0580  0826               	movf	bin2bcd@dataU+1,w
  8260  0581  00A1               	movwf	??_bin2bcd+1
  8261  0582  0827               	movf	bin2bcd@dataU+2,w
  8262  0583  00A2               	movwf	??_bin2bcd+2
  8263  0584  0828               	movf	bin2bcd@dataU+3,w
  8264  0585  00A3               	movwf	??_bin2bcd+3
  8265  0586  300C               	movlw	12
  8266  0587                     u161_25:
  8267  0587  36A3               	lsrf	??_bin2bcd+3,f
  8268  0588  0CA2               	rrf	??_bin2bcd+2,f
  8269  0589  0CA1               	rrf	??_bin2bcd+1,f
  8270  058A  0CA0               	rrf	??_bin2bcd,f
  8271  058B                     u161_20:
  8272  058B  0B89               	decfsz	9,f
  8273  058C  2D87               	goto	u161_25
  8274  058D  0821               	movf	??_bin2bcd+1,w
  8275  058E  00FB               	movwf	?_bin2bcd+1
  8276  058F  0820               	movf	??_bin2bcd,w
  8277  0590  00FA               	movwf	?_bin2bcd
  8278  0591                     i1l933:
  8279  0591  0008               	return
  8280  0592                     __end_of_bin2bcd:
  8281                           
  8282                           	psect	text48
  8283  045C                     __ptext48:	
  8284 ;; *************** function _memset *****************
  8285 ;; Defined at:
  8286 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  dest            1    wreg     PTR void 
  8289 ;;		 -> bin2bcd@dataU(4), 
  8290 ;;  c               2    0[COMMON] int 
  8291 ;;  n               2    2[COMMON] unsigned int 
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;  dest            1    8[COMMON] PTR void 
  8294 ;;		 -> bin2bcd@dataU(4), 
  8295 ;;  k               2    6[COMMON] unsigned int 
  8296 ;;  s               1    9[COMMON] PTR unsigned char 
  8297 ;;		 -> bin2bcd@dataU(4), 
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      PTR void 
  8300 ;; Registers used:
  8301 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8307 ;;      Params:         4       0       0       0       0       0
  8308 ;;      Locals:         4       0       0       0       0       0
  8309 ;;      Temps:          2       0       0       0       0       0
  8310 ;;      Totals:        10       0       0       0       0       0
  8311 ;;Total ram usage:       10 bytes
  8312 ;; Hardware stack levels used: 1
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_bin2bcd
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320  045C                     _memset:	
  8321                           ;psect for function _memset
  8322                           
  8323                           
  8324                           ;incstack = 0
  8325                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8326                           ;memset@dest stored from wreg
  8327  045C  00F8               	movwf	memset@dest
  8328  045D                     i1l2845:
  8329  045D  0878               	movf	memset@dest,w
  8330  045E  00F4               	movwf	??_memset
  8331  045F  0874               	movf	??_memset,w
  8332  0460  00F9               	movwf	memset@s
  8333  0461                     i1l2847:
  8334  0461  0872               	movf	memset@n,w
  8335  0462  0473               	iorwf	memset@n+1,w
  8336  0463  1D03               	btfss	3,2
  8337  0464  2C66               	goto	u142_21
  8338  0465  2C67               	goto	u142_20
  8339  0466                     u142_21:
  8340  0466  2C68               	goto	i1l2851
  8341  0467                     u142_20:
  8342  0467  2CFF               	goto	i1l1543
  8343  0468                     i1l2851:
  8344  0468  0870               	movf	memset@c,w
  8345  0469  00F4               	movwf	??_memset
  8346  046A  0879               	movf	memset@s,w
  8347  046B  0086               	movwf	6
  8348  046C  0187               	clrf	7
  8349  046D  0874               	movf	??_memset,w
  8350  046E  0081               	movwf	1
  8351  046F                     i1l2853:
  8352  046F  0870               	movf	memset@c,w
  8353  0470  00F4               	movwf	??_memset
  8354  0471  0872               	movf	memset@n,w
  8355  0472  0779               	addwf	memset@s,w
  8356  0473  00F5               	movwf	??_memset+1
  8357  0474  0875               	movf	??_memset+1,w
  8358  0475  3EFF               	addlw	255
  8359  0476  0086               	movwf	6
  8360  0477  0187               	clrf	7
  8361  0478  0874               	movf	??_memset,w
  8362  0479  0081               	movwf	1
  8363  047A                     i1l2855:
  8364  047A  3000               	movlw	0
  8365  047B  0273               	subwf	memset@n+1,w
  8366  047C  3003               	movlw	3
  8367  047D  1903               	skipnz
  8368  047E  0272               	subwf	memset@n,w
  8369  047F  1803               	skipnc
  8370  0480  2C82               	goto	u143_21
  8371  0481  2C83               	goto	u143_20
  8372  0482                     u143_21:
  8373  0482  2C84               	goto	i1l2859
  8374  0483                     u143_20:
  8375  0483  2CFF               	goto	i1l1543
  8376  0484                     i1l2859:
  8377  0484  0870               	movf	memset@c,w
  8378  0485  00F4               	movwf	??_memset
  8379  0486  0A79               	incf	memset@s,w
  8380  0487  0086               	movwf	6
  8381  0488  0187               	clrf	7
  8382  0489  0874               	movf	??_memset,w
  8383  048A  0081               	movwf	1
  8384  048B                     i1l2861:
  8385  048B  0870               	movf	memset@c,w
  8386  048C  00F4               	movwf	??_memset
  8387  048D  0879               	movf	memset@s,w
  8388  048E  3E02               	addlw	2
  8389  048F  0086               	movwf	6
  8390  0490  0187               	clrf	7
  8391  0491  0874               	movf	??_memset,w
  8392  0492  0081               	movwf	1
  8393  0493                     i1l2863:
  8394  0493  0870               	movf	memset@c,w
  8395  0494  00F4               	movwf	??_memset
  8396  0495  0872               	movf	memset@n,w
  8397  0496  0779               	addwf	memset@s,w
  8398  0497  00F5               	movwf	??_memset+1
  8399  0498  0875               	movf	??_memset+1,w
  8400  0499  3EFE               	addlw	254
  8401  049A  0086               	movwf	6
  8402  049B  0187               	clrf	7
  8403  049C  0874               	movf	??_memset,w
  8404  049D  0081               	movwf	1
  8405  049E                     i1l2865:
  8406  049E  0870               	movf	memset@c,w
  8407  049F  00F4               	movwf	??_memset
  8408  04A0  0872               	movf	memset@n,w
  8409  04A1  0779               	addwf	memset@s,w
  8410  04A2  00F5               	movwf	??_memset+1
  8411  04A3  0875               	movf	??_memset+1,w
  8412  04A4  3EFD               	addlw	253
  8413  04A5  0086               	movwf	6
  8414  04A6  0187               	clrf	7
  8415  04A7  0874               	movf	??_memset,w
  8416  04A8  0081               	movwf	1
  8417  04A9                     i1l2867:
  8418  04A9  3000               	movlw	0
  8419  04AA  0273               	subwf	memset@n+1,w
  8420  04AB  3007               	movlw	7
  8421  04AC  1903               	skipnz
  8422  04AD  0272               	subwf	memset@n,w
  8423  04AE  1803               	skipnc
  8424  04AF  2CB1               	goto	u144_21
  8425  04B0  2CB2               	goto	u144_20
  8426  04B1                     u144_21:
  8427  04B1  2CB3               	goto	i1l2871
  8428  04B2                     u144_20:
  8429  04B2  2CFF               	goto	i1l1543
  8430  04B3                     i1l2871:
  8431  04B3  0870               	movf	memset@c,w
  8432  04B4  00F4               	movwf	??_memset
  8433  04B5  0879               	movf	memset@s,w
  8434  04B6  3E03               	addlw	3
  8435  04B7  0086               	movwf	6
  8436  04B8  0187               	clrf	7
  8437  04B9  0874               	movf	??_memset,w
  8438  04BA  0081               	movwf	1
  8439  04BB  0870               	movf	memset@c,w
  8440  04BC  00F4               	movwf	??_memset
  8441  04BD  0872               	movf	memset@n,w
  8442  04BE  0779               	addwf	memset@s,w
  8443  04BF  00F5               	movwf	??_memset+1
  8444  04C0  0875               	movf	??_memset+1,w
  8445  04C1  3EFC               	addlw	252
  8446  04C2  0086               	movwf	6
  8447  04C3  0187               	clrf	7
  8448  04C4  0874               	movf	??_memset,w
  8449  04C5  0081               	movwf	1
  8450  04C6                     i1l2873:
  8451  04C6  3000               	movlw	0
  8452  04C7  0273               	subwf	memset@n+1,w
  8453  04C8  3009               	movlw	9
  8454  04C9  1903               	skipnz
  8455  04CA  0272               	subwf	memset@n,w
  8456  04CB  1803               	skipnc
  8457  04CC  2CCE               	goto	u145_21
  8458  04CD  2CCF               	goto	u145_20
  8459  04CE                     u145_21:
  8460  04CE  2CD0               	goto	i1l2877
  8461  04CF                     u145_20:
  8462  04CF  2CFF               	goto	i1l1543
  8463  04D0                     i1l2877:
  8464  04D0  0979               	comf	memset@s,w
  8465  04D1  00F4               	movwf	??_memset
  8466  04D2  097A               	comf	memset@s+1,w
  8467  04D3  00F5               	movwf	??_memset+1
  8468  04D4  0AF4               	incf	??_memset,f
  8469  04D5  1903               	skipnz
  8470  04D6  0AF5               	incf	??_memset+1,f
  8471  04D7  3003               	movlw	3
  8472  04D8  0574               	andwf	??_memset,w
  8473  04D9  00F6               	movwf	memset@k
  8474  04DA  3000               	movlw	0
  8475  04DB  0575               	andwf	??_memset+1,w
  8476  04DC  00F7               	movwf	memset@k+1
  8477  04DD  0876               	movf	memset@k,w
  8478  04DE  00F4               	movwf	??_memset
  8479  04DF  0874               	movf	??_memset,w
  8480  04E0  07F9               	addwf	memset@s,f
  8481  04E1                     i1l2879:
  8482  04E1  0876               	movf	memset@k,w
  8483  04E2  02F2               	subwf	memset@n,f
  8484  04E3  0877               	movf	memset@k+1,w
  8485  04E4  3BF3               	subwfb	memset@n+1,f
  8486  04E5                     i1l2881:
  8487  04E5  30FC               	movlw	252
  8488  04E6  05F2               	andwf	memset@n,f
  8489  04E7  30FF               	movlw	255
  8490  04E8  05F3               	andwf	memset@n+1,f
  8491  04E9  2CF9               	goto	i1l2889
  8492  04EA                     i1l2883:
  8493  04EA  0870               	movf	memset@c,w
  8494  04EB  00F4               	movwf	??_memset
  8495  04EC  0879               	movf	memset@s,w
  8496  04ED  0086               	movwf	6
  8497  04EE  0187               	clrf	7
  8498  04EF  0874               	movf	??_memset,w
  8499  04F0  0081               	movwf	1
  8500  04F1                     i1l2885:
  8501  04F1  3001               	movlw	1
  8502  04F2  02F2               	subwf	memset@n,f
  8503  04F3  3000               	movlw	0
  8504  04F4  3BF3               	subwfb	memset@n+1,f
  8505  04F5                     i1l2887:
  8506  04F5  3001               	movlw	1
  8507  04F6  00F4               	movwf	??_memset
  8508  04F7  0874               	movf	??_memset,w
  8509  04F8  07F9               	addwf	memset@s,f
  8510  04F9                     i1l2889:
  8511  04F9  0872               	movf	memset@n,w
  8512  04FA  0473               	iorwf	memset@n+1,w
  8513  04FB  1D03               	btfss	3,2
  8514  04FC  2CFE               	goto	u146_21
  8515  04FD  2CFF               	goto	u146_20
  8516  04FE                     u146_21:
  8517  04FE  2CEA               	goto	i1l2883
  8518  04FF                     u146_20:
  8519  04FF                     i1l1543:
  8520  04FF  0008               	return
  8521  0500                     __end_of_memset:
  8522                           
  8523                           	psect	text49
  8524  0D31                     __ptext49:	
  8525 ;; *************** function ___wmul *****************
  8526 ;; Defined at:
  8527 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  multiplier      2    4[COMMON] unsigned int 
  8530 ;;  multiplicand    2    6[COMMON] unsigned int 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;  product         2    8[COMMON] unsigned int 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  2    4[COMMON] unsigned int 
  8535 ;; Registers used:
  8536 ;;		wreg, status,2, status,0
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8542 ;;      Params:         4       0       0       0       0       0
  8543 ;;      Locals:         2       0       0       0       0       0
  8544 ;;      Temps:          0       0       0       0       0       0
  8545 ;;      Totals:         6       0       0       0       0       0
  8546 ;;Total ram usage:        6 bytes
  8547 ;; Hardware stack levels used: 1
  8548 ;; This function calls:
  8549 ;;		Nothing
  8550 ;; This function is called by:
  8551 ;;		_sendInfo
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555  0D31                     ___wmul:	
  8556                           ;psect for function ___wmul
  8557                           
  8558  0D31                     i1l2965:	
  8559                           ;incstack = 0
  8560                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8561                           
  8562  0D31  01F8               	clrf	___wmul@product
  8563  0D32  01F9               	clrf	___wmul@product+1
  8564  0D33                     i1l2967:
  8565  0D33  1C74               	btfss	___wmul@multiplier,0
  8566  0D34  2D36               	goto	u162_21
  8567  0D35  2D37               	goto	u162_20
  8568  0D36                     u162_21:
  8569  0D36  2D3B               	goto	i1l1083
  8570  0D37                     u162_20:
  8571  0D37                     i1l2969:
  8572  0D37  0876               	movf	___wmul@multiplicand,w
  8573  0D38  07F8               	addwf	___wmul@product,f
  8574  0D39  0877               	movf	___wmul@multiplicand+1,w
  8575  0D3A  3DF9               	addwfc	___wmul@product+1,f
  8576  0D3B                     i1l1083:
  8577  0D3B  3001               	movlw	1
  8578  0D3C                     u163_25:
  8579  0D3C  35F6               	lslf	___wmul@multiplicand,f
  8580  0D3D  0DF7               	rlf	___wmul@multiplicand+1,f
  8581  0D3E  0B89               	decfsz	9,f
  8582  0D3F  2D3C               	goto	u163_25
  8583  0D40                     i1l2971:
  8584  0D40  3001               	movlw	1
  8585  0D41                     u164_25:
  8586  0D41  36F5               	lsrf	___wmul@multiplier+1,f
  8587  0D42  0CF4               	rrf	___wmul@multiplier,f
  8588  0D43  0B89               	decfsz	9,f
  8589  0D44  2D41               	goto	u164_25
  8590  0D45                     i1l2973:
  8591  0D45  0874               	movf	___wmul@multiplier,w
  8592  0D46  0475               	iorwf	___wmul@multiplier+1,w
  8593  0D47  1D03               	btfss	3,2
  8594  0D48  2D4A               	goto	u165_21
  8595  0D49  2D4B               	goto	u165_20
  8596  0D4A                     u165_21:
  8597  0D4A  2D33               	goto	i1l2967
  8598  0D4B                     u165_20:
  8599  0D4B                     i1l2975:
  8600  0D4B  0879               	movf	___wmul@product+1,w
  8601  0D4C  00F5               	movwf	?___wmul+1
  8602  0D4D  0878               	movf	___wmul@product,w
  8603  0D4E  00F4               	movwf	?___wmul
  8604  0D4F                     i1l1085:
  8605  0D4F  0008               	return
  8606  0D50                     __end_of___wmul:
  8607                           
  8608                           	psect	text50
  8609  068A                     __ptext50:	
  8610 ;; *************** function ___fltol *****************
  8611 ;; Defined at:
  8612 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  f1              4   21[BANK0 ] unsigned int 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  exp1            1   31[BANK0 ] unsigned char 
  8617 ;;  sign1           1   30[BANK0 ] unsigned char 
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  4   21[BANK0 ] long 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8627 ;;      Params:         0       4       0       0       0       0
  8628 ;;      Locals:         0       2       0       0       0       0
  8629 ;;      Temps:          0       5       0       0       0       0
  8630 ;;      Totals:         0      11       0       0       0       0
  8631 ;;Total ram usage:       11 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_sendInfo
  8637 ;;		_interrupcaoCCP4
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641  068A                     ___fltol:	
  8642                           ;psect for function ___fltol
  8643                           
  8644  068A                     i1l2979:	
  8645                           ;incstack = 0
  8646                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8647                           
  8648  068A  1003               	clrc
  8649  068B  0020               	movlb	0	; select bank0
  8650  068C  0D37               	rlf	___fltol@f1+2,w
  8651  068D  0D38               	rlf	___fltol@f1+3,w
  8652  068E  00B9               	movwf	??___fltol
  8653  068F  0839               	movf	??___fltol,w
  8654  0690  00BF               	movwf	___fltol@exp1
  8655  0691  083F               	movf	___fltol@exp1,w
  8656  0692  1D03               	btfss	3,2
  8657  0693  2E95               	goto	u166_21
  8658  0694  2E96               	goto	u166_20
  8659  0695                     u166_21:
  8660  0695  2E9F               	goto	i1l2985
  8661  0696                     u166_20:
  8662  0696                     i1l2981:
  8663  0696  3000               	movlw	0
  8664  0697  00B8               	movwf	?___fltol+3
  8665  0698  3000               	movlw	0
  8666  0699  00B7               	movwf	?___fltol+2
  8667  069A  3000               	movlw	0
  8668  069B  00B6               	movwf	?___fltol+1
  8669  069C  3000               	movlw	0
  8670  069D  00B5               	movwf	?___fltol
  8671  069E  2EFE               	goto	i1l1277
  8672  069F                     i1l2985:
  8673  069F  0835               	movf	___fltol@f1,w
  8674  06A0  00B9               	movwf	??___fltol
  8675  06A1  0836               	movf	___fltol@f1+1,w
  8676  06A2  00BA               	movwf	??___fltol+1
  8677  06A3  0837               	movf	___fltol@f1+2,w
  8678  06A4  00BB               	movwf	??___fltol+2
  8679  06A5  0838               	movf	___fltol@f1+3,w
  8680  06A6  00BC               	movwf	??___fltol+3
  8681  06A7  301F               	movlw	31
  8682  06A8                     u167_25:
  8683  06A8  36BC               	lsrf	??___fltol+3,f
  8684  06A9  0CBB               	rrf	??___fltol+2,f
  8685  06AA  0CBA               	rrf	??___fltol+1,f
  8686  06AB  0CB9               	rrf	??___fltol,f
  8687  06AC                     u167_20:
  8688  06AC  0B89               	decfsz	9,f
  8689  06AD  2EA8               	goto	u167_25
  8690  06AE  0839               	movf	??___fltol,w
  8691  06AF  00BD               	movwf	??___fltol+4
  8692  06B0  083D               	movf	??___fltol+4,w
  8693  06B1  00BE               	movwf	___fltol@sign1
  8694  06B2                     i1l2987:
  8695  06B2  17B7               	bsf	___fltol@f1+2,7
  8696  06B3                     i1l2989:
  8697  06B3  30FF               	movlw	255
  8698  06B4  05B5               	andwf	___fltol@f1,f
  8699  06B5  30FF               	movlw	255
  8700  06B6  05B6               	andwf	___fltol@f1+1,f
  8701  06B7  30FF               	movlw	255
  8702  06B8  05B7               	andwf	___fltol@f1+2,f
  8703  06B9  3000               	movlw	0
  8704  06BA  05B8               	andwf	___fltol@f1+3,f
  8705  06BB                     i1l2991:
  8706  06BB  3096               	movlw	150
  8707  06BC  02BF               	subwf	___fltol@exp1,f
  8708  06BD                     i1l2993:
  8709  06BD  1FBF               	btfss	___fltol@exp1,7
  8710  06BE  2EC0               	goto	u168_21
  8711  06BF  2EC1               	goto	u168_20
  8712  06C0                     u168_21:
  8713  06C0  2ED9               	goto	i1l3003
  8714  06C1                     u168_20:
  8715  06C1                     i1l2995:
  8716  06C1  083F               	movf	___fltol@exp1,w
  8717  06C2  3A80               	xorlw	128
  8718  06C3  3E97               	addlw	151
  8719  06C4  1803               	skipnc
  8720  06C5  2EC7               	goto	u169_21
  8721  06C6  2EC8               	goto	u169_20
  8722  06C7                     u169_21:
  8723  06C7  2EC9               	goto	i1l3001
  8724  06C8                     u169_20:
  8725  06C8  2E96               	goto	i1l2981
  8726  06C9                     i1l3001:
  8727  06C9  3001               	movlw	1
  8728  06CA                     u170_25:
  8729  06CA  36B8               	lsrf	___fltol@f1+3,f
  8730  06CB  0CB7               	rrf	___fltol@f1+2,f
  8731  06CC  0CB6               	rrf	___fltol@f1+1,f
  8732  06CD  0CB5               	rrf	___fltol@f1,f
  8733  06CE  0B89               	decfsz	9,f
  8734  06CF  2ECA               	goto	u170_25
  8735  06D0  3001               	movlw	1
  8736  06D1  00B9               	movwf	??___fltol
  8737  06D2  0839               	movf	??___fltol,w
  8738  06D3  07BF               	addwf	___fltol@exp1,f
  8739  06D4  1D03               	btfss	3,2
  8740  06D5  2ED7               	goto	u171_21
  8741  06D6  2ED8               	goto	u171_20
  8742  06D7                     u171_21:
  8743  06D7  2EC9               	goto	i1l3001
  8744  06D8                     u171_20:
  8745  06D8  2EEE               	goto	i1l3011
  8746  06D9                     i1l3003:
  8747  06D9  3020               	movlw	32
  8748  06DA  023F               	subwf	___fltol@exp1,w
  8749  06DB  1C03               	skipc
  8750  06DC  2EDE               	goto	u172_21
  8751  06DD  2EDF               	goto	u172_20
  8752  06DE                     u172_21:
  8753  06DE  2EE9               	goto	i1l1284
  8754  06DF                     u172_20:
  8755  06DF  2E96               	goto	i1l2981
  8756  06E0                     i1l3009:
  8757  06E0  3001               	movlw	1
  8758  06E1                     u173_25:
  8759  06E1  35B5               	lslf	___fltol@f1,f
  8760  06E2  0DB6               	rlf	___fltol@f1+1,f
  8761  06E3  0DB7               	rlf	___fltol@f1+2,f
  8762  06E4  0DB8               	rlf	___fltol@f1+3,f
  8763  06E5  0B89               	decfsz	9,f
  8764  06E6  2EE1               	goto	u173_25
  8765  06E7  3001               	movlw	1
  8766  06E8  02BF               	subwf	___fltol@exp1,f
  8767  06E9                     i1l1284:
  8768  06E9  083F               	movf	___fltol@exp1,w
  8769  06EA  1D03               	btfss	3,2
  8770  06EB  2EED               	goto	u174_21
  8771  06EC  2EEE               	goto	u174_20
  8772  06ED                     u174_21:
  8773  06ED  2EE0               	goto	i1l3009
  8774  06EE                     u174_20:
  8775  06EE                     i1l3011:
  8776  06EE  083E               	movf	___fltol@sign1,w
  8777  06EF  1903               	btfsc	3,2
  8778  06F0  2EF2               	goto	u175_21
  8779  06F1  2EF3               	goto	u175_20
  8780  06F2                     u175_21:
  8781  06F2  2EFE               	goto	i1l1287
  8782  06F3                     u175_20:
  8783  06F3                     i1l3013:
  8784  06F3  09B5               	comf	___fltol@f1,f
  8785  06F4  09B6               	comf	___fltol@f1+1,f
  8786  06F5  09B7               	comf	___fltol@f1+2,f
  8787  06F6  09B8               	comf	___fltol@f1+3,f
  8788  06F7  0AB5               	incf	___fltol@f1,f
  8789  06F8  1903               	skipnz
  8790  06F9  0AB6               	incf	___fltol@f1+1,f
  8791  06FA  1903               	skipnz
  8792  06FB  0AB7               	incf	___fltol@f1+2,f
  8793  06FC  1903               	skipnz
  8794  06FD  0AB8               	incf	___fltol@f1+3,f
  8795  06FE                     i1l1287:
  8796  06FE                     i1l1277:
  8797  06FE  0008               	return
  8798  06FF                     __end_of___fltol:
  8799                           
  8800                           	psect	text51
  8801  0071                     __ptext51:	
  8802 ;; *************** function ___flmul *****************
  8803 ;; Defined at:
  8804 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  b               4    0[BANK0 ] long 
  8807 ;;  a               4    4[BANK0 ] long 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  prod            4   15[BANK0 ] struct .
  8810 ;;  grs             4    9[BANK0 ] unsigned long 
  8811 ;;  temp            2   19[BANK0 ] struct .
  8812 ;;  bexp            1   14[BANK0 ] unsigned char 
  8813 ;;  aexp            1   13[BANK0 ] unsigned char 
  8814 ;;  sign            1    8[BANK0 ] unsigned char 
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  4    0[BANK0 ] unsigned char 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0, pclath, cstack
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8824 ;;      Params:         0       8       0       0       0       0
  8825 ;;      Locals:         0      13       0       0       0       0
  8826 ;;      Temps:          5       0       0       0       0       0
  8827 ;;      Totals:         5      21       0       0       0       0
  8828 ;;Total ram usage:       26 bytes
  8829 ;; Hardware stack levels used: 1
  8830 ;; Hardware stack levels required when called: 1
  8831 ;; This function calls:
  8832 ;;		__Umul8_16
  8833 ;; This function is called by:
  8834 ;;		_sendInfo
  8835 ;;		_interrupcaoCCP4
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839  0071                     ___flmul:	
  8840                           ;psect for function ___flmul
  8841                           
  8842  0071                     i1l3015:	
  8843                           ;incstack = 0
  8844                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8845                           
  8846  0071  0020               	movlb	0	; select bank0
  8847  0072  0823               	movf	___flmul@b+3,w
  8848  0073  3980               	andlw	128
  8849  0074  00F9               	movwf	??___flmul
  8850  0075  0879               	movf	??___flmul,w
  8851  0076  00A8               	movwf	___flmul@sign
  8852  0077                     i1l3017:
  8853  0077  3523               	lslf	___flmul@b+3,w
  8854  0078  00F9               	movwf	??___flmul
  8855  0079  0879               	movf	??___flmul,w
  8856  007A  00AE               	movwf	___flmul@bexp
  8857  007B                     i1l3019:
  8858  007B  1FA2               	btfss	___flmul@b+2,7
  8859  007C  287E               	goto	u176_21
  8860  007D  287F               	goto	u176_20
  8861  007E                     u176_21:
  8862  007E  2880               	goto	i1l3023
  8863  007F                     u176_20:
  8864  007F                     i1l3021:
  8865  007F  142E               	bsf	___flmul@bexp,0
  8866  0080                     i1l3023:
  8867  0080  082E               	movf	___flmul@bexp,w
  8868  0081  1903               	btfsc	3,2
  8869  0082  2884               	goto	u177_21
  8870  0083  2885               	goto	u177_20
  8871  0084                     u177_21:
  8872  0084  2894               	goto	i1l3031
  8873  0085                     u177_20:
  8874  0085                     i1l3025:
  8875  0085  0A2E               	incf	___flmul@bexp,w
  8876  0086  1D03               	btfss	3,2
  8877  0087  2889               	goto	u178_21
  8878  0088  288A               	goto	u178_20
  8879  0089                     u178_21:
  8880  0089  2892               	goto	i1l3029
  8881  008A                     u178_20:
  8882  008A                     i1l3027:
  8883  008A  3000               	movlw	0
  8884  008B  00A3               	movwf	___flmul@b+3
  8885  008C  3000               	movlw	0
  8886  008D  00A2               	movwf	___flmul@b+2
  8887  008E  3000               	movlw	0
  8888  008F  00A1               	movwf	___flmul@b+1
  8889  0090  3000               	movlw	0
  8890  0091  00A0               	movwf	___flmul@b
  8891  0092                     i1l3029:
  8892  0092  17A2               	bsf	___flmul@b+2,7
  8893  0093  289C               	goto	i1l3033
  8894  0094                     i1l3031:
  8895  0094  3000               	movlw	0
  8896  0095  00A3               	movwf	___flmul@b+3
  8897  0096  3000               	movlw	0
  8898  0097  00A2               	movwf	___flmul@b+2
  8899  0098  3000               	movlw	0
  8900  0099  00A1               	movwf	___flmul@b+1
  8901  009A  3000               	movlw	0
  8902  009B  00A0               	movwf	___flmul@b
  8903  009C                     i1l3033:
  8904  009C  0827               	movf	___flmul@a+3,w
  8905  009D  3980               	andlw	128
  8906  009E  00F9               	movwf	??___flmul
  8907  009F  0879               	movf	??___flmul,w
  8908  00A0  06A8               	xorwf	___flmul@sign,f
  8909  00A1                     i1l3035:
  8910  00A1  3527               	lslf	___flmul@a+3,w
  8911  00A2  00F9               	movwf	??___flmul
  8912  00A3  0879               	movf	??___flmul,w
  8913  00A4  00AD               	movwf	___flmul@aexp
  8914  00A5                     i1l3037:
  8915  00A5  1FA6               	btfss	___flmul@a+2,7
  8916  00A6  28A8               	goto	u179_21
  8917  00A7  28A9               	goto	u179_20
  8918  00A8                     u179_21:
  8919  00A8  28AA               	goto	i1l3041
  8920  00A9                     u179_20:
  8921  00A9                     i1l3039:
  8922  00A9  142D               	bsf	___flmul@aexp,0
  8923  00AA                     i1l3041:
  8924  00AA  082D               	movf	___flmul@aexp,w
  8925  00AB  1903               	btfsc	3,2
  8926  00AC  28AE               	goto	u180_21
  8927  00AD  28AF               	goto	u180_20
  8928  00AE                     u180_21:
  8929  00AE  28BE               	goto	i1l3049
  8930  00AF                     u180_20:
  8931  00AF                     i1l3043:
  8932  00AF  0A2D               	incf	___flmul@aexp,w
  8933  00B0  1D03               	btfss	3,2
  8934  00B1  28B3               	goto	u181_21
  8935  00B2  28B4               	goto	u181_20
  8936  00B3                     u181_21:
  8937  00B3  28BC               	goto	i1l3047
  8938  00B4                     u181_20:
  8939  00B4                     i1l3045:
  8940  00B4  3000               	movlw	0
  8941  00B5  00A7               	movwf	___flmul@a+3
  8942  00B6  3000               	movlw	0
  8943  00B7  00A6               	movwf	___flmul@a+2
  8944  00B8  3000               	movlw	0
  8945  00B9  00A5               	movwf	___flmul@a+1
  8946  00BA  3000               	movlw	0
  8947  00BB  00A4               	movwf	___flmul@a
  8948  00BC                     i1l3047:
  8949  00BC  17A6               	bsf	___flmul@a+2,7
  8950  00BD  28C6               	goto	i1l3051
  8951  00BE                     i1l3049:
  8952  00BE  3000               	movlw	0
  8953  00BF  00A7               	movwf	___flmul@a+3
  8954  00C0  3000               	movlw	0
  8955  00C1  00A6               	movwf	___flmul@a+2
  8956  00C2  3000               	movlw	0
  8957  00C3  00A5               	movwf	___flmul@a+1
  8958  00C4  3000               	movlw	0
  8959  00C5  00A4               	movwf	___flmul@a
  8960  00C6                     i1l3051:
  8961  00C6  082D               	movf	___flmul@aexp,w
  8962  00C7  1903               	btfsc	3,2
  8963  00C8  28CA               	goto	u182_21
  8964  00C9  28CB               	goto	u182_20
  8965  00CA                     u182_21:
  8966  00CA  28D0               	goto	i1l3055
  8967  00CB                     u182_20:
  8968  00CB                     i1l3053:
  8969  00CB  082E               	movf	___flmul@bexp,w
  8970  00CC  1D03               	btfss	3,2
  8971  00CD  28CF               	goto	u183_21
  8972  00CE  28D0               	goto	u183_20
  8973  00CF                     u183_21:
  8974  00CF  28D9               	goto	i1l3059
  8975  00D0                     u183_20:
  8976  00D0                     i1l3055:
  8977  00D0  3000               	movlw	0
  8978  00D1  00A3               	movwf	?___flmul+3
  8979  00D2  3000               	movlw	0
  8980  00D3  00A2               	movwf	?___flmul+2
  8981  00D4  3000               	movlw	0
  8982  00D5  00A1               	movwf	?___flmul+1
  8983  00D6  3000               	movlw	0
  8984  00D7  00A0               	movwf	?___flmul
  8985  00D8  2AC7               	goto	i1l1480
  8986  00D9                     i1l3059:
  8987  00D9  0820               	movf	___flmul@b,w
  8988  00DA  00F9               	movwf	??___flmul
  8989  00DB  0879               	movf	??___flmul,w
  8990  00DC  00F0               	movwf	__Umul8_16@multiplicand
  8991  00DD  0826               	movf	___flmul@a+2,w
  8992  00DE  318D  2592  3180   	fcall	__Umul8_16
  8993  00E1  0871               	movf	?__Umul8_16+1,w
  8994  00E2  0020               	movlb	0	; select bank0
  8995  00E3  00B4               	movwf	___flmul@temp+1
  8996  00E4  0870               	movf	?__Umul8_16,w
  8997  00E5  00B3               	movwf	___flmul@temp
  8998  00E6                     i1l3061:
  8999  00E6  0833               	movf	___flmul@temp,w
  9000  00E7  00F9               	movwf	??___flmul
  9001  00E8  01FA               	clrf	??___flmul+1
  9002  00E9  01FB               	clrf	??___flmul+2
  9003  00EA  01FC               	clrf	??___flmul+3
  9004  00EB  087C               	movf	??___flmul+3,w
  9005  00EC  00AC               	movwf	___flmul@grs+3
  9006  00ED  087B               	movf	??___flmul+2,w
  9007  00EE  00AB               	movwf	___flmul@grs+2
  9008  00EF  087A               	movf	??___flmul+1,w
  9009  00F0  00AA               	movwf	___flmul@grs+1
  9010  00F1  0879               	movf	??___flmul,w
  9011  00F2  00A9               	movwf	___flmul@grs
  9012  00F3                     i1l3063:
  9013  00F3  0834               	movf	___flmul@temp+1,w
  9014  00F4  00F9               	movwf	??___flmul
  9015  00F5  01FA               	clrf	??___flmul+1
  9016  00F6  01FB               	clrf	??___flmul+2
  9017  00F7  01FC               	clrf	??___flmul+3
  9018  00F8  087C               	movf	??___flmul+3,w
  9019  00F9  00B2               	movwf	___flmul@prod+3
  9020  00FA  087B               	movf	??___flmul+2,w
  9021  00FB  00B1               	movwf	___flmul@prod+2
  9022  00FC  087A               	movf	??___flmul+1,w
  9023  00FD  00B0               	movwf	___flmul@prod+1
  9024  00FE  0879               	movf	??___flmul,w
  9025  00FF  00AF               	movwf	___flmul@prod
  9026  0100  0821               	movf	___flmul@b+1,w
  9027  0101  00F9               	movwf	??___flmul
  9028  0102  0879               	movf	??___flmul,w
  9029  0103  00F0               	movwf	__Umul8_16@multiplicand
  9030  0104  0825               	movf	___flmul@a+1,w
  9031  0105  318D  2592  3180   	fcall	__Umul8_16
  9032  0108  0871               	movf	?__Umul8_16+1,w
  9033  0109  0020               	movlb	0	; select bank0
  9034  010A  00B4               	movwf	___flmul@temp+1
  9035  010B  0870               	movf	?__Umul8_16,w
  9036  010C  00B3               	movwf	___flmul@temp
  9037  010D                     i1l3065:
  9038  010D  0833               	movf	___flmul@temp,w
  9039  010E  00F9               	movwf	??___flmul
  9040  010F  01FA               	clrf	??___flmul+1
  9041  0110  01FB               	clrf	??___flmul+2
  9042  0111  01FC               	clrf	??___flmul+3
  9043  0112  0879               	movf	??___flmul,w
  9044  0113  07A9               	addwf	___flmul@grs,f
  9045  0114  087A               	movf	??___flmul+1,w
  9046  0115  3DAA               	addwfc	___flmul@grs+1,f
  9047  0116  087B               	movf	??___flmul+2,w
  9048  0117  3DAB               	addwfc	___flmul@grs+2,f
  9049  0118  087C               	movf	??___flmul+3,w
  9050  0119  3DAC               	addwfc	___flmul@grs+3,f
  9051  011A                     i1l3067:
  9052  011A  0834               	movf	___flmul@temp+1,w
  9053  011B  00F9               	movwf	??___flmul
  9054  011C  01FA               	clrf	??___flmul+1
  9055  011D  01FB               	clrf	??___flmul+2
  9056  011E  01FC               	clrf	??___flmul+3
  9057  011F  0879               	movf	??___flmul,w
  9058  0120  07AF               	addwf	___flmul@prod,f
  9059  0121  087A               	movf	??___flmul+1,w
  9060  0122  3DB0               	addwfc	___flmul@prod+1,f
  9061  0123  087B               	movf	??___flmul+2,w
  9062  0124  3DB1               	addwfc	___flmul@prod+2,f
  9063  0125  087C               	movf	??___flmul+3,w
  9064  0126  3DB2               	addwfc	___flmul@prod+3,f
  9065  0127  0822               	movf	___flmul@b+2,w
  9066  0128  00F9               	movwf	??___flmul
  9067  0129  0879               	movf	??___flmul,w
  9068  012A  00F0               	movwf	__Umul8_16@multiplicand
  9069  012B  0824               	movf	___flmul@a,w
  9070  012C  318D  2592  3180   	fcall	__Umul8_16
  9071  012F  0871               	movf	?__Umul8_16+1,w
  9072  0130  0020               	movlb	0	; select bank0
  9073  0131  00B4               	movwf	___flmul@temp+1
  9074  0132  0870               	movf	?__Umul8_16,w
  9075  0133  00B3               	movwf	___flmul@temp
  9076  0134                     i1l3069:
  9077  0134  0833               	movf	___flmul@temp,w
  9078  0135  00F9               	movwf	??___flmul
  9079  0136  01FA               	clrf	??___flmul+1
  9080  0137  01FB               	clrf	??___flmul+2
  9081  0138  01FC               	clrf	??___flmul+3
  9082  0139  0879               	movf	??___flmul,w
  9083  013A  07A9               	addwf	___flmul@grs,f
  9084  013B  087A               	movf	??___flmul+1,w
  9085  013C  3DAA               	addwfc	___flmul@grs+1,f
  9086  013D  087B               	movf	??___flmul+2,w
  9087  013E  3DAB               	addwfc	___flmul@grs+2,f
  9088  013F  087C               	movf	??___flmul+3,w
  9089  0140  3DAC               	addwfc	___flmul@grs+3,f
  9090  0141                     i1l3071:
  9091  0141  0834               	movf	___flmul@temp+1,w
  9092  0142  00F9               	movwf	??___flmul
  9093  0143  01FA               	clrf	??___flmul+1
  9094  0144  01FB               	clrf	??___flmul+2
  9095  0145  01FC               	clrf	??___flmul+3
  9096  0146  0879               	movf	??___flmul,w
  9097  0147  07AF               	addwf	___flmul@prod,f
  9098  0148  087A               	movf	??___flmul+1,w
  9099  0149  3DB0               	addwfc	___flmul@prod+1,f
  9100  014A  087B               	movf	??___flmul+2,w
  9101  014B  3DB1               	addwfc	___flmul@prod+2,f
  9102  014C  087C               	movf	??___flmul+3,w
  9103  014D  3DB2               	addwfc	___flmul@prod+3,f
  9104  014E                     i1l3073:
  9105  014E  3008               	movlw	8
  9106  014F                     u184_25:
  9107  014F  35A9               	lslf	___flmul@grs,f
  9108  0150  0DAA               	rlf	___flmul@grs+1,f
  9109  0151  0DAB               	rlf	___flmul@grs+2,f
  9110  0152  0DAC               	rlf	___flmul@grs+3,f
  9111  0153  0B89               	decfsz	9,f
  9112  0154  294F               	goto	u184_25
  9113  0155                     i1l3075:
  9114  0155  0821               	movf	___flmul@b+1,w
  9115  0156  00F9               	movwf	??___flmul
  9116  0157  0879               	movf	??___flmul,w
  9117  0158  00F0               	movwf	__Umul8_16@multiplicand
  9118  0159  0824               	movf	___flmul@a,w
  9119  015A  318D  2592  3180   	fcall	__Umul8_16
  9120  015D  0871               	movf	?__Umul8_16+1,w
  9121  015E  0020               	movlb	0	; select bank0
  9122  015F  00B4               	movwf	___flmul@temp+1
  9123  0160  0870               	movf	?__Umul8_16,w
  9124  0161  00B3               	movwf	___flmul@temp
  9125  0162                     i1l3077:
  9126  0162  0833               	movf	___flmul@temp,w
  9127  0163  07A9               	addwf	___flmul@grs,f
  9128  0164  0834               	movf	___flmul@temp+1,w
  9129  0165  3DAA               	addwfc	___flmul@grs+1,f
  9130  0166  3000               	movlw	0
  9131  0167  3DAB               	addwfc	___flmul@grs+2,f
  9132  0168  3DAC               	addwfc	___flmul@grs+3,f
  9133  0169                     i1l3079:
  9134  0169  0820               	movf	___flmul@b,w
  9135  016A  00F9               	movwf	??___flmul
  9136  016B  0879               	movf	??___flmul,w
  9137  016C  00F0               	movwf	__Umul8_16@multiplicand
  9138  016D  0825               	movf	___flmul@a+1,w
  9139  016E  318D  2592  3180   	fcall	__Umul8_16
  9140  0171  0871               	movf	?__Umul8_16+1,w
  9141  0172  0020               	movlb	0	; select bank0
  9142  0173  00B4               	movwf	___flmul@temp+1
  9143  0174  0870               	movf	?__Umul8_16,w
  9144  0175  00B3               	movwf	___flmul@temp
  9145  0176                     i1l3081:
  9146  0176  0833               	movf	___flmul@temp,w
  9147  0177  07A9               	addwf	___flmul@grs,f
  9148  0178  0834               	movf	___flmul@temp+1,w
  9149  0179  3DAA               	addwfc	___flmul@grs+1,f
  9150  017A  3000               	movlw	0
  9151  017B  3DAB               	addwfc	___flmul@grs+2,f
  9152  017C  3DAC               	addwfc	___flmul@grs+3,f
  9153  017D                     i1l3083:
  9154  017D  3008               	movlw	8
  9155  017E                     u185_25:
  9156  017E  35A9               	lslf	___flmul@grs,f
  9157  017F  0DAA               	rlf	___flmul@grs+1,f
  9158  0180  0DAB               	rlf	___flmul@grs+2,f
  9159  0181  0DAC               	rlf	___flmul@grs+3,f
  9160  0182  0B89               	decfsz	9,f
  9161  0183  297E               	goto	u185_25
  9162  0184  0820               	movf	___flmul@b,w
  9163  0185  00F9               	movwf	??___flmul
  9164  0186  0879               	movf	??___flmul,w
  9165  0187  00F0               	movwf	__Umul8_16@multiplicand
  9166  0188  0824               	movf	___flmul@a,w
  9167  0189  318D  2592  3180   	fcall	__Umul8_16
  9168  018C  0871               	movf	?__Umul8_16+1,w
  9169  018D  0020               	movlb	0	; select bank0
  9170  018E  00B4               	movwf	___flmul@temp+1
  9171  018F  0870               	movf	?__Umul8_16,w
  9172  0190  00B3               	movwf	___flmul@temp
  9173  0191                     i1l3085:
  9174  0191  0833               	movf	___flmul@temp,w
  9175  0192  07A9               	addwf	___flmul@grs,f
  9176  0193  0834               	movf	___flmul@temp+1,w
  9177  0194  3DAA               	addwfc	___flmul@grs+1,f
  9178  0195  3000               	movlw	0
  9179  0196  3DAB               	addwfc	___flmul@grs+2,f
  9180  0197  3DAC               	addwfc	___flmul@grs+3,f
  9181  0198                     i1l3087:
  9182  0198  0821               	movf	___flmul@b+1,w
  9183  0199  00F9               	movwf	??___flmul
  9184  019A  0879               	movf	??___flmul,w
  9185  019B  00F0               	movwf	__Umul8_16@multiplicand
  9186  019C  0826               	movf	___flmul@a+2,w
  9187  019D  318D  2592  3180   	fcall	__Umul8_16
  9188  01A0  0871               	movf	?__Umul8_16+1,w
  9189  01A1  0020               	movlb	0	; select bank0
  9190  01A2  00B4               	movwf	___flmul@temp+1
  9191  01A3  0870               	movf	?__Umul8_16,w
  9192  01A4  00B3               	movwf	___flmul@temp
  9193  01A5  0833               	movf	___flmul@temp,w
  9194  01A6  07AF               	addwf	___flmul@prod,f
  9195  01A7  0834               	movf	___flmul@temp+1,w
  9196  01A8  3DB0               	addwfc	___flmul@prod+1,f
  9197  01A9  3000               	movlw	0
  9198  01AA  3DB1               	addwfc	___flmul@prod+2,f
  9199  01AB  3DB2               	addwfc	___flmul@prod+3,f
  9200  01AC                     i1l3089:
  9201  01AC  0822               	movf	___flmul@b+2,w
  9202  01AD  00F9               	movwf	??___flmul
  9203  01AE  0879               	movf	??___flmul,w
  9204  01AF  00F0               	movwf	__Umul8_16@multiplicand
  9205  01B0  0825               	movf	___flmul@a+1,w
  9206  01B1  318D  2592  3180   	fcall	__Umul8_16
  9207  01B4  0871               	movf	?__Umul8_16+1,w
  9208  01B5  0020               	movlb	0	; select bank0
  9209  01B6  00B4               	movwf	___flmul@temp+1
  9210  01B7  0870               	movf	?__Umul8_16,w
  9211  01B8  00B3               	movwf	___flmul@temp
  9212  01B9                     i1l3091:
  9213  01B9  0833               	movf	___flmul@temp,w
  9214  01BA  07AF               	addwf	___flmul@prod,f
  9215  01BB  0834               	movf	___flmul@temp+1,w
  9216  01BC  3DB0               	addwfc	___flmul@prod+1,f
  9217  01BD  3000               	movlw	0
  9218  01BE  3DB1               	addwfc	___flmul@prod+2,f
  9219  01BF  3DB2               	addwfc	___flmul@prod+3,f
  9220  01C0  0822               	movf	___flmul@b+2,w
  9221  01C1  00F9               	movwf	??___flmul
  9222  01C2  0879               	movf	??___flmul,w
  9223  01C3  00F0               	movwf	__Umul8_16@multiplicand
  9224  01C4  0826               	movf	___flmul@a+2,w
  9225  01C5  318D  2592  3180   	fcall	__Umul8_16
  9226  01C8  0871               	movf	?__Umul8_16+1,w
  9227  01C9  0020               	movlb	0	; select bank0
  9228  01CA  00B4               	movwf	___flmul@temp+1
  9229  01CB  0870               	movf	?__Umul8_16,w
  9230  01CC  00B3               	movwf	___flmul@temp
  9231  01CD                     i1l3093:
  9232  01CD  0833               	movf	___flmul@temp,w
  9233  01CE  00F9               	movwf	??___flmul
  9234  01CF  0834               	movf	___flmul@temp+1,w
  9235  01D0  00FA               	movwf	??___flmul+1
  9236  01D1  01FB               	clrf	??___flmul+2
  9237  01D2  01FC               	clrf	??___flmul+3
  9238  01D3  3008               	movlw	8
  9239  01D4                     u186_25:
  9240  01D4  35F9               	lslf	??___flmul,f
  9241  01D5  0DFA               	rlf	??___flmul+1,f
  9242  01D6  0DFB               	rlf	??___flmul+2,f
  9243  01D7  0DFC               	rlf	??___flmul+3,f
  9244  01D8                     u186_20:
  9245  01D8  0B89               	decfsz	9,f
  9246  01D9  29D4               	goto	u186_25
  9247  01DA  0879               	movf	??___flmul,w
  9248  01DB  07AF               	addwf	___flmul@prod,f
  9249  01DC  087A               	movf	??___flmul+1,w
  9250  01DD  3DB0               	addwfc	___flmul@prod+1,f
  9251  01DE  087B               	movf	??___flmul+2,w
  9252  01DF  3DB1               	addwfc	___flmul@prod+2,f
  9253  01E0  087C               	movf	??___flmul+3,w
  9254  01E1  3DB2               	addwfc	___flmul@prod+3,f
  9255  01E2                     i1l3095:
  9256  01E2  0829               	movf	___flmul@grs,w
  9257  01E3  00F9               	movwf	??___flmul
  9258  01E4  082A               	movf	___flmul@grs+1,w
  9259  01E5  00FA               	movwf	??___flmul+1
  9260  01E6  082B               	movf	___flmul@grs+2,w
  9261  01E7  00FB               	movwf	??___flmul+2
  9262  01E8  082C               	movf	___flmul@grs+3,w
  9263  01E9  00FC               	movwf	??___flmul+3
  9264  01EA  3018               	movlw	24
  9265  01EB                     u187_25:
  9266  01EB  36FC               	lsrf	??___flmul+3,f
  9267  01EC  0CFB               	rrf	??___flmul+2,f
  9268  01ED  0CFA               	rrf	??___flmul+1,f
  9269  01EE  0CF9               	rrf	??___flmul,f
  9270  01EF                     u187_20:
  9271  01EF  0B89               	decfsz	9,f
  9272  01F0  29EB               	goto	u187_25
  9273  01F1  0879               	movf	??___flmul,w
  9274  01F2  07AF               	addwf	___flmul@prod,f
  9275  01F3  087A               	movf	??___flmul+1,w
  9276  01F4  3DB0               	addwfc	___flmul@prod+1,f
  9277  01F5  087B               	movf	??___flmul+2,w
  9278  01F6  3DB1               	addwfc	___flmul@prod+2,f
  9279  01F7  087C               	movf	??___flmul+3,w
  9280  01F8  3DB2               	addwfc	___flmul@prod+3,f
  9281  01F9                     i1l3097:
  9282  01F9  3008               	movlw	8
  9283  01FA                     u188_25:
  9284  01FA  35A9               	lslf	___flmul@grs,f
  9285  01FB  0DAA               	rlf	___flmul@grs+1,f
  9286  01FC  0DAB               	rlf	___flmul@grs+2,f
  9287  01FD  0DAC               	rlf	___flmul@grs+3,f
  9288  01FE  0B89               	decfsz	9,f
  9289  01FF  29FA               	goto	u188_25
  9290  0200                     i1l3099:
  9291  0200  082E               	movf	___flmul@bexp,w
  9292  0201  072D               	addwf	___flmul@aexp,w
  9293  0202  00F9               	movwf	??___flmul
  9294  0203  01FA               	clrf	??___flmul+1
  9295  0204  0DFA               	rlf	??___flmul+1,f
  9296  0205  0879               	movf	??___flmul,w
  9297  0206  3E82               	addlw	130
  9298  0207  00B3               	movwf	___flmul@temp
  9299  0208  30FF               	movlw	255
  9300  0209  3D7A               	addwfc	??___flmul+1,w
  9301  020A  00B4               	movwf	___flmul@temp+1
  9302  020B  2A23               	goto	i1l3111
  9303  020C                     i1l3101:
  9304  020C  3001               	movlw	1
  9305  020D                     u189_25:
  9306  020D  35AF               	lslf	___flmul@prod,f
  9307  020E  0DB0               	rlf	___flmul@prod+1,f
  9308  020F  0DB1               	rlf	___flmul@prod+2,f
  9309  0210  0DB2               	rlf	___flmul@prod+3,f
  9310  0211  0B89               	decfsz	9,f
  9311  0212  2A0D               	goto	u189_25
  9312  0213                     i1l3103:
  9313  0213  1FAC               	btfss	___flmul@grs+3,7
  9314  0214  2A16               	goto	u190_21
  9315  0215  2A17               	goto	u190_20
  9316  0216                     u190_21:
  9317  0216  2A18               	goto	i1l3107
  9318  0217                     u190_20:
  9319  0217                     i1l3105:
  9320  0217  142F               	bsf	___flmul@prod,0
  9321  0218                     i1l3107:
  9322  0218  3001               	movlw	1
  9323  0219                     u191_25:
  9324  0219  35A9               	lslf	___flmul@grs,f
  9325  021A  0DAA               	rlf	___flmul@grs+1,f
  9326  021B  0DAB               	rlf	___flmul@grs+2,f
  9327  021C  0DAC               	rlf	___flmul@grs+3,f
  9328  021D  0B89               	decfsz	9,f
  9329  021E  2A19               	goto	u191_25
  9330  021F                     i1l3109:
  9331  021F  30FF               	movlw	255
  9332  0220  07B3               	addwf	___flmul@temp,f
  9333  0221  30FF               	movlw	255
  9334  0222  3DB4               	addwfc	___flmul@temp+1,f
  9335  0223                     i1l3111:
  9336  0223  1FB1               	btfss	___flmul@prod+2,7
  9337  0224  2A26               	goto	u192_21
  9338  0225  2A27               	goto	u192_20
  9339  0226                     u192_21:
  9340  0226  2A0C               	goto	i1l3101
  9341  0227                     u192_20:
  9342  0227                     i1l3113:
  9343  0227  01AD               	clrf	___flmul@aexp
  9344  0228                     i1l3115:
  9345  0228  1FAC               	btfss	___flmul@grs+3,7
  9346  0229  2A2B               	goto	u193_21
  9347  022A  2A2C               	goto	u193_20
  9348  022B                     u193_21:
  9349  022B  2A48               	goto	i1l3123
  9350  022C                     u193_20:
  9351  022C                     i1l3117:
  9352  022C  30FF               	movlw	255
  9353  022D  0529               	andwf	___flmul@grs,w
  9354  022E  00F9               	movwf	??___flmul
  9355  022F  30FF               	movlw	255
  9356  0230  052A               	andwf	___flmul@grs+1,w
  9357  0231  00FA               	movwf	??___flmul+1
  9358  0232  30FF               	movlw	255
  9359  0233  052B               	andwf	___flmul@grs+2,w
  9360  0234  00FB               	movwf	??___flmul+2
  9361  0235  307F               	movlw	127
  9362  0236  052C               	andwf	___flmul@grs+3,w
  9363  0237  00FC               	movwf	??___flmul+3
  9364  0238  087C               	movf	??___flmul+3,w
  9365  0239  047B               	iorwf	??___flmul+2,w
  9366  023A  047A               	iorwf	??___flmul+1,w
  9367  023B  0479               	iorwf	??___flmul,w
  9368  023C  1903               	skipnz
  9369  023D  2A3F               	goto	u194_21
  9370  023E  2A40               	goto	u194_20
  9371  023F                     u194_21:
  9372  023F  2A43               	goto	i1l1486
  9373  0240                     u194_20:
  9374  0240                     i1l3119:
  9375  0240  01AD               	clrf	___flmul@aexp
  9376  0241  0AAD               	incf	___flmul@aexp,f
  9377  0242  2A48               	goto	i1l3123
  9378  0243                     i1l1486:
  9379  0243  1C2F               	btfss	___flmul@prod,0
  9380  0244  2A46               	goto	u195_21
  9381  0245  2A47               	goto	u195_20
  9382  0246                     u195_21:
  9383  0246  2A48               	goto	i1l3123
  9384  0247                     u195_20:
  9385  0247  2A40               	goto	i1l3119
  9386  0248                     i1l3123:
  9387  0248  082D               	movf	___flmul@aexp,w
  9388  0249  1903               	btfsc	3,2
  9389  024A  2A4C               	goto	u196_21
  9390  024B  2A4D               	goto	u196_20
  9391  024C                     u196_21:
  9392  024C  2A75               	goto	i1l3133
  9393  024D                     u196_20:
  9394  024D                     i1l3125:
  9395  024D  3001               	movlw	1
  9396  024E  07AF               	addwf	___flmul@prod,f
  9397  024F  3000               	movlw	0
  9398  0250  3DB0               	addwfc	___flmul@prod+1,f
  9399  0251  3000               	movlw	0
  9400  0252  3DB1               	addwfc	___flmul@prod+2,f
  9401  0253  3000               	movlw	0
  9402  0254  3DB2               	addwfc	___flmul@prod+3,f
  9403  0255                     i1l3127:
  9404  0255  1C32               	btfss	___flmul@prod+3,0
  9405  0256  2A58               	goto	u197_21
  9406  0257  2A59               	goto	u197_20
  9407  0258                     u197_21:
  9408  0258  2A75               	goto	i1l3133
  9409  0259                     u197_20:
  9410  0259                     i1l3129:
  9411  0259  082F               	movf	___flmul@prod,w
  9412  025A  00F9               	movwf	??___flmul
  9413  025B  0830               	movf	___flmul@prod+1,w
  9414  025C  00FA               	movwf	??___flmul+1
  9415  025D  0831               	movf	___flmul@prod+2,w
  9416  025E  00FB               	movwf	??___flmul+2
  9417  025F  0832               	movf	___flmul@prod+3,w
  9418  0260  00FC               	movwf	??___flmul+3
  9419  0261  3001               	movlw	1
  9420  0262  00FD               	movwf	??___flmul+4
  9421  0263                     u198_25:
  9422  0263  37FC               	asrf	??___flmul+3,f
  9423  0264  0CFB               	rrf	??___flmul+2,f
  9424  0265  0CFA               	rrf	??___flmul+1,f
  9425  0266  0CF9               	rrf	??___flmul,f
  9426  0267                     u198_20:
  9427  0267  0BFD               	decfsz	??___flmul+4,f
  9428  0268  2A63               	goto	u198_25
  9429  0269  087C               	movf	??___flmul+3,w
  9430  026A  00B2               	movwf	___flmul@prod+3
  9431  026B  087B               	movf	??___flmul+2,w
  9432  026C  00B1               	movwf	___flmul@prod+2
  9433  026D  087A               	movf	??___flmul+1,w
  9434  026E  00B0               	movwf	___flmul@prod+1
  9435  026F  0879               	movf	??___flmul,w
  9436  0270  00AF               	movwf	___flmul@prod
  9437  0271                     i1l3131:
  9438  0271  3001               	movlw	1
  9439  0272  07B3               	addwf	___flmul@temp,f
  9440  0273  3000               	movlw	0
  9441  0274  3DB4               	addwfc	___flmul@temp+1,f
  9442  0275                     i1l3133:
  9443  0275  0834               	movf	___flmul@temp+1,w
  9444  0276  3A80               	xorlw	128
  9445  0277  00F9               	movwf	??___flmul
  9446  0278  3080               	movlw	128
  9447  0279  0279               	subwf	??___flmul,w
  9448  027A  1D03               	skipz
  9449  027B  2A7E               	goto	u199_25
  9450  027C  30FF               	movlw	255
  9451  027D  0233               	subwf	___flmul@temp,w
  9452  027E                     u199_25:
  9453  027E  1C03               	skipc
  9454  027F  2A81               	goto	u199_21
  9455  0280  2A82               	goto	u199_20
  9456  0281                     u199_21:
  9457  0281  2A8C               	goto	i1l3137
  9458  0282                     u199_20:
  9459  0282                     i1l3135:
  9460  0282  307F               	movlw	127
  9461  0283  0020               	movlb	0	; select bank0
  9462  0284  00B2               	movwf	___flmul@prod+3
  9463  0285  3080               	movlw	128
  9464  0286  00B1               	movwf	___flmul@prod+2
  9465  0287  3000               	movlw	0
  9466  0288  00B0               	movwf	___flmul@prod+1
  9467  0289  3000               	movlw	0
  9468  028A  00AF               	movwf	___flmul@prod
  9469  028B  2ABB               	goto	i1l1492
  9470  028C                     i1l3137:
  9471  028C  0020               	movlb	0	; select bank0
  9472  028D  0834               	movf	___flmul@temp+1,w
  9473  028E  3A80               	xorlw	128
  9474  028F  00F9               	movwf	??___flmul
  9475  0290  3080               	movlw	128
  9476  0291  0279               	subwf	??___flmul,w
  9477  0292  1D03               	skipz
  9478  0293  2A96               	goto	u200_25
  9479  0294  3001               	movlw	1
  9480  0295  0233               	subwf	___flmul@temp,w
  9481  0296                     u200_25:
  9482  0296  1803               	skipnc
  9483  0297  2A99               	goto	u200_21
  9484  0298  2A9A               	goto	u200_20
  9485  0299                     u200_21:
  9486  0299  2AA5               	goto	i1l3143
  9487  029A                     u200_20:
  9488  029A                     i1l3139:
  9489  029A  3000               	movlw	0
  9490  029B  0020               	movlb	0	; select bank0
  9491  029C  00B2               	movwf	___flmul@prod+3
  9492  029D  3000               	movlw	0
  9493  029E  00B1               	movwf	___flmul@prod+2
  9494  029F  3000               	movlw	0
  9495  02A0  00B0               	movwf	___flmul@prod+1
  9496  02A1  3000               	movlw	0
  9497  02A2  00AF               	movwf	___flmul@prod
  9498  02A3                     i1l3141:
  9499  02A3  01A8               	clrf	___flmul@sign
  9500  02A4  2ABB               	goto	i1l1492
  9501  02A5                     i1l3143:
  9502  02A5  0020               	movlb	0	; select bank0
  9503  02A6  0833               	movf	___flmul@temp,w
  9504  02A7  00F9               	movwf	??___flmul
  9505  02A8  0879               	movf	??___flmul,w
  9506  02A9  00AE               	movwf	___flmul@bexp
  9507  02AA  30FF               	movlw	255
  9508  02AB  05AF               	andwf	___flmul@prod,f
  9509  02AC  30FF               	movlw	255
  9510  02AD  05B0               	andwf	___flmul@prod+1,f
  9511  02AE  307F               	movlw	127
  9512  02AF  05B1               	andwf	___flmul@prod+2,f
  9513  02B0  3000               	movlw	0
  9514  02B1  05B2               	andwf	___flmul@prod+3,f
  9515  02B2                     i1l3145:
  9516  02B2  1C2E               	btfss	___flmul@bexp,0
  9517  02B3  2AB5               	goto	u201_21
  9518  02B4  2AB6               	goto	u201_20
  9519  02B5                     u201_21:
  9520  02B5  2AB7               	goto	i1l3149
  9521  02B6                     u201_20:
  9522  02B6                     i1l3147:
  9523  02B6  17B1               	bsf	___flmul@prod+2,7
  9524  02B7                     i1l3149:
  9525  02B7  362E               	lsrf	___flmul@bexp,w
  9526  02B8  00F9               	movwf	??___flmul
  9527  02B9  0879               	movf	??___flmul,w
  9528  02BA  00B2               	movwf	___flmul@prod+3
  9529  02BB                     i1l1492:
  9530  02BB  0828               	movf	___flmul@sign,w
  9531  02BC  00F9               	movwf	??___flmul
  9532  02BD  0879               	movf	??___flmul,w
  9533  02BE  04B2               	iorwf	___flmul@prod+3,f
  9534  02BF                     i1l3151:
  9535  02BF  0832               	movf	___flmul@prod+3,w
  9536  02C0  00A3               	movwf	?___flmul+3
  9537  02C1  0831               	movf	___flmul@prod+2,w
  9538  02C2  00A2               	movwf	?___flmul+2
  9539  02C3  0830               	movf	___flmul@prod+1,w
  9540  02C4  00A1               	movwf	?___flmul+1
  9541  02C5  082F               	movf	___flmul@prod,w
  9542  02C6  00A0               	movwf	?___flmul
  9543  02C7                     i1l1480:
  9544  02C7  0008               	return
  9545  02C8                     __end_of___flmul:
  9546                           
  9547                           	psect	text52
  9548  0D92                     __ptext52:	
  9549 ;; *************** function __Umul8_16 *****************
  9550 ;; Defined at:
  9551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;  multiplier      1    wreg     unsigned char 
  9554 ;;  multiplicand    1    0[COMMON] unsigned char 
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;  multiplier      1    8[COMMON] unsigned char 
  9557 ;;  word_mpld       2    6[COMMON] unsigned int 
  9558 ;;  product         2    4[COMMON] unsigned int 
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  2    0[COMMON] unsigned int 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9568 ;;      Params:         2       0       0       0       0       0
  9569 ;;      Locals:         5       0       0       0       0       0
  9570 ;;      Temps:          2       0       0       0       0       0
  9571 ;;      Totals:         9       0       0       0       0       0
  9572 ;;Total ram usage:        9 bytes
  9573 ;; Hardware stack levels used: 1
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		___flmul
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581  0D92                     __Umul8_16:	
  9582                           ;psect for function __Umul8_16
  9583                           
  9584                           
  9585                           ;incstack = 0
  9586                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9587                           ;__Umul8_16@multiplier stored from wreg
  9588  0D92  00F8               	movwf	__Umul8_16@multiplier
  9589  0D93                     i1l2891:
  9590  0D93  01F4               	clrf	__Umul8_16@product
  9591  0D94  01F5               	clrf	__Umul8_16@product+1
  9592  0D95                     i1l2893:
  9593  0D95  0870               	movf	__Umul8_16@multiplicand,w
  9594  0D96  00F2               	movwf	??__Umul8_16
  9595  0D97  01F3               	clrf	??__Umul8_16+1
  9596  0D98  0872               	movf	??__Umul8_16,w
  9597  0D99  00F6               	movwf	__Umul8_16@word_mpld
  9598  0D9A  0873               	movf	??__Umul8_16+1,w
  9599  0D9B  00F7               	movwf	__Umul8_16@word_mpld+1
  9600  0D9C                     i1l2895:
  9601  0D9C  1C78               	btfss	__Umul8_16@multiplier,0
  9602  0D9D  2D9F               	goto	u147_21
  9603  0D9E  2DA0               	goto	u147_20
  9604  0D9F                     u147_21:
  9605  0D9F  2DA4               	goto	i1l1499
  9606  0DA0                     u147_20:
  9607  0DA0                     i1l2897:
  9608  0DA0  0876               	movf	__Umul8_16@word_mpld,w
  9609  0DA1  07F4               	addwf	__Umul8_16@product,f
  9610  0DA2  0877               	movf	__Umul8_16@word_mpld+1,w
  9611  0DA3  3DF5               	addwfc	__Umul8_16@product+1,f
  9612  0DA4                     i1l1499:
  9613  0DA4  3001               	movlw	1
  9614  0DA5                     u148_25:
  9615  0DA5  35F6               	lslf	__Umul8_16@word_mpld,f
  9616  0DA6  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9617  0DA7  0B89               	decfsz	9,f
  9618  0DA8  2DA5               	goto	u148_25
  9619  0DA9  1003               	clrc
  9620  0DAA  0CF8               	rrf	__Umul8_16@multiplier,f
  9621  0DAB                     i1l2899:
  9622  0DAB  0878               	movf	__Umul8_16@multiplier,w
  9623  0DAC  1D03               	btfss	3,2
  9624  0DAD  2DAF               	goto	u149_21
  9625  0DAE  2DB0               	goto	u149_20
  9626  0DAF                     u149_21:
  9627  0DAF  2D9C               	goto	i1l2895
  9628  0DB0                     u149_20:
  9629  0DB0                     i1l2901:
  9630  0DB0  0875               	movf	__Umul8_16@product+1,w
  9631  0DB1  00F1               	movwf	?__Umul8_16+1
  9632  0DB2  0874               	movf	__Umul8_16@product,w
  9633  0DB3  00F0               	movwf	?__Umul8_16
  9634  0DB4                     i1l1501:
  9635  0DB4  0008               	return
  9636  0DB5                     __end_of__Umul8_16:
  9637                           
  9638                           	psect	text53
  9639  0BBA                     __ptext53:	
  9640 ;; *************** function _EUSART_Write *****************
  9641 ;; Defined at:
  9642 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;  txData          1    wreg     unsigned char 
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;  txData          1    0[COMMON] unsigned char 
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		wreg
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9656 ;;      Params:         0       0       0       0       0       0
  9657 ;;      Locals:         1       0       0       0       0       0
  9658 ;;      Temps:          0       0       0       0       0       0
  9659 ;;      Totals:         1       0       0       0       0       0
  9660 ;;Total ram usage:        1 bytes
  9661 ;; Hardware stack levels used: 1
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		_sendInfo
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669  0BBA                     _EUSART_Write:	
  9670                           ;psect for function _EUSART_Write
  9671                           
  9672                           
  9673                           ;incstack = 0
  9674                           ; Regs used in _EUSART_Write: [wreg]
  9675                           ;EUSART_Write@txData stored from wreg
  9676  0BBA  00F0               	movwf	EUSART_Write@txData
  9677  0BBB                     i1l2923:
  9678  0BBB                     i1l384:	
  9679                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  9680                           
  9681                           
  9682                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  9683  0BBB  0020               	movlb	0	; select bank0
  9684  0BBC  1E11               	btfss	17,4	;volatile
  9685  0BBD  2BBF               	goto	u152_21
  9686  0BBE  2BC0               	goto	u152_20
  9687  0BBF                     u152_21:
  9688  0BBF  2BBB               	goto	i1l384
  9689  0BC0                     u152_20:
  9690  0BC0                     i1l2925:
  9691                           
  9692                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  9693  0BC0  0870               	movf	EUSART_Write@txData,w
  9694  0BC1  0023               	movlb	3	; select bank3
  9695  0BC2  009A               	movwf	26	;volatile
  9696  0BC3                     i1l387:
  9697  0BC3  0008               	return
  9698  0BC4                     __end_of_EUSART_Write:
  9699                           
  9700                           	psect	text54
  9701  0D17                     __ptext54:	
  9702 ;; *************** function _ADC_GetConversion *****************
  9703 ;; Defined at:
  9704 ;;		line 112 in file "mcc_generated_files/adc.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  channel         1    wreg     enum E2485
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;  channel         1    3[COMMON] enum E2485
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  2    0[COMMON] unsigned short 
  9711 ;; Registers used:
  9712 ;;		wreg, status,2, status,0
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9718 ;;      Params:         2       0       0       0       0       0
  9719 ;;      Locals:         1       0       0       0       0       0
  9720 ;;      Temps:          1       0       0       0       0       0
  9721 ;;      Totals:         4       0       0       0       0       0
  9722 ;;Total ram usage:        4 bytes
  9723 ;; Hardware stack levels used: 1
  9724 ;; This function calls:
  9725 ;;		Nothing
  9726 ;; This function is called by:
  9727 ;;		_sendInfo
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731  0D17                     _ADC_GetConversion:	
  9732                           ;psect for function _ADC_GetConversion
  9733                           
  9734                           
  9735                           ;incstack = 0
  9736                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  9737                           ;ADC_GetConversion@channel stored from wreg
  9738  0D17  00F3               	movwf	ADC_GetConversion@channel
  9739  0D18                     i1l2911:
  9740                           
  9741                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  9742  0D18  0873               	movf	ADC_GetConversion@channel,w
  9743  0D19  00F2               	movwf	??_ADC_GetConversion
  9744  0D1A  0DF2               	rlf	??_ADC_GetConversion,f
  9745  0D1B  0DF2               	rlf	??_ADC_GetConversion,f
  9746  0D1C  0021               	movlb	1	; select bank1
  9747  0D1D  081D               	movf	29,w	;volatile
  9748  0D1E  0672               	xorwf	??_ADC_GetConversion,w
  9749  0D1F  3983               	andlw	-125
  9750  0D20  0672               	xorwf	??_ADC_GetConversion,w
  9751  0D21  009D               	movwf	29	;volatile
  9752  0D22                     i1l2913:
  9753                           
  9754                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  9755  0D22  141D               	bsf	29,0	;volatile
  9756  0D23                     i1l2915:
  9757                           
  9758                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9759  0D23  3200               	nop2	;2 cycle nop
  9760  0D24  3200               	nop2	;2 cycle nop
  9761  0D25  0000               	nop
  9762  0D26                     i1l2917:
  9763                           
  9764                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  9765  0D26  0021               	movlb	1	; select bank1
  9766  0D27  149D               	bsf	29,1	;volatile
  9767  0D28                     i1l301:	
  9768                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  9769                           
  9770                           
  9771                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  9772  0D28  189D               	btfsc	29,1	;volatile
  9773  0D29  2D2B               	goto	u151_21
  9774  0D2A  2D2C               	goto	u151_20
  9775  0D2B                     u151_21:
  9776  0D2B  2D28               	goto	i1l301
  9777  0D2C                     u151_20:
  9778  0D2C                     i1l2919:
  9779                           
  9780                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9781  0D2C  081C               	movf	28,w	;volatile
  9782  0D2D  00F1               	movwf	?_ADC_GetConversion+1
  9783  0D2E  081B               	movf	27,w	;volatile
  9784  0D2F  00F0               	movwf	?_ADC_GetConversion
  9785  0D30                     i1l304:
  9786  0D30  0008               	return
  9787  0D31                     __end_of_ADC_GetConversion:
  9788                           
  9789                           	psect	text55
  9790  0C5A                     __ptext55:	
  9791 ;; *************** function _PIN_MANAGER_IOC *****************
  9792 ;; Defined at:
  9793 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;		None
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;		None
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  1    wreg      void 
  9800 ;; Registers used:
  9801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9807 ;;      Params:         0       0       0       0       0       0
  9808 ;;      Locals:         0       0       0       0       0       0
  9809 ;;      Temps:          0       0       0       0       0       0
  9810 ;;      Totals:         0       0       0       0       0       0
  9811 ;;Total ram usage:        0 bytes
  9812 ;; Hardware stack levels used: 1
  9813 ;; Hardware stack levels required when called: 5
  9814 ;; This function calls:
  9815 ;;		_IOCBF0_ISR
  9816 ;;		_IOCBF3_ISR
  9817 ;; This function is called by:
  9818 ;;		_INTERRUPT_InterruptManager
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822  0C5A                     _PIN_MANAGER_IOC:	
  9823                           ;psect for function _PIN_MANAGER_IOC
  9824                           
  9825  0C5A                     i1l4319:	
  9826                           ;incstack = 0
  9827                           ; Regs used in _PIN_MANAGER_IOC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9828                           
  9829                           
  9830                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  9831  0C5A  0027               	movlb	7	; select bank7
  9832  0C5B  1C16               	btfss	22,0	;volatile
  9833  0C5C  2C5E               	goto	u301_21
  9834  0C5D  2C5F               	goto	u301_20
  9835  0C5E                     u301_21:
  9836  0C5E  2C62               	goto	i1l4323
  9837  0C5F                     u301_20:
  9838  0C5F                     i1l4321:
  9839                           
  9840                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  9841  0C5F  318C  241D  318C   	fcall	_IOCBF0_ISR
  9842  0C62                     i1l4323:
  9843                           
  9844                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  9845  0C62  0027               	movlb	7	; select bank7
  9846  0C63  1D96               	btfss	22,3	;volatile
  9847  0C64  2C66               	goto	u302_21
  9848  0C65  2C67               	goto	u302_20
  9849  0C66                     u302_21:
  9850  0C66  2C6A               	goto	i1l202
  9851  0C67                     u302_20:
  9852  0C67                     i1l4325:
  9853                           
  9854                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  9855  0C67  318C  242C  318C   	fcall	_IOCBF3_ISR
  9856  0C6A                     i1l202:
  9857  0C6A  0008               	return
  9858  0C6B                     __end_of_PIN_MANAGER_IOC:
  9859                           
  9860                           	psect	text56
  9861  0C2C                     __ptext56:	
  9862 ;; *************** function _IOCBF3_ISR *****************
  9863 ;; Defined at:
  9864 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;		None
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;		None
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9878 ;;      Params:         0       0       0       0       0       0
  9879 ;;      Locals:         0       0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0
  9881 ;;      Totals:         0       0       0       0       0       0
  9882 ;;Total ram usage:        0 bytes
  9883 ;; Hardware stack levels used: 1
  9884 ;; Hardware stack levels required when called: 4
  9885 ;; This function calls:
  9886 ;;		Absolute function
  9887 ;;		_IOCBF3_DefaultInterruptHandler
  9888 ;;		_chegadaS2
  9889 ;; This function is called by:
  9890 ;;		_PIN_MANAGER_IOC
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894  0C2C                     _IOCBF3_ISR:	
  9895                           ;psect for function _IOCBF3_ISR
  9896                           
  9897  0C2C                     i1l3497:	
  9898                           ;incstack = 0
  9899                           ; Regs used in _IOCBF3_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9900                           
  9901                           
  9902                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  9903  0C2C  0020               	movlb	0	; select bank0
  9904  0C2D  0866               	movf	_IOCBF3_InterruptHandler,w
  9905  0C2E  0467               	iorwf	_IOCBF3_InterruptHandler+1,w
  9906  0C2F  1903               	btfsc	3,2
  9907  0C30  2C32               	goto	u228_21
  9908  0C31  2C33               	goto	u228_20
  9909  0C32                     u228_21:
  9910  0C32  2C38               	goto	i1l3501
  9911  0C33                     u228_20:
  9912  0C33                     i1l3499:
  9913                           
  9914                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  9915  0C33  0867               	movf	_IOCBF3_InterruptHandler+1,w
  9916  0C34  008A               	movwf	10
  9917  0C35  0866               	movf	_IOCBF3_InterruptHandler,w
  9918  0C36  000A               	callw
  9919  0C37  318C               	pagesel	$
  9920  0C38                     i1l3501:
  9921                           
  9922                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  9923  0C38  0027               	movlb	7	; select bank7
  9924  0C39  1196               	bcf	22,3	;volatile
  9925  0C3A                     i1l216:
  9926  0C3A  0008               	return
  9927  0C3B                     __end_of_IOCBF3_ISR:
  9928                           
  9929                           	psect	text57
  9930  0B26                     __ptext57:	
  9931 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9932 ;; Defined at:
  9933 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;		None
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      void 
  9940 ;; Registers used:
  9941 ;;		None
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9947 ;;      Params:         0       0       0       0       0       0
  9948 ;;      Locals:         0       0       0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0
  9950 ;;      Totals:         0       0       0       0       0       0
  9951 ;;Total ram usage:        0 bytes
  9952 ;; Hardware stack levels used: 1
  9953 ;; This function calls:
  9954 ;;		Nothing
  9955 ;; This function is called by:
  9956 ;;		_PIN_MANAGER_Initialize
  9957 ;;		_IOCBF3_ISR
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961  0B26                     _IOCBF3_DefaultInterruptHandler:	
  9962                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9963                           
  9964  0B26                     i1l222:	
  9965                           ;incstack = 0
  9966                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9967                           
  9968  0B26  0008               	return
  9969  0B27                     __end_of_IOCBF3_DefaultInterruptHandler:
  9970                           
  9971                           	psect	text58
  9972  06FF                     __ptext58:	
  9973 ;; *************** function _chegadaS2 *****************
  9974 ;; Defined at:
  9975 ;;		line 266 in file "main.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;		None
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;		None
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  1    wreg      void 
  9982 ;; Registers used:
  9983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9989 ;;      Params:         0       0       0       0       0       0
  9990 ;;      Locals:         0       0       0       0       0       0
  9991 ;;      Temps:          1       0       0       0       0       0
  9992 ;;      Totals:         1       0       0       0       0       0
  9993 ;;Total ram usage:        1 bytes
  9994 ;; Hardware stack levels used: 1
  9995 ;; Hardware stack levels required when called: 3
  9996 ;; This function calls:
  9997 ;;		_PWM3_LoadDutyValue
  9998 ;;		i1_TMR4_StartTimer
  9999 ;;		i1_TMR4_WriteTimer
 10000 ;;		i1_matrixUpdate
 10001 ;; This function is called by:
 10002 ;;		_main
 10003 ;;		_IOCBF3_ISR
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007  06FF                     _chegadaS2:	
 10008                           ;psect for function _chegadaS2
 10009                           
 10010  06FF                     i1l3285:	
 10011                           ;incstack = 0
 10012                           ; Regs used in _chegadaS2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10013                           
 10014                           
 10015                           ;main.c: 268:     andarAtual = 1;
 10016  06FF  0020               	movlb	0	; select bank0
 10017  0700  01D9               	clrf	_andarAtual
 10018  0701  0AD9               	incf	_andarAtual,f
 10019                           
 10020                           ;main.c: 271:     if((((destinoSub & 0b00000010) == 2 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00000010) == 2) ) ){
 10021  0702  0021               	movlb	1	; select bank1
 10022  0703  1CBC               	btfss	_destinoSub^(0+128),1
 10023  0704  2F06               	goto	u206_21
 10024  0705  2F07               	goto	u206_20
 10025  0706                     u206_21:
 10026  0706  2F0C               	goto	i1l3289
 10027  0707                     u206_20:
 10028  0707                     i1l3287:
 10029  0707  084B               	movf	_subindo^(0+128),w
 10030  0708  1D03               	btfss	3,2
 10031  0709  2F0B               	goto	u207_21
 10032  070A  2F0C               	goto	u207_20
 10033  070B                     u207_21:
 10034  070B  2F15               	goto	i1l3293
 10035  070C                     u207_20:
 10036  070C                     i1l3289:
 10037  070C  084B               	movf	_subindo^(0+128),w
 10038  070D  1D03               	btfss	3,2
 10039  070E  2F10               	goto	u208_21
 10040  070F  2F11               	goto	u208_20
 10041  0710                     u208_21:
 10042  0710  2F22               	goto	i1l3297
 10043  0711                     u208_20:
 10044  0711                     i1l3291:
 10045  0711  1CBB               	btfss	_destinoDesc^(0+128),1
 10046  0712  2F14               	goto	u209_21
 10047  0713  2F15               	goto	u209_20
 10048  0714                     u209_21:
 10049  0714  2F22               	goto	i1l3297
 10050  0715                     u209_20:
 10051  0715                     i1l3293:
 10052                           
 10053                           ;main.c: 272:         PWM3_LoadDutyValue(0);
 10054  0715  3000               	movlw	0
 10055  0716  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 10056  0717  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 10057  0718  318C  24CF  3186   	fcall	_PWM3_LoadDutyValue
 10058                           
 10059                           ;main.c: 273:         TMR4_WriteTimer(0);
 10060  071B  3000               	movlw	0
 10061  071C  318B  2339  3186   	fcall	i1_TMR4_WriteTimer
 10062  071F                     i1l3295:
 10063                           
 10064                           ;main.c: 274:         TMR4_StartTimer();
 10065  071F  318B  2328  3186   	fcall	i1_TMR4_StartTimer
 10066  0722                     i1l3297:
 10067                           
 10068                           ;main.c: 279:     MatrixLed[0] = 0b00000000;
 10069  0722  0021               	movlb	1	; select bank1
 10070  0723  01B3               	clrf	_MatrixLed^(0+128)
 10071  0724                     i1l3299:
 10072                           
 10073                           ;main.c: 280:     MatrixLed[1] = 0b01000001;
 10074  0724  3041               	movlw	65
 10075  0725  00FC               	movwf	??_chegadaS2
 10076  0726  087C               	movf	??_chegadaS2,w
 10077  0727  00B4               	movwf	(_MatrixLed^(0+128)+1)
 10078  0728                     i1l3301:
 10079                           
 10080                           ;main.c: 281:     MatrixLed[2] = 0b11111111;
 10081  0728  30FF               	movlw	255
 10082  0729  00FC               	movwf	??_chegadaS2
 10083  072A  087C               	movf	??_chegadaS2,w
 10084  072B  00B5               	movwf	(_MatrixLed^(0+128)+2)
 10085  072C                     i1l3303:
 10086                           
 10087                           ;main.c: 282:     MatrixLed[3] = 0b00000001;
 10088  072C  01B6               	clrf	(_MatrixLed^(0+128)+3)
 10089  072D  0AB6               	incf	(_MatrixLed^(0+128)+3),f
 10090  072E                     i1l3305:
 10091                           
 10092                           ;main.c: 283:     MatrixLed[4] = 0;
 10093  072E  01B7               	clrf	(_MatrixLed^(0+128)+4)
 10094  072F                     i1l3307:
 10095                           
 10096                           ;main.c: 284:     if(subindo){
 10097  072F  084B               	movf	_subindo^(0+128),w
 10098  0730  1903               	btfsc	3,2
 10099  0731  2F33               	goto	u210_21
 10100  0732  2F34               	goto	u210_20
 10101  0733                     u210_21:
 10102  0733  2F4A               	goto	i1l3315
 10103  0734                     u210_20:
 10104  0734                     i1l3309:
 10105                           
 10106                           ;main.c: 285:         MatrixLed[5] = 0b01100000;
 10107  0734  3060               	movlw	96
 10108  0735  00FC               	movwf	??_chegadaS2
 10109  0736  087C               	movf	??_chegadaS2,w
 10110  0737  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10111                           
 10112                           ;main.c: 286:         MatrixLed[6] = 0b11000000;
 10113  0738  30C0               	movlw	192
 10114  0739  00FC               	movwf	??_chegadaS2
 10115  073A  087C               	movf	??_chegadaS2,w
 10116  073B  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10117                           
 10118                           ;main.c: 287:         MatrixLed[7] = 0b01100000;
 10119  073C  3060               	movlw	96
 10120  073D  00FC               	movwf	??_chegadaS2
 10121  073E  087C               	movf	??_chegadaS2,w
 10122  073F  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10123  0740                     i1l3311:
 10124                           
 10125                           ;main.c: 288:         destinoSub = destinoSub & 0b11111101;
 10126  0740  083C               	movf	_destinoSub^(0+128),w
 10127  0741  39FD               	andlw	253
 10128  0742  00FC               	movwf	??_chegadaS2
 10129  0743  087C               	movf	??_chegadaS2,w
 10130  0744  00BC               	movwf	_destinoSub^(0+128)
 10131  0745                     i1l3313:
 10132                           
 10133                           ;main.c: 290:         mov = EmTrajeto;
 10134  0745  3002               	movlw	2
 10135  0746  00FC               	movwf	??_chegadaS2
 10136  0747  087C               	movf	??_chegadaS2,w
 10137  0748  00C1               	movwf	_mov^(0+128)
 10138                           
 10139                           ;main.c: 291:     }else{
 10140  0749  2F64               	goto	i1l3323
 10141  074A                     i1l3315:
 10142                           
 10143                           ;main.c: 292:         MatrixLed[5] = 0b11000000;
 10144  074A  30C0               	movlw	192
 10145  074B  00FC               	movwf	??_chegadaS2
 10146  074C  087C               	movf	??_chegadaS2,w
 10147  074D  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10148                           
 10149                           ;main.c: 293:         MatrixLed[6] = 0b01100000;
 10150  074E  3060               	movlw	96
 10151  074F  00FC               	movwf	??_chegadaS2
 10152  0750  087C               	movf	??_chegadaS2,w
 10153  0751  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10154                           
 10155                           ;main.c: 294:         MatrixLed[7] = 0b11000000;
 10156  0752  30C0               	movlw	192
 10157  0753  00FC               	movwf	??_chegadaS2
 10158  0754  087C               	movf	??_chegadaS2,w
 10159  0755  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10160  0756                     i1l3317:
 10161                           
 10162                           ;main.c: 295:         destinoDesc = destinoDesc & 0b11111101;
 10163  0756  083B               	movf	_destinoDesc^(0+128),w
 10164  0757  39FD               	andlw	253
 10165  0758  00FC               	movwf	??_chegadaS2
 10166  0759  087C               	movf	??_chegadaS2,w
 10167  075A  00BB               	movwf	_destinoDesc^(0+128)
 10168  075B                     i1l3319:
 10169                           
 10170                           ;main.c: 298:         if(destinoDesc == 0){
 10171  075B  083B               	movf	_destinoDesc^(0+128),w
 10172  075C  1D03               	btfss	3,2
 10173  075D  2F5F               	goto	u211_21
 10174  075E  2F60               	goto	u211_20
 10175  075F                     u211_21:
 10176  075F  2F64               	goto	i1l3323
 10177  0760                     u211_20:
 10178  0760                     i1l3321:
 10179                           
 10180                           ;main.c: 299:             mov = RetornaS0;
 10181  0760  3003               	movlw	3
 10182  0761  00FC               	movwf	??_chegadaS2
 10183  0762  087C               	movf	??_chegadaS2,w
 10184  0763  00C1               	movwf	_mov^(0+128)
 10185  0764                     i1l3323:
 10186                           
 10187                           ;main.c: 302:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 10188  0764  083A               	movf	(_MatrixLed^(0+128)+7),w
 10189  0765  043C               	iorwf	_destinoSub^(0+128),w
 10190  0766  00FC               	movwf	??_chegadaS2
 10191  0767  087C               	movf	??_chegadaS2,w
 10192  0768  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10193  0769                     i1l3325:
 10194                           
 10195                           ;main.c: 303:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 10196  0769  0839               	movf	(_MatrixLed^(0+128)+6),w
 10197  076A  043B               	iorwf	_destinoDesc^(0+128),w
 10198  076B  00FC               	movwf	??_chegadaS2
 10199  076C  087C               	movf	??_chegadaS2,w
 10200  076D  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10201  076E                     i1l3327:
 10202                           
 10203                           ;main.c: 304:     matrixUpdate();
 10204  076E  318D  2550  3186   	fcall	i1_matrixUpdate
 10205  0771                     i1l876:
 10206  0771  0008               	return
 10207  0772                     __end_of_chegadaS2:
 10208                           
 10209                           	psect	text59
 10210  0C1D                     __ptext59:	
 10211 ;; *************** function _IOCBF0_ISR *****************
 10212 ;; Defined at:
 10213 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;		None
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;		None
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  1    wreg      void 
 10220 ;; Registers used:
 10221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10227 ;;      Params:         0       0       0       0       0       0
 10228 ;;      Locals:         0       0       0       0       0       0
 10229 ;;      Temps:          0       0       0       0       0       0
 10230 ;;      Totals:         0       0       0       0       0       0
 10231 ;;Total ram usage:        0 bytes
 10232 ;; Hardware stack levels used: 1
 10233 ;; Hardware stack levels required when called: 4
 10234 ;; This function calls:
 10235 ;;		Absolute function
 10236 ;;		_IOCBF0_DefaultInterruptHandler
 10237 ;;		i1_chegadaS1
 10238 ;; This function is called by:
 10239 ;;		_PIN_MANAGER_IOC
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243  0C1D                     _IOCBF0_ISR:	
 10244                           ;psect for function _IOCBF0_ISR
 10245                           
 10246  0C1D                     i1l4181:	
 10247                           ;incstack = 0
 10248                           ; Regs used in _IOCBF0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10249                           
 10250                           
 10251                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
 10252  0C1D  0020               	movlb	0	; select bank0
 10253  0C1E  0868               	movf	_IOCBF0_InterruptHandler,w
 10254  0C1F  0469               	iorwf	_IOCBF0_InterruptHandler+1,w
 10255  0C20  1903               	btfsc	3,2
 10256  0C21  2C23               	goto	u299_21
 10257  0C22  2C24               	goto	u299_20
 10258  0C23                     u299_21:
 10259  0C23  2C29               	goto	i1l4185
 10260  0C24                     u299_20:
 10261  0C24                     i1l4183:
 10262                           
 10263                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
 10264  0C24  0869               	movf	_IOCBF0_InterruptHandler+1,w
 10265  0C25  008A               	movwf	10
 10266  0C26  0868               	movf	_IOCBF0_InterruptHandler,w
 10267  0C27  000A               	callw
 10268  0C28  318C               	pagesel	$
 10269  0C29                     i1l4185:
 10270                           
 10271                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
 10272  0C29  0027               	movlb	7	; select bank7
 10273  0C2A  1016               	bcf	22,0	;volatile
 10274  0C2B                     i1l206:
 10275  0C2B  0008               	return
 10276  0C2C                     __end_of_IOCBF0_ISR:
 10277                           
 10278                           	psect	text60
 10279  0B25                     __ptext60:	
 10280 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 10281 ;; Defined at:
 10282 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
 10283 ;; Parameters:    Size  Location     Type
 10284 ;;		None
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;		None
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  1    wreg      void 
 10289 ;; Registers used:
 10290 ;;		None
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10296 ;;      Params:         0       0       0       0       0       0
 10297 ;;      Locals:         0       0       0       0       0       0
 10298 ;;      Temps:          0       0       0       0       0       0
 10299 ;;      Totals:         0       0       0       0       0       0
 10300 ;;Total ram usage:        0 bytes
 10301 ;; Hardware stack levels used: 1
 10302 ;; This function calls:
 10303 ;;		Nothing
 10304 ;; This function is called by:
 10305 ;;		_PIN_MANAGER_Initialize
 10306 ;;		_IOCBF0_ISR
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310  0B25                     _IOCBF0_DefaultInterruptHandler:	
 10311                           ;psect for function _IOCBF0_DefaultInterruptHandler
 10312                           
 10313  0B25                     i1l212:	
 10314                           ;incstack = 0
 10315                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
 10316                           
 10317  0B25  0008               	return
 10318  0B26                     __end_of_IOCBF0_DefaultInterruptHandler:
 10319                           
 10320                           	psect	text61
 10321  0E60                     __ptext61:	
 10322 ;; *************** function i1_chegadaS1 *****************
 10323 ;; Defined at:
 10324 ;;		line 235 in file "main.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;		None
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;		None
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      void 
 10331 ;; Registers used:
 10332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10338 ;;      Params:         0       0       0       0       0       0
 10339 ;;      Locals:         0       0       0       0       0       0
 10340 ;;      Temps:          1       0       0       0       0       0
 10341 ;;      Totals:         1       0       0       0       0       0
 10342 ;;Total ram usage:        1 bytes
 10343 ;; Hardware stack levels used: 1
 10344 ;; Hardware stack levels required when called: 3
 10345 ;; This function calls:
 10346 ;;		i1_TMR4_StartTimer
 10347 ;;		i1_matrixUpdate
 10348 ;; This function is called by:
 10349 ;;		_IOCBF0_ISR
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353  0E60                     i1_chegadaS1:	
 10354                           ;psect for function i1_chegadaS1
 10355                           
 10356  0E60                     i1l3329:	
 10357                           ;incstack = 0
 10358                           ; Regs used in i1_chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10359                           
 10360                           
 10361                           ;main.c: 237:     andarAtual = 0;
 10362  0E60  0020               	movlb	0	; select bank0
 10363  0E61  01D9               	clrf	_andarAtual
 10364  0E62                     i1l3331:
 10365                           
 10366                           ;main.c: 241:     MatrixLed[0] = 0b01111110;
 10367  0E62  307E               	movlw	126
 10368  0E63  00FC               	movwf	??i1_chegadaS1
 10369  0E64  087C               	movf	??i1_chegadaS1,w
 10370  0E65  0021               	movlb	1	; select bank1
 10371  0E66  00B3               	movwf	_MatrixLed^(0+128)
 10372  0E67                     i1l3333:
 10373                           
 10374                           ;main.c: 242:     MatrixLed[1] = 0b10000001;
 10375  0E67  3081               	movlw	129
 10376  0E68  00FC               	movwf	??i1_chegadaS1
 10377  0E69  087C               	movf	??i1_chegadaS1,w
 10378  0E6A  00B4               	movwf	(_MatrixLed^(0+128)+1)
 10379  0E6B                     i1l3335:
 10380                           
 10381                           ;main.c: 243:     MatrixLed[2] = 0b10000001;
 10382  0E6B  3081               	movlw	129
 10383  0E6C  00FC               	movwf	??i1_chegadaS1
 10384  0E6D  087C               	movf	??i1_chegadaS1,w
 10385  0E6E  00B5               	movwf	(_MatrixLed^(0+128)+2)
 10386  0E6F                     i1l3337:
 10387                           
 10388                           ;main.c: 244:     MatrixLed[3] = 0b01111110;
 10389  0E6F  307E               	movlw	126
 10390  0E70  00FC               	movwf	??i1_chegadaS1
 10391  0E71  087C               	movf	??i1_chegadaS1,w
 10392  0E72  00B6               	movwf	(_MatrixLed^(0+128)+3)
 10393                           
 10394                           ;main.c: 245:     MatrixLed[4] = 0;
 10395  0E73  01B7               	clrf	(_MatrixLed^(0+128)+4)
 10396  0E74                     i1l3339:
 10397                           
 10398                           ;main.c: 246:     if(subindo){
 10399  0E74  084B               	movf	_subindo^(0+128),w
 10400  0E75  1903               	btfsc	3,2
 10401  0E76  2E78               	goto	u212_21
 10402  0E77  2E79               	goto	u212_20
 10403  0E78                     u212_21:
 10404  0E78  2E8B               	goto	i1l3345
 10405  0E79                     u212_20:
 10406  0E79                     i1l3341:
 10407                           
 10408                           ;main.c: 247:         MatrixLed[5] = 0b01100000;
 10409  0E79  3060               	movlw	96
 10410  0E7A  00FC               	movwf	??i1_chegadaS1
 10411  0E7B  087C               	movf	??i1_chegadaS1,w
 10412  0E7C  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10413                           
 10414                           ;main.c: 248:         MatrixLed[6] = 0b11000000;
 10415  0E7D  30C0               	movlw	192
 10416  0E7E  00FC               	movwf	??i1_chegadaS1
 10417  0E7F  087C               	movf	??i1_chegadaS1,w
 10418  0E80  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10419                           
 10420                           ;main.c: 249:         MatrixLed[7] = 0b01100000;
 10421  0E81  3060               	movlw	96
 10422  0E82  00FC               	movwf	??i1_chegadaS1
 10423  0E83  087C               	movf	??i1_chegadaS1,w
 10424  0E84  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10425  0E85                     i1l3343:
 10426                           
 10427                           ;main.c: 250:         destinoSub = destinoSub & 0b11111110;
 10428  0E85  083C               	movf	_destinoSub^(0+128),w
 10429  0E86  39FE               	andlw	254
 10430  0E87  00FC               	movwf	??i1_chegadaS1
 10431  0E88  087C               	movf	??i1_chegadaS1,w
 10432  0E89  00BC               	movwf	_destinoSub^(0+128)
 10433                           
 10434                           ;main.c: 251:     }else{
 10435  0E8A  2EA0               	goto	i1l3351
 10436  0E8B                     i1l3345:
 10437                           
 10438                           ;main.c: 252:         MatrixLed[5] = 0b11000000;
 10439  0E8B  30C0               	movlw	192
 10440  0E8C  00FC               	movwf	??i1_chegadaS1
 10441  0E8D  087C               	movf	??i1_chegadaS1,w
 10442  0E8E  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10443                           
 10444                           ;main.c: 253:         MatrixLed[6] = 0b01100000;
 10445  0E8F  3060               	movlw	96
 10446  0E90  00FC               	movwf	??i1_chegadaS1
 10447  0E91  087C               	movf	??i1_chegadaS1,w
 10448  0E92  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10449                           
 10450                           ;main.c: 254:         MatrixLed[7] = 0b11000000;
 10451  0E93  30C0               	movlw	192
 10452  0E94  00FC               	movwf	??i1_chegadaS1
 10453  0E95  087C               	movf	??i1_chegadaS1,w
 10454  0E96  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10455  0E97                     i1l3347:
 10456                           
 10457                           ;main.c: 255:         destinoDesc = destinoDesc & 0b11111110;
 10458  0E97  083B               	movf	_destinoDesc^(0+128),w
 10459  0E98  39FE               	andlw	254
 10460  0E99  00FC               	movwf	??i1_chegadaS1
 10461  0E9A  087C               	movf	??i1_chegadaS1,w
 10462  0E9B  00BB               	movwf	_destinoDesc^(0+128)
 10463                           
 10464                           ;main.c: 256:         mov = Repouso;
 10465  0E9C  01C1               	clrf	_mov^(0+128)
 10466  0E9D                     i1l3349:
 10467                           
 10468                           ;main.c: 258:         TMR4_StartTimer();
 10469  0E9D  318B  2328  318E   	fcall	i1_TMR4_StartTimer
 10470  0EA0                     i1l3351:
 10471                           
 10472                           ;main.c: 260:     matrixUpdate();
 10473  0EA0  318D  2550  318E   	fcall	i1_matrixUpdate
 10474  0EA3                     i1l3353:
 10475                           
 10476                           ;main.c: 262:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 10477  0EA3  0021               	movlb	1	; select bank1
 10478  0EA4  083A               	movf	(_MatrixLed^(0+128)+7),w
 10479  0EA5  043C               	iorwf	_destinoSub^(0+128),w
 10480  0EA6  00FC               	movwf	??i1_chegadaS1
 10481  0EA7  087C               	movf	??i1_chegadaS1,w
 10482  0EA8  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10483  0EA9                     i1l3355:
 10484                           
 10485                           ;main.c: 263:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 10486  0EA9  0839               	movf	(_MatrixLed^(0+128)+6),w
 10487  0EAA  043B               	iorwf	_destinoDesc^(0+128),w
 10488  0EAB  00FC               	movwf	??i1_chegadaS1
 10489  0EAC  087C               	movf	??i1_chegadaS1,w
 10490  0EAD  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10491  0EAE                     i1l865:
 10492  0EAE  0008               	return
 10493  0EAF                     __end_ofi1_chegadaS1:
 10494                           
 10495                           	psect	text62
 10496  0B49                     __ptext62:	
 10497 ;; *************** function _CMP2_ISR *****************
 10498 ;; Defined at:
 10499 ;;		line 86 in file "mcc_generated_files/cmp2.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;		None
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10513 ;;      Params:         0       0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0
 10516 ;;      Totals:         0       0       0       0       0       0
 10517 ;;Total ram usage:        0 bytes
 10518 ;; Hardware stack levels used: 1
 10519 ;; Hardware stack levels required when called: 4
 10520 ;; This function calls:
 10521 ;;		_chegadaS4
 10522 ;; This function is called by:
 10523 ;;		_INTERRUPT_InterruptManager
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527  0B49                     _CMP2_ISR:	
 10528                           ;psect for function _CMP2_ISR
 10529                           
 10530  0B49                     i1l3643:	
 10531                           ;incstack = 0
 10532                           ; Regs used in _CMP2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10533                           
 10534                           
 10535                           ;mcc_generated_files/cmp2.c: 89:     PIR2bits.C2IF = 0;
 10536  0B49  0020               	movlb	0	; select bank0
 10537  0B4A  1312               	bcf	18,6	;volatile
 10538  0B4B                     i1l3645:
 10539                           
 10540                           ;mcc_generated_files/cmp2.c: 90:     chegadaS4();
 10541  0B4B  3185  2592  318B   	fcall	_chegadaS4
 10542  0B4E                     i1l81:
 10543  0B4E  0008               	return
 10544  0B4F                     __end_of_CMP2_ISR:
 10545                           
 10546                           	psect	text63
 10547  0592                     __ptext63:	
 10548 ;; *************** function _chegadaS4 *****************
 10549 ;; Defined at:
 10550 ;;		line 346 in file "main.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;		None
 10553 ;; Auto vars:     Size  Location     Type
 10554 ;;		None
 10555 ;; Return value:  Size  Location     Type
 10556 ;;                  1    wreg      void 
 10557 ;; Registers used:
 10558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10559 ;; Tracked objects:
 10560 ;;		On entry : 0/0
 10561 ;;		On exit  : 0/0
 10562 ;;		Unchanged: 0/0
 10563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10564 ;;      Params:         0       0       0       0       0       0
 10565 ;;      Locals:         0       0       0       0       0       0
 10566 ;;      Temps:          1       0       0       0       0       0
 10567 ;;      Totals:         1       0       0       0       0       0
 10568 ;;Total ram usage:        1 bytes
 10569 ;; Hardware stack levels used: 1
 10570 ;; Hardware stack levels required when called: 3
 10571 ;; This function calls:
 10572 ;;		_PWM3_LoadDutyValue
 10573 ;;		i1_TMR4_StartTimer
 10574 ;;		i1_TMR4_WriteTimer
 10575 ;;		i1_matrixUpdate
 10576 ;; This function is called by:
 10577 ;;		_CMP2_ISR
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581  0592                     _chegadaS4:	
 10582                           ;psect for function _chegadaS4
 10583                           
 10584  0592                     i1l3373:	
 10585                           ;incstack = 0
 10586                           ; Regs used in _chegadaS4: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10587                           
 10588                           
 10589                           ;main.c: 348:     andarAtual = 3;
 10590  0592  3003               	movlw	3
 10591  0593  00FC               	movwf	??_chegadaS4
 10592  0594  087C               	movf	??_chegadaS4,w
 10593  0595  0020               	movlb	0	; select bank0
 10594  0596  00D9               	movwf	_andarAtual
 10595  0597                     i1l3375:
 10596                           
 10597                           ;main.c: 351:     if((((destinoSub & 0b00001000) == 8 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00001000) == 8 )) ){
 10598  0597  0021               	movlb	1	; select bank1
 10599  0598  1DBC               	btfss	_destinoSub^(0+128),3
 10600  0599  2D9B               	goto	u213_21
 10601  059A  2D9C               	goto	u213_20
 10602  059B                     u213_21:
 10603  059B  2DA1               	goto	i1l3379
 10604  059C                     u213_20:
 10605  059C                     i1l3377:
 10606  059C  084B               	movf	_subindo^(0+128),w
 10607  059D  1D03               	btfss	3,2
 10608  059E  2DA0               	goto	u214_21
 10609  059F  2DA1               	goto	u214_20
 10610  05A0                     u214_21:
 10611  05A0  2DAA               	goto	i1l3383
 10612  05A1                     u214_20:
 10613  05A1                     i1l3379:
 10614  05A1  084B               	movf	_subindo^(0+128),w
 10615  05A2  1D03               	btfss	3,2
 10616  05A3  2DA5               	goto	u215_21
 10617  05A4  2DA6               	goto	u215_20
 10618  05A5                     u215_21:
 10619  05A5  2DB7               	goto	i1l890
 10620  05A6                     u215_20:
 10621  05A6                     i1l3381:
 10622  05A6  1DBB               	btfss	_destinoDesc^(0+128),3
 10623  05A7  2DA9               	goto	u216_21
 10624  05A8  2DAA               	goto	u216_20
 10625  05A9                     u216_21:
 10626  05A9  2DB7               	goto	i1l890
 10627  05AA                     u216_20:
 10628  05AA                     i1l3383:
 10629                           
 10630                           ;main.c: 352:         PWM3_LoadDutyValue(0);
 10631  05AA  3000               	movlw	0
 10632  05AB  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 10633  05AC  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 10634  05AD  318C  24CF  3185   	fcall	_PWM3_LoadDutyValue
 10635                           
 10636                           ;main.c: 353:         TMR4_WriteTimer(0);
 10637  05B0  3000               	movlw	0
 10638  05B1  318B  2339  3185   	fcall	i1_TMR4_WriteTimer
 10639  05B4                     i1l3385:
 10640                           
 10641                           ;main.c: 354:         TMR4_StartTimer();
 10642  05B4  318B  2328  3185   	fcall	i1_TMR4_StartTimer
 10643  05B7                     i1l890:	
 10644                           ;main.c: 355:     }
 10645                           
 10646                           
 10647                           ;main.c: 358:     MatrixLed[0] = 0b10000001;
 10648  05B7  3081               	movlw	129
 10649  05B8  00FC               	movwf	??_chegadaS4
 10650  05B9  087C               	movf	??_chegadaS4,w
 10651  05BA  0021               	movlb	1	; select bank1
 10652  05BB  00B3               	movwf	_MatrixLed^(0+128)
 10653                           
 10654                           ;main.c: 359:     MatrixLed[1] = 0b10010001;
 10655  05BC  3091               	movlw	145
 10656  05BD  00FC               	movwf	??_chegadaS4
 10657  05BE  087C               	movf	??_chegadaS4,w
 10658  05BF  00B4               	movwf	(_MatrixLed^(0+128)+1)
 10659                           
 10660                           ;main.c: 360:     MatrixLed[2] = 0b10010001;
 10661  05C0  3091               	movlw	145
 10662  05C1  00FC               	movwf	??_chegadaS4
 10663  05C2  087C               	movf	??_chegadaS4,w
 10664  05C3  00B5               	movwf	(_MatrixLed^(0+128)+2)
 10665                           
 10666                           ;main.c: 361:     MatrixLed[3] = 0b01101110;
 10667  05C4  306E               	movlw	110
 10668  05C5  00FC               	movwf	??_chegadaS4
 10669  05C6  087C               	movf	??_chegadaS4,w
 10670  05C7  00B6               	movwf	(_MatrixLed^(0+128)+3)
 10671  05C8                     i1l3387:
 10672                           
 10673                           ;main.c: 362:     MatrixLed[4] = 0;
 10674  05C8  01B7               	clrf	(_MatrixLed^(0+128)+4)
 10675  05C9                     i1l3389:
 10676                           
 10677                           ;main.c: 363:     if(subindo){
 10678  05C9  084B               	movf	_subindo^(0+128),w
 10679  05CA  1903               	btfsc	3,2
 10680  05CB  2DCD               	goto	u217_21
 10681  05CC  2DCE               	goto	u217_20
 10682  05CD                     u217_21:
 10683  05CD  2DE0               	goto	i1l3395
 10684  05CE                     u217_20:
 10685  05CE                     i1l3391:
 10686                           
 10687                           ;main.c: 364:         MatrixLed[5] = 0b01100000;
 10688  05CE  3060               	movlw	96
 10689  05CF  00FC               	movwf	??_chegadaS4
 10690  05D0  087C               	movf	??_chegadaS4,w
 10691  05D1  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10692                           
 10693                           ;main.c: 365:         MatrixLed[6] = 0b11000000;
 10694  05D2  30C0               	movlw	192
 10695  05D3  00FC               	movwf	??_chegadaS4
 10696  05D4  087C               	movf	??_chegadaS4,w
 10697  05D5  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10698                           
 10699                           ;main.c: 366:         MatrixLed[7] = 0b01100000;
 10700  05D6  3060               	movlw	96
 10701  05D7  00FC               	movwf	??_chegadaS4
 10702  05D8  087C               	movf	??_chegadaS4,w
 10703  05D9  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10704  05DA                     i1l3393:
 10705                           
 10706                           ;main.c: 367:         destinoSub = destinoSub & 0b11110111;
 10707  05DA  083C               	movf	_destinoSub^(0+128),w
 10708  05DB  39F7               	andlw	247
 10709  05DC  00FC               	movwf	??_chegadaS4
 10710  05DD  087C               	movf	??_chegadaS4,w
 10711  05DE  00BC               	movwf	_destinoSub^(0+128)
 10712                           
 10713                           ;main.c: 368:     }else{
 10714  05DF  2DF1               	goto	i1l3399
 10715  05E0                     i1l3395:
 10716                           
 10717                           ;main.c: 369:         MatrixLed[5] = 0b11000000;
 10718  05E0  30C0               	movlw	192
 10719  05E1  00FC               	movwf	??_chegadaS4
 10720  05E2  087C               	movf	??_chegadaS4,w
 10721  05E3  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10722                           
 10723                           ;main.c: 370:         MatrixLed[6] = 0b01100000;
 10724  05E4  3060               	movlw	96
 10725  05E5  00FC               	movwf	??_chegadaS4
 10726  05E6  087C               	movf	??_chegadaS4,w
 10727  05E7  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10728                           
 10729                           ;main.c: 371:         MatrixLed[7] = 0b11000000;
 10730  05E8  30C0               	movlw	192
 10731  05E9  00FC               	movwf	??_chegadaS4
 10732  05EA  087C               	movf	??_chegadaS4,w
 10733  05EB  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10734  05EC                     i1l3397:
 10735                           
 10736                           ;main.c: 372:         destinoDesc = destinoDesc & 0b11110111;
 10737  05EC  083B               	movf	_destinoDesc^(0+128),w
 10738  05ED  39F7               	andlw	247
 10739  05EE  00FC               	movwf	??_chegadaS4
 10740  05EF  087C               	movf	??_chegadaS4,w
 10741  05F0  00BB               	movwf	_destinoDesc^(0+128)
 10742  05F1                     i1l3399:
 10743                           
 10744                           ;main.c: 374:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 10745  05F1  083A               	movf	(_MatrixLed^(0+128)+7),w
 10746  05F2  043C               	iorwf	_destinoSub^(0+128),w
 10747  05F3  00FC               	movwf	??_chegadaS4
 10748  05F4  087C               	movf	??_chegadaS4,w
 10749  05F5  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10750  05F6                     i1l3401:
 10751                           
 10752                           ;main.c: 375:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 10753  05F6  0839               	movf	(_MatrixLed^(0+128)+6),w
 10754  05F7  043B               	iorwf	_destinoDesc^(0+128),w
 10755  05F8  00FC               	movwf	??_chegadaS4
 10756  05F9  087C               	movf	??_chegadaS4,w
 10757  05FA  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10758  05FB                     i1l3403:
 10759                           
 10760                           ;main.c: 376:     matrixUpdate();
 10761  05FB  318D  2550  3185   	fcall	i1_matrixUpdate
 10762  05FE                     i1l3405:
 10763                           
 10764                           ;main.c: 379:     if(destinoDesc ==0 && destinoSub == 0){
 10765  05FE  0021               	movlb	1	; select bank1
 10766  05FF  083B               	movf	_destinoDesc^(0+128),w
 10767  0600  1D03               	btfss	3,2
 10768  0601  2E03               	goto	u218_21
 10769  0602  2E04               	goto	u218_20
 10770  0603                     u218_21:
 10771  0603  2E0D               	goto	i1l898
 10772  0604                     u218_20:
 10773  0604                     i1l3407:
 10774  0604  083C               	movf	_destinoSub^(0+128),w
 10775  0605  1D03               	btfss	3,2
 10776  0606  2E08               	goto	u219_21
 10777  0607  2E09               	goto	u219_20
 10778  0608                     u219_21:
 10779  0608  2E0D               	goto	i1l898
 10780  0609                     u219_20:
 10781  0609                     i1l3409:
 10782                           
 10783                           ;main.c: 380:         mov = RetornaS0;
 10784  0609  3003               	movlw	3
 10785  060A  00FC               	movwf	??_chegadaS4
 10786  060B  087C               	movf	??_chegadaS4,w
 10787  060C  00C1               	movwf	_mov^(0+128)
 10788  060D                     i1l898:
 10789  060D  0008               	return
 10790  060E                     __end_of_chegadaS4:
 10791                           
 10792                           	psect	text64
 10793  0B43                     __ptext64:	
 10794 ;; *************** function _CMP1_ISR *****************
 10795 ;; Defined at:
 10796 ;;		line 86 in file "mcc_generated_files/cmp1.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;		None
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;		None
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  1    wreg      void 
 10803 ;; Registers used:
 10804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10810 ;;      Params:         0       0       0       0       0       0
 10811 ;;      Locals:         0       0       0       0       0       0
 10812 ;;      Temps:          0       0       0       0       0       0
 10813 ;;      Totals:         0       0       0       0       0       0
 10814 ;;Total ram usage:        0 bytes
 10815 ;; Hardware stack levels used: 1
 10816 ;; Hardware stack levels required when called: 4
 10817 ;; This function calls:
 10818 ;;		_chegadaS3
 10819 ;; This function is called by:
 10820 ;;		_INTERRUPT_InterruptManager
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824  0B43                     _CMP1_ISR:	
 10825                           ;psect for function _CMP1_ISR
 10826                           
 10827  0B43                     i1l3647:	
 10828                           ;incstack = 0
 10829                           ; Regs used in _CMP1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10830                           
 10831                           
 10832                           ;mcc_generated_files/cmp1.c: 89:     PIR2bits.C1IF = 0;
 10833  0B43  0020               	movlb	0	; select bank0
 10834  0B44  1292               	bcf	18,5	;volatile
 10835  0B45                     i1l3649:
 10836                           
 10837                           ;mcc_generated_files/cmp1.c: 90:     chegadaS3();
 10838  0B45  3186  260E  318B   	fcall	_chegadaS3
 10839  0B48                     i1l148:
 10840  0B48  0008               	return
 10841  0B49                     __end_of_CMP1_ISR:
 10842                           
 10843                           	psect	text65
 10844  060E                     __ptext65:	
 10845 ;; *************** function _chegadaS3 *****************
 10846 ;; Defined at:
 10847 ;;		line 307 in file "main.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;		None
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;		None
 10852 ;; Return value:  Size  Location     Type
 10853 ;;                  1    wreg      void 
 10854 ;; Registers used:
 10855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10856 ;; Tracked objects:
 10857 ;;		On entry : 0/0
 10858 ;;		On exit  : 0/0
 10859 ;;		Unchanged: 0/0
 10860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10861 ;;      Params:         0       0       0       0       0       0
 10862 ;;      Locals:         0       0       0       0       0       0
 10863 ;;      Temps:          1       0       0       0       0       0
 10864 ;;      Totals:         1       0       0       0       0       0
 10865 ;;Total ram usage:        1 bytes
 10866 ;; Hardware stack levels used: 1
 10867 ;; Hardware stack levels required when called: 3
 10868 ;; This function calls:
 10869 ;;		_PWM3_LoadDutyValue
 10870 ;;		i1_TMR4_StartTimer
 10871 ;;		i1_TMR4_WriteTimer
 10872 ;;		i1_matrixUpdate
 10873 ;; This function is called by:
 10874 ;;		_CMP1_ISR
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878  060E                     _chegadaS3:	
 10879                           ;psect for function _chegadaS3
 10880                           
 10881  060E                     i1l3419:	
 10882                           ;incstack = 0
 10883                           ; Regs used in _chegadaS3: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10884                           
 10885                           
 10886                           ;main.c: 309:     andarAtual = 2;
 10887  060E  3002               	movlw	2
 10888  060F  00FC               	movwf	??_chegadaS3
 10889  0610  087C               	movf	??_chegadaS3,w
 10890  0611  0020               	movlb	0	; select bank0
 10891  0612  00D9               	movwf	_andarAtual
 10892  0613                     i1l3421:
 10893                           
 10894                           ;main.c: 312:     if((((destinoSub & 0b00000100) == 4 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00000100) == 4 )) ){
 10895  0613  0021               	movlb	1	; select bank1
 10896  0614  1D3C               	btfss	_destinoSub^(0+128),2
 10897  0615  2E17               	goto	u220_21
 10898  0616  2E18               	goto	u220_20
 10899  0617                     u220_21:
 10900  0617  2E1D               	goto	i1l3425
 10901  0618                     u220_20:
 10902  0618                     i1l3423:
 10903  0618  084B               	movf	_subindo^(0+128),w
 10904  0619  1D03               	btfss	3,2
 10905  061A  2E1C               	goto	u221_21
 10906  061B  2E1D               	goto	u221_20
 10907  061C                     u221_21:
 10908  061C  2E26               	goto	i1l3429
 10909  061D                     u221_20:
 10910  061D                     i1l3425:
 10911  061D  084B               	movf	_subindo^(0+128),w
 10912  061E  1D03               	btfss	3,2
 10913  061F  2E21               	goto	u222_21
 10914  0620  2E22               	goto	u222_20
 10915  0621                     u222_21:
 10916  0621  2E33               	goto	i1l879
 10917  0622                     u222_20:
 10918  0622                     i1l3427:
 10919  0622  1D3B               	btfss	_destinoDesc^(0+128),2
 10920  0623  2E25               	goto	u223_21
 10921  0624  2E26               	goto	u223_20
 10922  0625                     u223_21:
 10923  0625  2E33               	goto	i1l879
 10924  0626                     u223_20:
 10925  0626                     i1l3429:
 10926                           
 10927                           ;main.c: 313:         PWM3_LoadDutyValue(0);
 10928  0626  3000               	movlw	0
 10929  0627  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 10930  0628  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 10931  0629  318C  24CF  3186   	fcall	_PWM3_LoadDutyValue
 10932                           
 10933                           ;main.c: 314:         TMR4_WriteTimer(0);
 10934  062C  3000               	movlw	0
 10935  062D  318B  2339  3186   	fcall	i1_TMR4_WriteTimer
 10936  0630                     i1l3431:
 10937                           
 10938                           ;main.c: 315:         TMR4_StartTimer();
 10939  0630  318B  2328  3186   	fcall	i1_TMR4_StartTimer
 10940  0633                     i1l879:	
 10941                           ;main.c: 316:     }
 10942                           
 10943                           
 10944                           ;main.c: 319:     MatrixLed[0] = 0b01000011;
 10945  0633  3043               	movlw	67
 10946  0634  00FC               	movwf	??_chegadaS3
 10947  0635  087C               	movf	??_chegadaS3,w
 10948  0636  0021               	movlb	1	; select bank1
 10949  0637  00B3               	movwf	_MatrixLed^(0+128)
 10950                           
 10951                           ;main.c: 320:     MatrixLed[1] = 0b10000101;
 10952  0638  3085               	movlw	133
 10953  0639  00FC               	movwf	??_chegadaS3
 10954  063A  087C               	movf	??_chegadaS3,w
 10955  063B  00B4               	movwf	(_MatrixLed^(0+128)+1)
 10956                           
 10957                           ;main.c: 321:     MatrixLed[2] = 0b10001001;
 10958  063C  3089               	movlw	137
 10959  063D  00FC               	movwf	??_chegadaS3
 10960  063E  087C               	movf	??_chegadaS3,w
 10961  063F  00B5               	movwf	(_MatrixLed^(0+128)+2)
 10962                           
 10963                           ;main.c: 322:     MatrixLed[3] = 0b01110001;
 10964  0640  3071               	movlw	113
 10965  0641  00FC               	movwf	??_chegadaS3
 10966  0642  087C               	movf	??_chegadaS3,w
 10967  0643  00B6               	movwf	(_MatrixLed^(0+128)+3)
 10968  0644                     i1l3433:
 10969                           
 10970                           ;main.c: 323:     MatrixLed[4] = 0;
 10971  0644  01B7               	clrf	(_MatrixLed^(0+128)+4)
 10972  0645                     i1l3435:
 10973                           
 10974                           ;main.c: 324:     if(subindo){
 10975  0645  084B               	movf	_subindo^(0+128),w
 10976  0646  1903               	btfsc	3,2
 10977  0647  2E49               	goto	u224_21
 10978  0648  2E4A               	goto	u224_20
 10979  0649                     u224_21:
 10980  0649  2E5C               	goto	i1l3441
 10981  064A                     u224_20:
 10982  064A                     i1l3437:
 10983                           
 10984                           ;main.c: 325:         MatrixLed[5] = 0b01100000;
 10985  064A  3060               	movlw	96
 10986  064B  00FC               	movwf	??_chegadaS3
 10987  064C  087C               	movf	??_chegadaS3,w
 10988  064D  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10989                           
 10990                           ;main.c: 326:         MatrixLed[6] = 0b11000000;
 10991  064E  30C0               	movlw	192
 10992  064F  00FC               	movwf	??_chegadaS3
 10993  0650  087C               	movf	??_chegadaS3,w
 10994  0651  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10995                           
 10996                           ;main.c: 327:         MatrixLed[7] = 0b01100000;
 10997  0652  3060               	movlw	96
 10998  0653  00FC               	movwf	??_chegadaS3
 10999  0654  087C               	movf	??_chegadaS3,w
 11000  0655  00BA               	movwf	(_MatrixLed^(0+128)+7)
 11001  0656                     i1l3439:
 11002                           
 11003                           ;main.c: 328:         destinoSub = destinoSub & 0b11111011;
 11004  0656  083C               	movf	_destinoSub^(0+128),w
 11005  0657  39FB               	andlw	251
 11006  0658  00FC               	movwf	??_chegadaS3
 11007  0659  087C               	movf	??_chegadaS3,w
 11008  065A  00BC               	movwf	_destinoSub^(0+128)
 11009                           
 11010                           ;main.c: 329:     }else{
 11011  065B  2E6D               	goto	i1l3445
 11012  065C                     i1l3441:
 11013                           
 11014                           ;main.c: 330:         MatrixLed[5] = 0b11000000;
 11015  065C  30C0               	movlw	192
 11016  065D  00FC               	movwf	??_chegadaS3
 11017  065E  087C               	movf	??_chegadaS3,w
 11018  065F  00B8               	movwf	(_MatrixLed^(0+128)+5)
 11019                           
 11020                           ;main.c: 331:         MatrixLed[6] = 0b01100000;
 11021  0660  3060               	movlw	96
 11022  0661  00FC               	movwf	??_chegadaS3
 11023  0662  087C               	movf	??_chegadaS3,w
 11024  0663  00B9               	movwf	(_MatrixLed^(0+128)+6)
 11025                           
 11026                           ;main.c: 332:         MatrixLed[7] = 0b11000000;
 11027  0664  30C0               	movlw	192
 11028  0665  00FC               	movwf	??_chegadaS3
 11029  0666  087C               	movf	??_chegadaS3,w
 11030  0667  00BA               	movwf	(_MatrixLed^(0+128)+7)
 11031  0668                     i1l3443:
 11032                           
 11033                           ;main.c: 333:         destinoDesc = destinoDesc & 0b11111011;
 11034  0668  083B               	movf	_destinoDesc^(0+128),w
 11035  0669  39FB               	andlw	251
 11036  066A  00FC               	movwf	??_chegadaS3
 11037  066B  087C               	movf	??_chegadaS3,w
 11038  066C  00BB               	movwf	_destinoDesc^(0+128)
 11039  066D                     i1l3445:
 11040                           
 11041                           ;main.c: 335:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 11042  066D  083A               	movf	(_MatrixLed^(0+128)+7),w
 11043  066E  043C               	iorwf	_destinoSub^(0+128),w
 11044  066F  00FC               	movwf	??_chegadaS3
 11045  0670  087C               	movf	??_chegadaS3,w
 11046  0671  00BA               	movwf	(_MatrixLed^(0+128)+7)
 11047  0672                     i1l3447:
 11048                           
 11049                           ;main.c: 336:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 11050  0672  0839               	movf	(_MatrixLed^(0+128)+6),w
 11051  0673  043B               	iorwf	_destinoDesc^(0+128),w
 11052  0674  00FC               	movwf	??_chegadaS3
 11053  0675  087C               	movf	??_chegadaS3,w
 11054  0676  00B9               	movwf	(_MatrixLed^(0+128)+6)
 11055  0677                     i1l3449:
 11056                           
 11057                           ;main.c: 337:     matrixUpdate();
 11058  0677  318D  2550  3186   	fcall	i1_matrixUpdate
 11059  067A                     i1l3451:
 11060                           
 11061                           ;main.c: 340:     if(destinoDesc ==0 && destinoSub == 0){
 11062  067A  0021               	movlb	1	; select bank1
 11063  067B  083B               	movf	_destinoDesc^(0+128),w
 11064  067C  1D03               	btfss	3,2
 11065  067D  2E7F               	goto	u225_21
 11066  067E  2E80               	goto	u225_20
 11067  067F                     u225_21:
 11068  067F  2E89               	goto	i1l887
 11069  0680                     u225_20:
 11070  0680                     i1l3453:
 11071  0680  083C               	movf	_destinoSub^(0+128),w
 11072  0681  1D03               	btfss	3,2
 11073  0682  2E84               	goto	u226_21
 11074  0683  2E85               	goto	u226_20
 11075  0684                     u226_21:
 11076  0684  2E89               	goto	i1l887
 11077  0685                     u226_20:
 11078  0685                     i1l3455:
 11079                           
 11080                           ;main.c: 341:         mov = RetornaS0;
 11081  0685  3003               	movlw	3
 11082  0686  00FC               	movwf	??_chegadaS3
 11083  0687  087C               	movf	??_chegadaS3,w
 11084  0688  00C1               	movwf	_mov^(0+128)
 11085  0689                     i1l887:
 11086  0689  0008               	return
 11087  068A                     __end_of_chegadaS3:
 11088                           
 11089                           	psect	text66
 11090  0D50                     __ptext66:	
 11091 ;; *************** function i1_matrixUpdate *****************
 11092 ;; Defined at:
 11093 ;;		line 156 in file "main.c"
 11094 ;; Parameters:    Size  Location     Type
 11095 ;;		None
 11096 ;; Auto vars:     Size  Location     Type
 11097 ;;  data            2    9[COMMON] unsigned char [2]
 11098 ;;  i               1   11[COMMON] unsigned char 
 11099 ;;  i               1    0        unsigned char 
 11100 ;;  index           1    0        unsigned char 
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  1    wreg      void 
 11103 ;; Registers used:
 11104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11110 ;;      Params:         0       0       0       0       0       0
 11111 ;;      Locals:         3       0       0       0       0       0
 11112 ;;      Temps:          1       0       0       0       0       0
 11113 ;;      Totals:         4       0       0       0       0       0
 11114 ;;Total ram usage:        4 bytes
 11115 ;; Hardware stack levels used: 1
 11116 ;; Hardware stack levels required when called: 2
 11117 ;; This function calls:
 11118 ;;		i1_txSpi
 11119 ;; This function is called by:
 11120 ;;		_chegadaS2
 11121 ;;		_chegadaS3
 11122 ;;		_chegadaS4
 11123 ;;		i1_chegadaS1
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127  0D50                     i1_matrixUpdate:	
 11128                           ;psect for function i1_matrixUpdate
 11129                           
 11130  0D50                     i1l3159:	
 11131                           ;incstack = 0
 11132                           ; Regs used in i1_matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11133                           
 11134                           
 11135                           ;main.c: 159:         for(uint8_t i=8;i>0;i--){
 11136  0D50  3008               	movlw	8
 11137  0D51  00F8               	movwf	??i1_matrixUpdate
 11138  0D52  0878               	movf	??i1_matrixUpdate,w
 11139  0D53  00FB               	movwf	i1matrixUpdate@i
 11140  0D54                     i1l3165:
 11141                           
 11142                           ;main.c: 160:             data[0] = i;
 11143  0D54  087B               	movf	i1matrixUpdate@i,w
 11144  0D55  00F8               	movwf	??i1_matrixUpdate
 11145  0D56  0878               	movf	??i1_matrixUpdate,w
 11146  0D57  00F9               	movwf	i1matrixUpdate@data
 11147  0D58                     i1l3167:
 11148                           
 11149                           ;main.c: 161:             data[1] = MatrixLed[i-1];
 11150  0D58  087B               	movf	i1matrixUpdate@i,w
 11151  0D59  3EB2               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
 11152  0D5A  0086               	movwf	6
 11153  0D5B  0187               	clrf	7
 11154  0D5C  0801               	movf	1,w
 11155  0D5D  00F8               	movwf	??i1_matrixUpdate
 11156  0D5E  0878               	movf	??i1_matrixUpdate,w
 11157  0D5F  00FA               	movwf	i1matrixUpdate@data+1
 11158  0D60                     i1l3169:
 11159                           
 11160                           ;main.c: 162:             txSpi(data, 2);
 11161  0D60  3002               	movlw	2
 11162  0D61  00F5               	movwf	i1txSpi@dataSize
 11163  0D62  3000               	movlw	0
 11164  0D63  00F6               	movwf	i1txSpi@dataSize+1
 11165  0D64  3079               	movlw	(low (i1matrixUpdate@data| 0))& (0+255)
 11166  0D65  318C  2401  318D   	fcall	i1_txSpi
 11167  0D68                     i1l3171:
 11168                           
 11169                           ;main.c: 163:         }
 11170  0D68  3001               	movlw	1
 11171  0D69  02FB               	subwf	i1matrixUpdate@i,f
 11172  0D6A                     i1l3173:
 11173  0D6A  087B               	movf	i1matrixUpdate@i,w
 11174  0D6B  1D03               	btfss	3,2
 11175  0D6C  2D6E               	goto	u202_21
 11176  0D6D  2D6F               	goto	u202_20
 11177  0D6E                     u202_21:
 11178  0D6E  2D54               	goto	i1l3165
 11179  0D6F                     u202_20:
 11180  0D6F                     i1l831:
 11181  0D6F  0008               	return
 11182  0D70                     __end_ofi1_matrixUpdate:
 11183                           
 11184                           	psect	text67
 11185  0C01                     __ptext67:	
 11186 ;; *************** function i1_txSpi *****************
 11187 ;; Defined at:
 11188 ;;		line 148 in file "main.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  data            1    wreg     PTR unsigned char 
 11191 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 11192 ;;  dataSize        2    5[COMMON] unsigned int 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;  data            1    7[COMMON] PTR unsigned char 
 11195 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 11196 ;; Return value:  Size  Location     Type
 11197 ;;                  1    wreg      void 
 11198 ;; Registers used:
 11199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11205 ;;      Params:         2       0       0       0       0       0
 11206 ;;      Locals:         1       0       0       0       0       0
 11207 ;;      Temps:          0       0       0       0       0       0
 11208 ;;      Totals:         3       0       0       0       0       0
 11209 ;;Total ram usage:        3 bytes
 11210 ;; Hardware stack levels used: 1
 11211 ;; Hardware stack levels required when called: 1
 11212 ;; This function calls:
 11213 ;;		i1_SPI1_ExchangeBlock
 11214 ;; This function is called by:
 11215 ;;		i1_matrixUpdate
 11216 ;; This function uses a non-reentrant model
 11217 ;;
 11218                           
 11219  0C01                     i1_txSpi:	
 11220                           ;psect for function i1_txSpi
 11221                           
 11222                           
 11223                           ;incstack = 0
 11224                           ; Regs used in i1_txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11225                           ;i1txSpi@data stored from wreg
 11226  0C01  00F7               	movwf	i1txSpi@data
 11227  0C02                     i1l818:	
 11228                           ;main.c: 149:     do { LATBbits.LATB1 = 0; } while(0);
 11229                           
 11230  0C02  0022               	movlb	2	; select bank2
 11231  0C03  108D               	bcf	13,1	;volatile
 11232  0C04                     i1l2905:
 11233                           
 11234                           ;main.c: 150:     SPI1_ExchangeBlock(data,dataSize);
 11235  0C04  0876               	movf	i1txSpi@dataSize+1,w
 11236  0C05  00F1               	movwf	i1SPI1_ExchangeBlock@blockSize+1
 11237  0C06  0875               	movf	i1txSpi@dataSize,w
 11238  0C07  00F0               	movwf	i1SPI1_ExchangeBlock@blockSize
 11239  0C08  0877               	movf	i1txSpi@data,w
 11240  0C09  318D  25DA  318C   	fcall	i1_SPI1_ExchangeBlock
 11241  0C0C                     i1l2907:
 11242  0C0C  0022               	movlb	2	; select bank2
 11243  0C0D  148D               	bsf	13,1	;volatile
 11244  0C0E                     i1l822:
 11245  0C0E  0008               	return
 11246  0C0F                     __end_ofi1_txSpi:
 11247                           
 11248                           	psect	text68
 11249  0DDA                     __ptext68:	
 11250 ;; *************** function i1_SPI1_ExchangeBlock *****************
 11251 ;; Defined at:
 11252 ;;		line 100 in file "mcc_generated_files/spi1.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;  block           1    wreg     PTR void 
 11255 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 11256 ;;  blockSize       2    0[COMMON] unsigned int 
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;  block           1    3[COMMON] PTR void 
 11259 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 11260 ;;  data            1    4[COMMON] PTR unsigned char 
 11261 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  1    wreg      void 
 11264 ;; Registers used:
 11265 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/0
 11268 ;;		On exit  : 0/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11271 ;;      Params:         2       0       0       0       0       0
 11272 ;;      Locals:         2       0       0       0       0       0
 11273 ;;      Temps:          1       0       0       0       0       0
 11274 ;;      Totals:         5       0       0       0       0       0
 11275 ;;Total ram usage:        5 bytes
 11276 ;; Hardware stack levels used: 1
 11277 ;; This function calls:
 11278 ;;		Nothing
 11279 ;; This function is called by:
 11280 ;;		i1_txSpi
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284  0DDA                     i1_SPI1_ExchangeBlock:	
 11285                           ;psect for function i1_SPI1_ExchangeBlock
 11286                           
 11287                           
 11288                           ;incstack = 0
 11289                           ; Regs used in i1_SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
 11290                           ;i1SPI1_ExchangeBlock@block stored from wreg
 11291  0DDA  00F3               	movwf	i1SPI1_ExchangeBlock@block
 11292  0DDB                     i1l2835:
 11293                           
 11294                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
 11295  0DDB  0873               	movf	i1SPI1_ExchangeBlock@block,w
 11296  0DDC  00F2               	movwf	??i1_SPI1_ExchangeBlock
 11297  0DDD  0872               	movf	??i1_SPI1_ExchangeBlock,w
 11298  0DDE  00F4               	movwf	i1SPI1_ExchangeBlock@data
 11299                           
 11300                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 11301  0DDF  2DF8               	goto	i1l2843
 11302  0DE0                     i1l2837:
 11303                           
 11304                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
 11305  0DE0  0874               	movf	i1SPI1_ExchangeBlock@data,w
 11306  0DE1  0086               	movwf	6
 11307  0DE2  0187               	clrf	7
 11308  0DE3  0801               	movf	1,w
 11309  0DE4  0024               	movlb	4	; select bank4
 11310  0DE5  0091               	movwf	17	;volatile
 11311  0DE6                     i1l444:	
 11312                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
 11313                           
 11314  0DE6  0020               	movlb	0	; select bank0
 11315  0DE7  1D91               	btfss	17,3	;volatile
 11316  0DE8  2DEA               	goto	u140_21
 11317  0DE9  2DEB               	goto	u140_20
 11318  0DEA                     u140_21:
 11319  0DEA  2DE6               	goto	i1l444
 11320  0DEB                     u140_20:
 11321  0DEB                     i1l446:
 11322                           
 11323                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
 11324  0DEB  1191               	bcf	17,3	;volatile
 11325  0DEC                     i1l2839:
 11326                           
 11327                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
 11328  0DEC  0024               	movlb	4	; select bank4
 11329  0DED  0811               	movf	17,w	;volatile
 11330  0DEE  00F2               	movwf	??i1_SPI1_ExchangeBlock
 11331  0DEF  0874               	movf	i1SPI1_ExchangeBlock@data,w
 11332  0DF0  0086               	movwf	6
 11333  0DF1  0187               	clrf	7
 11334  0DF2  0872               	movf	??i1_SPI1_ExchangeBlock,w
 11335  0DF3  0081               	movwf	1
 11336  0DF4                     i1l2841:
 11337  0DF4  3001               	movlw	1
 11338  0DF5  00F2               	movwf	??i1_SPI1_ExchangeBlock
 11339  0DF6  0872               	movf	??i1_SPI1_ExchangeBlock,w
 11340  0DF7  07F4               	addwf	i1SPI1_ExchangeBlock@data,f
 11341  0DF8                     i1l2843:
 11342                           
 11343                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 11344  0DF8  3001               	movlw	1
 11345  0DF9  02F0               	subwf	i1SPI1_ExchangeBlock@blockSize,f
 11346  0DFA  3000               	movlw	0
 11347  0DFB  3BF1               	subwfb	i1SPI1_ExchangeBlock@blockSize+1,f
 11348  0DFC  0A70               	incf	i1SPI1_ExchangeBlock@blockSize,w
 11349  0DFD  1D03               	skipz
 11350  0DFE  2E03               	goto	u141_21
 11351  0DFF  0A71               	incf	i1SPI1_ExchangeBlock@blockSize+1,w
 11352  0E00  1D03               	btfss	3,2
 11353  0E01  2E03               	goto	u141_21
 11354  0E02  2E04               	goto	u141_20
 11355  0E03                     u141_21:
 11356  0E03  2DE0               	goto	i1l2837
 11357  0E04                     u141_20:
 11358  0E04                     i1l448:
 11359  0E04  0008               	return
 11360  0E05                     __end_ofi1_SPI1_ExchangeBlock:
 11361                           
 11362                           	psect	text69
 11363  0B39                     __ptext69:	
 11364 ;; *************** function i1_TMR4_WriteTimer *****************
 11365 ;; Defined at:
 11366 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 11367 ;; Parameters:    Size  Location     Type
 11368 ;;  timerVal        1    wreg     unsigned char 
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  timerVal        1    0[COMMON] unsigned char 
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11380 ;;      Params:         0       0       0       0       0       0
 11381 ;;      Locals:         1       0       0       0       0       0
 11382 ;;      Temps:          0       0       0       0       0       0
 11383 ;;      Totals:         1       0       0       0       0       0
 11384 ;;Total ram usage:        1 bytes
 11385 ;; Hardware stack levels used: 1
 11386 ;; This function calls:
 11387 ;;		Nothing
 11388 ;; This function is called by:
 11389 ;;		_chegadaS2
 11390 ;;		_chegadaS3
 11391 ;;		_chegadaS4
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395  0B39                     i1_TMR4_WriteTimer:	
 11396                           ;psect for function i1_TMR4_WriteTimer
 11397                           
 11398                           
 11399                           ;incstack = 0
 11400                           ; Regs used in i1_TMR4_WriteTimer: [wreg]
 11401                           ;i1TMR4_WriteTimer@timerVal stored from wreg
 11402  0B39  00F0               	movwf	i1TMR4_WriteTimer@timerVal
 11403  0B3A                     i1l3157:
 11404                           
 11405                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
 11406  0B3A  0870               	movf	i1TMR4_WriteTimer@timerVal,w
 11407  0B3B  0028               	movlb	8	; select bank8
 11408  0B3C  0095               	movwf	21	;volatile
 11409  0B3D                     i1l682:
 11410  0B3D  0008               	return
 11411  0B3E                     __end_ofi1_TMR4_WriteTimer:
 11412                           
 11413                           	psect	text70
 11414  0B28                     __ptext70:	
 11415 ;; *************** function i1_TMR4_StartTimer *****************
 11416 ;; Defined at:
 11417 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;		None
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;		None
 11422 ;; Return value:  Size  Location     Type
 11423 ;;                  1    wreg      void 
 11424 ;; Registers used:
 11425 ;;		None
 11426 ;; Tracked objects:
 11427 ;;		On entry : 0/0
 11428 ;;		On exit  : 0/0
 11429 ;;		Unchanged: 0/0
 11430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11431 ;;      Params:         0       0       0       0       0       0
 11432 ;;      Locals:         0       0       0       0       0       0
 11433 ;;      Temps:          0       0       0       0       0       0
 11434 ;;      Totals:         0       0       0       0       0       0
 11435 ;;Total ram usage:        0 bytes
 11436 ;; Hardware stack levels used: 1
 11437 ;; This function calls:
 11438 ;;		Nothing
 11439 ;; This function is called by:
 11440 ;;		_chegadaS2
 11441 ;;		_chegadaS3
 11442 ;;		_chegadaS4
 11443 ;;		i1_chegadaS1
 11444 ;; This function uses a non-reentrant model
 11445 ;;
 11446                           
 11447  0B28                     i1_TMR4_StartTimer:	
 11448                           ;psect for function i1_TMR4_StartTimer
 11449                           
 11450  0B28                     i1l3155:	
 11451                           ;incstack = 0
 11452                           ; Regs used in i1_TMR4_StartTimer: []
 11453                           
 11454                           
 11455                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 11456  0B28  0028               	movlb	8	; select bank8
 11457  0B29  1517               	bsf	23,2	;volatile
 11458  0B2A                     i1l673:
 11459  0B2A  0008               	return
 11460  0B2B                     __end_ofi1_TMR4_StartTimer:
 11461                           
 11462                           	psect	text71
 11463  0CCF                     __ptext71:	
 11464 ;; *************** function _PWM3_LoadDutyValue *****************
 11465 ;; Defined at:
 11466 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;  dutyValue       2    0[COMMON] unsigned short 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      void 
 11473 ;; Registers used:
 11474 ;;		wreg, status,2, status,0
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11480 ;;      Params:         2       0       0       0       0       0
 11481 ;;      Locals:         0       0       0       0       0       0
 11482 ;;      Temps:          2       0       0       0       0       0
 11483 ;;      Totals:         4       0       0       0       0       0
 11484 ;;Total ram usage:        4 bytes
 11485 ;; Hardware stack levels used: 1
 11486 ;; This function calls:
 11487 ;;		Nothing
 11488 ;; This function is called by:
 11489 ;;		_controleMovimento
 11490 ;;		_chegadaS2
 11491 ;;		_chegadaS3
 11492 ;;		_chegadaS4
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496  0CCF                     _PWM3_LoadDutyValue:	
 11497                           ;psect for function _PWM3_LoadDutyValue
 11498                           
 11499  0CCF                     i1l2909:	
 11500                           ;incstack = 0
 11501                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 11502                           
 11503                           
 11504                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
 11505  0CCF  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 11506  0CD0  00F3               	movwf	??_PWM3_LoadDutyValue+1
 11507  0CD1  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 11508  0CD2  00F2               	movwf	??_PWM3_LoadDutyValue
 11509  0CD3  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 11510  0CD4  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 11511  0CD5  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 11512  0CD6  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 11513  0CD7  0872               	movf	??_PWM3_LoadDutyValue,w
 11514  0CD8  0026               	movlb	6	; select bank6
 11515  0CD9  0091               	movwf	17	;volatile
 11516                           
 11517                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
 11518  0CDA  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 11519  0CDB  3903               	andlw	3
 11520  0CDC  00F2               	movwf	??_PWM3_LoadDutyValue
 11521  0CDD  3004               	movlw	4
 11522  0CDE                     u150_25:
 11523  0CDE  35F2               	lslf	??_PWM3_LoadDutyValue,f
 11524  0CDF  0B89               	decfsz	9,f
 11525  0CE0  2CDE               	goto	u150_25
 11526  0CE1  0813               	movf	19,w	;volatile
 11527  0CE2  39CF               	andlw	207
 11528  0CE3  0472               	iorwf	??_PWM3_LoadDutyValue,w
 11529  0CE4  0093               	movwf	19	;volatile
 11530  0CE5                     i1l14:
 11531  0CE5  0008               	return
 11532  0CE6                     __end_of_PWM3_LoadDutyValue:
 11533                           
 11534                           	psect	text72
 11535  0CA3                     __ptext72:	
 11536 ;; *************** function _CCP4_CaptureISR *****************
 11537 ;; Defined at:
 11538 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;		None
 11541 ;; Auto vars:     Size  Location     Type
 11542 ;;  module          2    3[COMMON] struct CCPR4Reg_tag
 11543 ;; Return value:  Size  Location     Type
 11544 ;;                  1    wreg      void 
 11545 ;; Registers used:
 11546 ;;		wreg, status,2, status,0, pclath, cstack
 11547 ;; Tracked objects:
 11548 ;;		On entry : 0/0
 11549 ;;		On exit  : 0/0
 11550 ;;		Unchanged: 0/0
 11551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11552 ;;      Params:         0       0       0       0       0       0
 11553 ;;      Locals:         2       0       0       0       0       0
 11554 ;;      Temps:          1       0       0       0       0       0
 11555 ;;      Totals:         3       0       0       0       0       0
 11556 ;;Total ram usage:        3 bytes
 11557 ;; Hardware stack levels used: 1
 11558 ;; Hardware stack levels required when called: 1
 11559 ;; This function calls:
 11560 ;;		Absolute function
 11561 ;;		_CCP4_DefaultCallBack
 11562 ;; This function is called by:
 11563 ;;		_INTERRUPT_InterruptManager
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567  0CA3                     _CCP4_CaptureISR:	
 11568                           ;psect for function _CCP4_CaptureISR
 11569                           
 11570  0CA3                     i1l3699:	
 11571                           ;incstack = 0
 11572                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 11573                           
 11574                           
 11575                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 11576  0CA3  0020               	movlb	0	; select bank0
 11577  0CA4  1293               	bcf	19,5	;volatile
 11578  0CA5                     i1l3701:
 11579                           
 11580                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 11581  0CA5  0026               	movlb	6	; select bank6
 11582  0CA6  0818               	movf	24,w	;volatile
 11583  0CA7  00F2               	movwf	??_CCP4_CaptureISR
 11584  0CA8  0872               	movf	??_CCP4_CaptureISR,w
 11585  0CA9  00F3               	movwf	CCP4_CaptureISR@module
 11586                           
 11587                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 11588  0CAA  0819               	movf	25,w	;volatile
 11589  0CAB  00F2               	movwf	??_CCP4_CaptureISR
 11590  0CAC  0872               	movf	??_CCP4_CaptureISR,w
 11591  0CAD  00F4               	movwf	CCP4_CaptureISR@module+1
 11592  0CAE                     i1l3703:
 11593                           
 11594                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 11595  0CAE  0874               	movf	CCP4_CaptureISR@module+1,w
 11596  0CAF  00F1               	movwf	CCP4_DefaultCallBack@capturedValue+1
 11597  0CB0  0873               	movf	CCP4_CaptureISR@module,w
 11598  0CB1  00F0               	movwf	CCP4_DefaultCallBack@capturedValue
 11599  0CB2  0020               	movlb	0	; select bank0
 11600  0CB3  0861               	movf	_CCP4_CallBack+1,w
 11601  0CB4  008A               	movwf	10
 11602  0CB5  0860               	movf	_CCP4_CallBack,w
 11603  0CB6  000A               	callw
 11604  0CB7  318C               	pagesel	$
 11605  0CB8                     i1l644:
 11606  0CB8  0008               	return
 11607  0CB9                     __end_of_CCP4_CaptureISR:
 11608                           
 11609                           	psect	text73
 11610  0B24                     __ptext73:	
 11611 ;; *************** function _CCP4_DefaultCallBack *****************
 11612 ;; Defined at:
 11613 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  capturedValu    2    0[COMMON] unsigned short 
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;		None
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  1    wreg      void 
 11620 ;; Registers used:
 11621 ;;		None
 11622 ;; Tracked objects:
 11623 ;;		On entry : 0/0
 11624 ;;		On exit  : 0/0
 11625 ;;		Unchanged: 0/0
 11626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11627 ;;      Params:         2       0       0       0       0       0
 11628 ;;      Locals:         0       0       0       0       0       0
 11629 ;;      Temps:          0       0       0       0       0       0
 11630 ;;      Totals:         2       0       0       0       0       0
 11631 ;;Total ram usage:        2 bytes
 11632 ;; Hardware stack levels used: 1
 11633 ;; This function calls:
 11634 ;;		Nothing
 11635 ;; This function is called by:
 11636 ;;		_CCP4_Initialize
 11637 ;;		_CCP4_CaptureISR
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641  0B24                     _CCP4_DefaultCallBack:	
 11642                           ;psect for function _CCP4_DefaultCallBack
 11643                           
 11644  0B24                     i1l638:	
 11645                           ;incstack = 0
 11646                           ; Regs used in _CCP4_DefaultCallBack: []
 11647                           
 11648  0B24  0008               	return
 11649  0B25                     __end_of_CCP4_DefaultCallBack:
 11650  007E                     btemp	set	126	;btemp
 11651  007E                     int$flags	set	126
 11652  007E                     wtemp0	set	126
 11653                           
 11654                           	psect	idloc
 11655                           
 11656                           ;Config register IDLOC0 @ 0x8000
 11657                           ;	unspecified, using default values
 11658  8000                     	org	32768
 11659  8000  3FFF               	dw	16383
 11660                           
 11661                           ;Config register IDLOC1 @ 0x8001
 11662                           ;	unspecified, using default values
 11663  8001                     	org	32769
 11664  8001  3FFF               	dw	16383
 11665                           
 11666                           ;Config register IDLOC2 @ 0x8002
 11667                           ;	unspecified, using default values
 11668  8002                     	org	32770
 11669  8002  3FFF               	dw	16383
 11670                           
 11671                           ;Config register IDLOC3 @ 0x8003
 11672                           ;	unspecified, using default values
 11673  8003                     	org	32771
 11674  8003  3FFF               	dw	16383
 11675                           
 11676                           	psect	config
 11677                           
 11678                           ;Config register CONFIG1 @ 0x8007
 11679                           ;	Oscillator Selection
 11680                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11681                           ;	Watchdog Timer Enable
 11682                           ;	WDTE = OFF, WDT disabled
 11683                           ;	Power-up Timer Enable
 11684                           ;	PWRTE = OFF, PWRT disabled
 11685                           ;	MCLR Pin Function Select
 11686                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11687                           ;	Flash Program Memory Code Protection
 11688                           ;	CP = OFF, Program memory code protection is disabled
 11689                           ;	Data Memory Code Protection
 11690                           ;	CPD = OFF, Data memory code protection is disabled
 11691                           ;	Brown-out Reset Enable
 11692                           ;	BOREN = ON, Brown-out Reset enabled
 11693                           ;	Clock Out Enable
 11694                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11695                           ;	Internal/External Switchover
 11696                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11697                           ;	Fail-Safe Clock Monitor Enable
 11698                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11699  8007                     	org	32775
 11700  8007  3FE4               	dw	16356
 11701                           
 11702                           ;Config register CONFIG2 @ 0x8008
 11703                           ;	Flash Memory Self-Write Protection
 11704                           ;	WRT = OFF, Write protection off
 11705                           ;	PLL Enable
 11706                           ;	PLLEN = OFF, 4x PLL disabled
 11707                           ;	Stack Overflow/Underflow Reset Enable
 11708                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11709                           ;	Brown-out Reset Voltage Selection
 11710                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11711                           ;	Low-Voltage Programming Enable
 11712                           ;	LVP = ON, Low-voltage programming enabled
 11713  8008                     	org	32776
 11714  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    16
    Data        1
    BSS         42
    Persistent  51
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      75
    BANK1            80     19      44
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    memset@s	PTR unsigned char  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    txSpi@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controleMovimento(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controleMovimento(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    SPI1_ExchangeBlock@block	PTR void  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(BANK1[2]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(BANK1[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), Absolute function(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS1(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_chegadaS1(), chegadaS1(), Absolute function(), IOCBF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR4_CallBack->_controleMovimento
    _controleMovimento->_PWM3_LoadDutyValue
    _sendInfo->___flmul
    _bin2bcd->_memset
    ___wmul->_ADC_GetConversion
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _IOCBF3_ISR->_chegadaS2
    _chegadaS2->i1_matrixUpdate
    _IOCBF0_ISR->i1_chegadaS1
    i1_chegadaS1->i1_matrixUpdate
    _CMP2_ISR->_chegadaS4
    _chegadaS4->i1_matrixUpdate
    _CMP1_ISR->_chegadaS3
    _chegadaS3->i1_matrixUpdate
    i1_matrixUpdate->i1_txSpi
    i1_txSpi->i1_SPI1_ExchangeBlock
    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->_sendInfo
    _sendInfo->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_initMatrix
    _organizaTrajeto->_TMR4_WriteTimer
    _initMatrix->_txSpi
    _chegadaS1->_matrixUpdate
    _matrixUpdate->_txSpi
    _txSpi->_SPI1_ExchangeBlock
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4986
                                             17 BANK1      2     2      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR4_SetInterruptHandler
                          _chegadaS1
                         _initMatrix
                       _isValidFloor
                    _organizaTrajeto
 ---------------------------------------------------------------------------------
 (1) _organizaTrajeto                                      4     4      0     192
                                              1 BANK1      4     4      0
                    _TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR4_WriteTimer                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _isValidFloor                                         2     2      0      99
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initMatrix                                           9     9      0    1277
                                              8 BANK1      9     9      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (1) _chegadaS1                                            1     1      0    1122
                                             12 BANK1      1     1      0
                    _TMR4_StartTimer
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (2) _matrixUpdate                                         6     6      0    1122
                                              8 BANK1      4     4      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (2) _txSpi                                                3     1      2     696
                                              5 BANK1      3     1      2
                 _SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeBlock                                   5     3      2     256
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1328
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     121
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0     124
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0    9180
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0     500
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0     500
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                  _controleMovimento *
 ---------------------------------------------------------------------------------
 (8) _controleMovimento                                    2     2      0     500
                                              4 COMMON     2     2      0
                 _PWM3_LoadDutyValue
                     _TMR4_StopTimer
 ---------------------------------------------------------------------------------
 (9) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0    5050
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0    5050
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _sendInfo *
 ---------------------------------------------------------------------------------
 (8) _sendInfo                                             6     6      0    5050
                                             32 BANK0      6     6      0
                  _ADC_GetConversion
                       _EUSART_Write
                            ___flmul
                            ___fltol
                             ___wmul
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (9) _bin2bcd                                             11     9      2    1562
                                             10 COMMON     2     0      2
                                              0 BANK0      9     9      0
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                             10     6      4     904
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     244
                                              4 COMMON     6     2      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fltol                                             11     7      4     381
                                             21 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___flmul                                             26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (10) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0    1504
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_ISR                                           0     0      0    1013
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                          _chegadaS2 *
 ---------------------------------------------------------------------------------
 (8) _chegadaS2                                            1     1      0    1013
                                             12 COMMON     1     1      0
                 _PWM3_LoadDutyValue
                  i1_TMR4_StartTimer
                  i1_TMR4_WriteTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_ISR                                           0     0      0     491
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                        i1_chegadaS1 *
 ---------------------------------------------------------------------------------
 (8) i1_chegadaS1                                          1     1      0     491
                                             12 COMMON     1     1      0
                  i1_TMR4_StartTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CMP2_ISR                                             0     0      0    1013
                          _chegadaS4
 ---------------------------------------------------------------------------------
 (7) _chegadaS4                                            1     1      0    1013
                                             12 COMMON     1     1      0
                 _PWM3_LoadDutyValue
                  i1_TMR4_StartTimer
                  i1_TMR4_WriteTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (6) _CMP1_ISR                                             0     0      0    1013
                          _chegadaS3
 ---------------------------------------------------------------------------------
 (7) _chegadaS3                                            1     1      0    1013
                                             12 COMMON     1     1      0
                 _PWM3_LoadDutyValue
                  i1_TMR4_StartTimer
                  i1_TMR4_WriteTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (9) i1_matrixUpdate                                       6     6      0     491
                                              8 COMMON     4     4      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (10) i1_txSpi                                             3     1      2     212
                                              5 COMMON     3     1      2
               i1_SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (11) i1_SPI1_ExchangeBlock                                5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) i1_TMR4_WriteTimer                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) i1_TMR4_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PWM3_LoadDutyValue                                   4     2      2     500
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _CCP4_CaptureISR                                      3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (7) _CCP4_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _SPI1_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _chegadaS1
     _TMR4_StartTimer
     _matrixUpdate
       _txSpi
         _SPI1_ExchangeBlock
   _initMatrix
     _txSpi
   _isValidFloor
   _organizaTrajeto
     _TMR4_WriteTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
   _CMP1_ISR
     _chegadaS3
       _PWM3_LoadDutyValue
       i1_TMR4_StartTimer
       i1_TMR4_WriteTimer
       i1_matrixUpdate
         i1_txSpi
           i1_SPI1_ExchangeBlock
   _CMP2_ISR
     _chegadaS4
       _PWM3_LoadDutyValue
       i1_TMR4_StartTimer
       i1_TMR4_WriteTimer
       i1_matrixUpdate
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       i1_chegadaS1 *
         i1_TMR4_StartTimer
         i1_matrixUpdate
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _chegadaS2 *
         _PWM3_LoadDutyValue
         i1_TMR4_StartTimer
         i1_TMR4_WriteTimer
         i1_matrixUpdate
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _sendInfo *
         _ADC_GetConversion
         _EUSART_Write
         ___flmul
           __Umul8_16
         ___fltol
           ___flmul (ARG)
         ___wmul
           _ADC_GetConversion (ARG)
         _bin2bcd
           _memset
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _controleMovimento *
         _PWM3_LoadDutyValue
         _TMR4_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      85       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     26      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     13      2C       8       55.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      85      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jul 19 16:45:57 2023

                              _CCP4_Initialize 0C6B               ??_IOCBF3_DefaultInterruptHandler 0070  
              ?_IOCBF3_DefaultInterruptHandler 0070                             _SPI1_ExchangeBlock 0E05  
                                           l11 0BA7                        __end_of_organizaTrajeto 0F55  
                            ??_CMP1_Initialize 00A0                                             l75 0BE6  
                                           _t1 0054                                             _t2 0052  
                       __end_of_FVR_Initialize 0B35                            ___wmul@multiplicand 0076  
                              _timer0ReloadVal 006A                            __Umul8_16@word_mpld 0076  
                                          l142 0BDA                                            l209 0B95  
                                          l402 0B60                                            l314 0B34  
                                          l219 0B9E                                            l405 0B54  
                                          l430 0FA8                                            l263 0E5F  
                                          l360 0DD9                                            l266 0B73  
                                          l426 0BCE                                            l444 0E12  
                                          l381 0C49                                            l197 07FC  
                                          l269 0B38                                            l286 0B7B  
                                          l446 0E17                                            l519 0C1C  
                                          l368 0B42                                            l448 0E31  
                                          l377 0C3B                                            l641 0C7C  
                                          l618 0BB0                                            l804 0CA2  
                                          l558 0B83                                            l670 0C8F  
                                          l822 0C59                                            l647 0B8C  
                                          l399 0B5A                                            l831 0D91  
                                          l673 0B30                                            l841 0FFF  
                                          l818 0C4C                                            l682 0B66  
                                          l906 0459                                            l596 0D16  
                                          l865 0F01                                            l793 0F41  
                                          l698 0BB9                                            l799 0F54  
                                          _PR2 001B                                            _PR4 0416  
                          ?_SPI1_ExchangeBlock 00A0                                _timer1ReloadVal 0064  
                                 _pulsoEncoder 005B                                            _mov 00C1  
               ?_EUSART_SetFramingErrorHandler 00A0                                _TMR2_Initialize 0B7C  
               CCP4_SetCallBack@customCallBack 00A0                                            wreg 0009  
                             _CCP4_SetCallBack 0B84                                   ___flmul@aexp 002D  
                                 ___flmul@bexp 002E                        SPI1_ExchangeBlock@block 00A3  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                        __end_of_CCP4_CaptureISR 0CB9  
                                 ?_EUSART_Read 0070                                    i1_chegadaS1 0E60  
                                 ___fltol@exp1 003F                                           l4101 0E25  
                                         l4111 0B4F                                           l4103 0B8D  
                                         l4201 0B71                                           l4105 0B96  
                                         l4113 0BA8                                           l4121 0C57  
                                         l4115 0B84                                           l4131 0BDB  
                                         l4107 0B55                                           l4123 0B9F  
                                         l4211 0C81                                           l4203 0B35  
                                         l4141 0BD1                                           l4133 0BDD  
                                         l4109 0B5B                                           l4205 0B31  
                                         l4125 0BA2                                           l4221 0B7F  
                                         l4117 0BB1                                           l4213 0C83  
                                         l4143 0BD6                                           l4135 0BE2  
                                         l4151 07D2                                           l4127 0BA3  
                                         l4231 0D06                                           l4223 0B80  
                                         l4215 0C85                                           l4207 0C7D  
                                         l4119 0C4E                                           l4241 0B77  
                                         l4145 0BD8                                           l4137 0BE4  
                                         l4161 07DD                                           l4153 07D4  
                                         l4129 0BA4                                           l4233 0D0C  
                                         l4225 0B81                                           l4217 0C8C  
                                         l4209 0C80                                           l4401 0FBB  
                                         l4243 0B78                                           l4251 0C70  
                                         l4139 0BCF                                           l4171 07E9  
                                         l4163 07E4                                           l4155 07D7  
                                         l4147 07CC                                           l4235 0D0D  
                                         l4227 0CFE                                           l4219 0B7C  
                                         l4341 0C48                                           l4333 0C3B  
                                         l4253 0C78                                           l4245 0C6B  
                                         l4173 07EA                                           l4165 07E6  
                                         l4157 07D9                                           l4149 07CF  
                                         l4237 0D0E                                           l4229 0D03  
                                         l4261 0C13                                           l4093 0E07  
                                         l4421 0FEC                                           l4413 0FBD  
                                         l4501 03E0                                           l4335 0C40  
                                         l4351 0F7F                                           l4239 0B74  
                                         l4255 0C7A                                           l4247 0C6E  
                                         l4271 0DBE                                           l4175 07EB  
                                         l4167 07E7                                           l4159 07DC  
                                         l4191 0BC8                                           l4263 0C15  
                                         l4327 0E32                                           l4095 0E0C  
                                         l4431 0EB5                                           l4415 0FDC  
                                         l4407 0FBC                                           l4511 03F8  
                                         l4503 03E3                                           l4337 0C41  
                                         l4329 0B3E                                           l4353 0F90  
                                         l4345 0F57                                           l4249 0C6F  
                                         l4273 0DBF                                           l4177 07F3  
                                         l4169 07E8                                           l4193 0BCA  
                                         l4265 0C16                                           l4257 0C0F  
                                         l4281 0B2E                                           l4097 0E18  
                                         l4441 0ECC                                           l4433 0EBA  
                                         l4425 0FF4                                           l4417 0FE1  
                                         l4361 0F1E                                           l4521 0415  
                                         l4513 03FE                                           l4505 03E4  
                                         l4339 0C46                                           l4355 0FA6  
                                         l4347 0F5C                                           l4275 0DC7  
                                         l4179 07FB                                           l4195 0BCC  
                                         l4187 0BC4                                           l4267 0C1A  
                                         l4259 0C11                                           l4099 0E21  
                                         l4291 0D75                                           l4451 0EF3  
                                         l4443 0ED8                                           l4435 0EBE  
                                         l4427 0FF9                                           l4419 0FE7  
                                         l4283 0B63                                           l4371 0F47  
                                         l4363 0F24                                           l4611 044B  
                                         l4531 042C                                           l4523 0418  
                                         l4515 0401                                           l4507 03E8  
                                         l4349 0F7E                                           l4277 0DCF  
                                         l4269 0DB5                                           l4197 0B6D  
                                         l4189 0BC7                                           l4293 0D79  
                                         l4285 0D70                                           l4453 0EF6  
                                         l4445 0EDE                                           l4437 0EC2  
                                         l4429 0EB3                                           l4381 0C99  
                                         l4373 0F4B                                           l4365 0F2A  
                                         l4533 0432                                           l4525 0421  
                                         l4517 040A                                           l4509 03F0  
                                         l4279 0DD7                                           l4199 0B70  
                                         l4295 0D81                                           l4455 0EFC  
                                         l4447 0EEA                                           l4439 0EC7  
                                         l4383 0C9F                                           l4375 0F50  
                                         l4367 0F31                                           l4359 0F02  
                                         l4535 043A                                           l4527 0427  
                                         l4519 0410                                           l4543 0443  
                                         l4297 0D89                                           l4449 0EF0  
                                         l4385 0CA1                                           l4377 0C92  
                                         l4369 0F37                                           l4537 043D  
                                         l4299 0D8C                                           l4395 0FAC  
                                         l4379 0C93                                           l4397 0FB1  
                                         l4389 0FA9                                           l4399 0FB5  
                                         l4495 03B7                                           l4497 03DA  
                                         l4499 03DC                                  ?_isValidFloor 0070  
                                         u3000 0D91                                           u3001 0D90  
                                         u3100 0F37                                           u3101 0F36  
                                         _LATA 010C                                           u3030 0C40  
                                         u3110 0F47                                           _LATB 010D  
                                         u3031 0C3F                                           u3111 0F46  
                                         u3040 0C46                                           u3120 0C99  
                                         u3041 0C45                                           u3121 0C98  
                                         u3050 0F5C                                           u3130 0C9F  
                                         u3051 0F5B                                           u3131 0C9E  
                                         u3140 0FBB                                           u3141 0FBA  
                                         u3150 0FE7                                           u3310 03F0  
                                         u3151 0FE6                                           u3311 03EF  
                                         u3160 0FFF                                           u3080 0F1E  
                                         u3064 0F08                                           u3320 03FE  
                                         u3161 0FFE                                           u3081 0F1D  
                                         u3065 0F07                                           u3321 03FD  
                                         u3170 0ECC                                           u3090 0F2A  
                                         u3074 0F13                                           u3330 040A  
                                         u3171 0ECB                                           u3091 0F29  
                                         u3075 0F12                                           u3331 0409  
                                         u3340 0421                                           u3341 0420  
                                         u3350 0432                                           u3351 0431  
                            ??_CMP2_Initialize 00A0                                           i1l14 0CE5  
                                         u2970 0E17                                           u2971 0E16  
                                         u2980 0E31                                           u2981 0E30  
                                         i1l81 0B4E                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _flag 005A                                           _main 03B7  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                           ??_SPI1_ExchangeBlock 00A2  
                    i1SPI1_ExchangeBlock@block 0073                                           start 0056  
                              __end_ofi1_txSpi 0C0F                               __end_of_CMP1_ISR 0B49  
                             __end_of_CMP2_ISR 0B4F                     ??_TMR4_SetInterruptHandler 00A2  
                           i1matrixUpdate@data 0079                        __end_of_TMR0_Initialize 0D17  
               ??_TMR0_DefaultInterruptHandler 0070                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0B74  
                            isValidFloor@floor 00A1                                  ___fltol@sign1 003E  
                                        ?_main 0070                         ??_CCP4_DefaultCallBack 0072  
                              __end_of___flmul 02C8               SPI1_Open@spi1UniqueConfiguration 00A3  
                              __end_of___fltol 06FF                                          _T1CON 0018  
                                        _T2CON 001C                                __end_of_bin2bcd 0592  
                                        _T4CON 0417                                          i1l202 0C6A  
                                        i1l212 0B25                                          i1l301 0D28  
                                        i1l206 0C2B                                          i1l222 0B26  
                                        i1l216 0C3A                                          i1l304 0D30  
                                        i1l148 0B48                                          i1l500 0054  
                                        i1l611 0CFD                                          i1l444 0DE6  
                                        i1l621 0B27                                          i1l701 0002  
                                        i1l446 0DEB                                          i1l615 0BF3  
                                        i1l448 0E04                                          i1l384 0BBB  
                                        i1l387 0BC3                                          i1l644 0CB8  
                                        i1l638 0B24                                          i1l822 0C0E  
                                        i1l831 0D6F                                          i1l807 03B6  
                                        i1l673 0B2A                                          i1l682 0B3D  
                                        i1l818 0C02                                          i1l930 0538  
                                        i1l931 054A                                          i1l691 0CCE  
                                        i1l932 055D                                          i1l676 0B2D  
                                        i1l860 07CB                                          i1l933 0591  
                                        i1l855 07C5                                          i1l695 0C00  
                                        i1l865 0EAE                                          i1l929 0525  
                                        i1l890 05B7                                          i1l876 0771  
                                        i1l887 0689                                          i1l879 0633  
                                        i1l898 060D                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                     _RXaccepted 005C  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 0C7D                      ?_TMR0_SetInterruptHandler 00A0  
                             __end_of_TMR0_ISR 0CFE                                          _dTemp 00BD  
                             __end_of_TMR4_ISR 0CCF                                          _oTemp 00BE  
                      __end_of_PIN_MANAGER_IOC 0C6B                                 _WDT_Initialize 0B35  
                               ??_isValidFloor 00A0                                          _txSpi 0C4A  
                                        _state 00C2                        __end_of_PWM3_Initialize 0BA8  
                      __end_of_TMR1_Initialize 0C1D                                          pclath 000A  
                                        status 0003                        __end_of_CCP4_Initialize 0C7D  
                                        wtemp0 007E                                  txSpi@dataSize 00A5  
                             ??i1_matrixUpdate 0078                                __initialization 0058  
                              i1matrixUpdate@i 007B                                   __end_of_main 045C  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 0B84  
                             ?_organizaTrajeto 0070                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00B1                            _chegadaS1$intlevel0 0EB3  
                      _IOCBF0_InterruptHandler 0068                         __end_of_WDT_Initialize 0B39  
                             ?_CCP4_CaptureISR 0070              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00C7                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         ?_txSpi 00A5  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0B43                                         _BORCON 0116  
                                       _T1GCON 0019                                         i1l3001 06C9  
                                       i1l3011 06EE                                         i1l3003 06D9  
                                       i1l1083 0D3B                                         i1l1501 0DB4  
                                       i1l3101 020C                                         i1l3021 007F  
                                       i1l3013 06F3                                         i1l1085 0D4F  
                                       i1l3103 0213                                         i1l3111 0223  
                                       i1l3031 0094                                         i1l3023 0080  
                                       i1l3015 0071                                         u200_20 029A  
                                       u200_21 0299                                         i1l3113 0227  
                                       i1l3105 0217                                         i1l3041 00AA  
                                       i1l3033 009C                                         i1l3025 0085  
                                       i1l3017 0077                                         i1l3009 06E0  
                                       i1l3131 0271                                         i1l3123 0248  
                                       i1l3115 0228                                         i1l3107 0218  
                                       i1l3051 00C6                                         i1l3043 00AF  
                                       i1l3035 00A1                                         i1l3027 008A  
                                       i1l3019 007B                                         i1l3211 0335  
                                       i1l1284 06E9                                         i1l3301 0728  
                                       i1l3141 02A3                                         u200_25 0296  
                                       i1l3125 024D                                         i1l3133 0275  
                                       i1l3117 022C                                         i1l3109 021F  
                                       i1l3061 00E6                                         i1l3053 00CB  
                                       i1l3045 00B4                                         i1l3037 00A5  
                                       i1l3029 0092                                         i1l1277 06FE  
                                       i1l3221 035D                                         i1l3213 0345  
                                       i1l3311 0740                                         i1l3303 072C  
                                       i1l3151 02BF                                         i1l3143 02A5  
                                       i1l3135 0282                                         i1l3127 0255  
                                       i1l3119 0240                                         i1l3071 0141  
                                       i1l3063 00F3                                         i1l3055 00D0  
                                       i1l3047 00BC                                         i1l3039 00A9  
                                       i1l1287 06FE                                         i1l1543 04FF  
                                       i1l3231 03A7                                         i1l3223 0386  
                                       i1l3215 034B                                         u201_20 02B6  
                                       i1l1480 02C7                                         i1l3401 05F6  
                                       i1l3321 0760                                         i1l3313 0745  
                                       i1l3305 072E                                         u201_21 02B5  
                                       i1l3145 02B2                                         i1l3137 028C  
                                       i1l3129 0259                                         i1l3081 0176  
                                       i1l3073 014E                                         i1l3065 010D  
                                       i1l3049 00BE                                         i1l3233 03AB  
                                       i1l3225 0393                                         i1l3217 0352  
                                       i1l3209 02C8                                         i1l3241 0772  
                                       i1l3155 0B28                                         i1l3171 0D68  
                                       i1l3403 05FB                                         i1l3331 0E62  
                                       i1l3323 0764                                         i1l3315 074A  
                                       i1l3307 072F                                         i1l3147 02B6  
                                       i1l3139 029A                                         i1l3091 01B9  
                                       i1l3083 017D                                         i1l3075 0155  
                                       i1l3067 011A                                         i1l3059 00D9  
                                       i1l3235 03B2                                         i1l3227 0399  
                                       i1l3219 0359                                         i1l3243 0773  
                                       i1l1492 02BB                                         i1l3157 0B3A  
                                       i1l3173 0D6A                                         i1l3165 0D54  
                                       i1l3421 0613                                         i1l3405 05FE  
                                       i1l3341 0E79                                         i1l3333 0E67  
                                       i1l3325 0769                                         i1l3317 0756  
                                       i1l3309 0734                                         i1l3501 0C38  
                                       i1l3149 02B7                                         i1l3093 01CD  
                                       i1l3085 0191                                         i1l3077 0162  
                                       i1l3069 0134                                         i1l3229 03A0  
                                       i1l3261 0799                                         i1l3253 0789  
                                       i1l3245 0779                                         i1l1486 0243  
                                       i1l3167 0D58                                         i1l3159 0D50  
                                       i1l3431 0630                                         i1l3423 0618  
                                       i1l3407 0604                                         i1l3351 0EA0  
                                       i1l3343 0E85                                         i1l3335 0E6B  
                                       i1l3327 076E                                         i1l3319 075B  
                                       i1l3095 01E2                                         i1l3087 0198  
                                       i1l3079 0169                                         i1l3263 07A0  
                                       i1l3255 078E                                         i1l3247 077C  
                                       i1l3271 07BD                                         u202_20 0D6F  
                                       u210_20 0734                                         u202_21 0D6E  
                                       i1l3169 0D60                                         i1l3441 065C  
                                       i1l3433 0644                                         i1l3425 061D  
                                       i1l3409 0609                                         i1l3353 0EA3  
                                       i1l3345 0E8B                                         i1l3337 0E6F  
                                       i1l3329 0E60                                         u210_21 0733  
                                       i1l4321 0C5F                                         i1l3097 01F9  
                                       i1l3089 01AC                                         i1l3273 07C3  
                                       i1l3265 07A2                                         i1l3257 0795  
                                       i1l3249 0783                                         i1l3451 067A  
                                       i1l3443 0668                                         i1l3435 0645  
                                       i1l3427 0622                                         i1l3419 060E  
                                       i1l3355 0EA9                                         i1l3347 0E97  
                                       i1l3339 0E74                                         i1l3291 0711  
                                       i1l4323 0C62                                         i1l1499 0DA4  
                                       i1l3099 0200                                         i1l3275 07C8  
                                       i1l3701 0CA5                                         i1l3453 0680  
                                       i1l3445 066D                                         i1l3437 064A  
                                       i1l3429 0626                                         i1l3381 05A6  
                                       i1l3373 0592                                         i1l3349 0E9D  
                                       i1l4181 0C1D                                         i1l3293 0715  
                                       i1l3285 06FF                                         i1l4325 0C67  
                                       i1l2901 0DB0                                         i1l3277 07C9  
                                       i1l3269 07A6                                         i1l3605 0BF4  
                                       i1l3703 0CAE                                         i1l3455 0685  
                                       i1l3447 0672                                         i1l3439 0656  
                                       i1l3391 05CE                                         i1l3383 05AA  
                                       i1l3375 0597                                         i1l4183 0C24  
                                       i1l3295 071F                                         i1l3287 0707  
                                       i1l4319 0C5A                                         i1l2911 0D18  
                                       i1l3607 0BFB                                         i1l3711 0CCB  
                                       u211_20 0760                                         i1l2841 0DF4  
                                       i1l2905 0C04                                         i1l3449 0677  
                                       i1l3393 05DA                                         i1l3385 05B4  
                                       i1l3377 059C                                         i1l4185 0C29  
                                       u211_21 075F                                         i1l3297 0722  
                                       i1l3289 070C                                         i1l2913 0D22  
                                       i1l3705 0CB9                                         i1l2843 0DF8  
                                       i1l2835 0DDB                                         i1l2907 0C0C  
                                       i1l3395 05E0                                         i1l3387 05C8  
                                       i1l3379 05A1                                         i1l3643 0B49  
                                       i1l3299 0724                                         i1l2915 0D23  
                                       i1l2923 0BBB                                         i1l2851 0468  
                                       i1l3707 0CBB                                         i1l2909 0CCF  
                                       i1l2837 0DE0                                         i1l3397 05EC  
                                       i1l3389 05C9                                         i1l3645 0B4B  
                                       i1l2917 0D26                                         i1l2925 0BC0  
                                       i1l2861 048B                                         i1l2853 046F  
                                       i1l2845 045D                                         i1l2941 050B  
                                       u203_25 02F7                                         i1l4613 07AF  
                                       i1l3709 0CC8                                         i1l4461 000E  
                                       i1l2839 0DEC                                         i1l3647 0B43  
                                       i1l3399 05F1                                         i1l2919 0D2C  
                                       i1l2871 04B3                                         i1l2863 0493  
                                       i1l2855 047A                                         i1l2847 0461  
                                       i1l2951 051C                                         i1l2943 0512  
                                       i1l4471 0020                                         i1l4463 0011  
                                       u140_20 0DEB                                         u220_20 0618  
                                       u212_20 0E79                                         u204_20 0783  
                                       u140_21 0DEA                                         u220_21 0617  
                                       i1l3649 0B45                                         u212_21 0E78  
                                       i1l3497 0C2C                                         i1l2881 04E5  
                                       i1l2873 04C6                                         i1l2865 049E  
                                       i1l2961 057E                                         i1l2953 052E  
                                       i1l2937 0B2B                                         u204_21 0782  
                                       i1l4481 0037                                         i1l4473 0025  
                                       i1l4465 0015                                         i1l4457 0006  
                                       i1l3499 0C33                                         i1l2891 0D93  
                                       i1l2971 0D40                                         i1l2883 04EA  
                                       i1l2867 04A9                                         i1l2859 0484  
                                       i1l2955 0541                                         i1l2939 0500  
                                       i1l3691 0CE6                                         i1l4491 004C  
                                       i1l4483 003A                                         i1l4475 002A  
                                       i1l4467 0019                                         i1l4459 000A  
                                       i1l2893 0D95                                         i1l2981 0696  
                                       i1l2973 0D45                                         i1l2965 0D31  
                                       i1l2885 04F1                                         i1l2877 04D0  
                                       i1l2957 0553                                         i1l2949 0513  
                                       i1l3597 0BE7                                         i1l3693 0CE7  
                                       i1l4493 0051                                         i1l4485 003F  
                                       i1l4477 002D                                         i1l4469 001C  
                                       i1l2895 0D9C                                         i1l2991 06BB  
                                       i1l2975 0D4B                                         i1l2967 0D33  
                                       i1l2887 04F5                                         i1l2879 04E1  
                                       i1l2959 0578                                         i1l3599 0BEE  
                                       i1l3695 0CF7                                         i1l4487 0044  
                                       i1l4479 0032                                         u141_20 0E04  
                                       u221_20 061D                                         u213_20 059C  
                                       u301_20 0C5F                                         u205_20 07C3  
                                       u141_21 0E03                                         u221_21 061C  
                                       u213_21 059B                                         u301_21 0C5E  
                                       i1l2897 0DA0                                         i1l2993 06BD  
                                       i1l2985 069F                                         i1l2969 0D37  
                                       i1l2889 04F9                                         i1l3697 0CFA  
                                       u205_21 07C2                                         i1l4489 0047  
                                       i1l3699 0CA3                                         i1l2899 0DAB  
                                       i1l2995 06C1                                         i1l2987 06B2  
                                       i1l2979 068A                                         i1l2989 06B3  
                                       u222_20 0622                                         u214_20 05A1  
                                       u206_20 0707                                         u302_20 0C67  
                                       u142_20 0467                                         u230_20 0BFB  
                                       u222_21 0621                                         u214_21 05A0  
                                       u206_21 0706                                         u302_21 0C66  
                                       u142_21 0466                                         u230_21 0BFA  
                                       u150_25 0CDE                                         u223_20 0626  
                                       u215_20 05A6                                         u207_20 070C  
                                       u151_20 0D2C                                         u143_20 0483  
                                       u223_21 0625                                         u215_21 05A5  
                                       u207_21 070B                                         u151_21 0D2B  
                                       u143_21 0482                                         u224_20 064A  
                                       u216_20 05AA                                         u208_20 0711  
                                       u152_20 0BC0                                         u144_20 04B2  
                                       u160_20 057E                                         u320_20 0015  
                                       u224_21 0649                                         u216_21 05A9  
                                       u208_21 0710                                         u152_21 0BBF  
                                       u144_21 04B1                                         u160_21 057D  
                                       u320_21 0014                                    initMatrix@i 00AE  
                                  initMatrix@j 00B0                                         u225_20 0680  
                                       u217_20 05CE                                         u209_20 0715  
                                       u145_20 04CF                                         u161_20 058B  
                                       u321_20 0019                                    initMatrix@k 00AD  
                                       u225_21 067F                                         u217_21 05CD  
                                       u209_21 0714                                         u145_21 04CE  
                                       u321_21 0018                                         u161_25 0587  
                      TMR4_WriteTimer@timerVal 00A0                                         u226_20 0685  
                                       u218_20 0604                                         u162_20 0D37  
                                       u146_20 04FF                                         u330_20 0051  
                                       u322_20 0020                                         u226_21 0684  
                                       u218_21 0603                                         u162_21 0D36  
                                       u146_21 04FE                                         u330_21 0050  
                                       u322_21 001F                                         u170_25 06CA  
                                       u219_20 0609                                         u147_20 0DA0  
                                       u171_20 06D8                                         u155_20 051C  
                                       u323_20 0025                                         _FVRCON 0117  
                                       u219_21 0608                                         u147_21 0D9F  
                                       u171_21 06D7                                         u155_21 051B  
                                       u323_21 0024                                         u163_25 0D3C  
                                       u228_20 0C33                                         u180_20 00AF  
                                       u172_20 06DF                                         u156_20 052E  
                                       u324_20 002A                                         u228_21 0C32  
                                       u180_21 00AE                                         u172_21 06DE  
                                       u156_21 052D                                         u324_21 0029  
                                       u148_25 0DA5                                         u164_25 0D41  
                                       u149_20 0DB0                                         u181_20 00B4  
                                       u165_20 0D4B                                         u157_20 0541  
                                       u229_20 0BEE                                         u237_20 0CF7  
                                       u325_20 0032                                         u149_21 0DAF  
                                       u181_21 00B3                                         u165_21 0D4A  
                                       u157_21 0540                                         u229_21 0BED  
                                       u237_21 0CF6                                         u325_21 0031  
                                       u173_25 06E1                                         u190_20 0217  
                                       u182_20 00CB                                         u174_20 06EE  
                                       u166_20 0696                                         u158_20 0553  
                                       u238_20 0CC8                                         u326_20 0037  
                                       u318_20 000A                                         u190_21 0216  
                                       u182_21 00CA                                         u174_21 06ED  
                                       u166_21 0695                                         u158_21 0552  
                                       u238_21 0CC7                                         u326_21 0036  
                                       u318_21 0009                                         u183_20 00D0  
                                       u175_20 06F3                                         u167_20 06AC  
                                       u159_20 056A                                         u327_20 003F  
                                       u319_20 000E                                         u183_21 00CF  
                                       u175_21 06F2                                         u327_21 003E  
                                       u319_21 000D                                         u191_25 0219  
                                       u167_25 06A8                                         u159_25 0566  
                                       u192_20 0227                                         u176_20 007F  
                                       u168_20 06C1                                         u328_20 0044  
                                       u192_21 0226                                         u176_21 007E  
                                       u168_21 06C0                                         u328_21 0043  
                                       u184_25 014F                                         u193_20 022C  
                                       u177_20 0085                                         u169_20 06C8  
                                       u329_20 004C                                         u193_21 022B  
                                       u177_21 0084                                         u169_21 06C7  
                                       u329_21 004B                                         u185_25 017E  
                                       u194_20 0240                                         u186_20 01D8  
                                       u178_20 008A                                         u194_21 023F  
                                       u178_21 0089                                         u186_25 01D4  
                                       u195_20 0247                                         u187_20 01EF  
                                       u179_20 00A9                                         u195_21 0246  
                                       u179_21 00A8                                         u187_25 01EB  
                                       u196_20 024D                                         u196_21 024C  
                                       u188_25 01FA                                         u197_20 0259  
                                       u197_21 0258                                         u189_25 020D  
                                       u198_20 0267                                         u198_25 0263  
                                       u199_20 0282                                         u199_21 0281  
                                       u199_25 027E                                         _OSCCON 0099  
                                       u299_20 0C24                                      ??i1_txSpi 0077  
                                       u299_21 0C23                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                              _TMR4_StartTimer 0B2E                              __end_of_SPI1_Open 0FA9  
                                 _CCPTMRS0bits 029E                      i1TMR4_WriteTimer@timerVal 0070  
                                       ___wmul 0D31                                      ??___flmul 0079  
                                    ??___fltol 0039                                      ??_bin2bcd 0020  
                                       _altura 0058                                  ?_matrixUpdate 0070  
                             ?_TMR0_Initialize 0070                                         _memset 045C  
                      __end_of_TMR4_Initialize 0C90                                         _waitRX 005D  
                                       _origem 00C4                                  _CCP4_CallBack 0060  
                             __end_of_sendInfo 03B7           __end_of_TMR4_DefaultInterruptHandler 0003  
                 _TMR4_DefaultInterruptHandler 0002                                _TMR4_WriteTimer 0B61  
                              ?_WDT_Initialize 0070                       i1SPI1_ExchangeBlock@data 0074  
                     ADC_GetConversion@channel 0073                                      ?_CMP1_ISR 0070  
                        __end_of_TMR0_CallBack 0BF4                                      ?_CMP2_ISR 0070  
     TMR4_SetInterruptHandler@InterruptHandler 00A0       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCBF3_SetInterruptHandler@InterruptHandler 00A0     IOCBF0_SetInterruptHandler@InterruptHandler 00A0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCBF0_ISR 007D  
                                 ??_IOCBF3_ISR 007D                               ?_PWM3_Initialize 0070  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0E32  
                      __end_of__initialization 006D                               ?_CCP4_Initialize 0070  
                              _CMP1_Initialize 0BCF                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0035                       __end_of_CCP4_SetCallBack 0B8D  
                                  i1txSpi@data 0077                                 __pcstackCOMMON 0070  
                        __end_of_TMR4_CallBack 0C01                                   __pidataBANK1 0003  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                              i1txSpi@dataSize 0075                                 ??_matrixUpdate 00A8  
                                    ?_TMR4_ISR 0070                           __end_of_isValidFloor 0CA3  
                            ??_SPI1_Initialize 00A0         __end_of_IOCBF0_DefaultInterruptHandler 0B26  
               _IOCBF0_DefaultInterruptHandler 0B25                                  __end_of_txSpi 0C5A  
                             ?_TMR2_Initialize 0070                             __end_of_IOCBF0_ISR 0C2C  
                           __end_of_IOCBF3_ISR 0C3B                                _CMP2_Initialize 0BDB  
                           _spi1_configuration 0809                                   bin2bcd@dataU 0025  
                               _OPTION_REGbits 0095                          TMR0_ISR@CountCallBack 004C  
                ?_TMR4_DefaultInterruptHandler 0070                ??_EUSART_SetOverrunErrorHandler 00A2  
       __end_of_IOCBF3_DefaultInterruptHandler 0B27                 _IOCBF3_DefaultInterruptHandler 0B26  
                                   ??_CMP1_ISR 007D                                     ??_CMP2_ISR 007D  
                                 ?i1_chegadaS1 0070                        __end_of_TMR4_StartTimer 0B31  
                    __end_of_SYSTEM_Initialize 0E60                                        ??_txSpi 00A7  
                                   __pbssBANK0 0046                                     __pbssBANK1 00B3  
                         __end_of_EUSART_Write 0BC4                                     _andarAtual 0059  
                        _TMR4_InterruptHandler 005E                              __end_of__Umul8_16 0DB5  
                             ??_FVR_Initialize 00A0                                    sendInfo@bcd 0044  
                                   __pmaintext 03B7               __end_of_TMR0_SetInterruptHandler 0BB1  
                                      ?___wmul 0074                                     ??_TMR0_ISR 007E  
                                   ??_TMR4_ISR 0076                                     __pintentry 0004  
                      __end_of_TMR4_WriteTimer 0B67                                        _CM1CON0 0111  
                                      _CM1CON1 0112                                        _CM2CON0 0113  
                                      _CM2CON1 0114                                        _CCP3CON 0313  
                                      _CCP4CON 031A                                        _BAUDCON 019F  
                                      ?_memset 0070                               ?_TMR4_Initialize 0070  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                   _destinoSub 00BC                              _isValidFloor$1563 00A0  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                        __end_of_CMP1_Initialize 0BDB  
                     ??_EUSART_SetErrorHandler 00A2                              __end_of_chegadaS1 0F02  
                            __end_of_chegadaS2 0772                              __end_of_chegadaS3 068A  
                            __end_of_chegadaS4 060E                                        i1_txSpi 0C01  
                                    ?_sendInfo 0070                           _ADC_InterruptHandler 004E  
                                   _initMatrix 0FA9                        __end_of_CMP2_Initialize 0BE7  
                                      ___flmul 0071                                        ___fltol 068A  
                                      _bin2bcd 0500                                        __ptext1 0F02  
                                      __ptext2 0B61                                        __ptext3 0C90  
                                      __ptext4 0FA9                                        __ptext5 0EAF  
                                      __ptext6 0D70                                        __ptext7 0C4A  
                                      __ptext8 0E05                                        __ptext9 0B2E  
                                      _destino 00C3                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 0B6D                                      _T2CONbits 001C  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00A2                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 00A0                   organizaTrajeto@mascaraOrigem 00A3  
                                    _IOCBNbits 0395                                      _IOCBPbits 0394  
                                      _rxValue 00C0                                        _subindo 00CB  
                                      clrloop0 0B68                               ?_TMR4_StartTimer 0070  
                organizaTrajeto@mascaraDestino 00A4                           end_of_initialization 006D  
                         __end_of_matrixUpdate 0D92                                 initMatrix@data 00A9  
               ??_TMR4_DefaultInterruptHandler 0070          __end_of_EUSART_SetOverrunErrorHandler 0B61  
                _EUSART_SetOverrunErrorHandler 0B5B                                        memset@c 0070  
                                      memset@k 0076                                        memset@n 0072  
                                      memset@s 0079                                   _contComandos 00BF  
                            _EUSART_Initialize 0DB5                                     ??_sendInfo 0040  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0B3E                                      _SPI1_Open 0F55  
                             ?_TMR4_WriteTimer 0070                            ??_EUSART_Initialize 00A2  
                             ??_WDT_Initialize 00A0                       _TMR0_SetInterruptHandler 0BA8  
                          ?_EUSART_is_rx_ready 0070                                      _TRISBbits 008D  
                 ??_IOCBF0_SetInterruptHandler 00A2                   ??_IOCBF3_SetInterruptHandler 00A2  
                             ?_CMP1_Initialize 0070                                   _isValidFloor 0C90  
                       SPI1_ExchangeBlock@data 00A4                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 0DDA                           ??_EUSART_is_rx_ready 00A0  
                              _SPI1_Initialize 0BC4                                      _TXSTAbits 019E  
            CCP4_DefaultCallBack@capturedValue 0070                     __end_of_PWM3_LoadDutyValue 0CE6  
                            ?_CCP4_SetCallBack 00A0                                    ?_initMatrix 0070  
                             ?_CMP2_Initialize 0070                                     ?_SPI1_Open 0070  
                           ??_CCP4_SetCallBack 00A2                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 0D50                                   _EUSART_Write 0BBA  
                               _ADC_Initialize 0B74                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_memset 0500                            start_initialization 0058  
                 __end_ofi1_SPI1_ExchangeBlock 0E05                                _velocidadeMotor 0046  
                                ??_EUSART_Read 00A0                                      _MatrixLed 00B3  
                                bin2bcd@binVal 007A                 ?_EUSART_SetOverrunErrorHandler 00A0  
                               _TMR4_StopTimer 0B2B                     _EUSART_FramingErrorHandler 00C9  
                                     ??___wmul 0078                         _EUSART_SetErrorHandler 0B4F  
                       __end_of_ADC_Initialize 0B7C                                      __Umul8_16 0D92  
                                  __pdataBANK1 00CB                                       ??_memset 0074  
                                   memset@dest 0078                          CCP4_CaptureISR@module 0073  
                        TMR4_ISR@CountCallBack 004A                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                      __end_of_SPI1_Initialize 0BCF                                       ?i1_txSpi 0075  
                            ??_organizaTrajeto 00A1                                      _chegadaS1 0EAF  
                                    _chegadaS2 06FF                                      _chegadaS3 060E  
                                    _chegadaS4 0592                            __end_of_EUSART_Read 0C4A  
                        _TMR0_InterruptHandler 0062                                      __pnvBANK0 005E  
                                    __pnvBANK1 00C5                         __end_of_TMR4_StopTimer 0B2E  
                      _IOCBF3_InterruptHandler 0066                         _PIN_MANAGER_Initialize 07CC  
             __end_of_TMR4_SetInterruptHandler 0BBA                              ??_CCP4_CaptureISR 0072  
                                     ?___flmul 0020                                       ?___fltol 0035  
                                     ?_bin2bcd 007A                                     ?__Umul8_16 0070  
                                  ??_SPI1_Open 00A0                                ?_ADC_Initialize 0070  
                            _controleMovimento 0772                                   _matrixUpdate 0D70  
                 ??_INTERRUPT_InterruptManager 007E                             ?_controleMovimento 0070  
           __end_of_IOCBF0_SetInterruptHandler 0B96                     _IOCBF0_SetInterruptHandler 0B8D  
           __end_of_IOCBF3_SetInterruptHandler 0B9F                     _IOCBF3_SetInterruptHandler 0B96  
                          ??_controleMovimento 0074                                       _CMP1_ISR 0B43  
                                     _CMP2_ISR 0B49                                  _TMR0_CallBack 0BE7  
                   __end_of_SPI1_ExchangeBlock 0E32                              ??_TMR0_Initialize 00A2  
                                  _destinoDesc 00BB                                 ___wmul@product 0078  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00A0  
                                     _LATBbits 010D                                     ?_chegadaS1 0070  
                                   ?_chegadaS2 0070                                     ?_chegadaS3 0070  
                                   ?_chegadaS4 0070                            __end_of_matrix_conf 0809  
                                    clear_ram0 0B67                   __end_of_CCP4_DefaultCallBack 0B25  
                                     _PIE2bits 0092                                       _PIE3bits 0093  
                            _eusartRxLastError 0057                                ?_TMR4_StopTimer 0070  
                   ??_TMR0_SetInterruptHandler 00A2                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00A2                                       _PIR2bits 0012  
                                     _PIR3bits 0013                      __end_of_controleMovimento 07CC  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
                         i1_SPI1_ExchangeBlock 0DDA                                       _TMR0_ISR 0CE6  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 0CB9  
                                _TMR4_CallBack 0BF4                                       _SSP1STAT 0214  
                            ??_PIN_MANAGER_IOC 007D                              ??_PWM3_Initialize 00A0  
                            ??_TMR1_Initialize 00A0                                     _ADCON0bits 009D  
                               i1_matrixUpdate 0D50                              ___wmul@multiplier 0074  
                            ??_CCP4_Initialize 00A2                                 ?_TMR0_CallBack 0070  
                             initMatrix@i_1602 00AF                                    _EUSART_Read 0C3B  
                             ?_SPI1_Initialize 0070                              i1_TMR4_StartTimer 0B28  
                            ??_TMR2_Initialize 00A0                             ?i1_TMR4_StartTimer 0070  
                            _ADC_GetConversion 0D17                                   ??_initMatrix 00A8  
                        ?i1_SPI1_ExchangeBlock 0070                                 ?_TMR4_CallBack 0070  
                          ??i1_TMR4_StartTimer 0070                        ??_OSCILLATOR_Initialize 00A0  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 00C5  
                           ?_ADC_GetConversion 0070                         __end_ofi1_matrixUpdate 0D70  
                            i1_TMR4_WriteTimer 0B39                             sendInfo@velocidade 0042  
                     _TMR4_SetInterruptHandler 0BB1                             _PWM3_LoadDutyValue 0CCF  
                          ??_ADC_GetConversion 0072                             ?i1_TMR4_WriteTimer 0070  
                                     bin2bcd@i 0024                                  ??i1_chegadaS1 007C  
                                     __ptext10 0E32                                       __ptext11 0B35  
                                     __ptext20 07CC                                       __ptext12 0C7D  
                                     __ptext21 0B96                                       __ptext13 0BB1  
                                   _T1GCONbits 0019                                       __ptext30 0BCF  
                                     __ptext22 0B8D                                       __ptext14 0B7C  
                                     __ptext31 0C6B                                       __ptext23 0B6D  
                                     __ptext15 0C0F                                       __ptext40 0002  
                                     __ptext32 0B84                                       __ptext24 0B31  
                                     __ptext16 0CFE                                       __ptext41 0772  
                                     __ptext33 0B74                                       __ptext25 0DB5  
                                     __ptext17 0BA8                                       __ptext50 068A  
                                     __ptext42 0B2B                                       __ptext34 0F55  
                                     __ptext26 0B5B                                       __ptext18 0BC4  
                                     __ptext51 0071                                       __ptext43 0CE6  
                                     __ptext35 0B3E                                       __ptext27 0B55  
                                     __ptext19 0B9F                                       __ptext60 0B25  
                                     __ptext52 0D92                                       __ptext44 0BE7  
                                     __ptext36 0C3B                                       __ptext28 0B4F  
                                     __ptext61 0E60                                       __ptext53 0BBA  
                                     __ptext45 0B27                                       __ptext29 0BDB  
                                     __ptext70 0B28                                       __ptext62 0B49  
                                     __ptext54 0D17                                       __ptext46 02C8  
                                     __ptext38 0CB9                                       __ptext71 0CCF  
                                     __ptext63 0592                                       __ptext55 0C5A  
                                     __ptext47 0500                                       __ptext39 0BF4  
                                     __ptext72 0CA3                                       __ptext64 0B43  
                                     __ptext56 0C2C                                       __ptext48 045C  
                                     __ptext73 0B24                                       __ptext65 060E  
                                     __ptext57 0B26                                       __ptext49 0D31  
                                     __ptext66 0D50                                       __ptext58 06FF  
                          ?_PWM3_LoadDutyValue 0070                                       __ptext67 0C01  
                                     __ptext59 0C1D                                       __ptext68 0DDA  
                                     __ptext69 0B39                                   _SSP1CON1bits 0215  
                    __end_ofi1_TMR4_StartTimer 0B2B                          controleMovimento@cont 0056  
                          ??i1_TMR4_WriteTimer 0070                                    _matrix_conf 07FD  
                           __end_of_initMatrix 1000                                     _IOCBF0_ISR 0C1D  
                                   _IOCBF3_ISR 0C2C                              ??_TMR4_Initialize 00A2  
                                  ??_chegadaS1 00AC                                    ??_chegadaS2 007C  
                                  ??_chegadaS3 007C                                    ??_chegadaS4 007C  
         __end_of_TMR0_DefaultInterruptHandler 0B28                   _TMR0_DefaultInterruptHandler 0B27  
                    __end_of_ADC_GetConversion 0D31                                       _sendInfo 02C8  
                      ?_EUSART_SetErrorHandler 00A0                  i1SPI1_ExchangeBlock@blockSize 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                           ??_PWM3_LoadDutyValue 0072  
                                     int$flags 007E                      __end_ofi1_TMR4_WriteTimer 0B3E  
           __end_of_INTERRUPT_InterruptManager 0056                     _INTERRUPT_InterruptManager 0004  
                              ?i1_matrixUpdate 0070          __end_of_EUSART_SetFramingErrorHandler 0B5B  
                _EUSART_SetFramingErrorHandler 0B55                                      txSpi@data 00A7  
                  SPI1_ExchangeBlock@blockSize 00A0                               matrixUpdate@data 00A9  
                                   _INTCONbits 000B                                _organizaTrajeto 0F02  
                         _CCP4_DefaultCallBack 0B24                                ??_TMR0_CallBack 007E  
                                   _FVRCONbits 0117                                       intlevel1 0000  
                              _CCP4_CaptureISR 0CA3                        ?_PIN_MANAGER_Initialize 0070  
                          __end_ofi1_chegadaS1 0EAF                 __end_of_EUSART_SetErrorHandler 0B55  
                             ??_ADC_Initialize 00A0                                ??_TMR4_CallBack 0076  
                       ??i1_SPI1_ExchangeBlock 0072                  ?_TMR0_DefaultInterruptHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                    PWM3_LoadDutyValue@dutyValue 0070  
                            ??_TMR4_StartTimer 00A0                                  __pstringtext1 07FD  
                                __pstringtext2 0809                                 _FVR_Initialize 0B31  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                                  _temperatura 0050                          ?_CCP4_DefaultCallBack 0070  
                              _TMR0_Initialize 0CFE                    ?_IOCBF0_SetInterruptHandler 00A0  
                  ?_IOCBF3_SetInterruptHandler 00A0                                    ?_IOCBF0_ISR 0070  
                           EUSART_Write@txData 0070                                    ?_IOCBF3_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 07FD                               ??_TMR4_StopTimer 0070  
                            ??_TMR4_WriteTimer 00A0               ??_IOCBF0_DefaultInterruptHandler 0070  
              ?_IOCBF0_DefaultInterruptHandler 0070                                  matrixUpdate@i 00AB  
                              _PIN_MANAGER_IOC 0C5A                           __Umul8_16@multiplier 0078  
                              _TMR1_Initialize 0C0F                                _PWM3_Initialize 0B9F  
                   __end_of_spi1_configuration 080D                              __Umul8_16@product 0074  
