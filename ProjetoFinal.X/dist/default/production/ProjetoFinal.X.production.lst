

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 17 22:03:58 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    81                           	dabs	1,0x7E,2
    82     0000                     
    83                           ; Version 2.40
    84                           ; Generated 17/11/2021 GMT
    85                           ; 
    86                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC16F1827 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0095                     	;# 
   154     0096                     	;# 
   155     0097                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009A                     	;# 
   159     009B                     	;# 
   160     009B                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     0111                     	;# 
   167     0112                     	;# 
   168     0113                     	;# 
   169     0114                     	;# 
   170     0115                     	;# 
   171     0116                     	;# 
   172     0117                     	;# 
   173     0118                     	;# 
   174     0119                     	;# 
   175     011A                     	;# 
   176     011B                     	;# 
   177     011D                     	;# 
   178     011E                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181     0191                     	;# 
   182     0191                     	;# 
   183     0192                     	;# 
   184     0193                     	;# 
   185     0193                     	;# 
   186     0193                     	;# 
   187     0194                     	;# 
   188     0195                     	;# 
   189     0196                     	;# 
   190     0199                     	;# 
   191     019A                     	;# 
   192     019B                     	;# 
   193     019B                     	;# 
   194     019B                     	;# 
   195     019B                     	;# 
   196     019C                     	;# 
   197     019C                     	;# 
   198     019D                     	;# 
   199     019E                     	;# 
   200     019F                     	;# 
   201     020C                     	;# 
   202     020D                     	;# 
   203     0211                     	;# 
   204     0211                     	;# 
   205     0212                     	;# 
   206     0212                     	;# 
   207     0213                     	;# 
   208     0213                     	;# 
   209     0214                     	;# 
   210     0214                     	;# 
   211     0215                     	;# 
   212     0215                     	;# 
   213     0215                     	;# 
   214     0216                     	;# 
   215     0216                     	;# 
   216     0217                     	;# 
   217     0217                     	;# 
   218     0219                     	;# 
   219     021A                     	;# 
   220     021B                     	;# 
   221     021C                     	;# 
   222     021D                     	;# 
   223     021E                     	;# 
   224     021F                     	;# 
   225     0291                     	;# 
   226     0291                     	;# 
   227     0292                     	;# 
   228     0293                     	;# 
   229     0294                     	;# 
   230     0295                     	;# 
   231     0295                     	;# 
   232     0296                     	;# 
   233     0298                     	;# 
   234     0298                     	;# 
   235     0299                     	;# 
   236     029A                     	;# 
   237     029B                     	;# 
   238     029C                     	;# 
   239     029C                     	;# 
   240     029D                     	;# 
   241     029E                     	;# 
   242     029E                     	;# 
   243     0311                     	;# 
   244     0311                     	;# 
   245     0312                     	;# 
   246     0313                     	;# 
   247     0318                     	;# 
   248     0318                     	;# 
   249     0319                     	;# 
   250     031A                     	;# 
   251     0394                     	;# 
   252     0395                     	;# 
   253     0396                     	;# 
   254     039A                     	;# 
   255     039C                     	;# 
   256     039D                     	;# 
   257     039E                     	;# 
   258     039F                     	;# 
   259     0415                     	;# 
   260     0416                     	;# 
   261     0417                     	;# 
   262     041C                     	;# 
   263     041D                     	;# 
   264     041E                     	;# 
   265     0FE4                     	;# 
   266     0FE5                     	;# 
   267     0FE6                     	;# 
   268     0FE7                     	;# 
   269     0FE8                     	;# 
   270     0FE9                     	;# 
   271     0FEA                     	;# 
   272     0FEB                     	;# 
   273     0FED                     	;# 
   274     0FEE                     	;# 
   275     0FEF                     	;# 
   276     0000                     	;# 
   277     0001                     	;# 
   278     0002                     	;# 
   279     0003                     	;# 
   280     0004                     	;# 
   281     0005                     	;# 
   282     0006                     	;# 
   283     0007                     	;# 
   284     0008                     	;# 
   285     0009                     	;# 
   286     000A                     	;# 
   287     000B                     	;# 
   288     000C                     	;# 
   289     000D                     	;# 
   290     0011                     	;# 
   291     0012                     	;# 
   292     0013                     	;# 
   293     0014                     	;# 
   294     0015                     	;# 
   295     0016                     	;# 
   296     0016                     	;# 
   297     0017                     	;# 
   298     0018                     	;# 
   299     0019                     	;# 
   300     001A                     	;# 
   301     001B                     	;# 
   302     001C                     	;# 
   303     001E                     	;# 
   304     001F                     	;# 
   305     008C                     	;# 
   306     008D                     	;# 
   307     0091                     	;# 
   308     0092                     	;# 
   309     0093                     	;# 
   310     0094                     	;# 
   311     0095                     	;# 
   312     0096                     	;# 
   313     0097                     	;# 
   314     0098                     	;# 
   315     0099                     	;# 
   316     009A                     	;# 
   317     009B                     	;# 
   318     009B                     	;# 
   319     009C                     	;# 
   320     009D                     	;# 
   321     009E                     	;# 
   322     010C                     	;# 
   323     010D                     	;# 
   324     0111                     	;# 
   325     0112                     	;# 
   326     0113                     	;# 
   327     0114                     	;# 
   328     0115                     	;# 
   329     0116                     	;# 
   330     0117                     	;# 
   331     0118                     	;# 
   332     0119                     	;# 
   333     011A                     	;# 
   334     011B                     	;# 
   335     011D                     	;# 
   336     011E                     	;# 
   337     018C                     	;# 
   338     018D                     	;# 
   339     0191                     	;# 
   340     0191                     	;# 
   341     0192                     	;# 
   342     0193                     	;# 
   343     0193                     	;# 
   344     0193                     	;# 
   345     0194                     	;# 
   346     0195                     	;# 
   347     0196                     	;# 
   348     0199                     	;# 
   349     019A                     	;# 
   350     019B                     	;# 
   351     019B                     	;# 
   352     019B                     	;# 
   353     019B                     	;# 
   354     019C                     	;# 
   355     019C                     	;# 
   356     019D                     	;# 
   357     019E                     	;# 
   358     019F                     	;# 
   359     020C                     	;# 
   360     020D                     	;# 
   361     0211                     	;# 
   362     0211                     	;# 
   363     0212                     	;# 
   364     0212                     	;# 
   365     0213                     	;# 
   366     0213                     	;# 
   367     0214                     	;# 
   368     0214                     	;# 
   369     0215                     	;# 
   370     0215                     	;# 
   371     0215                     	;# 
   372     0216                     	;# 
   373     0216                     	;# 
   374     0217                     	;# 
   375     0217                     	;# 
   376     0219                     	;# 
   377     021A                     	;# 
   378     021B                     	;# 
   379     021C                     	;# 
   380     021D                     	;# 
   381     021E                     	;# 
   382     021F                     	;# 
   383     0291                     	;# 
   384     0291                     	;# 
   385     0292                     	;# 
   386     0293                     	;# 
   387     0294                     	;# 
   388     0295                     	;# 
   389     0295                     	;# 
   390     0296                     	;# 
   391     0298                     	;# 
   392     0298                     	;# 
   393     0299                     	;# 
   394     029A                     	;# 
   395     029B                     	;# 
   396     029C                     	;# 
   397     029C                     	;# 
   398     029D                     	;# 
   399     029E                     	;# 
   400     029E                     	;# 
   401     0311                     	;# 
   402     0311                     	;# 
   403     0312                     	;# 
   404     0313                     	;# 
   405     0318                     	;# 
   406     0318                     	;# 
   407     0319                     	;# 
   408     031A                     	;# 
   409     0394                     	;# 
   410     0395                     	;# 
   411     0396                     	;# 
   412     039A                     	;# 
   413     039C                     	;# 
   414     039D                     	;# 
   415     039E                     	;# 
   416     039F                     	;# 
   417     0415                     	;# 
   418     0416                     	;# 
   419     0417                     	;# 
   420     041C                     	;# 
   421     041D                     	;# 
   422     041E                     	;# 
   423     0FE4                     	;# 
   424     0FE5                     	;# 
   425     0FE6                     	;# 
   426     0FE7                     	;# 
   427     0FE8                     	;# 
   428     0FE9                     	;# 
   429     0FEA                     	;# 
   430     0FEB                     	;# 
   431     0FED                     	;# 
   432     0FEE                     	;# 
   433     0FEF                     	;# 
   434     0000                     	;# 
   435     0001                     	;# 
   436     0002                     	;# 
   437     0003                     	;# 
   438     0004                     	;# 
   439     0005                     	;# 
   440     0006                     	;# 
   441     0007                     	;# 
   442     0008                     	;# 
   443     0009                     	;# 
   444     000A                     	;# 
   445     000B                     	;# 
   446     000C                     	;# 
   447     000D                     	;# 
   448     0011                     	;# 
   449     0012                     	;# 
   450     0013                     	;# 
   451     0014                     	;# 
   452     0015                     	;# 
   453     0016                     	;# 
   454     0016                     	;# 
   455     0017                     	;# 
   456     0018                     	;# 
   457     0019                     	;# 
   458     001A                     	;# 
   459     001B                     	;# 
   460     001C                     	;# 
   461     001E                     	;# 
   462     001F                     	;# 
   463     008C                     	;# 
   464     008D                     	;# 
   465     0091                     	;# 
   466     0092                     	;# 
   467     0093                     	;# 
   468     0094                     	;# 
   469     0095                     	;# 
   470     0096                     	;# 
   471     0097                     	;# 
   472     0098                     	;# 
   473     0099                     	;# 
   474     009A                     	;# 
   475     009B                     	;# 
   476     009B                     	;# 
   477     009C                     	;# 
   478     009D                     	;# 
   479     009E                     	;# 
   480     010C                     	;# 
   481     010D                     	;# 
   482     0111                     	;# 
   483     0112                     	;# 
   484     0113                     	;# 
   485     0114                     	;# 
   486     0115                     	;# 
   487     0116                     	;# 
   488     0117                     	;# 
   489     0118                     	;# 
   490     0119                     	;# 
   491     011A                     	;# 
   492     011B                     	;# 
   493     011D                     	;# 
   494     011E                     	;# 
   495     018C                     	;# 
   496     018D                     	;# 
   497     0191                     	;# 
   498     0191                     	;# 
   499     0192                     	;# 
   500     0193                     	;# 
   501     0193                     	;# 
   502     0193                     	;# 
   503     0194                     	;# 
   504     0195                     	;# 
   505     0196                     	;# 
   506     0199                     	;# 
   507     019A                     	;# 
   508     019B                     	;# 
   509     019B                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019C                     	;# 
   513     019C                     	;# 
   514     019D                     	;# 
   515     019E                     	;# 
   516     019F                     	;# 
   517     020C                     	;# 
   518     020D                     	;# 
   519     0211                     	;# 
   520     0211                     	;# 
   521     0212                     	;# 
   522     0212                     	;# 
   523     0213                     	;# 
   524     0213                     	;# 
   525     0214                     	;# 
   526     0214                     	;# 
   527     0215                     	;# 
   528     0215                     	;# 
   529     0215                     	;# 
   530     0216                     	;# 
   531     0216                     	;# 
   532     0217                     	;# 
   533     0217                     	;# 
   534     0219                     	;# 
   535     021A                     	;# 
   536     021B                     	;# 
   537     021C                     	;# 
   538     021D                     	;# 
   539     021E                     	;# 
   540     021F                     	;# 
   541     0291                     	;# 
   542     0291                     	;# 
   543     0292                     	;# 
   544     0293                     	;# 
   545     0294                     	;# 
   546     0295                     	;# 
   547     0295                     	;# 
   548     0296                     	;# 
   549     0298                     	;# 
   550     0298                     	;# 
   551     0299                     	;# 
   552     029A                     	;# 
   553     029B                     	;# 
   554     029C                     	;# 
   555     029C                     	;# 
   556     029D                     	;# 
   557     029E                     	;# 
   558     029E                     	;# 
   559     0311                     	;# 
   560     0311                     	;# 
   561     0312                     	;# 
   562     0313                     	;# 
   563     0318                     	;# 
   564     0318                     	;# 
   565     0319                     	;# 
   566     031A                     	;# 
   567     0394                     	;# 
   568     0395                     	;# 
   569     0396                     	;# 
   570     039A                     	;# 
   571     039C                     	;# 
   572     039D                     	;# 
   573     039E                     	;# 
   574     039F                     	;# 
   575     0415                     	;# 
   576     0416                     	;# 
   577     0417                     	;# 
   578     041C                     	;# 
   579     041D                     	;# 
   580     041E                     	;# 
   581     0FE4                     	;# 
   582     0FE5                     	;# 
   583     0FE6                     	;# 
   584     0FE7                     	;# 
   585     0FE8                     	;# 
   586     0FE9                     	;# 
   587     0FEA                     	;# 
   588     0FEB                     	;# 
   589     0FED                     	;# 
   590     0FEE                     	;# 
   591     0FEF                     	;# 
   592     0000                     	;# 
   593     0001                     	;# 
   594     0002                     	;# 
   595     0003                     	;# 
   596     0004                     	;# 
   597     0005                     	;# 
   598     0006                     	;# 
   599     0007                     	;# 
   600     0008                     	;# 
   601     0009                     	;# 
   602     000A                     	;# 
   603     000B                     	;# 
   604     000C                     	;# 
   605     000D                     	;# 
   606     0011                     	;# 
   607     0012                     	;# 
   608     0013                     	;# 
   609     0014                     	;# 
   610     0015                     	;# 
   611     0016                     	;# 
   612     0016                     	;# 
   613     0017                     	;# 
   614     0018                     	;# 
   615     0019                     	;# 
   616     001A                     	;# 
   617     001B                     	;# 
   618     001C                     	;# 
   619     001E                     	;# 
   620     001F                     	;# 
   621     008C                     	;# 
   622     008D                     	;# 
   623     0091                     	;# 
   624     0092                     	;# 
   625     0093                     	;# 
   626     0094                     	;# 
   627     0095                     	;# 
   628     0096                     	;# 
   629     0097                     	;# 
   630     0098                     	;# 
   631     0099                     	;# 
   632     009A                     	;# 
   633     009B                     	;# 
   634     009B                     	;# 
   635     009C                     	;# 
   636     009D                     	;# 
   637     009E                     	;# 
   638     010C                     	;# 
   639     010D                     	;# 
   640     0111                     	;# 
   641     0112                     	;# 
   642     0113                     	;# 
   643     0114                     	;# 
   644     0115                     	;# 
   645     0116                     	;# 
   646     0117                     	;# 
   647     0118                     	;# 
   648     0119                     	;# 
   649     011A                     	;# 
   650     011B                     	;# 
   651     011D                     	;# 
   652     011E                     	;# 
   653     018C                     	;# 
   654     018D                     	;# 
   655     0191                     	;# 
   656     0191                     	;# 
   657     0192                     	;# 
   658     0193                     	;# 
   659     0193                     	;# 
   660     0193                     	;# 
   661     0194                     	;# 
   662     0195                     	;# 
   663     0196                     	;# 
   664     0199                     	;# 
   665     019A                     	;# 
   666     019B                     	;# 
   667     019B                     	;# 
   668     019B                     	;# 
   669     019B                     	;# 
   670     019C                     	;# 
   671     019C                     	;# 
   672     019D                     	;# 
   673     019E                     	;# 
   674     019F                     	;# 
   675     020C                     	;# 
   676     020D                     	;# 
   677     0211                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0212                     	;# 
   681     0213                     	;# 
   682     0213                     	;# 
   683     0214                     	;# 
   684     0214                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0216                     	;# 
   689     0216                     	;# 
   690     0217                     	;# 
   691     0217                     	;# 
   692     0219                     	;# 
   693     021A                     	;# 
   694     021B                     	;# 
   695     021C                     	;# 
   696     021D                     	;# 
   697     021E                     	;# 
   698     021F                     	;# 
   699     0291                     	;# 
   700     0291                     	;# 
   701     0292                     	;# 
   702     0293                     	;# 
   703     0294                     	;# 
   704     0295                     	;# 
   705     0295                     	;# 
   706     0296                     	;# 
   707     0298                     	;# 
   708     0298                     	;# 
   709     0299                     	;# 
   710     029A                     	;# 
   711     029B                     	;# 
   712     029C                     	;# 
   713     029C                     	;# 
   714     029D                     	;# 
   715     029E                     	;# 
   716     029E                     	;# 
   717     0311                     	;# 
   718     0311                     	;# 
   719     0312                     	;# 
   720     0313                     	;# 
   721     0318                     	;# 
   722     0318                     	;# 
   723     0319                     	;# 
   724     031A                     	;# 
   725     0394                     	;# 
   726     0395                     	;# 
   727     0396                     	;# 
   728     039A                     	;# 
   729     039C                     	;# 
   730     039D                     	;# 
   731     039E                     	;# 
   732     039F                     	;# 
   733     0415                     	;# 
   734     0416                     	;# 
   735     0417                     	;# 
   736     041C                     	;# 
   737     041D                     	;# 
   738     041E                     	;# 
   739     0FE4                     	;# 
   740     0FE5                     	;# 
   741     0FE6                     	;# 
   742     0FE7                     	;# 
   743     0FE8                     	;# 
   744     0FE9                     	;# 
   745     0FEA                     	;# 
   746     0FEB                     	;# 
   747     0FED                     	;# 
   748     0FEE                     	;# 
   749     0FEF                     	;# 
   750     0000                     	;# 
   751     0001                     	;# 
   752     0002                     	;# 
   753     0003                     	;# 
   754     0004                     	;# 
   755     0005                     	;# 
   756     0006                     	;# 
   757     0007                     	;# 
   758     0008                     	;# 
   759     0009                     	;# 
   760     000A                     	;# 
   761     000B                     	;# 
   762     000C                     	;# 
   763     000D                     	;# 
   764     0011                     	;# 
   765     0012                     	;# 
   766     0013                     	;# 
   767     0014                     	;# 
   768     0015                     	;# 
   769     0016                     	;# 
   770     0016                     	;# 
   771     0017                     	;# 
   772     0018                     	;# 
   773     0019                     	;# 
   774     001A                     	;# 
   775     001B                     	;# 
   776     001C                     	;# 
   777     001E                     	;# 
   778     001F                     	;# 
   779     008C                     	;# 
   780     008D                     	;# 
   781     0091                     	;# 
   782     0092                     	;# 
   783     0093                     	;# 
   784     0094                     	;# 
   785     0095                     	;# 
   786     0096                     	;# 
   787     0097                     	;# 
   788     0098                     	;# 
   789     0099                     	;# 
   790     009A                     	;# 
   791     009B                     	;# 
   792     009B                     	;# 
   793     009C                     	;# 
   794     009D                     	;# 
   795     009E                     	;# 
   796     010C                     	;# 
   797     010D                     	;# 
   798     0111                     	;# 
   799     0112                     	;# 
   800     0113                     	;# 
   801     0114                     	;# 
   802     0115                     	;# 
   803     0116                     	;# 
   804     0117                     	;# 
   805     0118                     	;# 
   806     0119                     	;# 
   807     011A                     	;# 
   808     011B                     	;# 
   809     011D                     	;# 
   810     011E                     	;# 
   811     018C                     	;# 
   812     018D                     	;# 
   813     0191                     	;# 
   814     0191                     	;# 
   815     0192                     	;# 
   816     0193                     	;# 
   817     0193                     	;# 
   818     0193                     	;# 
   819     0194                     	;# 
   820     0195                     	;# 
   821     0196                     	;# 
   822     0199                     	;# 
   823     019A                     	;# 
   824     019B                     	;# 
   825     019B                     	;# 
   826     019B                     	;# 
   827     019B                     	;# 
   828     019C                     	;# 
   829     019C                     	;# 
   830     019D                     	;# 
   831     019E                     	;# 
   832     019F                     	;# 
   833     020C                     	;# 
   834     020D                     	;# 
   835     0211                     	;# 
   836     0211                     	;# 
   837     0212                     	;# 
   838     0212                     	;# 
   839     0213                     	;# 
   840     0213                     	;# 
   841     0214                     	;# 
   842     0214                     	;# 
   843     0215                     	;# 
   844     0215                     	;# 
   845     0215                     	;# 
   846     0216                     	;# 
   847     0216                     	;# 
   848     0217                     	;# 
   849     0217                     	;# 
   850     0219                     	;# 
   851     021A                     	;# 
   852     021B                     	;# 
   853     021C                     	;# 
   854     021D                     	;# 
   855     021E                     	;# 
   856     021F                     	;# 
   857     0291                     	;# 
   858     0291                     	;# 
   859     0292                     	;# 
   860     0293                     	;# 
   861     0294                     	;# 
   862     0295                     	;# 
   863     0295                     	;# 
   864     0296                     	;# 
   865     0298                     	;# 
   866     0298                     	;# 
   867     0299                     	;# 
   868     029A                     	;# 
   869     029B                     	;# 
   870     029C                     	;# 
   871     029C                     	;# 
   872     029D                     	;# 
   873     029E                     	;# 
   874     029E                     	;# 
   875     0311                     	;# 
   876     0311                     	;# 
   877     0312                     	;# 
   878     0313                     	;# 
   879     0318                     	;# 
   880     0318                     	;# 
   881     0319                     	;# 
   882     031A                     	;# 
   883     0394                     	;# 
   884     0395                     	;# 
   885     0396                     	;# 
   886     039A                     	;# 
   887     039C                     	;# 
   888     039D                     	;# 
   889     039E                     	;# 
   890     039F                     	;# 
   891     0415                     	;# 
   892     0416                     	;# 
   893     0417                     	;# 
   894     041C                     	;# 
   895     041D                     	;# 
   896     041E                     	;# 
   897     0FE4                     	;# 
   898     0FE5                     	;# 
   899     0FE6                     	;# 
   900     0FE7                     	;# 
   901     0FE8                     	;# 
   902     0FE9                     	;# 
   903     0FEA                     	;# 
   904     0FEB                     	;# 
   905     0FED                     	;# 
   906     0FEE                     	;# 
   907     0FEF                     	;# 
   908     0000                     	;# 
   909     0001                     	;# 
   910     0002                     	;# 
   911     0003                     	;# 
   912     0004                     	;# 
   913     0005                     	;# 
   914     0006                     	;# 
   915     0007                     	;# 
   916     0008                     	;# 
   917     0009                     	;# 
   918     000A                     	;# 
   919     000B                     	;# 
   920     000C                     	;# 
   921     000D                     	;# 
   922     0011                     	;# 
   923     0012                     	;# 
   924     0013                     	;# 
   925     0014                     	;# 
   926     0015                     	;# 
   927     0016                     	;# 
   928     0016                     	;# 
   929     0017                     	;# 
   930     0018                     	;# 
   931     0019                     	;# 
   932     001A                     	;# 
   933     001B                     	;# 
   934     001C                     	;# 
   935     001E                     	;# 
   936     001F                     	;# 
   937     008C                     	;# 
   938     008D                     	;# 
   939     0091                     	;# 
   940     0092                     	;# 
   941     0093                     	;# 
   942     0094                     	;# 
   943     0095                     	;# 
   944     0096                     	;# 
   945     0097                     	;# 
   946     0098                     	;# 
   947     0099                     	;# 
   948     009A                     	;# 
   949     009B                     	;# 
   950     009B                     	;# 
   951     009C                     	;# 
   952     009D                     	;# 
   953     009E                     	;# 
   954     010C                     	;# 
   955     010D                     	;# 
   956     0111                     	;# 
   957     0112                     	;# 
   958     0113                     	;# 
   959     0114                     	;# 
   960     0115                     	;# 
   961     0116                     	;# 
   962     0117                     	;# 
   963     0118                     	;# 
   964     0119                     	;# 
   965     011A                     	;# 
   966     011B                     	;# 
   967     011D                     	;# 
   968     011E                     	;# 
   969     018C                     	;# 
   970     018D                     	;# 
   971     0191                     	;# 
   972     0191                     	;# 
   973     0192                     	;# 
   974     0193                     	;# 
   975     0193                     	;# 
   976     0193                     	;# 
   977     0194                     	;# 
   978     0195                     	;# 
   979     0196                     	;# 
   980     0199                     	;# 
   981     019A                     	;# 
   982     019B                     	;# 
   983     019B                     	;# 
   984     019B                     	;# 
   985     019B                     	;# 
   986     019C                     	;# 
   987     019C                     	;# 
   988     019D                     	;# 
   989     019E                     	;# 
   990     019F                     	;# 
   991     020C                     	;# 
   992     020D                     	;# 
   993     0211                     	;# 
   994     0211                     	;# 
   995     0212                     	;# 
   996     0212                     	;# 
   997     0213                     	;# 
   998     0213                     	;# 
   999     0214                     	;# 
  1000     0214                     	;# 
  1001     0215                     	;# 
  1002     0215                     	;# 
  1003     0215                     	;# 
  1004     0216                     	;# 
  1005     0216                     	;# 
  1006     0217                     	;# 
  1007     0217                     	;# 
  1008     0219                     	;# 
  1009     021A                     	;# 
  1010     021B                     	;# 
  1011     021C                     	;# 
  1012     021D                     	;# 
  1013     021E                     	;# 
  1014     021F                     	;# 
  1015     0291                     	;# 
  1016     0291                     	;# 
  1017     0292                     	;# 
  1018     0293                     	;# 
  1019     0294                     	;# 
  1020     0295                     	;# 
  1021     0295                     	;# 
  1022     0296                     	;# 
  1023     0298                     	;# 
  1024     0298                     	;# 
  1025     0299                     	;# 
  1026     029A                     	;# 
  1027     029B                     	;# 
  1028     029C                     	;# 
  1029     029C                     	;# 
  1030     029D                     	;# 
  1031     029E                     	;# 
  1032     029E                     	;# 
  1033     0311                     	;# 
  1034     0311                     	;# 
  1035     0312                     	;# 
  1036     0313                     	;# 
  1037     0318                     	;# 
  1038     0318                     	;# 
  1039     0319                     	;# 
  1040     031A                     	;# 
  1041     0394                     	;# 
  1042     0395                     	;# 
  1043     0396                     	;# 
  1044     039A                     	;# 
  1045     039C                     	;# 
  1046     039D                     	;# 
  1047     039E                     	;# 
  1048     039F                     	;# 
  1049     0415                     	;# 
  1050     0416                     	;# 
  1051     0417                     	;# 
  1052     041C                     	;# 
  1053     041D                     	;# 
  1054     041E                     	;# 
  1055     0FE4                     	;# 
  1056     0FE5                     	;# 
  1057     0FE6                     	;# 
  1058     0FE7                     	;# 
  1059     0FE8                     	;# 
  1060     0FE9                     	;# 
  1061     0FEA                     	;# 
  1062     0FEB                     	;# 
  1063     0FED                     	;# 
  1064     0FEE                     	;# 
  1065     0FEF                     	;# 
  1066     0000                     	;# 
  1067     0001                     	;# 
  1068     0002                     	;# 
  1069     0003                     	;# 
  1070     0004                     	;# 
  1071     0005                     	;# 
  1072     0006                     	;# 
  1073     0007                     	;# 
  1074     0008                     	;# 
  1075     0009                     	;# 
  1076     000A                     	;# 
  1077     000B                     	;# 
  1078     000C                     	;# 
  1079     000D                     	;# 
  1080     0011                     	;# 
  1081     0012                     	;# 
  1082     0013                     	;# 
  1083     0014                     	;# 
  1084     0015                     	;# 
  1085     0016                     	;# 
  1086     0016                     	;# 
  1087     0017                     	;# 
  1088     0018                     	;# 
  1089     0019                     	;# 
  1090     001A                     	;# 
  1091     001B                     	;# 
  1092     001C                     	;# 
  1093     001E                     	;# 
  1094     001F                     	;# 
  1095     008C                     	;# 
  1096     008D                     	;# 
  1097     0091                     	;# 
  1098     0092                     	;# 
  1099     0093                     	;# 
  1100     0094                     	;# 
  1101     0095                     	;# 
  1102     0096                     	;# 
  1103     0097                     	;# 
  1104     0098                     	;# 
  1105     0099                     	;# 
  1106     009A                     	;# 
  1107     009B                     	;# 
  1108     009B                     	;# 
  1109     009C                     	;# 
  1110     009D                     	;# 
  1111     009E                     	;# 
  1112     010C                     	;# 
  1113     010D                     	;# 
  1114     0111                     	;# 
  1115     0112                     	;# 
  1116     0113                     	;# 
  1117     0114                     	;# 
  1118     0115                     	;# 
  1119     0116                     	;# 
  1120     0117                     	;# 
  1121     0118                     	;# 
  1122     0119                     	;# 
  1123     011A                     	;# 
  1124     011B                     	;# 
  1125     011D                     	;# 
  1126     011E                     	;# 
  1127     018C                     	;# 
  1128     018D                     	;# 
  1129     0191                     	;# 
  1130     0191                     	;# 
  1131     0192                     	;# 
  1132     0193                     	;# 
  1133     0193                     	;# 
  1134     0193                     	;# 
  1135     0194                     	;# 
  1136     0195                     	;# 
  1137     0196                     	;# 
  1138     0199                     	;# 
  1139     019A                     	;# 
  1140     019B                     	;# 
  1141     019B                     	;# 
  1142     019B                     	;# 
  1143     019B                     	;# 
  1144     019C                     	;# 
  1145     019C                     	;# 
  1146     019D                     	;# 
  1147     019E                     	;# 
  1148     019F                     	;# 
  1149     020C                     	;# 
  1150     020D                     	;# 
  1151     0211                     	;# 
  1152     0211                     	;# 
  1153     0212                     	;# 
  1154     0212                     	;# 
  1155     0213                     	;# 
  1156     0213                     	;# 
  1157     0214                     	;# 
  1158     0214                     	;# 
  1159     0215                     	;# 
  1160     0215                     	;# 
  1161     0215                     	;# 
  1162     0216                     	;# 
  1163     0216                     	;# 
  1164     0217                     	;# 
  1165     0217                     	;# 
  1166     0219                     	;# 
  1167     021A                     	;# 
  1168     021B                     	;# 
  1169     021C                     	;# 
  1170     021D                     	;# 
  1171     021E                     	;# 
  1172     021F                     	;# 
  1173     0291                     	;# 
  1174     0291                     	;# 
  1175     0292                     	;# 
  1176     0293                     	;# 
  1177     0294                     	;# 
  1178     0295                     	;# 
  1179     0295                     	;# 
  1180     0296                     	;# 
  1181     0298                     	;# 
  1182     0298                     	;# 
  1183     0299                     	;# 
  1184     029A                     	;# 
  1185     029B                     	;# 
  1186     029C                     	;# 
  1187     029C                     	;# 
  1188     029D                     	;# 
  1189     029E                     	;# 
  1190     029E                     	;# 
  1191     0311                     	;# 
  1192     0311                     	;# 
  1193     0312                     	;# 
  1194     0313                     	;# 
  1195     0318                     	;# 
  1196     0318                     	;# 
  1197     0319                     	;# 
  1198     031A                     	;# 
  1199     0394                     	;# 
  1200     0395                     	;# 
  1201     0396                     	;# 
  1202     039A                     	;# 
  1203     039C                     	;# 
  1204     039D                     	;# 
  1205     039E                     	;# 
  1206     039F                     	;# 
  1207     0415                     	;# 
  1208     0416                     	;# 
  1209     0417                     	;# 
  1210     041C                     	;# 
  1211     041D                     	;# 
  1212     041E                     	;# 
  1213     0FE4                     	;# 
  1214     0FE5                     	;# 
  1215     0FE6                     	;# 
  1216     0FE7                     	;# 
  1217     0FE8                     	;# 
  1218     0FE9                     	;# 
  1219     0FEA                     	;# 
  1220     0FEB                     	;# 
  1221     0FED                     	;# 
  1222     0FEE                     	;# 
  1223     0FEF                     	;# 
  1224     0000                     	;# 
  1225     0001                     	;# 
  1226     0002                     	;# 
  1227     0003                     	;# 
  1228     0004                     	;# 
  1229     0005                     	;# 
  1230     0006                     	;# 
  1231     0007                     	;# 
  1232     0008                     	;# 
  1233     0009                     	;# 
  1234     000A                     	;# 
  1235     000B                     	;# 
  1236     000C                     	;# 
  1237     000D                     	;# 
  1238     0011                     	;# 
  1239     0012                     	;# 
  1240     0013                     	;# 
  1241     0014                     	;# 
  1242     0015                     	;# 
  1243     0016                     	;# 
  1244     0016                     	;# 
  1245     0017                     	;# 
  1246     0018                     	;# 
  1247     0019                     	;# 
  1248     001A                     	;# 
  1249     001B                     	;# 
  1250     001C                     	;# 
  1251     001E                     	;# 
  1252     001F                     	;# 
  1253     008C                     	;# 
  1254     008D                     	;# 
  1255     0091                     	;# 
  1256     0092                     	;# 
  1257     0093                     	;# 
  1258     0094                     	;# 
  1259     0095                     	;# 
  1260     0096                     	;# 
  1261     0097                     	;# 
  1262     0098                     	;# 
  1263     0099                     	;# 
  1264     009A                     	;# 
  1265     009B                     	;# 
  1266     009B                     	;# 
  1267     009C                     	;# 
  1268     009D                     	;# 
  1269     009E                     	;# 
  1270     010C                     	;# 
  1271     010D                     	;# 
  1272     0111                     	;# 
  1273     0112                     	;# 
  1274     0113                     	;# 
  1275     0114                     	;# 
  1276     0115                     	;# 
  1277     0116                     	;# 
  1278     0117                     	;# 
  1279     0118                     	;# 
  1280     0119                     	;# 
  1281     011A                     	;# 
  1282     011B                     	;# 
  1283     011D                     	;# 
  1284     011E                     	;# 
  1285     018C                     	;# 
  1286     018D                     	;# 
  1287     0191                     	;# 
  1288     0191                     	;# 
  1289     0192                     	;# 
  1290     0193                     	;# 
  1291     0193                     	;# 
  1292     0193                     	;# 
  1293     0194                     	;# 
  1294     0195                     	;# 
  1295     0196                     	;# 
  1296     0199                     	;# 
  1297     019A                     	;# 
  1298     019B                     	;# 
  1299     019B                     	;# 
  1300     019B                     	;# 
  1301     019B                     	;# 
  1302     019C                     	;# 
  1303     019C                     	;# 
  1304     019D                     	;# 
  1305     019E                     	;# 
  1306     019F                     	;# 
  1307     020C                     	;# 
  1308     020D                     	;# 
  1309     0211                     	;# 
  1310     0211                     	;# 
  1311     0212                     	;# 
  1312     0212                     	;# 
  1313     0213                     	;# 
  1314     0213                     	;# 
  1315     0214                     	;# 
  1316     0214                     	;# 
  1317     0215                     	;# 
  1318     0215                     	;# 
  1319     0215                     	;# 
  1320     0216                     	;# 
  1321     0216                     	;# 
  1322     0217                     	;# 
  1323     0217                     	;# 
  1324     0219                     	;# 
  1325     021A                     	;# 
  1326     021B                     	;# 
  1327     021C                     	;# 
  1328     021D                     	;# 
  1329     021E                     	;# 
  1330     021F                     	;# 
  1331     0291                     	;# 
  1332     0291                     	;# 
  1333     0292                     	;# 
  1334     0293                     	;# 
  1335     0294                     	;# 
  1336     0295                     	;# 
  1337     0295                     	;# 
  1338     0296                     	;# 
  1339     0298                     	;# 
  1340     0298                     	;# 
  1341     0299                     	;# 
  1342     029A                     	;# 
  1343     029B                     	;# 
  1344     029C                     	;# 
  1345     029C                     	;# 
  1346     029D                     	;# 
  1347     029E                     	;# 
  1348     029E                     	;# 
  1349     0311                     	;# 
  1350     0311                     	;# 
  1351     0312                     	;# 
  1352     0313                     	;# 
  1353     0318                     	;# 
  1354     0318                     	;# 
  1355     0319                     	;# 
  1356     031A                     	;# 
  1357     0394                     	;# 
  1358     0395                     	;# 
  1359     0396                     	;# 
  1360     039A                     	;# 
  1361     039C                     	;# 
  1362     039D                     	;# 
  1363     039E                     	;# 
  1364     039F                     	;# 
  1365     0415                     	;# 
  1366     0416                     	;# 
  1367     0417                     	;# 
  1368     041C                     	;# 
  1369     041D                     	;# 
  1370     041E                     	;# 
  1371     0FE4                     	;# 
  1372     0FE5                     	;# 
  1373     0FE6                     	;# 
  1374     0FE7                     	;# 
  1375     0FE8                     	;# 
  1376     0FE9                     	;# 
  1377     0FEA                     	;# 
  1378     0FEB                     	;# 
  1379     0FED                     	;# 
  1380     0FEE                     	;# 
  1381     0FEF                     	;# 
  1382     0000                     	;# 
  1383     0001                     	;# 
  1384     0002                     	;# 
  1385     0003                     	;# 
  1386     0004                     	;# 
  1387     0005                     	;# 
  1388     0006                     	;# 
  1389     0007                     	;# 
  1390     0008                     	;# 
  1391     0009                     	;# 
  1392     000A                     	;# 
  1393     000B                     	;# 
  1394     000C                     	;# 
  1395     000D                     	;# 
  1396     0011                     	;# 
  1397     0012                     	;# 
  1398     0013                     	;# 
  1399     0014                     	;# 
  1400     0015                     	;# 
  1401     0016                     	;# 
  1402     0016                     	;# 
  1403     0017                     	;# 
  1404     0018                     	;# 
  1405     0019                     	;# 
  1406     001A                     	;# 
  1407     001B                     	;# 
  1408     001C                     	;# 
  1409     001E                     	;# 
  1410     001F                     	;# 
  1411     008C                     	;# 
  1412     008D                     	;# 
  1413     0091                     	;# 
  1414     0092                     	;# 
  1415     0093                     	;# 
  1416     0094                     	;# 
  1417     0095                     	;# 
  1418     0096                     	;# 
  1419     0097                     	;# 
  1420     0098                     	;# 
  1421     0099                     	;# 
  1422     009A                     	;# 
  1423     009B                     	;# 
  1424     009B                     	;# 
  1425     009C                     	;# 
  1426     009D                     	;# 
  1427     009E                     	;# 
  1428     010C                     	;# 
  1429     010D                     	;# 
  1430     0111                     	;# 
  1431     0112                     	;# 
  1432     0113                     	;# 
  1433     0114                     	;# 
  1434     0115                     	;# 
  1435     0116                     	;# 
  1436     0117                     	;# 
  1437     0118                     	;# 
  1438     0119                     	;# 
  1439     011A                     	;# 
  1440     011B                     	;# 
  1441     011D                     	;# 
  1442     011E                     	;# 
  1443     018C                     	;# 
  1444     018D                     	;# 
  1445     0191                     	;# 
  1446     0191                     	;# 
  1447     0192                     	;# 
  1448     0193                     	;# 
  1449     0193                     	;# 
  1450     0193                     	;# 
  1451     0194                     	;# 
  1452     0195                     	;# 
  1453     0196                     	;# 
  1454     0199                     	;# 
  1455     019A                     	;# 
  1456     019B                     	;# 
  1457     019B                     	;# 
  1458     019B                     	;# 
  1459     019B                     	;# 
  1460     019C                     	;# 
  1461     019C                     	;# 
  1462     019D                     	;# 
  1463     019E                     	;# 
  1464     019F                     	;# 
  1465     020C                     	;# 
  1466     020D                     	;# 
  1467     0211                     	;# 
  1468     0211                     	;# 
  1469     0212                     	;# 
  1470     0212                     	;# 
  1471     0213                     	;# 
  1472     0213                     	;# 
  1473     0214                     	;# 
  1474     0214                     	;# 
  1475     0215                     	;# 
  1476     0215                     	;# 
  1477     0215                     	;# 
  1478     0216                     	;# 
  1479     0216                     	;# 
  1480     0217                     	;# 
  1481     0217                     	;# 
  1482     0219                     	;# 
  1483     021A                     	;# 
  1484     021B                     	;# 
  1485     021C                     	;# 
  1486     021D                     	;# 
  1487     021E                     	;# 
  1488     021F                     	;# 
  1489     0291                     	;# 
  1490     0291                     	;# 
  1491     0292                     	;# 
  1492     0293                     	;# 
  1493     0294                     	;# 
  1494     0295                     	;# 
  1495     0295                     	;# 
  1496     0296                     	;# 
  1497     0298                     	;# 
  1498     0298                     	;# 
  1499     0299                     	;# 
  1500     029A                     	;# 
  1501     029B                     	;# 
  1502     029C                     	;# 
  1503     029C                     	;# 
  1504     029D                     	;# 
  1505     029E                     	;# 
  1506     029E                     	;# 
  1507     0311                     	;# 
  1508     0311                     	;# 
  1509     0312                     	;# 
  1510     0313                     	;# 
  1511     0318                     	;# 
  1512     0318                     	;# 
  1513     0319                     	;# 
  1514     031A                     	;# 
  1515     0394                     	;# 
  1516     0395                     	;# 
  1517     0396                     	;# 
  1518     039A                     	;# 
  1519     039C                     	;# 
  1520     039D                     	;# 
  1521     039E                     	;# 
  1522     039F                     	;# 
  1523     0415                     	;# 
  1524     0416                     	;# 
  1525     0417                     	;# 
  1526     041C                     	;# 
  1527     041D                     	;# 
  1528     041E                     	;# 
  1529     0FE4                     	;# 
  1530     0FE5                     	;# 
  1531     0FE6                     	;# 
  1532     0FE7                     	;# 
  1533     0FE8                     	;# 
  1534     0FE9                     	;# 
  1535     0FEA                     	;# 
  1536     0FEB                     	;# 
  1537     0FED                     	;# 
  1538     0FEE                     	;# 
  1539     0FEF                     	;# 
  1540     0000                     	;# 
  1541     0001                     	;# 
  1542     0002                     	;# 
  1543     0003                     	;# 
  1544     0004                     	;# 
  1545     0005                     	;# 
  1546     0006                     	;# 
  1547     0007                     	;# 
  1548     0008                     	;# 
  1549     0009                     	;# 
  1550     000A                     	;# 
  1551     000B                     	;# 
  1552     000C                     	;# 
  1553     000D                     	;# 
  1554     0011                     	;# 
  1555     0012                     	;# 
  1556     0013                     	;# 
  1557     0014                     	;# 
  1558     0015                     	;# 
  1559     0016                     	;# 
  1560     0016                     	;# 
  1561     0017                     	;# 
  1562     0018                     	;# 
  1563     0019                     	;# 
  1564     001A                     	;# 
  1565     001B                     	;# 
  1566     001C                     	;# 
  1567     001E                     	;# 
  1568     001F                     	;# 
  1569     008C                     	;# 
  1570     008D                     	;# 
  1571     0091                     	;# 
  1572     0092                     	;# 
  1573     0093                     	;# 
  1574     0094                     	;# 
  1575     0095                     	;# 
  1576     0096                     	;# 
  1577     0097                     	;# 
  1578     0098                     	;# 
  1579     0099                     	;# 
  1580     009A                     	;# 
  1581     009B                     	;# 
  1582     009B                     	;# 
  1583     009C                     	;# 
  1584     009D                     	;# 
  1585     009E                     	;# 
  1586     010C                     	;# 
  1587     010D                     	;# 
  1588     0111                     	;# 
  1589     0112                     	;# 
  1590     0113                     	;# 
  1591     0114                     	;# 
  1592     0115                     	;# 
  1593     0116                     	;# 
  1594     0117                     	;# 
  1595     0118                     	;# 
  1596     0119                     	;# 
  1597     011A                     	;# 
  1598     011B                     	;# 
  1599     011D                     	;# 
  1600     011E                     	;# 
  1601     018C                     	;# 
  1602     018D                     	;# 
  1603     0191                     	;# 
  1604     0191                     	;# 
  1605     0192                     	;# 
  1606     0193                     	;# 
  1607     0193                     	;# 
  1608     0193                     	;# 
  1609     0194                     	;# 
  1610     0195                     	;# 
  1611     0196                     	;# 
  1612     0199                     	;# 
  1613     019A                     	;# 
  1614     019B                     	;# 
  1615     019B                     	;# 
  1616     019B                     	;# 
  1617     019B                     	;# 
  1618     019C                     	;# 
  1619     019C                     	;# 
  1620     019D                     	;# 
  1621     019E                     	;# 
  1622     019F                     	;# 
  1623     020C                     	;# 
  1624     020D                     	;# 
  1625     0211                     	;# 
  1626     0211                     	;# 
  1627     0212                     	;# 
  1628     0212                     	;# 
  1629     0213                     	;# 
  1630     0213                     	;# 
  1631     0214                     	;# 
  1632     0214                     	;# 
  1633     0215                     	;# 
  1634     0215                     	;# 
  1635     0215                     	;# 
  1636     0216                     	;# 
  1637     0216                     	;# 
  1638     0217                     	;# 
  1639     0217                     	;# 
  1640     0219                     	;# 
  1641     021A                     	;# 
  1642     021B                     	;# 
  1643     021C                     	;# 
  1644     021D                     	;# 
  1645     021E                     	;# 
  1646     021F                     	;# 
  1647     0291                     	;# 
  1648     0291                     	;# 
  1649     0292                     	;# 
  1650     0293                     	;# 
  1651     0294                     	;# 
  1652     0295                     	;# 
  1653     0295                     	;# 
  1654     0296                     	;# 
  1655     0298                     	;# 
  1656     0298                     	;# 
  1657     0299                     	;# 
  1658     029A                     	;# 
  1659     029B                     	;# 
  1660     029C                     	;# 
  1661     029C                     	;# 
  1662     029D                     	;# 
  1663     029E                     	;# 
  1664     029E                     	;# 
  1665     0311                     	;# 
  1666     0311                     	;# 
  1667     0312                     	;# 
  1668     0313                     	;# 
  1669     0318                     	;# 
  1670     0318                     	;# 
  1671     0319                     	;# 
  1672     031A                     	;# 
  1673     0394                     	;# 
  1674     0395                     	;# 
  1675     0396                     	;# 
  1676     039A                     	;# 
  1677     039C                     	;# 
  1678     039D                     	;# 
  1679     039E                     	;# 
  1680     039F                     	;# 
  1681     0415                     	;# 
  1682     0416                     	;# 
  1683     0417                     	;# 
  1684     041C                     	;# 
  1685     041D                     	;# 
  1686     041E                     	;# 
  1687     0FE4                     	;# 
  1688     0FE5                     	;# 
  1689     0FE6                     	;# 
  1690     0FE7                     	;# 
  1691     0FE8                     	;# 
  1692     0FE9                     	;# 
  1693     0FEA                     	;# 
  1694     0FEB                     	;# 
  1695     0FED                     	;# 
  1696     0FEE                     	;# 
  1697     0FEF                     	;# 
  1698     0000                     	;# 
  1699     0001                     	;# 
  1700     0002                     	;# 
  1701     0003                     	;# 
  1702     0004                     	;# 
  1703     0005                     	;# 
  1704     0006                     	;# 
  1705     0007                     	;# 
  1706     0008                     	;# 
  1707     0009                     	;# 
  1708     000A                     	;# 
  1709     000B                     	;# 
  1710     000C                     	;# 
  1711     000D                     	;# 
  1712     0011                     	;# 
  1713     0012                     	;# 
  1714     0013                     	;# 
  1715     0014                     	;# 
  1716     0015                     	;# 
  1717     0016                     	;# 
  1718     0016                     	;# 
  1719     0017                     	;# 
  1720     0018                     	;# 
  1721     0019                     	;# 
  1722     001A                     	;# 
  1723     001B                     	;# 
  1724     001C                     	;# 
  1725     001E                     	;# 
  1726     001F                     	;# 
  1727     008C                     	;# 
  1728     008D                     	;# 
  1729     0091                     	;# 
  1730     0092                     	;# 
  1731     0093                     	;# 
  1732     0094                     	;# 
  1733     0095                     	;# 
  1734     0096                     	;# 
  1735     0097                     	;# 
  1736     0098                     	;# 
  1737     0099                     	;# 
  1738     009A                     	;# 
  1739     009B                     	;# 
  1740     009B                     	;# 
  1741     009C                     	;# 
  1742     009D                     	;# 
  1743     009E                     	;# 
  1744     010C                     	;# 
  1745     010D                     	;# 
  1746     0111                     	;# 
  1747     0112                     	;# 
  1748     0113                     	;# 
  1749     0114                     	;# 
  1750     0115                     	;# 
  1751     0116                     	;# 
  1752     0117                     	;# 
  1753     0118                     	;# 
  1754     0119                     	;# 
  1755     011A                     	;# 
  1756     011B                     	;# 
  1757     011D                     	;# 
  1758     011E                     	;# 
  1759     018C                     	;# 
  1760     018D                     	;# 
  1761     0191                     	;# 
  1762     0191                     	;# 
  1763     0192                     	;# 
  1764     0193                     	;# 
  1765     0193                     	;# 
  1766     0193                     	;# 
  1767     0194                     	;# 
  1768     0195                     	;# 
  1769     0196                     	;# 
  1770     0199                     	;# 
  1771     019A                     	;# 
  1772     019B                     	;# 
  1773     019B                     	;# 
  1774     019B                     	;# 
  1775     019B                     	;# 
  1776     019C                     	;# 
  1777     019C                     	;# 
  1778     019D                     	;# 
  1779     019E                     	;# 
  1780     019F                     	;# 
  1781     020C                     	;# 
  1782     020D                     	;# 
  1783     0211                     	;# 
  1784     0211                     	;# 
  1785     0212                     	;# 
  1786     0212                     	;# 
  1787     0213                     	;# 
  1788     0213                     	;# 
  1789     0214                     	;# 
  1790     0214                     	;# 
  1791     0215                     	;# 
  1792     0215                     	;# 
  1793     0215                     	;# 
  1794     0216                     	;# 
  1795     0216                     	;# 
  1796     0217                     	;# 
  1797     0217                     	;# 
  1798     0219                     	;# 
  1799     021A                     	;# 
  1800     021B                     	;# 
  1801     021C                     	;# 
  1802     021D                     	;# 
  1803     021E                     	;# 
  1804     021F                     	;# 
  1805     0291                     	;# 
  1806     0291                     	;# 
  1807     0292                     	;# 
  1808     0293                     	;# 
  1809     0294                     	;# 
  1810     0295                     	;# 
  1811     0295                     	;# 
  1812     0296                     	;# 
  1813     0298                     	;# 
  1814     0298                     	;# 
  1815     0299                     	;# 
  1816     029A                     	;# 
  1817     029B                     	;# 
  1818     029C                     	;# 
  1819     029C                     	;# 
  1820     029D                     	;# 
  1821     029E                     	;# 
  1822     029E                     	;# 
  1823     0311                     	;# 
  1824     0311                     	;# 
  1825     0312                     	;# 
  1826     0313                     	;# 
  1827     0318                     	;# 
  1828     0318                     	;# 
  1829     0319                     	;# 
  1830     031A                     	;# 
  1831     0394                     	;# 
  1832     0395                     	;# 
  1833     0396                     	;# 
  1834     039A                     	;# 
  1835     039C                     	;# 
  1836     039D                     	;# 
  1837     039E                     	;# 
  1838     039F                     	;# 
  1839     0415                     	;# 
  1840     0416                     	;# 
  1841     0417                     	;# 
  1842     041C                     	;# 
  1843     041D                     	;# 
  1844     041E                     	;# 
  1845     0FE4                     	;# 
  1846     0FE5                     	;# 
  1847     0FE6                     	;# 
  1848     0FE7                     	;# 
  1849     0FE8                     	;# 
  1850     0FE9                     	;# 
  1851     0FEA                     	;# 
  1852     0FEB                     	;# 
  1853     0FED                     	;# 
  1854     0FEE                     	;# 
  1855     0FEF                     	;# 
  1856     0000                     	;# 
  1857     0001                     	;# 
  1858     0002                     	;# 
  1859     0003                     	;# 
  1860     0004                     	;# 
  1861     0005                     	;# 
  1862     0006                     	;# 
  1863     0007                     	;# 
  1864     0008                     	;# 
  1865     0009                     	;# 
  1866     000A                     	;# 
  1867     000B                     	;# 
  1868     000C                     	;# 
  1869     000D                     	;# 
  1870     0011                     	;# 
  1871     0012                     	;# 
  1872     0013                     	;# 
  1873     0014                     	;# 
  1874     0015                     	;# 
  1875     0016                     	;# 
  1876     0016                     	;# 
  1877     0017                     	;# 
  1878     0018                     	;# 
  1879     0019                     	;# 
  1880     001A                     	;# 
  1881     001B                     	;# 
  1882     001C                     	;# 
  1883     001E                     	;# 
  1884     001F                     	;# 
  1885     008C                     	;# 
  1886     008D                     	;# 
  1887     0091                     	;# 
  1888     0092                     	;# 
  1889     0093                     	;# 
  1890     0094                     	;# 
  1891     0095                     	;# 
  1892     0096                     	;# 
  1893     0097                     	;# 
  1894     0098                     	;# 
  1895     0099                     	;# 
  1896     009A                     	;# 
  1897     009B                     	;# 
  1898     009B                     	;# 
  1899     009C                     	;# 
  1900     009D                     	;# 
  1901     009E                     	;# 
  1902     010C                     	;# 
  1903     010D                     	;# 
  1904     0111                     	;# 
  1905     0112                     	;# 
  1906     0113                     	;# 
  1907     0114                     	;# 
  1908     0115                     	;# 
  1909     0116                     	;# 
  1910     0117                     	;# 
  1911     0118                     	;# 
  1912     0119                     	;# 
  1913     011A                     	;# 
  1914     011B                     	;# 
  1915     011D                     	;# 
  1916     011E                     	;# 
  1917     018C                     	;# 
  1918     018D                     	;# 
  1919     0191                     	;# 
  1920     0191                     	;# 
  1921     0192                     	;# 
  1922     0193                     	;# 
  1923     0193                     	;# 
  1924     0193                     	;# 
  1925     0194                     	;# 
  1926     0195                     	;# 
  1927     0196                     	;# 
  1928     0199                     	;# 
  1929     019A                     	;# 
  1930     019B                     	;# 
  1931     019B                     	;# 
  1932     019B                     	;# 
  1933     019B                     	;# 
  1934     019C                     	;# 
  1935     019C                     	;# 
  1936     019D                     	;# 
  1937     019E                     	;# 
  1938     019F                     	;# 
  1939     020C                     	;# 
  1940     020D                     	;# 
  1941     0211                     	;# 
  1942     0211                     	;# 
  1943     0212                     	;# 
  1944     0212                     	;# 
  1945     0213                     	;# 
  1946     0213                     	;# 
  1947     0214                     	;# 
  1948     0214                     	;# 
  1949     0215                     	;# 
  1950     0215                     	;# 
  1951     0215                     	;# 
  1952     0216                     	;# 
  1953     0216                     	;# 
  1954     0217                     	;# 
  1955     0217                     	;# 
  1956     0219                     	;# 
  1957     021A                     	;# 
  1958     021B                     	;# 
  1959     021C                     	;# 
  1960     021D                     	;# 
  1961     021E                     	;# 
  1962     021F                     	;# 
  1963     0291                     	;# 
  1964     0291                     	;# 
  1965     0292                     	;# 
  1966     0293                     	;# 
  1967     0294                     	;# 
  1968     0295                     	;# 
  1969     0295                     	;# 
  1970     0296                     	;# 
  1971     0298                     	;# 
  1972     0298                     	;# 
  1973     0299                     	;# 
  1974     029A                     	;# 
  1975     029B                     	;# 
  1976     029C                     	;# 
  1977     029C                     	;# 
  1978     029D                     	;# 
  1979     029E                     	;# 
  1980     029E                     	;# 
  1981     0311                     	;# 
  1982     0311                     	;# 
  1983     0312                     	;# 
  1984     0313                     	;# 
  1985     0318                     	;# 
  1986     0318                     	;# 
  1987     0319                     	;# 
  1988     031A                     	;# 
  1989     0394                     	;# 
  1990     0395                     	;# 
  1991     0396                     	;# 
  1992     039A                     	;# 
  1993     039C                     	;# 
  1994     039D                     	;# 
  1995     039E                     	;# 
  1996     039F                     	;# 
  1997     0415                     	;# 
  1998     0416                     	;# 
  1999     0417                     	;# 
  2000     041C                     	;# 
  2001     041D                     	;# 
  2002     041E                     	;# 
  2003     0FE4                     	;# 
  2004     0FE5                     	;# 
  2005     0FE6                     	;# 
  2006     0FE7                     	;# 
  2007     0FE8                     	;# 
  2008     0FE9                     	;# 
  2009     0FEA                     	;# 
  2010     0FEB                     	;# 
  2011     0FED                     	;# 
  2012     0FEE                     	;# 
  2013     0FEF                     	;# 
  2014     0000                     	;# 
  2015     0001                     	;# 
  2016     0002                     	;# 
  2017     0003                     	;# 
  2018     0004                     	;# 
  2019     0005                     	;# 
  2020     0006                     	;# 
  2021     0007                     	;# 
  2022     0008                     	;# 
  2023     0009                     	;# 
  2024     000A                     	;# 
  2025     000B                     	;# 
  2026     000C                     	;# 
  2027     000D                     	;# 
  2028     0011                     	;# 
  2029     0012                     	;# 
  2030     0013                     	;# 
  2031     0014                     	;# 
  2032     0015                     	;# 
  2033     0016                     	;# 
  2034     0016                     	;# 
  2035     0017                     	;# 
  2036     0018                     	;# 
  2037     0019                     	;# 
  2038     001A                     	;# 
  2039     001B                     	;# 
  2040     001C                     	;# 
  2041     001E                     	;# 
  2042     001F                     	;# 
  2043     008C                     	;# 
  2044     008D                     	;# 
  2045     0091                     	;# 
  2046     0092                     	;# 
  2047     0093                     	;# 
  2048     0094                     	;# 
  2049     0095                     	;# 
  2050     0096                     	;# 
  2051     0097                     	;# 
  2052     0098                     	;# 
  2053     0099                     	;# 
  2054     009A                     	;# 
  2055     009B                     	;# 
  2056     009B                     	;# 
  2057     009C                     	;# 
  2058     009D                     	;# 
  2059     009E                     	;# 
  2060     010C                     	;# 
  2061     010D                     	;# 
  2062     0111                     	;# 
  2063     0112                     	;# 
  2064     0113                     	;# 
  2065     0114                     	;# 
  2066     0115                     	;# 
  2067     0116                     	;# 
  2068     0117                     	;# 
  2069     0118                     	;# 
  2070     0119                     	;# 
  2071     011A                     	;# 
  2072     011B                     	;# 
  2073     011D                     	;# 
  2074     011E                     	;# 
  2075     018C                     	;# 
  2076     018D                     	;# 
  2077     0191                     	;# 
  2078     0191                     	;# 
  2079     0192                     	;# 
  2080     0193                     	;# 
  2081     0193                     	;# 
  2082     0193                     	;# 
  2083     0194                     	;# 
  2084     0195                     	;# 
  2085     0196                     	;# 
  2086     0199                     	;# 
  2087     019A                     	;# 
  2088     019B                     	;# 
  2089     019B                     	;# 
  2090     019B                     	;# 
  2091     019B                     	;# 
  2092     019C                     	;# 
  2093     019C                     	;# 
  2094     019D                     	;# 
  2095     019E                     	;# 
  2096     019F                     	;# 
  2097     020C                     	;# 
  2098     020D                     	;# 
  2099     0211                     	;# 
  2100     0211                     	;# 
  2101     0212                     	;# 
  2102     0212                     	;# 
  2103     0213                     	;# 
  2104     0213                     	;# 
  2105     0214                     	;# 
  2106     0214                     	;# 
  2107     0215                     	;# 
  2108     0215                     	;# 
  2109     0215                     	;# 
  2110     0216                     	;# 
  2111     0216                     	;# 
  2112     0217                     	;# 
  2113     0217                     	;# 
  2114     0219                     	;# 
  2115     021A                     	;# 
  2116     021B                     	;# 
  2117     021C                     	;# 
  2118     021D                     	;# 
  2119     021E                     	;# 
  2120     021F                     	;# 
  2121     0291                     	;# 
  2122     0291                     	;# 
  2123     0292                     	;# 
  2124     0293                     	;# 
  2125     0294                     	;# 
  2126     0295                     	;# 
  2127     0295                     	;# 
  2128     0296                     	;# 
  2129     0298                     	;# 
  2130     0298                     	;# 
  2131     0299                     	;# 
  2132     029A                     	;# 
  2133     029B                     	;# 
  2134     029C                     	;# 
  2135     029C                     	;# 
  2136     029D                     	;# 
  2137     029E                     	;# 
  2138     029E                     	;# 
  2139     0311                     	;# 
  2140     0311                     	;# 
  2141     0312                     	;# 
  2142     0313                     	;# 
  2143     0318                     	;# 
  2144     0318                     	;# 
  2145     0319                     	;# 
  2146     031A                     	;# 
  2147     0394                     	;# 
  2148     0395                     	;# 
  2149     0396                     	;# 
  2150     039A                     	;# 
  2151     039C                     	;# 
  2152     039D                     	;# 
  2153     039E                     	;# 
  2154     039F                     	;# 
  2155     0415                     	;# 
  2156     0416                     	;# 
  2157     0417                     	;# 
  2158     041C                     	;# 
  2159     041D                     	;# 
  2160     041E                     	;# 
  2161     0FE4                     	;# 
  2162     0FE5                     	;# 
  2163     0FE6                     	;# 
  2164     0FE7                     	;# 
  2165     0FE8                     	;# 
  2166     0FE9                     	;# 
  2167     0FEA                     	;# 
  2168     0FEB                     	;# 
  2169     0FED                     	;# 
  2170     0FEE                     	;# 
  2171     0FEF                     	;# 
  2172     0000                     	;# 
  2173     0001                     	;# 
  2174     0002                     	;# 
  2175     0003                     	;# 
  2176     0004                     	;# 
  2177     0005                     	;# 
  2178     0006                     	;# 
  2179     0007                     	;# 
  2180     0008                     	;# 
  2181     0009                     	;# 
  2182     000A                     	;# 
  2183     000B                     	;# 
  2184     000C                     	;# 
  2185     000D                     	;# 
  2186     0011                     	;# 
  2187     0012                     	;# 
  2188     0013                     	;# 
  2189     0014                     	;# 
  2190     0015                     	;# 
  2191     0016                     	;# 
  2192     0016                     	;# 
  2193     0017                     	;# 
  2194     0018                     	;# 
  2195     0019                     	;# 
  2196     001A                     	;# 
  2197     001B                     	;# 
  2198     001C                     	;# 
  2199     001E                     	;# 
  2200     001F                     	;# 
  2201     008C                     	;# 
  2202     008D                     	;# 
  2203     0091                     	;# 
  2204     0092                     	;# 
  2205     0093                     	;# 
  2206     0094                     	;# 
  2207     0095                     	;# 
  2208     0096                     	;# 
  2209     0097                     	;# 
  2210     0098                     	;# 
  2211     0099                     	;# 
  2212     009A                     	;# 
  2213     009B                     	;# 
  2214     009B                     	;# 
  2215     009C                     	;# 
  2216     009D                     	;# 
  2217     009E                     	;# 
  2218     010C                     	;# 
  2219     010D                     	;# 
  2220     0111                     	;# 
  2221     0112                     	;# 
  2222     0113                     	;# 
  2223     0114                     	;# 
  2224     0115                     	;# 
  2225     0116                     	;# 
  2226     0117                     	;# 
  2227     0118                     	;# 
  2228     0119                     	;# 
  2229     011A                     	;# 
  2230     011B                     	;# 
  2231     011D                     	;# 
  2232     011E                     	;# 
  2233     018C                     	;# 
  2234     018D                     	;# 
  2235     0191                     	;# 
  2236     0191                     	;# 
  2237     0192                     	;# 
  2238     0193                     	;# 
  2239     0193                     	;# 
  2240     0193                     	;# 
  2241     0194                     	;# 
  2242     0195                     	;# 
  2243     0196                     	;# 
  2244     0199                     	;# 
  2245     019A                     	;# 
  2246     019B                     	;# 
  2247     019B                     	;# 
  2248     019B                     	;# 
  2249     019B                     	;# 
  2250     019C                     	;# 
  2251     019C                     	;# 
  2252     019D                     	;# 
  2253     019E                     	;# 
  2254     019F                     	;# 
  2255     020C                     	;# 
  2256     020D                     	;# 
  2257     0211                     	;# 
  2258     0211                     	;# 
  2259     0212                     	;# 
  2260     0212                     	;# 
  2261     0213                     	;# 
  2262     0213                     	;# 
  2263     0214                     	;# 
  2264     0214                     	;# 
  2265     0215                     	;# 
  2266     0215                     	;# 
  2267     0215                     	;# 
  2268     0216                     	;# 
  2269     0216                     	;# 
  2270     0217                     	;# 
  2271     0217                     	;# 
  2272     0219                     	;# 
  2273     021A                     	;# 
  2274     021B                     	;# 
  2275     021C                     	;# 
  2276     021D                     	;# 
  2277     021E                     	;# 
  2278     021F                     	;# 
  2279     0291                     	;# 
  2280     0291                     	;# 
  2281     0292                     	;# 
  2282     0293                     	;# 
  2283     0294                     	;# 
  2284     0295                     	;# 
  2285     0295                     	;# 
  2286     0296                     	;# 
  2287     0298                     	;# 
  2288     0298                     	;# 
  2289     0299                     	;# 
  2290     029A                     	;# 
  2291     029B                     	;# 
  2292     029C                     	;# 
  2293     029C                     	;# 
  2294     029D                     	;# 
  2295     029E                     	;# 
  2296     029E                     	;# 
  2297     0311                     	;# 
  2298     0311                     	;# 
  2299     0312                     	;# 
  2300     0313                     	;# 
  2301     0318                     	;# 
  2302     0318                     	;# 
  2303     0319                     	;# 
  2304     031A                     	;# 
  2305     0394                     	;# 
  2306     0395                     	;# 
  2307     0396                     	;# 
  2308     039A                     	;# 
  2309     039C                     	;# 
  2310     039D                     	;# 
  2311     039E                     	;# 
  2312     039F                     	;# 
  2313     0415                     	;# 
  2314     0416                     	;# 
  2315     0417                     	;# 
  2316     041C                     	;# 
  2317     041D                     	;# 
  2318     041E                     	;# 
  2319     0FE4                     	;# 
  2320     0FE5                     	;# 
  2321     0FE6                     	;# 
  2322     0FE7                     	;# 
  2323     0FE8                     	;# 
  2324     0FE9                     	;# 
  2325     0FEA                     	;# 
  2326     0FEB                     	;# 
  2327     0FED                     	;# 
  2328     0FEE                     	;# 
  2329     0FEF                     	;# 
  2330     0000                     	;# 
  2331     0001                     	;# 
  2332     0002                     	;# 
  2333     0003                     	;# 
  2334     0004                     	;# 
  2335     0005                     	;# 
  2336     0006                     	;# 
  2337     0007                     	;# 
  2338     0008                     	;# 
  2339     0009                     	;# 
  2340     000A                     	;# 
  2341     000B                     	;# 
  2342     000C                     	;# 
  2343     000D                     	;# 
  2344     0011                     	;# 
  2345     0012                     	;# 
  2346     0013                     	;# 
  2347     0014                     	;# 
  2348     0015                     	;# 
  2349     0016                     	;# 
  2350     0016                     	;# 
  2351     0017                     	;# 
  2352     0018                     	;# 
  2353     0019                     	;# 
  2354     001A                     	;# 
  2355     001B                     	;# 
  2356     001C                     	;# 
  2357     001E                     	;# 
  2358     001F                     	;# 
  2359     008C                     	;# 
  2360     008D                     	;# 
  2361     0091                     	;# 
  2362     0092                     	;# 
  2363     0093                     	;# 
  2364     0094                     	;# 
  2365     0095                     	;# 
  2366     0096                     	;# 
  2367     0097                     	;# 
  2368     0098                     	;# 
  2369     0099                     	;# 
  2370     009A                     	;# 
  2371     009B                     	;# 
  2372     009B                     	;# 
  2373     009C                     	;# 
  2374     009D                     	;# 
  2375     009E                     	;# 
  2376     010C                     	;# 
  2377     010D                     	;# 
  2378     0111                     	;# 
  2379     0112                     	;# 
  2380     0113                     	;# 
  2381     0114                     	;# 
  2382     0115                     	;# 
  2383     0116                     	;# 
  2384     0117                     	;# 
  2385     0118                     	;# 
  2386     0119                     	;# 
  2387     011A                     	;# 
  2388     011B                     	;# 
  2389     011D                     	;# 
  2390     011E                     	;# 
  2391     018C                     	;# 
  2392     018D                     	;# 
  2393     0191                     	;# 
  2394     0191                     	;# 
  2395     0192                     	;# 
  2396     0193                     	;# 
  2397     0193                     	;# 
  2398     0193                     	;# 
  2399     0194                     	;# 
  2400     0195                     	;# 
  2401     0196                     	;# 
  2402     0199                     	;# 
  2403     019A                     	;# 
  2404     019B                     	;# 
  2405     019B                     	;# 
  2406     019B                     	;# 
  2407     019B                     	;# 
  2408     019C                     	;# 
  2409     019C                     	;# 
  2410     019D                     	;# 
  2411     019E                     	;# 
  2412     019F                     	;# 
  2413     020C                     	;# 
  2414     020D                     	;# 
  2415     0211                     	;# 
  2416     0211                     	;# 
  2417     0212                     	;# 
  2418     0212                     	;# 
  2419     0213                     	;# 
  2420     0213                     	;# 
  2421     0214                     	;# 
  2422     0214                     	;# 
  2423     0215                     	;# 
  2424     0215                     	;# 
  2425     0215                     	;# 
  2426     0216                     	;# 
  2427     0216                     	;# 
  2428     0217                     	;# 
  2429     0217                     	;# 
  2430     0219                     	;# 
  2431     021A                     	;# 
  2432     021B                     	;# 
  2433     021C                     	;# 
  2434     021D                     	;# 
  2435     021E                     	;# 
  2436     021F                     	;# 
  2437     0291                     	;# 
  2438     0291                     	;# 
  2439     0292                     	;# 
  2440     0293                     	;# 
  2441     0294                     	;# 
  2442     0295                     	;# 
  2443     0295                     	;# 
  2444     0296                     	;# 
  2445     0298                     	;# 
  2446     0298                     	;# 
  2447     0299                     	;# 
  2448     029A                     	;# 
  2449     029B                     	;# 
  2450     029C                     	;# 
  2451     029C                     	;# 
  2452     029D                     	;# 
  2453     029E                     	;# 
  2454     029E                     	;# 
  2455     0311                     	;# 
  2456     0311                     	;# 
  2457     0312                     	;# 
  2458     0313                     	;# 
  2459     0318                     	;# 
  2460     0318                     	;# 
  2461     0319                     	;# 
  2462     031A                     	;# 
  2463     0394                     	;# 
  2464     0395                     	;# 
  2465     0396                     	;# 
  2466     039A                     	;# 
  2467     039C                     	;# 
  2468     039D                     	;# 
  2469     039E                     	;# 
  2470     039F                     	;# 
  2471     0415                     	;# 
  2472     0416                     	;# 
  2473     0417                     	;# 
  2474     041C                     	;# 
  2475     041D                     	;# 
  2476     041E                     	;# 
  2477     0FE4                     	;# 
  2478     0FE5                     	;# 
  2479     0FE6                     	;# 
  2480     0FE7                     	;# 
  2481     0FE8                     	;# 
  2482     0FE9                     	;# 
  2483     0FEA                     	;# 
  2484     0FEB                     	;# 
  2485     0FED                     	;# 
  2486     0FEE                     	;# 
  2487     0FEF                     	;# 
  2488     0000                     	;# 
  2489     0001                     	;# 
  2490     0002                     	;# 
  2491     0003                     	;# 
  2492     0004                     	;# 
  2493     0005                     	;# 
  2494     0006                     	;# 
  2495     0007                     	;# 
  2496     0008                     	;# 
  2497     0009                     	;# 
  2498     000A                     	;# 
  2499     000B                     	;# 
  2500     000C                     	;# 
  2501     000D                     	;# 
  2502     0011                     	;# 
  2503     0012                     	;# 
  2504     0013                     	;# 
  2505     0014                     	;# 
  2506     0015                     	;# 
  2507     0016                     	;# 
  2508     0016                     	;# 
  2509     0017                     	;# 
  2510     0018                     	;# 
  2511     0019                     	;# 
  2512     001A                     	;# 
  2513     001B                     	;# 
  2514     001C                     	;# 
  2515     001E                     	;# 
  2516     001F                     	;# 
  2517     008C                     	;# 
  2518     008D                     	;# 
  2519     0091                     	;# 
  2520     0092                     	;# 
  2521     0093                     	;# 
  2522     0094                     	;# 
  2523     0095                     	;# 
  2524     0096                     	;# 
  2525     0097                     	;# 
  2526     0098                     	;# 
  2527     0099                     	;# 
  2528     009A                     	;# 
  2529     009B                     	;# 
  2530     009B                     	;# 
  2531     009C                     	;# 
  2532     009D                     	;# 
  2533     009E                     	;# 
  2534     010C                     	;# 
  2535     010D                     	;# 
  2536     0111                     	;# 
  2537     0112                     	;# 
  2538     0113                     	;# 
  2539     0114                     	;# 
  2540     0115                     	;# 
  2541     0116                     	;# 
  2542     0117                     	;# 
  2543     0118                     	;# 
  2544     0119                     	;# 
  2545     011A                     	;# 
  2546     011B                     	;# 
  2547     011D                     	;# 
  2548     011E                     	;# 
  2549     018C                     	;# 
  2550     018D                     	;# 
  2551     0191                     	;# 
  2552     0191                     	;# 
  2553     0192                     	;# 
  2554     0193                     	;# 
  2555     0193                     	;# 
  2556     0193                     	;# 
  2557     0194                     	;# 
  2558     0195                     	;# 
  2559     0196                     	;# 
  2560     0199                     	;# 
  2561     019A                     	;# 
  2562     019B                     	;# 
  2563     019B                     	;# 
  2564     019B                     	;# 
  2565     019B                     	;# 
  2566     019C                     	;# 
  2567     019C                     	;# 
  2568     019D                     	;# 
  2569     019E                     	;# 
  2570     019F                     	;# 
  2571     020C                     	;# 
  2572     020D                     	;# 
  2573     0211                     	;# 
  2574     0211                     	;# 
  2575     0212                     	;# 
  2576     0212                     	;# 
  2577     0213                     	;# 
  2578     0213                     	;# 
  2579     0214                     	;# 
  2580     0214                     	;# 
  2581     0215                     	;# 
  2582     0215                     	;# 
  2583     0215                     	;# 
  2584     0216                     	;# 
  2585     0216                     	;# 
  2586     0217                     	;# 
  2587     0217                     	;# 
  2588     0219                     	;# 
  2589     021A                     	;# 
  2590     021B                     	;# 
  2591     021C                     	;# 
  2592     021D                     	;# 
  2593     021E                     	;# 
  2594     021F                     	;# 
  2595     0291                     	;# 
  2596     0291                     	;# 
  2597     0292                     	;# 
  2598     0293                     	;# 
  2599     0294                     	;# 
  2600     0295                     	;# 
  2601     0295                     	;# 
  2602     0296                     	;# 
  2603     0298                     	;# 
  2604     0298                     	;# 
  2605     0299                     	;# 
  2606     029A                     	;# 
  2607     029B                     	;# 
  2608     029C                     	;# 
  2609     029C                     	;# 
  2610     029D                     	;# 
  2611     029E                     	;# 
  2612     029E                     	;# 
  2613     0311                     	;# 
  2614     0311                     	;# 
  2615     0312                     	;# 
  2616     0313                     	;# 
  2617     0318                     	;# 
  2618     0318                     	;# 
  2619     0319                     	;# 
  2620     031A                     	;# 
  2621     0394                     	;# 
  2622     0395                     	;# 
  2623     0396                     	;# 
  2624     039A                     	;# 
  2625     039C                     	;# 
  2626     039D                     	;# 
  2627     039E                     	;# 
  2628     039F                     	;# 
  2629     0415                     	;# 
  2630     0416                     	;# 
  2631     0417                     	;# 
  2632     041C                     	;# 
  2633     041D                     	;# 
  2634     041E                     	;# 
  2635     0FE4                     	;# 
  2636     0FE5                     	;# 
  2637     0FE6                     	;# 
  2638     0FE7                     	;# 
  2639     0FE8                     	;# 
  2640     0FE9                     	;# 
  2641     0FEA                     	;# 
  2642     0FEB                     	;# 
  2643     0FED                     	;# 
  2644     0FEE                     	;# 
  2645     0FEF                     	;# 
  2646     0000                     	;# 
  2647     0001                     	;# 
  2648     0002                     	;# 
  2649     0003                     	;# 
  2650     0004                     	;# 
  2651     0005                     	;# 
  2652     0006                     	;# 
  2653     0007                     	;# 
  2654     0008                     	;# 
  2655     0009                     	;# 
  2656     000A                     	;# 
  2657     000B                     	;# 
  2658     000C                     	;# 
  2659     000D                     	;# 
  2660     0011                     	;# 
  2661     0012                     	;# 
  2662     0013                     	;# 
  2663     0014                     	;# 
  2664     0015                     	;# 
  2665     0016                     	;# 
  2666     0016                     	;# 
  2667     0017                     	;# 
  2668     0018                     	;# 
  2669     0019                     	;# 
  2670     001A                     	;# 
  2671     001B                     	;# 
  2672     001C                     	;# 
  2673     001E                     	;# 
  2674     001F                     	;# 
  2675     008C                     	;# 
  2676     008D                     	;# 
  2677     0091                     	;# 
  2678     0092                     	;# 
  2679     0093                     	;# 
  2680     0094                     	;# 
  2681     0095                     	;# 
  2682     0096                     	;# 
  2683     0097                     	;# 
  2684     0098                     	;# 
  2685     0099                     	;# 
  2686     009A                     	;# 
  2687     009B                     	;# 
  2688     009B                     	;# 
  2689     009C                     	;# 
  2690     009D                     	;# 
  2691     009E                     	;# 
  2692     010C                     	;# 
  2693     010D                     	;# 
  2694     0111                     	;# 
  2695     0112                     	;# 
  2696     0113                     	;# 
  2697     0114                     	;# 
  2698     0115                     	;# 
  2699     0116                     	;# 
  2700     0117                     	;# 
  2701     0118                     	;# 
  2702     0119                     	;# 
  2703     011A                     	;# 
  2704     011B                     	;# 
  2705     011D                     	;# 
  2706     011E                     	;# 
  2707     018C                     	;# 
  2708     018D                     	;# 
  2709     0191                     	;# 
  2710     0191                     	;# 
  2711     0192                     	;# 
  2712     0193                     	;# 
  2713     0193                     	;# 
  2714     0193                     	;# 
  2715     0194                     	;# 
  2716     0195                     	;# 
  2717     0196                     	;# 
  2718     0199                     	;# 
  2719     019A                     	;# 
  2720     019B                     	;# 
  2721     019B                     	;# 
  2722     019B                     	;# 
  2723     019B                     	;# 
  2724     019C                     	;# 
  2725     019C                     	;# 
  2726     019D                     	;# 
  2727     019E                     	;# 
  2728     019F                     	;# 
  2729     020C                     	;# 
  2730     020D                     	;# 
  2731     0211                     	;# 
  2732     0211                     	;# 
  2733     0212                     	;# 
  2734     0212                     	;# 
  2735     0213                     	;# 
  2736     0213                     	;# 
  2737     0214                     	;# 
  2738     0214                     	;# 
  2739     0215                     	;# 
  2740     0215                     	;# 
  2741     0215                     	;# 
  2742     0216                     	;# 
  2743     0216                     	;# 
  2744     0217                     	;# 
  2745     0217                     	;# 
  2746     0219                     	;# 
  2747     021A                     	;# 
  2748     021B                     	;# 
  2749     021C                     	;# 
  2750     021D                     	;# 
  2751     021E                     	;# 
  2752     021F                     	;# 
  2753     0291                     	;# 
  2754     0291                     	;# 
  2755     0292                     	;# 
  2756     0293                     	;# 
  2757     0294                     	;# 
  2758     0295                     	;# 
  2759     0295                     	;# 
  2760     0296                     	;# 
  2761     0298                     	;# 
  2762     0298                     	;# 
  2763     0299                     	;# 
  2764     029A                     	;# 
  2765     029B                     	;# 
  2766     029C                     	;# 
  2767     029C                     	;# 
  2768     029D                     	;# 
  2769     029E                     	;# 
  2770     029E                     	;# 
  2771     0311                     	;# 
  2772     0311                     	;# 
  2773     0312                     	;# 
  2774     0313                     	;# 
  2775     0318                     	;# 
  2776     0318                     	;# 
  2777     0319                     	;# 
  2778     031A                     	;# 
  2779     0394                     	;# 
  2780     0395                     	;# 
  2781     0396                     	;# 
  2782     039A                     	;# 
  2783     039C                     	;# 
  2784     039D                     	;# 
  2785     039E                     	;# 
  2786     039F                     	;# 
  2787     0415                     	;# 
  2788     0416                     	;# 
  2789     0417                     	;# 
  2790     041C                     	;# 
  2791     041D                     	;# 
  2792     041E                     	;# 
  2793     0FE4                     	;# 
  2794     0FE5                     	;# 
  2795     0FE6                     	;# 
  2796     0FE7                     	;# 
  2797     0FE8                     	;# 
  2798     0FE9                     	;# 
  2799     0FEA                     	;# 
  2800     0FEB                     	;# 
  2801     0FED                     	;# 
  2802     0FEE                     	;# 
  2803     0FEF                     	;# 
  2804                           
  2805 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2806     0000                     
  2807 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2808     0000                     
  2809 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2810     0000                     
  2811                           	psect	idataBANK0
  2812     0003                     __pidataBANK0:
  2813                           
  2814                           ;initializer for _subindo
  2815     0003  3401               	retlw	1
  2816                           
  2817                           	psect	stringtext1
  2818     07FF                     __pstringtext1:
  2819     07FF                     _matrix_conf:
  2820     07FF  3409               	retlw	9
  2821     0800  3400               	retlw	0
  2822     0801  340A               	retlw	10
  2823     0802  3400               	retlw	0
  2824     0803  340B               	retlw	11
  2825     0804  3407               	retlw	7
  2826     0805  340C               	retlw	12
  2827     0806  3401               	retlw	1
  2828     0807  340F               	retlw	15
  2829     0808  3401               	retlw	1
  2830     0809  340F               	retlw	15
  2831     080A  3400               	retlw	0
  2832     080B                     __end_of_matrix_conf:
  2833                           
  2834                           	psect	stringtext2
  2835     080B                     __pstringtext2:
  2836     080B                     _spi1_configuration:
  2837     080B  3400               	retlw	0
  2838     080C  3440               	retlw	64
  2839     080D  3401               	retlw	1
  2840     080E  3400               	retlw	0
  2841     080F                     __end_of_spi1_configuration:
  2842                           
  2843                           	psect	nvBANK0
  2844     0067                     __pnvBANK0:
  2845     0067                     _IOCBF0_InterruptHandler:
  2846     0067                     	ds	2
  2847                           
  2848                           	psect	nvBANK1
  2849     00B3                     __pnvBANK1:
  2850     00B3                     _TMR4_InterruptHandler:
  2851     00B3                     	ds	2
  2852     00B5                     _CCP4_CallBack:
  2853     00B5                     	ds	2
  2854     00B7                     _TMR0_InterruptHandler:
  2855     00B7                     	ds	2
  2856     00B9                     _EUSART_ErrorHandler:
  2857     00B9                     	ds	2
  2858     00BB                     _EUSART_OverrunErrorHandler:
  2859     00BB                     	ds	2
  2860     00BD                     _EUSART_FramingErrorHandler:
  2861     00BD                     	ds	2
  2862     00BF                     _IOCBF3_InterruptHandler:
  2863     00BF                     	ds	2
  2864     0015                     _TMR0	set	21
  2865     001C                     _T2CONbits	set	28
  2866     001C                     _T2CON	set	28
  2867     001A                     _TMR2	set	26
  2868     001B                     _PR2	set	27
  2869     0019                     _T1GCONbits	set	25
  2870     0018                     _T1CONbits	set	24
  2871     0018                     _T1CON	set	24
  2872     0016                     _TMR1L	set	22
  2873     0017                     _TMR1H	set	23
  2874     0019                     _T1GCON	set	25
  2875     0013                     _PIR3bits	set	19
  2876     0011                     _PIR1bits	set	17
  2877     000B                     _INTCONbits	set	11
  2878     0012                     _PIR2bits	set	18
  2879     0095                     _OPTION_REG	set	149
  2880     0093                     _PIE3bits	set	147
  2881     008D                     _TRISBbits	set	141
  2882     009D                     _ADCON0bits	set	157
  2883     009D                     _ADCON0	set	157
  2884     009C                     _ADRESH	set	156
  2885     009B                     _ADRESL	set	155
  2886     009E                     _ADCON1	set	158
  2887     0097                     _WDTCON	set	151
  2888     0098                     _OSCTUNE	set	152
  2889     0099                     _OSCCON	set	153
  2890     0095                     _OPTION_REGbits	set	149
  2891     008D                     _TRISB	set	141
  2892     008C                     _TRISA	set	140
  2893     0092                     _PIE2bits	set	146
  2894     010D                     _LATBbits	set	269
  2895     0117                     _FVRCONbits	set	279
  2896     0117                     _FVRCON	set	279
  2897     0116                     _BORCON	set	278
  2898     011E                     _APFCON1	set	286
  2899     011D                     _APFCON0	set	285
  2900     010D                     _LATB	set	269
  2901     010C                     _LATA	set	268
  2902     0112                     _CM1CON1	set	274
  2903     0111                     _CM1CON0	set	273
  2904     0115                     _CMOUTbits	set	277
  2905     0114                     _CM2CON1	set	276
  2906     0113                     _CM2CON0	set	275
  2907     019A                     _TXREG	set	410
  2908     0199                     _RCREG	set	409
  2909     019D                     _RCSTAbits	set	413
  2910     019E                     _TXSTAbits	set	414
  2911     019C                     _SPBRGH	set	412
  2912     019B                     _SPBRGL	set	411
  2913     019E                     _TXSTA	set	414
  2914     019D                     _RCSTA	set	413
  2915     019F                     _BAUDCON	set	415
  2916     018C                     _ANSELA	set	396
  2917     018D                     _ANSELB	set	397
  2918     0211                     _SSP1BUF	set	529
  2919     0216                     _SSP1CON2	set	534
  2920     0215                     _SSP1CON1bits	set	533
  2921     0212                     _SSP1ADD	set	530
  2922     0215                     _SSP1CON1	set	533
  2923     0214                     _SSP1STAT	set	532
  2924     020C                     _WPUA	set	524
  2925     020D                     _WPUB	set	525
  2926     029E                     _CCPTMRS0bits	set	670
  2927     031A                     _CCP4CON	set	794
  2928     0318                     _CCPR4L	set	792
  2929     0319                     _CCPR4H	set	793
  2930     0312                     _CCPR3H	set	786
  2931     0311                     _CCPR3L	set	785
  2932     0313                     _CCP3CON	set	787
  2933     0394                     _IOCBPbits	set	916
  2934     0395                     _IOCBNbits	set	917
  2935     0396                     _IOCBFbits	set	918
  2936     0417                     _T4CONbits	set	1047
  2937     0417                     _T4CON	set	1047
  2938     0415                     _TMR4	set	1045
  2939     0416                     _PR4	set	1046
  2940                           
  2941                           	psect	cinit
  2942     0058                     start_initialization:	
  2943                           ; #config settings
  2944                           
  2945     0058                     __initialization:
  2946                           
  2947                           ; Initialize objects allocated to BANK0
  2948     0058  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  2949     005B  00E9               	movwf	__pdataBANK0& (0+127)
  2950                           
  2951                           ; Clear objects allocated to BANK0
  2952     005C  3045               	movlw	low __pbssBANK0
  2953     005D  0084               	movwf	4
  2954     005E  3000               	movlw	high __pbssBANK0
  2955     005F  0085               	movwf	5
  2956     0060  3022               	movlw	34
  2957     0061  318E  266E  3180   	fcall	clear_ram0
  2958                           
  2959                           ; Clear objects allocated to BANK1
  2960     0064  30C1               	movlw	low __pbssBANK1
  2961     0065  0084               	movwf	4
  2962     0066  3000               	movlw	high __pbssBANK1
  2963     0067  0085               	movwf	5
  2964     0068  3008               	movlw	8
  2965     0069  318E  266E  3180   	fcall	clear_ram0
  2966     006C                     end_of_initialization:	
  2967                           ;End of C runtime variable initialization code
  2968                           
  2969     006C                     __end_of__initialization:
  2970     006C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2971     006D  0020               	movlb	0
  2972     006E  3184  2C9E         	ljmp	_main	;jump to C main() function
  2973                           
  2974                           	psect	bssBANK0
  2975     0045                     __pbssBANK0:
  2976     0045                     _velocidadeMotor:
  2977     0045                     	ds	4
  2978     0049                     TMR4_ISR@CountCallBack:
  2979     0049                     	ds	2
  2980     004B                     TMR0_ISR@CountCallBack:
  2981     004B                     	ds	2
  2982     004D                     _timer1ReloadVal:
  2983     004D                     	ds	2
  2984     004F                     _ADC_InterruptHandler:
  2985     004F                     	ds	2
  2986     0051                     _temperatura:
  2987     0051                     	ds	2
  2988     0053                     _t2:
  2989     0053                     	ds	2
  2990     0055                     _t1:
  2991     0055                     	ds	2
  2992     0057                     _timer0ReloadVal:
  2993     0057                     	ds	1
  2994     0058                     _eusartRxLastError:
  2995     0058                     	ds	1
  2996     0059                     _destinoDesc:
  2997     0059                     	ds	1
  2998     005A                     _destinoSub:
  2999     005A                     	ds	1
  3000     005B                     _altura:
  3001     005B                     	ds	1
  3002     005C                     _andarAtual:
  3003     005C                     	ds	1
  3004     005D                     _dTemp:
  3005     005D                     	ds	1
  3006     005E                     _destino:
  3007     005E                     	ds	1
  3008     005F                     _oTemp:
  3009     005F                     	ds	1
  3010     0060                     _origem:
  3011     0060                     	ds	1
  3012     0061                     _flag:
  3013     0061                     	ds	1
  3014     0062                     _pulsoEncoder:
  3015     0062                     	ds	1
  3016     0063                     _RXaccepted:
  3017     0063                     	ds	1
  3018     0064                     _waitRX:
  3019     0064                     	ds	1
  3020     0065                     _rxValue:
  3021     0065                     	ds	1
  3022     0066                     _state:
  3023     0066                     	ds	1
  3024                           
  3025                           	psect	dataBANK0
  3026     0069                     __pdataBANK0:
  3027     0069                     _subindo:
  3028     0069                     	ds	1
  3029                           
  3030                           	psect	bssBANK1
  3031     00C1                     __pbssBANK1:
  3032     00C1                     _MatrixLed:
  3033     00C1                     	ds	8
  3034                           
  3035                           	psect	clrtext
  3036     0E6E                     clear_ram0:	
  3037                           ;	Called with FSR0 containing the base address, and
  3038                           ;	WREG with the size to clear
  3039                           
  3040     0E6E  0064               	clrwdt	;clear the watchdog before getting into this loop
  3041     0E6F                     clrloop0:
  3042     0E6F  0180               	clrf	0	;clear RAM location pointed to by FSR
  3043     0E70  3101               	addfsr 0,1
  3044     0E71  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3045     0E72  2E6F               	goto	clrloop0	;have we reached the end yet?
  3046     0E73  3400               	retlw	0	;all done for this memory range, return
  3047                           
  3048                           	psect	cstackBANK1
  3049     00A0                     __pcstackBANK1:
  3050     00A0                     ?_IOCBF0_SetInterruptHandler:
  3051     00A0                     ?_IOCBF3_SetInterruptHandler:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054     00A0                     ??_SPI1_Initialize:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057     00A0                     ??_OSCILLATOR_Initialize:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060     00A0                     ??_WDT_Initialize:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063     00A0                     ??_FVR_Initialize:	
  3064                           ; 1 bytes @ 0x0
  3065                           
  3066     00A0                     ??_TMR2_Initialize:	
  3067                           ; 1 bytes @ 0x0
  3068                           
  3069     00A0                     ??_ADC_Initialize:	
  3070                           ; 1 bytes @ 0x0
  3071                           
  3072     00A0                     ??_TMR1_Initialize:	
  3073                           ; 1 bytes @ 0x0
  3074                           
  3075     00A0                     ?_EUSART_SetFramingErrorHandler:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078     00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081     00A0                     ?_EUSART_SetErrorHandler:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084     00A0                     ?_TMR0_SetInterruptHandler:	
  3085                           ; 1 bytes @ 0x0
  3086                           
  3087     00A0                     ?_CCP4_SetCallBack:	
  3088                           ; 1 bytes @ 0x0
  3089                           
  3090     00A0                     ?_TMR4_SetInterruptHandler:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093     00A0                     ??_PWM3_Initialize:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096     00A0                     ??_CMP2_Initialize:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099     00A0                     ??_CMP1_Initialize:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102     00A0                     ??_EUSART_is_rx_ready:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105     00A0                     ??_EUSART_Read:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108     00A0                     ??_SPI1_Open:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111     00A0                     ?_SPI1_ExchangeBlock:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114     00A0                     ??_isValidFloor:	
  3115                           ; 1 bytes @ 0x0
  3116                           
  3117     00A0                     _isValidFloor$1345:	
  3118                           ; 1 bytes @ 0x0
  3119                           
  3120     00A0                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3121                           ; 1 bytes @ 0x0
  3122                           
  3123     00A0                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3124                           ; 2 bytes @ 0x0
  3125                           
  3126     00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3127                           ; 2 bytes @ 0x0
  3128                           
  3129     00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3130                           ; 2 bytes @ 0x0
  3131                           
  3132     00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3133                           ; 2 bytes @ 0x0
  3134                           
  3135     00A0                     SPI1_ExchangeBlock@blockSize:	
  3136                           ; 2 bytes @ 0x0
  3137                           
  3138     00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3139                           ; 2 bytes @ 0x0
  3140                           
  3141     00A0                     CCP4_SetCallBack@customCallBack:	
  3142                           ; 2 bytes @ 0x0
  3143                           
  3144     00A0                     TMR4_SetInterruptHandler@InterruptHandler:	
  3145                           ; 2 bytes @ 0x0
  3146                           
  3147                           
  3148                           ; 2 bytes @ 0x0
  3149     00A0                     	ds	1
  3150     00A1                     isValidFloor@floor:
  3151                           
  3152                           ; 1 bytes @ 0x1
  3153     00A1                     	ds	1
  3154     00A2                     ??_IOCBF0_SetInterruptHandler:
  3155     00A2                     ??_IOCBF3_SetInterruptHandler:	
  3156                           ; 1 bytes @ 0x2
  3157                           
  3158     00A2                     ??_TMR4_Initialize:	
  3159                           ; 1 bytes @ 0x2
  3160                           
  3161     00A2                     ??_TMR0_Initialize:	
  3162                           ; 1 bytes @ 0x2
  3163                           
  3164     00A2                     ??_CCP4_Initialize:	
  3165                           ; 1 bytes @ 0x2
  3166                           
  3167     00A2                     ??_EUSART_Initialize:	
  3168                           ; 1 bytes @ 0x2
  3169                           
  3170     00A2                     ??_EUSART_SetFramingErrorHandler:	
  3171                           ; 1 bytes @ 0x2
  3172                           
  3173     00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3174                           ; 1 bytes @ 0x2
  3175                           
  3176     00A2                     ??_EUSART_SetErrorHandler:	
  3177                           ; 1 bytes @ 0x2
  3178                           
  3179     00A2                     ??_TMR0_SetInterruptHandler:	
  3180                           ; 1 bytes @ 0x2
  3181                           
  3182     00A2                     ??_CCP4_SetCallBack:	
  3183                           ; 1 bytes @ 0x2
  3184                           
  3185     00A2                     ??_TMR4_SetInterruptHandler:	
  3186                           ; 1 bytes @ 0x2
  3187                           
  3188     00A2                     ??_PIN_MANAGER_Initialize:	
  3189                           ; 1 bytes @ 0x2
  3190                           
  3191     00A2                     ??_SYSTEM_Initialize:	
  3192                           ; 1 bytes @ 0x2
  3193                           
  3194     00A2                     ??_SPI1_ExchangeBlock:	
  3195                           ; 1 bytes @ 0x2
  3196                           
  3197                           
  3198                           ; 1 bytes @ 0x2
  3199     00A2                     	ds	1
  3200     00A3                     SPI1_Open@spi1UniqueConfiguration:
  3201     00A3                     SPI1_ExchangeBlock@block:	
  3202                           ; 1 bytes @ 0x3
  3203                           
  3204                           
  3205                           ; 1 bytes @ 0x3
  3206     00A3                     	ds	1
  3207     00A4                     SPI1_ExchangeBlock@data:
  3208                           
  3209                           ; 1 bytes @ 0x4
  3210     00A4                     	ds	1
  3211     00A5                     ?_txSpi:
  3212     00A5                     txSpi@dataSize:	
  3213                           ; 1 bytes @ 0x5
  3214                           
  3215                           
  3216                           ; 2 bytes @ 0x5
  3217     00A5                     	ds	2
  3218     00A7                     ??_txSpi:
  3219     00A7                     txSpi@data:	
  3220                           ; 1 bytes @ 0x7
  3221                           
  3222                           
  3223                           ; 1 bytes @ 0x7
  3224     00A7                     	ds	1
  3225     00A8                     ??_initMatrix:
  3226                           
  3227                           ; 1 bytes @ 0x8
  3228     00A8                     	ds	1
  3229     00A9                     initMatrix@data:
  3230                           
  3231                           ; 4 bytes @ 0x9
  3232     00A9                     	ds	4
  3233     00AD                     initMatrix@k:
  3234                           
  3235                           ; 1 bytes @ 0xD
  3236     00AD                     	ds	1
  3237     00AE                     initMatrix@i:
  3238                           
  3239                           ; 1 bytes @ 0xE
  3240     00AE                     	ds	1
  3241     00AF                     initMatrix@i_1383:
  3242                           
  3243                           ; 1 bytes @ 0xF
  3244     00AF                     	ds	1
  3245     00B0                     initMatrix@j:
  3246                           
  3247                           ; 1 bytes @ 0x10
  3248     00B0                     	ds	1
  3249     00B1                     ??_main:
  3250                           
  3251                           ; 1 bytes @ 0x11
  3252     00B1                     	ds	2
  3253                           
  3254                           	psect	cstackCOMMON
  3255     0070                     __pcstackCOMMON:
  3256     0070                     ?_chegadaS4:
  3257     0070                     ?_chegadaS3:	
  3258                           ; 1 bytes @ 0x0
  3259                           
  3260     0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3261                           ; 1 bytes @ 0x0
  3262                           
  3263     0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3264                           ; 1 bytes @ 0x0
  3265                           
  3266     0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3267                           ; 1 bytes @ 0x0
  3268                           
  3269     0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272     0070                     ?_IOCBF0_ISR:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275     0070                     ??_IOCBF0_ISR:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278     0070                     ?_IOCBF3_ISR:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281     0070                     ?_SPI1_Initialize:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284     0070                     ?_OSCILLATOR_Initialize:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287     0070                     ?_WDT_Initialize:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290     0070                     ?_FVR_Initialize:	
  3291                           ; 1 bytes @ 0x0
  3292                           
  3293     0070                     ?_TMR4_Initialize:	
  3294                           ; 1 bytes @ 0x0
  3295                           
  3296     0070                     ?_TMR2_Initialize:	
  3297                           ; 1 bytes @ 0x0
  3298                           
  3299     0070                     ?_TMR0_Initialize:	
  3300                           ; 1 bytes @ 0x0
  3301                           
  3302     0070                     ?_CCP4_Initialize:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305     0070                     ?_ADC_Initialize:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308     0070                     ?_TMR1_Initialize:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311     0070                     ?_EUSART_Initialize:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314     0070                     ?_TMR0_ISR:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317     0070                     ?_CCP4_CaptureISR:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320     0070                     ?_TMR4_ISR:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323     0070                     ??_TMR4_ISR:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326     0070                     ?_TMR0_DefaultInterruptHandler:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329     0070                     ??_TMR0_DefaultInterruptHandler:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332     0070                     ?_TMR0_CallBack:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335     0070                     ?_memset:	
  3336                           ; 1 bytes @ 0x0
  3337                           
  3338     0070                     ?_TMR4_DefaultInterruptHandler:	
  3339                           ; 1 bytes @ 0x0
  3340                           
  3341     0070                     ??_TMR4_DefaultInterruptHandler:	
  3342                           ; 1 bytes @ 0x0
  3343                           
  3344     0070                     ?_TMR4_CallBack:	
  3345                           ; 1 bytes @ 0x0
  3346                           
  3347     0070                     ??_TMR4_CallBack:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350     0070                     ?_PWM3_Initialize:	
  3351                           ; 1 bytes @ 0x0
  3352                           
  3353     0070                     ?_CMP2_Initialize:	
  3354                           ; 1 bytes @ 0x0
  3355                           
  3356     0070                     ?_CMP2_ISR:	
  3357                           ; 1 bytes @ 0x0
  3358                           
  3359     0070                     ?_CMP1_Initialize:	
  3360                           ; 1 bytes @ 0x0
  3361                           
  3362     0070                     ?_CMP1_ISR:	
  3363                           ; 1 bytes @ 0x0
  3364                           
  3365     0070                     ?_PIN_MANAGER_Initialize:	
  3366                           ; 1 bytes @ 0x0
  3367                           
  3368     0070                     ?_PIN_MANAGER_IOC:	
  3369                           ; 1 bytes @ 0x0
  3370                           
  3371     0070                     ?_SYSTEM_Initialize:	
  3372                           ; 1 bytes @ 0x0
  3373                           
  3374     0070                     ?_EUSART_is_rx_ready:	
  3375                           ; 1 bytes @ 0x0
  3376                           
  3377     0070                     ?_EUSART_Read:	
  3378                           ; 1 bytes @ 0x0
  3379                           
  3380     0070                     ?_EUSART_Write:	
  3381                           ; 1 bytes @ 0x0
  3382                           
  3383     0070                     ??_EUSART_Write:	
  3384                           ; 1 bytes @ 0x0
  3385                           
  3386     0070                     ?_SPI1_Open:	
  3387                           ; 1 bytes @ 0x0
  3388                           
  3389     0070                     ?_INTERRUPT_InterruptManager:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392     0070                     ?_isValidFloor:	
  3393                           ; 1 bytes @ 0x0
  3394                           
  3395     0070                     ?_sendInfo:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398     0070                     ?_matrixUpdate:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401     0070                     ?_initMatrix:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404     0070                     ?_chegadaS1:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407     0070                     ?_chegadaS2:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410     0070                     ?_main:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413     0070                     ?_CCP4_DefaultCallBack:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416     0070                     ?i1_SPI1_ExchangeBlock:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419     0070                     ?__Umul8_16:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422     0070                     EUSART_Write@txData:	
  3423                           ; 2 bytes @ 0x0
  3424                           
  3425     0070                     __Umul8_16@multiplicand:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428     0070                     CCP4_DefaultCallBack@capturedValue:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431     0070                     memset@c:	
  3432                           ; 2 bytes @ 0x0
  3433                           
  3434     0070                     i1SPI1_ExchangeBlock@blockSize:	
  3435                           ; 2 bytes @ 0x0
  3436                           
  3437                           
  3438                           ; 2 bytes @ 0x0
  3439     0070                     	ds	2
  3440     0072                     ??_CCP4_CaptureISR:
  3441     0072                     ??__Umul8_16:	
  3442                           ; 1 bytes @ 0x2
  3443                           
  3444     0072                     ??_CCP4_DefaultCallBack:	
  3445                           ; 1 bytes @ 0x2
  3446                           
  3447     0072                     ??i1_SPI1_ExchangeBlock:	
  3448                           ; 1 bytes @ 0x2
  3449                           
  3450     0072                     CCP4_CaptureISR@module:	
  3451                           ; 1 bytes @ 0x2
  3452                           
  3453     0072                     memset@n:	
  3454                           ; 2 bytes @ 0x2
  3455                           
  3456                           
  3457                           ; 2 bytes @ 0x2
  3458     0072                     	ds	1
  3459     0073                     i1SPI1_ExchangeBlock@block:
  3460                           
  3461                           ; 1 bytes @ 0x3
  3462     0073                     	ds	1
  3463     0074                     ??_memset:
  3464     0074                     i1SPI1_ExchangeBlock@data:	
  3465                           ; 1 bytes @ 0x4
  3466                           
  3467     0074                     __Umul8_16@product:	
  3468                           ; 1 bytes @ 0x4
  3469                           
  3470                           
  3471                           ; 2 bytes @ 0x4
  3472     0074                     	ds	1
  3473     0075                     ?i1_txSpi:
  3474     0075                     i1txSpi@dataSize:	
  3475                           ; 1 bytes @ 0x5
  3476                           
  3477                           
  3478                           ; 2 bytes @ 0x5
  3479     0075                     	ds	1
  3480     0076                     __Umul8_16@word_mpld:
  3481     0076                     memset@k:	
  3482                           ; 2 bytes @ 0x6
  3483                           
  3484                           
  3485                           ; 2 bytes @ 0x6
  3486     0076                     	ds	1
  3487     0077                     ??i1_txSpi:
  3488     0077                     i1txSpi@data:	
  3489                           ; 1 bytes @ 0x7
  3490                           
  3491                           
  3492                           ; 1 bytes @ 0x7
  3493     0077                     	ds	1
  3494     0078                     ??_matrixUpdate:
  3495     0078                     __Umul8_16@multiplier:	
  3496                           ; 1 bytes @ 0x8
  3497                           
  3498     0078                     memset@dest:	
  3499                           ; 1 bytes @ 0x8
  3500                           
  3501     0078                     matrixUpdate@data:	
  3502                           ; 1 bytes @ 0x8
  3503                           
  3504                           
  3505                           ; 2 bytes @ 0x8
  3506     0078                     	ds	1
  3507     0079                     ??___flmul:
  3508     0079                     memset@s:	
  3509                           ; 1 bytes @ 0x9
  3510                           
  3511                           
  3512                           ; 1 bytes @ 0x9
  3513     0079                     	ds	1
  3514     007A                     ?_bin2bcd:
  3515     007A                     matrixUpdate@i:	
  3516                           ; 2 bytes @ 0xA
  3517                           
  3518     007A                     bin2bcd@binVal:	
  3519                           ; 1 bytes @ 0xA
  3520                           
  3521                           
  3522                           ; 2 bytes @ 0xA
  3523     007A                     	ds	1
  3524     007B                     ??_chegadaS4:
  3525     007B                     ??_chegadaS3:	
  3526                           ; 1 bytes @ 0xB
  3527                           
  3528     007B                     ??_IOCBF3_ISR:	
  3529                           ; 1 bytes @ 0xB
  3530                           
  3531     007B                     ??_CMP2_ISR:	
  3532                           ; 1 bytes @ 0xB
  3533                           
  3534     007B                     ??_CMP1_ISR:	
  3535                           ; 1 bytes @ 0xB
  3536                           
  3537     007B                     ??_PIN_MANAGER_IOC:	
  3538                           ; 1 bytes @ 0xB
  3539                           
  3540     007B                     ??_chegadaS1:	
  3541                           ; 1 bytes @ 0xB
  3542                           
  3543     007B                     ??_chegadaS2:	
  3544                           ; 1 bytes @ 0xB
  3545                           
  3546                           
  3547                           ; 1 bytes @ 0xB
  3548     007B                     	ds	3
  3549     007E                     ??_TMR0_ISR:
  3550     007E                     ??_TMR0_CallBack:	
  3551                           ; 1 bytes @ 0xE
  3552                           
  3553     007E                     ??_INTERRUPT_InterruptManager:	
  3554                           ; 1 bytes @ 0xE
  3555                           
  3556                           
  3557                           	psect	cstackBANK0
  3558     0020                     __pcstackBANK0:	
  3559                           ; 1 bytes @ 0xE
  3560                           
  3561     0020                     ??_bin2bcd:
  3562     0020                     ?___flmul:	
  3563                           ; 1 bytes @ 0x0
  3564                           
  3565     0020                     ___flmul@b:	
  3566                           ; 4 bytes @ 0x0
  3567                           
  3568                           
  3569                           ; 4 bytes @ 0x0
  3570     0020                     	ds	4
  3571     0024                     bin2bcd@i:
  3572     0024                     ___flmul@a:	
  3573                           ; 1 bytes @ 0x4
  3574                           
  3575                           
  3576                           ; 4 bytes @ 0x4
  3577     0024                     	ds	1
  3578     0025                     bin2bcd@dataU:
  3579                           
  3580                           ; 4 bytes @ 0x5
  3581     0025                     	ds	3
  3582     0028                     ___flmul@sign:
  3583                           
  3584                           ; 1 bytes @ 0x8
  3585     0028                     	ds	1
  3586     0029                     ___flmul@grs:
  3587                           
  3588                           ; 4 bytes @ 0x9
  3589     0029                     	ds	4
  3590     002D                     ___flmul@aexp:
  3591                           
  3592                           ; 1 bytes @ 0xD
  3593     002D                     	ds	1
  3594     002E                     ___flmul@bexp:
  3595                           
  3596                           ; 1 bytes @ 0xE
  3597     002E                     	ds	1
  3598     002F                     ___flmul@prod:
  3599                           
  3600                           ; 4 bytes @ 0xF
  3601     002F                     	ds	4
  3602     0033                     ___flmul@temp:
  3603                           
  3604                           ; 2 bytes @ 0x13
  3605     0033                     	ds	2
  3606     0035                     ?___fltol:
  3607     0035                     ___fltol@f1:	
  3608                           ; 4 bytes @ 0x15
  3609                           
  3610                           
  3611                           ; 4 bytes @ 0x15
  3612     0035                     	ds	4
  3613     0039                     ??___fltol:
  3614                           
  3615                           ; 1 bytes @ 0x19
  3616     0039                     	ds	4
  3617     003D                     ___fltol@sign1:
  3618                           
  3619                           ; 1 bytes @ 0x1D
  3620     003D                     	ds	1
  3621     003E                     ___fltol@exp1:
  3622                           
  3623                           ; 1 bytes @ 0x1E
  3624     003E                     	ds	1
  3625     003F                     ??_sendInfo:
  3626                           
  3627                           ; 1 bytes @ 0x1F
  3628     003F                     	ds	2
  3629     0041                     sendInfo@velocidade:
  3630                           
  3631                           ; 2 bytes @ 0x21
  3632     0041                     	ds	2
  3633     0043                     sendInfo@bcd:
  3634                           
  3635                           ; 2 bytes @ 0x23
  3636     0043                     	ds	2
  3637                           
  3638                           	psect	maintext
  3639     049E                     __pmaintext:	
  3640 ;;
  3641 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3642 ;;
  3643 ;; *************** function _main *****************
  3644 ;; Defined at:
  3645 ;;		line 261 in file "main.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : B1F/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3659 ;;      Params:         0       0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0
  3661 ;;      Temps:          0       0       2       0       0       0
  3662 ;;      Totals:         0       0       2       0       0       0
  3663 ;;Total ram usage:        2 bytes
  3664 ;; Hardware stack levels required when called: 10
  3665 ;; This function calls:
  3666 ;;		_EUSART_Read
  3667 ;;		_EUSART_is_rx_ready
  3668 ;;		_IOCBF3_SetInterruptHandler
  3669 ;;		_SPI1_Open
  3670 ;;		_SYSTEM_Initialize
  3671 ;;		_TMR0_SetInterruptHandler
  3672 ;;		_initMatrix
  3673 ;;		_isValidFloor
  3674 ;; This function is called by:
  3675 ;;		Startup code after reset
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679     049E                     _main:	
  3680                           ;psect for function _main
  3681                           
  3682     049E                     l3796:	
  3683                           ;incstack = 0
  3684                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3685                           
  3686                           
  3687                           ;main.c: 264:     SYSTEM_Initialize();
  3688     049E  3187  271A  3184   	fcall	_SYSTEM_Initialize
  3689                           
  3690                           ;main.c: 273:     IOCBF3_SetInterruptHandler(chegadaS1);
  3691     04A1  3072               	movlw	low _chegadaS1
  3692     04A2  0021               	movlb	1	; select bank1
  3693     04A3  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3694     04A4  3007               	movlw	high _chegadaS1
  3695     04A5  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3696     04A6  318E  265C  3184   	fcall	_IOCBF3_SetInterruptHandler
  3697                           
  3698                           ;main.c: 274:     IOCBF3_SetInterruptHandler(chegadaS2);
  3699     04A9  30B1               	movlw	low _chegadaS2
  3700     04AA  0021               	movlb	1	; select bank1
  3701     04AB  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3702     04AC  3006               	movlw	high _chegadaS2
  3703     04AD  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3704     04AE  318E  265C  3184   	fcall	_IOCBF3_SetInterruptHandler
  3705                           
  3706                           ;main.c: 275:     TMR0_SetInterruptHandler(sendInfo);
  3707     04B1  30AB               	movlw	low _sendInfo
  3708     04B2  0021               	movlb	1	; select bank1
  3709     04B3  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3710     04B4  3002               	movlw	high _sendInfo
  3711     04B5  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3712     04B6  318E  2662  3184   	fcall	_TMR0_SetInterruptHandler
  3713     04B9                     l3798:
  3714     04B9  0022               	movlb	2	; select bank2
  3715     04BA  148D               	bsf	13,1	;volatile
  3716     04BB                     l3800:
  3717                           
  3718                           ;main.c: 279:     SPI1_Open(SPI1_DEFAULT);
  3719     04BB  3000               	movlw	0
  3720     04BC  3185  2598  3184   	fcall	_SPI1_Open
  3721     04BF                     l3802:
  3722                           
  3723                           ;main.c: 280:     initMatrix();
  3724     04BF  3185  25F0  3184   	fcall	_initMatrix
  3725     04C2                     l3804:
  3726                           
  3727                           ;main.c: 283:     (INTCONbits.GIE = 1);
  3728     04C2  178B               	bsf	11,7	;volatile
  3729     04C3                     l3806:
  3730                           
  3731                           ;main.c: 286:     (INTCONbits.PEIE = 1);
  3732     04C3  170B               	bsf	11,6	;volatile
  3733     04C4                     l3808:
  3734                           
  3735                           ;main.c: 295:     {;main.c: 297:         if(EUSART_is_rx_ready()){
  3736     04C4  318E  2633  3184   	fcall	_EUSART_is_rx_ready
  3737     04C7  3A00               	xorlw	0
  3738     04C8  1903               	skipnz
  3739     04C9  2CCB               	goto	u2411
  3740     04CA  2CCC               	goto	u2410
  3741     04CB                     u2411:
  3742     04CB  2CC4               	goto	l3808
  3743     04CC                     u2410:
  3744     04CC                     l3810:
  3745                           
  3746                           ;main.c: 298:             rxValue = EUSART_Read();
  3747     04CC  318F  271E  3184   	fcall	_EUSART_Read
  3748     04CF  0020               	movlb	0	; select bank0
  3749     04D0  00E5               	movwf	_rxValue
  3750                           
  3751                           ;main.c: 299:             switch(state){
  3752     04D1  2D0D               	goto	l3840
  3753     04D2                     l3812:
  3754                           
  3755                           ;main.c: 301:                     if(rxValue == '$'){
  3756     04D2  3024               	movlw	36
  3757     04D3  0020               	movlb	0	; select bank0
  3758     04D4  0665               	xorwf	_rxValue,w
  3759     04D5  1D03               	btfss	3,2
  3760     04D6  2CD8               	goto	u2421
  3761     04D7  2CD9               	goto	u2420
  3762     04D8                     u2421:
  3763     04D8  2D24               	goto	l751
  3764     04D9                     u2420:
  3765     04D9                     l3814:
  3766                           
  3767                           ;main.c: 302:                         state = FIRST_NUM;
  3768     04D9  01E6               	clrf	_state
  3769     04DA  0AE6               	incf	_state,f
  3770     04DB  2CC4               	goto	l3808
  3771     04DC                     l3816:
  3772                           
  3773                           ;main.c: 306:                     if(isValidFloor(rxValue)){
  3774     04DC  0020               	movlb	0	; select bank0
  3775     04DD  0865               	movf	_rxValue,w
  3776     04DE  318F  2785  3184   	fcall	_isValidFloor
  3777     04E1  3A00               	xorlw	0
  3778     04E2  1903               	skipnz
  3779     04E3  2CE5               	goto	u2431
  3780     04E4  2CE6               	goto	u2430
  3781     04E5                     u2431:
  3782     04E5  2CED               	goto	l3822
  3783     04E6                     u2430:
  3784     04E6                     l3818:
  3785                           
  3786                           ;main.c: 307:                         oTemp = rxValue - 0x30;
  3787     04E6  0020               	movlb	0	; select bank0
  3788     04E7  0865               	movf	_rxValue,w
  3789     04E8  3ED0               	addlw	208
  3790     04E9  00DF               	movwf	_oTemp
  3791     04EA                     l3820:
  3792                           
  3793                           ;main.c: 308:                         state = SECOND_NUM;
  3794     04EA  3002               	movlw	2
  3795     04EB  00E6               	movwf	_state
  3796                           
  3797                           ;main.c: 309:                     }else{
  3798     04EC  2CC4               	goto	l3808
  3799     04ED                     l3822:
  3800                           
  3801                           ;main.c: 310:                         state = START;
  3802     04ED  0020               	movlb	0	; select bank0
  3803     04EE  01E6               	clrf	_state
  3804     04EF  2CC4               	goto	l3808
  3805     04F0                     l3824:
  3806                           
  3807                           ;main.c: 314:                     if(isValidFloor(rxValue)){
  3808     04F0  0020               	movlb	0	; select bank0
  3809     04F1  0865               	movf	_rxValue,w
  3810     04F2  318F  2785  3184   	fcall	_isValidFloor
  3811     04F5  3A00               	xorlw	0
  3812     04F6  1903               	skipnz
  3813     04F7  2CF9               	goto	u2441
  3814     04F8  2CFA               	goto	u2440
  3815     04F9                     u2441:
  3816     04F9  2CED               	goto	l3822
  3817     04FA                     u2440:
  3818     04FA                     l3826:
  3819                           
  3820                           ;main.c: 315:                         dTemp = rxValue - 0x30;
  3821     04FA  0020               	movlb	0	; select bank0
  3822     04FB  0865               	movf	_rxValue,w
  3823     04FC  3ED0               	addlw	208
  3824     04FD  00DD               	movwf	_dTemp
  3825     04FE                     l3828:
  3826                           
  3827                           ;main.c: 316:                         state = CR;
  3828     04FE  3003               	movlw	3
  3829     04FF  00E6               	movwf	_state
  3830                           
  3831                           ;main.c: 317:                     }else{
  3832     0500  2CC4               	goto	l3808
  3833     0501                     l3832:
  3834                           
  3835                           ;main.c: 322:                     if(rxValue == 0x0D){
  3836     0501  300D               	movlw	13
  3837     0502  0020               	movlb	0	; select bank0
  3838     0503  0665               	xorwf	_rxValue,w
  3839     0504  1D03               	btfss	3,2
  3840     0505  2D07               	goto	u2451
  3841     0506  2D08               	goto	u2450
  3842     0507                     u2451:
  3843     0507  2CED               	goto	l3822
  3844     0508                     u2450:
  3845     0508                     l3834:
  3846                           
  3847                           ;main.c: 323:                         origem = oTemp;
  3848     0508  085F               	movf	_oTemp,w
  3849     0509  00E0               	movwf	_origem
  3850                           
  3851                           ;main.c: 324:                         destino = dTemp;
  3852     050A  085D               	movf	_dTemp,w
  3853     050B  00DE               	movwf	_destino
  3854     050C  2CED               	goto	l3822
  3855     050D                     l3840:
  3856     050D  0866               	movf	_state,w
  3857     050E  0021               	movlb	1	; select bank1
  3858     050F  00B1               	movwf	??_main^(0+128)
  3859     0510  01B2               	clrf	(??_main^(0+128)+1)
  3860                           
  3861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3862                           ; Switch size 1, requested type "simple"
  3863                           ; Number of cases is 1, Range of values is 0 to 0
  3864                           ; switch strategies available:
  3865                           ; Name         Instructions Cycles
  3866                           ; simple_byte            4     3 (average)
  3867                           ; direct_byte            8     6 (fixed)
  3868                           ; jumptable            260     6 (fixed)
  3869                           ;	Chosen strategy is simple_byte
  3870     0511  0832               	movf	(??_main+1)^(0+128),w
  3871     0512  3A00               	xorlw	0	; case 0
  3872     0513  1903               	skipnz
  3873     0514  2D16               	goto	l3878
  3874     0515  2CED               	goto	l3822
  3875     0516                     l3878:
  3876                           
  3877                           ; Switch size 1, requested type "simple"
  3878                           ; Number of cases is 4, Range of values is 0 to 3
  3879                           ; switch strategies available:
  3880                           ; Name         Instructions Cycles
  3881                           ; simple_byte           13     7 (average)
  3882                           ; direct_byte           14     6 (fixed)
  3883                           ; jumptable            260     6 (fixed)
  3884                           ;	Chosen strategy is simple_byte
  3885     0516  0831               	movf	??_main^(0+128),w
  3886     0517  3A00               	xorlw	0	; case 0
  3887     0518  1903               	skipnz
  3888     0519  2CD2               	goto	l3812
  3889     051A  3A01               	xorlw	1	; case 1
  3890     051B  1903               	skipnz
  3891     051C  2CDC               	goto	l3816
  3892     051D  3A03               	xorlw	3	; case 2
  3893     051E  1903               	skipnz
  3894     051F  2CF0               	goto	l3824
  3895     0520  3A01               	xorlw	1	; case 3
  3896     0521  1903               	skipnz
  3897     0522  2D01               	goto	l3832
  3898     0523  2CED               	goto	l3822
  3899     0524                     l751:	
  3900                           ;main.c: 332:         }
  3901                           
  3902     0524  2CC4               	goto	l3808
  3903     0525  3180  2856         	ljmp	start
  3904     0527                     __end_of_main:
  3905                           
  3906                           	psect	text1
  3907     0F85                     __ptext1:	
  3908 ;; *************** function _isValidFloor *****************
  3909 ;; Defined at:
  3910 ;;		line 52 in file "main.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  floor           1    wreg     unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  floor           1    1[BANK1 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      _Bool 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3924 ;;      Params:         0       0       0       0       0       0
  3925 ;;      Locals:         0       0       2       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0
  3927 ;;      Totals:         0       0       2       0       0       0
  3928 ;;Total ram usage:        2 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 7
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938     0F85                     _isValidFloor:	
  3939                           ;psect for function _isValidFloor
  3940                           
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _isValidFloor: [wreg+status,2]
  3944                           ;isValidFloor@floor stored from wreg
  3945     0F85  0021               	movlb	1	; select bank1
  3946     0F86  00A1               	movwf	isValidFloor@floor^(0+128)
  3947     0F87                     l3744:
  3948                           
  3949                           ;main.c: 53:     return floor >= '0' && floor <= '3';
  3950     0F87  01A0               	clrf	_isValidFloor$1345^(0+128)
  3951     0F88                     l3746:
  3952     0F88  3030               	movlw	48
  3953     0F89  0221               	subwf	isValidFloor@floor^(0+128),w
  3954     0F8A  1C03               	skipc
  3955     0F8B  2F8D               	goto	u2361
  3956     0F8C  2F8E               	goto	u2360
  3957     0F8D                     u2361:
  3958     0F8D  2F96               	goto	l3752
  3959     0F8E                     u2360:
  3960     0F8E                     l3748:
  3961     0F8E  3034               	movlw	52
  3962     0F8F  0221               	subwf	isValidFloor@floor^(0+128),w
  3963     0F90  1803               	skipnc
  3964     0F91  2F93               	goto	u2371
  3965     0F92  2F94               	goto	u2370
  3966     0F93                     u2371:
  3967     0F93  2F96               	goto	l3752
  3968     0F94                     u2370:
  3969     0F94                     l3750:
  3970     0F94  01A0               	clrf	_isValidFloor$1345^(0+128)
  3971     0F95  0AA0               	incf	_isValidFloor$1345^(0+128),f
  3972     0F96                     l3752:
  3973     0F96  0820               	movf	_isValidFloor$1345^(0+128),w
  3974     0F97                     l686:
  3975     0F97  0008               	return
  3976     0F98                     __end_of_isValidFloor:
  3977                           
  3978                           	psect	text2
  3979     05F0                     __ptext2:	
  3980 ;; *************** function _initMatrix *****************
  3981 ;; Defined at:
  3982 ;;		line 145 in file "main.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  j               1   16[BANK1 ] unsigned char 
  3987 ;;  i               1   15[BANK1 ] unsigned char 
  3988 ;;  i               1   14[BANK1 ] unsigned char 
  3989 ;;  data            4    9[BANK1 ] unsigned char [4]
  3990 ;;  k               1   13[BANK1 ] unsigned char 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4000 ;;      Params:         0       0       0       0       0       0
  4001 ;;      Locals:         0       0       8       0       0       0
  4002 ;;      Temps:          0       0       1       0       0       0
  4003 ;;      Totals:         0       0       9       0       0       0
  4004 ;;Total ram usage:        9 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 9
  4007 ;; This function calls:
  4008 ;;		_txSpi
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014     05F0                     _initMatrix:	
  4015                           ;psect for function _initMatrix
  4016                           
  4017     05F0                     l3756:	
  4018                           ;incstack = 0
  4019                           ; Regs used in _initMatrix: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4020                           
  4021                           
  4022                           ;main.c: 146:     uint8_t data[4];;main.c: 147:     uint8_t k=0;
  4023     05F0  0021               	movlb	1	; select bank1
  4024     05F1  01AD               	clrf	initMatrix@k^(0+128)
  4025                           
  4026                           ;main.c: 148:    for(uint8_t i =0; i<8; i++){
  4027     05F2  01AE               	clrf	initMatrix@i^(0+128)
  4028     05F3                     l3762:
  4029                           
  4030                           ;main.c: 149:             MatrixLed[i] = 0;
  4031     05F3  082E               	movf	initMatrix@i^(0+128),w
  4032     05F4  3EC1               	addlw	(low (_MatrixLed| 0))& (0+255)
  4033     05F5  0086               	movwf	6
  4034     05F6  0187               	clrf	7
  4035     05F7  0181               	clrf	1
  4036     05F8                     l3764:
  4037                           
  4038                           ;main.c: 150:         }
  4039     05F8  3001               	movlw	1
  4040     05F9  00A8               	movwf	??_initMatrix^(0+128)
  4041     05FA  0828               	movf	??_initMatrix^(0+128),w
  4042     05FB  07AE               	addwf	initMatrix@i^(0+128),f
  4043     05FC                     l3766:
  4044     05FC  3008               	movlw	8
  4045     05FD  022E               	subwf	initMatrix@i^(0+128),w
  4046     05FE  1C03               	skipc
  4047     05FF  2E01               	goto	u2381
  4048     0600  2E02               	goto	u2380
  4049     0601                     u2381:
  4050     0601  2DF3               	goto	l3762
  4051     0602                     u2380:
  4052     0602                     l3768:
  4053                           
  4054                           ;main.c: 151:     for(uint8_t i=0;i<6;i++){
  4055     0602  01AF               	clrf	initMatrix@i_1383^(0+128)
  4056     0603                     l3774:
  4057                           
  4058                           ;main.c: 152:         for(uint8_t j=0;j<4;j=j+2){
  4059     0603  01B0               	clrf	initMatrix@j^(0+128)
  4060     0604                     l3780:
  4061                           
  4062                           ;main.c: 153:             data[j]= matrix_conf[k];
  4063     0604  0830               	movf	initMatrix@j^(0+128),w
  4064     0605  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4065     0606  0086               	movwf	6
  4066     0607  0187               	clrf	7
  4067     0608  082D               	movf	initMatrix@k^(0+128),w
  4068     0609  3EFF               	addlw	low (_matrix_conf| (0+32768))
  4069     060A  0084               	movwf	4
  4070     060B  3087               	movlw	high (_matrix_conf| (0+32768))
  4071     060C  1803               	skipnc
  4072     060D  3E01               	addlw	1
  4073     060E  0085               	movwf	5
  4074     060F  0800               	movf	0,w	;code access
  4075     0610  0081               	movwf	1
  4076                           
  4077                           ;main.c: 154:             data[j+1]= matrix_conf[k+1];
  4078     0611  0830               	movf	initMatrix@j^(0+128),w
  4079     0612  3E01               	addlw	1
  4080     0613  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4081     0614  0086               	movwf	6
  4082     0615  0187               	clrf	7
  4083     0616  082D               	movf	initMatrix@k^(0+128),w
  4084     0617  3E00               	addlw	low ((_matrix_conf+1)| (0+32768))
  4085     0618  0084               	movwf	4
  4086     0619  3088               	movlw	high ((_matrix_conf+1)| (0+32768))
  4087     061A  1803               	skipnc
  4088     061B  3E01               	addlw	1
  4089     061C  0085               	movwf	5
  4090     061D  0800               	movf	0,w	;code access
  4091     061E  0081               	movwf	1
  4092     061F                     l3782:
  4093                           
  4094                           ;main.c: 155:         }
  4095     061F  0830               	movf	initMatrix@j^(0+128),w
  4096     0620  3E02               	addlw	2
  4097     0621  00B0               	movwf	initMatrix@j^(0+128)
  4098     0622                     l3784:
  4099     0622  3004               	movlw	4
  4100     0623  0230               	subwf	initMatrix@j^(0+128),w
  4101     0624  1C03               	skipc
  4102     0625  2E27               	goto	u2391
  4103     0626  2E28               	goto	u2390
  4104     0627                     u2391:
  4105     0627  2E04               	goto	l3780
  4106     0628                     u2390:
  4107     0628                     l3786:
  4108                           
  4109                           ;main.c: 156:         k=k+2;
  4110     0628  082D               	movf	initMatrix@k^(0+128),w
  4111     0629  3E02               	addlw	2
  4112     062A  00AD               	movwf	initMatrix@k^(0+128)
  4113     062B                     l3788:
  4114                           
  4115                           ;main.c: 157:         txSpi( data, 4);
  4116     062B  3004               	movlw	4
  4117     062C  00A5               	movwf	txSpi@dataSize^(0+128)
  4118     062D  3000               	movlw	0
  4119     062E  00A6               	movwf	(txSpi@dataSize^(0+128)+1)
  4120     062F  30A9               	movlw	(low (initMatrix@data| 0))& (0+255)
  4121     0630  318F  272D  3185   	fcall	_txSpi
  4122     0633                     l3792:
  4123                           
  4124                           ;main.c: 161:     }
  4125     0633  3001               	movlw	1
  4126     0634  0021               	movlb	1	; select bank1
  4127     0635  00A8               	movwf	??_initMatrix^(0+128)
  4128     0636  0828               	movf	??_initMatrix^(0+128),w
  4129     0637  07AF               	addwf	initMatrix@i_1383^(0+128),f
  4130     0638                     l3794:
  4131     0638  3006               	movlw	6
  4132     0639  022F               	subwf	initMatrix@i_1383^(0+128),w
  4133     063A  1C03               	skipc
  4134     063B  2E3D               	goto	u2401
  4135     063C  2E3E               	goto	u2400
  4136     063D                     u2401:
  4137     063D  2E03               	goto	l3774
  4138     063E                     u2400:
  4139     063E                     l723:
  4140     063E  0008               	return
  4141     063F                     __end_of_initMatrix:
  4142                           
  4143                           	psect	text3
  4144     0F2D                     __ptext3:	
  4145 ;; *************** function _txSpi *****************
  4146 ;; Defined at:
  4147 ;;		line 117 in file "main.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  data            1    wreg     PTR unsigned char 
  4150 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4151 ;;  dataSize        2    5[BANK1 ] unsigned int 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  data            1    7[BANK1 ] PTR unsigned char 
  4154 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4164 ;;      Params:         0       0       2       0       0       0
  4165 ;;      Locals:         0       0       1       0       0       0
  4166 ;;      Temps:          0       0       0       0       0       0
  4167 ;;      Totals:         0       0       3       0       0       0
  4168 ;;Total ram usage:        3 bytes
  4169 ;; Hardware stack levels used: 1
  4170 ;; Hardware stack levels required when called: 8
  4171 ;; This function calls:
  4172 ;;		_SPI1_ExchangeBlock
  4173 ;; This function is called by:
  4174 ;;		_initMatrix
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178     0F2D                     _txSpi:	
  4179                           ;psect for function _txSpi
  4180                           
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in _txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4184                           ;txSpi@data stored from wreg
  4185     0F2D  0021               	movlb	1	; select bank1
  4186     0F2E  00A7               	movwf	txSpi@data^(0+128)
  4187     0F2F                     l700:	
  4188                           ;main.c: 118:     do { LATBbits.LATB1 = 0; } while(0);
  4189                           
  4190     0F2F  0022               	movlb	2	; select bank2
  4191     0F30  108D               	bcf	13,1	;volatile
  4192     0F31                     l3708:
  4193                           
  4194                           ;main.c: 119:     SPI1_ExchangeBlock(data,dataSize);
  4195     0F31  0021               	movlb	1	; select bank1
  4196     0F32  0826               	movf	(txSpi@dataSize+1)^(0+128),w
  4197     0F33  00A1               	movwf	(SPI1_ExchangeBlock@blockSize+1)^(0+128)
  4198     0F34  0825               	movf	txSpi@dataSize^(0+128),w
  4199     0F35  00A0               	movwf	SPI1_ExchangeBlock@blockSize^(0+128)
  4200     0F36  0827               	movf	txSpi@data^(0+128),w
  4201     0F37  3187  2748  318F   	fcall	_SPI1_ExchangeBlock
  4202     0F3A                     l3710:
  4203     0F3A  0022               	movlb	2	; select bank2
  4204     0F3B  148D               	bsf	13,1	;volatile
  4205     0F3C                     l704:
  4206     0F3C  0008               	return
  4207     0F3D                     __end_of_txSpi:
  4208                           
  4209                           	psect	text4
  4210     0748                     __ptext4:	
  4211 ;; *************** function _SPI1_ExchangeBlock *****************
  4212 ;; Defined at:
  4213 ;;		line 100 in file "mcc_generated_files/spi1.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  block           1    wreg     PTR void 
  4216 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4217 ;;  blockSize       2    0[BANK1 ] unsigned int 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  block           1    3[BANK1 ] PTR void 
  4220 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4221 ;;  data            1    4[BANK1 ] PTR unsigned char 
  4222 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4232 ;;      Params:         0       0       2       0       0       0
  4233 ;;      Locals:         0       0       2       0       0       0
  4234 ;;      Temps:          0       0       1       0       0       0
  4235 ;;      Totals:         0       0       5       0       0       0
  4236 ;;Total ram usage:        5 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 7
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_txSpi
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246     0748                     _SPI1_ExchangeBlock:	
  4247                           ;psect for function _SPI1_ExchangeBlock
  4248                           
  4249                           
  4250                           ;incstack = 0
  4251                           ; Regs used in _SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4252                           ;SPI1_ExchangeBlock@block stored from wreg
  4253     0748  0021               	movlb	1	; select bank1
  4254     0749  00A3               	movwf	SPI1_ExchangeBlock@block^(0+128)
  4255     074A                     l3540:
  4256                           
  4257                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  4258     074A  0823               	movf	SPI1_ExchangeBlock@block^(0+128),w
  4259     074B  00A4               	movwf	SPI1_ExchangeBlock@data^(0+128)
  4260                           
  4261                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4262     074C  2F65               	goto	l3548
  4263     074D                     l3542:
  4264                           
  4265                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  4266     074D  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4267     074E  0086               	movwf	6
  4268     074F  0187               	clrf	7
  4269     0750  0801               	movf	1,w
  4270     0751  0024               	movlb	4	; select bank4
  4271     0752  0091               	movwf	17	;volatile
  4272     0753                     l436:	
  4273                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  4274                           
  4275     0753  0020               	movlb	0	; select bank0
  4276     0754  1D91               	btfss	17,3	;volatile
  4277     0755  2F57               	goto	u2311
  4278     0756  2F58               	goto	u2310
  4279     0757                     u2311:
  4280     0757  2F53               	goto	l436
  4281     0758                     u2310:
  4282     0758                     l438:
  4283                           
  4284                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  4285     0758  1191               	bcf	17,3	;volatile
  4286     0759                     l3544:
  4287                           
  4288                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  4289     0759  0021               	movlb	1	; select bank1
  4290     075A  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4291     075B  0086               	movwf	6
  4292     075C  0187               	clrf	7
  4293     075D  0024               	movlb	4	; select bank4
  4294     075E  0811               	movf	17,w	;volatile
  4295     075F  0081               	movwf	1
  4296     0760                     l3546:
  4297     0760  3001               	movlw	1
  4298     0761  0021               	movlb	1	; select bank1
  4299     0762  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4300     0763  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4301     0764  07A4               	addwf	SPI1_ExchangeBlock@data^(0+128),f
  4302     0765                     l3548:
  4303                           
  4304                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4305     0765  3001               	movlw	1
  4306     0766  02A0               	subwf	SPI1_ExchangeBlock@blockSize^(0+128),f
  4307     0767  3000               	movlw	0
  4308     0768  3BA1               	subwfb	(SPI1_ExchangeBlock@blockSize+1)^(0+128),f
  4309     0769  0A20               	incf	SPI1_ExchangeBlock@blockSize^(0+128),w
  4310     076A  1D03               	skipz
  4311     076B  2F70               	goto	u2321
  4312     076C  0A21               	incf	(SPI1_ExchangeBlock@blockSize+1)^(0+128),w
  4313     076D  1D03               	btfss	3,2
  4314     076E  2F70               	goto	u2321
  4315     076F  2F71               	goto	u2320
  4316     0770                     u2321:
  4317     0770  2F4D               	goto	l3542
  4318     0771                     u2320:
  4319     0771                     l440:
  4320     0771  0008               	return
  4321     0772                     __end_of_SPI1_ExchangeBlock:
  4322                           
  4323                           	psect	text5
  4324     071A                     __ptext5:	
  4325 ;; *************** function _SYSTEM_Initialize *****************
  4326 ;; Defined at:
  4327 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0, pclath, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4341 ;;      Params:         0       0       0       0       0       0
  4342 ;;      Locals:         0       0       0       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0
  4344 ;;      Totals:         0       0       0       0       0       0
  4345 ;;Total ram usage:        0 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 9
  4348 ;; This function calls:
  4349 ;;		_ADC_Initialize
  4350 ;;		_CCP4_Initialize
  4351 ;;		_CMP1_Initialize
  4352 ;;		_CMP2_Initialize
  4353 ;;		_EUSART_Initialize
  4354 ;;		_FVR_Initialize
  4355 ;;		_OSCILLATOR_Initialize
  4356 ;;		_PIN_MANAGER_Initialize
  4357 ;;		_PWM3_Initialize
  4358 ;;		_SPI1_Initialize
  4359 ;;		_TMR0_Initialize
  4360 ;;		_TMR1_Initialize
  4361 ;;		_TMR2_Initialize
  4362 ;;		_TMR4_Initialize
  4363 ;;		_WDT_Initialize
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369     071A                     _SYSTEM_Initialize:	
  4370                           ;psect for function _SYSTEM_Initialize
  4371                           
  4372     071A                     l3712:	
  4373                           ;incstack = 0
  4374                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4375                           
  4376                           
  4377                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  4378     071A  318E  26A7  3187   	fcall	_SPI1_Initialize
  4379                           
  4380                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4381     071D  3186  26E9  3187   	fcall	_PIN_MANAGER_Initialize
  4382                           
  4383                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4384     0720  318E  2674  3187   	fcall	_OSCILLATOR_Initialize
  4385                           
  4386                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4387     0723  318E  262F  3187   	fcall	_WDT_Initialize
  4388                           
  4389                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  4390     0726  318E  262B  3187   	fcall	_FVR_Initialize
  4391                           
  4392                           ;mcc_generated_files/mcc.c: 58:     CMP2_Initialize();
  4393     0729  318E  26BE  3187   	fcall	_CMP2_Initialize
  4394                           
  4395                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  4396     072C  318F  2772  3187   	fcall	_TMR4_Initialize
  4397                           
  4398                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  4399     072F  318E  2683  3187   	fcall	_TMR2_Initialize
  4400                           
  4401                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  4402     0732  318F  2798  3187   	fcall	_TMR0_Initialize
  4403                           
  4404                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  4405     0735  318E  26B2  3187   	fcall	_CMP1_Initialize
  4406                           
  4407                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  4408     0738  318F  2760  3187   	fcall	_CCP4_Initialize
  4409                           
  4410                           ;mcc_generated_files/mcc.c: 64:     ADC_Initialize();
  4411     073B  318E  267B  3187   	fcall	_ADC_Initialize
  4412                           
  4413                           ;mcc_generated_files/mcc.c: 65:     PWM3_Initialize();
  4414     073E  318E  2694  3187   	fcall	_PWM3_Initialize
  4415                           
  4416                           ;mcc_generated_files/mcc.c: 66:     TMR1_Initialize();
  4417     0741  318E  26F2  3187   	fcall	_TMR1_Initialize
  4418                           
  4419                           ;mcc_generated_files/mcc.c: 67:     EUSART_Initialize();
  4420     0744  3187  27C2  3187   	fcall	_EUSART_Initialize
  4421     0747                     l255:
  4422     0747  0008               	return
  4423     0748                     __end_of_SYSTEM_Initialize:
  4424                           
  4425                           	psect	text6
  4426     0E2F                     __ptext6:	
  4427 ;; *************** function _WDT_Initialize *****************
  4428 ;; Defined at:
  4429 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4443 ;;      Params:         0       0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0
  4446 ;;      Totals:         0       0       0       0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 7
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_SYSTEM_Initialize
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457     0E2F                     _WDT_Initialize:	
  4458                           ;psect for function _WDT_Initialize
  4459                           
  4460     0E2F                     l3630:	
  4461                           ;incstack = 0
  4462                           ; Regs used in _WDT_Initialize: [wreg]
  4463                           
  4464                           
  4465                           ;mcc_generated_files/mcc.c: 83:     WDTCON = 0x16;
  4466     0E2F  3016               	movlw	22
  4467     0E30  0021               	movlb	1	; select bank1
  4468     0E31  0097               	movwf	23	;volatile
  4469     0E32                     l261:
  4470     0E32  0008               	return
  4471     0E33                     __end_of_WDT_Initialize:
  4472                           
  4473                           	psect	text7
  4474     0F72                     __ptext7:	
  4475 ;; *************** function _TMR4_Initialize *****************
  4476 ;; Defined at:
  4477 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0, pclath, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4491 ;;      Params:         0       0       0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0
  4494 ;;      Totals:         0       0       0       0       0       0
  4495 ;;Total ram usage:        0 bytes
  4496 ;; Hardware stack levels used: 1
  4497 ;; Hardware stack levels required when called: 8
  4498 ;; This function calls:
  4499 ;;		_TMR4_SetInterruptHandler
  4500 ;; This function is called by:
  4501 ;;		_SYSTEM_Initialize
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505     0F72                     _TMR4_Initialize:	
  4506                           ;psect for function _TMR4_Initialize
  4507                           
  4508     0F72                     l3634:	
  4509                           ;incstack = 0
  4510                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4511                           
  4512                           
  4513                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF3;
  4514     0F72  30F3               	movlw	243
  4515     0F73  0028               	movlb	8	; select bank8
  4516     0F74  0096               	movwf	22	;volatile
  4517     0F75                     l3636:
  4518                           
  4519                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  4520     0F75  0195               	clrf	21	;volatile
  4521     0F76                     l3638:
  4522                           
  4523                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  4524     0F76  0020               	movlb	0	; select bank0
  4525     0F77  1093               	bcf	19,1	;volatile
  4526     0F78                     l3640:
  4527                           
  4528                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  4529     0F78  0021               	movlb	1	; select bank1
  4530     0F79  1493               	bsf	19,1	;volatile
  4531     0F7A                     l3642:
  4532                           
  4533                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  4534     0F7A  3002               	movlw	low _TMR4_DefaultInterruptHandler
  4535     0F7B  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4536     0F7C  3000               	movlw	high _TMR4_DefaultInterruptHandler
  4537     0F7D  00A1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4538     0F7E  318E  2668  318F   	fcall	_TMR4_SetInterruptHandler
  4539     0F81                     l3644:
  4540                           
  4541                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x7F;
  4542     0F81  307F               	movlw	127
  4543     0F82  0028               	movlb	8	; select bank8
  4544     0F83  0097               	movwf	23	;volatile
  4545     0F84                     l827:
  4546     0F84  0008               	return
  4547     0F85                     __end_of_TMR4_Initialize:
  4548                           
  4549                           	psect	text8
  4550     0E68                     __ptext8:	
  4551 ;; *************** function _TMR4_SetInterruptHandler *****************
  4552 ;; Defined at:
  4553 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4556 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4568 ;;      Params:         0       0       2       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0
  4570 ;;      Temps:          0       0       0       0       0       0
  4571 ;;      Totals:         0       0       2       0       0       0
  4572 ;;Total ram usage:        2 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 7
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_TMR4_Initialize
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582     0E68                     _TMR4_SetInterruptHandler:	
  4583                           ;psect for function _TMR4_SetInterruptHandler
  4584                           
  4585     0E68                     l3554:	
  4586                           ;incstack = 0
  4587                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  4588                           
  4589                           
  4590                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  4591     0E68  0021               	movlb	1	; select bank1
  4592     0E69  0821               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4593     0E6A  00B4               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  4594     0E6B  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  4595     0E6C  00B3               	movwf	_TMR4_InterruptHandler^(0+128)
  4596     0E6D                     l855:
  4597     0E6D  0008               	return
  4598     0E6E                     __end_of_TMR4_SetInterruptHandler:
  4599                           
  4600                           	psect	text9
  4601     0E83                     __ptext9:	
  4602 ;; *************** function _TMR2_Initialize *****************
  4603 ;; Defined at:
  4604 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;		None
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4618 ;;      Params:         0       0       0       0       0       0
  4619 ;;      Locals:         0       0       0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0
  4621 ;;      Totals:         0       0       0       0       0       0
  4622 ;;Total ram usage:        0 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; Hardware stack levels required when called: 7
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_SYSTEM_Initialize
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632     0E83                     _TMR2_Initialize:	
  4633                           ;psect for function _TMR2_Initialize
  4634                           
  4635     0E83                     l3646:	
  4636                           ;incstack = 0
  4637                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4638                           
  4639                           
  4640                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4641     0E83  30FF               	movlw	255
  4642     0E84  0020               	movlb	0	; select bank0
  4643     0E85  009B               	movwf	27	;volatile
  4644     0E86                     l3648:
  4645                           
  4646                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4647     0E86  019A               	clrf	26	;volatile
  4648     0E87                     l3650:
  4649                           
  4650                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4651     0E87  1091               	bcf	17,1	;volatile
  4652     0E88                     l3652:
  4653                           
  4654                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4655     0E88  3004               	movlw	4
  4656     0E89  009C               	movwf	28	;volatile
  4657     0E8A                     l550:
  4658     0E8A  0008               	return
  4659     0E8B                     __end_of_TMR2_Initialize:
  4660                           
  4661                           	psect	text10
  4662     0EF2                     __ptext10:	
  4663 ;; *************** function _TMR1_Initialize *****************
  4664 ;; Defined at:
  4665 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4679 ;;      Params:         0       0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0
  4682 ;;      Totals:         0       0       0       0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 7
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_SYSTEM_Initialize
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693     0EF2                     _TMR1_Initialize:	
  4694                           ;psect for function _TMR1_Initialize
  4695                           
  4696     0EF2                     l3684:	
  4697                           ;incstack = 0
  4698                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  4699                           
  4700                           
  4701                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  4702     0EF2  0020               	movlb	0	; select bank0
  4703     0EF3  0199               	clrf	25	;volatile
  4704     0EF4                     l3686:
  4705                           
  4706                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  4707     0EF4  300B               	movlw	11
  4708     0EF5  0097               	movwf	23	;volatile
  4709     0EF6                     l3688:
  4710                           
  4711                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  4712     0EF6  30DC               	movlw	220
  4713     0EF7  0096               	movwf	22	;volatile
  4714     0EF8                     l3690:
  4715                           
  4716                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  4717     0EF8  1011               	bcf	17,0	;volatile
  4718     0EF9                     l3692:
  4719                           
  4720                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4721     0EF9  0817               	movf	23,w	;volatile
  4722     0EFA  00CE               	movwf	_timer1ReloadVal+1	;volatile
  4723     0EFB  0816               	movf	22,w	;volatile
  4724     0EFC  00CD               	movwf	_timer1ReloadVal	;volatile
  4725     0EFD                     l3694:
  4726                           
  4727                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  4728     0EFD  3031               	movlw	49
  4729     0EFE  0098               	movwf	24	;volatile
  4730     0EFF                     l511:
  4731     0EFF  0008               	return
  4732     0F00                     __end_of_TMR1_Initialize:
  4733                           
  4734                           	psect	text11
  4735     0F98                     __ptext11:	
  4736 ;; *************** function _TMR0_Initialize *****************
  4737 ;; Defined at:
  4738 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4752 ;;      Params:         0       0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0
  4755 ;;      Totals:         0       0       0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 8
  4759 ;; This function calls:
  4760 ;;		_TMR0_SetInterruptHandler
  4761 ;; This function is called by:
  4762 ;;		_SYSTEM_Initialize
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766     0F98                     _TMR0_Initialize:	
  4767                           ;psect for function _TMR0_Initialize
  4768                           
  4769     0F98                     l3654:	
  4770                           ;incstack = 0
  4771                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4772                           
  4773                           
  4774                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  4775     0F98  0021               	movlb	1	; select bank1
  4776     0F99  0815               	movf	21,w	;volatile
  4777     0F9A  39C0               	andlw	192
  4778     0F9B  3817               	iorlw	23
  4779     0F9C  0095               	movwf	21	;volatile
  4780     0F9D                     l3656:
  4781                           
  4782                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  4783     0F9D  3016               	movlw	22
  4784     0F9E  0020               	movlb	0	; select bank0
  4785     0F9F  0095               	movwf	21	;volatile
  4786     0FA0                     l3658:
  4787                           
  4788                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  4789     0FA0  3016               	movlw	22
  4790     0FA1  00D7               	movwf	_timer0ReloadVal	;volatile
  4791     0FA2                     l3660:
  4792                           
  4793                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  4794     0FA2  110B               	bcf	11,2	;volatile
  4795     0FA3                     l3662:
  4796                           
  4797                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  4798     0FA3  168B               	bsf	11,5	;volatile
  4799     0FA4                     l3664:
  4800                           
  4801                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4802     0FA4  302A               	movlw	low _TMR0_DefaultInterruptHandler
  4803     0FA5  0021               	movlb	1	; select bank1
  4804     0FA6  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4805     0FA7  300E               	movlw	high _TMR0_DefaultInterruptHandler
  4806     0FA8  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4807     0FA9  318E  2662  318F   	fcall	_TMR0_SetInterruptHandler
  4808     0FAC                     l588:
  4809     0FAC  0008               	return
  4810     0FAD                     __end_of_TMR0_Initialize:
  4811                           
  4812                           	psect	text12
  4813     0E62                     __ptext12:	
  4814 ;; *************** function _TMR0_SetInterruptHandler *****************
  4815 ;; Defined at:
  4816 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4819 ;;		 -> sendInfo(1), TMR0_DefaultInterruptHandler(1), 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4831 ;;      Params:         0       0       2       0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0
  4833 ;;      Temps:          0       0       0       0       0       0
  4834 ;;      Totals:         0       0       2       0       0       0
  4835 ;;Total ram usage:        2 bytes
  4836 ;; Hardware stack levels used: 1
  4837 ;; Hardware stack levels required when called: 7
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_TMR0_Initialize
  4842 ;;		_main
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846     0E62                     _TMR0_SetInterruptHandler:	
  4847                           ;psect for function _TMR0_SetInterruptHandler
  4848                           
  4849     0E62                     l3550:	
  4850                           ;incstack = 0
  4851                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4852                           
  4853                           
  4854                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  4855     0E62  0021               	movlb	1	; select bank1
  4856     0E63  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4857     0E64  00B8               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  4858     0E65  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  4859     0E66  00B7               	movwf	_TMR0_InterruptHandler^(0+128)
  4860     0E67                     l610:
  4861     0E67  0008               	return
  4862     0E68                     __end_of_TMR0_SetInterruptHandler:
  4863                           
  4864                           	psect	text13
  4865     0EA7                     __ptext13:	
  4866 ;; *************** function _SPI1_Initialize *****************
  4867 ;; Defined at:
  4868 ;;		line 62 in file "mcc_generated_files/spi1.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4882 ;;      Params:         0       0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 7
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_SYSTEM_Initialize
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896     0EA7                     _SPI1_Initialize:	
  4897                           ;psect for function _SPI1_Initialize
  4898                           
  4899     0EA7                     l3614:	
  4900                           ;incstack = 0
  4901                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  4902                           
  4903                           
  4904                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  4905     0EA7  3040               	movlw	64
  4906     0EA8  0024               	movlb	4	; select bank4
  4907     0EA9  0094               	movwf	20	;volatile
  4908     0EAA                     l3616:
  4909                           
  4910                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  4911     0EAA  0195               	clrf	21	;volatile
  4912     0EAB                     l3618:
  4913                           
  4914                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  4915     0EAB  3001               	movlw	1
  4916     0EAC  0092               	movwf	18	;volatile
  4917     0EAD                     l3620:
  4918                           
  4919                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  4920     0EAD  0021               	movlb	1	; select bank1
  4921     0EAE  120D               	bcf	13,4	;volatile
  4922     0EAF                     l3622:
  4923                           
  4924                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  4925     0EAF  0024               	movlb	4	; select bank4
  4926     0EB0  1295               	bcf	21,5	;volatile
  4927     0EB1                     l418:
  4928     0EB1  0008               	return
  4929     0EB2                     __end_of_SPI1_Initialize:
  4930                           
  4931                           	psect	text14
  4932     0E94                     __ptext14:	
  4933 ;; *************** function _PWM3_Initialize *****************
  4934 ;; Defined at:
  4935 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4949 ;;      Params:         0       0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0
  4952 ;;      Totals:         0       0       0       0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used: 1
  4955 ;; Hardware stack levels required when called: 7
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_SYSTEM_Initialize
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963     0E94                     _PWM3_Initialize:	
  4964                           ;psect for function _PWM3_Initialize
  4965                           
  4966     0E94                     l3556:	
  4967                           ;incstack = 0
  4968                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  4969                           
  4970                           
  4971                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  4972     0E94  300C               	movlw	12
  4973     0E95  0026               	movlb	6	; select bank6
  4974     0E96  0093               	movwf	19	;volatile
  4975     0E97                     l3558:
  4976                           
  4977                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  4978     0E97  0191               	clrf	17	;volatile
  4979     0E98                     l3560:
  4980                           
  4981                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  4982     0E98  0192               	clrf	18	;volatile
  4983     0E99                     l3562:
  4984                           
  4985                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  4986     0E99  30CF               	movlw	-49
  4987     0E9A  0025               	movlb	5	; select bank5
  4988     0E9B  059E               	andwf	30,f	;volatile
  4989     0E9C                     l11:
  4990     0E9C  0008               	return
  4991     0E9D                     __end_of_PWM3_Initialize:
  4992                           
  4993                           	psect	text15
  4994     06E9                     __ptext15:	
  4995 ;; *************** function _PIN_MANAGER_Initialize *****************
  4996 ;; Defined at:
  4997 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0, pclath, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5011 ;;      Params:         0       0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0       0
  5014 ;;      Totals:         0       0       0       0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 8
  5018 ;; This function calls:
  5019 ;;		_IOCBF0_SetInterruptHandler
  5020 ;;		_IOCBF3_SetInterruptHandler
  5021 ;; This function is called by:
  5022 ;;		_SYSTEM_Initialize
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026     06E9                     _PIN_MANAGER_Initialize:	
  5027                           ;psect for function _PIN_MANAGER_Initialize
  5028                           
  5029     06E9                     l3580:	
  5030                           ;incstack = 0
  5031                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5032                           
  5033                           
  5034                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  5035     06E9  0022               	movlb	2	; select bank2
  5036     06EA  018C               	clrf	12	;volatile
  5037                           
  5038                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  5039     06EB  018D               	clrf	13	;volatile
  5040     06EC                     l3582:
  5041                           
  5042                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  5043     06EC  3037               	movlw	55
  5044     06ED  0021               	movlb	1	; select bank1
  5045     06EE  008C               	movwf	12	;volatile
  5046     06EF                     l3584:
  5047                           
  5048                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xED;
  5049     06EF  30ED               	movlw	237
  5050     06F0  008D               	movwf	13	;volatile
  5051     06F1                     l3586:
  5052                           
  5053                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5054     06F1  30C0               	movlw	192
  5055     06F2  0023               	movlb	3	; select bank3
  5056     06F3  008D               	movwf	13	;volatile
  5057     06F4                     l3588:
  5058                           
  5059                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0F;
  5060     06F4  300F               	movlw	15
  5061     06F5  008C               	movwf	12	;volatile
  5062     06F6                     l3590:
  5063                           
  5064                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x09;
  5065     06F6  3009               	movlw	9
  5066     06F7  0024               	movlb	4	; select bank4
  5067     06F8  008D               	movwf	13	;volatile
  5068     06F9                     l3592:
  5069                           
  5070                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5071     06F9  018C               	clrf	12	;volatile
  5072     06FA                     l3594:
  5073                           
  5074                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 0;
  5075     06FA  0021               	movlb	1	; select bank1
  5076     06FB  1395               	bcf	21,7	;volatile
  5077                           
  5078                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  5079     06FC  30C0               	movlw	192
  5080     06FD  0022               	movlb	2	; select bank2
  5081     06FE  009D               	movwf	29	;volatile
  5082                           
  5083                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  5084     06FF  3001               	movlw	1
  5085     0700  009E               	movwf	30	;volatile
  5086     0701                     l3596:
  5087                           
  5088                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  5089     0701  0027               	movlb	7	; select bank7
  5090     0702  1016               	bcf	22,0	;volatile
  5091     0703                     l3598:
  5092                           
  5093                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  5094     0703  1196               	bcf	22,3	;volatile
  5095     0704                     l3600:
  5096                           
  5097                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  5098     0704  1415               	bsf	21,0	;volatile
  5099     0705                     l3602:
  5100                           
  5101                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  5102     0705  1595               	bsf	21,3	;volatile
  5103     0706                     l3604:
  5104                           
  5105                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 0;
  5106     0706  1014               	bcf	20,0	;volatile
  5107     0707                     l3606:
  5108                           
  5109                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 0;
  5110     0707  1194               	bcf	20,3	;volatile
  5111     0708                     l3608:
  5112                           
  5113                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  5114     0708  3028               	movlw	low _IOCBF0_DefaultInterruptHandler
  5115     0709  0021               	movlb	1	; select bank1
  5116     070A  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  5117     070B  300E               	movlw	high _IOCBF0_DefaultInterruptHandler
  5118     070C  00A1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5119     070D  318E  268B  3186   	fcall	_IOCBF0_SetInterruptHandler
  5120     0710                     l3610:
  5121                           
  5122                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  5123     0710  3029               	movlw	low _IOCBF3_DefaultInterruptHandler
  5124     0711  0021               	movlb	1	; select bank1
  5125     0712  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  5126     0713  300E               	movlw	high _IOCBF3_DefaultInterruptHandler
  5127     0714  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5128     0715  318E  265C  3186   	fcall	_IOCBF3_SetInterruptHandler
  5129     0718                     l3612:
  5130                           
  5131                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  5132     0718  158B               	bsf	11,3	;volatile
  5133     0719                     l189:
  5134     0719  0008               	return
  5135     071A                     __end_of_PIN_MANAGER_Initialize:
  5136                           
  5137                           	psect	text16
  5138     0E5C                     __ptext16:	
  5139 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  5140 ;; Defined at:
  5141 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5144 ;;		 -> chegadaS2(1), chegadaS1(1), IOCBF3_DefaultInterruptHandler(1), 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5156 ;;      Params:         0       0       2       0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0
  5159 ;;      Totals:         0       0       2       0       0       0
  5160 ;;Total ram usage:        2 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 7
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_PIN_MANAGER_Initialize
  5167 ;;		_main
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171     0E5C                     _IOCBF3_SetInterruptHandler:	
  5172                           ;psect for function _IOCBF3_SetInterruptHandler
  5173                           
  5174     0E5C                     l3532:	
  5175                           ;incstack = 0
  5176                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  5177                           
  5178                           
  5179                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  5180     0E5C  0021               	movlb	1	; select bank1
  5181     0E5D  0821               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5182     0E5E  00C0               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  5183     0E5F  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  5184     0E60  00BF               	movwf	_IOCBF3_InterruptHandler^(0+128)
  5185     0E61                     l211:
  5186     0E61  0008               	return
  5187     0E62                     __end_of_IOCBF3_SetInterruptHandler:
  5188                           
  5189                           	psect	text17
  5190     0E8B                     __ptext17:	
  5191 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  5192 ;; Defined at:
  5193 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5196 ;;		 -> IOCBF0_DefaultInterruptHandler(1), 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5208 ;;      Params:         0       0       2       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0
  5211 ;;      Totals:         0       0       2       0       0       0
  5212 ;;Total ram usage:        2 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 7
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_PIN_MANAGER_Initialize
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222     0E8B                     _IOCBF0_SetInterruptHandler:	
  5223                           ;psect for function _IOCBF0_SetInterruptHandler
  5224                           
  5225     0E8B                     l3530:	
  5226                           ;incstack = 0
  5227                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  5228                           
  5229                           
  5230                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  5231     0E8B  0021               	movlb	1	; select bank1
  5232     0E8C  0821               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5233     0E8D  0020               	movlb	0	; select bank0
  5234     0E8E  00E8               	movwf	_IOCBF0_InterruptHandler+1
  5235     0E8F  0021               	movlb	1	; select bank1
  5236     0E90  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  5237     0E91  0020               	movlb	0	; select bank0
  5238     0E92  00E7               	movwf	_IOCBF0_InterruptHandler
  5239     0E93                     l201:
  5240     0E93  0008               	return
  5241     0E94                     __end_of_IOCBF0_SetInterruptHandler:
  5242                           
  5243                           	psect	text18
  5244     0E74                     __ptext18:	
  5245 ;; *************** function _OSCILLATOR_Initialize *****************
  5246 ;; Defined at:
  5247 ;;		line 70 in file "mcc_generated_files/mcc.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5261 ;;      Params:         0       0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0
  5263 ;;      Temps:          0       0       0       0       0       0
  5264 ;;      Totals:         0       0       0       0       0       0
  5265 ;;Total ram usage:        0 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; Hardware stack levels required when called: 7
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_SYSTEM_Initialize
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275     0E74                     _OSCILLATOR_Initialize:	
  5276                           ;psect for function _OSCILLATOR_Initialize
  5277                           
  5278     0E74                     l3624:	
  5279                           ;incstack = 0
  5280                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5281                           
  5282                           
  5283                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x68;
  5284     0E74  3068               	movlw	104
  5285     0E75  0021               	movlb	1	; select bank1
  5286     0E76  0099               	movwf	25	;volatile
  5287     0E77                     l3626:
  5288                           
  5289                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  5290     0E77  0198               	clrf	24	;volatile
  5291     0E78                     l3628:
  5292                           
  5293                           ;mcc_generated_files/mcc.c: 77:     BORCON = 0x00;
  5294     0E78  0022               	movlb	2	; select bank2
  5295     0E79  0196               	clrf	22	;volatile
  5296     0E7A                     l258:
  5297     0E7A  0008               	return
  5298     0E7B                     __end_of_OSCILLATOR_Initialize:
  5299                           
  5300                           	psect	text19
  5301     0E2B                     __ptext19:	
  5302 ;; *************** function _FVR_Initialize *****************
  5303 ;; Defined at:
  5304 ;;		line 58 in file "mcc_generated_files/fvr.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5318 ;;      Params:         0       0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 7
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_SYSTEM_Initialize
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332     0E2B                     _FVR_Initialize:	
  5333                           ;psect for function _FVR_Initialize
  5334                           
  5335     0E2B                     l3632:	
  5336                           ;incstack = 0
  5337                           ; Regs used in _FVR_Initialize: [wreg]
  5338                           
  5339                           
  5340                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x89;
  5341     0E2B  3089               	movlw	137
  5342     0E2C  0022               	movlb	2	; select bank2
  5343     0E2D  0097               	movwf	23	;volatile
  5344     0E2E                     l306:
  5345     0E2E  0008               	return
  5346     0E2F                     __end_of_FVR_Initialize:
  5347                           
  5348                           	psect	text20
  5349     07C2                     __ptext20:	
  5350 ;; *************** function _EUSART_Initialize *****************
  5351 ;; Defined at:
  5352 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;		None
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0, pclath, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5366 ;;      Params:         0       0       0       0       0       0
  5367 ;;      Locals:         0       0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0
  5369 ;;      Totals:         0       0       0       0       0       0
  5370 ;;Total ram usage:        0 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 8
  5373 ;; This function calls:
  5374 ;;		_EUSART_SetErrorHandler
  5375 ;;		_EUSART_SetFramingErrorHandler
  5376 ;;		_EUSART_SetOverrunErrorHandler
  5377 ;; This function is called by:
  5378 ;;		_SYSTEM_Initialize
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382     07C2                     _EUSART_Initialize:	
  5383                           ;psect for function _EUSART_Initialize
  5384                           
  5385     07C2                     l3696:	
  5386                           ;incstack = 0
  5387                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5388                           
  5389                           
  5390                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5391     07C2  3008               	movlw	8
  5392     07C3  0023               	movlb	3	; select bank3
  5393     07C4  009F               	movwf	31	;volatile
  5394                           
  5395                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  5396     07C5  3090               	movlw	144
  5397     07C6  009D               	movwf	29	;volatile
  5398                           
  5399                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  5400     07C7  3024               	movlw	36
  5401     07C8  009E               	movwf	30	;volatile
  5402                           
  5403                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x33;
  5404     07C9  3033               	movlw	51
  5405     07CA  009B               	movwf	27	;volatile
  5406     07CB                     l3698:
  5407                           
  5408                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5409     07CB  019C               	clrf	28	;volatile
  5410     07CC                     l3700:
  5411                           
  5412                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5413     07CC  3000               	movlw	0
  5414     07CD  0021               	movlb	1	; select bank1
  5415     07CE  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  5416     07CF  3000               	movlw	0
  5417     07D0  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  5418     07D1  318E  2650  3187   	fcall	_EUSART_SetFramingErrorHandler
  5419     07D4                     l3702:
  5420                           
  5421                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5422     07D4  3000               	movlw	0
  5423     07D5  0021               	movlb	1	; select bank1
  5424     07D6  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  5425     07D7  3000               	movlw	0
  5426     07D8  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  5427     07D9  318E  2656  3187   	fcall	_EUSART_SetOverrunErrorHandler
  5428     07DC                     l3704:
  5429                           
  5430                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5431     07DC  3000               	movlw	0
  5432     07DD  0021               	movlb	1	; select bank1
  5433     07DE  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  5434     07DF  3000               	movlw	0
  5435     07E0  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  5436     07E1  318E  264A  3187   	fcall	_EUSART_SetErrorHandler
  5437     07E4                     l3706:
  5438                           
  5439                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5440     07E4  0020               	movlb	0	; select bank0
  5441     07E5  01D8               	clrf	_eusartRxLastError	;volatile
  5442     07E6                     l352:
  5443     07E6  0008               	return
  5444     07E7                     __end_of_EUSART_Initialize:
  5445                           
  5446                           	psect	text21
  5447     0E56                     __ptext21:	
  5448 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5449 ;; Defined at:
  5450 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5453 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  1    wreg      void 
  5458 ;; Registers used:
  5459 ;;		wreg
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5465 ;;      Params:         0       0       2       0       0       0
  5466 ;;      Locals:         0       0       0       0       0       0
  5467 ;;      Temps:          0       0       0       0       0       0
  5468 ;;      Totals:         0       0       2       0       0       0
  5469 ;;Total ram usage:        2 bytes
  5470 ;; Hardware stack levels used: 1
  5471 ;; Hardware stack levels required when called: 7
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		_EUSART_Initialize
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479     0E56                     _EUSART_SetOverrunErrorHandler:	
  5480                           ;psect for function _EUSART_SetOverrunErrorHandler
  5481                           
  5482     0E56                     l3536:	
  5483                           ;incstack = 0
  5484                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5485                           
  5486                           
  5487                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5488     0E56  0021               	movlb	1	; select bank1
  5489     0E57  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  5490     0E58  00BC               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5491     0E59  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  5492     0E5A  00BB               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5493     0E5B                     l394:
  5494     0E5B  0008               	return
  5495     0E5C                     __end_of_EUSART_SetOverrunErrorHandler:
  5496                           
  5497                           	psect	text22
  5498     0E50                     __ptext22:	
  5499 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5500 ;; Defined at:
  5501 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5504 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		wreg
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5516 ;;      Params:         0       0       2       0       0       0
  5517 ;;      Locals:         0       0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0
  5519 ;;      Totals:         0       0       2       0       0       0
  5520 ;;Total ram usage:        2 bytes
  5521 ;; Hardware stack levels used: 1
  5522 ;; Hardware stack levels required when called: 7
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_EUSART_Initialize
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530     0E50                     _EUSART_SetFramingErrorHandler:	
  5531                           ;psect for function _EUSART_SetFramingErrorHandler
  5532                           
  5533     0E50                     l3534:	
  5534                           ;incstack = 0
  5535                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5536                           
  5537                           
  5538                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5539     0E50  0021               	movlb	1	; select bank1
  5540     0E51  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  5541     0E52  00BE               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5542     0E53  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  5543     0E54  00BD               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5544     0E55                     l391:
  5545     0E55  0008               	return
  5546     0E56                     __end_of_EUSART_SetFramingErrorHandler:
  5547                           
  5548                           	psect	text23
  5549     0E4A                     __ptext23:	
  5550 ;; *************** function _EUSART_SetErrorHandler *****************
  5551 ;; Defined at:
  5552 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5555 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5567 ;;      Params:         0       0       2       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0
  5570 ;;      Totals:         0       0       2       0       0       0
  5571 ;;Total ram usage:        2 bytes
  5572 ;; Hardware stack levels used: 1
  5573 ;; Hardware stack levels required when called: 7
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_EUSART_Initialize
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581     0E4A                     _EUSART_SetErrorHandler:	
  5582                           ;psect for function _EUSART_SetErrorHandler
  5583                           
  5584     0E4A                     l3538:	
  5585                           ;incstack = 0
  5586                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5587                           
  5588                           
  5589                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  5590     0E4A  0021               	movlb	1	; select bank1
  5591     0E4B  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  5592     0E4C  00BA               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5593     0E4D  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  5594     0E4E  00B9               	movwf	_EUSART_ErrorHandler^(0+128)
  5595     0E4F                     l397:
  5596     0E4F  0008               	return
  5597     0E50                     __end_of_EUSART_SetErrorHandler:
  5598                           
  5599                           	psect	text24
  5600     0EBE                     __ptext24:	
  5601 ;; *************** function _CMP2_Initialize *****************
  5602 ;; Defined at:
  5603 ;;		line 59 in file "mcc_generated_files/cmp2.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5617 ;;      Params:         0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0
  5620 ;;      Totals:         0       0       0       0       0       0
  5621 ;;Total ram usage:        0 bytes
  5622 ;; Hardware stack levels used: 1
  5623 ;; Hardware stack levels required when called: 7
  5624 ;; This function calls:
  5625 ;;		Nothing
  5626 ;; This function is called by:
  5627 ;;		_SYSTEM_Initialize
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631     0EBE                     _CMP2_Initialize:	
  5632                           ;psect for function _CMP2_Initialize
  5633                           
  5634     0EBE                     l3564:	
  5635                           ;incstack = 0
  5636                           ; Regs used in _CMP2_Initialize: [wreg]
  5637                           
  5638                           
  5639                           ;mcc_generated_files/cmp2.c: 66:     PIE2bits.C2IE = 0;
  5640     0EBE  0021               	movlb	1	; select bank1
  5641     0EBF  1312               	bcf	18,6	;volatile
  5642     0EC0                     l3566:
  5643                           
  5644                           ;mcc_generated_files/cmp2.c: 69:     CM2CON0 = 0x84;
  5645     0EC0  3084               	movlw	132
  5646     0EC1  0022               	movlb	2	; select bank2
  5647     0EC2  0093               	movwf	19	;volatile
  5648                           
  5649                           ;mcc_generated_files/cmp2.c: 72:     CM2CON1 = 0xA1;
  5650     0EC3  30A1               	movlw	161
  5651     0EC4  0094               	movwf	20	;volatile
  5652     0EC5                     l3568:
  5653                           
  5654                           ;mcc_generated_files/cmp2.c: 75:     PIR2bits.C2IF = 0;
  5655     0EC5  0020               	movlb	0	; select bank0
  5656     0EC6  1312               	bcf	18,6	;volatile
  5657     0EC7                     l3570:
  5658                           
  5659                           ;mcc_generated_files/cmp2.c: 78:     PIE2bits.C2IE = 1;
  5660     0EC7  0021               	movlb	1	; select bank1
  5661     0EC8  1712               	bsf	18,6	;volatile
  5662     0EC9                     l71:
  5663     0EC9  0008               	return
  5664     0ECA                     __end_of_CMP2_Initialize:
  5665                           
  5666                           	psect	text25
  5667     0EB2                     __ptext25:	
  5668 ;; *************** function _CMP1_Initialize *****************
  5669 ;; Defined at:
  5670 ;;		line 59 in file "mcc_generated_files/cmp1.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      void 
  5677 ;; Registers used:
  5678 ;;		wreg
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5684 ;;      Params:         0       0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0
  5687 ;;      Totals:         0       0       0       0       0       0
  5688 ;;Total ram usage:        0 bytes
  5689 ;; Hardware stack levels used: 1
  5690 ;; Hardware stack levels required when called: 7
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_SYSTEM_Initialize
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698     0EB2                     _CMP1_Initialize:	
  5699                           ;psect for function _CMP1_Initialize
  5700                           
  5701     0EB2                     l3572:	
  5702                           ;incstack = 0
  5703                           ; Regs used in _CMP1_Initialize: [wreg]
  5704                           
  5705                           
  5706                           ;mcc_generated_files/cmp1.c: 66:     PIE2bits.C1IE = 0;
  5707     0EB2  0021               	movlb	1	; select bank1
  5708     0EB3  1292               	bcf	18,5	;volatile
  5709     0EB4                     l3574:
  5710                           
  5711                           ;mcc_generated_files/cmp1.c: 69:     CM1CON0 = 0x84;
  5712     0EB4  3084               	movlw	132
  5713     0EB5  0022               	movlb	2	; select bank2
  5714     0EB6  0091               	movwf	17	;volatile
  5715                           
  5716                           ;mcc_generated_files/cmp1.c: 72:     CM1CON1 = 0xA0;
  5717     0EB7  30A0               	movlw	160
  5718     0EB8  0092               	movwf	18	;volatile
  5719     0EB9                     l3576:
  5720                           
  5721                           ;mcc_generated_files/cmp1.c: 75:     PIR2bits.C1IF = 0;
  5722     0EB9  0020               	movlb	0	; select bank0
  5723     0EBA  1292               	bcf	18,5	;volatile
  5724     0EBB                     l3578:
  5725                           
  5726                           ;mcc_generated_files/cmp1.c: 78:     PIE2bits.C1IE = 1;
  5727     0EBB  0021               	movlb	1	; select bank1
  5728     0EBC  1692               	bsf	18,5	;volatile
  5729     0EBD                     l134:
  5730     0EBD  0008               	return
  5731     0EBE                     __end_of_CMP1_Initialize:
  5732                           
  5733                           	psect	text26
  5734     0F60                     __ptext26:	
  5735 ;; *************** function _CCP4_Initialize *****************
  5736 ;; Defined at:
  5737 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, pclath, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5751 ;;      Params:         0       0       0       0       0       0
  5752 ;;      Locals:         0       0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0
  5754 ;;      Totals:         0       0       0       0       0       0
  5755 ;;Total ram usage:        0 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; Hardware stack levels required when called: 8
  5758 ;; This function calls:
  5759 ;;		_CCP4_SetCallBack
  5760 ;; This function is called by:
  5761 ;;		_SYSTEM_Initialize
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765     0F60                     _CCP4_Initialize:	
  5766                           ;psect for function _CCP4_Initialize
  5767                           
  5768     0F60                     l3666:	
  5769                           ;incstack = 0
  5770                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5771                           
  5772     0F60  3004               	movlw	4
  5773     0F61  0026               	movlb	6	; select bank6
  5774     0F62  009A               	movwf	26	;volatile
  5775     0F63                     l3668:
  5776     0F63  0198               	clrf	24	;volatile
  5777     0F64                     l3670:
  5778     0F64  0199               	clrf	25	;volatile
  5779     0F65                     l3672:
  5780     0F65  3027               	movlw	low _CCP4_DefaultCallBack
  5781     0F66  0021               	movlb	1	; select bank1
  5782     0F67  00A0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  5783     0F68  300E               	movlw	high _CCP4_DefaultCallBack
  5784     0F69  00A1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  5785     0F6A  318E  2644  318F   	fcall	_CCP4_SetCallBack
  5786     0F6D                     l3674:
  5787     0F6D  0020               	movlb	0	; select bank0
  5788     0F6E  1293               	bcf	19,5	;volatile
  5789     0F6F                     l3676:
  5790     0F6F  0021               	movlb	1	; select bank1
  5791     0F70  1693               	bsf	19,5	;volatile
  5792     0F71                     l798:
  5793     0F71  0008               	return
  5794     0F72                     __end_of_CCP4_Initialize:
  5795                           
  5796                           	psect	text27
  5797     0E44                     __ptext27:	
  5798 ;; *************** function _CCP4_SetCallBack *****************
  5799 ;; Defined at:
  5800 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  5803 ;;		 -> CCP4_DefaultCallBack(1), 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5815 ;;      Params:         0       0       2       0       0       0
  5816 ;;      Locals:         0       0       0       0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0
  5818 ;;      Totals:         0       0       2       0       0       0
  5819 ;;Total ram usage:        2 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 7
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_CCP4_Initialize
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829     0E44                     _CCP4_SetCallBack:	
  5830                           ;psect for function _CCP4_SetCallBack
  5831                           
  5832     0E44                     l3552:	
  5833                           ;incstack = 0
  5834                           ; Regs used in _CCP4_SetCallBack: [wreg]
  5835                           
  5836     0E44  0021               	movlb	1	; select bank1
  5837     0E45  0821               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  5838     0E46  00B6               	movwf	(_CCP4_CallBack+1)^(0+128)
  5839     0E47  0820               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  5840     0E48  00B5               	movwf	_CCP4_CallBack^(0+128)
  5841     0E49                     l804:
  5842     0E49  0008               	return
  5843     0E4A                     __end_of_CCP4_SetCallBack:
  5844                           
  5845                           	psect	text28
  5846     0E7B                     __ptext28:	
  5847 ;; *************** function _ADC_Initialize *****************
  5848 ;; Defined at:
  5849 ;;		line 67 in file "mcc_generated_files/adc.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;		None
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5863 ;;      Params:         0       0       0       0       0       0
  5864 ;;      Locals:         0       0       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0
  5866 ;;      Totals:         0       0       0       0       0       0
  5867 ;;Total ram usage:        0 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 7
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_SYSTEM_Initialize
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877     0E7B                     _ADC_Initialize:	
  5878                           ;psect for function _ADC_Initialize
  5879                           
  5880     0E7B                     l3678:	
  5881                           ;incstack = 0
  5882                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5883                           
  5884                           
  5885                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC3;
  5886     0E7B  30C3               	movlw	195
  5887     0E7C  0021               	movlb	1	; select bank1
  5888     0E7D  009E               	movwf	30	;volatile
  5889     0E7E                     l3680:
  5890                           
  5891                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  5892     0E7E  019B               	clrf	27	;volatile
  5893     0E7F                     l3682:
  5894                           
  5895                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  5896     0E7F  019C               	clrf	28	;volatile
  5897                           
  5898                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  5899     0E80  3001               	movlw	1
  5900     0E81  009D               	movwf	29	;volatile
  5901     0E82                     l278:
  5902     0E82  0008               	return
  5903     0E83                     __end_of_ADC_Initialize:
  5904                           
  5905                           	psect	text29
  5906     0598                     __ptext29:	
  5907 ;; *************** function _SPI1_Open *****************
  5908 ;; Defined at:
  5909 ;;		line 72 in file "mcc_generated_files/spi1.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  spi1UniqueCo    1    wreg     enum E358
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  spi1UniqueCo    1    3[BANK1 ] enum E358
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      _Bool 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5923 ;;      Params:         0       0       0       0       0       0
  5924 ;;      Locals:         0       0       1       0       0       0
  5925 ;;      Temps:          0       0       3       0       0       0
  5926 ;;      Totals:         0       0       4       0       0       0
  5927 ;;Total ram usage:        4 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; Hardware stack levels required when called: 7
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_main
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937     0598                     _SPI1_Open:	
  5938                           ;psect for function _SPI1_Open
  5939                           
  5940                           
  5941                           ;incstack = 0
  5942                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
  5943                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  5944     0598  0021               	movlb	1	; select bank1
  5945     0599  00A3               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+128)
  5946     059A                     l3730:
  5947                           
  5948                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  5949     059A  0024               	movlb	4	; select bank4
  5950     059B  1A95               	btfsc	21,5	;volatile
  5951     059C  2D9E               	goto	u2351
  5952     059D  2D9F               	goto	u2350
  5953     059E                     u2351:
  5954     059E  2DEF               	goto	l422
  5955     059F                     u2350:
  5956     059F                     l3732:
  5957                           
  5958                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  5959     059F  0021               	movlb	1	; select bank1
  5960     05A0  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  5961     05A1  00A0               	movwf	??_SPI1_Open^(0+128)
  5962     05A2  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  5963     05A3  35A0               	lslf	??_SPI1_Open^(0+128),f
  5964     05A4  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5965     05A5  35A0               	lslf	??_SPI1_Open^(0+128),f
  5966     05A6  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5967     05A7  300C               	movlw	low (_spi1_configuration+1)
  5968     05A8  0720               	addwf	??_SPI1_Open^(0+128),w
  5969     05A9  0084               	movwf	4
  5970     05AA  3008               	movlw	high (_spi1_configuration+1)
  5971     05AB  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  5972     05AC  3880               	iorlw	128
  5973     05AD  0085               	movwf	5
  5974     05AE  0800               	movf	0,w	;code access
  5975     05AF  0024               	movlb	4	; select bank4
  5976     05B0  0094               	movwf	20	;volatile
  5977                           
  5978                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  5979     05B1  0021               	movlb	1	; select bank1
  5980     05B2  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  5981     05B3  00A0               	movwf	??_SPI1_Open^(0+128)
  5982     05B4  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  5983     05B5  35A0               	lslf	??_SPI1_Open^(0+128),f
  5984     05B6  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5985     05B7  35A0               	lslf	??_SPI1_Open^(0+128),f
  5986     05B8  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5987     05B9  300B               	movlw	low _spi1_configuration
  5988     05BA  0720               	addwf	??_SPI1_Open^(0+128),w
  5989     05BB  0084               	movwf	4
  5990     05BC  3008               	movlw	high _spi1_configuration
  5991     05BD  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  5992     05BE  3880               	iorlw	128
  5993     05BF  0085               	movwf	5
  5994     05C0  0800               	movf	0,w	;code access
  5995     05C1  0024               	movlb	4	; select bank4
  5996     05C2  0095               	movwf	21	;volatile
  5997     05C3                     l3734:
  5998                           
  5999                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  6000     05C3  0196               	clrf	22	;volatile
  6001     05C4                     l3736:
  6002                           
  6003                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  6004     05C4  0021               	movlb	1	; select bank1
  6005     05C5  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6006     05C6  00A0               	movwf	??_SPI1_Open^(0+128)
  6007     05C7  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6008     05C8  35A0               	lslf	??_SPI1_Open^(0+128),f
  6009     05C9  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6010     05CA  35A0               	lslf	??_SPI1_Open^(0+128),f
  6011     05CB  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6012     05CC  300D               	movlw	low (_spi1_configuration+2)
  6013     05CD  0720               	addwf	??_SPI1_Open^(0+128),w
  6014     05CE  0084               	movwf	4
  6015     05CF  3008               	movlw	high (_spi1_configuration+2)
  6016     05D0  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6017     05D1  3880               	iorlw	128
  6018     05D2  0085               	movwf	5
  6019     05D3  0800               	movf	0,w	;code access
  6020     05D4  0024               	movlb	4	; select bank4
  6021     05D5  0092               	movwf	18	;volatile
  6022     05D6                     l3738:
  6023                           
  6024                           ;mcc_generated_files/spi1.c: 80:         TRISBbits.TRISB4 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  6025     05D6  0021               	movlb	1	; select bank1
  6026     05D7  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6027     05D8  00A0               	movwf	??_SPI1_Open^(0+128)
  6028     05D9  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6029     05DA  35A0               	lslf	??_SPI1_Open^(0+128),f
  6030     05DB  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6031     05DC  35A0               	lslf	??_SPI1_Open^(0+128),f
  6032     05DD  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6033     05DE  300E               	movlw	low (_spi1_configuration+3)
  6034     05DF  0720               	addwf	??_SPI1_Open^(0+128),w
  6035     05E0  0084               	movwf	4
  6036     05E1  3008               	movlw	high (_spi1_configuration+3)
  6037     05E2  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6038     05E3  3880               	iorlw	128
  6039     05E4  0085               	movwf	5
  6040     05E5  0800               	movf	0,w	;code access
  6041     05E6  00A2               	movwf	(??_SPI1_Open+2)^(0+128)
  6042     05E7  0EA2               	swapf	(??_SPI1_Open+2)^(0+128),f
  6043     05E8  080D               	movf	13,w	;volatile
  6044     05E9  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6045     05EA  39EF               	andlw	-17
  6046     05EB  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6047     05EC  008D               	movwf	13	;volatile
  6048     05ED                     l3740:
  6049                           
  6050                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  6051     05ED  0024               	movlb	4	; select bank4
  6052     05EE  1695               	bsf	21,5	;volatile
  6053     05EF                     l422:
  6054     05EF  0008               	return
  6055     05F0                     __end_of_SPI1_Open:
  6056                           
  6057                           	psect	text30
  6058     0E33                     __ptext30:	
  6059 ;; *************** function _EUSART_is_rx_ready *****************
  6060 ;; Defined at:
  6061 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      _Bool 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6075 ;;      Params:         0       0       0       0       0       0
  6076 ;;      Locals:         0       0       0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0
  6078 ;;      Totals:         0       0       0       0       0       0
  6079 ;;Total ram usage:        0 bytes
  6080 ;; Hardware stack levels used: 1
  6081 ;; Hardware stack levels required when called: 7
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_main
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089     0E33                     _EUSART_is_rx_ready:	
  6090                           ;psect for function _EUSART_is_rx_ready
  6091                           
  6092     0E33                     l3714:	
  6093                           ;incstack = 0
  6094                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6095                           
  6096                           
  6097                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  6098     0E33  0020               	movlb	0	; select bank0
  6099     0E34  0E11               	swapf	17,w	;volatile
  6100     0E35  0C89               	rrf	9,f
  6101     0E36  3901               	andlw	1
  6102     0E37                     l360:
  6103     0E37  0008               	return
  6104     0E38                     __end_of_EUSART_is_rx_ready:
  6105                           
  6106                           	psect	text31
  6107     0F1E                     __ptext31:	
  6108 ;; *************** function _EUSART_Read *****************
  6109 ;; Defined at:
  6110 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      unsigned char 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6124 ;;      Params:         0       0       0       0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0
  6127 ;;      Totals:         0       0       0       0       0       0
  6128 ;;Total ram usage:        0 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 7
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138     0F1E                     _EUSART_Read:	
  6139                           ;psect for function _EUSART_Read
  6140                           
  6141     0F1E                     l3718:	
  6142                           ;incstack = 0
  6143                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6144                           
  6145     0F1E                     l369:	
  6146                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6147                           
  6148                           
  6149                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  6150     0F1E  0020               	movlb	0	; select bank0
  6151     0F1F  1E91               	btfss	17,5	;volatile
  6152     0F20  2F22               	goto	u2331
  6153     0F21  2F23               	goto	u2330
  6154     0F22                     u2331:
  6155     0F22  2F1E               	goto	l369
  6156     0F23                     u2330:
  6157     0F23                     l3720:
  6158                           
  6159                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6160     0F23  01D8               	clrf	_eusartRxLastError	;volatile
  6161     0F24                     l3722:
  6162                           
  6163                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  6164     0F24  0023               	movlb	3	; select bank3
  6165     0F25  1C9D               	btfss	29,1	;volatile
  6166     0F26  2F28               	goto	u2341
  6167     0F27  2F29               	goto	u2340
  6168     0F28                     u2341:
  6169     0F28  2F2B               	goto	l3726
  6170     0F29                     u2340:
  6171     0F29                     l3724:
  6172                           
  6173                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  6174     0F29  121D               	bcf	29,4	;volatile
  6175                           
  6176                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  6177     0F2A  161D               	bsf	29,4	;volatile
  6178     0F2B                     l3726:
  6179                           
  6180                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  6181     0F2B  0819               	movf	25,w	;volatile
  6182     0F2C                     l373:
  6183     0F2C  0008               	return
  6184     0F2D                     __end_of_EUSART_Read:
  6185                           
  6186                           	psect	intentry
  6187     0004                     __pintentry:	
  6188 ;; *************** function _INTERRUPT_InterruptManager *****************
  6189 ;; Defined at:
  6190 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6204 ;;      Params:         0       0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0
  6207 ;;      Totals:         0       0       0       0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 6
  6211 ;; This function calls:
  6212 ;;		_CCP4_CaptureISR
  6213 ;;		_CMP1_ISR
  6214 ;;		_CMP2_ISR
  6215 ;;		_PIN_MANAGER_IOC
  6216 ;;		_TMR0_ISR
  6217 ;;		_TMR4_ISR
  6218 ;; This function is called by:
  6219 ;;		Interrupt level 1
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223     0004                     _INTERRUPT_InterruptManager:
  6224                           
  6225                           ;incstack = 0
  6226     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6227                           
  6228                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6229     0005  3180               	pagesel	$
  6230     0006                     i1l3298:
  6231                           
  6232                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  6233     0006  1D8B               	btfss	11,3	;volatile
  6234     0007  2809               	goto	u186_21
  6235     0008  280A               	goto	u186_20
  6236     0009                     u186_21:
  6237     0009  2811               	goto	i1l3304
  6238     000A                     u186_20:
  6239     000A                     i1l3300:
  6240     000A  1C0B               	btfss	11,0	;volatile
  6241     000B  280D               	goto	u187_21
  6242     000C  280E               	goto	u187_20
  6243     000D                     u187_21:
  6244     000D  2811               	goto	i1l3304
  6245     000E                     u187_20:
  6246     000E                     i1l3302:
  6247                           
  6248                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6249     000E  318F  273D  3180   	fcall	_PIN_MANAGER_IOC
  6250     0011                     i1l3304:
  6251                           
  6252                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6253     0011  1E8B               	btfss	11,5	;volatile
  6254     0012  2814               	goto	u188_21
  6255     0013  2815               	goto	u188_20
  6256     0014                     u188_21:
  6257     0014  281C               	goto	i1l3310
  6258     0015                     u188_20:
  6259     0015                     i1l3306:
  6260     0015  1D0B               	btfss	11,2	;volatile
  6261     0016  2818               	goto	u189_21
  6262     0017  2819               	goto	u189_20
  6263     0018                     u189_21:
  6264     0018  281C               	goto	i1l3310
  6265     0019                     u189_20:
  6266     0019                     i1l3308:
  6267                           
  6268                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  6269     0019  3187  27E7  3180   	fcall	_TMR0_ISR
  6270     001C                     i1l3310:
  6271                           
  6272                           ;mcc_generated_files/interrupt_manager.c: 63:     if(INTCONbits.PEIE == 1)
  6273     001C  1F0B               	btfss	11,6	;volatile
  6274     001D  281F               	goto	u190_21
  6275     001E  2820               	goto	u190_20
  6276     001F                     u190_21:
  6277     001F  2854               	goto	i1l492
  6278     0020                     u190_20:
  6279     0020                     i1l3312:
  6280                           
  6281                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE2bits.C2IE == 1 && PIR2bits.C2IF == 1)
  6282     0020  0021               	movlb	1	; select bank1
  6283     0021  1F12               	btfss	18,6	;volatile
  6284     0022  2824               	goto	u191_21
  6285     0023  2825               	goto	u191_20
  6286     0024                     u191_21:
  6287     0024  282D               	goto	i1l3318
  6288     0025                     u191_20:
  6289     0025                     i1l3314:
  6290     0025  0020               	movlb	0	; select bank0
  6291     0026  1F12               	btfss	18,6	;volatile
  6292     0027  2829               	goto	u192_21
  6293     0028  282A               	goto	u192_20
  6294     0029                     u192_21:
  6295     0029  282D               	goto	i1l3318
  6296     002A                     u192_20:
  6297     002A                     i1l3316:
  6298                           
  6299                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             CMP2_ISR();
  6300     002A  318E  263E  3180   	fcall	_CMP2_ISR
  6301     002D                     i1l3318:
  6302                           
  6303                           ;mcc_generated_files/interrupt_manager.c: 69:         if(PIE2bits.C1IE == 1 && PIR2bits.
      +                          C1IF == 1)
  6304     002D  0021               	movlb	1	; select bank1
  6305     002E  1E92               	btfss	18,5	;volatile
  6306     002F  2831               	goto	u193_21
  6307     0030  2832               	goto	u193_20
  6308     0031                     u193_21:
  6309     0031  283A               	goto	i1l3324
  6310     0032                     u193_20:
  6311     0032                     i1l3320:
  6312     0032  0020               	movlb	0	; select bank0
  6313     0033  1E92               	btfss	18,5	;volatile
  6314     0034  2836               	goto	u194_21
  6315     0035  2837               	goto	u194_20
  6316     0036                     u194_21:
  6317     0036  283A               	goto	i1l3324
  6318     0037                     u194_20:
  6319     0037                     i1l3322:
  6320                           
  6321                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP1_ISR();
  6322     0037  318E  2638  3180   	fcall	_CMP1_ISR
  6323     003A                     i1l3324:
  6324                           
  6325                           ;mcc_generated_files/interrupt_manager.c: 73:         if(PIE3bits.CCP4IE == 1 && PIR3bit
      +                          s.CCP4IF == 1)
  6326     003A  0021               	movlb	1	; select bank1
  6327     003B  1E93               	btfss	19,5	;volatile
  6328     003C  283E               	goto	u195_21
  6329     003D  283F               	goto	u195_20
  6330     003E                     u195_21:
  6331     003E  2847               	goto	i1l3330
  6332     003F                     u195_20:
  6333     003F                     i1l3326:
  6334     003F  0020               	movlb	0	; select bank0
  6335     0040  1E93               	btfss	19,5	;volatile
  6336     0041  2843               	goto	u196_21
  6337     0042  2844               	goto	u196_20
  6338     0043                     u196_21:
  6339     0043  2847               	goto	i1l3330
  6340     0044                     u196_20:
  6341     0044                     i1l3328:
  6342                           
  6343                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CCP4_CaptureISR();
  6344     0044  318F  274E  3180   	fcall	_CCP4_CaptureISR
  6345     0047                     i1l3330:
  6346                           
  6347                           ;mcc_generated_files/interrupt_manager.c: 77:         if(PIE3bits.TMR4IE == 1 && PIR3bit
      +                          s.TMR4IF == 1)
  6348     0047  0021               	movlb	1	; select bank1
  6349     0048  1C93               	btfss	19,1	;volatile
  6350     0049  284B               	goto	u197_21
  6351     004A  284C               	goto	u197_20
  6352     004B                     u197_21:
  6353     004B  2854               	goto	i1l492
  6354     004C                     u197_20:
  6355     004C                     i1l3332:
  6356     004C  0020               	movlb	0	; select bank0
  6357     004D  1C93               	btfss	19,1	;volatile
  6358     004E  2850               	goto	u198_21
  6359     004F  2851               	goto	u198_20
  6360     0050                     u198_21:
  6361     0050  2854               	goto	i1l492
  6362     0051                     u198_20:
  6363     0051                     i1l3334:
  6364                           
  6365                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR4_ISR();
  6366     0051  318F  27AD  3180   	fcall	_TMR4_ISR
  6367     0054                     i1l492:
  6368     0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6369     0055  0009               	retfie
  6370     0056                     __end_of_INTERRUPT_InterruptManager:
  6371                           
  6372                           	psect	text33
  6373     0FAD                     __ptext33:	
  6374 ;; *************** function _TMR4_ISR *****************
  6375 ;; Defined at:
  6376 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;		None
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;		None
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0, pclath, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6390 ;;      Params:         0       0       0       0       0       0
  6391 ;;      Locals:         0       0       0       0       0       0
  6392 ;;      Temps:          0       0       0       0       0       0
  6393 ;;      Totals:         0       0       0       0       0       0
  6394 ;;Total ram usage:        0 bytes
  6395 ;; Hardware stack levels used: 1
  6396 ;; Hardware stack levels required when called: 2
  6397 ;; This function calls:
  6398 ;;		_TMR4_CallBack
  6399 ;; This function is called by:
  6400 ;;		_INTERRUPT_InterruptManager
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404     0FAD                     _TMR4_ISR:	
  6405                           ;psect for function _TMR4_ISR
  6406                           
  6407     0FAD                     i1l3224:	
  6408                           ;incstack = 0
  6409                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
  6410                           
  6411                           
  6412                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  6413     0FAD  0020               	movlb	0	; select bank0
  6414     0FAE  1093               	bcf	19,1	;volatile
  6415     0FAF                     i1l3226:
  6416                           
  6417                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 2)
  6418     0FAF  3001               	movlw	1
  6419     0FB0  07C9               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  6420     0FB1  3000               	movlw	0
  6421     0FB2  3DCA               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  6422     0FB3  3000               	movlw	0
  6423     0FB4  024A               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  6424     0FB5  3002               	movlw	2
  6425     0FB6  1903               	skipnz
  6426     0FB7  0249               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  6427     0FB8  1C03               	skipc
  6428     0FB9  2FBB               	goto	u179_21
  6429     0FBA  2FBC               	goto	u179_20
  6430     0FBB                     u179_21:
  6431     0FBB  2FC2               	goto	i1l848
  6432     0FBC                     u179_20:
  6433     0FBC                     i1l3228:
  6434                           
  6435                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  6436     0FBC  318E  26D7  318F   	fcall	_TMR4_CallBack
  6437     0FBF                     i1l3230:
  6438                           
  6439                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  6440     0FBF  0020               	movlb	0	; select bank0
  6441     0FC0  01C9               	clrf	TMR4_ISR@CountCallBack	;volatile
  6442     0FC1  01CA               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  6443     0FC2                     i1l848:
  6444     0FC2  0008               	return
  6445     0FC3                     __end_of_TMR4_ISR:
  6446                           
  6447                           	psect	text34
  6448     0ED7                     __ptext34:	
  6449 ;; *************** function _TMR4_CallBack *****************
  6450 ;; Defined at:
  6451 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;		None
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;		None
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      void 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0, pclath, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6465 ;;      Params:         0       0       0       0       0       0
  6466 ;;      Locals:         0       0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0
  6468 ;;      Totals:         0       0       0       0       0       0
  6469 ;;Total ram usage:        0 bytes
  6470 ;; Hardware stack levels used: 1
  6471 ;; Hardware stack levels required when called: 1
  6472 ;; This function calls:
  6473 ;;		NULL
  6474 ;;		_TMR4_DefaultInterruptHandler
  6475 ;; This function is called by:
  6476 ;;		_TMR4_ISR
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480     0ED7                     _TMR4_CallBack:	
  6481                           ;psect for function _TMR4_CallBack
  6482                           
  6483     0ED7                     i1l3158:	
  6484                           ;incstack = 0
  6485                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6486                           
  6487                           
  6488                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  6489     0ED7  0021               	movlb	1	; select bank1
  6490     0ED8  0833               	movf	_TMR4_InterruptHandler^(0+128),w
  6491     0ED9  0434               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  6492     0EDA  1903               	btfsc	3,2
  6493     0EDB  2EDD               	goto	u172_21
  6494     0EDC  2EDE               	goto	u172_20
  6495     0EDD                     u172_21:
  6496     0EDD  2EE3               	goto	i1l852
  6497     0EDE                     u172_20:
  6498     0EDE                     i1l3160:
  6499                           
  6500                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  6501     0EDE  0834               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  6502     0EDF  008A               	movwf	10
  6503     0EE0  0833               	movf	_TMR4_InterruptHandler^(0+128),w
  6504     0EE1  000A               	callw
  6505     0EE2  318E               	pagesel	$
  6506     0EE3                     i1l852:
  6507     0EE3  0008               	return
  6508     0EE4                     __end_of_TMR4_CallBack:
  6509                           
  6510                           	psect	text35
  6511     0002                     __ptext35:	
  6512 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  6513 ;; Defined at:
  6514 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		None
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6528 ;;      Params:         0       0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0
  6531 ;;      Totals:         0       0       0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used: 1
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_TMR4_Initialize
  6538 ;;		_TMR4_CallBack
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542     0002                     _TMR4_DefaultInterruptHandler:	
  6543                           ;psect for function _TMR4_DefaultInterruptHandler
  6544                           
  6545     0002                     i1l858:	
  6546                           ;incstack = 0
  6547                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  6548                           
  6549     0002  0008               	return
  6550     0003                     __end_of_TMR4_DefaultInterruptHandler:
  6551                           
  6552                           	psect	text36
  6553     07E7                     __ptext36:	
  6554 ;; *************** function _TMR0_ISR *****************
  6555 ;; Defined at:
  6556 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;		None
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6570 ;;      Params:         0       0       0       0       0       0
  6571 ;;      Locals:         0       0       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0       0
  6573 ;;      Totals:         0       0       0       0       0       0
  6574 ;;Total ram usage:        0 bytes
  6575 ;; Hardware stack levels used: 1
  6576 ;; Hardware stack levels required when called: 4
  6577 ;; This function calls:
  6578 ;;		_TMR0_CallBack
  6579 ;; This function is called by:
  6580 ;;		_INTERRUPT_InterruptManager
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584     07E7                     _TMR0_ISR:	
  6585                           ;psect for function _TMR0_ISR
  6586                           
  6587     07E7                     i1l3210:	
  6588                           ;incstack = 0
  6589                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6590                           
  6591                           
  6592                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  6593     07E7  110B               	bcf	11,2	;volatile
  6594     07E8                     i1l3212:
  6595                           
  6596                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  6597     07E8  0020               	movlb	0	; select bank0
  6598     07E9  0857               	movf	_timer0ReloadVal,w	;volatile
  6599     07EA  0095               	movwf	21	;volatile
  6600                           
  6601                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 5)
  6602     07EB  3001               	movlw	1
  6603     07EC  07CB               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  6604     07ED  3000               	movlw	0
  6605     07EE  3DCC               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  6606     07EF  3000               	movlw	0
  6607     07F0  024C               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  6608     07F1  3005               	movlw	5
  6609     07F2  1903               	skipnz
  6610     07F3  024B               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  6611     07F4  1C03               	skipc
  6612     07F5  2FF7               	goto	u178_21
  6613     07F6  2FF8               	goto	u178_20
  6614     07F7                     u178_21:
  6615     07F7  2FFE               	goto	i1l603
  6616     07F8                     u178_20:
  6617     07F8                     i1l3214:
  6618                           
  6619                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  6620     07F8  318E  26CA  3187   	fcall	_TMR0_CallBack
  6621     07FB                     i1l3216:
  6622                           
  6623                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  6624     07FB  0020               	movlb	0	; select bank0
  6625     07FC  01CB               	clrf	TMR0_ISR@CountCallBack	;volatile
  6626     07FD  01CC               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  6627     07FE                     i1l603:
  6628     07FE  0008               	return
  6629     07FF                     __end_of_TMR0_ISR:
  6630                           
  6631                           	psect	text37
  6632     0ECA                     __ptext37:	
  6633 ;; *************** function _TMR0_CallBack *****************
  6634 ;; Defined at:
  6635 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6649 ;;      Params:         0       0       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0
  6652 ;;      Totals:         0       0       0       0       0       0
  6653 ;;Total ram usage:        0 bytes
  6654 ;; Hardware stack levels used: 1
  6655 ;; Hardware stack levels required when called: 3
  6656 ;; This function calls:
  6657 ;;		NULL
  6658 ;;		_TMR0_DefaultInterruptHandler
  6659 ;;		_sendInfo
  6660 ;; This function is called by:
  6661 ;;		_TMR0_ISR
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665     0ECA                     _TMR0_CallBack:	
  6666                           ;psect for function _TMR0_CallBack
  6667                           
  6668     0ECA                     i1l3150:	
  6669                           ;incstack = 0
  6670                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6671                           
  6672                           
  6673                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  6674     0ECA  0021               	movlb	1	; select bank1
  6675     0ECB  0837               	movf	_TMR0_InterruptHandler^(0+128),w
  6676     0ECC  0438               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  6677     0ECD  1903               	btfsc	3,2
  6678     0ECE  2ED0               	goto	u171_21
  6679     0ECF  2ED1               	goto	u171_20
  6680     0ED0                     u171_21:
  6681     0ED0  2ED6               	goto	i1l607
  6682     0ED1                     u171_20:
  6683     0ED1                     i1l3152:
  6684                           
  6685                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  6686     0ED1  0838               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  6687     0ED2  008A               	movwf	10
  6688     0ED3  0837               	movf	_TMR0_InterruptHandler^(0+128),w
  6689     0ED4  000A               	callw
  6690     0ED5  318E               	pagesel	$
  6691     0ED6                     i1l607:
  6692     0ED6  0008               	return
  6693     0ED7                     __end_of_TMR0_CallBack:
  6694                           
  6695                           	psect	text38
  6696     0E2A                     __ptext38:	
  6697 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6698 ;; Defined at:
  6699 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;		None
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      void 
  6706 ;; Registers used:
  6707 ;;		None
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6713 ;;      Params:         0       0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0
  6715 ;;      Temps:          0       0       0       0       0       0
  6716 ;;      Totals:         0       0       0       0       0       0
  6717 ;;Total ram usage:        0 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_TMR0_Initialize
  6723 ;;		_TMR0_CallBack
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727     0E2A                     _TMR0_DefaultInterruptHandler:	
  6728                           ;psect for function _TMR0_DefaultInterruptHandler
  6729                           
  6730     0E2A                     i1l613:	
  6731                           ;incstack = 0
  6732                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6733                           
  6734     0E2A  0008               	return
  6735     0E2B                     __end_of_TMR0_DefaultInterruptHandler:
  6736                           
  6737                           	psect	text39
  6738     02AB                     __ptext39:	
  6739 ;; *************** function _sendInfo *****************
  6740 ;; Defined at:
  6741 ;;		line 56 in file "main.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;		None
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  bcd             2   35[BANK0 ] struct .
  6746 ;;  velocidade      2   33[BANK0 ] unsigned short 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6756 ;;      Params:         0       0       0       0       0       0
  6757 ;;      Locals:         0       4       0       0       0       0
  6758 ;;      Temps:          0       2       0       0       0       0
  6759 ;;      Totals:         0       6       0       0       0       0
  6760 ;;Total ram usage:        6 bytes
  6761 ;; Hardware stack levels used: 1
  6762 ;; Hardware stack levels required when called: 2
  6763 ;; This function calls:
  6764 ;;		_EUSART_Write
  6765 ;;		___flmul
  6766 ;;		___fltol
  6767 ;;		_bin2bcd
  6768 ;; This function is called by:
  6769 ;;		_main
  6770 ;;		_TMR0_CallBack
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774     02AB                     _sendInfo:	
  6775                           ;psect for function _sendInfo
  6776                           
  6777     02AB                     i1l2868:	
  6778                           ;incstack = 0
  6779                           ; Regs used in _sendInfo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6780                           
  6781                           
  6782                           ;main.c: 58:     bcd16_t bcd;;main.c: 59:     uint16_t velocidade;;main.c: 61:     veloc
      +                          idade = (uint16_t)(velocidadeMotor * 10);
  6783     02AB  0020               	movlb	0	; select bank0
  6784     02AC  0848               	movf	_velocidadeMotor+3,w
  6785     02AD  00A7               	movwf	___flmul@a+3
  6786     02AE  0847               	movf	_velocidadeMotor+2,w
  6787     02AF  00A6               	movwf	___flmul@a+2
  6788     02B0  0846               	movf	_velocidadeMotor+1,w
  6789     02B1  00A5               	movwf	___flmul@a+1
  6790     02B2  0845               	movf	_velocidadeMotor,w
  6791     02B3  00A4               	movwf	___flmul@a
  6792     02B4  3041               	movlw	65
  6793     02B5  00A3               	movwf	___flmul@b+3
  6794     02B6  3020               	movlw	32
  6795     02B7  00A2               	movwf	___flmul@b+2
  6796     02B8  3000               	movlw	0
  6797     02B9  00A1               	movwf	___flmul@b+1
  6798     02BA  3000               	movlw	0
  6799     02BB  00A0               	movwf	___flmul@b
  6800     02BC  3180  2070  3182   	fcall	___flmul
  6801     02BF  0020               	movlb	0	; select bank0
  6802     02C0  0823               	movf	?___flmul+3,w
  6803     02C1  00B8               	movwf	___fltol@f1+3
  6804     02C2  0822               	movf	?___flmul+2,w
  6805     02C3  00B7               	movwf	___fltol@f1+2
  6806     02C4  0821               	movf	?___flmul+1,w
  6807     02C5  00B6               	movwf	___fltol@f1+1
  6808     02C6  0820               	movf	?___flmul,w
  6809     02C7  00B5               	movwf	___fltol@f1
  6810     02C8  3185  2527  3182   	fcall	___fltol
  6811     02CB  0020               	movlb	0	; select bank0
  6812     02CC  0836               	movf	?___fltol+1,w
  6813     02CD  00C2               	movwf	sendInfo@velocidade+1
  6814     02CE  0835               	movf	?___fltol,w
  6815     02CF  00C1               	movwf	sendInfo@velocidade
  6816                           
  6817                           ;main.c: 63:     EUSART_Write('$');
  6818     02D0  3024               	movlw	36
  6819     02D1  318E  269D  3182   	fcall	_EUSART_Write
  6820                           
  6821                           ;main.c: 64:     EUSART_Write(0x30 + origem);
  6822     02D4  0020               	movlb	0	; select bank0
  6823     02D5  0860               	movf	_origem,w
  6824     02D6  3E30               	addlw	48
  6825     02D7  318E  269D  3182   	fcall	_EUSART_Write
  6826                           
  6827                           ;main.c: 65:     EUSART_Write(0x2C);
  6828     02DA  302C               	movlw	44
  6829     02DB  318E  269D  3182   	fcall	_EUSART_Write
  6830                           
  6831                           ;main.c: 66:     EUSART_Write(0x30 + destino);
  6832     02DE  0020               	movlb	0	; select bank0
  6833     02DF  085E               	movf	_destino,w
  6834     02E0  3E30               	addlw	48
  6835     02E1  318E  269D  3182   	fcall	_EUSART_Write
  6836                           
  6837                           ;main.c: 67:     EUSART_Write(0x2C);
  6838     02E4  302C               	movlw	44
  6839     02E5  318E  269D  3182   	fcall	_EUSART_Write
  6840                           
  6841                           ;main.c: 68:     EUSART_Write(0x30 + andarAtual);
  6842     02E8  0020               	movlb	0	; select bank0
  6843     02E9  085C               	movf	_andarAtual,w
  6844     02EA  3E30               	addlw	48
  6845     02EB  318E  269D  3182   	fcall	_EUSART_Write
  6846                           
  6847                           ;main.c: 69:     EUSART_Write(0x2C);
  6848     02EE  302C               	movlw	44
  6849     02EF  318E  269D  3182   	fcall	_EUSART_Write
  6850                           
  6851                           ;main.c: 70:     EUSART_Write(0);
  6852     02F2  3000               	movlw	0
  6853     02F3  318E  269D  3182   	fcall	_EUSART_Write
  6854                           
  6855                           ;main.c: 71:     EUSART_Write(0x2C);
  6856     02F6  302C               	movlw	44
  6857     02F7  318E  269D  3182   	fcall	_EUSART_Write
  6858     02FA                     i1l2870:
  6859                           
  6860                           ;main.c: 73:     bcd.v = bin2bcd(altura);
  6861     02FA  0020               	movlb	0	; select bank0
  6862     02FB  085B               	movf	_altura,w
  6863     02FC  00BF               	movwf	??_sendInfo
  6864     02FD  01C0               	clrf	??_sendInfo+1
  6865     02FE  083F               	movf	??_sendInfo,w
  6866     02FF  00FA               	movwf	bin2bcd@binVal
  6867     0300  0840               	movf	??_sendInfo+1,w
  6868     0301  00FB               	movwf	bin2bcd@binVal+1
  6869     0302  3183  237C  3182   	fcall	_bin2bcd
  6870     0305  087B               	movf	?_bin2bcd+1,w
  6871     0306  0020               	movlb	0	; select bank0
  6872     0307  00C4               	movwf	sendInfo@bcd+1
  6873     0308  087A               	movf	?_bin2bcd,w
  6874     0309  00C3               	movwf	sendInfo@bcd
  6875     030A                     i1l2872:
  6876                           
  6877                           ;main.c: 74:     EUSART_Write(bcd.num2 + 0x30);
  6878     030A  0844               	movf	sendInfo@bcd+1,w
  6879     030B  390F               	andlw	15
  6880     030C  3E30               	addlw	48
  6881     030D  318E  269D  3182   	fcall	_EUSART_Write
  6882     0310                     i1l2874:
  6883                           
  6884                           ;main.c: 75:     EUSART_Write(bcd.num3 + 0x30);
  6885     0310  0020               	movlb	0	; select bank0
  6886     0311  0E43               	swapf	sendInfo@bcd,w
  6887     0312  390F               	andlw	15
  6888     0313  3E30               	addlw	48
  6889     0314  318E  269D  3182   	fcall	_EUSART_Write
  6890     0317                     i1l2876:
  6891                           
  6892                           ;main.c: 76:     EUSART_Write(bcd.num4 + 0x30);
  6893     0317  0020               	movlb	0	; select bank0
  6894     0318  0843               	movf	sendInfo@bcd,w
  6895     0319  390F               	andlw	15
  6896     031A  3E30               	addlw	48
  6897     031B  318E  269D  3182   	fcall	_EUSART_Write
  6898     031E                     i1l2878:
  6899                           
  6900                           ;main.c: 77:     EUSART_Write(0x2C);
  6901     031E  302C               	movlw	44
  6902     031F  318E  269D  3182   	fcall	_EUSART_Write
  6903     0322                     i1l2880:
  6904                           
  6905                           ;main.c: 79:     bcd.v = bin2bcd(velocidade);
  6906     0322  0020               	movlb	0	; select bank0
  6907     0323  0842               	movf	sendInfo@velocidade+1,w
  6908     0324  00FB               	movwf	bin2bcd@binVal+1
  6909     0325  0841               	movf	sendInfo@velocidade,w
  6910     0326  00FA               	movwf	bin2bcd@binVal
  6911     0327  3183  237C  3182   	fcall	_bin2bcd
  6912     032A  087B               	movf	?_bin2bcd+1,w
  6913     032B  0020               	movlb	0	; select bank0
  6914     032C  00C4               	movwf	sendInfo@bcd+1
  6915     032D  087A               	movf	?_bin2bcd,w
  6916     032E  00C3               	movwf	sendInfo@bcd
  6917                           
  6918                           ;main.c: 80:     EUSART_Write(bcd.num2 + 0x30);
  6919     032F  0844               	movf	sendInfo@bcd+1,w
  6920     0330  390F               	andlw	15
  6921     0331  3E30               	addlw	48
  6922     0332  318E  269D  3182   	fcall	_EUSART_Write
  6923                           
  6924                           ;main.c: 81:     EUSART_Write(bcd.num3 + 0x30);
  6925     0335  0020               	movlb	0	; select bank0
  6926     0336  0E43               	swapf	sendInfo@bcd,w
  6927     0337  390F               	andlw	15
  6928     0338  3E30               	addlw	48
  6929     0339  318E  269D  3182   	fcall	_EUSART_Write
  6930                           
  6931                           ;main.c: 82:     EUSART_Write(0x2E);
  6932     033C  302E               	movlw	46
  6933     033D  318E  269D  3182   	fcall	_EUSART_Write
  6934                           
  6935                           ;main.c: 83:     EUSART_Write(bcd.num4 + 0x30);
  6936     0340  0020               	movlb	0	; select bank0
  6937     0341  0843               	movf	sendInfo@bcd,w
  6938     0342  390F               	andlw	15
  6939     0343  3E30               	addlw	48
  6940     0344  318E  269D  3182   	fcall	_EUSART_Write
  6941                           
  6942                           ;main.c: 84:     EUSART_Write(0x2C);
  6943     0347  302C               	movlw	44
  6944     0348  318E  269D  3182   	fcall	_EUSART_Write
  6945     034B                     i1l2882:
  6946                           
  6947                           ;main.c: 86:     bcd.v = bin2bcd(temperatura);
  6948     034B  0020               	movlb	0	; select bank0
  6949     034C  0852               	movf	_temperatura+1,w
  6950     034D  00FB               	movwf	bin2bcd@binVal+1
  6951     034E  0851               	movf	_temperatura,w
  6952     034F  00FA               	movwf	bin2bcd@binVal
  6953     0350  3183  237C  3182   	fcall	_bin2bcd
  6954     0353  087B               	movf	?_bin2bcd+1,w
  6955     0354  0020               	movlb	0	; select bank0
  6956     0355  00C4               	movwf	sendInfo@bcd+1
  6957     0356  087A               	movf	?_bin2bcd,w
  6958     0357  00C3               	movwf	sendInfo@bcd
  6959     0358                     i1l2884:
  6960                           
  6961                           ;main.c: 87:     EUSART_Write(bcd.num1 + 0x30);
  6962     0358  0E44               	swapf	sendInfo@bcd+1,w
  6963     0359  390F               	andlw	15
  6964     035A  3E30               	addlw	48
  6965     035B  318E  269D  3182   	fcall	_EUSART_Write
  6966     035E                     i1l2886:
  6967                           
  6968                           ;main.c: 88:     EUSART_Write(bcd.num2 + 0x30);
  6969     035E  0020               	movlb	0	; select bank0
  6970     035F  0844               	movf	sendInfo@bcd+1,w
  6971     0360  390F               	andlw	15
  6972     0361  3E30               	addlw	48
  6973     0362  318E  269D  3182   	fcall	_EUSART_Write
  6974     0365                     i1l2888:
  6975                           
  6976                           ;main.c: 89:     EUSART_Write(bcd.num3 + 0x30);
  6977     0365  0020               	movlb	0	; select bank0
  6978     0366  0E43               	swapf	sendInfo@bcd,w
  6979     0367  390F               	andlw	15
  6980     0368  3E30               	addlw	48
  6981     0369  318E  269D  3182   	fcall	_EUSART_Write
  6982     036C                     i1l2890:
  6983                           
  6984                           ;main.c: 90:     EUSART_Write(0x2E);
  6985     036C  302E               	movlw	46
  6986     036D  318E  269D  3182   	fcall	_EUSART_Write
  6987     0370                     i1l2892:
  6988                           
  6989                           ;main.c: 91:     EUSART_Write(bcd.num4 + 0x30);
  6990     0370  0020               	movlb	0	; select bank0
  6991     0371  0843               	movf	sendInfo@bcd,w
  6992     0372  390F               	andlw	15
  6993     0373  3E30               	addlw	48
  6994     0374  318E  269D  3182   	fcall	_EUSART_Write
  6995     0377                     i1l2894:
  6996                           
  6997                           ;main.c: 92:     EUSART_Write(0x0D);
  6998     0377  300D               	movlw	13
  6999     0378  318E  269D  3182   	fcall	_EUSART_Write
  7000     037B                     i1l689:
  7001     037B  0008               	return
  7002     037C                     __end_of_sendInfo:
  7003                           
  7004                           	psect	text40
  7005     037C                     __ptext40:	
  7006 ;; *************** function _bin2bcd *****************
  7007 ;; Defined at:
  7008 ;;		line 10 in file "bin2bcd.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  binVal          2   10[COMMON] unsigned short 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  i               1    4[BANK0 ] unsigned char 
  7013 ;;  dataU           4    5[BANK0 ] struct .
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  2   10[COMMON] unsigned short 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7023 ;;      Params:         2       0       0       0       0       0
  7024 ;;      Locals:         0       5       0       0       0       0
  7025 ;;      Temps:          0       4       0       0       0       0
  7026 ;;      Totals:         2       9       0       0       0       0
  7027 ;;Total ram usage:       11 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 1
  7030 ;; This function calls:
  7031 ;;		_memset
  7032 ;; This function is called by:
  7033 ;;		_sendInfo
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037     037C                     _bin2bcd:	
  7038                           ;psect for function _bin2bcd
  7039                           
  7040     037C                     i1l2610:	
  7041                           ;incstack = 0
  7042                           ; Regs used in _bin2bcd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7043                           
  7044                           
  7045                           ;bin2bcd.c: 22:     }dataU;;bin2bcd.c: 23:     memset(&dataU,0,4);
  7046     037C  3000               	movlw	0
  7047     037D  00F0               	movwf	memset@c
  7048     037E  00F1               	movwf	memset@c+1
  7049     037F  3004               	movlw	4
  7050     0380  00F2               	movwf	memset@n
  7051     0381  3000               	movlw	0
  7052     0382  00F3               	movwf	memset@n+1
  7053     0383  3025               	movlw	(low (bin2bcd@dataU| 0))& (0+255)
  7054     0384  3184  240E  3183   	fcall	_memset
  7055     0387                     i1l2612:
  7056                           
  7057                           ;bin2bcd.c: 24:     dataU.shift = (uint32_t)binVal;
  7058     0387  087A               	movf	bin2bcd@binVal,w
  7059     0388  0020               	movlb	0	; select bank0
  7060     0389  00A5               	movwf	bin2bcd@dataU
  7061     038A  087B               	movf	bin2bcd@binVal+1,w
  7062     038B  00A6               	movwf	bin2bcd@dataU+1
  7063     038C  01A7               	clrf	bin2bcd@dataU+2
  7064     038D  01A8               	clrf	bin2bcd@dataU+3
  7065     038E                     i1l2614:
  7066                           
  7067                           ;bin2bcd.c: 25:     for(uint8_t i=0;i<12;i++){
  7068     038E  01A4               	clrf	bin2bcd@i
  7069     038F                     i1l2620:
  7070                           
  7071                           ;bin2bcd.c: 26:    if(dataU.dat.d0>=5){
  7072     038F  0828               	movf	bin2bcd@dataU+3,w
  7073     0390  390F               	andlw	15
  7074     0391  00A0               	movwf	??_bin2bcd
  7075     0392  3005               	movlw	5
  7076     0393  0220               	subwf	??_bin2bcd,w
  7077     0394  1C03               	skipc
  7078     0395  2B97               	goto	u119_21
  7079     0396  2B98               	goto	u119_20
  7080     0397                     u119_21:
  7081     0397  2BA1               	goto	i1l774
  7082     0398                     u119_20:
  7083     0398                     i1l2622:
  7084                           
  7085                           ;bin2bcd.c: 27:     dataU.dat.d0 = dataU.dat.d0 + 3;
  7086     0398  0828               	movf	bin2bcd@dataU+3,w
  7087     0399  390F               	andlw	15
  7088     039A  3E03               	addlw	3
  7089     039B  00A0               	movwf	??_bin2bcd
  7090     039C  0828               	movf	bin2bcd@dataU+3,w
  7091     039D  0620               	xorwf	??_bin2bcd,w
  7092     039E  39F0               	andlw	-16
  7093     039F  0620               	xorwf	??_bin2bcd,w
  7094     03A0  00A8               	movwf	bin2bcd@dataU+3
  7095     03A1                     i1l774:	
  7096                           ;bin2bcd.c: 28:    }
  7097                           
  7098                           
  7099                           ;bin2bcd.c: 29:    if(dataU.dat.d1>=5){
  7100     03A1  0E27               	swapf	bin2bcd@dataU+2,w
  7101     03A2  390F               	andlw	15
  7102     03A3  00A0               	movwf	??_bin2bcd
  7103     03A4  3005               	movlw	5
  7104     03A5  0220               	subwf	??_bin2bcd,w
  7105     03A6  1C03               	skipc
  7106     03A7  2BA9               	goto	u120_21
  7107     03A8  2BAA               	goto	u120_20
  7108     03A9                     u120_21:
  7109     03A9  2BB4               	goto	i1l775
  7110     03AA                     u120_20:
  7111     03AA                     i1l2624:
  7112                           
  7113                           ;bin2bcd.c: 30:     dataU.dat.d1 = dataU.dat.d1 + 3;
  7114     03AA  0E27               	swapf	bin2bcd@dataU+2,w
  7115     03AB  390F               	andlw	15
  7116     03AC  3E03               	addlw	3
  7117     03AD  00A0               	movwf	??_bin2bcd
  7118     03AE  0EA0               	swapf	??_bin2bcd,f
  7119     03AF  0827               	movf	bin2bcd@dataU+2,w
  7120     03B0  0620               	xorwf	??_bin2bcd,w
  7121     03B1  390F               	andlw	-241
  7122     03B2  0620               	xorwf	??_bin2bcd,w
  7123     03B3  00A7               	movwf	bin2bcd@dataU+2
  7124     03B4                     i1l775:	
  7125                           ;bin2bcd.c: 31:    }
  7126                           
  7127                           
  7128                           ;bin2bcd.c: 32:             if(dataU.dat.d2>=5){
  7129     03B4  0827               	movf	bin2bcd@dataU+2,w
  7130     03B5  390F               	andlw	15
  7131     03B6  00A0               	movwf	??_bin2bcd
  7132     03B7  3005               	movlw	5
  7133     03B8  0220               	subwf	??_bin2bcd,w
  7134     03B9  1C03               	skipc
  7135     03BA  2BBC               	goto	u121_21
  7136     03BB  2BBD               	goto	u121_20
  7137     03BC                     u121_21:
  7138     03BC  2BC6               	goto	i1l776
  7139     03BD                     u121_20:
  7140     03BD                     i1l2626:
  7141                           
  7142                           ;bin2bcd.c: 33:     dataU.dat.d2 = dataU.dat.d2 + 3;
  7143     03BD  0827               	movf	bin2bcd@dataU+2,w
  7144     03BE  390F               	andlw	15
  7145     03BF  3E03               	addlw	3
  7146     03C0  00A0               	movwf	??_bin2bcd
  7147     03C1  0827               	movf	bin2bcd@dataU+2,w
  7148     03C2  0620               	xorwf	??_bin2bcd,w
  7149     03C3  39F0               	andlw	-16
  7150     03C4  0620               	xorwf	??_bin2bcd,w
  7151     03C5  00A7               	movwf	bin2bcd@dataU+2
  7152     03C6                     i1l776:	
  7153                           ;bin2bcd.c: 34:    }
  7154                           
  7155                           
  7156                           ;bin2bcd.c: 35:             if(dataU.dat.d3>=5){
  7157     03C6  0E26               	swapf	bin2bcd@dataU+1,w
  7158     03C7  390F               	andlw	15
  7159     03C8  00A0               	movwf	??_bin2bcd
  7160     03C9  3005               	movlw	5
  7161     03CA  0220               	subwf	??_bin2bcd,w
  7162     03CB  1C03               	skipc
  7163     03CC  2BCE               	goto	u122_21
  7164     03CD  2BCF               	goto	u122_20
  7165     03CE                     u122_21:
  7166     03CE  2BD9               	goto	i1l777
  7167     03CF                     u122_20:
  7168     03CF                     i1l2628:
  7169                           
  7170                           ;bin2bcd.c: 36:     dataU.dat.d3 = dataU.dat.d3 + 3;
  7171     03CF  0E26               	swapf	bin2bcd@dataU+1,w
  7172     03D0  390F               	andlw	15
  7173     03D1  3E03               	addlw	3
  7174     03D2  00A0               	movwf	??_bin2bcd
  7175     03D3  0EA0               	swapf	??_bin2bcd,f
  7176     03D4  0826               	movf	bin2bcd@dataU+1,w
  7177     03D5  0620               	xorwf	??_bin2bcd,w
  7178     03D6  390F               	andlw	-241
  7179     03D7  0620               	xorwf	??_bin2bcd,w
  7180     03D8  00A6               	movwf	bin2bcd@dataU+1
  7181     03D9                     i1l777:	
  7182                           ;bin2bcd.c: 37:    }
  7183                           
  7184                           
  7185                           ;bin2bcd.c: 38:    dataU.shift = dataU.shift<<1;
  7186     03D9  0825               	movf	bin2bcd@dataU,w
  7187     03DA  00A0               	movwf	??_bin2bcd
  7188     03DB  0826               	movf	bin2bcd@dataU+1,w
  7189     03DC  00A1               	movwf	??_bin2bcd+1
  7190     03DD  0827               	movf	bin2bcd@dataU+2,w
  7191     03DE  00A2               	movwf	??_bin2bcd+2
  7192     03DF  0828               	movf	bin2bcd@dataU+3,w
  7193     03E0  00A3               	movwf	??_bin2bcd+3
  7194     03E1  3001               	movlw	1
  7195     03E2                     u123_25:
  7196     03E2  35A0               	lslf	??_bin2bcd,f
  7197     03E3  0DA1               	rlf	??_bin2bcd+1,f
  7198     03E4  0DA2               	rlf	??_bin2bcd+2,f
  7199     03E5  0DA3               	rlf	??_bin2bcd+3,f
  7200     03E6                     u123_20:
  7201     03E6  0B89               	decfsz	9,f
  7202     03E7  2BE2               	goto	u123_25
  7203     03E8  0823               	movf	??_bin2bcd+3,w
  7204     03E9  00A8               	movwf	bin2bcd@dataU+3
  7205     03EA  0822               	movf	??_bin2bcd+2,w
  7206     03EB  00A7               	movwf	bin2bcd@dataU+2
  7207     03EC  0821               	movf	??_bin2bcd+1,w
  7208     03ED  00A6               	movwf	bin2bcd@dataU+1
  7209     03EE  0820               	movf	??_bin2bcd,w
  7210     03EF  00A5               	movwf	bin2bcd@dataU
  7211                           
  7212                           ;bin2bcd.c: 39:     }
  7213     03F0  3001               	movlw	1
  7214     03F1  00A0               	movwf	??_bin2bcd
  7215     03F2  0820               	movf	??_bin2bcd,w
  7216     03F3  07A4               	addwf	bin2bcd@i,f
  7217     03F4                     i1l2630:
  7218     03F4  300C               	movlw	12
  7219     03F5  0224               	subwf	bin2bcd@i,w
  7220     03F6  1C03               	skipc
  7221     03F7  2BF9               	goto	u124_21
  7222     03F8  2BFA               	goto	u124_20
  7223     03F9                     u124_21:
  7224     03F9  2B8F               	goto	i1l2620
  7225     03FA                     u124_20:
  7226     03FA                     i1l2632:
  7227                           
  7228                           ;bin2bcd.c: 40:     return (uint16_t)(dataU.shift>>12);
  7229     03FA  0825               	movf	bin2bcd@dataU,w
  7230     03FB  00A0               	movwf	??_bin2bcd
  7231     03FC  0826               	movf	bin2bcd@dataU+1,w
  7232     03FD  00A1               	movwf	??_bin2bcd+1
  7233     03FE  0827               	movf	bin2bcd@dataU+2,w
  7234     03FF  00A2               	movwf	??_bin2bcd+2
  7235     0400  0828               	movf	bin2bcd@dataU+3,w
  7236     0401  00A3               	movwf	??_bin2bcd+3
  7237     0402  300C               	movlw	12
  7238     0403                     u125_25:
  7239     0403  36A3               	lsrf	??_bin2bcd+3,f
  7240     0404  0CA2               	rrf	??_bin2bcd+2,f
  7241     0405  0CA1               	rrf	??_bin2bcd+1,f
  7242     0406  0CA0               	rrf	??_bin2bcd,f
  7243     0407                     u125_20:
  7244     0407  0B89               	decfsz	9,f
  7245     0408  2C03               	goto	u125_25
  7246     0409  0821               	movf	??_bin2bcd+1,w
  7247     040A  00FB               	movwf	?_bin2bcd+1
  7248     040B  0820               	movf	??_bin2bcd,w
  7249     040C  00FA               	movwf	?_bin2bcd
  7250     040D                     i1l778:
  7251     040D  0008               	return
  7252     040E                     __end_of_bin2bcd:
  7253                           
  7254                           	psect	text41
  7255     040E                     __ptext41:	
  7256 ;; *************** function _memset *****************
  7257 ;; Defined at:
  7258 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  dest            1    wreg     PTR void 
  7261 ;;		 -> bin2bcd@dataU(4), 
  7262 ;;  c               2    0[COMMON] int 
  7263 ;;  n               2    2[COMMON] unsigned int 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  dest            1    8[COMMON] PTR void 
  7266 ;;		 -> bin2bcd@dataU(4), 
  7267 ;;  k               2    6[COMMON] unsigned int 
  7268 ;;  s               1    9[COMMON] PTR unsigned char 
  7269 ;;		 -> bin2bcd@dataU(4), 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      PTR void 
  7272 ;; Registers used:
  7273 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7279 ;;      Params:         4       0       0       0       0       0
  7280 ;;      Locals:         4       0       0       0       0       0
  7281 ;;      Temps:          2       0       0       0       0       0
  7282 ;;      Totals:        10       0       0       0       0       0
  7283 ;;Total ram usage:       10 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_bin2bcd
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292     040E                     _memset:	
  7293                           ;psect for function _memset
  7294                           
  7295                           
  7296                           ;incstack = 0
  7297                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7298                           ;memset@dest stored from wreg
  7299     040E  00F8               	movwf	memset@dest
  7300     040F                     i1l2542:
  7301     040F  0878               	movf	memset@dest,w
  7302     0410  00F9               	movwf	memset@s
  7303     0411                     i1l2544:
  7304     0411  0872               	movf	memset@n,w
  7305     0412  0473               	iorwf	memset@n+1,w
  7306     0413  1D03               	btfss	3,2
  7307     0414  2C16               	goto	u110_21
  7308     0415  2C17               	goto	u110_20
  7309     0416                     u110_21:
  7310     0416  2C18               	goto	i1l2548
  7311     0417                     u110_20:
  7312     0417  2C9D               	goto	i1l1468
  7313     0418                     i1l2548:
  7314     0418  0879               	movf	memset@s,w
  7315     0419  0086               	movwf	6
  7316     041A  0187               	clrf	7
  7317     041B  0870               	movf	memset@c,w
  7318     041C  0081               	movwf	1
  7319     041D                     i1l2550:
  7320     041D  0872               	movf	memset@n,w
  7321     041E  0779               	addwf	memset@s,w
  7322     041F  00F4               	movwf	??_memset
  7323     0420  0874               	movf	??_memset,w
  7324     0421  3EFF               	addlw	255
  7325     0422  0086               	movwf	6
  7326     0423  0187               	clrf	7
  7327     0424  0870               	movf	memset@c,w
  7328     0425  0081               	movwf	1
  7329     0426                     i1l2552:
  7330     0426  3000               	movlw	0
  7331     0427  0273               	subwf	memset@n+1,w
  7332     0428  3003               	movlw	3
  7333     0429  1903               	skipnz
  7334     042A  0272               	subwf	memset@n,w
  7335     042B  1803               	skipnc
  7336     042C  2C2E               	goto	u111_21
  7337     042D  2C2F               	goto	u111_20
  7338     042E                     u111_21:
  7339     042E  2C30               	goto	i1l2556
  7340     042F                     u111_20:
  7341     042F  2C9D               	goto	i1l1468
  7342     0430                     i1l2556:
  7343     0430  0A79               	incf	memset@s,w
  7344     0431  0086               	movwf	6
  7345     0432  0187               	clrf	7
  7346     0433  0870               	movf	memset@c,w
  7347     0434  0081               	movwf	1
  7348     0435                     i1l2558:
  7349     0435  0879               	movf	memset@s,w
  7350     0436  3E02               	addlw	2
  7351     0437  0086               	movwf	6
  7352     0438  0187               	clrf	7
  7353     0439  0870               	movf	memset@c,w
  7354     043A  0081               	movwf	1
  7355     043B                     i1l2560:
  7356     043B  0872               	movf	memset@n,w
  7357     043C  0779               	addwf	memset@s,w
  7358     043D  00F4               	movwf	??_memset
  7359     043E  0874               	movf	??_memset,w
  7360     043F  3EFE               	addlw	254
  7361     0440  0086               	movwf	6
  7362     0441  0187               	clrf	7
  7363     0442  0870               	movf	memset@c,w
  7364     0443  0081               	movwf	1
  7365     0444                     i1l2562:
  7366     0444  0872               	movf	memset@n,w
  7367     0445  0779               	addwf	memset@s,w
  7368     0446  00F4               	movwf	??_memset
  7369     0447  0874               	movf	??_memset,w
  7370     0448  3EFD               	addlw	253
  7371     0449  0086               	movwf	6
  7372     044A  0187               	clrf	7
  7373     044B  0870               	movf	memset@c,w
  7374     044C  0081               	movwf	1
  7375     044D                     i1l2564:
  7376     044D  3000               	movlw	0
  7377     044E  0273               	subwf	memset@n+1,w
  7378     044F  3007               	movlw	7
  7379     0450  1903               	skipnz
  7380     0451  0272               	subwf	memset@n,w
  7381     0452  1803               	skipnc
  7382     0453  2C55               	goto	u112_21
  7383     0454  2C56               	goto	u112_20
  7384     0455                     u112_21:
  7385     0455  2C57               	goto	i1l2568
  7386     0456                     u112_20:
  7387     0456  2C9D               	goto	i1l1468
  7388     0457                     i1l2568:
  7389     0457  0879               	movf	memset@s,w
  7390     0458  3E03               	addlw	3
  7391     0459  0086               	movwf	6
  7392     045A  0187               	clrf	7
  7393     045B  0870               	movf	memset@c,w
  7394     045C  0081               	movwf	1
  7395     045D  0872               	movf	memset@n,w
  7396     045E  0779               	addwf	memset@s,w
  7397     045F  00F4               	movwf	??_memset
  7398     0460  0874               	movf	??_memset,w
  7399     0461  3EFC               	addlw	252
  7400     0462  0086               	movwf	6
  7401     0463  0187               	clrf	7
  7402     0464  0870               	movf	memset@c,w
  7403     0465  0081               	movwf	1
  7404     0466                     i1l2570:
  7405     0466  3000               	movlw	0
  7406     0467  0273               	subwf	memset@n+1,w
  7407     0468  3009               	movlw	9
  7408     0469  1903               	skipnz
  7409     046A  0272               	subwf	memset@n,w
  7410     046B  1803               	skipnc
  7411     046C  2C6E               	goto	u113_21
  7412     046D  2C6F               	goto	u113_20
  7413     046E                     u113_21:
  7414     046E  2C70               	goto	i1l2574
  7415     046F                     u113_20:
  7416     046F  2C9D               	goto	i1l1468
  7417     0470                     i1l2574:
  7418     0470  0979               	comf	memset@s,w
  7419     0471  00F4               	movwf	??_memset
  7420     0472  097A               	comf	memset@s+1,w
  7421     0473  00F5               	movwf	??_memset+1
  7422     0474  0AF4               	incf	??_memset,f
  7423     0475  1903               	skipnz
  7424     0476  0AF5               	incf	??_memset+1,f
  7425     0477  3003               	movlw	3
  7426     0478  0574               	andwf	??_memset,w
  7427     0479  00F6               	movwf	memset@k
  7428     047A  3000               	movlw	0
  7429     047B  0575               	andwf	??_memset+1,w
  7430     047C  00F7               	movwf	memset@k+1
  7431     047D  0876               	movf	memset@k,w
  7432     047E  00F4               	movwf	??_memset
  7433     047F  0874               	movf	??_memset,w
  7434     0480  07F9               	addwf	memset@s,f
  7435     0481                     i1l2576:
  7436     0481  0876               	movf	memset@k,w
  7437     0482  02F2               	subwf	memset@n,f
  7438     0483  0877               	movf	memset@k+1,w
  7439     0484  3BF3               	subwfb	memset@n+1,f
  7440     0485                     i1l2578:
  7441     0485  30FC               	movlw	252
  7442     0486  05F2               	andwf	memset@n,f
  7443     0487  30FF               	movlw	255
  7444     0488  05F3               	andwf	memset@n+1,f
  7445     0489  2C97               	goto	i1l2586
  7446     048A                     i1l2580:
  7447     048A  0879               	movf	memset@s,w
  7448     048B  0086               	movwf	6
  7449     048C  0187               	clrf	7
  7450     048D  0870               	movf	memset@c,w
  7451     048E  0081               	movwf	1
  7452     048F                     i1l2582:
  7453     048F  3001               	movlw	1
  7454     0490  02F2               	subwf	memset@n,f
  7455     0491  3000               	movlw	0
  7456     0492  3BF3               	subwfb	memset@n+1,f
  7457     0493                     i1l2584:
  7458     0493  3001               	movlw	1
  7459     0494  00F4               	movwf	??_memset
  7460     0495  0874               	movf	??_memset,w
  7461     0496  07F9               	addwf	memset@s,f
  7462     0497                     i1l2586:
  7463     0497  0872               	movf	memset@n,w
  7464     0498  0473               	iorwf	memset@n+1,w
  7465     0499  1D03               	btfss	3,2
  7466     049A  2C9C               	goto	u114_21
  7467     049B  2C9D               	goto	u114_20
  7468     049C                     u114_21:
  7469     049C  2C8A               	goto	i1l2580
  7470     049D                     u114_20:
  7471     049D                     i1l1468:
  7472     049D  0008               	return
  7473     049E                     __end_of_memset:
  7474                           
  7475                           	psect	text42
  7476     0527                     __ptext42:	
  7477 ;; *************** function ___fltol *****************
  7478 ;; Defined at:
  7479 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  f1              4   21[BANK0 ] PTR void 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  exp1            1   30[BANK0 ] unsigned char 
  7484 ;;  sign1           1   29[BANK0 ] unsigned char 
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  4   21[BANK0 ] long 
  7487 ;; Registers used:
  7488 ;;		wreg, status,2, status,0
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7494 ;;      Params:         0       4       0       0       0       0
  7495 ;;      Locals:         0       2       0       0       0       0
  7496 ;;      Temps:          0       4       0       0       0       0
  7497 ;;      Totals:         0      10       0       0       0       0
  7498 ;;Total ram usage:       10 bytes
  7499 ;; Hardware stack levels used: 1
  7500 ;; This function calls:
  7501 ;;		Nothing
  7502 ;; This function is called by:
  7503 ;;		_sendInfo
  7504 ;;		_interrupcaoCCP4
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508     0527                     ___fltol:	
  7509                           ;psect for function ___fltol
  7510                           
  7511     0527                     i1l2670:	
  7512                           ;incstack = 0
  7513                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7514                           
  7515     0527  1003               	clrc
  7516     0528  0020               	movlb	0	; select bank0
  7517     0529  0D37               	rlf	___fltol@f1+2,w
  7518     052A  0D38               	rlf	___fltol@f1+3,w
  7519     052B  00BE               	movwf	___fltol@exp1
  7520     052C  083E               	movf	___fltol@exp1,w
  7521     052D  1D03               	btfss	3,2
  7522     052E  2D30               	goto	u127_21
  7523     052F  2D31               	goto	u127_20
  7524     0530                     u127_21:
  7525     0530  2D3A               	goto	i1l2676
  7526     0531                     u127_20:
  7527     0531                     i1l2672:
  7528     0531  3000               	movlw	0
  7529     0532  00B8               	movwf	?___fltol+3
  7530     0533  3000               	movlw	0
  7531     0534  00B7               	movwf	?___fltol+2
  7532     0535  3000               	movlw	0
  7533     0536  00B6               	movwf	?___fltol+1
  7534     0537  3000               	movlw	0
  7535     0538  00B5               	movwf	?___fltol
  7536     0539  2D97               	goto	i1l1202
  7537     053A                     i1l2676:
  7538     053A  0835               	movf	___fltol@f1,w
  7539     053B  00B9               	movwf	??___fltol
  7540     053C  0836               	movf	___fltol@f1+1,w
  7541     053D  00BA               	movwf	??___fltol+1
  7542     053E  0837               	movf	___fltol@f1+2,w
  7543     053F  00BB               	movwf	??___fltol+2
  7544     0540  0838               	movf	___fltol@f1+3,w
  7545     0541  00BC               	movwf	??___fltol+3
  7546     0542  301F               	movlw	31
  7547     0543                     u128_25:
  7548     0543  36BC               	lsrf	??___fltol+3,f
  7549     0544  0CBB               	rrf	??___fltol+2,f
  7550     0545  0CBA               	rrf	??___fltol+1,f
  7551     0546  0CB9               	rrf	??___fltol,f
  7552     0547                     u128_20:
  7553     0547  0B89               	decfsz	9,f
  7554     0548  2D43               	goto	u128_25
  7555     0549  0839               	movf	??___fltol,w
  7556     054A  00BD               	movwf	___fltol@sign1
  7557     054B                     i1l2678:
  7558     054B  17B7               	bsf	___fltol@f1+2,7
  7559     054C                     i1l2680:
  7560     054C  30FF               	movlw	255
  7561     054D  05B5               	andwf	___fltol@f1,f
  7562     054E  30FF               	movlw	255
  7563     054F  05B6               	andwf	___fltol@f1+1,f
  7564     0550  30FF               	movlw	255
  7565     0551  05B7               	andwf	___fltol@f1+2,f
  7566     0552  3000               	movlw	0
  7567     0553  05B8               	andwf	___fltol@f1+3,f
  7568     0554                     i1l2682:
  7569     0554  3096               	movlw	150
  7570     0555  02BE               	subwf	___fltol@exp1,f
  7571     0556                     i1l2684:
  7572     0556  1FBE               	btfss	___fltol@exp1,7
  7573     0557  2D59               	goto	u129_21
  7574     0558  2D5A               	goto	u129_20
  7575     0559                     u129_21:
  7576     0559  2D72               	goto	i1l2694
  7577     055A                     u129_20:
  7578     055A                     i1l2686:
  7579     055A  083E               	movf	___fltol@exp1,w
  7580     055B  3A80               	xorlw	128
  7581     055C  3E97               	addlw	151
  7582     055D  1803               	skipnc
  7583     055E  2D60               	goto	u130_21
  7584     055F  2D61               	goto	u130_20
  7585     0560                     u130_21:
  7586     0560  2D62               	goto	i1l2692
  7587     0561                     u130_20:
  7588     0561  2D31               	goto	i1l2672
  7589     0562                     i1l2692:
  7590     0562  3001               	movlw	1
  7591     0563                     u131_25:
  7592     0563  36B8               	lsrf	___fltol@f1+3,f
  7593     0564  0CB7               	rrf	___fltol@f1+2,f
  7594     0565  0CB6               	rrf	___fltol@f1+1,f
  7595     0566  0CB5               	rrf	___fltol@f1,f
  7596     0567  0B89               	decfsz	9,f
  7597     0568  2D63               	goto	u131_25
  7598     0569  3001               	movlw	1
  7599     056A  00B9               	movwf	??___fltol
  7600     056B  0839               	movf	??___fltol,w
  7601     056C  07BE               	addwf	___fltol@exp1,f
  7602     056D  1D03               	btfss	3,2
  7603     056E  2D70               	goto	u132_21
  7604     056F  2D71               	goto	u132_20
  7605     0570                     u132_21:
  7606     0570  2D62               	goto	i1l2692
  7607     0571                     u132_20:
  7608     0571  2D87               	goto	i1l2702
  7609     0572                     i1l2694:
  7610     0572  3020               	movlw	32
  7611     0573  023E               	subwf	___fltol@exp1,w
  7612     0574  1C03               	skipc
  7613     0575  2D77               	goto	u133_21
  7614     0576  2D78               	goto	u133_20
  7615     0577                     u133_21:
  7616     0577  2D82               	goto	i1l1209
  7617     0578                     u133_20:
  7618     0578  2D31               	goto	i1l2672
  7619     0579                     i1l2700:
  7620     0579  3001               	movlw	1
  7621     057A                     u134_25:
  7622     057A  35B5               	lslf	___fltol@f1,f
  7623     057B  0DB6               	rlf	___fltol@f1+1,f
  7624     057C  0DB7               	rlf	___fltol@f1+2,f
  7625     057D  0DB8               	rlf	___fltol@f1+3,f
  7626     057E  0B89               	decfsz	9,f
  7627     057F  2D7A               	goto	u134_25
  7628     0580  3001               	movlw	1
  7629     0581  02BE               	subwf	___fltol@exp1,f
  7630     0582                     i1l1209:
  7631     0582  083E               	movf	___fltol@exp1,w
  7632     0583  1D03               	btfss	3,2
  7633     0584  2D86               	goto	u135_21
  7634     0585  2D87               	goto	u135_20
  7635     0586                     u135_21:
  7636     0586  2D79               	goto	i1l2700
  7637     0587                     u135_20:
  7638     0587                     i1l2702:
  7639     0587  083D               	movf	___fltol@sign1,w
  7640     0588  1903               	btfsc	3,2
  7641     0589  2D8B               	goto	u136_21
  7642     058A  2D8C               	goto	u136_20
  7643     058B                     u136_21:
  7644     058B  2D97               	goto	i1l1212
  7645     058C                     u136_20:
  7646     058C                     i1l2704:
  7647     058C  09B5               	comf	___fltol@f1,f
  7648     058D  09B6               	comf	___fltol@f1+1,f
  7649     058E  09B7               	comf	___fltol@f1+2,f
  7650     058F  09B8               	comf	___fltol@f1+3,f
  7651     0590  0AB5               	incf	___fltol@f1,f
  7652     0591  1903               	skipnz
  7653     0592  0AB6               	incf	___fltol@f1+1,f
  7654     0593  1903               	skipnz
  7655     0594  0AB7               	incf	___fltol@f1+2,f
  7656     0595  1903               	skipnz
  7657     0596  0AB8               	incf	___fltol@f1+3,f
  7658     0597                     i1l1212:
  7659     0597                     i1l1202:
  7660     0597  0008               	return
  7661     0598                     __end_of___fltol:
  7662                           
  7663                           	psect	text43
  7664     0070                     __ptext43:	
  7665 ;; *************** function ___flmul *****************
  7666 ;; Defined at:
  7667 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  b               4    0[BANK0 ] long 
  7670 ;;  a               4    4[BANK0 ] long 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  prod            4   15[BANK0 ] struct .
  7673 ;;  grs             4    9[BANK0 ] unsigned long 
  7674 ;;  temp            2   19[BANK0 ] struct .
  7675 ;;  bexp            1   14[BANK0 ] unsigned char 
  7676 ;;  aexp            1   13[BANK0 ] unsigned char 
  7677 ;;  sign            1    8[BANK0 ] unsigned char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  4    0[BANK0 ] unsigned char 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0, pclath, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7687 ;;      Params:         0       8       0       0       0       0
  7688 ;;      Locals:         0      13       0       0       0       0
  7689 ;;      Temps:          5       0       0       0       0       0
  7690 ;;      Totals:         5      21       0       0       0       0
  7691 ;;Total ram usage:       26 bytes
  7692 ;; Hardware stack levels used: 1
  7693 ;; Hardware stack levels required when called: 1
  7694 ;; This function calls:
  7695 ;;		__Umul8_16
  7696 ;; This function is called by:
  7697 ;;		_sendInfo
  7698 ;;		_interrupcaoCCP4
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702     0070                     ___flmul:	
  7703                           ;psect for function ___flmul
  7704                           
  7705     0070                     i1l2706:	
  7706                           ;incstack = 0
  7707                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7708                           
  7709     0070  0020               	movlb	0	; select bank0
  7710     0071  0823               	movf	___flmul@b+3,w
  7711     0072  3980               	andlw	128
  7712     0073  00A8               	movwf	___flmul@sign
  7713     0074                     i1l2708:
  7714     0074  3523               	lslf	___flmul@b+3,w
  7715     0075  00AE               	movwf	___flmul@bexp
  7716     0076                     i1l2710:
  7717     0076  1FA2               	btfss	___flmul@b+2,7
  7718     0077  2879               	goto	u137_21
  7719     0078  287A               	goto	u137_20
  7720     0079                     u137_21:
  7721     0079  287B               	goto	i1l2714
  7722     007A                     u137_20:
  7723     007A                     i1l2712:
  7724     007A  142E               	bsf	___flmul@bexp,0
  7725     007B                     i1l2714:
  7726     007B  082E               	movf	___flmul@bexp,w
  7727     007C  1903               	btfsc	3,2
  7728     007D  287F               	goto	u138_21
  7729     007E  2880               	goto	u138_20
  7730     007F                     u138_21:
  7731     007F  288F               	goto	i1l2722
  7732     0080                     u138_20:
  7733     0080                     i1l2716:
  7734     0080  0A2E               	incf	___flmul@bexp,w
  7735     0081  1D03               	btfss	3,2
  7736     0082  2884               	goto	u139_21
  7737     0083  2885               	goto	u139_20
  7738     0084                     u139_21:
  7739     0084  288D               	goto	i1l2720
  7740     0085                     u139_20:
  7741     0085                     i1l2718:
  7742     0085  3000               	movlw	0
  7743     0086  00A3               	movwf	___flmul@b+3
  7744     0087  3000               	movlw	0
  7745     0088  00A2               	movwf	___flmul@b+2
  7746     0089  3000               	movlw	0
  7747     008A  00A1               	movwf	___flmul@b+1
  7748     008B  3000               	movlw	0
  7749     008C  00A0               	movwf	___flmul@b
  7750     008D                     i1l2720:
  7751     008D  17A2               	bsf	___flmul@b+2,7
  7752     008E  2897               	goto	i1l2724
  7753     008F                     i1l2722:
  7754     008F  3000               	movlw	0
  7755     0090  00A3               	movwf	___flmul@b+3
  7756     0091  3000               	movlw	0
  7757     0092  00A2               	movwf	___flmul@b+2
  7758     0093  3000               	movlw	0
  7759     0094  00A1               	movwf	___flmul@b+1
  7760     0095  3000               	movlw	0
  7761     0096  00A0               	movwf	___flmul@b
  7762     0097                     i1l2724:
  7763     0097  0827               	movf	___flmul@a+3,w
  7764     0098  3980               	andlw	128
  7765     0099  00F9               	movwf	??___flmul
  7766     009A  0879               	movf	??___flmul,w
  7767     009B  06A8               	xorwf	___flmul@sign,f
  7768     009C                     i1l2726:
  7769     009C  3527               	lslf	___flmul@a+3,w
  7770     009D  00AD               	movwf	___flmul@aexp
  7771     009E                     i1l2728:
  7772     009E  1FA6               	btfss	___flmul@a+2,7
  7773     009F  28A1               	goto	u140_21
  7774     00A0  28A2               	goto	u140_20
  7775     00A1                     u140_21:
  7776     00A1  28A3               	goto	i1l2732
  7777     00A2                     u140_20:
  7778     00A2                     i1l2730:
  7779     00A2  142D               	bsf	___flmul@aexp,0
  7780     00A3                     i1l2732:
  7781     00A3  082D               	movf	___flmul@aexp,w
  7782     00A4  1903               	btfsc	3,2
  7783     00A5  28A7               	goto	u141_21
  7784     00A6  28A8               	goto	u141_20
  7785     00A7                     u141_21:
  7786     00A7  28B7               	goto	i1l2740
  7787     00A8                     u141_20:
  7788     00A8                     i1l2734:
  7789     00A8  0A2D               	incf	___flmul@aexp,w
  7790     00A9  1D03               	btfss	3,2
  7791     00AA  28AC               	goto	u142_21
  7792     00AB  28AD               	goto	u142_20
  7793     00AC                     u142_21:
  7794     00AC  28B5               	goto	i1l2738
  7795     00AD                     u142_20:
  7796     00AD                     i1l2736:
  7797     00AD  3000               	movlw	0
  7798     00AE  00A7               	movwf	___flmul@a+3
  7799     00AF  3000               	movlw	0
  7800     00B0  00A6               	movwf	___flmul@a+2
  7801     00B1  3000               	movlw	0
  7802     00B2  00A5               	movwf	___flmul@a+1
  7803     00B3  3000               	movlw	0
  7804     00B4  00A4               	movwf	___flmul@a
  7805     00B5                     i1l2738:
  7806     00B5  17A6               	bsf	___flmul@a+2,7
  7807     00B6  28BF               	goto	i1l2742
  7808     00B7                     i1l2740:
  7809     00B7  3000               	movlw	0
  7810     00B8  00A7               	movwf	___flmul@a+3
  7811     00B9  3000               	movlw	0
  7812     00BA  00A6               	movwf	___flmul@a+2
  7813     00BB  3000               	movlw	0
  7814     00BC  00A5               	movwf	___flmul@a+1
  7815     00BD  3000               	movlw	0
  7816     00BE  00A4               	movwf	___flmul@a
  7817     00BF                     i1l2742:
  7818     00BF  082D               	movf	___flmul@aexp,w
  7819     00C0  1903               	btfsc	3,2
  7820     00C1  28C3               	goto	u143_21
  7821     00C2  28C4               	goto	u143_20
  7822     00C3                     u143_21:
  7823     00C3  28C9               	goto	i1l2746
  7824     00C4                     u143_20:
  7825     00C4                     i1l2744:
  7826     00C4  082E               	movf	___flmul@bexp,w
  7827     00C5  1D03               	btfss	3,2
  7828     00C6  28C8               	goto	u144_21
  7829     00C7  28C9               	goto	u144_20
  7830     00C8                     u144_21:
  7831     00C8  28D2               	goto	i1l2750
  7832     00C9                     u144_20:
  7833     00C9                     i1l2746:
  7834     00C9  3000               	movlw	0
  7835     00CA  00A3               	movwf	?___flmul+3
  7836     00CB  3000               	movlw	0
  7837     00CC  00A2               	movwf	?___flmul+2
  7838     00CD  3000               	movlw	0
  7839     00CE  00A1               	movwf	?___flmul+1
  7840     00CF  3000               	movlw	0
  7841     00D0  00A0               	movwf	?___flmul
  7842     00D1  2AAA               	goto	i1l1405
  7843     00D2                     i1l2750:
  7844     00D2  0820               	movf	___flmul@b,w
  7845     00D3  00F0               	movwf	__Umul8_16@multiplicand
  7846     00D4  0826               	movf	___flmul@a+2,w
  7847     00D5  318F  27DD  3180   	fcall	__Umul8_16
  7848     00D8  0871               	movf	?__Umul8_16+1,w
  7849     00D9  0020               	movlb	0	; select bank0
  7850     00DA  00B4               	movwf	___flmul@temp+1
  7851     00DB  0870               	movf	?__Umul8_16,w
  7852     00DC  00B3               	movwf	___flmul@temp
  7853     00DD                     i1l2752:
  7854     00DD  0833               	movf	___flmul@temp,w
  7855     00DE  00F9               	movwf	??___flmul
  7856     00DF  01FA               	clrf	??___flmul+1
  7857     00E0  01FB               	clrf	??___flmul+2
  7858     00E1  01FC               	clrf	??___flmul+3
  7859     00E2  087C               	movf	??___flmul+3,w
  7860     00E3  00AC               	movwf	___flmul@grs+3
  7861     00E4  087B               	movf	??___flmul+2,w
  7862     00E5  00AB               	movwf	___flmul@grs+2
  7863     00E6  087A               	movf	??___flmul+1,w
  7864     00E7  00AA               	movwf	___flmul@grs+1
  7865     00E8  0879               	movf	??___flmul,w
  7866     00E9  00A9               	movwf	___flmul@grs
  7867     00EA                     i1l2754:
  7868     00EA  0834               	movf	___flmul@temp+1,w
  7869     00EB  00F9               	movwf	??___flmul
  7870     00EC  01FA               	clrf	??___flmul+1
  7871     00ED  01FB               	clrf	??___flmul+2
  7872     00EE  01FC               	clrf	??___flmul+3
  7873     00EF  087C               	movf	??___flmul+3,w
  7874     00F0  00B2               	movwf	___flmul@prod+3
  7875     00F1  087B               	movf	??___flmul+2,w
  7876     00F2  00B1               	movwf	___flmul@prod+2
  7877     00F3  087A               	movf	??___flmul+1,w
  7878     00F4  00B0               	movwf	___flmul@prod+1
  7879     00F5  0879               	movf	??___flmul,w
  7880     00F6  00AF               	movwf	___flmul@prod
  7881     00F7  0821               	movf	___flmul@b+1,w
  7882     00F8  00F0               	movwf	__Umul8_16@multiplicand
  7883     00F9  0825               	movf	___flmul@a+1,w
  7884     00FA  318F  27DD  3180   	fcall	__Umul8_16
  7885     00FD  0871               	movf	?__Umul8_16+1,w
  7886     00FE  0020               	movlb	0	; select bank0
  7887     00FF  00B4               	movwf	___flmul@temp+1
  7888     0100  0870               	movf	?__Umul8_16,w
  7889     0101  00B3               	movwf	___flmul@temp
  7890     0102                     i1l2756:
  7891     0102  0833               	movf	___flmul@temp,w
  7892     0103  00F9               	movwf	??___flmul
  7893     0104  01FA               	clrf	??___flmul+1
  7894     0105  01FB               	clrf	??___flmul+2
  7895     0106  01FC               	clrf	??___flmul+3
  7896     0107  0879               	movf	??___flmul,w
  7897     0108  07A9               	addwf	___flmul@grs,f
  7898     0109  087A               	movf	??___flmul+1,w
  7899     010A  3DAA               	addwfc	___flmul@grs+1,f
  7900     010B  087B               	movf	??___flmul+2,w
  7901     010C  3DAB               	addwfc	___flmul@grs+2,f
  7902     010D  087C               	movf	??___flmul+3,w
  7903     010E  3DAC               	addwfc	___flmul@grs+3,f
  7904     010F                     i1l2758:
  7905     010F  0834               	movf	___flmul@temp+1,w
  7906     0110  00F9               	movwf	??___flmul
  7907     0111  01FA               	clrf	??___flmul+1
  7908     0112  01FB               	clrf	??___flmul+2
  7909     0113  01FC               	clrf	??___flmul+3
  7910     0114  0879               	movf	??___flmul,w
  7911     0115  07AF               	addwf	___flmul@prod,f
  7912     0116  087A               	movf	??___flmul+1,w
  7913     0117  3DB0               	addwfc	___flmul@prod+1,f
  7914     0118  087B               	movf	??___flmul+2,w
  7915     0119  3DB1               	addwfc	___flmul@prod+2,f
  7916     011A  087C               	movf	??___flmul+3,w
  7917     011B  3DB2               	addwfc	___flmul@prod+3,f
  7918     011C  0822               	movf	___flmul@b+2,w
  7919     011D  00F0               	movwf	__Umul8_16@multiplicand
  7920     011E  0824               	movf	___flmul@a,w
  7921     011F  318F  27DD  3180   	fcall	__Umul8_16
  7922     0122  0871               	movf	?__Umul8_16+1,w
  7923     0123  0020               	movlb	0	; select bank0
  7924     0124  00B4               	movwf	___flmul@temp+1
  7925     0125  0870               	movf	?__Umul8_16,w
  7926     0126  00B3               	movwf	___flmul@temp
  7927     0127                     i1l2760:
  7928     0127  0833               	movf	___flmul@temp,w
  7929     0128  00F9               	movwf	??___flmul
  7930     0129  01FA               	clrf	??___flmul+1
  7931     012A  01FB               	clrf	??___flmul+2
  7932     012B  01FC               	clrf	??___flmul+3
  7933     012C  0879               	movf	??___flmul,w
  7934     012D  07A9               	addwf	___flmul@grs,f
  7935     012E  087A               	movf	??___flmul+1,w
  7936     012F  3DAA               	addwfc	___flmul@grs+1,f
  7937     0130  087B               	movf	??___flmul+2,w
  7938     0131  3DAB               	addwfc	___flmul@grs+2,f
  7939     0132  087C               	movf	??___flmul+3,w
  7940     0133  3DAC               	addwfc	___flmul@grs+3,f
  7941     0134                     i1l2762:
  7942     0134  0834               	movf	___flmul@temp+1,w
  7943     0135  00F9               	movwf	??___flmul
  7944     0136  01FA               	clrf	??___flmul+1
  7945     0137  01FB               	clrf	??___flmul+2
  7946     0138  01FC               	clrf	??___flmul+3
  7947     0139  0879               	movf	??___flmul,w
  7948     013A  07AF               	addwf	___flmul@prod,f
  7949     013B  087A               	movf	??___flmul+1,w
  7950     013C  3DB0               	addwfc	___flmul@prod+1,f
  7951     013D  087B               	movf	??___flmul+2,w
  7952     013E  3DB1               	addwfc	___flmul@prod+2,f
  7953     013F  087C               	movf	??___flmul+3,w
  7954     0140  3DB2               	addwfc	___flmul@prod+3,f
  7955     0141                     i1l2764:
  7956     0141  3008               	movlw	8
  7957     0142                     u145_25:
  7958     0142  35A9               	lslf	___flmul@grs,f
  7959     0143  0DAA               	rlf	___flmul@grs+1,f
  7960     0144  0DAB               	rlf	___flmul@grs+2,f
  7961     0145  0DAC               	rlf	___flmul@grs+3,f
  7962     0146  0B89               	decfsz	9,f
  7963     0147  2942               	goto	u145_25
  7964     0148                     i1l2766:
  7965     0148  0821               	movf	___flmul@b+1,w
  7966     0149  00F0               	movwf	__Umul8_16@multiplicand
  7967     014A  0824               	movf	___flmul@a,w
  7968     014B  318F  27DD  3180   	fcall	__Umul8_16
  7969     014E  0871               	movf	?__Umul8_16+1,w
  7970     014F  0020               	movlb	0	; select bank0
  7971     0150  00B4               	movwf	___flmul@temp+1
  7972     0151  0870               	movf	?__Umul8_16,w
  7973     0152  00B3               	movwf	___flmul@temp
  7974     0153                     i1l2768:
  7975     0153  0833               	movf	___flmul@temp,w
  7976     0154  07A9               	addwf	___flmul@grs,f
  7977     0155  0834               	movf	___flmul@temp+1,w
  7978     0156  3DAA               	addwfc	___flmul@grs+1,f
  7979     0157  3000               	movlw	0
  7980     0158  3DAB               	addwfc	___flmul@grs+2,f
  7981     0159  3DAC               	addwfc	___flmul@grs+3,f
  7982     015A                     i1l2770:
  7983     015A  0820               	movf	___flmul@b,w
  7984     015B  00F0               	movwf	__Umul8_16@multiplicand
  7985     015C  0825               	movf	___flmul@a+1,w
  7986     015D  318F  27DD  3180   	fcall	__Umul8_16
  7987     0160  0871               	movf	?__Umul8_16+1,w
  7988     0161  0020               	movlb	0	; select bank0
  7989     0162  00B4               	movwf	___flmul@temp+1
  7990     0163  0870               	movf	?__Umul8_16,w
  7991     0164  00B3               	movwf	___flmul@temp
  7992     0165                     i1l2772:
  7993     0165  0833               	movf	___flmul@temp,w
  7994     0166  07A9               	addwf	___flmul@grs,f
  7995     0167  0834               	movf	___flmul@temp+1,w
  7996     0168  3DAA               	addwfc	___flmul@grs+1,f
  7997     0169  3000               	movlw	0
  7998     016A  3DAB               	addwfc	___flmul@grs+2,f
  7999     016B  3DAC               	addwfc	___flmul@grs+3,f
  8000     016C                     i1l2774:
  8001     016C  3008               	movlw	8
  8002     016D                     u146_25:
  8003     016D  35A9               	lslf	___flmul@grs,f
  8004     016E  0DAA               	rlf	___flmul@grs+1,f
  8005     016F  0DAB               	rlf	___flmul@grs+2,f
  8006     0170  0DAC               	rlf	___flmul@grs+3,f
  8007     0171  0B89               	decfsz	9,f
  8008     0172  296D               	goto	u146_25
  8009     0173  0820               	movf	___flmul@b,w
  8010     0174  00F0               	movwf	__Umul8_16@multiplicand
  8011     0175  0824               	movf	___flmul@a,w
  8012     0176  318F  27DD  3180   	fcall	__Umul8_16
  8013     0179  0871               	movf	?__Umul8_16+1,w
  8014     017A  0020               	movlb	0	; select bank0
  8015     017B  00B4               	movwf	___flmul@temp+1
  8016     017C  0870               	movf	?__Umul8_16,w
  8017     017D  00B3               	movwf	___flmul@temp
  8018     017E                     i1l2776:
  8019     017E  0833               	movf	___flmul@temp,w
  8020     017F  07A9               	addwf	___flmul@grs,f
  8021     0180  0834               	movf	___flmul@temp+1,w
  8022     0181  3DAA               	addwfc	___flmul@grs+1,f
  8023     0182  3000               	movlw	0
  8024     0183  3DAB               	addwfc	___flmul@grs+2,f
  8025     0184  3DAC               	addwfc	___flmul@grs+3,f
  8026     0185                     i1l2778:
  8027     0185  0821               	movf	___flmul@b+1,w
  8028     0186  00F0               	movwf	__Umul8_16@multiplicand
  8029     0187  0826               	movf	___flmul@a+2,w
  8030     0188  318F  27DD  3180   	fcall	__Umul8_16
  8031     018B  0871               	movf	?__Umul8_16+1,w
  8032     018C  0020               	movlb	0	; select bank0
  8033     018D  00B4               	movwf	___flmul@temp+1
  8034     018E  0870               	movf	?__Umul8_16,w
  8035     018F  00B3               	movwf	___flmul@temp
  8036     0190  0833               	movf	___flmul@temp,w
  8037     0191  07AF               	addwf	___flmul@prod,f
  8038     0192  0834               	movf	___flmul@temp+1,w
  8039     0193  3DB0               	addwfc	___flmul@prod+1,f
  8040     0194  3000               	movlw	0
  8041     0195  3DB1               	addwfc	___flmul@prod+2,f
  8042     0196  3DB2               	addwfc	___flmul@prod+3,f
  8043     0197                     i1l2780:
  8044     0197  0822               	movf	___flmul@b+2,w
  8045     0198  00F0               	movwf	__Umul8_16@multiplicand
  8046     0199  0825               	movf	___flmul@a+1,w
  8047     019A  318F  27DD  3180   	fcall	__Umul8_16
  8048     019D  0871               	movf	?__Umul8_16+1,w
  8049     019E  0020               	movlb	0	; select bank0
  8050     019F  00B4               	movwf	___flmul@temp+1
  8051     01A0  0870               	movf	?__Umul8_16,w
  8052     01A1  00B3               	movwf	___flmul@temp
  8053     01A2                     i1l2782:
  8054     01A2  0833               	movf	___flmul@temp,w
  8055     01A3  07AF               	addwf	___flmul@prod,f
  8056     01A4  0834               	movf	___flmul@temp+1,w
  8057     01A5  3DB0               	addwfc	___flmul@prod+1,f
  8058     01A6  3000               	movlw	0
  8059     01A7  3DB1               	addwfc	___flmul@prod+2,f
  8060     01A8  3DB2               	addwfc	___flmul@prod+3,f
  8061     01A9  0822               	movf	___flmul@b+2,w
  8062     01AA  00F0               	movwf	__Umul8_16@multiplicand
  8063     01AB  0826               	movf	___flmul@a+2,w
  8064     01AC  318F  27DD  3180   	fcall	__Umul8_16
  8065     01AF  0871               	movf	?__Umul8_16+1,w
  8066     01B0  0020               	movlb	0	; select bank0
  8067     01B1  00B4               	movwf	___flmul@temp+1
  8068     01B2  0870               	movf	?__Umul8_16,w
  8069     01B3  00B3               	movwf	___flmul@temp
  8070     01B4                     i1l2784:
  8071     01B4  0833               	movf	___flmul@temp,w
  8072     01B5  00F9               	movwf	??___flmul
  8073     01B6  0834               	movf	___flmul@temp+1,w
  8074     01B7  00FA               	movwf	??___flmul+1
  8075     01B8  01FB               	clrf	??___flmul+2
  8076     01B9  01FC               	clrf	??___flmul+3
  8077     01BA  3008               	movlw	8
  8078     01BB                     u147_25:
  8079     01BB  35F9               	lslf	??___flmul,f
  8080     01BC  0DFA               	rlf	??___flmul+1,f
  8081     01BD  0DFB               	rlf	??___flmul+2,f
  8082     01BE  0DFC               	rlf	??___flmul+3,f
  8083     01BF                     u147_20:
  8084     01BF  0B89               	decfsz	9,f
  8085     01C0  29BB               	goto	u147_25
  8086     01C1  0879               	movf	??___flmul,w
  8087     01C2  07AF               	addwf	___flmul@prod,f
  8088     01C3  087A               	movf	??___flmul+1,w
  8089     01C4  3DB0               	addwfc	___flmul@prod+1,f
  8090     01C5  087B               	movf	??___flmul+2,w
  8091     01C6  3DB1               	addwfc	___flmul@prod+2,f
  8092     01C7  087C               	movf	??___flmul+3,w
  8093     01C8  3DB2               	addwfc	___flmul@prod+3,f
  8094     01C9                     i1l2786:
  8095     01C9  0829               	movf	___flmul@grs,w
  8096     01CA  00F9               	movwf	??___flmul
  8097     01CB  082A               	movf	___flmul@grs+1,w
  8098     01CC  00FA               	movwf	??___flmul+1
  8099     01CD  082B               	movf	___flmul@grs+2,w
  8100     01CE  00FB               	movwf	??___flmul+2
  8101     01CF  082C               	movf	___flmul@grs+3,w
  8102     01D0  00FC               	movwf	??___flmul+3
  8103     01D1  3018               	movlw	24
  8104     01D2                     u148_25:
  8105     01D2  36FC               	lsrf	??___flmul+3,f
  8106     01D3  0CFB               	rrf	??___flmul+2,f
  8107     01D4  0CFA               	rrf	??___flmul+1,f
  8108     01D5  0CF9               	rrf	??___flmul,f
  8109     01D6                     u148_20:
  8110     01D6  0B89               	decfsz	9,f
  8111     01D7  29D2               	goto	u148_25
  8112     01D8  0879               	movf	??___flmul,w
  8113     01D9  07AF               	addwf	___flmul@prod,f
  8114     01DA  087A               	movf	??___flmul+1,w
  8115     01DB  3DB0               	addwfc	___flmul@prod+1,f
  8116     01DC  087B               	movf	??___flmul+2,w
  8117     01DD  3DB1               	addwfc	___flmul@prod+2,f
  8118     01DE  087C               	movf	??___flmul+3,w
  8119     01DF  3DB2               	addwfc	___flmul@prod+3,f
  8120     01E0                     i1l2788:
  8121     01E0  3008               	movlw	8
  8122     01E1                     u149_25:
  8123     01E1  35A9               	lslf	___flmul@grs,f
  8124     01E2  0DAA               	rlf	___flmul@grs+1,f
  8125     01E3  0DAB               	rlf	___flmul@grs+2,f
  8126     01E4  0DAC               	rlf	___flmul@grs+3,f
  8127     01E5  0B89               	decfsz	9,f
  8128     01E6  29E1               	goto	u149_25
  8129     01E7                     i1l2790:
  8130     01E7  082E               	movf	___flmul@bexp,w
  8131     01E8  072D               	addwf	___flmul@aexp,w
  8132     01E9  00F9               	movwf	??___flmul
  8133     01EA  01FA               	clrf	??___flmul+1
  8134     01EB  0DFA               	rlf	??___flmul+1,f
  8135     01EC  0879               	movf	??___flmul,w
  8136     01ED  3E82               	addlw	130
  8137     01EE  00B3               	movwf	___flmul@temp
  8138     01EF  30FF               	movlw	255
  8139     01F0  3D7A               	addwfc	??___flmul+1,w
  8140     01F1  00B4               	movwf	___flmul@temp+1
  8141     01F2  2A0A               	goto	i1l2802
  8142     01F3                     i1l2792:
  8143     01F3  3001               	movlw	1
  8144     01F4                     u150_25:
  8145     01F4  35AF               	lslf	___flmul@prod,f
  8146     01F5  0DB0               	rlf	___flmul@prod+1,f
  8147     01F6  0DB1               	rlf	___flmul@prod+2,f
  8148     01F7  0DB2               	rlf	___flmul@prod+3,f
  8149     01F8  0B89               	decfsz	9,f
  8150     01F9  29F4               	goto	u150_25
  8151     01FA                     i1l2794:
  8152     01FA  1FAC               	btfss	___flmul@grs+3,7
  8153     01FB  29FD               	goto	u151_21
  8154     01FC  29FE               	goto	u151_20
  8155     01FD                     u151_21:
  8156     01FD  29FF               	goto	i1l2798
  8157     01FE                     u151_20:
  8158     01FE                     i1l2796:
  8159     01FE  142F               	bsf	___flmul@prod,0
  8160     01FF                     i1l2798:
  8161     01FF  3001               	movlw	1
  8162     0200                     u152_25:
  8163     0200  35A9               	lslf	___flmul@grs,f
  8164     0201  0DAA               	rlf	___flmul@grs+1,f
  8165     0202  0DAB               	rlf	___flmul@grs+2,f
  8166     0203  0DAC               	rlf	___flmul@grs+3,f
  8167     0204  0B89               	decfsz	9,f
  8168     0205  2A00               	goto	u152_25
  8169     0206                     i1l2800:
  8170     0206  30FF               	movlw	255
  8171     0207  07B3               	addwf	___flmul@temp,f
  8172     0208  30FF               	movlw	255
  8173     0209  3DB4               	addwfc	___flmul@temp+1,f
  8174     020A                     i1l2802:
  8175     020A  1FB1               	btfss	___flmul@prod+2,7
  8176     020B  2A0D               	goto	u153_21
  8177     020C  2A0E               	goto	u153_20
  8178     020D                     u153_21:
  8179     020D  29F3               	goto	i1l2792
  8180     020E                     u153_20:
  8181     020E                     i1l2804:
  8182     020E  01AD               	clrf	___flmul@aexp
  8183     020F                     i1l2806:
  8184     020F  1FAC               	btfss	___flmul@grs+3,7
  8185     0210  2A12               	goto	u154_21
  8186     0211  2A13               	goto	u154_20
  8187     0212                     u154_21:
  8188     0212  2A2F               	goto	i1l2814
  8189     0213                     u154_20:
  8190     0213                     i1l2808:
  8191     0213  30FF               	movlw	255
  8192     0214  0529               	andwf	___flmul@grs,w
  8193     0215  00F9               	movwf	??___flmul
  8194     0216  30FF               	movlw	255
  8195     0217  052A               	andwf	___flmul@grs+1,w
  8196     0218  00FA               	movwf	??___flmul+1
  8197     0219  30FF               	movlw	255
  8198     021A  052B               	andwf	___flmul@grs+2,w
  8199     021B  00FB               	movwf	??___flmul+2
  8200     021C  307F               	movlw	127
  8201     021D  052C               	andwf	___flmul@grs+3,w
  8202     021E  00FC               	movwf	??___flmul+3
  8203     021F  087C               	movf	??___flmul+3,w
  8204     0220  047B               	iorwf	??___flmul+2,w
  8205     0221  047A               	iorwf	??___flmul+1,w
  8206     0222  0479               	iorwf	??___flmul,w
  8207     0223  1903               	skipnz
  8208     0224  2A26               	goto	u155_21
  8209     0225  2A27               	goto	u155_20
  8210     0226                     u155_21:
  8211     0226  2A2A               	goto	i1l1411
  8212     0227                     u155_20:
  8213     0227                     i1l2810:
  8214     0227  01AD               	clrf	___flmul@aexp
  8215     0228  0AAD               	incf	___flmul@aexp,f
  8216     0229  2A2F               	goto	i1l2814
  8217     022A                     i1l1411:
  8218     022A  1C2F               	btfss	___flmul@prod,0
  8219     022B  2A2D               	goto	u156_21
  8220     022C  2A2E               	goto	u156_20
  8221     022D                     u156_21:
  8222     022D  2A2F               	goto	i1l2814
  8223     022E                     u156_20:
  8224     022E  2A27               	goto	i1l2810
  8225     022F                     i1l2814:
  8226     022F  082D               	movf	___flmul@aexp,w
  8227     0230  1903               	btfsc	3,2
  8228     0231  2A33               	goto	u157_21
  8229     0232  2A34               	goto	u157_20
  8230     0233                     u157_21:
  8231     0233  2A5C               	goto	i1l2824
  8232     0234                     u157_20:
  8233     0234                     i1l2816:
  8234     0234  3001               	movlw	1
  8235     0235  07AF               	addwf	___flmul@prod,f
  8236     0236  3000               	movlw	0
  8237     0237  3DB0               	addwfc	___flmul@prod+1,f
  8238     0238  3000               	movlw	0
  8239     0239  3DB1               	addwfc	___flmul@prod+2,f
  8240     023A  3000               	movlw	0
  8241     023B  3DB2               	addwfc	___flmul@prod+3,f
  8242     023C                     i1l2818:
  8243     023C  1C32               	btfss	___flmul@prod+3,0
  8244     023D  2A3F               	goto	u158_21
  8245     023E  2A40               	goto	u158_20
  8246     023F                     u158_21:
  8247     023F  2A5C               	goto	i1l2824
  8248     0240                     u158_20:
  8249     0240                     i1l2820:
  8250     0240  082F               	movf	___flmul@prod,w
  8251     0241  00F9               	movwf	??___flmul
  8252     0242  0830               	movf	___flmul@prod+1,w
  8253     0243  00FA               	movwf	??___flmul+1
  8254     0244  0831               	movf	___flmul@prod+2,w
  8255     0245  00FB               	movwf	??___flmul+2
  8256     0246  0832               	movf	___flmul@prod+3,w
  8257     0247  00FC               	movwf	??___flmul+3
  8258     0248  3001               	movlw	1
  8259     0249  00FD               	movwf	??___flmul+4
  8260     024A                     u159_25:
  8261     024A  37FC               	asrf	??___flmul+3,f
  8262     024B  0CFB               	rrf	??___flmul+2,f
  8263     024C  0CFA               	rrf	??___flmul+1,f
  8264     024D  0CF9               	rrf	??___flmul,f
  8265     024E                     u159_20:
  8266     024E  0BFD               	decfsz	??___flmul+4,f
  8267     024F  2A4A               	goto	u159_25
  8268     0250  087C               	movf	??___flmul+3,w
  8269     0251  00B2               	movwf	___flmul@prod+3
  8270     0252  087B               	movf	??___flmul+2,w
  8271     0253  00B1               	movwf	___flmul@prod+2
  8272     0254  087A               	movf	??___flmul+1,w
  8273     0255  00B0               	movwf	___flmul@prod+1
  8274     0256  0879               	movf	??___flmul,w
  8275     0257  00AF               	movwf	___flmul@prod
  8276     0258                     i1l2822:
  8277     0258  3001               	movlw	1
  8278     0259  07B3               	addwf	___flmul@temp,f
  8279     025A  3000               	movlw	0
  8280     025B  3DB4               	addwfc	___flmul@temp+1,f
  8281     025C                     i1l2824:
  8282     025C  0834               	movf	___flmul@temp+1,w
  8283     025D  3A80               	xorlw	128
  8284     025E  00F9               	movwf	??___flmul
  8285     025F  3080               	movlw	128
  8286     0260  0279               	subwf	??___flmul,w
  8287     0261  1D03               	skipz
  8288     0262  2A65               	goto	u160_25
  8289     0263  30FF               	movlw	255
  8290     0264  0233               	subwf	___flmul@temp,w
  8291     0265                     u160_25:
  8292     0265  1C03               	skipc
  8293     0266  2A68               	goto	u160_21
  8294     0267  2A69               	goto	u160_20
  8295     0268                     u160_21:
  8296     0268  2A73               	goto	i1l2828
  8297     0269                     u160_20:
  8298     0269                     i1l2826:
  8299     0269  307F               	movlw	127
  8300     026A  0020               	movlb	0	; select bank0
  8301     026B  00B2               	movwf	___flmul@prod+3
  8302     026C  3080               	movlw	128
  8303     026D  00B1               	movwf	___flmul@prod+2
  8304     026E  3000               	movlw	0
  8305     026F  00B0               	movwf	___flmul@prod+1
  8306     0270  3000               	movlw	0
  8307     0271  00AF               	movwf	___flmul@prod
  8308     0272  2A9E               	goto	i1l1417
  8309     0273                     i1l2828:
  8310     0273  0020               	movlb	0	; select bank0
  8311     0274  0834               	movf	___flmul@temp+1,w
  8312     0275  3A80               	xorlw	128
  8313     0276  00F9               	movwf	??___flmul
  8314     0277  3080               	movlw	128
  8315     0278  0279               	subwf	??___flmul,w
  8316     0279  1D03               	skipz
  8317     027A  2A7D               	goto	u161_25
  8318     027B  3001               	movlw	1
  8319     027C  0233               	subwf	___flmul@temp,w
  8320     027D                     u161_25:
  8321     027D  1803               	skipnc
  8322     027E  2A80               	goto	u161_21
  8323     027F  2A81               	goto	u161_20
  8324     0280                     u161_21:
  8325     0280  2A8C               	goto	i1l2834
  8326     0281                     u161_20:
  8327     0281                     i1l2830:
  8328     0281  3000               	movlw	0
  8329     0282  0020               	movlb	0	; select bank0
  8330     0283  00B2               	movwf	___flmul@prod+3
  8331     0284  3000               	movlw	0
  8332     0285  00B1               	movwf	___flmul@prod+2
  8333     0286  3000               	movlw	0
  8334     0287  00B0               	movwf	___flmul@prod+1
  8335     0288  3000               	movlw	0
  8336     0289  00AF               	movwf	___flmul@prod
  8337     028A                     i1l2832:
  8338     028A  01A8               	clrf	___flmul@sign
  8339     028B  2A9E               	goto	i1l1417
  8340     028C                     i1l2834:
  8341     028C  0020               	movlb	0	; select bank0
  8342     028D  0833               	movf	___flmul@temp,w
  8343     028E  00AE               	movwf	___flmul@bexp
  8344     028F  30FF               	movlw	255
  8345     0290  05AF               	andwf	___flmul@prod,f
  8346     0291  30FF               	movlw	255
  8347     0292  05B0               	andwf	___flmul@prod+1,f
  8348     0293  307F               	movlw	127
  8349     0294  05B1               	andwf	___flmul@prod+2,f
  8350     0295  3000               	movlw	0
  8351     0296  05B2               	andwf	___flmul@prod+3,f
  8352     0297                     i1l2836:
  8353     0297  1C2E               	btfss	___flmul@bexp,0
  8354     0298  2A9A               	goto	u162_21
  8355     0299  2A9B               	goto	u162_20
  8356     029A                     u162_21:
  8357     029A  2A9C               	goto	i1l2840
  8358     029B                     u162_20:
  8359     029B                     i1l2838:
  8360     029B  17B1               	bsf	___flmul@prod+2,7
  8361     029C                     i1l2840:
  8362     029C  362E               	lsrf	___flmul@bexp,w
  8363     029D  00B2               	movwf	___flmul@prod+3
  8364     029E                     i1l1417:
  8365     029E  0828               	movf	___flmul@sign,w
  8366     029F  00F9               	movwf	??___flmul
  8367     02A0  0879               	movf	??___flmul,w
  8368     02A1  04B2               	iorwf	___flmul@prod+3,f
  8369     02A2                     i1l2842:
  8370     02A2  0832               	movf	___flmul@prod+3,w
  8371     02A3  00A3               	movwf	?___flmul+3
  8372     02A4  0831               	movf	___flmul@prod+2,w
  8373     02A5  00A2               	movwf	?___flmul+2
  8374     02A6  0830               	movf	___flmul@prod+1,w
  8375     02A7  00A1               	movwf	?___flmul+1
  8376     02A8  082F               	movf	___flmul@prod,w
  8377     02A9  00A0               	movwf	?___flmul
  8378     02AA                     i1l1405:
  8379     02AA  0008               	return
  8380     02AB                     __end_of___flmul:
  8381                           
  8382                           	psect	text44
  8383     0FDD                     __ptext44:	
  8384 ;; *************** function __Umul8_16 *****************
  8385 ;; Defined at:
  8386 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  multiplier      1    wreg     unsigned char 
  8389 ;;  multiplicand    1    0[COMMON] unsigned char 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  multiplier      1    8[COMMON] unsigned char 
  8392 ;;  word_mpld       2    6[COMMON] unsigned int 
  8393 ;;  product         2    4[COMMON] unsigned int 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  2    0[COMMON] unsigned int 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8403 ;;      Params:         2       0       0       0       0       0
  8404 ;;      Locals:         5       0       0       0       0       0
  8405 ;;      Temps:          2       0       0       0       0       0
  8406 ;;      Totals:         9       0       0       0       0       0
  8407 ;;Total ram usage:        9 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		___flmul
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416     0FDD                     __Umul8_16:	
  8417                           ;psect for function __Umul8_16
  8418                           
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8422                           ;__Umul8_16@multiplier stored from wreg
  8423     0FDD  00F8               	movwf	__Umul8_16@multiplier
  8424     0FDE                     i1l2588:
  8425     0FDE  01F4               	clrf	__Umul8_16@product
  8426     0FDF  01F5               	clrf	__Umul8_16@product+1
  8427     0FE0                     i1l2590:
  8428     0FE0  0870               	movf	__Umul8_16@multiplicand,w
  8429     0FE1  00F2               	movwf	??__Umul8_16
  8430     0FE2  01F3               	clrf	??__Umul8_16+1
  8431     0FE3  0872               	movf	??__Umul8_16,w
  8432     0FE4  00F6               	movwf	__Umul8_16@word_mpld
  8433     0FE5  0873               	movf	??__Umul8_16+1,w
  8434     0FE6  00F7               	movwf	__Umul8_16@word_mpld+1
  8435     0FE7                     i1l2592:
  8436     0FE7  1C78               	btfss	__Umul8_16@multiplier,0
  8437     0FE8  2FEA               	goto	u115_21
  8438     0FE9  2FEB               	goto	u115_20
  8439     0FEA                     u115_21:
  8440     0FEA  2FEF               	goto	i1l1424
  8441     0FEB                     u115_20:
  8442     0FEB                     i1l2594:
  8443     0FEB  0876               	movf	__Umul8_16@word_mpld,w
  8444     0FEC  07F4               	addwf	__Umul8_16@product,f
  8445     0FED  0877               	movf	__Umul8_16@word_mpld+1,w
  8446     0FEE  3DF5               	addwfc	__Umul8_16@product+1,f
  8447     0FEF                     i1l1424:
  8448     0FEF  3001               	movlw	1
  8449     0FF0                     u116_25:
  8450     0FF0  35F6               	lslf	__Umul8_16@word_mpld,f
  8451     0FF1  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8452     0FF2  0B89               	decfsz	9,f
  8453     0FF3  2FF0               	goto	u116_25
  8454     0FF4  1003               	clrc
  8455     0FF5  0CF8               	rrf	__Umul8_16@multiplier,f
  8456     0FF6                     i1l2596:
  8457     0FF6  0878               	movf	__Umul8_16@multiplier,w
  8458     0FF7  1D03               	btfss	3,2
  8459     0FF8  2FFA               	goto	u117_21
  8460     0FF9  2FFB               	goto	u117_20
  8461     0FFA                     u117_21:
  8462     0FFA  2FE7               	goto	i1l2592
  8463     0FFB                     u117_20:
  8464     0FFB                     i1l2598:
  8465     0FFB  0875               	movf	__Umul8_16@product+1,w
  8466     0FFC  00F1               	movwf	?__Umul8_16+1
  8467     0FFD  0874               	movf	__Umul8_16@product,w
  8468     0FFE  00F0               	movwf	?__Umul8_16
  8469     0FFF                     i1l1426:
  8470     0FFF  0008               	return
  8471     1000                     __end_of__Umul8_16:
  8472                           
  8473                           	psect	text45
  8474     0E9D                     __ptext45:	
  8475 ;; *************** function _EUSART_Write *****************
  8476 ;; Defined at:
  8477 ;;		line 132 in file "mcc_generated_files/eusart.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;  txData          1    wreg     unsigned char 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;  txData          1    0[COMMON] unsigned char 
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      void 
  8484 ;; Registers used:
  8485 ;;		wreg
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8491 ;;      Params:         0       0       0       0       0       0
  8492 ;;      Locals:         1       0       0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0       0
  8494 ;;      Totals:         1       0       0       0       0       0
  8495 ;;Total ram usage:        1 bytes
  8496 ;; Hardware stack levels used: 1
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_sendInfo
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504     0E9D                     _EUSART_Write:	
  8505                           ;psect for function _EUSART_Write
  8506                           
  8507                           
  8508                           ;incstack = 0
  8509                           ; Regs used in _EUSART_Write: [wreg]
  8510                           ;EUSART_Write@txData stored from wreg
  8511     0E9D  00F0               	movwf	EUSART_Write@txData
  8512     0E9E                     i1l2606:
  8513     0E9E                     i1l376:	
  8514                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  8515                           
  8516                           
  8517                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  8518     0E9E  0020               	movlb	0	; select bank0
  8519     0E9F  1E11               	btfss	17,4	;volatile
  8520     0EA0  2EA2               	goto	u118_21
  8521     0EA1  2EA3               	goto	u118_20
  8522     0EA2                     u118_21:
  8523     0EA2  2E9E               	goto	i1l376
  8524     0EA3                     u118_20:
  8525     0EA3                     i1l2608:
  8526                           
  8527                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  8528     0EA3  0870               	movf	EUSART_Write@txData,w
  8529     0EA4  0023               	movlb	3	; select bank3
  8530     0EA5  009A               	movwf	26	;volatile
  8531     0EA6                     i1l379:
  8532     0EA6  0008               	return
  8533     0EA7                     __end_of_EUSART_Write:
  8534                           
  8535                           	psect	text46
  8536     0F3D                     __ptext46:	
  8537 ;; *************** function _PIN_MANAGER_IOC *****************
  8538 ;; Defined at:
  8539 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;		None
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;		None
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1    wreg      void 
  8546 ;; Registers used:
  8547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8553 ;;      Params:         0       0       0       0       0       0
  8554 ;;      Locals:         0       0       0       0       0       0
  8555 ;;      Temps:          0       0       0       0       0       0
  8556 ;;      Totals:         0       0       0       0       0       0
  8557 ;;Total ram usage:        0 bytes
  8558 ;; Hardware stack levels used: 1
  8559 ;; Hardware stack levels required when called: 5
  8560 ;; This function calls:
  8561 ;;		_IOCBF0_ISR
  8562 ;;		_IOCBF3_ISR
  8563 ;; This function is called by:
  8564 ;;		_INTERRUPT_InterruptManager
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568     0F3D                     _PIN_MANAGER_IOC:	
  8569                           ;psect for function _PIN_MANAGER_IOC
  8570                           
  8571     0F3D                     i1l3170:	
  8572                           ;incstack = 0
  8573                           ; Regs used in _PIN_MANAGER_IOC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8574                           
  8575                           
  8576                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  8577     0F3D  0027               	movlb	7	; select bank7
  8578     0F3E  1C16               	btfss	22,0	;volatile
  8579     0F3F  2F41               	goto	u173_21
  8580     0F40  2F42               	goto	u173_20
  8581     0F41                     u173_21:
  8582     0F41  2F45               	goto	i1l3174
  8583     0F42                     u173_20:
  8584     0F42                     i1l3172:
  8585                           
  8586                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  8587     0F42  318F  2700  318F   	fcall	_IOCBF0_ISR
  8588     0F45                     i1l3174:
  8589                           
  8590                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  8591     0F45  0027               	movlb	7	; select bank7
  8592     0F46  1D96               	btfss	22,3	;volatile
  8593     0F47  2F49               	goto	u174_21
  8594     0F48  2F4A               	goto	u174_20
  8595     0F49                     u174_21:
  8596     0F49  2F4D               	goto	i1l194
  8597     0F4A                     u174_20:
  8598     0F4A                     i1l3176:
  8599                           
  8600                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  8601     0F4A  318F  270F  318F   	fcall	_IOCBF3_ISR
  8602     0F4D                     i1l194:
  8603     0F4D  0008               	return
  8604     0F4E                     __end_of_PIN_MANAGER_IOC:
  8605                           
  8606                           	psect	text47
  8607     0F0F                     __ptext47:	
  8608 ;; *************** function _IOCBF3_ISR *****************
  8609 ;; Defined at:
  8610 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;		None
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;		None
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      void 
  8617 ;; Registers used:
  8618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8624 ;;      Params:         0       0       0       0       0       0
  8625 ;;      Locals:         0       0       0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0       0
  8627 ;;      Totals:         0       0       0       0       0       0
  8628 ;;Total ram usage:        0 bytes
  8629 ;; Hardware stack levels used: 1
  8630 ;; Hardware stack levels required when called: 4
  8631 ;; This function calls:
  8632 ;;		NULL
  8633 ;;		_IOCBF3_DefaultInterruptHandler
  8634 ;;		_chegadaS1
  8635 ;;		_chegadaS2
  8636 ;; This function is called by:
  8637 ;;		_PIN_MANAGER_IOC
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641     0F0F                     _IOCBF3_ISR:	
  8642                           ;psect for function _IOCBF3_ISR
  8643                           
  8644     0F0F                     i1l3050:	
  8645                           ;incstack = 0
  8646                           ; Regs used in _IOCBF3_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8647                           
  8648                           
  8649                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  8650     0F0F  0021               	movlb	1	; select bank1
  8651     0F10  083F               	movf	_IOCBF3_InterruptHandler^(0+128),w
  8652     0F11  0440               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  8653     0F12  1903               	btfsc	3,2
  8654     0F13  2F15               	goto	u170_21
  8655     0F14  2F16               	goto	u170_20
  8656     0F15                     u170_21:
  8657     0F15  2F1B               	goto	i1l3054
  8658     0F16                     u170_20:
  8659     0F16                     i1l3052:
  8660                           
  8661                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  8662     0F16  0840               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  8663     0F17  008A               	movwf	10
  8664     0F18  083F               	movf	_IOCBF3_InterruptHandler^(0+128),w
  8665     0F19  000A               	callw
  8666     0F1A  318F               	pagesel	$
  8667     0F1B                     i1l3054:
  8668                           
  8669                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  8670     0F1B  0027               	movlb	7	; select bank7
  8671     0F1C  1196               	bcf	22,3	;volatile
  8672     0F1D                     i1l208:
  8673     0F1D  0008               	return
  8674     0F1E                     __end_of_IOCBF3_ISR:
  8675                           
  8676                           	psect	text48
  8677     0772                     __ptext48:	
  8678 ;; *************** function _chegadaS1 *****************
  8679 ;; Defined at:
  8680 ;;		line 164 in file "main.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;		None
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      void 
  8687 ;; Registers used:
  8688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8694 ;;      Params:         0       0       0       0       0       0
  8695 ;;      Locals:         0       0       0       0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0
  8697 ;;      Totals:         0       0       0       0       0       0
  8698 ;;Total ram usage:        0 bytes
  8699 ;; Hardware stack levels used: 1
  8700 ;; Hardware stack levels required when called: 3
  8701 ;; This function calls:
  8702 ;;		_matrixUpdate
  8703 ;; This function is called by:
  8704 ;;		_main
  8705 ;;		_IOCBF3_ISR
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709     0772                     _chegadaS1:	
  8710                           ;psect for function _chegadaS1
  8711                           
  8712     0772                     i1l2896:	
  8713                           ;incstack = 0
  8714                           ; Regs used in _chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8715                           
  8716                           
  8717                           ;main.c: 166:     andarAtual = 0;
  8718     0772  0020               	movlb	0	; select bank0
  8719     0773  01DC               	clrf	_andarAtual
  8720     0774                     i1l2898:
  8721                           
  8722                           ;main.c: 168:     MatrixLed[0] = 0b01111110;
  8723     0774  307E               	movlw	126
  8724     0775  0021               	movlb	1	; select bank1
  8725     0776  00C1               	movwf	_MatrixLed^(0+128)
  8726     0777                     i1l2900:
  8727                           
  8728                           ;main.c: 169:     MatrixLed[1] = 0b10000001;
  8729     0777  3081               	movlw	129
  8730     0778  00C2               	movwf	(_MatrixLed^(0+128)+1)
  8731     0779                     i1l2902:
  8732                           
  8733                           ;main.c: 170:     MatrixLed[2] = 0b10000001;
  8734     0779  3081               	movlw	129
  8735     077A  00C3               	movwf	(_MatrixLed^(0+128)+2)
  8736     077B                     i1l2904:
  8737                           
  8738                           ;main.c: 171:     MatrixLed[3] = 0b01111110;
  8739     077B  307E               	movlw	126
  8740     077C  00C4               	movwf	(_MatrixLed^(0+128)+3)
  8741                           
  8742                           ;main.c: 172:     MatrixLed[4] = 0;
  8743     077D  01C5               	clrf	(_MatrixLed^(0+128)+4)
  8744     077E                     i1l2906:
  8745                           
  8746                           ;main.c: 173:     if(subindo){
  8747     077E  0020               	movlb	0	; select bank0
  8748     077F  0869               	movf	_subindo,w
  8749     0780  1903               	btfsc	3,2
  8750     0781  2F83               	goto	u165_21
  8751     0782  2F84               	goto	u165_20
  8752     0783                     u165_21:
  8753     0783  2F8C               	goto	i1l2910
  8754     0784                     u165_20:
  8755     0784                     i1l2908:
  8756                           
  8757                           ;main.c: 174:         MatrixLed[5] = 0b01100000;
  8758     0784  3060               	movlw	96
  8759     0785  0021               	movlb	1	; select bank1
  8760     0786  00C6               	movwf	(_MatrixLed^(0+128)+5)
  8761                           
  8762                           ;main.c: 175:         MatrixLed[6] = 0b11000000;
  8763     0787  30C0               	movlw	192
  8764     0788  00C7               	movwf	(_MatrixLed^(0+128)+6)
  8765                           
  8766                           ;main.c: 176:         MatrixLed[7] = 0b01100000;
  8767     0789  3060               	movlw	96
  8768     078A  00C8               	movwf	(_MatrixLed^(0+128)+7)
  8769                           
  8770                           ;main.c: 177:     }else{
  8771     078B  2F97               	goto	i1l2914
  8772     078C                     i1l2910:
  8773                           
  8774                           ;main.c: 178:         MatrixLed[5] = 0b11000000;
  8775     078C  30C0               	movlw	192
  8776     078D  0021               	movlb	1	; select bank1
  8777     078E  00C6               	movwf	(_MatrixLed^(0+128)+5)
  8778                           
  8779                           ;main.c: 179:         MatrixLed[6] = 0b01100000;
  8780     078F  3060               	movlw	96
  8781     0790  00C7               	movwf	(_MatrixLed^(0+128)+6)
  8782                           
  8783                           ;main.c: 180:         MatrixLed[7] = 0b11000000;
  8784     0791  30C0               	movlw	192
  8785     0792  00C8               	movwf	(_MatrixLed^(0+128)+7)
  8786     0793                     i1l2912:
  8787                           
  8788                           ;main.c: 181:         destinoDesc = destinoDesc & 0b11111110;
  8789     0793  0020               	movlb	0	; select bank0
  8790     0794  0859               	movf	_destinoDesc,w
  8791     0795  39FE               	andlw	254
  8792     0796  00D9               	movwf	_destinoDesc
  8793     0797                     i1l2914:
  8794                           
  8795                           ;main.c: 183:     matrixUpdate();
  8796     0797  318F  27C3  3187   	fcall	_matrixUpdate
  8797     079A                     i1l728:
  8798     079A  0008               	return
  8799     079B                     __end_of_chegadaS1:
  8800                           
  8801                           	psect	text49
  8802     0E29                     __ptext49:	
  8803 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  8804 ;; Defined at:
  8805 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;		None
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;		None
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  1    wreg      void 
  8812 ;; Registers used:
  8813 ;;		None
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8819 ;;      Params:         0       0       0       0       0       0
  8820 ;;      Locals:         0       0       0       0       0       0
  8821 ;;      Temps:          0       0       0       0       0       0
  8822 ;;      Totals:         0       0       0       0       0       0
  8823 ;;Total ram usage:        0 bytes
  8824 ;; Hardware stack levels used: 1
  8825 ;; This function calls:
  8826 ;;		Nothing
  8827 ;; This function is called by:
  8828 ;;		_PIN_MANAGER_Initialize
  8829 ;;		_IOCBF3_ISR
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833     0E29                     _IOCBF3_DefaultInterruptHandler:	
  8834                           ;psect for function _IOCBF3_DefaultInterruptHandler
  8835                           
  8836     0E29                     i1l214:	
  8837                           ;incstack = 0
  8838                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  8839                           
  8840     0E29  0008               	return
  8841     0E2A                     __end_of_IOCBF3_DefaultInterruptHandler:
  8842                           
  8843                           	psect	text50
  8844     06B1                     __ptext50:	
  8845 ;; *************** function _chegadaS2 *****************
  8846 ;; Defined at:
  8847 ;;		line 186 in file "main.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;		None
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;		None
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      void 
  8854 ;; Registers used:
  8855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8861 ;;      Params:         0       0       0       0       0       0
  8862 ;;      Locals:         0       0       0       0       0       0
  8863 ;;      Temps:          0       0       0       0       0       0
  8864 ;;      Totals:         0       0       0       0       0       0
  8865 ;;Total ram usage:        0 bytes
  8866 ;; Hardware stack levels used: 1
  8867 ;; Hardware stack levels required when called: 3
  8868 ;; This function calls:
  8869 ;;		_matrixUpdate
  8870 ;; This function is called by:
  8871 ;;		_main
  8872 ;;		_IOCBF3_ISR
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876     06B1                     _chegadaS2:	
  8877                           ;psect for function _chegadaS2
  8878                           
  8879     06B1                     i1l2916:	
  8880                           ;incstack = 0
  8881                           ; Regs used in _chegadaS2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8882                           
  8883                           
  8884                           ;main.c: 188:     andarAtual = 1;
  8885     06B1  0020               	movlb	0	; select bank0
  8886     06B2  01DC               	clrf	_andarAtual
  8887     06B3  0ADC               	incf	_andarAtual,f
  8888     06B4                     i1l2918:
  8889                           
  8890                           ;main.c: 190:     MatrixLed[0] = 0b00000000;
  8891     06B4  0021               	movlb	1	; select bank1
  8892     06B5  01C1               	clrf	_MatrixLed^(0+128)
  8893     06B6                     i1l2920:
  8894                           
  8895                           ;main.c: 191:     MatrixLed[1] = 0b01000001;
  8896     06B6  3041               	movlw	65
  8897     06B7  00C2               	movwf	(_MatrixLed^(0+128)+1)
  8898     06B8                     i1l2922:
  8899                           
  8900                           ;main.c: 192:     MatrixLed[2] = 0b11111111;
  8901     06B8  30FF               	movlw	255
  8902     06B9  00C3               	movwf	(_MatrixLed^(0+128)+2)
  8903     06BA                     i1l2924:
  8904                           
  8905                           ;main.c: 193:     MatrixLed[3] = 0b00000001;
  8906     06BA  01C4               	clrf	(_MatrixLed^(0+128)+3)
  8907     06BB  0AC4               	incf	(_MatrixLed^(0+128)+3),f
  8908                           
  8909                           ;main.c: 194:     MatrixLed[4] = 0;
  8910     06BC  01C5               	clrf	(_MatrixLed^(0+128)+4)
  8911     06BD                     i1l2926:
  8912                           
  8913                           ;main.c: 195:     if(subindo){
  8914     06BD  0020               	movlb	0	; select bank0
  8915     06BE  0869               	movf	_subindo,w
  8916     06BF  1903               	btfsc	3,2
  8917     06C0  2EC2               	goto	u166_21
  8918     06C1  2EC3               	goto	u166_20
  8919     06C2                     u166_21:
  8920     06C2  2ECF               	goto	i1l2932
  8921     06C3                     u166_20:
  8922     06C3                     i1l2928:
  8923                           
  8924                           ;main.c: 196:         MatrixLed[5] = 0b01100000;
  8925     06C3  3060               	movlw	96
  8926     06C4  0021               	movlb	1	; select bank1
  8927     06C5  00C6               	movwf	(_MatrixLed^(0+128)+5)
  8928                           
  8929                           ;main.c: 197:         MatrixLed[6] = 0b11000000;
  8930     06C6  30C0               	movlw	192
  8931     06C7  00C7               	movwf	(_MatrixLed^(0+128)+6)
  8932                           
  8933                           ;main.c: 198:         MatrixLed[7] = 0b01100000;
  8934     06C8  3060               	movlw	96
  8935     06C9  00C8               	movwf	(_MatrixLed^(0+128)+7)
  8936     06CA                     i1l2930:
  8937                           
  8938                           ;main.c: 199:         destinoSub = destinoSub & 0b11111101;
  8939     06CA  0020               	movlb	0	; select bank0
  8940     06CB  085A               	movf	_destinoSub,w
  8941     06CC  39FD               	andlw	253
  8942     06CD  00DA               	movwf	_destinoSub
  8943                           
  8944                           ;main.c: 200:     }else{
  8945     06CE  2EDA               	goto	i1l2936
  8946     06CF                     i1l2932:
  8947                           
  8948                           ;main.c: 201:         MatrixLed[5] = 0b11000000;
  8949     06CF  30C0               	movlw	192
  8950     06D0  0021               	movlb	1	; select bank1
  8951     06D1  00C6               	movwf	(_MatrixLed^(0+128)+5)
  8952                           
  8953                           ;main.c: 202:         MatrixLed[6] = 0b01100000;
  8954     06D2  3060               	movlw	96
  8955     06D3  00C7               	movwf	(_MatrixLed^(0+128)+6)
  8956                           
  8957                           ;main.c: 203:         MatrixLed[7] = 0b11000000;
  8958     06D4  30C0               	movlw	192
  8959     06D5  00C8               	movwf	(_MatrixLed^(0+128)+7)
  8960     06D6                     i1l2934:
  8961                           
  8962                           ;main.c: 204:         destinoDesc = destinoDesc & 0b11111101;
  8963     06D6  0020               	movlb	0	; select bank0
  8964     06D7  0859               	movf	_destinoDesc,w
  8965     06D8  39FD               	andlw	253
  8966     06D9  00D9               	movwf	_destinoDesc
  8967     06DA                     i1l2936:
  8968                           
  8969                           ;main.c: 206:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  8970     06DA  0021               	movlb	1	; select bank1
  8971     06DB  0848               	movf	(_MatrixLed^(0+128)+7),w
  8972     06DC  0020               	movlb	0	; select bank0
  8973     06DD  045A               	iorwf	_destinoSub,w
  8974     06DE  0021               	movlb	1	; select bank1
  8975     06DF  00C8               	movwf	(_MatrixLed^(0+128)+7)
  8976     06E0                     i1l2938:
  8977                           
  8978                           ;main.c: 207:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  8979     06E0  0847               	movf	(_MatrixLed^(0+128)+6),w
  8980     06E1  0020               	movlb	0	; select bank0
  8981     06E2  0459               	iorwf	_destinoDesc,w
  8982     06E3  0021               	movlb	1	; select bank1
  8983     06E4  00C7               	movwf	(_MatrixLed^(0+128)+6)
  8984     06E5                     i1l2940:
  8985                           
  8986                           ;main.c: 208:     matrixUpdate();
  8987     06E5  318F  27C3  3186   	fcall	_matrixUpdate
  8988     06E8                     i1l733:
  8989     06E8  0008               	return
  8990     06E9                     __end_of_chegadaS2:
  8991                           
  8992                           	psect	text51
  8993     0F00                     __ptext51:	
  8994 ;; *************** function _IOCBF0_ISR *****************
  8995 ;; Defined at:
  8996 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;		None
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;		None
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  1    wreg      void 
  9003 ;; Registers used:
  9004 ;;		wreg, status,2, status,0, pclath, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9010 ;;      Params:         0       0       0       0       0       0
  9011 ;;      Locals:         0       0       0       0       0       0
  9012 ;;      Temps:          0       0       0       0       0       0
  9013 ;;      Totals:         0       0       0       0       0       0
  9014 ;;Total ram usage:        0 bytes
  9015 ;; Hardware stack levels used: 1
  9016 ;; Hardware stack levels required when called: 1
  9017 ;; This function calls:
  9018 ;;		NULL
  9019 ;;		_IOCBF0_DefaultInterruptHandler
  9020 ;; This function is called by:
  9021 ;;		_PIN_MANAGER_IOC
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025     0F00                     _IOCBF0_ISR:	
  9026                           ;psect for function _IOCBF0_ISR
  9027                           
  9028     0F00                     i1l3044:	
  9029                           ;incstack = 0
  9030                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9031                           
  9032                           
  9033                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
  9034     0F00  0020               	movlb	0	; select bank0
  9035     0F01  0867               	movf	_IOCBF0_InterruptHandler,w
  9036     0F02  0468               	iorwf	_IOCBF0_InterruptHandler+1,w
  9037     0F03  1903               	btfsc	3,2
  9038     0F04  2F06               	goto	u169_21
  9039     0F05  2F07               	goto	u169_20
  9040     0F06                     u169_21:
  9041     0F06  2F0C               	goto	i1l3048
  9042     0F07                     u169_20:
  9043     0F07                     i1l3046:
  9044                           
  9045                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
  9046     0F07  0868               	movf	_IOCBF0_InterruptHandler+1,w
  9047     0F08  008A               	movwf	10
  9048     0F09  0867               	movf	_IOCBF0_InterruptHandler,w
  9049     0F0A  000A               	callw
  9050     0F0B  318F               	pagesel	$
  9051     0F0C                     i1l3048:
  9052                           
  9053                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
  9054     0F0C  0027               	movlb	7	; select bank7
  9055     0F0D  1016               	bcf	22,0	;volatile
  9056     0F0E                     i1l198:
  9057     0F0E  0008               	return
  9058     0F0F                     __end_of_IOCBF0_ISR:
  9059                           
  9060                           	psect	text52
  9061     0E28                     __ptext52:	
  9062 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  9063 ;; Defined at:
  9064 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;		None
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      void 
  9071 ;; Registers used:
  9072 ;;		None
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9078 ;;      Params:         0       0       0       0       0       0
  9079 ;;      Locals:         0       0       0       0       0       0
  9080 ;;      Temps:          0       0       0       0       0       0
  9081 ;;      Totals:         0       0       0       0       0       0
  9082 ;;Total ram usage:        0 bytes
  9083 ;; Hardware stack levels used: 1
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_PIN_MANAGER_Initialize
  9088 ;;		_IOCBF0_ISR
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092     0E28                     _IOCBF0_DefaultInterruptHandler:	
  9093                           ;psect for function _IOCBF0_DefaultInterruptHandler
  9094                           
  9095     0E28                     i1l204:	
  9096                           ;incstack = 0
  9097                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  9098                           
  9099     0E28  0008               	return
  9100     0E29                     __end_of_IOCBF0_DefaultInterruptHandler:
  9101                           
  9102                           	psect	text53
  9103     0E3E                     __ptext53:	
  9104 ;; *************** function _CMP2_ISR *****************
  9105 ;; Defined at:
  9106 ;;		line 86 in file "mcc_generated_files/cmp2.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;		None
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;		None
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  1    wreg      void 
  9113 ;; Registers used:
  9114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9120 ;;      Params:         0       0       0       0       0       0
  9121 ;;      Locals:         0       0       0       0       0       0
  9122 ;;      Temps:          0       0       0       0       0       0
  9123 ;;      Totals:         0       0       0       0       0       0
  9124 ;;Total ram usage:        0 bytes
  9125 ;; Hardware stack levels used: 1
  9126 ;; Hardware stack levels required when called: 4
  9127 ;; This function calls:
  9128 ;;		_chegadaS4
  9129 ;; This function is called by:
  9130 ;;		_INTERRUPT_InterruptManager
  9131 ;; This function uses a non-reentrant model
  9132 ;;
  9133                           
  9134     0E3E                     _CMP2_ISR:	
  9135                           ;psect for function _CMP2_ISR
  9136                           
  9137     0E3E                     i1l3162:	
  9138                           ;incstack = 0
  9139                           ; Regs used in _CMP2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9140                           
  9141                           
  9142                           ;mcc_generated_files/cmp2.c: 89:     PIR2bits.C2IF = 0;
  9143     0E3E  0020               	movlb	0	; select bank0
  9144     0E3F  1312               	bcf	18,6	;volatile
  9145     0E40                     i1l3164:
  9146                           
  9147                           ;mcc_generated_files/cmp2.c: 90:     chegadaS4();
  9148     0E40  3186  263F  318E   	fcall	_chegadaS4
  9149     0E43                     i1l77:
  9150     0E43  0008               	return
  9151     0E44                     __end_of_CMP2_ISR:
  9152                           
  9153                           	psect	text54
  9154     063F                     __ptext54:	
  9155 ;; *************** function _chegadaS4 *****************
  9156 ;; Defined at:
  9157 ;;		line 236 in file "main.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9171 ;;      Params:         0       0       0       0       0       0
  9172 ;;      Locals:         0       0       0       0       0       0
  9173 ;;      Temps:          0       0       0       0       0       0
  9174 ;;      Totals:         0       0       0       0       0       0
  9175 ;;Total ram usage:        0 bytes
  9176 ;; Hardware stack levels used: 1
  9177 ;; Hardware stack levels required when called: 3
  9178 ;; This function calls:
  9179 ;;		_matrixUpdate
  9180 ;; This function is called by:
  9181 ;;		_CMP2_ISR
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185     063F                     _chegadaS4:	
  9186                           ;psect for function _chegadaS4
  9187                           
  9188     063F                     i1l2962:	
  9189                           ;incstack = 0
  9190                           ; Regs used in _chegadaS4: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9191                           
  9192                           
  9193                           ;main.c: 238:     andarAtual = 3;
  9194     063F  3003               	movlw	3
  9195     0640  0020               	movlb	0	; select bank0
  9196     0641  00DC               	movwf	_andarAtual
  9197                           
  9198                           ;main.c: 240:     MatrixLed[0] = 0b10000001;
  9199     0642  3081               	movlw	129
  9200     0643  0021               	movlb	1	; select bank1
  9201     0644  00C1               	movwf	_MatrixLed^(0+128)
  9202                           
  9203                           ;main.c: 241:     MatrixLed[1] = 0b10010001;
  9204     0645  3091               	movlw	145
  9205     0646  00C2               	movwf	(_MatrixLed^(0+128)+1)
  9206                           
  9207                           ;main.c: 242:     MatrixLed[2] = 0b10010001;
  9208     0647  3091               	movlw	145
  9209     0648  00C3               	movwf	(_MatrixLed^(0+128)+2)
  9210                           
  9211                           ;main.c: 243:     MatrixLed[3] = 0b01101110;
  9212     0649  306E               	movlw	110
  9213     064A  00C4               	movwf	(_MatrixLed^(0+128)+3)
  9214     064B                     i1l2964:
  9215                           
  9216                           ;main.c: 244:     MatrixLed[4] = 0;
  9217     064B  01C5               	clrf	(_MatrixLed^(0+128)+4)
  9218     064C                     i1l2966:
  9219                           
  9220                           ;main.c: 245:     if(subindo){
  9221     064C  0020               	movlb	0	; select bank0
  9222     064D  0869               	movf	_subindo,w
  9223     064E  1903               	btfsc	3,2
  9224     064F  2E51               	goto	u167_21
  9225     0650  2E52               	goto	u167_20
  9226     0651                     u167_21:
  9227     0651  2E5E               	goto	i1l2972
  9228     0652                     u167_20:
  9229     0652                     i1l2968:
  9230                           
  9231                           ;main.c: 246:         MatrixLed[5] = 0b01100000;
  9232     0652  3060               	movlw	96
  9233     0653  0021               	movlb	1	; select bank1
  9234     0654  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9235                           
  9236                           ;main.c: 247:         MatrixLed[6] = 0b11000000;
  9237     0655  30C0               	movlw	192
  9238     0656  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9239                           
  9240                           ;main.c: 248:         MatrixLed[7] = 0b01100000;
  9241     0657  3060               	movlw	96
  9242     0658  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9243     0659                     i1l2970:
  9244                           
  9245                           ;main.c: 249:         destinoSub = destinoSub & 0b11110111;
  9246     0659  0020               	movlb	0	; select bank0
  9247     065A  085A               	movf	_destinoSub,w
  9248     065B  39F7               	andlw	247
  9249     065C  00DA               	movwf	_destinoSub
  9250                           
  9251                           ;main.c: 250:     }else{
  9252     065D  2E69               	goto	i1l2976
  9253     065E                     i1l2972:
  9254                           
  9255                           ;main.c: 251:         MatrixLed[5] = 0b11000000;
  9256     065E  30C0               	movlw	192
  9257     065F  0021               	movlb	1	; select bank1
  9258     0660  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9259                           
  9260                           ;main.c: 252:         MatrixLed[6] = 0b01100000;
  9261     0661  3060               	movlw	96
  9262     0662  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9263                           
  9264                           ;main.c: 253:         MatrixLed[7] = 0b11000000;
  9265     0663  30C0               	movlw	192
  9266     0664  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9267     0665                     i1l2974:
  9268                           
  9269                           ;main.c: 254:         destinoDesc = destinoDesc & 0b11110111;
  9270     0665  0020               	movlb	0	; select bank0
  9271     0666  0859               	movf	_destinoDesc,w
  9272     0667  39F7               	andlw	247
  9273     0668  00D9               	movwf	_destinoDesc
  9274     0669                     i1l2976:
  9275                           
  9276                           ;main.c: 256:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9277     0669  0021               	movlb	1	; select bank1
  9278     066A  0848               	movf	(_MatrixLed^(0+128)+7),w
  9279     066B  0020               	movlb	0	; select bank0
  9280     066C  045A               	iorwf	_destinoSub,w
  9281     066D  0021               	movlb	1	; select bank1
  9282     066E  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9283     066F                     i1l2978:
  9284                           
  9285                           ;main.c: 257:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9286     066F  0847               	movf	(_MatrixLed^(0+128)+6),w
  9287     0670  0020               	movlb	0	; select bank0
  9288     0671  0459               	iorwf	_destinoDesc,w
  9289     0672  0021               	movlb	1	; select bank1
  9290     0673  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9291     0674                     i1l2980:
  9292                           
  9293                           ;main.c: 258:     matrixUpdate();
  9294     0674  318F  27C3  3186   	fcall	_matrixUpdate
  9295     0677                     i1l743:
  9296     0677  0008               	return
  9297     0678                     __end_of_chegadaS4:
  9298                           
  9299                           	psect	text55
  9300     0E38                     __ptext55:	
  9301 ;; *************** function _CMP1_ISR *****************
  9302 ;; Defined at:
  9303 ;;		line 86 in file "mcc_generated_files/cmp1.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9317 ;;      Params:         0       0       0       0       0       0
  9318 ;;      Locals:         0       0       0       0       0       0
  9319 ;;      Temps:          0       0       0       0       0       0
  9320 ;;      Totals:         0       0       0       0       0       0
  9321 ;;Total ram usage:        0 bytes
  9322 ;; Hardware stack levels used: 1
  9323 ;; Hardware stack levels required when called: 4
  9324 ;; This function calls:
  9325 ;;		_chegadaS3
  9326 ;; This function is called by:
  9327 ;;		_INTERRUPT_InterruptManager
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331     0E38                     _CMP1_ISR:	
  9332                           ;psect for function _CMP1_ISR
  9333                           
  9334     0E38                     i1l3166:	
  9335                           ;incstack = 0
  9336                           ; Regs used in _CMP1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9337                           
  9338                           
  9339                           ;mcc_generated_files/cmp1.c: 89:     PIR2bits.C1IF = 0;
  9340     0E38  0020               	movlb	0	; select bank0
  9341     0E39  1292               	bcf	18,5	;volatile
  9342     0E3A                     i1l3168:
  9343                           
  9344                           ;mcc_generated_files/cmp1.c: 90:     chegadaS3();
  9345     0E3A  3186  2678  318E   	fcall	_chegadaS3
  9346     0E3D                     i1l140:
  9347     0E3D  0008               	return
  9348     0E3E                     __end_of_CMP1_ISR:
  9349                           
  9350                           	psect	text56
  9351     0678                     __ptext56:	
  9352 ;; *************** function _chegadaS3 *****************
  9353 ;; Defined at:
  9354 ;;		line 211 in file "main.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;		None
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;		None
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  1    wreg      void 
  9361 ;; Registers used:
  9362 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9368 ;;      Params:         0       0       0       0       0       0
  9369 ;;      Locals:         0       0       0       0       0       0
  9370 ;;      Temps:          0       0       0       0       0       0
  9371 ;;      Totals:         0       0       0       0       0       0
  9372 ;;Total ram usage:        0 bytes
  9373 ;; Hardware stack levels used: 1
  9374 ;; Hardware stack levels required when called: 3
  9375 ;; This function calls:
  9376 ;;		_matrixUpdate
  9377 ;; This function is called by:
  9378 ;;		_CMP1_ISR
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382     0678                     _chegadaS3:	
  9383                           ;psect for function _chegadaS3
  9384                           
  9385     0678                     i1l2990:	
  9386                           ;incstack = 0
  9387                           ; Regs used in _chegadaS3: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9388                           
  9389                           
  9390                           ;main.c: 213:     andarAtual = 2;
  9391     0678  3002               	movlw	2
  9392     0679  0020               	movlb	0	; select bank0
  9393     067A  00DC               	movwf	_andarAtual
  9394                           
  9395                           ;main.c: 215:     MatrixLed[0] = 0b01000011;
  9396     067B  3043               	movlw	67
  9397     067C  0021               	movlb	1	; select bank1
  9398     067D  00C1               	movwf	_MatrixLed^(0+128)
  9399                           
  9400                           ;main.c: 216:     MatrixLed[1] = 0b10000101;
  9401     067E  3085               	movlw	133
  9402     067F  00C2               	movwf	(_MatrixLed^(0+128)+1)
  9403                           
  9404                           ;main.c: 217:     MatrixLed[2] = 0b10001001;
  9405     0680  3089               	movlw	137
  9406     0681  00C3               	movwf	(_MatrixLed^(0+128)+2)
  9407                           
  9408                           ;main.c: 218:     MatrixLed[3] = 0b01110001;
  9409     0682  3071               	movlw	113
  9410     0683  00C4               	movwf	(_MatrixLed^(0+128)+3)
  9411     0684                     i1l2992:
  9412                           
  9413                           ;main.c: 219:     MatrixLed[4] = 0;
  9414     0684  01C5               	clrf	(_MatrixLed^(0+128)+4)
  9415     0685                     i1l2994:
  9416                           
  9417                           ;main.c: 220:     if(subindo){
  9418     0685  0020               	movlb	0	; select bank0
  9419     0686  0869               	movf	_subindo,w
  9420     0687  1903               	btfsc	3,2
  9421     0688  2E8A               	goto	u168_21
  9422     0689  2E8B               	goto	u168_20
  9423     068A                     u168_21:
  9424     068A  2E97               	goto	i1l3000
  9425     068B                     u168_20:
  9426     068B                     i1l2996:
  9427                           
  9428                           ;main.c: 221:         MatrixLed[5] = 0b01100000;
  9429     068B  3060               	movlw	96
  9430     068C  0021               	movlb	1	; select bank1
  9431     068D  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9432                           
  9433                           ;main.c: 222:         MatrixLed[6] = 0b11000000;
  9434     068E  30C0               	movlw	192
  9435     068F  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9436                           
  9437                           ;main.c: 223:         MatrixLed[7] = 0b01100000;
  9438     0690  3060               	movlw	96
  9439     0691  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9440     0692                     i1l2998:
  9441                           
  9442                           ;main.c: 224:         destinoSub = destinoSub & 0b11111011;
  9443     0692  0020               	movlb	0	; select bank0
  9444     0693  085A               	movf	_destinoSub,w
  9445     0694  39FB               	andlw	251
  9446     0695  00DA               	movwf	_destinoSub
  9447                           
  9448                           ;main.c: 225:     }else{
  9449     0696  2EA2               	goto	i1l3004
  9450     0697                     i1l3000:
  9451                           
  9452                           ;main.c: 226:         MatrixLed[5] = 0b11000000;
  9453     0697  30C0               	movlw	192
  9454     0698  0021               	movlb	1	; select bank1
  9455     0699  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9456                           
  9457                           ;main.c: 227:         MatrixLed[6] = 0b01100000;
  9458     069A  3060               	movlw	96
  9459     069B  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9460                           
  9461                           ;main.c: 228:         MatrixLed[7] = 0b11000000;
  9462     069C  30C0               	movlw	192
  9463     069D  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9464     069E                     i1l3002:
  9465                           
  9466                           ;main.c: 229:         destinoDesc = destinoDesc & 0b11111011;
  9467     069E  0020               	movlb	0	; select bank0
  9468     069F  0859               	movf	_destinoDesc,w
  9469     06A0  39FB               	andlw	251
  9470     06A1  00D9               	movwf	_destinoDesc
  9471     06A2                     i1l3004:
  9472                           
  9473                           ;main.c: 231:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9474     06A2  0021               	movlb	1	; select bank1
  9475     06A3  0848               	movf	(_MatrixLed^(0+128)+7),w
  9476     06A4  0020               	movlb	0	; select bank0
  9477     06A5  045A               	iorwf	_destinoSub,w
  9478     06A6  0021               	movlb	1	; select bank1
  9479     06A7  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9480     06A8                     i1l3006:
  9481                           
  9482                           ;main.c: 232:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9483     06A8  0847               	movf	(_MatrixLed^(0+128)+6),w
  9484     06A9  0020               	movlb	0	; select bank0
  9485     06AA  0459               	iorwf	_destinoDesc,w
  9486     06AB  0021               	movlb	1	; select bank1
  9487     06AC  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9488     06AD                     i1l3008:
  9489                           
  9490                           ;main.c: 233:     matrixUpdate();
  9491     06AD  318F  27C3  3186   	fcall	_matrixUpdate
  9492     06B0                     i1l738:
  9493     06B0  0008               	return
  9494     06B1                     __end_of_chegadaS3:
  9495                           
  9496                           	psect	text57
  9497     0FC3                     __ptext57:	
  9498 ;; *************** function _matrixUpdate *****************
  9499 ;; Defined at:
  9500 ;;		line 125 in file "main.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;		None
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  i               1    0        unsigned char 
  9505 ;;  i               1   10[COMMON] unsigned char 
  9506 ;;  index           1    0        unsigned char 
  9507 ;;  data            2    8[COMMON] unsigned char [2]
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9517 ;;      Params:         0       0       0       0       0       0
  9518 ;;      Locals:         3       0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0
  9520 ;;      Totals:         3       0       0       0       0       0
  9521 ;;Total ram usage:        3 bytes
  9522 ;; Hardware stack levels used: 1
  9523 ;; Hardware stack levels required when called: 2
  9524 ;; This function calls:
  9525 ;;		i1_txSpi
  9526 ;; This function is called by:
  9527 ;;		_chegadaS1
  9528 ;;		_chegadaS2
  9529 ;;		_chegadaS3
  9530 ;;		_chegadaS4
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534     0FC3                     _matrixUpdate:	
  9535                           ;psect for function _matrixUpdate
  9536                           
  9537     0FC3                     i1l2636:	
  9538                           ;incstack = 0
  9539                           ; Regs used in _matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9540                           
  9541                           
  9542                           ;main.c: 128:         for(uint8_t i=8;i>0;i--){
  9543     0FC3  3008               	movlw	8
  9544     0FC4  00FA               	movwf	matrixUpdate@i
  9545     0FC5                     i1l2642:
  9546                           
  9547                           ;main.c: 129:             data[0] = i;
  9548     0FC5  087A               	movf	matrixUpdate@i,w
  9549     0FC6  00F8               	movwf	matrixUpdate@data
  9550     0FC7                     i1l2644:
  9551                           
  9552                           ;main.c: 130:             data[1] = MatrixLed[i-1];
  9553     0FC7  087A               	movf	matrixUpdate@i,w
  9554     0FC8  3EC0               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
  9555     0FC9  0086               	movwf	6
  9556     0FCA  0187               	clrf	7
  9557     0FCB  0801               	movf	1,w
  9558     0FCC  00F9               	movwf	matrixUpdate@data+1
  9559     0FCD                     i1l2646:
  9560                           
  9561                           ;main.c: 131:             txSpi(data, 2);
  9562     0FCD  3002               	movlw	2
  9563     0FCE  00F5               	movwf	i1txSpi@dataSize
  9564     0FCF  3000               	movlw	0
  9565     0FD0  00F6               	movwf	i1txSpi@dataSize+1
  9566     0FD1  3078               	movlw	(low (matrixUpdate@data| 0))& (0+255)
  9567     0FD2  318E  26E4  318F   	fcall	i1_txSpi
  9568     0FD5                     i1l2648:
  9569                           
  9570                           ;main.c: 132:         }
  9571     0FD5  3001               	movlw	1
  9572     0FD6  02FA               	subwf	matrixUpdate@i,f
  9573     0FD7                     i1l2650:
  9574     0FD7  087A               	movf	matrixUpdate@i,w
  9575     0FD8  1D03               	btfss	3,2
  9576     0FD9  2FDB               	goto	u126_21
  9577     0FDA  2FDC               	goto	u126_20
  9578     0FDB                     u126_21:
  9579     0FDB  2FC5               	goto	i1l2642
  9580     0FDC                     u126_20:
  9581     0FDC                     i1l713:
  9582     0FDC  0008               	return
  9583     0FDD                     __end_of_matrixUpdate:
  9584                           
  9585                           	psect	text58
  9586     0EE4                     __ptext58:	
  9587 ;; *************** function i1_txSpi *****************
  9588 ;; Defined at:
  9589 ;;		line 117 in file "main.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  data            1    wreg     PTR unsigned char 
  9592 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9593 ;;  dataSize        2    5[COMMON] unsigned int 
  9594 ;; Auto vars:     Size  Location     Type
  9595 ;;  data            1    7[COMMON] PTR unsigned char 
  9596 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9606 ;;      Params:         2       0       0       0       0       0
  9607 ;;      Locals:         1       0       0       0       0       0
  9608 ;;      Temps:          0       0       0       0       0       0
  9609 ;;      Totals:         3       0       0       0       0       0
  9610 ;;Total ram usage:        3 bytes
  9611 ;; Hardware stack levels used: 1
  9612 ;; Hardware stack levels required when called: 1
  9613 ;; This function calls:
  9614 ;;		i1_SPI1_ExchangeBlock
  9615 ;; This function is called by:
  9616 ;;		_matrixUpdate
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620     0EE4                     i1_txSpi:	
  9621                           ;psect for function i1_txSpi
  9622                           
  9623                           
  9624                           ;incstack = 0
  9625                           ; Regs used in i1_txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9626                           ;i1txSpi@data stored from wreg
  9627     0EE4  00F7               	movwf	i1txSpi@data
  9628     0EE5                     i1l700:	
  9629                           ;main.c: 118:     do { LATBbits.LATB1 = 0; } while(0);
  9630                           
  9631     0EE5  0022               	movlb	2	; select bank2
  9632     0EE6  108D               	bcf	13,1	;volatile
  9633     0EE7                     i1l2602:
  9634                           
  9635                           ;main.c: 119:     SPI1_ExchangeBlock(data,dataSize);
  9636     0EE7  0876               	movf	i1txSpi@dataSize+1,w
  9637     0EE8  00F1               	movwf	i1SPI1_ExchangeBlock@blockSize+1
  9638     0EE9  0875               	movf	i1txSpi@dataSize,w
  9639     0EEA  00F0               	movwf	i1SPI1_ExchangeBlock@blockSize
  9640     0EEB  0877               	movf	i1txSpi@data,w
  9641     0EEC  3187  279B  318E   	fcall	i1_SPI1_ExchangeBlock
  9642     0EEF                     i1l2604:
  9643     0EEF  0022               	movlb	2	; select bank2
  9644     0EF0  148D               	bsf	13,1	;volatile
  9645     0EF1                     i1l704:
  9646     0EF1  0008               	return
  9647     0EF2                     __end_ofi1_txSpi:
  9648                           
  9649                           	psect	text59
  9650     079B                     __ptext59:	
  9651 ;; *************** function i1_SPI1_ExchangeBlock *****************
  9652 ;; Defined at:
  9653 ;;		line 100 in file "mcc_generated_files/spi1.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  block           1    wreg     PTR void 
  9656 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9657 ;;  blockSize       2    0[COMMON] unsigned int 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  block           1    3[COMMON] PTR void 
  9660 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9661 ;;  data            1    4[COMMON] PTR unsigned char 
  9662 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1    wreg      void 
  9665 ;; Registers used:
  9666 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9672 ;;      Params:         2       0       0       0       0       0
  9673 ;;      Locals:         2       0       0       0       0       0
  9674 ;;      Temps:          1       0       0       0       0       0
  9675 ;;      Totals:         5       0       0       0       0       0
  9676 ;;Total ram usage:        5 bytes
  9677 ;; Hardware stack levels used: 1
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		i1_txSpi
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685     079B                     i1_SPI1_ExchangeBlock:	
  9686                           ;psect for function i1_SPI1_ExchangeBlock
  9687                           
  9688                           
  9689                           ;incstack = 0
  9690                           ; Regs used in i1_SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  9691                           ;i1SPI1_ExchangeBlock@block stored from wreg
  9692     079B  00F3               	movwf	i1SPI1_ExchangeBlock@block
  9693     079C                     i1l2532:
  9694                           
  9695                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  9696     079C  0873               	movf	i1SPI1_ExchangeBlock@block,w
  9697     079D  00F4               	movwf	i1SPI1_ExchangeBlock@data
  9698                           
  9699                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  9700     079E  2FB5               	goto	i1l2540
  9701     079F                     i1l2534:
  9702                           
  9703                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  9704     079F  0874               	movf	i1SPI1_ExchangeBlock@data,w
  9705     07A0  0086               	movwf	6
  9706     07A1  0187               	clrf	7
  9707     07A2  0801               	movf	1,w
  9708     07A3  0024               	movlb	4	; select bank4
  9709     07A4  0091               	movwf	17	;volatile
  9710     07A5                     i1l436:	
  9711                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  9712                           
  9713     07A5  0020               	movlb	0	; select bank0
  9714     07A6  1D91               	btfss	17,3	;volatile
  9715     07A7  2FA9               	goto	u108_21
  9716     07A8  2FAA               	goto	u108_20
  9717     07A9                     u108_21:
  9718     07A9  2FA5               	goto	i1l436
  9719     07AA                     u108_20:
  9720     07AA                     i1l438:
  9721                           
  9722                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  9723     07AA  1191               	bcf	17,3	;volatile
  9724     07AB                     i1l2536:
  9725                           
  9726                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  9727     07AB  0874               	movf	i1SPI1_ExchangeBlock@data,w
  9728     07AC  0086               	movwf	6
  9729     07AD  0187               	clrf	7
  9730     07AE  0024               	movlb	4	; select bank4
  9731     07AF  0811               	movf	17,w	;volatile
  9732     07B0  0081               	movwf	1
  9733     07B1                     i1l2538:
  9734     07B1  3001               	movlw	1
  9735     07B2  00F2               	movwf	??i1_SPI1_ExchangeBlock
  9736     07B3  0872               	movf	??i1_SPI1_ExchangeBlock,w
  9737     07B4  07F4               	addwf	i1SPI1_ExchangeBlock@data,f
  9738     07B5                     i1l2540:
  9739                           
  9740                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  9741     07B5  3001               	movlw	1
  9742     07B6  02F0               	subwf	i1SPI1_ExchangeBlock@blockSize,f
  9743     07B7  3000               	movlw	0
  9744     07B8  3BF1               	subwfb	i1SPI1_ExchangeBlock@blockSize+1,f
  9745     07B9  0A70               	incf	i1SPI1_ExchangeBlock@blockSize,w
  9746     07BA  1D03               	skipz
  9747     07BB  2FC0               	goto	u109_21
  9748     07BC  0A71               	incf	i1SPI1_ExchangeBlock@blockSize+1,w
  9749     07BD  1D03               	btfss	3,2
  9750     07BE  2FC0               	goto	u109_21
  9751     07BF  2FC1               	goto	u109_20
  9752     07C0                     u109_21:
  9753     07C0  2F9F               	goto	i1l2534
  9754     07C1                     u109_20:
  9755     07C1                     i1l440:
  9756     07C1  0008               	return
  9757     07C2                     __end_ofi1_SPI1_ExchangeBlock:
  9758                           
  9759                           	psect	text60
  9760     0F4E                     __ptext60:	
  9761 ;; *************** function _CCP4_CaptureISR *****************
  9762 ;; Defined at:
  9763 ;;		line 89 in file "mcc_generated_files/ccp4.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;  module          2    2[COMMON] struct CCPR4Reg_tag
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0, pclath, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9777 ;;      Params:         0       0       0       0       0       0
  9778 ;;      Locals:         2       0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0
  9780 ;;      Totals:         2       0       0       0       0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; Hardware stack levels required when called: 1
  9784 ;; This function calls:
  9785 ;;		NULL
  9786 ;;		_CCP4_DefaultCallBack
  9787 ;; This function is called by:
  9788 ;;		_INTERRUPT_InterruptManager
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792     0F4E                     _CCP4_CaptureISR:	
  9793                           ;psect for function _CCP4_CaptureISR
  9794                           
  9795     0F4E                     i1l3218:	
  9796                           ;incstack = 0
  9797                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  9798                           
  9799     0F4E  0020               	movlb	0	; select bank0
  9800     0F4F  1293               	bcf	19,5	;volatile
  9801     0F50                     i1l3220:
  9802     0F50  0026               	movlb	6	; select bank6
  9803     0F51  0818               	movf	24,w	;volatile
  9804     0F52  00F2               	movwf	CCP4_CaptureISR@module
  9805     0F53  0819               	movf	25,w	;volatile
  9806     0F54  00F3               	movwf	CCP4_CaptureISR@module+1
  9807     0F55                     i1l3222:
  9808     0F55  0873               	movf	CCP4_CaptureISR@module+1,w
  9809     0F56  00F1               	movwf	CCP4_DefaultCallBack@capturedValue+1
  9810     0F57  0872               	movf	CCP4_CaptureISR@module,w
  9811     0F58  00F0               	movwf	CCP4_DefaultCallBack@capturedValue
  9812     0F59  0021               	movlb	1	; select bank1
  9813     0F5A  0836               	movf	(_CCP4_CallBack+1)^(0+128),w
  9814     0F5B  008A               	movwf	10
  9815     0F5C  0835               	movf	_CCP4_CallBack^(0+128),w
  9816     0F5D  000A               	callw
  9817     0F5E  318F               	pagesel	$
  9818     0F5F                     i1l801:
  9819     0F5F  0008               	return
  9820     0F60                     __end_of_CCP4_CaptureISR:
  9821                           
  9822                           	psect	text61
  9823     0E27                     __ptext61:	
  9824 ;; *************** function _CCP4_DefaultCallBack *****************
  9825 ;; Defined at:
  9826 ;;		line 60 in file "mcc_generated_files/ccp4.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  capturedValu    2    0[COMMON] unsigned short 
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;		None
  9831 ;; Return value:  Size  Location     Type
  9832 ;;                  1    wreg      void 
  9833 ;; Registers used:
  9834 ;;		None
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9840 ;;      Params:         2       0       0       0       0       0
  9841 ;;      Locals:         0       0       0       0       0       0
  9842 ;;      Temps:          0       0       0       0       0       0
  9843 ;;      Totals:         2       0       0       0       0       0
  9844 ;;Total ram usage:        2 bytes
  9845 ;; Hardware stack levels used: 1
  9846 ;; This function calls:
  9847 ;;		Nothing
  9848 ;; This function is called by:
  9849 ;;		_CCP4_Initialize
  9850 ;;		_CCP4_CaptureISR
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854     0E27                     _CCP4_DefaultCallBack:	
  9855                           ;psect for function _CCP4_DefaultCallBack
  9856                           
  9857     0E27                     i1l795:	
  9858                           ;incstack = 0
  9859                           ; Regs used in _CCP4_DefaultCallBack: []
  9860                           
  9861     0E27  0008               	return
  9862     0E28                     __end_of_CCP4_DefaultCallBack:
  9863     007E                     btemp	set	126	;btemp
  9864     007E                     int$flags	set	126
  9865     007E                     wtemp0	set	126
  9866                           
  9867                           	psect	idloc
  9868                           
  9869                           ;Config register IDLOC0 @ 0x8000
  9870                           ;	unspecified, using default values
  9871     8000                     	org	32768
  9872     8000  3FFF               	dw	16383
  9873                           
  9874                           ;Config register IDLOC1 @ 0x8001
  9875                           ;	unspecified, using default values
  9876     8001                     	org	32769
  9877     8001  3FFF               	dw	16383
  9878                           
  9879                           ;Config register IDLOC2 @ 0x8002
  9880                           ;	unspecified, using default values
  9881     8002                     	org	32770
  9882     8002  3FFF               	dw	16383
  9883                           
  9884                           ;Config register IDLOC3 @ 0x8003
  9885                           ;	unspecified, using default values
  9886     8003                     	org	32771
  9887     8003  3FFF               	dw	16383
  9888                           
  9889                           	psect	config
  9890                           
  9891                           ;Config register CONFIG1 @ 0x8007
  9892                           ;	Oscillator Selection
  9893                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9894                           ;	Watchdog Timer Enable
  9895                           ;	WDTE = OFF, WDT disabled
  9896                           ;	Power-up Timer Enable
  9897                           ;	PWRTE = OFF, PWRT disabled
  9898                           ;	MCLR Pin Function Select
  9899                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9900                           ;	Flash Program Memory Code Protection
  9901                           ;	CP = OFF, Program memory code protection is disabled
  9902                           ;	Data Memory Code Protection
  9903                           ;	CPD = OFF, Data memory code protection is disabled
  9904                           ;	Brown-out Reset Enable
  9905                           ;	BOREN = ON, Brown-out Reset enabled
  9906                           ;	Clock Out Enable
  9907                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9908                           ;	Internal/External Switchover
  9909                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9910                           ;	Fail-Safe Clock Monitor Enable
  9911                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9912     8007                     	org	32775
  9913     8007  3FE4               	dw	16356
  9914                           
  9915                           ;Config register CONFIG2 @ 0x8008
  9916                           ;	Flash Memory Self-Write Protection
  9917                           ;	WRT = OFF, Write protection off
  9918                           ;	PLL Enable
  9919                           ;	PLLEN = OFF, 4x PLL disabled
  9920                           ;	Stack Overflow/Underflow Reset Enable
  9921                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9922                           ;	Brown-out Reset Voltage Selection
  9923                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9924                           ;	Low-Voltage Programming Enable
  9925                           ;	LVP = ON, Low-voltage programming enabled
  9926     8008                     	org	32776
  9927     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    16
    Data        1
    BSS         42
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      74
    BANK1            80     19      41
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    memset@s	PTR unsigned char  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), NULL(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), NULL(), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    txSpi@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), NULL(), 

    SPI1_ExchangeBlock@block	PTR void  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), chegadaS1(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), chegadaS1(), NULL(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), IOCBF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _sendInfo->___flmul
    _bin2bcd->_memset
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _chegadaS2->_matrixUpdate
    _chegadaS1->_matrixUpdate
    _chegadaS4->_matrixUpdate
    _chegadaS3->_matrixUpdate
    _matrixUpdate->i1_txSpi
    i1_txSpi->i1_SPI1_ExchangeBlock
    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->_sendInfo
    _sendInfo->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_initMatrix
    _initMatrix->_txSpi
    _txSpi->_SPI1_ExchangeBlock
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3180
                                             17 BANK1      2     2      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF3_SetInterruptHandler
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                         _initMatrix
                       _isValidFloor
 ---------------------------------------------------------------------------------
 (1) _isValidFloor                                         2     2      0      99
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initMatrix                                           9     9      0    1207
                                              8 BANK1      9     9      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (2) _txSpi                                                3     1      2     626
                                              5 BANK1      3     1      2
                 _SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeBlock                                   5     3      2     256
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1238
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     121
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     301
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     121
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0     124
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    6860
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0       0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR4_CallBack                                        0     0      0       0
                                NULL *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0    4784
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0    4784
                                NULL *
       _TMR0_DefaultInterruptHandler *
                           _sendInfo *
 ---------------------------------------------------------------------------------
 (7) _sendInfo                                             6     6      0    4784
                                             31 BANK0      6     6      0
                       _EUSART_Write
                            ___flmul
                            ___fltol
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (8) _bin2bcd                                             11     9      2    1562
                                             10 COMMON     2     0      2
                                              0 BANK0      9     9      0
                             _memset
 ---------------------------------------------------------------------------------
 (9) _memset                                              10     6      4     904
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     381
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0     988
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCBF3_ISR                                           0     0      0     988
                                NULL *
     _IOCBF3_DefaultInterruptHandler *
                          _chegadaS1 *
                          _chegadaS2 *
 ---------------------------------------------------------------------------------
 (7) _chegadaS2                                            0     0      0     494
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (7) _chegadaS1                                            0     0      0     494
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF0_ISR                                           0     0      0       0
                                NULL *
     _IOCBF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP2_ISR                                             0     0      0     494
                          _chegadaS4
 ---------------------------------------------------------------------------------
 (6) _chegadaS4                                            0     0      0     494
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (5) _CMP1_ISR                                             0     0      0     494
                          _chegadaS3
 ---------------------------------------------------------------------------------
 (6) _chegadaS3                                            0     0      0     494
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _matrixUpdate                                         5     5      0     494
                                              8 COMMON     3     3      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (9) i1_txSpi                                              3     1      2     212
                                              5 COMMON     3     1      2
               i1_SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (10) i1_SPI1_ExchangeBlock                                5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      2     2      0     100
                                              2 COMMON     2     2      0
                                NULL *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF3_SetInterruptHandler
   _SPI1_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _initMatrix
     _txSpi
       _SPI1_ExchangeBlock
   _isValidFloor

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     NULL(Fake) *
     _CCP4_DefaultCallBack *
   _CMP1_ISR
     _chegadaS3
       _matrixUpdate
         i1_txSpi
           i1_SPI1_ExchangeBlock
   _CMP2_ISR
     _chegadaS4
       _matrixUpdate
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       NULL(Fake) *
       _IOCBF0_DefaultInterruptHandler *
     _IOCBF3_ISR
       NULL(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _chegadaS1 *
         _matrixUpdate
       _chegadaS2 *
         _matrixUpdate
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _sendInfo *
         _EUSART_Write
         ___flmul
           __Umul8_16
         ___fltol
           ___flmul (ARG)
         _bin2bcd
           _memset
   _TMR4_ISR
     _TMR4_CallBack
       NULL(Fake) *
       _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      81       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     25      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     13      29       8       51.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      81      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 17 22:03:58 2023

                              _CCP4_Initialize 0F60               ??_IOCBF3_DefaultInterruptHandler 0070  
              ?_IOCBF3_DefaultInterruptHandler 0070                             _SPI1_ExchangeBlock 0748  
                                           l11 0E9C                                             l71 0EC9  
                            ??_CMP1_Initialize 00A0                                             _t1 0055  
                                           _t2 0053                         __end_of_FVR_Initialize 0E2F  
                              _timer0ReloadVal 0057                            __Umul8_16@word_mpld 0076  
                                          l201 0E93                                            l211 0E61  
                                          l134 0EBD                                            l306 0E2E  
                                          l261 0E32                                            l422 05EF  
                                          l511 0EFF                                            l255 0747  
                                          l360 0E37                                            l352 07E6  
                                          l440 0771                                            l258 0E7A  
                                          l418 0EB1                                            l610 0E67  
                                          l436 0753                                            l700 0F2F  
                                          l373 0F2C                                            l189 0719  
                                          l278 0E82                                            l550 0E8A  
                                          l438 0758                                            l391 0E55  
                                          l704 0F3C                                            l369 0F1E  
                                          l394 0E5B                                            l723 063E  
                                          l804 0E49                                            l397 0E4F  
                                          l751 0524                                            l827 0F84  
                                          l588 0FAC                                            l686 0F97  
                                          l855 0E6D                                            l798 0F71  
                                          _PR2 001B                                            _PR4 0416  
                          ?_SPI1_ExchangeBlock 00A0                                _timer1ReloadVal 004D  
                                 _pulsoEncoder 0062                 ?_EUSART_SetFramingErrorHandler 00A0  
                              _TMR2_Initialize 0E83                 CCP4_SetCallBack@customCallBack 00A0  
                                          wreg 0009                               _CCP4_SetCallBack 0E44  
                                 ___flmul@aexp 002D                                   ___flmul@bexp 002E  
                      SPI1_ExchangeBlock@block 00A3                                   ___flmul@sign 0028  
                                 ___flmul@temp 0033                                   ___flmul@prod 002F  
                      __end_of_CCP4_CaptureISR 0F60                                   ?_EUSART_Read 0070  
                                 ___fltol@exp1 003E                                           l3600 0704  
                                         l3530 0E8B                                           l3610 0710  
                                         l3602 0705                                           l3700 07CC  
                                         l3532 0E5C                                           l3612 0718  
                                         l3604 0706                                           l3620 0EAD  
                                         l3540 074A                                           l3534 0E50  
                                         l3702 07D4                                           l3606 0707  
                                         l3622 0EAF                                           l3614 0EA7  
                                         l3550 0E62                                           l3630 0E2F  
                                         l3542 074D                                           l3710 0F3A  
                                         l3720 0F23                                           l3552 0E44  
                                         l3536 0E56                                           l3704 07DC  
                                         l3632 0E2B                                           l3624 0E74  
                                         l3608 0708                                           l3560 0E98  
                                         l3616 0EAA                                           l3640 0F78  
                                         l3712 071A                                           l3544 0759  
                                         l3800 04BB                                           l3722 0F24  
                                         l3714 0E33                                           l3730 059A  
                                         l3570 0EC7                                           l3538 0E4A  
                                         l3706 07E4                                           l3626 0E77  
                                         l3562 0E99                                           l3618 0EAB  
                                         l3650 0E87                                           l3554 0E68  
                                         l3642 0F7A                                           l3634 0F72  
                                         l3546 0760                                           l3810 04CC  
                                         l3802 04BF                                           l3724 0F29  
                                         l3740 05ED                                           l3732 059F  
                                         l3572 0EB2                                           l3564 0EBE  
                                         l3628 0E78                                           l3580 06E9  
                                         l3556 0E94                                           l3660 0FA2  
                                         l3652 0E88                                           l3644 0F81  
                                         l3636 0F75                                           l3548 0765  
                                         l3708 0F31                                           l3820 04EA  
                                         l3812 04D2                                           l3804 04C2  
                                         l3726 0F2B                                           l3718 0F1E  
                                         l3734 05C3                                           l3670 0F64  
                                         l3574 0EB4                                           l3566 0EC0  
                                         l3590 06F6                                           l3582 06EC  
                                         l3558 0E97                                           l3662 0FA3  
                                         l3654 0F98                                           l3646 0E83  
                                         l3638 0F76                                           l3750 0F94  
                                         l3822 04ED                                           l3814 04D9  
                                         l3806 04C3                                           l3736 05C4  
                                         l3680 0E7E                                           l3672 0F65  
                                         l3576 0EB9                                           l3568 0EC5  
                                         l3592 06F9                                           l3584 06EF  
                                         l3664 0FA4                                           l3656 0F9D  
                                         l3648 0E86                                           l3752 0F96  
                                         l3744 0F87                                           l3832 0501  
                                         l3824 04F0                                           l3816 04DC  
                                         l3840 050D                                           l3808 04C4  
                                         l3738 05D6                                           l3682 0E7F  
                                         l3674 0F6D                                           l3666 0F60  
                                         l3578 0EBB                                           l3594 06FA  
                                         l3586 06F1                                           l3658 0FA0  
                                         l3690 0EF8                                           l3762 05F3  
                                         l3746 0F88                                           l3834 0508  
                                         l3826 04FA                                           l3818 04E6  
                                         l3676 0F6F                                           l3668 0F63  
                                         l3596 0701                                           l3588 06F4  
                                         l3692 0EF9                                           l3684 0EF2  
                                         l3780 0604                                           l3764 05F8  
                                         l3756 05F0                                           l3748 0F8E  
                                         l3828 04FE                                           l3678 0E7B  
                                         l3598 0703                                           l3694 0EFD  
                                         l3686 0EF4                                           l3782 061F  
                                         l3774 0603                                           l3766 05FC  
                                         l3696 07C2                                           l3688 0EF6  
                                         l3792 0633                                           l3784 0622  
                                         l3768 0602                                           l3698 07CB  
                                         l3794 0638                                           l3786 0628  
                                         l3788 062B                                           l3796 049E  
                                         l3878 0516                                           l3798 04B9  
                                ?_isValidFloor 0070                                           _LATA 010C  
                                         u2310 0758                                           _LATB 010D  
                                         u2311 0757                                           u2320 0771  
                                         u2400 063E                                           u2321 0770  
                                         u2401 063D                                           u2330 0F23  
                                         u2410 04CC                                           u2331 0F22  
                                         u2411 04CB                                           u2340 0F29  
                                         u2420 04D9                                           u2341 0F28  
                                         u2421 04D8                                           u2350 059F  
                                         u2430 04E6                                           u2351 059E  
                                         u2431 04E5                                           u2360 0F8E  
                                         u2440 04FA                                           u2361 0F8D  
                                         u2441 04F9                                           u2370 0F94  
                                         u2450 0508                                           u2371 0F93  
                                         u2451 0507                                           u2380 0602  
                                         u2381 0601                                           u2390 0628  
                                         u2391 0627                              ??_CMP2_Initialize 00A0  
                                         i1l77 0E43                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _flag 0061                                           _main 049E  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                           ??_SPI1_ExchangeBlock 00A2  
                    i1SPI1_ExchangeBlock@block 0073                                           start 0056  
                              __end_ofi1_txSpi 0EF2                               __end_of_CMP1_ISR 0E3E  
                             __end_of_CMP2_ISR 0E44                     ??_TMR4_SetInterruptHandler 00A2  
                      __end_of_TMR0_Initialize 0FAD                 ??_TMR0_DefaultInterruptHandler 0070  
                              ?_FVR_Initialize 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0E7B                              isValidFloor@floor 00A1  
                                ___fltol@sign1 003D                                          ?_main 0070  
                       ??_CCP4_DefaultCallBack 0072                                __end_of___flmul 02AB  
             SPI1_Open@spi1UniqueConfiguration 00A3                                __end_of___fltol 0598  
                                        _T1CON 0018                                          _T2CON 001C  
                              __end_of_bin2bcd 040E                                          _T4CON 0417  
                                        i1l140 0E3D                                          i1l204 0E28  
                                        i1l214 0E29                                          i1l208 0F1D  
                                        i1l440 07C1                                          i1l194 0F4D  
                                        i1l603 07FE                                          i1l436 07A5  
                                        i1l700 0EE5                                          i1l613 0E2A  
                                        i1l438 07AA                                          i1l198 0F0E  
                                        i1l607 0ED6                                          i1l704 0EF1  
                                        i1l376 0E9E                                          i1l801 0F5F  
                                        i1l713 0FDC                                          i1l379 0EA6  
                                        i1l492 0054                                          i1l733 06E8  
                                        i1l743 0677                                          i1l728 079A  
                                        i1l738 06B0                                          i1l852 0EE3  
                                        i1l774 03A1                                          i1l775 03B4  
                                        i1l776 03C6                                          i1l848 0FC2  
                                        i1l777 03D9                                          i1l689 037B  
                                        i1l778 040D                                          i1l858 0002  
                                        i1l795 0E27                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                     _RXaccepted 0063  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 0F72                      ?_TMR0_SetInterruptHandler 00A0  
                             __end_of_TMR0_ISR 07FF                                          _dTemp 005D  
                             __end_of_TMR4_ISR 0FC3                                          _oTemp 005F  
                      __end_of_PIN_MANAGER_IOC 0F4E                                 _WDT_Initialize 0E2F  
                               ??_isValidFloor 00A0                                          _txSpi 0F2D  
                                        _state 0066                        __end_of_PWM3_Initialize 0E9D  
                      __end_of_TMR1_Initialize 0F00                                          pclath 000A  
                                        status 0003                        __end_of_CCP4_Initialize 0F72  
                                        wtemp0 007E                                  txSpi@dataSize 00A5  
                              __initialization 0058                                   __end_of_main 0527  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 0E8B  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 00B1  
                      _IOCBF0_InterruptHandler 0067                         __end_of_WDT_Initialize 0E33  
                             ?_CCP4_CaptureISR 0070              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00BB                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         ?_txSpi 00A5  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0E38                                         _BORCON 0116  
                                       _T1GCON 0019                                         u110_20 0417  
                                       u110_21 0416                                         i1l1202 0597  
                                       i1l1212 0597                                         i1l3000 0697  
                                       u111_20 042F                                         i1l1209 0582  
                                       u111_21 042E                                         i1l3002 069E  
                                       i1l1411 022A                                         i1l3004 06A2  
                                       i1l1405 02AA                                         i1l3006 06A8  
                                       i1l3008 06AD                                         i1l1424 0FEF  
                                       u112_20 0456                                         u120_20 03AA  
                                       i1l1417 029E                                         u112_21 0455  
                                       u120_21 03A9                                         i1l3050 0F0F  
                                       i1l1426 0FFF                                         i1l3210 07E7  
                                       i1l3220 0F50                                         i1l3044 0F00  
                                       i1l3052 0F16                                         i1l3212 07E8  
                                       i1l3300 000A                                         i1l3222 0F55  
                                       i1l3046 0F07                                         i1l3054 0F1B  
                                       i1l3150 0ECA                                         i1l3214 07F8  
                                       i1l3230 0FBF                                         i1l3310 001C  
                                       i1l3302 000E                                         i1l3048 0F0C  
                                       u113_20 046F                                         u121_20 03BD  
                                       i1l3152 0ED1                                         i1l3216 07FB  
                                       i1l3160 0EDE                                         i1l3224 0FAD  
                                       i1l3320 0032                                         i1l3312 0020  
                                       i1l3304 0011                                         u113_21 046E  
                                       u121_21 03BC                                         i1l3218 0F4E  
                                       i1l2602 0EE7                                         i1l3162 0E3E  
                                       i1l3170 0F3D                                         i1l2610 037C  
                                       i1l3226 0FAF                                         i1l3330 0047  
                                       i1l3322 0037                                         i1l3314 0025  
                                       i1l3306 0015                                         i1l2540 07B5  
                                       i1l2532 079C                                         i1l2604 0EEF  
                                       i1l3164 0E40                                         i1l3172 0F42  
                                       i1l2700 0579                                         i1l1468 049D  
                                       i1l2620 038F                                         i1l2612 0387  
                                       i1l3228 0FBC                                         i1l3332 004C  
                                       i1l3324 003A                                         i1l3316 002A  
                                       i1l3308 0019                                         i1l2534 079F  
                                       i1l3166 0E38                                         i1l3174 0F45  
                                       i1l2606 0E9E                                         i1l2710 0076  
                                       i1l2702 0587                                         i1l2550 041D  
                                       i1l2542 040F                                         i1l2630 03F4  
                                       i1l2622 0398                                         i1l2614 038E  
                                       i1l3158 0ED7                                         i1l3334 0051  
                                       i1l3326 003F                                         i1l3318 002D  
                                       i1l2536 07AB                                         i1l3168 0E3A  
                                       i1l3176 0F4A                                         i1l2608 0EA3  
                                       i1l2800 0206                                         i1l2720 008D  
                                       i1l2712 007A                                         i1l2704 058C  
                                       u130_20 0561                                         u114_20 049D  
                                       i1l2560 043B                                         i1l2552 0426  
                                       i1l2544 0411                                         i1l2632 03FA  
                                       u122_20 03CF                                         i1l2624 03AA  
                                       i1l3328 0044                                         u130_21 0560  
                                       u114_21 049C                                         u122_21 03CE  
                                       i1l2538 07B1                                         i1l2650 0FD7  
                                       i1l2642 0FC5                                         i1l2810 0227  
                                       i1l2802 020A                                         i1l2730 00A2  
                                       i1l2722 008F                                         i1l2714 007B  
                                       i1l2706 0070                                         i1l2570 0466  
                                       i1l2562 0444                                         i1l2626 03BD  
                                       i1l2644 0FC7                                         i1l2636 0FC3  
                                       i1l2900 0777                                         i1l2820 0240  
                                       i1l2804 020E                                         i1l2740 00B7  
                                       i1l2732 00A3                                         i1l2724 0097  
                                       i1l2716 0080                                         i1l2708 0074  
                                       i1l2580 048A                                         i1l2564 044D  
                                       i1l2556 0430                                         i1l2548 0418  
                                       i1l2628 03CF                                         i1l2646 0FCD  
                                       i1l2910 078C                                         i1l2902 0779  
                                       i1l2590 0FE0                                         i1l2830 0281  
                                       i1l2822 0258                                         i1l2814 022F  
                                       i1l2806 020F                                         i1l2750 00D2  
                                       i1l2742 00BF                                         i1l2734 00A8  
                                       i1l2726 009C                                         i1l2718 0085  
                                       i1l2670 0527                                         i1l2582 048F  
                                       i1l2574 0470                                         i1l2558 0435  
                                       i1l2648 0FD5                                         i1l2920 06B6  
                                       i1l2912 0793                                         i1l2904 077B  
                                       u115_20 0FEB                                         i1l2592 0FE7  
                                       i1l2840 029C                                         i1l2832 028A  
                                       i1l2816 0234                                         i1l2824 025C  
                                       i1l2808 0213                                         i1l2760 0127  
                                       i1l2752 00DD                                         i1l2744 00C4  
                                       i1l2736 00AD                                         i1l2728 009E  
                                       i1l2680 054C                                         i1l2672 0531  
                                       i1l2584 0493                                         i1l2576 0481  
                                       i1l2568 0457                                         u123_20 03E6  
                                       u115_21 0FEA                                         i1l2930 06CA  
                                       i1l2922 06B8                                         i1l2914 0797  
                                       i1l2906 077E                                         i1l2594 0FEB  
                                       i1l2842 02A2                                         i1l2834 028C  
                                       i1l2826 0269                                         i1l2818 023C  
                                       i1l2770 015A                                         i1l2762 0134  
                                       i1l2754 00EA                                         i1l2746 00C9  
                                       i1l2738 00B5                                         i1l2682 0554  
                                       i1l2586 0497                                         i1l2578 0485  
                                       i1l3298 0006                                         i1l2940 06E5  
                                       i1l2932 06CF                                         i1l2924 06BA  
                                       i1l2916 06B1                                         i1l2908 0784  
                                       i1l2596 0FF6                                         i1l2588 0FDE  
                                       i1l2836 0297                                         i1l2828 0273  
                                       i1l2780 0197                                         i1l2772 0165  
                                       i1l2764 0141                                         i1l2756 0102  
                                       i1l2692 0562                                         i1l2684 0556  
                                       i1l2676 053A                                         u131_25 0563  
                                       u123_25 03E2                                         i1l2934 06D6  
                                       i1l2926 06BD                                         i1l2918 06B4  
                                       i1l2598 0FFB                                         i1l2838 029B  
                                       i1l2790 01E7                                         i1l2782 01A2  
                                       i1l2774 016C                                         i1l2766 0148  
                                       i1l2758 010F                                         i1l2686 055A  
                                       i1l2694 0572                                         i1l2678 054B  
                                       i1l2870 02FA                                         u108_20 07AA  
                                       i1l2936 06DA                                         i1l2928 06C3  
                                       i1l2792 01F3                                         i1l2784 01B4  
                                       i1l2776 017E                                         i1l2768 0153  
                                       u140_20 00A2                                         u132_20 0571  
                                       u124_20 03FA                                         i1l2880 0322  
                                       i1l2872 030A                                         u108_21 07A9  
                                       u140_21 00A1                                         u132_21 0570  
                                       u124_21 03F9                                         i1l2970 0659  
                                       i1l2962 063F                                         i1l2938 06E0  
                                       i1l2794 01FA                                         i1l2786 01C9  
                                       i1l2778 0185                                         i1l2890 036C  
                                       i1l2882 034B                                         i1l2874 0310  
                                       i1l2980 0674                                         i1l2972 065E  
                                       i1l2964 064B                                         i1l2796 01FE  
                                       i1l2788 01E0                                         i1l2892 0370  
                                       i1l2884 0358                                         i1l2876 0317  
                                       i1l2868 02AB                                         u116_25 0FF0  
                                       i1l2990 0678                                         i1l2974 0665  
                                       i1l2966 064C                                         i1l2798 01FF  
                                       i1l2894 0377                                         i1l2886 035E  
                                       i1l2878 031E                                         u109_20 07C1  
                                       i1l2992 0684                                         i1l2976 0669  
                                       i1l2968 0652                                         i1l2896 0772  
                                       u117_20 0FFB                                         u141_20 00A8  
                                       u133_20 0578                                         u125_20 0407  
                                       i1l2888 0365                                         u109_21 07C0  
                                       u117_21 0FFA                                         u141_21 00A7  
                                       u133_21 0577                                         i1l2994 0685  
                                       i1l2978 066F                                         i1l2898 0774  
                                       i1l2996 068B                                         u125_25 0403  
                                       i1l2998 0692                                         u126_20 0FDC  
                                       u118_20 0EA3                                         u142_20 00AD  
                                       u126_21 0FDB                                         u118_21 0EA2  
                                       u142_21 00AC                                         u150_25 01F4  
                                       u134_25 057A                                         u151_20 01FE  
                                       u143_20 00C4                                         u135_20 0587  
                                       u127_20 0531                                         u119_20 0398  
                                       u151_21 01FD                                         u143_21 00C3  
                                       u135_21 0586                                         u127_21 0530  
                                       u119_21 0397                                         u160_20 0269  
                                       u144_20 00C9                                         u136_20 058C  
                                       u128_20 0547                                         u160_21 0268  
                                       u144_21 00C8                                         u136_21 058B  
                                       u160_25 0265                                         u152_25 0200  
                                       u128_25 0543                                    initMatrix@i 00AE  
                                  initMatrix@j 00B0                                         u161_20 0281  
                                       u153_20 020E                                         u137_20 007A  
                                       u129_20 055A                                    initMatrix@k 00AD  
                                       u161_21 0280                                         u153_21 020D  
                                       u137_21 0079                                         u129_21 0559  
                                       u161_25 027D                                         u145_25 0142  
                                       u170_20 0F16                                         u162_20 029B  
                                       u154_20 0213                                         u138_20 0080  
                                       u170_21 0F15                                         u162_21 029A  
                                       u154_21 0212                                         u138_21 007F  
                                       u146_25 016D                                         u155_20 0227  
                                       u147_20 01BF                                         u139_20 0085  
                                       u171_20 0ED1                                         _FVRCON 0117  
                                       u155_21 0226                                         u139_21 0084  
                                       u171_21 0ED0                                         u147_25 01BB  
                                       u156_20 022E                                         u148_20 01D6  
                                       u172_20 0EDE                                         u156_21 022D  
                                       u172_21 0EDD                                         u148_25 01D2  
                                       u165_20 0784                                         u173_20 0F42  
                                       u157_20 0234                                         u165_21 0783  
                                       u173_21 0F41                                         u157_21 0233  
                                       u149_25 01E1                                         u166_20 06C3  
                                       u174_20 0F4A                                         u158_20 0240  
                                       u190_20 0020                                         u166_21 06C2  
                                       u174_21 0F49                                         u158_21 023F  
                                       u190_21 001F                                         u167_20 0652  
                                       u159_20 024E                                         u191_20 0025  
                                       u167_21 0651                                         u191_21 0024  
                                       u159_25 024A                                         u168_20 068B  
                                       u192_20 002A                                         u168_21 068A  
                                       u192_21 0029                                         u169_20 0F07  
                                       u193_20 0032                                         u169_21 0F06  
                                       u193_21 0031                                         u178_20 07F8  
                                       u194_20 0037                                         u186_20 000A  
                                       u178_21 07F7                                         u194_21 0036  
                                       u186_21 0009                                         u179_20 0FBC  
                                       u195_20 003F                                         u187_20 000E  
                                       u179_21 0FBB                                         u195_21 003E  
                                       u187_21 000D                                         u196_20 0044  
                                       u188_20 0015                                         u196_21 0043  
                                       u188_21 0014                                         u197_20 004C  
                                       u189_20 0019                                         u197_21 004B  
                                       u189_21 0018                                         u198_20 0051  
                                       u198_21 0050                                         _OSCCON 0099  
                                    ??i1_txSpi 0077                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                            __end_of_SPI1_Open 05F0                                   _CCPTMRS0bits 029E  
                                    ??___flmul 0079                                      ??___fltol 0039  
                                    ??_bin2bcd 0020                                         _altura 005B  
                                ?_matrixUpdate 0070                               ?_TMR0_Initialize 0070  
                                       _memset 040E                        __end_of_TMR4_Initialize 0F85  
                                       _waitRX 0064                                         _origem 0060  
                                _CCP4_CallBack 00B5                               __end_of_sendInfo 037C  
         __end_of_TMR4_DefaultInterruptHandler 0003                   _TMR4_DefaultInterruptHandler 0002  
                              ?_WDT_Initialize 0070                       i1SPI1_ExchangeBlock@data 0074  
                                    ?_CMP1_ISR 0070                          __end_of_TMR0_CallBack 0ED7  
                                    ?_CMP2_ISR 0070       TMR4_SetInterruptHandler@InterruptHandler 00A0  
     TMR0_SetInterruptHandler@InterruptHandler 00A0     IOCBF3_SetInterruptHandler@InterruptHandler 00A0  
   IOCBF0_SetInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCBF0_ISR 0070                                   ??_IOCBF3_ISR 007B  
                             ?_PWM3_Initialize 0070                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 071A                        __end_of__initialization 006C  
                             ?_CCP4_Initialize 0070                                _CMP1_Initialize 0EB2  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0035  
                     __end_of_CCP4_SetCallBack 0E4A                                    i1txSpi@data 0077  
                               __pcstackCOMMON 0070                          __end_of_TMR4_CallBack 0EE4  
                                 __pidataBANK0 0003                            ??_SYSTEM_Initialize 00A2  
                                    ?_TMR0_ISR 0070                                i1txSpi@dataSize 0075  
                               ??_matrixUpdate 0078                                      ?_TMR4_ISR 0070  
                         __end_of_isValidFloor 0F98                              ??_SPI1_Initialize 00A0  
       __end_of_IOCBF0_DefaultInterruptHandler 0E29                 _IOCBF0_DefaultInterruptHandler 0E28  
                                __end_of_txSpi 0F3D                               ?_TMR2_Initialize 0070  
                           __end_of_IOCBF0_ISR 0F0F                             __end_of_IOCBF3_ISR 0F1E  
                              _CMP2_Initialize 0EBE                             _spi1_configuration 080B  
                                 bin2bcd@dataU 0025                                 _OPTION_REGbits 0095  
                        TMR0_ISR@CountCallBack 004B                  ?_TMR4_DefaultInterruptHandler 0070  
              ??_EUSART_SetOverrunErrorHandler 00A2         __end_of_IOCBF3_DefaultInterruptHandler 0E2A  
               _IOCBF3_DefaultInterruptHandler 0E29                                     ??_CMP1_ISR 007B  
                                   ??_CMP2_ISR 007B                      __end_of_SYSTEM_Initialize 0748  
                                      ??_txSpi 00A7                                     __pbssBANK0 0045  
                                   __pbssBANK1 00C1                           __end_of_EUSART_Write 0EA7  
                                   _andarAtual 005C                          _TMR4_InterruptHandler 00B3  
                            __end_of__Umul8_16 1000                               ??_FVR_Initialize 00A0  
                                  sendInfo@bcd 0043                                     __pmaintext 049E  
             __end_of_TMR0_SetInterruptHandler 0E68                                     ??_TMR0_ISR 007E  
                                   ??_TMR4_ISR 0070                                     __pintentry 0004  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_memset 0070  
                             ?_TMR4_Initialize 0070                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _destinoSub 005A  
                            _isValidFloor$1345 00A0                                        _OSCTUNE 0098  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                      __end_of_CMP1_Initialize 0EBE                       ??_EUSART_SetErrorHandler 00A2  
                            __end_of_chegadaS1 079B                              __end_of_chegadaS2 06E9  
                            __end_of_chegadaS3 06B1                              __end_of_chegadaS4 0678  
                                      i1_txSpi 0EE4                                      ?_sendInfo 0070  
                         _ADC_InterruptHandler 004F                                     _initMatrix 05F0  
                      __end_of_CMP2_Initialize 0ECA                                        ___flmul 0070  
                                      ___fltol 0527                                        _bin2bcd 037C  
                                      __ptext1 0F85                                        __ptext2 05F0  
                                      __ptext3 0F2D                                        __ptext4 0748  
                                      __ptext5 071A                                        __ptext6 0E2F  
                                      __ptext7 0F72                                        __ptext8 0E68  
                                      __ptext9 0E83                                        _destino 005E  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0E74  
                                    _T2CONbits 001C                                      _CMOUTbits 0115  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 00A2  
                                    _IOCBFbits 0396                      ?_TMR4_SetInterruptHandler 00A0  
                                    _IOCBNbits 0395                                      _IOCBPbits 0394  
                                      _rxValue 0065                                        _subindo 0069  
                                      clrloop0 0E6F                           end_of_initialization 006C  
                         __end_of_matrixUpdate 0FDD                                 initMatrix@data 00A9  
               ??_TMR4_DefaultInterruptHandler 0070          __end_of_EUSART_SetOverrunErrorHandler 0E5C  
                _EUSART_SetOverrunErrorHandler 0E56                                        memset@c 0070  
                                      memset@k 0076                                        memset@n 0072  
                                      memset@s 0079                              _EUSART_Initialize 07C2  
                                   ??_sendInfo 003F                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0E33  
                                    _SPI1_Open 0598                            ??_EUSART_Initialize 00A2  
                             ??_WDT_Initialize 00A0                       _TMR0_SetInterruptHandler 0E62  
                          ?_EUSART_is_rx_ready 0070                                      _TRISBbits 008D  
                 ??_IOCBF0_SetInterruptHandler 00A2                   ??_IOCBF3_SetInterruptHandler 00A2  
                             ?_CMP1_Initialize 0070                                   _isValidFloor 0F85  
                       SPI1_ExchangeBlock@data 00A4                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 07E7                           ??_EUSART_is_rx_ready 00A0  
                              _SPI1_Initialize 0EA7                                      _TXSTAbits 019E  
            CCP4_DefaultCallBack@capturedValue 0070                              ?_CCP4_SetCallBack 00A0  
                                  ?_initMatrix 0070                               ?_CMP2_Initialize 0070  
                                   ?_SPI1_Open 0070                             ??_CCP4_SetCallBack 00A2  
                   _EUSART_DefaultErrorHandler 0000                                   _EUSART_Write 0E9D  
                               _ADC_Initialize 0E7B                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_memset 049E                            start_initialization 0058  
                 __end_ofi1_SPI1_ExchangeBlock 07C2                                _velocidadeMotor 0045  
                                ??_EUSART_Read 00A0                                      _MatrixLed 00C1  
                                bin2bcd@binVal 007A                 ?_EUSART_SetOverrunErrorHandler 00A0  
                   _EUSART_FramingErrorHandler 00BD                         _EUSART_SetErrorHandler 0E4A  
                       __end_of_ADC_Initialize 0E83                                      __Umul8_16 0FDD  
                                  __pdataBANK0 0069                                       ??_memset 0074  
                                   memset@dest 0078                          CCP4_CaptureISR@module 0072  
                        TMR4_ISR@CountCallBack 0049                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                      __end_of_SPI1_Initialize 0EB2                                       ?i1_txSpi 0075  
                                    _chegadaS1 0772                                      _chegadaS2 06B1  
                                    _chegadaS3 0678                                      _chegadaS4 063F  
                          __end_of_EUSART_Read 0F2D                          _TMR0_InterruptHandler 00B7  
                                    __pnvBANK0 0067                                      __pnvBANK1 00B3  
                      _IOCBF3_InterruptHandler 00BF                         _PIN_MANAGER_Initialize 06E9  
             __end_of_TMR4_SetInterruptHandler 0E6E                              ??_CCP4_CaptureISR 0072  
                                     ?___flmul 0020                                       ?___fltol 0035  
                                     ?_bin2bcd 007A                                     ?__Umul8_16 0070  
                                  ??_SPI1_Open 00A0                                ?_ADC_Initialize 0070  
                                 _matrixUpdate 0FC3                   ??_INTERRUPT_InterruptManager 007E  
           __end_of_IOCBF0_SetInterruptHandler 0E94                     _IOCBF0_SetInterruptHandler 0E8B  
           __end_of_IOCBF3_SetInterruptHandler 0E62                     _IOCBF3_SetInterruptHandler 0E5C  
                                     _CMP1_ISR 0E38                                       _CMP2_ISR 0E3E  
                                _TMR0_CallBack 0ECA                     __end_of_SPI1_ExchangeBlock 0772  
                            ??_TMR0_Initialize 00A2                                    _destinoDesc 0059  
       EUSART_SetErrorHandler@interruptHandler 00A0                                       _LATBbits 010D  
                                   ?_chegadaS1 0070                                     ?_chegadaS2 0070  
                                   ?_chegadaS3 0070                                     ?_chegadaS4 0070  
                          __end_of_matrix_conf 080B                                      clear_ram0 0E6E  
                 __end_of_CCP4_DefaultCallBack 0E28                                       _PIE2bits 0092  
                                     _PIE3bits 0093                              _eusartRxLastError 0058  
                   ??_TMR0_SetInterruptHandler 00A2                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00A2                                       _PIR2bits 0012  
                                     _PIR3bits 0013                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216                           i1_SPI1_ExchangeBlock 079B  
                                     _TMR0_ISR 07E7              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR4_ISR 0FAD                                  _TMR4_CallBack 0ED7  
                                     _SSP1STAT 0214                              ??_PIN_MANAGER_IOC 007B  
                            ??_PWM3_Initialize 00A0                              ??_TMR1_Initialize 00A0  
                                   _ADCON0bits 009D                              ??_CCP4_Initialize 00A2  
                               ?_TMR0_CallBack 0070                               initMatrix@i_1383 00AF  
                                  _EUSART_Read 0F1E                               ?_SPI1_Initialize 0070  
                            ??_TMR2_Initialize 00A0                                   ??_initMatrix 00A8  
                        ?i1_SPI1_ExchangeBlock 0070                                 ?_TMR4_CallBack 0070  
                      ??_OSCILLATOR_Initialize 00A0                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 00B9                             sendInfo@velocidade 0041  
                     _TMR4_SetInterruptHandler 0E68                                       bin2bcd@i 0024  
                                     __ptext10 0EF2                                       __ptext11 0F98  
                                     __ptext20 07C2                                       __ptext12 0E62  
                                     __ptext21 0E56                                       __ptext13 0EA7  
                                   _T1GCONbits 0019                                       __ptext30 0E33  
                                     __ptext22 0E50                                       __ptext14 0E94  
                                     __ptext31 0F1E                                       __ptext23 0E4A  
                                     __ptext15 06E9                                       __ptext40 037C  
                                     __ptext24 0EBE                                       __ptext16 0E5C  
                                     __ptext41 040E                                       __ptext33 0FAD  
                                     __ptext25 0EB2                                       __ptext17 0E8B  
                                     __ptext50 06B1                                       __ptext42 0527  
                                     __ptext34 0ED7                                       __ptext26 0F60  
                                     __ptext18 0E74                                       __ptext51 0F00  
                                     __ptext43 0070                                       __ptext35 0002  
                                     __ptext27 0E44                                       __ptext19 0E2B  
                                     __ptext60 0F4E                                       __ptext52 0E28  
                                     __ptext44 0FDD                                       __ptext36 07E7  
                                     __ptext28 0E7B                                       __ptext61 0E27  
                                     __ptext53 0E3E                                       __ptext45 0E9D  
                                     __ptext37 0ECA                                       __ptext29 0598  
                                     __ptext54 063F                                       __ptext46 0F3D  
                                     __ptext38 0E2A                                       __ptext55 0E38  
                                     __ptext47 0F0F                                       __ptext39 02AB  
                                     __ptext56 0678                                       __ptext48 0772  
                                     __ptext57 0FC3                                       __ptext49 0E29  
                                     __ptext58 0EE4                                       __ptext59 079B  
                                 _SSP1CON1bits 0215                                    _matrix_conf 07FF  
                           __end_of_initMatrix 063F                                     _IOCBF0_ISR 0F00  
                                   _IOCBF3_ISR 0F0F                              ??_TMR4_Initialize 00A2  
                                  ??_chegadaS1 007B                                    ??_chegadaS2 007B  
                                  ??_chegadaS3 007B                                    ??_chegadaS4 007B  
         __end_of_TMR0_DefaultInterruptHandler 0E2B                   _TMR0_DefaultInterruptHandler 0E2A  
                                     _sendInfo 02AB                        ?_EUSART_SetErrorHandler 00A0  
                i1SPI1_ExchangeBlock@blockSize 0070  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0056  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0E56  
                _EUSART_SetFramingErrorHandler 0E50                                      txSpi@data 00A7  
                  SPI1_ExchangeBlock@blockSize 00A0                               matrixUpdate@data 0078  
                                   _INTCONbits 000B                           _CCP4_DefaultCallBack 0E27  
                              ??_TMR0_CallBack 007E                                     _FVRCONbits 0117  
                                     intlevel1 0000                                _CCP4_CaptureISR 0F4E  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0E50  
                             ??_ADC_Initialize 00A0                                ??_TMR4_CallBack 0070  
                       ??i1_SPI1_ExchangeBlock 0072                  ?_TMR0_DefaultInterruptHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                                  __pstringtext1 07FF  
                                __pstringtext2 080B                                 _FVR_Initialize 0E2B  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                                  _temperatura 0051                          ?_CCP4_DefaultCallBack 0070  
                              _TMR0_Initialize 0F98                    ?_IOCBF0_SetInterruptHandler 00A0  
                  ?_IOCBF3_SetInterruptHandler 00A0                                    ?_IOCBF0_ISR 0070  
                           EUSART_Write@txData 0070                                    ?_IOCBF3_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 071A               ??_IOCBF0_DefaultInterruptHandler 0070  
              ?_IOCBF0_DefaultInterruptHandler 0070                                  matrixUpdate@i 007A  
                              _PIN_MANAGER_IOC 0F3D                           __Umul8_16@multiplier 0078  
                              _TMR1_Initialize 0EF2                                _PWM3_Initialize 0E94  
                   __end_of_spi1_configuration 080F                              __Umul8_16@product 0074  
