

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 19 22:02:49 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    97                           	dabs	1,0x7E,2
    98     0000                     
    99                           ; Version 2.40
   100                           ; Generated 17/11/2021 GMT
   101                           ; 
   102                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution. Publication is not required when
   116                           ;        this file is used in an embedded application.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC16F1827 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001E                     	;# 
   162     001F                     	;# 
   163     008C                     	;# 
   164     008D                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0094                     	;# 
   169     0095                     	;# 
   170     0096                     	;# 
   171     0097                     	;# 
   172     0098                     	;# 
   173     0099                     	;# 
   174     009A                     	;# 
   175     009B                     	;# 
   176     009B                     	;# 
   177     009C                     	;# 
   178     009D                     	;# 
   179     009E                     	;# 
   180     010C                     	;# 
   181     010D                     	;# 
   182     0111                     	;# 
   183     0112                     	;# 
   184     0113                     	;# 
   185     0114                     	;# 
   186     0115                     	;# 
   187     0116                     	;# 
   188     0117                     	;# 
   189     0118                     	;# 
   190     0119                     	;# 
   191     011A                     	;# 
   192     011B                     	;# 
   193     011D                     	;# 
   194     011E                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197     0191                     	;# 
   198     0191                     	;# 
   199     0192                     	;# 
   200     0193                     	;# 
   201     0193                     	;# 
   202     0193                     	;# 
   203     0194                     	;# 
   204     0195                     	;# 
   205     0196                     	;# 
   206     0199                     	;# 
   207     019A                     	;# 
   208     019B                     	;# 
   209     019B                     	;# 
   210     019B                     	;# 
   211     019B                     	;# 
   212     019C                     	;# 
   213     019C                     	;# 
   214     019D                     	;# 
   215     019E                     	;# 
   216     019F                     	;# 
   217     020C                     	;# 
   218     020D                     	;# 
   219     0211                     	;# 
   220     0211                     	;# 
   221     0212                     	;# 
   222     0212                     	;# 
   223     0213                     	;# 
   224     0213                     	;# 
   225     0214                     	;# 
   226     0214                     	;# 
   227     0215                     	;# 
   228     0215                     	;# 
   229     0215                     	;# 
   230     0216                     	;# 
   231     0216                     	;# 
   232     0217                     	;# 
   233     0217                     	;# 
   234     0219                     	;# 
   235     021A                     	;# 
   236     021B                     	;# 
   237     021C                     	;# 
   238     021D                     	;# 
   239     021E                     	;# 
   240     021F                     	;# 
   241     0291                     	;# 
   242     0291                     	;# 
   243     0292                     	;# 
   244     0293                     	;# 
   245     0294                     	;# 
   246     0295                     	;# 
   247     0295                     	;# 
   248     0296                     	;# 
   249     0298                     	;# 
   250     0298                     	;# 
   251     0299                     	;# 
   252     029A                     	;# 
   253     029B                     	;# 
   254     029C                     	;# 
   255     029C                     	;# 
   256     029D                     	;# 
   257     029E                     	;# 
   258     029E                     	;# 
   259     0311                     	;# 
   260     0311                     	;# 
   261     0312                     	;# 
   262     0313                     	;# 
   263     0318                     	;# 
   264     0318                     	;# 
   265     0319                     	;# 
   266     031A                     	;# 
   267     0394                     	;# 
   268     0395                     	;# 
   269     0396                     	;# 
   270     039A                     	;# 
   271     039C                     	;# 
   272     039D                     	;# 
   273     039E                     	;# 
   274     039F                     	;# 
   275     0415                     	;# 
   276     0416                     	;# 
   277     0417                     	;# 
   278     041C                     	;# 
   279     041D                     	;# 
   280     041E                     	;# 
   281     0FE4                     	;# 
   282     0FE5                     	;# 
   283     0FE6                     	;# 
   284     0FE7                     	;# 
   285     0FE8                     	;# 
   286     0FE9                     	;# 
   287     0FEA                     	;# 
   288     0FEB                     	;# 
   289     0FED                     	;# 
   290     0FEE                     	;# 
   291     0FEF                     	;# 
   292     0000                     	;# 
   293     0001                     	;# 
   294     0002                     	;# 
   295     0003                     	;# 
   296     0004                     	;# 
   297     0005                     	;# 
   298     0006                     	;# 
   299     0007                     	;# 
   300     0008                     	;# 
   301     0009                     	;# 
   302     000A                     	;# 
   303     000B                     	;# 
   304     000C                     	;# 
   305     000D                     	;# 
   306     0011                     	;# 
   307     0012                     	;# 
   308     0013                     	;# 
   309     0014                     	;# 
   310     0015                     	;# 
   311     0016                     	;# 
   312     0016                     	;# 
   313     0017                     	;# 
   314     0018                     	;# 
   315     0019                     	;# 
   316     001A                     	;# 
   317     001B                     	;# 
   318     001C                     	;# 
   319     001E                     	;# 
   320     001F                     	;# 
   321     008C                     	;# 
   322     008D                     	;# 
   323     0091                     	;# 
   324     0092                     	;# 
   325     0093                     	;# 
   326     0094                     	;# 
   327     0095                     	;# 
   328     0096                     	;# 
   329     0097                     	;# 
   330     0098                     	;# 
   331     0099                     	;# 
   332     009A                     	;# 
   333     009B                     	;# 
   334     009B                     	;# 
   335     009C                     	;# 
   336     009D                     	;# 
   337     009E                     	;# 
   338     010C                     	;# 
   339     010D                     	;# 
   340     0111                     	;# 
   341     0112                     	;# 
   342     0113                     	;# 
   343     0114                     	;# 
   344     0115                     	;# 
   345     0116                     	;# 
   346     0117                     	;# 
   347     0118                     	;# 
   348     0119                     	;# 
   349     011A                     	;# 
   350     011B                     	;# 
   351     011D                     	;# 
   352     011E                     	;# 
   353     018C                     	;# 
   354     018D                     	;# 
   355     0191                     	;# 
   356     0191                     	;# 
   357     0192                     	;# 
   358     0193                     	;# 
   359     0193                     	;# 
   360     0193                     	;# 
   361     0194                     	;# 
   362     0195                     	;# 
   363     0196                     	;# 
   364     0199                     	;# 
   365     019A                     	;# 
   366     019B                     	;# 
   367     019B                     	;# 
   368     019B                     	;# 
   369     019B                     	;# 
   370     019C                     	;# 
   371     019C                     	;# 
   372     019D                     	;# 
   373     019E                     	;# 
   374     019F                     	;# 
   375     020C                     	;# 
   376     020D                     	;# 
   377     0211                     	;# 
   378     0211                     	;# 
   379     0212                     	;# 
   380     0212                     	;# 
   381     0213                     	;# 
   382     0213                     	;# 
   383     0214                     	;# 
   384     0214                     	;# 
   385     0215                     	;# 
   386     0215                     	;# 
   387     0215                     	;# 
   388     0216                     	;# 
   389     0216                     	;# 
   390     0217                     	;# 
   391     0217                     	;# 
   392     0219                     	;# 
   393     021A                     	;# 
   394     021B                     	;# 
   395     021C                     	;# 
   396     021D                     	;# 
   397     021E                     	;# 
   398     021F                     	;# 
   399     0291                     	;# 
   400     0291                     	;# 
   401     0292                     	;# 
   402     0293                     	;# 
   403     0294                     	;# 
   404     0295                     	;# 
   405     0295                     	;# 
   406     0296                     	;# 
   407     0298                     	;# 
   408     0298                     	;# 
   409     0299                     	;# 
   410     029A                     	;# 
   411     029B                     	;# 
   412     029C                     	;# 
   413     029C                     	;# 
   414     029D                     	;# 
   415     029E                     	;# 
   416     029E                     	;# 
   417     0311                     	;# 
   418     0311                     	;# 
   419     0312                     	;# 
   420     0313                     	;# 
   421     0318                     	;# 
   422     0318                     	;# 
   423     0319                     	;# 
   424     031A                     	;# 
   425     0394                     	;# 
   426     0395                     	;# 
   427     0396                     	;# 
   428     039A                     	;# 
   429     039C                     	;# 
   430     039D                     	;# 
   431     039E                     	;# 
   432     039F                     	;# 
   433     0415                     	;# 
   434     0416                     	;# 
   435     0417                     	;# 
   436     041C                     	;# 
   437     041D                     	;# 
   438     041E                     	;# 
   439     0FE4                     	;# 
   440     0FE5                     	;# 
   441     0FE6                     	;# 
   442     0FE7                     	;# 
   443     0FE8                     	;# 
   444     0FE9                     	;# 
   445     0FEA                     	;# 
   446     0FEB                     	;# 
   447     0FED                     	;# 
   448     0FEE                     	;# 
   449     0FEF                     	;# 
   450     0000                     	;# 
   451     0001                     	;# 
   452     0002                     	;# 
   453     0003                     	;# 
   454     0004                     	;# 
   455     0005                     	;# 
   456     0006                     	;# 
   457     0007                     	;# 
   458     0008                     	;# 
   459     0009                     	;# 
   460     000A                     	;# 
   461     000B                     	;# 
   462     000C                     	;# 
   463     000D                     	;# 
   464     0011                     	;# 
   465     0012                     	;# 
   466     0013                     	;# 
   467     0014                     	;# 
   468     0015                     	;# 
   469     0016                     	;# 
   470     0016                     	;# 
   471     0017                     	;# 
   472     0018                     	;# 
   473     0019                     	;# 
   474     001A                     	;# 
   475     001B                     	;# 
   476     001C                     	;# 
   477     001E                     	;# 
   478     001F                     	;# 
   479     008C                     	;# 
   480     008D                     	;# 
   481     0091                     	;# 
   482     0092                     	;# 
   483     0093                     	;# 
   484     0094                     	;# 
   485     0095                     	;# 
   486     0096                     	;# 
   487     0097                     	;# 
   488     0098                     	;# 
   489     0099                     	;# 
   490     009A                     	;# 
   491     009B                     	;# 
   492     009B                     	;# 
   493     009C                     	;# 
   494     009D                     	;# 
   495     009E                     	;# 
   496     010C                     	;# 
   497     010D                     	;# 
   498     0111                     	;# 
   499     0112                     	;# 
   500     0113                     	;# 
   501     0114                     	;# 
   502     0115                     	;# 
   503     0116                     	;# 
   504     0117                     	;# 
   505     0118                     	;# 
   506     0119                     	;# 
   507     011A                     	;# 
   508     011B                     	;# 
   509     011D                     	;# 
   510     011E                     	;# 
   511     018C                     	;# 
   512     018D                     	;# 
   513     0191                     	;# 
   514     0191                     	;# 
   515     0192                     	;# 
   516     0193                     	;# 
   517     0193                     	;# 
   518     0193                     	;# 
   519     0194                     	;# 
   520     0195                     	;# 
   521     0196                     	;# 
   522     0199                     	;# 
   523     019A                     	;# 
   524     019B                     	;# 
   525     019B                     	;# 
   526     019B                     	;# 
   527     019B                     	;# 
   528     019C                     	;# 
   529     019C                     	;# 
   530     019D                     	;# 
   531     019E                     	;# 
   532     019F                     	;# 
   533     020C                     	;# 
   534     020D                     	;# 
   535     0211                     	;# 
   536     0211                     	;# 
   537     0212                     	;# 
   538     0212                     	;# 
   539     0213                     	;# 
   540     0213                     	;# 
   541     0214                     	;# 
   542     0214                     	;# 
   543     0215                     	;# 
   544     0215                     	;# 
   545     0215                     	;# 
   546     0216                     	;# 
   547     0216                     	;# 
   548     0217                     	;# 
   549     0217                     	;# 
   550     0219                     	;# 
   551     021A                     	;# 
   552     021B                     	;# 
   553     021C                     	;# 
   554     021D                     	;# 
   555     021E                     	;# 
   556     021F                     	;# 
   557     0291                     	;# 
   558     0291                     	;# 
   559     0292                     	;# 
   560     0293                     	;# 
   561     0294                     	;# 
   562     0295                     	;# 
   563     0295                     	;# 
   564     0296                     	;# 
   565     0298                     	;# 
   566     0298                     	;# 
   567     0299                     	;# 
   568     029A                     	;# 
   569     029B                     	;# 
   570     029C                     	;# 
   571     029C                     	;# 
   572     029D                     	;# 
   573     029E                     	;# 
   574     029E                     	;# 
   575     0311                     	;# 
   576     0311                     	;# 
   577     0312                     	;# 
   578     0313                     	;# 
   579     0318                     	;# 
   580     0318                     	;# 
   581     0319                     	;# 
   582     031A                     	;# 
   583     0394                     	;# 
   584     0395                     	;# 
   585     0396                     	;# 
   586     039A                     	;# 
   587     039C                     	;# 
   588     039D                     	;# 
   589     039E                     	;# 
   590     039F                     	;# 
   591     0415                     	;# 
   592     0416                     	;# 
   593     0417                     	;# 
   594     041C                     	;# 
   595     041D                     	;# 
   596     041E                     	;# 
   597     0FE4                     	;# 
   598     0FE5                     	;# 
   599     0FE6                     	;# 
   600     0FE7                     	;# 
   601     0FE8                     	;# 
   602     0FE9                     	;# 
   603     0FEA                     	;# 
   604     0FEB                     	;# 
   605     0FED                     	;# 
   606     0FEE                     	;# 
   607     0FEF                     	;# 
   608     0000                     	;# 
   609     0001                     	;# 
   610     0002                     	;# 
   611     0003                     	;# 
   612     0004                     	;# 
   613     0005                     	;# 
   614     0006                     	;# 
   615     0007                     	;# 
   616     0008                     	;# 
   617     0009                     	;# 
   618     000A                     	;# 
   619     000B                     	;# 
   620     000C                     	;# 
   621     000D                     	;# 
   622     0011                     	;# 
   623     0012                     	;# 
   624     0013                     	;# 
   625     0014                     	;# 
   626     0015                     	;# 
   627     0016                     	;# 
   628     0016                     	;# 
   629     0017                     	;# 
   630     0018                     	;# 
   631     0019                     	;# 
   632     001A                     	;# 
   633     001B                     	;# 
   634     001C                     	;# 
   635     001E                     	;# 
   636     001F                     	;# 
   637     008C                     	;# 
   638     008D                     	;# 
   639     0091                     	;# 
   640     0092                     	;# 
   641     0093                     	;# 
   642     0094                     	;# 
   643     0095                     	;# 
   644     0096                     	;# 
   645     0097                     	;# 
   646     0098                     	;# 
   647     0099                     	;# 
   648     009A                     	;# 
   649     009B                     	;# 
   650     009B                     	;# 
   651     009C                     	;# 
   652     009D                     	;# 
   653     009E                     	;# 
   654     010C                     	;# 
   655     010D                     	;# 
   656     0111                     	;# 
   657     0112                     	;# 
   658     0113                     	;# 
   659     0114                     	;# 
   660     0115                     	;# 
   661     0116                     	;# 
   662     0117                     	;# 
   663     0118                     	;# 
   664     0119                     	;# 
   665     011A                     	;# 
   666     011B                     	;# 
   667     011D                     	;# 
   668     011E                     	;# 
   669     018C                     	;# 
   670     018D                     	;# 
   671     0191                     	;# 
   672     0191                     	;# 
   673     0192                     	;# 
   674     0193                     	;# 
   675     0193                     	;# 
   676     0193                     	;# 
   677     0194                     	;# 
   678     0195                     	;# 
   679     0196                     	;# 
   680     0199                     	;# 
   681     019A                     	;# 
   682     019B                     	;# 
   683     019B                     	;# 
   684     019B                     	;# 
   685     019B                     	;# 
   686     019C                     	;# 
   687     019C                     	;# 
   688     019D                     	;# 
   689     019E                     	;# 
   690     019F                     	;# 
   691     020C                     	;# 
   692     020D                     	;# 
   693     0211                     	;# 
   694     0211                     	;# 
   695     0212                     	;# 
   696     0212                     	;# 
   697     0213                     	;# 
   698     0213                     	;# 
   699     0214                     	;# 
   700     0214                     	;# 
   701     0215                     	;# 
   702     0215                     	;# 
   703     0215                     	;# 
   704     0216                     	;# 
   705     0216                     	;# 
   706     0217                     	;# 
   707     0217                     	;# 
   708     0219                     	;# 
   709     021A                     	;# 
   710     021B                     	;# 
   711     021C                     	;# 
   712     021D                     	;# 
   713     021E                     	;# 
   714     021F                     	;# 
   715     0291                     	;# 
   716     0291                     	;# 
   717     0292                     	;# 
   718     0293                     	;# 
   719     0294                     	;# 
   720     0295                     	;# 
   721     0295                     	;# 
   722     0296                     	;# 
   723     0298                     	;# 
   724     0298                     	;# 
   725     0299                     	;# 
   726     029A                     	;# 
   727     029B                     	;# 
   728     029C                     	;# 
   729     029C                     	;# 
   730     029D                     	;# 
   731     029E                     	;# 
   732     029E                     	;# 
   733     0311                     	;# 
   734     0311                     	;# 
   735     0312                     	;# 
   736     0313                     	;# 
   737     0318                     	;# 
   738     0318                     	;# 
   739     0319                     	;# 
   740     031A                     	;# 
   741     0394                     	;# 
   742     0395                     	;# 
   743     0396                     	;# 
   744     039A                     	;# 
   745     039C                     	;# 
   746     039D                     	;# 
   747     039E                     	;# 
   748     039F                     	;# 
   749     0415                     	;# 
   750     0416                     	;# 
   751     0417                     	;# 
   752     041C                     	;# 
   753     041D                     	;# 
   754     041E                     	;# 
   755     0FE4                     	;# 
   756     0FE5                     	;# 
   757     0FE6                     	;# 
   758     0FE7                     	;# 
   759     0FE8                     	;# 
   760     0FE9                     	;# 
   761     0FEA                     	;# 
   762     0FEB                     	;# 
   763     0FED                     	;# 
   764     0FEE                     	;# 
   765     0FEF                     	;# 
   766     0000                     	;# 
   767     0001                     	;# 
   768     0002                     	;# 
   769     0003                     	;# 
   770     0004                     	;# 
   771     0005                     	;# 
   772     0006                     	;# 
   773     0007                     	;# 
   774     0008                     	;# 
   775     0009                     	;# 
   776     000A                     	;# 
   777     000B                     	;# 
   778     000C                     	;# 
   779     000D                     	;# 
   780     0011                     	;# 
   781     0012                     	;# 
   782     0013                     	;# 
   783     0014                     	;# 
   784     0015                     	;# 
   785     0016                     	;# 
   786     0016                     	;# 
   787     0017                     	;# 
   788     0018                     	;# 
   789     0019                     	;# 
   790     001A                     	;# 
   791     001B                     	;# 
   792     001C                     	;# 
   793     001E                     	;# 
   794     001F                     	;# 
   795     008C                     	;# 
   796     008D                     	;# 
   797     0091                     	;# 
   798     0092                     	;# 
   799     0093                     	;# 
   800     0094                     	;# 
   801     0095                     	;# 
   802     0096                     	;# 
   803     0097                     	;# 
   804     0098                     	;# 
   805     0099                     	;# 
   806     009A                     	;# 
   807     009B                     	;# 
   808     009B                     	;# 
   809     009C                     	;# 
   810     009D                     	;# 
   811     009E                     	;# 
   812     010C                     	;# 
   813     010D                     	;# 
   814     0111                     	;# 
   815     0112                     	;# 
   816     0113                     	;# 
   817     0114                     	;# 
   818     0115                     	;# 
   819     0116                     	;# 
   820     0117                     	;# 
   821     0118                     	;# 
   822     0119                     	;# 
   823     011A                     	;# 
   824     011B                     	;# 
   825     011D                     	;# 
   826     011E                     	;# 
   827     018C                     	;# 
   828     018D                     	;# 
   829     0191                     	;# 
   830     0191                     	;# 
   831     0192                     	;# 
   832     0193                     	;# 
   833     0193                     	;# 
   834     0193                     	;# 
   835     0194                     	;# 
   836     0195                     	;# 
   837     0196                     	;# 
   838     0199                     	;# 
   839     019A                     	;# 
   840     019B                     	;# 
   841     019B                     	;# 
   842     019B                     	;# 
   843     019B                     	;# 
   844     019C                     	;# 
   845     019C                     	;# 
   846     019D                     	;# 
   847     019E                     	;# 
   848     019F                     	;# 
   849     020C                     	;# 
   850     020D                     	;# 
   851     0211                     	;# 
   852     0211                     	;# 
   853     0212                     	;# 
   854     0212                     	;# 
   855     0213                     	;# 
   856     0213                     	;# 
   857     0214                     	;# 
   858     0214                     	;# 
   859     0215                     	;# 
   860     0215                     	;# 
   861     0215                     	;# 
   862     0216                     	;# 
   863     0216                     	;# 
   864     0217                     	;# 
   865     0217                     	;# 
   866     0219                     	;# 
   867     021A                     	;# 
   868     021B                     	;# 
   869     021C                     	;# 
   870     021D                     	;# 
   871     021E                     	;# 
   872     021F                     	;# 
   873     0291                     	;# 
   874     0291                     	;# 
   875     0292                     	;# 
   876     0293                     	;# 
   877     0294                     	;# 
   878     0295                     	;# 
   879     0295                     	;# 
   880     0296                     	;# 
   881     0298                     	;# 
   882     0298                     	;# 
   883     0299                     	;# 
   884     029A                     	;# 
   885     029B                     	;# 
   886     029C                     	;# 
   887     029C                     	;# 
   888     029D                     	;# 
   889     029E                     	;# 
   890     029E                     	;# 
   891     0311                     	;# 
   892     0311                     	;# 
   893     0312                     	;# 
   894     0313                     	;# 
   895     0318                     	;# 
   896     0318                     	;# 
   897     0319                     	;# 
   898     031A                     	;# 
   899     0394                     	;# 
   900     0395                     	;# 
   901     0396                     	;# 
   902     039A                     	;# 
   903     039C                     	;# 
   904     039D                     	;# 
   905     039E                     	;# 
   906     039F                     	;# 
   907     0415                     	;# 
   908     0416                     	;# 
   909     0417                     	;# 
   910     041C                     	;# 
   911     041D                     	;# 
   912     041E                     	;# 
   913     0FE4                     	;# 
   914     0FE5                     	;# 
   915     0FE6                     	;# 
   916     0FE7                     	;# 
   917     0FE8                     	;# 
   918     0FE9                     	;# 
   919     0FEA                     	;# 
   920     0FEB                     	;# 
   921     0FED                     	;# 
   922     0FEE                     	;# 
   923     0FEF                     	;# 
   924     0000                     	;# 
   925     0001                     	;# 
   926     0002                     	;# 
   927     0003                     	;# 
   928     0004                     	;# 
   929     0005                     	;# 
   930     0006                     	;# 
   931     0007                     	;# 
   932     0008                     	;# 
   933     0009                     	;# 
   934     000A                     	;# 
   935     000B                     	;# 
   936     000C                     	;# 
   937     000D                     	;# 
   938     0011                     	;# 
   939     0012                     	;# 
   940     0013                     	;# 
   941     0014                     	;# 
   942     0015                     	;# 
   943     0016                     	;# 
   944     0016                     	;# 
   945     0017                     	;# 
   946     0018                     	;# 
   947     0019                     	;# 
   948     001A                     	;# 
   949     001B                     	;# 
   950     001C                     	;# 
   951     001E                     	;# 
   952     001F                     	;# 
   953     008C                     	;# 
   954     008D                     	;# 
   955     0091                     	;# 
   956     0092                     	;# 
   957     0093                     	;# 
   958     0094                     	;# 
   959     0095                     	;# 
   960     0096                     	;# 
   961     0097                     	;# 
   962     0098                     	;# 
   963     0099                     	;# 
   964     009A                     	;# 
   965     009B                     	;# 
   966     009B                     	;# 
   967     009C                     	;# 
   968     009D                     	;# 
   969     009E                     	;# 
   970     010C                     	;# 
   971     010D                     	;# 
   972     0111                     	;# 
   973     0112                     	;# 
   974     0113                     	;# 
   975     0114                     	;# 
   976     0115                     	;# 
   977     0116                     	;# 
   978     0117                     	;# 
   979     0118                     	;# 
   980     0119                     	;# 
   981     011A                     	;# 
   982     011B                     	;# 
   983     011D                     	;# 
   984     011E                     	;# 
   985     018C                     	;# 
   986     018D                     	;# 
   987     0191                     	;# 
   988     0191                     	;# 
   989     0192                     	;# 
   990     0193                     	;# 
   991     0193                     	;# 
   992     0193                     	;# 
   993     0194                     	;# 
   994     0195                     	;# 
   995     0196                     	;# 
   996     0199                     	;# 
   997     019A                     	;# 
   998     019B                     	;# 
   999     019B                     	;# 
  1000     019B                     	;# 
  1001     019B                     	;# 
  1002     019C                     	;# 
  1003     019C                     	;# 
  1004     019D                     	;# 
  1005     019E                     	;# 
  1006     019F                     	;# 
  1007     020C                     	;# 
  1008     020D                     	;# 
  1009     0211                     	;# 
  1010     0211                     	;# 
  1011     0212                     	;# 
  1012     0212                     	;# 
  1013     0213                     	;# 
  1014     0213                     	;# 
  1015     0214                     	;# 
  1016     0214                     	;# 
  1017     0215                     	;# 
  1018     0215                     	;# 
  1019     0215                     	;# 
  1020     0216                     	;# 
  1021     0216                     	;# 
  1022     0217                     	;# 
  1023     0217                     	;# 
  1024     0219                     	;# 
  1025     021A                     	;# 
  1026     021B                     	;# 
  1027     021C                     	;# 
  1028     021D                     	;# 
  1029     021E                     	;# 
  1030     021F                     	;# 
  1031     0291                     	;# 
  1032     0291                     	;# 
  1033     0292                     	;# 
  1034     0293                     	;# 
  1035     0294                     	;# 
  1036     0295                     	;# 
  1037     0295                     	;# 
  1038     0296                     	;# 
  1039     0298                     	;# 
  1040     0298                     	;# 
  1041     0299                     	;# 
  1042     029A                     	;# 
  1043     029B                     	;# 
  1044     029C                     	;# 
  1045     029C                     	;# 
  1046     029D                     	;# 
  1047     029E                     	;# 
  1048     029E                     	;# 
  1049     0311                     	;# 
  1050     0311                     	;# 
  1051     0312                     	;# 
  1052     0313                     	;# 
  1053     0318                     	;# 
  1054     0318                     	;# 
  1055     0319                     	;# 
  1056     031A                     	;# 
  1057     0394                     	;# 
  1058     0395                     	;# 
  1059     0396                     	;# 
  1060     039A                     	;# 
  1061     039C                     	;# 
  1062     039D                     	;# 
  1063     039E                     	;# 
  1064     039F                     	;# 
  1065     0415                     	;# 
  1066     0416                     	;# 
  1067     0417                     	;# 
  1068     041C                     	;# 
  1069     041D                     	;# 
  1070     041E                     	;# 
  1071     0FE4                     	;# 
  1072     0FE5                     	;# 
  1073     0FE6                     	;# 
  1074     0FE7                     	;# 
  1075     0FE8                     	;# 
  1076     0FE9                     	;# 
  1077     0FEA                     	;# 
  1078     0FEB                     	;# 
  1079     0FED                     	;# 
  1080     0FEE                     	;# 
  1081     0FEF                     	;# 
  1082     0000                     	;# 
  1083     0001                     	;# 
  1084     0002                     	;# 
  1085     0003                     	;# 
  1086     0004                     	;# 
  1087     0005                     	;# 
  1088     0006                     	;# 
  1089     0007                     	;# 
  1090     0008                     	;# 
  1091     0009                     	;# 
  1092     000A                     	;# 
  1093     000B                     	;# 
  1094     000C                     	;# 
  1095     000D                     	;# 
  1096     0011                     	;# 
  1097     0012                     	;# 
  1098     0013                     	;# 
  1099     0014                     	;# 
  1100     0015                     	;# 
  1101     0016                     	;# 
  1102     0016                     	;# 
  1103     0017                     	;# 
  1104     0018                     	;# 
  1105     0019                     	;# 
  1106     001A                     	;# 
  1107     001B                     	;# 
  1108     001C                     	;# 
  1109     001E                     	;# 
  1110     001F                     	;# 
  1111     008C                     	;# 
  1112     008D                     	;# 
  1113     0091                     	;# 
  1114     0092                     	;# 
  1115     0093                     	;# 
  1116     0094                     	;# 
  1117     0095                     	;# 
  1118     0096                     	;# 
  1119     0097                     	;# 
  1120     0098                     	;# 
  1121     0099                     	;# 
  1122     009A                     	;# 
  1123     009B                     	;# 
  1124     009B                     	;# 
  1125     009C                     	;# 
  1126     009D                     	;# 
  1127     009E                     	;# 
  1128     010C                     	;# 
  1129     010D                     	;# 
  1130     0111                     	;# 
  1131     0112                     	;# 
  1132     0113                     	;# 
  1133     0114                     	;# 
  1134     0115                     	;# 
  1135     0116                     	;# 
  1136     0117                     	;# 
  1137     0118                     	;# 
  1138     0119                     	;# 
  1139     011A                     	;# 
  1140     011B                     	;# 
  1141     011D                     	;# 
  1142     011E                     	;# 
  1143     018C                     	;# 
  1144     018D                     	;# 
  1145     0191                     	;# 
  1146     0191                     	;# 
  1147     0192                     	;# 
  1148     0193                     	;# 
  1149     0193                     	;# 
  1150     0193                     	;# 
  1151     0194                     	;# 
  1152     0195                     	;# 
  1153     0196                     	;# 
  1154     0199                     	;# 
  1155     019A                     	;# 
  1156     019B                     	;# 
  1157     019B                     	;# 
  1158     019B                     	;# 
  1159     019B                     	;# 
  1160     019C                     	;# 
  1161     019C                     	;# 
  1162     019D                     	;# 
  1163     019E                     	;# 
  1164     019F                     	;# 
  1165     020C                     	;# 
  1166     020D                     	;# 
  1167     0211                     	;# 
  1168     0211                     	;# 
  1169     0212                     	;# 
  1170     0212                     	;# 
  1171     0213                     	;# 
  1172     0213                     	;# 
  1173     0214                     	;# 
  1174     0214                     	;# 
  1175     0215                     	;# 
  1176     0215                     	;# 
  1177     0215                     	;# 
  1178     0216                     	;# 
  1179     0216                     	;# 
  1180     0217                     	;# 
  1181     0217                     	;# 
  1182     0219                     	;# 
  1183     021A                     	;# 
  1184     021B                     	;# 
  1185     021C                     	;# 
  1186     021D                     	;# 
  1187     021E                     	;# 
  1188     021F                     	;# 
  1189     0291                     	;# 
  1190     0291                     	;# 
  1191     0292                     	;# 
  1192     0293                     	;# 
  1193     0294                     	;# 
  1194     0295                     	;# 
  1195     0295                     	;# 
  1196     0296                     	;# 
  1197     0298                     	;# 
  1198     0298                     	;# 
  1199     0299                     	;# 
  1200     029A                     	;# 
  1201     029B                     	;# 
  1202     029C                     	;# 
  1203     029C                     	;# 
  1204     029D                     	;# 
  1205     029E                     	;# 
  1206     029E                     	;# 
  1207     0311                     	;# 
  1208     0311                     	;# 
  1209     0312                     	;# 
  1210     0313                     	;# 
  1211     0318                     	;# 
  1212     0318                     	;# 
  1213     0319                     	;# 
  1214     031A                     	;# 
  1215     0394                     	;# 
  1216     0395                     	;# 
  1217     0396                     	;# 
  1218     039A                     	;# 
  1219     039C                     	;# 
  1220     039D                     	;# 
  1221     039E                     	;# 
  1222     039F                     	;# 
  1223     0415                     	;# 
  1224     0416                     	;# 
  1225     0417                     	;# 
  1226     041C                     	;# 
  1227     041D                     	;# 
  1228     041E                     	;# 
  1229     0FE4                     	;# 
  1230     0FE5                     	;# 
  1231     0FE6                     	;# 
  1232     0FE7                     	;# 
  1233     0FE8                     	;# 
  1234     0FE9                     	;# 
  1235     0FEA                     	;# 
  1236     0FEB                     	;# 
  1237     0FED                     	;# 
  1238     0FEE                     	;# 
  1239     0FEF                     	;# 
  1240     0000                     	;# 
  1241     0001                     	;# 
  1242     0002                     	;# 
  1243     0003                     	;# 
  1244     0004                     	;# 
  1245     0005                     	;# 
  1246     0006                     	;# 
  1247     0007                     	;# 
  1248     0008                     	;# 
  1249     0009                     	;# 
  1250     000A                     	;# 
  1251     000B                     	;# 
  1252     000C                     	;# 
  1253     000D                     	;# 
  1254     0011                     	;# 
  1255     0012                     	;# 
  1256     0013                     	;# 
  1257     0014                     	;# 
  1258     0015                     	;# 
  1259     0016                     	;# 
  1260     0016                     	;# 
  1261     0017                     	;# 
  1262     0018                     	;# 
  1263     0019                     	;# 
  1264     001A                     	;# 
  1265     001B                     	;# 
  1266     001C                     	;# 
  1267     001E                     	;# 
  1268     001F                     	;# 
  1269     008C                     	;# 
  1270     008D                     	;# 
  1271     0091                     	;# 
  1272     0092                     	;# 
  1273     0093                     	;# 
  1274     0094                     	;# 
  1275     0095                     	;# 
  1276     0096                     	;# 
  1277     0097                     	;# 
  1278     0098                     	;# 
  1279     0099                     	;# 
  1280     009A                     	;# 
  1281     009B                     	;# 
  1282     009B                     	;# 
  1283     009C                     	;# 
  1284     009D                     	;# 
  1285     009E                     	;# 
  1286     010C                     	;# 
  1287     010D                     	;# 
  1288     0111                     	;# 
  1289     0112                     	;# 
  1290     0113                     	;# 
  1291     0114                     	;# 
  1292     0115                     	;# 
  1293     0116                     	;# 
  1294     0117                     	;# 
  1295     0118                     	;# 
  1296     0119                     	;# 
  1297     011A                     	;# 
  1298     011B                     	;# 
  1299     011D                     	;# 
  1300     011E                     	;# 
  1301     018C                     	;# 
  1302     018D                     	;# 
  1303     0191                     	;# 
  1304     0191                     	;# 
  1305     0192                     	;# 
  1306     0193                     	;# 
  1307     0193                     	;# 
  1308     0193                     	;# 
  1309     0194                     	;# 
  1310     0195                     	;# 
  1311     0196                     	;# 
  1312     0199                     	;# 
  1313     019A                     	;# 
  1314     019B                     	;# 
  1315     019B                     	;# 
  1316     019B                     	;# 
  1317     019B                     	;# 
  1318     019C                     	;# 
  1319     019C                     	;# 
  1320     019D                     	;# 
  1321     019E                     	;# 
  1322     019F                     	;# 
  1323     020C                     	;# 
  1324     020D                     	;# 
  1325     0211                     	;# 
  1326     0211                     	;# 
  1327     0212                     	;# 
  1328     0212                     	;# 
  1329     0213                     	;# 
  1330     0213                     	;# 
  1331     0214                     	;# 
  1332     0214                     	;# 
  1333     0215                     	;# 
  1334     0215                     	;# 
  1335     0215                     	;# 
  1336     0216                     	;# 
  1337     0216                     	;# 
  1338     0217                     	;# 
  1339     0217                     	;# 
  1340     0219                     	;# 
  1341     021A                     	;# 
  1342     021B                     	;# 
  1343     021C                     	;# 
  1344     021D                     	;# 
  1345     021E                     	;# 
  1346     021F                     	;# 
  1347     0291                     	;# 
  1348     0291                     	;# 
  1349     0292                     	;# 
  1350     0293                     	;# 
  1351     0294                     	;# 
  1352     0295                     	;# 
  1353     0295                     	;# 
  1354     0296                     	;# 
  1355     0298                     	;# 
  1356     0298                     	;# 
  1357     0299                     	;# 
  1358     029A                     	;# 
  1359     029B                     	;# 
  1360     029C                     	;# 
  1361     029C                     	;# 
  1362     029D                     	;# 
  1363     029E                     	;# 
  1364     029E                     	;# 
  1365     0311                     	;# 
  1366     0311                     	;# 
  1367     0312                     	;# 
  1368     0313                     	;# 
  1369     0318                     	;# 
  1370     0318                     	;# 
  1371     0319                     	;# 
  1372     031A                     	;# 
  1373     0394                     	;# 
  1374     0395                     	;# 
  1375     0396                     	;# 
  1376     039A                     	;# 
  1377     039C                     	;# 
  1378     039D                     	;# 
  1379     039E                     	;# 
  1380     039F                     	;# 
  1381     0415                     	;# 
  1382     0416                     	;# 
  1383     0417                     	;# 
  1384     041C                     	;# 
  1385     041D                     	;# 
  1386     041E                     	;# 
  1387     0FE4                     	;# 
  1388     0FE5                     	;# 
  1389     0FE6                     	;# 
  1390     0FE7                     	;# 
  1391     0FE8                     	;# 
  1392     0FE9                     	;# 
  1393     0FEA                     	;# 
  1394     0FEB                     	;# 
  1395     0FED                     	;# 
  1396     0FEE                     	;# 
  1397     0FEF                     	;# 
  1398     0000                     	;# 
  1399     0001                     	;# 
  1400     0002                     	;# 
  1401     0003                     	;# 
  1402     0004                     	;# 
  1403     0005                     	;# 
  1404     0006                     	;# 
  1405     0007                     	;# 
  1406     0008                     	;# 
  1407     0009                     	;# 
  1408     000A                     	;# 
  1409     000B                     	;# 
  1410     000C                     	;# 
  1411     000D                     	;# 
  1412     0011                     	;# 
  1413     0012                     	;# 
  1414     0013                     	;# 
  1415     0014                     	;# 
  1416     0015                     	;# 
  1417     0016                     	;# 
  1418     0016                     	;# 
  1419     0017                     	;# 
  1420     0018                     	;# 
  1421     0019                     	;# 
  1422     001A                     	;# 
  1423     001B                     	;# 
  1424     001C                     	;# 
  1425     001E                     	;# 
  1426     001F                     	;# 
  1427     008C                     	;# 
  1428     008D                     	;# 
  1429     0091                     	;# 
  1430     0092                     	;# 
  1431     0093                     	;# 
  1432     0094                     	;# 
  1433     0095                     	;# 
  1434     0096                     	;# 
  1435     0097                     	;# 
  1436     0098                     	;# 
  1437     0099                     	;# 
  1438     009A                     	;# 
  1439     009B                     	;# 
  1440     009B                     	;# 
  1441     009C                     	;# 
  1442     009D                     	;# 
  1443     009E                     	;# 
  1444     010C                     	;# 
  1445     010D                     	;# 
  1446     0111                     	;# 
  1447     0112                     	;# 
  1448     0113                     	;# 
  1449     0114                     	;# 
  1450     0115                     	;# 
  1451     0116                     	;# 
  1452     0117                     	;# 
  1453     0118                     	;# 
  1454     0119                     	;# 
  1455     011A                     	;# 
  1456     011B                     	;# 
  1457     011D                     	;# 
  1458     011E                     	;# 
  1459     018C                     	;# 
  1460     018D                     	;# 
  1461     0191                     	;# 
  1462     0191                     	;# 
  1463     0192                     	;# 
  1464     0193                     	;# 
  1465     0193                     	;# 
  1466     0193                     	;# 
  1467     0194                     	;# 
  1468     0195                     	;# 
  1469     0196                     	;# 
  1470     0199                     	;# 
  1471     019A                     	;# 
  1472     019B                     	;# 
  1473     019B                     	;# 
  1474     019B                     	;# 
  1475     019B                     	;# 
  1476     019C                     	;# 
  1477     019C                     	;# 
  1478     019D                     	;# 
  1479     019E                     	;# 
  1480     019F                     	;# 
  1481     020C                     	;# 
  1482     020D                     	;# 
  1483     0211                     	;# 
  1484     0211                     	;# 
  1485     0212                     	;# 
  1486     0212                     	;# 
  1487     0213                     	;# 
  1488     0213                     	;# 
  1489     0214                     	;# 
  1490     0214                     	;# 
  1491     0215                     	;# 
  1492     0215                     	;# 
  1493     0215                     	;# 
  1494     0216                     	;# 
  1495     0216                     	;# 
  1496     0217                     	;# 
  1497     0217                     	;# 
  1498     0219                     	;# 
  1499     021A                     	;# 
  1500     021B                     	;# 
  1501     021C                     	;# 
  1502     021D                     	;# 
  1503     021E                     	;# 
  1504     021F                     	;# 
  1505     0291                     	;# 
  1506     0291                     	;# 
  1507     0292                     	;# 
  1508     0293                     	;# 
  1509     0294                     	;# 
  1510     0295                     	;# 
  1511     0295                     	;# 
  1512     0296                     	;# 
  1513     0298                     	;# 
  1514     0298                     	;# 
  1515     0299                     	;# 
  1516     029A                     	;# 
  1517     029B                     	;# 
  1518     029C                     	;# 
  1519     029C                     	;# 
  1520     029D                     	;# 
  1521     029E                     	;# 
  1522     029E                     	;# 
  1523     0311                     	;# 
  1524     0311                     	;# 
  1525     0312                     	;# 
  1526     0313                     	;# 
  1527     0318                     	;# 
  1528     0318                     	;# 
  1529     0319                     	;# 
  1530     031A                     	;# 
  1531     0394                     	;# 
  1532     0395                     	;# 
  1533     0396                     	;# 
  1534     039A                     	;# 
  1535     039C                     	;# 
  1536     039D                     	;# 
  1537     039E                     	;# 
  1538     039F                     	;# 
  1539     0415                     	;# 
  1540     0416                     	;# 
  1541     0417                     	;# 
  1542     041C                     	;# 
  1543     041D                     	;# 
  1544     041E                     	;# 
  1545     0FE4                     	;# 
  1546     0FE5                     	;# 
  1547     0FE6                     	;# 
  1548     0FE7                     	;# 
  1549     0FE8                     	;# 
  1550     0FE9                     	;# 
  1551     0FEA                     	;# 
  1552     0FEB                     	;# 
  1553     0FED                     	;# 
  1554     0FEE                     	;# 
  1555     0FEF                     	;# 
  1556     0000                     	;# 
  1557     0001                     	;# 
  1558     0002                     	;# 
  1559     0003                     	;# 
  1560     0004                     	;# 
  1561     0005                     	;# 
  1562     0006                     	;# 
  1563     0007                     	;# 
  1564     0008                     	;# 
  1565     0009                     	;# 
  1566     000A                     	;# 
  1567     000B                     	;# 
  1568     000C                     	;# 
  1569     000D                     	;# 
  1570     0011                     	;# 
  1571     0012                     	;# 
  1572     0013                     	;# 
  1573     0014                     	;# 
  1574     0015                     	;# 
  1575     0016                     	;# 
  1576     0016                     	;# 
  1577     0017                     	;# 
  1578     0018                     	;# 
  1579     0019                     	;# 
  1580     001A                     	;# 
  1581     001B                     	;# 
  1582     001C                     	;# 
  1583     001E                     	;# 
  1584     001F                     	;# 
  1585     008C                     	;# 
  1586     008D                     	;# 
  1587     0091                     	;# 
  1588     0092                     	;# 
  1589     0093                     	;# 
  1590     0094                     	;# 
  1591     0095                     	;# 
  1592     0096                     	;# 
  1593     0097                     	;# 
  1594     0098                     	;# 
  1595     0099                     	;# 
  1596     009A                     	;# 
  1597     009B                     	;# 
  1598     009B                     	;# 
  1599     009C                     	;# 
  1600     009D                     	;# 
  1601     009E                     	;# 
  1602     010C                     	;# 
  1603     010D                     	;# 
  1604     0111                     	;# 
  1605     0112                     	;# 
  1606     0113                     	;# 
  1607     0114                     	;# 
  1608     0115                     	;# 
  1609     0116                     	;# 
  1610     0117                     	;# 
  1611     0118                     	;# 
  1612     0119                     	;# 
  1613     011A                     	;# 
  1614     011B                     	;# 
  1615     011D                     	;# 
  1616     011E                     	;# 
  1617     018C                     	;# 
  1618     018D                     	;# 
  1619     0191                     	;# 
  1620     0191                     	;# 
  1621     0192                     	;# 
  1622     0193                     	;# 
  1623     0193                     	;# 
  1624     0193                     	;# 
  1625     0194                     	;# 
  1626     0195                     	;# 
  1627     0196                     	;# 
  1628     0199                     	;# 
  1629     019A                     	;# 
  1630     019B                     	;# 
  1631     019B                     	;# 
  1632     019B                     	;# 
  1633     019B                     	;# 
  1634     019C                     	;# 
  1635     019C                     	;# 
  1636     019D                     	;# 
  1637     019E                     	;# 
  1638     019F                     	;# 
  1639     020C                     	;# 
  1640     020D                     	;# 
  1641     0211                     	;# 
  1642     0211                     	;# 
  1643     0212                     	;# 
  1644     0212                     	;# 
  1645     0213                     	;# 
  1646     0213                     	;# 
  1647     0214                     	;# 
  1648     0214                     	;# 
  1649     0215                     	;# 
  1650     0215                     	;# 
  1651     0215                     	;# 
  1652     0216                     	;# 
  1653     0216                     	;# 
  1654     0217                     	;# 
  1655     0217                     	;# 
  1656     0219                     	;# 
  1657     021A                     	;# 
  1658     021B                     	;# 
  1659     021C                     	;# 
  1660     021D                     	;# 
  1661     021E                     	;# 
  1662     021F                     	;# 
  1663     0291                     	;# 
  1664     0291                     	;# 
  1665     0292                     	;# 
  1666     0293                     	;# 
  1667     0294                     	;# 
  1668     0295                     	;# 
  1669     0295                     	;# 
  1670     0296                     	;# 
  1671     0298                     	;# 
  1672     0298                     	;# 
  1673     0299                     	;# 
  1674     029A                     	;# 
  1675     029B                     	;# 
  1676     029C                     	;# 
  1677     029C                     	;# 
  1678     029D                     	;# 
  1679     029E                     	;# 
  1680     029E                     	;# 
  1681     0311                     	;# 
  1682     0311                     	;# 
  1683     0312                     	;# 
  1684     0313                     	;# 
  1685     0318                     	;# 
  1686     0318                     	;# 
  1687     0319                     	;# 
  1688     031A                     	;# 
  1689     0394                     	;# 
  1690     0395                     	;# 
  1691     0396                     	;# 
  1692     039A                     	;# 
  1693     039C                     	;# 
  1694     039D                     	;# 
  1695     039E                     	;# 
  1696     039F                     	;# 
  1697     0415                     	;# 
  1698     0416                     	;# 
  1699     0417                     	;# 
  1700     041C                     	;# 
  1701     041D                     	;# 
  1702     041E                     	;# 
  1703     0FE4                     	;# 
  1704     0FE5                     	;# 
  1705     0FE6                     	;# 
  1706     0FE7                     	;# 
  1707     0FE8                     	;# 
  1708     0FE9                     	;# 
  1709     0FEA                     	;# 
  1710     0FEB                     	;# 
  1711     0FED                     	;# 
  1712     0FEE                     	;# 
  1713     0FEF                     	;# 
  1714     0000                     	;# 
  1715     0001                     	;# 
  1716     0002                     	;# 
  1717     0003                     	;# 
  1718     0004                     	;# 
  1719     0005                     	;# 
  1720     0006                     	;# 
  1721     0007                     	;# 
  1722     0008                     	;# 
  1723     0009                     	;# 
  1724     000A                     	;# 
  1725     000B                     	;# 
  1726     000C                     	;# 
  1727     000D                     	;# 
  1728     0011                     	;# 
  1729     0012                     	;# 
  1730     0013                     	;# 
  1731     0014                     	;# 
  1732     0015                     	;# 
  1733     0016                     	;# 
  1734     0016                     	;# 
  1735     0017                     	;# 
  1736     0018                     	;# 
  1737     0019                     	;# 
  1738     001A                     	;# 
  1739     001B                     	;# 
  1740     001C                     	;# 
  1741     001E                     	;# 
  1742     001F                     	;# 
  1743     008C                     	;# 
  1744     008D                     	;# 
  1745     0091                     	;# 
  1746     0092                     	;# 
  1747     0093                     	;# 
  1748     0094                     	;# 
  1749     0095                     	;# 
  1750     0096                     	;# 
  1751     0097                     	;# 
  1752     0098                     	;# 
  1753     0099                     	;# 
  1754     009A                     	;# 
  1755     009B                     	;# 
  1756     009B                     	;# 
  1757     009C                     	;# 
  1758     009D                     	;# 
  1759     009E                     	;# 
  1760     010C                     	;# 
  1761     010D                     	;# 
  1762     0111                     	;# 
  1763     0112                     	;# 
  1764     0113                     	;# 
  1765     0114                     	;# 
  1766     0115                     	;# 
  1767     0116                     	;# 
  1768     0117                     	;# 
  1769     0118                     	;# 
  1770     0119                     	;# 
  1771     011A                     	;# 
  1772     011B                     	;# 
  1773     011D                     	;# 
  1774     011E                     	;# 
  1775     018C                     	;# 
  1776     018D                     	;# 
  1777     0191                     	;# 
  1778     0191                     	;# 
  1779     0192                     	;# 
  1780     0193                     	;# 
  1781     0193                     	;# 
  1782     0193                     	;# 
  1783     0194                     	;# 
  1784     0195                     	;# 
  1785     0196                     	;# 
  1786     0199                     	;# 
  1787     019A                     	;# 
  1788     019B                     	;# 
  1789     019B                     	;# 
  1790     019B                     	;# 
  1791     019B                     	;# 
  1792     019C                     	;# 
  1793     019C                     	;# 
  1794     019D                     	;# 
  1795     019E                     	;# 
  1796     019F                     	;# 
  1797     020C                     	;# 
  1798     020D                     	;# 
  1799     0211                     	;# 
  1800     0211                     	;# 
  1801     0212                     	;# 
  1802     0212                     	;# 
  1803     0213                     	;# 
  1804     0213                     	;# 
  1805     0214                     	;# 
  1806     0214                     	;# 
  1807     0215                     	;# 
  1808     0215                     	;# 
  1809     0215                     	;# 
  1810     0216                     	;# 
  1811     0216                     	;# 
  1812     0217                     	;# 
  1813     0217                     	;# 
  1814     0219                     	;# 
  1815     021A                     	;# 
  1816     021B                     	;# 
  1817     021C                     	;# 
  1818     021D                     	;# 
  1819     021E                     	;# 
  1820     021F                     	;# 
  1821     0291                     	;# 
  1822     0291                     	;# 
  1823     0292                     	;# 
  1824     0293                     	;# 
  1825     0294                     	;# 
  1826     0295                     	;# 
  1827     0295                     	;# 
  1828     0296                     	;# 
  1829     0298                     	;# 
  1830     0298                     	;# 
  1831     0299                     	;# 
  1832     029A                     	;# 
  1833     029B                     	;# 
  1834     029C                     	;# 
  1835     029C                     	;# 
  1836     029D                     	;# 
  1837     029E                     	;# 
  1838     029E                     	;# 
  1839     0311                     	;# 
  1840     0311                     	;# 
  1841     0312                     	;# 
  1842     0313                     	;# 
  1843     0318                     	;# 
  1844     0318                     	;# 
  1845     0319                     	;# 
  1846     031A                     	;# 
  1847     0394                     	;# 
  1848     0395                     	;# 
  1849     0396                     	;# 
  1850     039A                     	;# 
  1851     039C                     	;# 
  1852     039D                     	;# 
  1853     039E                     	;# 
  1854     039F                     	;# 
  1855     0415                     	;# 
  1856     0416                     	;# 
  1857     0417                     	;# 
  1858     041C                     	;# 
  1859     041D                     	;# 
  1860     041E                     	;# 
  1861     0FE4                     	;# 
  1862     0FE5                     	;# 
  1863     0FE6                     	;# 
  1864     0FE7                     	;# 
  1865     0FE8                     	;# 
  1866     0FE9                     	;# 
  1867     0FEA                     	;# 
  1868     0FEB                     	;# 
  1869     0FED                     	;# 
  1870     0FEE                     	;# 
  1871     0FEF                     	;# 
  1872     0000                     	;# 
  1873     0001                     	;# 
  1874     0002                     	;# 
  1875     0003                     	;# 
  1876     0004                     	;# 
  1877     0005                     	;# 
  1878     0006                     	;# 
  1879     0007                     	;# 
  1880     0008                     	;# 
  1881     0009                     	;# 
  1882     000A                     	;# 
  1883     000B                     	;# 
  1884     000C                     	;# 
  1885     000D                     	;# 
  1886     0011                     	;# 
  1887     0012                     	;# 
  1888     0013                     	;# 
  1889     0014                     	;# 
  1890     0015                     	;# 
  1891     0016                     	;# 
  1892     0016                     	;# 
  1893     0017                     	;# 
  1894     0018                     	;# 
  1895     0019                     	;# 
  1896     001A                     	;# 
  1897     001B                     	;# 
  1898     001C                     	;# 
  1899     001E                     	;# 
  1900     001F                     	;# 
  1901     008C                     	;# 
  1902     008D                     	;# 
  1903     0091                     	;# 
  1904     0092                     	;# 
  1905     0093                     	;# 
  1906     0094                     	;# 
  1907     0095                     	;# 
  1908     0096                     	;# 
  1909     0097                     	;# 
  1910     0098                     	;# 
  1911     0099                     	;# 
  1912     009A                     	;# 
  1913     009B                     	;# 
  1914     009B                     	;# 
  1915     009C                     	;# 
  1916     009D                     	;# 
  1917     009E                     	;# 
  1918     010C                     	;# 
  1919     010D                     	;# 
  1920     0111                     	;# 
  1921     0112                     	;# 
  1922     0113                     	;# 
  1923     0114                     	;# 
  1924     0115                     	;# 
  1925     0116                     	;# 
  1926     0117                     	;# 
  1927     0118                     	;# 
  1928     0119                     	;# 
  1929     011A                     	;# 
  1930     011B                     	;# 
  1931     011D                     	;# 
  1932     011E                     	;# 
  1933     018C                     	;# 
  1934     018D                     	;# 
  1935     0191                     	;# 
  1936     0191                     	;# 
  1937     0192                     	;# 
  1938     0193                     	;# 
  1939     0193                     	;# 
  1940     0193                     	;# 
  1941     0194                     	;# 
  1942     0195                     	;# 
  1943     0196                     	;# 
  1944     0199                     	;# 
  1945     019A                     	;# 
  1946     019B                     	;# 
  1947     019B                     	;# 
  1948     019B                     	;# 
  1949     019B                     	;# 
  1950     019C                     	;# 
  1951     019C                     	;# 
  1952     019D                     	;# 
  1953     019E                     	;# 
  1954     019F                     	;# 
  1955     020C                     	;# 
  1956     020D                     	;# 
  1957     0211                     	;# 
  1958     0211                     	;# 
  1959     0212                     	;# 
  1960     0212                     	;# 
  1961     0213                     	;# 
  1962     0213                     	;# 
  1963     0214                     	;# 
  1964     0214                     	;# 
  1965     0215                     	;# 
  1966     0215                     	;# 
  1967     0215                     	;# 
  1968     0216                     	;# 
  1969     0216                     	;# 
  1970     0217                     	;# 
  1971     0217                     	;# 
  1972     0219                     	;# 
  1973     021A                     	;# 
  1974     021B                     	;# 
  1975     021C                     	;# 
  1976     021D                     	;# 
  1977     021E                     	;# 
  1978     021F                     	;# 
  1979     0291                     	;# 
  1980     0291                     	;# 
  1981     0292                     	;# 
  1982     0293                     	;# 
  1983     0294                     	;# 
  1984     0295                     	;# 
  1985     0295                     	;# 
  1986     0296                     	;# 
  1987     0298                     	;# 
  1988     0298                     	;# 
  1989     0299                     	;# 
  1990     029A                     	;# 
  1991     029B                     	;# 
  1992     029C                     	;# 
  1993     029C                     	;# 
  1994     029D                     	;# 
  1995     029E                     	;# 
  1996     029E                     	;# 
  1997     0311                     	;# 
  1998     0311                     	;# 
  1999     0312                     	;# 
  2000     0313                     	;# 
  2001     0318                     	;# 
  2002     0318                     	;# 
  2003     0319                     	;# 
  2004     031A                     	;# 
  2005     0394                     	;# 
  2006     0395                     	;# 
  2007     0396                     	;# 
  2008     039A                     	;# 
  2009     039C                     	;# 
  2010     039D                     	;# 
  2011     039E                     	;# 
  2012     039F                     	;# 
  2013     0415                     	;# 
  2014     0416                     	;# 
  2015     0417                     	;# 
  2016     041C                     	;# 
  2017     041D                     	;# 
  2018     041E                     	;# 
  2019     0FE4                     	;# 
  2020     0FE5                     	;# 
  2021     0FE6                     	;# 
  2022     0FE7                     	;# 
  2023     0FE8                     	;# 
  2024     0FE9                     	;# 
  2025     0FEA                     	;# 
  2026     0FEB                     	;# 
  2027     0FED                     	;# 
  2028     0FEE                     	;# 
  2029     0FEF                     	;# 
  2030     0000                     	;# 
  2031     0001                     	;# 
  2032     0002                     	;# 
  2033     0003                     	;# 
  2034     0004                     	;# 
  2035     0005                     	;# 
  2036     0006                     	;# 
  2037     0007                     	;# 
  2038     0008                     	;# 
  2039     0009                     	;# 
  2040     000A                     	;# 
  2041     000B                     	;# 
  2042     000C                     	;# 
  2043     000D                     	;# 
  2044     0011                     	;# 
  2045     0012                     	;# 
  2046     0013                     	;# 
  2047     0014                     	;# 
  2048     0015                     	;# 
  2049     0016                     	;# 
  2050     0016                     	;# 
  2051     0017                     	;# 
  2052     0018                     	;# 
  2053     0019                     	;# 
  2054     001A                     	;# 
  2055     001B                     	;# 
  2056     001C                     	;# 
  2057     001E                     	;# 
  2058     001F                     	;# 
  2059     008C                     	;# 
  2060     008D                     	;# 
  2061     0091                     	;# 
  2062     0092                     	;# 
  2063     0093                     	;# 
  2064     0094                     	;# 
  2065     0095                     	;# 
  2066     0096                     	;# 
  2067     0097                     	;# 
  2068     0098                     	;# 
  2069     0099                     	;# 
  2070     009A                     	;# 
  2071     009B                     	;# 
  2072     009B                     	;# 
  2073     009C                     	;# 
  2074     009D                     	;# 
  2075     009E                     	;# 
  2076     010C                     	;# 
  2077     010D                     	;# 
  2078     0111                     	;# 
  2079     0112                     	;# 
  2080     0113                     	;# 
  2081     0114                     	;# 
  2082     0115                     	;# 
  2083     0116                     	;# 
  2084     0117                     	;# 
  2085     0118                     	;# 
  2086     0119                     	;# 
  2087     011A                     	;# 
  2088     011B                     	;# 
  2089     011D                     	;# 
  2090     011E                     	;# 
  2091     018C                     	;# 
  2092     018D                     	;# 
  2093     0191                     	;# 
  2094     0191                     	;# 
  2095     0192                     	;# 
  2096     0193                     	;# 
  2097     0193                     	;# 
  2098     0193                     	;# 
  2099     0194                     	;# 
  2100     0195                     	;# 
  2101     0196                     	;# 
  2102     0199                     	;# 
  2103     019A                     	;# 
  2104     019B                     	;# 
  2105     019B                     	;# 
  2106     019B                     	;# 
  2107     019B                     	;# 
  2108     019C                     	;# 
  2109     019C                     	;# 
  2110     019D                     	;# 
  2111     019E                     	;# 
  2112     019F                     	;# 
  2113     020C                     	;# 
  2114     020D                     	;# 
  2115     0211                     	;# 
  2116     0211                     	;# 
  2117     0212                     	;# 
  2118     0212                     	;# 
  2119     0213                     	;# 
  2120     0213                     	;# 
  2121     0214                     	;# 
  2122     0214                     	;# 
  2123     0215                     	;# 
  2124     0215                     	;# 
  2125     0215                     	;# 
  2126     0216                     	;# 
  2127     0216                     	;# 
  2128     0217                     	;# 
  2129     0217                     	;# 
  2130     0219                     	;# 
  2131     021A                     	;# 
  2132     021B                     	;# 
  2133     021C                     	;# 
  2134     021D                     	;# 
  2135     021E                     	;# 
  2136     021F                     	;# 
  2137     0291                     	;# 
  2138     0291                     	;# 
  2139     0292                     	;# 
  2140     0293                     	;# 
  2141     0294                     	;# 
  2142     0295                     	;# 
  2143     0295                     	;# 
  2144     0296                     	;# 
  2145     0298                     	;# 
  2146     0298                     	;# 
  2147     0299                     	;# 
  2148     029A                     	;# 
  2149     029B                     	;# 
  2150     029C                     	;# 
  2151     029C                     	;# 
  2152     029D                     	;# 
  2153     029E                     	;# 
  2154     029E                     	;# 
  2155     0311                     	;# 
  2156     0311                     	;# 
  2157     0312                     	;# 
  2158     0313                     	;# 
  2159     0318                     	;# 
  2160     0318                     	;# 
  2161     0319                     	;# 
  2162     031A                     	;# 
  2163     0394                     	;# 
  2164     0395                     	;# 
  2165     0396                     	;# 
  2166     039A                     	;# 
  2167     039C                     	;# 
  2168     039D                     	;# 
  2169     039E                     	;# 
  2170     039F                     	;# 
  2171     0415                     	;# 
  2172     0416                     	;# 
  2173     0417                     	;# 
  2174     041C                     	;# 
  2175     041D                     	;# 
  2176     041E                     	;# 
  2177     0FE4                     	;# 
  2178     0FE5                     	;# 
  2179     0FE6                     	;# 
  2180     0FE7                     	;# 
  2181     0FE8                     	;# 
  2182     0FE9                     	;# 
  2183     0FEA                     	;# 
  2184     0FEB                     	;# 
  2185     0FED                     	;# 
  2186     0FEE                     	;# 
  2187     0FEF                     	;# 
  2188     0000                     	;# 
  2189     0001                     	;# 
  2190     0002                     	;# 
  2191     0003                     	;# 
  2192     0004                     	;# 
  2193     0005                     	;# 
  2194     0006                     	;# 
  2195     0007                     	;# 
  2196     0008                     	;# 
  2197     0009                     	;# 
  2198     000A                     	;# 
  2199     000B                     	;# 
  2200     000C                     	;# 
  2201     000D                     	;# 
  2202     0011                     	;# 
  2203     0012                     	;# 
  2204     0013                     	;# 
  2205     0014                     	;# 
  2206     0015                     	;# 
  2207     0016                     	;# 
  2208     0016                     	;# 
  2209     0017                     	;# 
  2210     0018                     	;# 
  2211     0019                     	;# 
  2212     001A                     	;# 
  2213     001B                     	;# 
  2214     001C                     	;# 
  2215     001E                     	;# 
  2216     001F                     	;# 
  2217     008C                     	;# 
  2218     008D                     	;# 
  2219     0091                     	;# 
  2220     0092                     	;# 
  2221     0093                     	;# 
  2222     0094                     	;# 
  2223     0095                     	;# 
  2224     0096                     	;# 
  2225     0097                     	;# 
  2226     0098                     	;# 
  2227     0099                     	;# 
  2228     009A                     	;# 
  2229     009B                     	;# 
  2230     009B                     	;# 
  2231     009C                     	;# 
  2232     009D                     	;# 
  2233     009E                     	;# 
  2234     010C                     	;# 
  2235     010D                     	;# 
  2236     0111                     	;# 
  2237     0112                     	;# 
  2238     0113                     	;# 
  2239     0114                     	;# 
  2240     0115                     	;# 
  2241     0116                     	;# 
  2242     0117                     	;# 
  2243     0118                     	;# 
  2244     0119                     	;# 
  2245     011A                     	;# 
  2246     011B                     	;# 
  2247     011D                     	;# 
  2248     011E                     	;# 
  2249     018C                     	;# 
  2250     018D                     	;# 
  2251     0191                     	;# 
  2252     0191                     	;# 
  2253     0192                     	;# 
  2254     0193                     	;# 
  2255     0193                     	;# 
  2256     0193                     	;# 
  2257     0194                     	;# 
  2258     0195                     	;# 
  2259     0196                     	;# 
  2260     0199                     	;# 
  2261     019A                     	;# 
  2262     019B                     	;# 
  2263     019B                     	;# 
  2264     019B                     	;# 
  2265     019B                     	;# 
  2266     019C                     	;# 
  2267     019C                     	;# 
  2268     019D                     	;# 
  2269     019E                     	;# 
  2270     019F                     	;# 
  2271     020C                     	;# 
  2272     020D                     	;# 
  2273     0211                     	;# 
  2274     0211                     	;# 
  2275     0212                     	;# 
  2276     0212                     	;# 
  2277     0213                     	;# 
  2278     0213                     	;# 
  2279     0214                     	;# 
  2280     0214                     	;# 
  2281     0215                     	;# 
  2282     0215                     	;# 
  2283     0215                     	;# 
  2284     0216                     	;# 
  2285     0216                     	;# 
  2286     0217                     	;# 
  2287     0217                     	;# 
  2288     0219                     	;# 
  2289     021A                     	;# 
  2290     021B                     	;# 
  2291     021C                     	;# 
  2292     021D                     	;# 
  2293     021E                     	;# 
  2294     021F                     	;# 
  2295     0291                     	;# 
  2296     0291                     	;# 
  2297     0292                     	;# 
  2298     0293                     	;# 
  2299     0294                     	;# 
  2300     0295                     	;# 
  2301     0295                     	;# 
  2302     0296                     	;# 
  2303     0298                     	;# 
  2304     0298                     	;# 
  2305     0299                     	;# 
  2306     029A                     	;# 
  2307     029B                     	;# 
  2308     029C                     	;# 
  2309     029C                     	;# 
  2310     029D                     	;# 
  2311     029E                     	;# 
  2312     029E                     	;# 
  2313     0311                     	;# 
  2314     0311                     	;# 
  2315     0312                     	;# 
  2316     0313                     	;# 
  2317     0318                     	;# 
  2318     0318                     	;# 
  2319     0319                     	;# 
  2320     031A                     	;# 
  2321     0394                     	;# 
  2322     0395                     	;# 
  2323     0396                     	;# 
  2324     039A                     	;# 
  2325     039C                     	;# 
  2326     039D                     	;# 
  2327     039E                     	;# 
  2328     039F                     	;# 
  2329     0415                     	;# 
  2330     0416                     	;# 
  2331     0417                     	;# 
  2332     041C                     	;# 
  2333     041D                     	;# 
  2334     041E                     	;# 
  2335     0FE4                     	;# 
  2336     0FE5                     	;# 
  2337     0FE6                     	;# 
  2338     0FE7                     	;# 
  2339     0FE8                     	;# 
  2340     0FE9                     	;# 
  2341     0FEA                     	;# 
  2342     0FEB                     	;# 
  2343     0FED                     	;# 
  2344     0FEE                     	;# 
  2345     0FEF                     	;# 
  2346     0000                     	;# 
  2347     0001                     	;# 
  2348     0002                     	;# 
  2349     0003                     	;# 
  2350     0004                     	;# 
  2351     0005                     	;# 
  2352     0006                     	;# 
  2353     0007                     	;# 
  2354     0008                     	;# 
  2355     0009                     	;# 
  2356     000A                     	;# 
  2357     000B                     	;# 
  2358     000C                     	;# 
  2359     000D                     	;# 
  2360     0011                     	;# 
  2361     0012                     	;# 
  2362     0013                     	;# 
  2363     0014                     	;# 
  2364     0015                     	;# 
  2365     0016                     	;# 
  2366     0016                     	;# 
  2367     0017                     	;# 
  2368     0018                     	;# 
  2369     0019                     	;# 
  2370     001A                     	;# 
  2371     001B                     	;# 
  2372     001C                     	;# 
  2373     001E                     	;# 
  2374     001F                     	;# 
  2375     008C                     	;# 
  2376     008D                     	;# 
  2377     0091                     	;# 
  2378     0092                     	;# 
  2379     0093                     	;# 
  2380     0094                     	;# 
  2381     0095                     	;# 
  2382     0096                     	;# 
  2383     0097                     	;# 
  2384     0098                     	;# 
  2385     0099                     	;# 
  2386     009A                     	;# 
  2387     009B                     	;# 
  2388     009B                     	;# 
  2389     009C                     	;# 
  2390     009D                     	;# 
  2391     009E                     	;# 
  2392     010C                     	;# 
  2393     010D                     	;# 
  2394     0111                     	;# 
  2395     0112                     	;# 
  2396     0113                     	;# 
  2397     0114                     	;# 
  2398     0115                     	;# 
  2399     0116                     	;# 
  2400     0117                     	;# 
  2401     0118                     	;# 
  2402     0119                     	;# 
  2403     011A                     	;# 
  2404     011B                     	;# 
  2405     011D                     	;# 
  2406     011E                     	;# 
  2407     018C                     	;# 
  2408     018D                     	;# 
  2409     0191                     	;# 
  2410     0191                     	;# 
  2411     0192                     	;# 
  2412     0193                     	;# 
  2413     0193                     	;# 
  2414     0193                     	;# 
  2415     0194                     	;# 
  2416     0195                     	;# 
  2417     0196                     	;# 
  2418     0199                     	;# 
  2419     019A                     	;# 
  2420     019B                     	;# 
  2421     019B                     	;# 
  2422     019B                     	;# 
  2423     019B                     	;# 
  2424     019C                     	;# 
  2425     019C                     	;# 
  2426     019D                     	;# 
  2427     019E                     	;# 
  2428     019F                     	;# 
  2429     020C                     	;# 
  2430     020D                     	;# 
  2431     0211                     	;# 
  2432     0211                     	;# 
  2433     0212                     	;# 
  2434     0212                     	;# 
  2435     0213                     	;# 
  2436     0213                     	;# 
  2437     0214                     	;# 
  2438     0214                     	;# 
  2439     0215                     	;# 
  2440     0215                     	;# 
  2441     0215                     	;# 
  2442     0216                     	;# 
  2443     0216                     	;# 
  2444     0217                     	;# 
  2445     0217                     	;# 
  2446     0219                     	;# 
  2447     021A                     	;# 
  2448     021B                     	;# 
  2449     021C                     	;# 
  2450     021D                     	;# 
  2451     021E                     	;# 
  2452     021F                     	;# 
  2453     0291                     	;# 
  2454     0291                     	;# 
  2455     0292                     	;# 
  2456     0293                     	;# 
  2457     0294                     	;# 
  2458     0295                     	;# 
  2459     0295                     	;# 
  2460     0296                     	;# 
  2461     0298                     	;# 
  2462     0298                     	;# 
  2463     0299                     	;# 
  2464     029A                     	;# 
  2465     029B                     	;# 
  2466     029C                     	;# 
  2467     029C                     	;# 
  2468     029D                     	;# 
  2469     029E                     	;# 
  2470     029E                     	;# 
  2471     0311                     	;# 
  2472     0311                     	;# 
  2473     0312                     	;# 
  2474     0313                     	;# 
  2475     0318                     	;# 
  2476     0318                     	;# 
  2477     0319                     	;# 
  2478     031A                     	;# 
  2479     0394                     	;# 
  2480     0395                     	;# 
  2481     0396                     	;# 
  2482     039A                     	;# 
  2483     039C                     	;# 
  2484     039D                     	;# 
  2485     039E                     	;# 
  2486     039F                     	;# 
  2487     0415                     	;# 
  2488     0416                     	;# 
  2489     0417                     	;# 
  2490     041C                     	;# 
  2491     041D                     	;# 
  2492     041E                     	;# 
  2493     0FE4                     	;# 
  2494     0FE5                     	;# 
  2495     0FE6                     	;# 
  2496     0FE7                     	;# 
  2497     0FE8                     	;# 
  2498     0FE9                     	;# 
  2499     0FEA                     	;# 
  2500     0FEB                     	;# 
  2501     0FED                     	;# 
  2502     0FEE                     	;# 
  2503     0FEF                     	;# 
  2504     0000                     	;# 
  2505     0001                     	;# 
  2506     0002                     	;# 
  2507     0003                     	;# 
  2508     0004                     	;# 
  2509     0005                     	;# 
  2510     0006                     	;# 
  2511     0007                     	;# 
  2512     0008                     	;# 
  2513     0009                     	;# 
  2514     000A                     	;# 
  2515     000B                     	;# 
  2516     000C                     	;# 
  2517     000D                     	;# 
  2518     0011                     	;# 
  2519     0012                     	;# 
  2520     0013                     	;# 
  2521     0014                     	;# 
  2522     0015                     	;# 
  2523     0016                     	;# 
  2524     0016                     	;# 
  2525     0017                     	;# 
  2526     0018                     	;# 
  2527     0019                     	;# 
  2528     001A                     	;# 
  2529     001B                     	;# 
  2530     001C                     	;# 
  2531     001E                     	;# 
  2532     001F                     	;# 
  2533     008C                     	;# 
  2534     008D                     	;# 
  2535     0091                     	;# 
  2536     0092                     	;# 
  2537     0093                     	;# 
  2538     0094                     	;# 
  2539     0095                     	;# 
  2540     0096                     	;# 
  2541     0097                     	;# 
  2542     0098                     	;# 
  2543     0099                     	;# 
  2544     009A                     	;# 
  2545     009B                     	;# 
  2546     009B                     	;# 
  2547     009C                     	;# 
  2548     009D                     	;# 
  2549     009E                     	;# 
  2550     010C                     	;# 
  2551     010D                     	;# 
  2552     0111                     	;# 
  2553     0112                     	;# 
  2554     0113                     	;# 
  2555     0114                     	;# 
  2556     0115                     	;# 
  2557     0116                     	;# 
  2558     0117                     	;# 
  2559     0118                     	;# 
  2560     0119                     	;# 
  2561     011A                     	;# 
  2562     011B                     	;# 
  2563     011D                     	;# 
  2564     011E                     	;# 
  2565     018C                     	;# 
  2566     018D                     	;# 
  2567     0191                     	;# 
  2568     0191                     	;# 
  2569     0192                     	;# 
  2570     0193                     	;# 
  2571     0193                     	;# 
  2572     0193                     	;# 
  2573     0194                     	;# 
  2574     0195                     	;# 
  2575     0196                     	;# 
  2576     0199                     	;# 
  2577     019A                     	;# 
  2578     019B                     	;# 
  2579     019B                     	;# 
  2580     019B                     	;# 
  2581     019B                     	;# 
  2582     019C                     	;# 
  2583     019C                     	;# 
  2584     019D                     	;# 
  2585     019E                     	;# 
  2586     019F                     	;# 
  2587     020C                     	;# 
  2588     020D                     	;# 
  2589     0211                     	;# 
  2590     0211                     	;# 
  2591     0212                     	;# 
  2592     0212                     	;# 
  2593     0213                     	;# 
  2594     0213                     	;# 
  2595     0214                     	;# 
  2596     0214                     	;# 
  2597     0215                     	;# 
  2598     0215                     	;# 
  2599     0215                     	;# 
  2600     0216                     	;# 
  2601     0216                     	;# 
  2602     0217                     	;# 
  2603     0217                     	;# 
  2604     0219                     	;# 
  2605     021A                     	;# 
  2606     021B                     	;# 
  2607     021C                     	;# 
  2608     021D                     	;# 
  2609     021E                     	;# 
  2610     021F                     	;# 
  2611     0291                     	;# 
  2612     0291                     	;# 
  2613     0292                     	;# 
  2614     0293                     	;# 
  2615     0294                     	;# 
  2616     0295                     	;# 
  2617     0295                     	;# 
  2618     0296                     	;# 
  2619     0298                     	;# 
  2620     0298                     	;# 
  2621     0299                     	;# 
  2622     029A                     	;# 
  2623     029B                     	;# 
  2624     029C                     	;# 
  2625     029C                     	;# 
  2626     029D                     	;# 
  2627     029E                     	;# 
  2628     029E                     	;# 
  2629     0311                     	;# 
  2630     0311                     	;# 
  2631     0312                     	;# 
  2632     0313                     	;# 
  2633     0318                     	;# 
  2634     0318                     	;# 
  2635     0319                     	;# 
  2636     031A                     	;# 
  2637     0394                     	;# 
  2638     0395                     	;# 
  2639     0396                     	;# 
  2640     039A                     	;# 
  2641     039C                     	;# 
  2642     039D                     	;# 
  2643     039E                     	;# 
  2644     039F                     	;# 
  2645     0415                     	;# 
  2646     0416                     	;# 
  2647     0417                     	;# 
  2648     041C                     	;# 
  2649     041D                     	;# 
  2650     041E                     	;# 
  2651     0FE4                     	;# 
  2652     0FE5                     	;# 
  2653     0FE6                     	;# 
  2654     0FE7                     	;# 
  2655     0FE8                     	;# 
  2656     0FE9                     	;# 
  2657     0FEA                     	;# 
  2658     0FEB                     	;# 
  2659     0FED                     	;# 
  2660     0FEE                     	;# 
  2661     0FEF                     	;# 
  2662     0000                     	;# 
  2663     0001                     	;# 
  2664     0002                     	;# 
  2665     0003                     	;# 
  2666     0004                     	;# 
  2667     0005                     	;# 
  2668     0006                     	;# 
  2669     0007                     	;# 
  2670     0008                     	;# 
  2671     0009                     	;# 
  2672     000A                     	;# 
  2673     000B                     	;# 
  2674     000C                     	;# 
  2675     000D                     	;# 
  2676     0011                     	;# 
  2677     0012                     	;# 
  2678     0013                     	;# 
  2679     0014                     	;# 
  2680     0015                     	;# 
  2681     0016                     	;# 
  2682     0016                     	;# 
  2683     0017                     	;# 
  2684     0018                     	;# 
  2685     0019                     	;# 
  2686     001A                     	;# 
  2687     001B                     	;# 
  2688     001C                     	;# 
  2689     001E                     	;# 
  2690     001F                     	;# 
  2691     008C                     	;# 
  2692     008D                     	;# 
  2693     0091                     	;# 
  2694     0092                     	;# 
  2695     0093                     	;# 
  2696     0094                     	;# 
  2697     0095                     	;# 
  2698     0096                     	;# 
  2699     0097                     	;# 
  2700     0098                     	;# 
  2701     0099                     	;# 
  2702     009A                     	;# 
  2703     009B                     	;# 
  2704     009B                     	;# 
  2705     009C                     	;# 
  2706     009D                     	;# 
  2707     009E                     	;# 
  2708     010C                     	;# 
  2709     010D                     	;# 
  2710     0111                     	;# 
  2711     0112                     	;# 
  2712     0113                     	;# 
  2713     0114                     	;# 
  2714     0115                     	;# 
  2715     0116                     	;# 
  2716     0117                     	;# 
  2717     0118                     	;# 
  2718     0119                     	;# 
  2719     011A                     	;# 
  2720     011B                     	;# 
  2721     011D                     	;# 
  2722     011E                     	;# 
  2723     018C                     	;# 
  2724     018D                     	;# 
  2725     0191                     	;# 
  2726     0191                     	;# 
  2727     0192                     	;# 
  2728     0193                     	;# 
  2729     0193                     	;# 
  2730     0193                     	;# 
  2731     0194                     	;# 
  2732     0195                     	;# 
  2733     0196                     	;# 
  2734     0199                     	;# 
  2735     019A                     	;# 
  2736     019B                     	;# 
  2737     019B                     	;# 
  2738     019B                     	;# 
  2739     019B                     	;# 
  2740     019C                     	;# 
  2741     019C                     	;# 
  2742     019D                     	;# 
  2743     019E                     	;# 
  2744     019F                     	;# 
  2745     020C                     	;# 
  2746     020D                     	;# 
  2747     0211                     	;# 
  2748     0211                     	;# 
  2749     0212                     	;# 
  2750     0212                     	;# 
  2751     0213                     	;# 
  2752     0213                     	;# 
  2753     0214                     	;# 
  2754     0214                     	;# 
  2755     0215                     	;# 
  2756     0215                     	;# 
  2757     0215                     	;# 
  2758     0216                     	;# 
  2759     0216                     	;# 
  2760     0217                     	;# 
  2761     0217                     	;# 
  2762     0219                     	;# 
  2763     021A                     	;# 
  2764     021B                     	;# 
  2765     021C                     	;# 
  2766     021D                     	;# 
  2767     021E                     	;# 
  2768     021F                     	;# 
  2769     0291                     	;# 
  2770     0291                     	;# 
  2771     0292                     	;# 
  2772     0293                     	;# 
  2773     0294                     	;# 
  2774     0295                     	;# 
  2775     0295                     	;# 
  2776     0296                     	;# 
  2777     0298                     	;# 
  2778     0298                     	;# 
  2779     0299                     	;# 
  2780     029A                     	;# 
  2781     029B                     	;# 
  2782     029C                     	;# 
  2783     029C                     	;# 
  2784     029D                     	;# 
  2785     029E                     	;# 
  2786     029E                     	;# 
  2787     0311                     	;# 
  2788     0311                     	;# 
  2789     0312                     	;# 
  2790     0313                     	;# 
  2791     0318                     	;# 
  2792     0318                     	;# 
  2793     0319                     	;# 
  2794     031A                     	;# 
  2795     0394                     	;# 
  2796     0395                     	;# 
  2797     0396                     	;# 
  2798     039A                     	;# 
  2799     039C                     	;# 
  2800     039D                     	;# 
  2801     039E                     	;# 
  2802     039F                     	;# 
  2803     0415                     	;# 
  2804     0416                     	;# 
  2805     0417                     	;# 
  2806     041C                     	;# 
  2807     041D                     	;# 
  2808     041E                     	;# 
  2809     0FE4                     	;# 
  2810     0FE5                     	;# 
  2811     0FE6                     	;# 
  2812     0FE7                     	;# 
  2813     0FE8                     	;# 
  2814     0FE9                     	;# 
  2815     0FEA                     	;# 
  2816     0FEB                     	;# 
  2817     0FED                     	;# 
  2818     0FEE                     	;# 
  2819     0FEF                     	;# 
  2820                           
  2821 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2822     0000                     
  2823 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2824     0000                     
  2825 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2826     0000                     
  2827                           	psect	idataBANK0
  2828     0003                     __pidataBANK0:
  2829                           
  2830                           ;initializer for _subindo
  2831     0003  3401               	retlw	1
  2832                           
  2833                           	psect	idataBANK1
  2834     0002                     __pidataBANK1:
  2835                           
  2836                           ;initializer for _inc
  2837     0002  3401               	retlw	1
  2838                           
  2839                           	psect	stringtext1
  2840     07F5                     __pstringtext1:
  2841     07F5                     _matrix_conf:
  2842     07F5  3409               	retlw	9
  2843     07F6  3400               	retlw	0
  2844     07F7  340A               	retlw	10
  2845     07F8  3400               	retlw	0
  2846     07F9  340B               	retlw	11
  2847     07FA  3407               	retlw	7
  2848     07FB  340C               	retlw	12
  2849     07FC  3401               	retlw	1
  2850     07FD  340F               	retlw	15
  2851     07FE  3401               	retlw	1
  2852     07FF  340F               	retlw	15
  2853     0800  3400               	retlw	0
  2854     0801                     __end_of_matrix_conf:
  2855                           
  2856                           	psect	stringtext2
  2857     0801                     __pstringtext2:
  2858     0801                     _spi1_configuration:
  2859     0801  3400               	retlw	0
  2860     0802  3440               	retlw	64
  2861     0803  3401               	retlw	1
  2862     0804  3400               	retlw	0
  2863     0805                     __end_of_spi1_configuration:
  2864                           
  2865                           	psect	nvBANK1
  2866     00E1                     __pnvBANK1:
  2867     00E1                     _TMR4_InterruptHandler:
  2868     00E1                     	ds	2
  2869     00E3                     _CCP4_CallBack:
  2870     00E3                     	ds	2
  2871     00E5                     _TMR0_InterruptHandler:
  2872     00E5                     	ds	2
  2873     00E7                     _EUSART_OverrunErrorHandler:
  2874     00E7                     	ds	2
  2875     00E9                     _EUSART_FramingErrorHandler:
  2876     00E9                     	ds	2
  2877     00EB                     _IOCBF3_InterruptHandler:
  2878     00EB                     	ds	2
  2879     00ED                     _IOCBF0_InterruptHandler:
  2880     00ED                     	ds	2
  2881                           
  2882                           	psect	nvBANK2
  2883     0120                     __pnvBANK2:
  2884     0120                     _EUSART_ErrorHandler:
  2885     0120                     	ds	2
  2886     0015                     _TMR0	set	21
  2887     001C                     _T2CONbits	set	28
  2888     001C                     _T2CON	set	28
  2889     001A                     _TMR2	set	26
  2890     001B                     _PR2	set	27
  2891     0019                     _T1GCONbits	set	25
  2892     0018                     _T1CONbits	set	24
  2893     0018                     _T1CON	set	24
  2894     0016                     _TMR1L	set	22
  2895     0017                     _TMR1H	set	23
  2896     0019                     _T1GCON	set	25
  2897     0013                     _PIR3bits	set	19
  2898     0011                     _PIR1bits	set	17
  2899     000B                     _INTCONbits	set	11
  2900     0012                     _PIR2bits	set	18
  2901     0095                     _OPTION_REG	set	149
  2902     0093                     _PIE3bits	set	147
  2903     008D                     _TRISBbits	set	141
  2904     009D                     _ADCON0bits	set	157
  2905     009D                     _ADCON0	set	157
  2906     009C                     _ADRESH	set	156
  2907     009B                     _ADRESL	set	155
  2908     009E                     _ADCON1	set	158
  2909     0097                     _WDTCON	set	151
  2910     0098                     _OSCTUNE	set	152
  2911     0099                     _OSCCON	set	153
  2912     0095                     _OPTION_REGbits	set	149
  2913     008D                     _TRISB	set	141
  2914     008C                     _TRISA	set	140
  2915     0092                     _PIE2bits	set	146
  2916     010C                     _LATAbits	set	268
  2917     010D                     _LATBbits	set	269
  2918     0117                     _FVRCONbits	set	279
  2919     0117                     _FVRCON	set	279
  2920     0116                     _BORCON	set	278
  2921     011E                     _APFCON1	set	286
  2922     011D                     _APFCON0	set	285
  2923     010D                     _LATB	set	269
  2924     010C                     _LATA	set	268
  2925     0112                     _CM1CON1	set	274
  2926     0111                     _CM1CON0	set	273
  2927     0115                     _CMOUTbits	set	277
  2928     0114                     _CM2CON1	set	276
  2929     0113                     _CM2CON0	set	275
  2930     019A                     _TXREG	set	410
  2931     0199                     _RCREG	set	409
  2932     019D                     _RCSTAbits	set	413
  2933     019E                     _TXSTAbits	set	414
  2934     019C                     _SPBRGH	set	412
  2935     019B                     _SPBRGL	set	411
  2936     019E                     _TXSTA	set	414
  2937     019D                     _RCSTA	set	413
  2938     019F                     _BAUDCON	set	415
  2939     018C                     _ANSELA	set	396
  2940     018D                     _ANSELB	set	397
  2941     0211                     _SSP1BUF	set	529
  2942     0216                     _SSP1CON2	set	534
  2943     0215                     _SSP1CON1bits	set	533
  2944     0212                     _SSP1ADD	set	530
  2945     0215                     _SSP1CON1	set	533
  2946     0214                     _SSP1STAT	set	532
  2947     020C                     _WPUA	set	524
  2948     020D                     _WPUB	set	525
  2949     029E                     _CCPTMRS0bits	set	670
  2950     0319                     _CCPR4H	set	793
  2951     0318                     _CCPR4L	set	792
  2952     031A                     _CCP4CON	set	794
  2953     0312                     _CCPR3H	set	786
  2954     0311                     _CCPR3L	set	785
  2955     0313                     _CCP3CON	set	787
  2956     0394                     _IOCBPbits	set	916
  2957     0395                     _IOCBNbits	set	917
  2958     0396                     _IOCBFbits	set	918
  2959     0417                     _T4CONbits	set	1047
  2960     0417                     _T4CON	set	1047
  2961     0415                     _TMR4	set	1045
  2962     0416                     _PR4	set	1046
  2963                           
  2964                           	psect	cinit
  2965     0058                     start_initialization:	
  2966                           ; #config settings
  2967                           
  2968     0058                     __initialization:
  2969                           
  2970                           ; Initialize objects allocated to BANK0
  2971     0058  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  2972     005B  00EF               	movwf	__pdataBANK0& (0+127)
  2973                           
  2974                           ; Initialize objects allocated to BANK1
  2975     005C  0021               	movlb	1	; select bank1
  2976     005D  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  2977     0060  00EF               	movwf	__pdataBANK1& (0+127)
  2978                           
  2979                           ; Clear objects allocated to BANK0
  2980     0061  0020               	movlb	0	; select bank0
  2981     0062  01EE               	clrf	__pbssBANK0& (0+127)
  2982                           
  2983                           ; Clear objects allocated to BANK1
  2984     0063  30A0               	movlw	low __pbssBANK1
  2985     0064  0084               	movwf	4
  2986     0065  3000               	movlw	high __pbssBANK1
  2987     0066  0085               	movwf	5
  2988     0067  302E               	movlw	46
  2989     0068  3188  20B5  3180   	fcall	clear_ram0
  2990     006B                     end_of_initialization:	
  2991                           ;End of C runtime variable initialization code
  2992                           
  2993     006B                     __end_of__initialization:
  2994     006B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2995     006C  0020               	movlb	0
  2996     006D  3187  2F0C         	ljmp	_main	;jump to C main() function
  2997                           
  2998                           	psect	bssBANK0
  2999     006E                     __pbssBANK0:
  3000     006E                     _timer0ReloadVal:
  3001     006E                     	ds	1
  3002                           
  3003                           	psect	dataBANK0
  3004     006F                     __pdataBANK0:
  3005     006F                     _subindo:
  3006     006F                     	ds	1
  3007                           
  3008                           	psect	bssBANK1
  3009     00A0                     __pbssBANK1:
  3010     00A0                     _MatrixLed:
  3011     00A0                     	ds	8
  3012     00A8                     _velocidadeMotor:
  3013     00A8                     	ds	4
  3014     00AC                     TMR4_ISR@CountCallBack:
  3015     00AC                     	ds	2
  3016     00AE                     TMR0_ISR@CountCallBack:
  3017     00AE                     	ds	2
  3018     00B0                     _timer1ReloadVal:
  3019     00B0                     	ds	2
  3020     00B2                     _ADC_InterruptHandler:
  3021     00B2                     	ds	2
  3022     00B4                     _temperatura:
  3023     00B4                     	ds	2
  3024     00B6                     _t2:
  3025     00B6                     	ds	2
  3026     00B8                     _t1:
  3027     00B8                     	ds	2
  3028     00BA                     controleMovimento@cont:
  3029     00BA                     	ds	1
  3030     00BB                     sendInfo@aux_altura:
  3031     00BB                     	ds	1
  3032     00BC                     _eusartRxLastError:
  3033     00BC                     	ds	1
  3034     00BD                     _destinoDesc:
  3035     00BD                     	ds	1
  3036     00BE                     _destinoSub:
  3037     00BE                     	ds	1
  3038     00BF                     _motor:
  3039     00BF                     	ds	1
  3040     00C0                     _altura:
  3041     00C0                     	ds	1
  3042     00C1                     _andarAtual:
  3043     00C1                     	ds	1
  3044     00C2                     _dTemp:
  3045     00C2                     	ds	1
  3046     00C3                     _oTemp:
  3047     00C3                     	ds	1
  3048     00C4                     _flag:
  3049     00C4                     	ds	1
  3050     00C5                     _contComandos:
  3051     00C5                     	ds	1
  3052     00C6                     _RXaccepted:
  3053     00C6                     	ds	1
  3054     00C7                     _waitRX:
  3055     00C7                     	ds	1
  3056     00C8                     _rxValue:
  3057     00C8                     	ds	1
  3058     00C9                     _mov:
  3059     00C9                     	ds	1
  3060     00CA                     _state:
  3061     00CA                     	ds	1
  3062     00CB                     _destino:
  3063     00CB                     	ds	1
  3064     00CC                     _origem:
  3065     00CC                     	ds	1
  3066     00CD                     _pulsoEncoder:
  3067     00CD                     	ds	1
  3068                           
  3069                           	psect	dataBANK1
  3070     00EF                     __pdataBANK1:
  3071     00EF                     _inc:
  3072     00EF                     	ds	1
  3073                           
  3074                           	psect	clrtext
  3075     08B5                     clear_ram0:	
  3076                           ;	Called with FSR0 containing the base address, and
  3077                           ;	WREG with the size to clear
  3078                           
  3079     08B5  0064               	clrwdt	;clear the watchdog before getting into this loop
  3080     08B6                     clrloop0:
  3081     08B6  0180               	clrf	0	;clear RAM location pointed to by FSR
  3082     08B7  3101               	addfsr 0,1
  3083     08B8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3084     08B9  28B6               	goto	clrloop0	;have we reached the end yet?
  3085     08BA  3400               	retlw	0	;all done for this memory range, return
  3086                           
  3087                           	psect	cstackBANK1
  3088     00CE                     __pcstackBANK1:
  3089     00CE                     ?_IOCBF0_SetInterruptHandler:
  3090     00CE                     ?_IOCBF3_SetInterruptHandler:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093     00CE                     ??_SPI1_Initialize:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096     00CE                     ??_OSCILLATOR_Initialize:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099     00CE                     ??_WDT_Initialize:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102     00CE                     ??_FVR_Initialize:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105     00CE                     ??_TMR2_Initialize:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108     00CE                     ??_ADC_Initialize:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111     00CE                     ??_TMR1_Initialize:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114     00CE                     ?_EUSART_SetFramingErrorHandler:	
  3115                           ; 1 bytes @ 0x0
  3116                           
  3117     00CE                     ?_EUSART_SetOverrunErrorHandler:	
  3118                           ; 1 bytes @ 0x0
  3119                           
  3120     00CE                     ?_EUSART_SetErrorHandler:	
  3121                           ; 1 bytes @ 0x0
  3122                           
  3123     00CE                     ?_TMR0_SetInterruptHandler:	
  3124                           ; 1 bytes @ 0x0
  3125                           
  3126     00CE                     ?_CCP4_SetCallBack:	
  3127                           ; 1 bytes @ 0x0
  3128                           
  3129     00CE                     ?_TMR4_SetInterruptHandler:	
  3130                           ; 1 bytes @ 0x0
  3131                           
  3132     00CE                     ??_PWM3_Initialize:	
  3133                           ; 1 bytes @ 0x0
  3134                           
  3135     00CE                     ??_CMP2_Initialize:	
  3136                           ; 1 bytes @ 0x0
  3137                           
  3138     00CE                     ??_CMP1_Initialize:	
  3139                           ; 1 bytes @ 0x0
  3140                           
  3141     00CE                     ??_EUSART_is_rx_ready:	
  3142                           ; 1 bytes @ 0x0
  3143                           
  3144     00CE                     ??_EUSART_Read:	
  3145                           ; 1 bytes @ 0x0
  3146                           
  3147     00CE                     ??_SPI1_Open:	
  3148                           ; 1 bytes @ 0x0
  3149                           
  3150     00CE                     ?_SPI1_ExchangeBlock:	
  3151                           ; 1 bytes @ 0x0
  3152                           
  3153     00CE                     ??_TMR4_StartTimer:	
  3154                           ; 1 bytes @ 0x0
  3155                           
  3156     00CE                     ??_TMR4_WriteTimer:	
  3157                           ; 1 bytes @ 0x0
  3158                           
  3159     00CE                     ??_isValidFloor:	
  3160                           ; 1 bytes @ 0x0
  3161                           
  3162     00CE                     TMR4_WriteTimer@timerVal:	
  3163                           ; 1 bytes @ 0x0
  3164                           
  3165     00CE                     _isValidFloor$1576:	
  3166                           ; 1 bytes @ 0x0
  3167                           
  3168     00CE                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3169                           ; 1 bytes @ 0x0
  3170                           
  3171     00CE                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3172                           ; 2 bytes @ 0x0
  3173                           
  3174     00CE                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3175                           ; 2 bytes @ 0x0
  3176                           
  3177     00CE                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3178                           ; 2 bytes @ 0x0
  3179                           
  3180     00CE                     EUSART_SetErrorHandler@interruptHandler:	
  3181                           ; 2 bytes @ 0x0
  3182                           
  3183     00CE                     SPI1_ExchangeBlock@blockSize:	
  3184                           ; 2 bytes @ 0x0
  3185                           
  3186     00CE                     TMR0_SetInterruptHandler@InterruptHandler:	
  3187                           ; 2 bytes @ 0x0
  3188                           
  3189     00CE                     CCP4_SetCallBack@customCallBack:	
  3190                           ; 2 bytes @ 0x0
  3191                           
  3192     00CE                     TMR4_SetInterruptHandler@InterruptHandler:	
  3193                           ; 2 bytes @ 0x0
  3194                           
  3195                           
  3196                           ; 2 bytes @ 0x0
  3197     00CE                     	ds	1
  3198     00CF                     ??_organizaTrajeto:
  3199     00CF                     isValidFloor@floor:	
  3200                           ; 1 bytes @ 0x1
  3201                           
  3202                           
  3203                           ; 1 bytes @ 0x1
  3204     00CF                     	ds	1
  3205     00D0                     ??_IOCBF0_SetInterruptHandler:
  3206     00D0                     ??_IOCBF3_SetInterruptHandler:	
  3207                           ; 1 bytes @ 0x2
  3208                           
  3209     00D0                     ??_TMR4_Initialize:	
  3210                           ; 1 bytes @ 0x2
  3211                           
  3212     00D0                     ??_TMR0_Initialize:	
  3213                           ; 1 bytes @ 0x2
  3214                           
  3215     00D0                     ??_CCP4_Initialize:	
  3216                           ; 1 bytes @ 0x2
  3217                           
  3218     00D0                     ??_EUSART_Initialize:	
  3219                           ; 1 bytes @ 0x2
  3220                           
  3221     00D0                     ??_EUSART_SetFramingErrorHandler:	
  3222                           ; 1 bytes @ 0x2
  3223                           
  3224     00D0                     ??_EUSART_SetOverrunErrorHandler:	
  3225                           ; 1 bytes @ 0x2
  3226                           
  3227     00D0                     ??_EUSART_SetErrorHandler:	
  3228                           ; 1 bytes @ 0x2
  3229                           
  3230     00D0                     ??_TMR0_SetInterruptHandler:	
  3231                           ; 1 bytes @ 0x2
  3232                           
  3233     00D0                     ??_CCP4_SetCallBack:	
  3234                           ; 1 bytes @ 0x2
  3235                           
  3236     00D0                     ??_TMR4_SetInterruptHandler:	
  3237                           ; 1 bytes @ 0x2
  3238                           
  3239     00D0                     ??_PIN_MANAGER_Initialize:	
  3240                           ; 1 bytes @ 0x2
  3241                           
  3242     00D0                     ??_SYSTEM_Initialize:	
  3243                           ; 1 bytes @ 0x2
  3244                           
  3245     00D0                     ??_SPI1_ExchangeBlock:	
  3246                           ; 1 bytes @ 0x2
  3247                           
  3248     00D0                     organizaTrajeto@mascaraOrigem:	
  3249                           ; 1 bytes @ 0x2
  3250                           
  3251                           
  3252                           ; 1 bytes @ 0x2
  3253     00D0                     	ds	1
  3254     00D1                     SPI1_Open@spi1UniqueConfiguration:
  3255     00D1                     SPI1_ExchangeBlock@block:	
  3256                           ; 1 bytes @ 0x3
  3257                           
  3258     00D1                     organizaTrajeto@mascaraDestino:	
  3259                           ; 1 bytes @ 0x3
  3260                           
  3261                           
  3262                           ; 1 bytes @ 0x3
  3263     00D1                     	ds	1
  3264     00D2                     SPI1_ExchangeBlock@data:
  3265                           
  3266                           ; 1 bytes @ 0x4
  3267     00D2                     	ds	1
  3268     00D3                     ?_txSpi:
  3269     00D3                     txSpi@dataSize:	
  3270                           ; 1 bytes @ 0x5
  3271                           
  3272                           
  3273                           ; 2 bytes @ 0x5
  3274     00D3                     	ds	2
  3275     00D5                     ??_txSpi:
  3276     00D5                     txSpi@data:	
  3277                           ; 1 bytes @ 0x7
  3278                           
  3279                           
  3280                           ; 1 bytes @ 0x7
  3281     00D5                     	ds	1
  3282     00D6                     ??_matrixUpdate:
  3283     00D6                     ??_initMatrix:	
  3284                           ; 1 bytes @ 0x8
  3285                           
  3286     00D6                     matrixUpdate@data:	
  3287                           ; 1 bytes @ 0x8
  3288                           
  3289                           
  3290                           ; 2 bytes @ 0x8
  3291     00D6                     	ds	1
  3292     00D7                     initMatrix@data:
  3293                           
  3294                           ; 4 bytes @ 0x9
  3295     00D7                     	ds	1
  3296     00D8                     matrixUpdate@i:
  3297                           
  3298                           ; 1 bytes @ 0xA
  3299     00D8                     	ds	1
  3300     00D9                     ??_chegadaS1:
  3301                           
  3302                           ; 1 bytes @ 0xB
  3303     00D9                     	ds	2
  3304     00DB                     initMatrix@k:
  3305                           
  3306                           ; 1 bytes @ 0xD
  3307     00DB                     	ds	1
  3308     00DC                     initMatrix@i:
  3309                           
  3310                           ; 1 bytes @ 0xE
  3311     00DC                     	ds	1
  3312     00DD                     initMatrix@i_1620:
  3313                           
  3314                           ; 1 bytes @ 0xF
  3315     00DD                     	ds	1
  3316     00DE                     initMatrix@j:
  3317                           
  3318                           ; 1 bytes @ 0x10
  3319     00DE                     	ds	1
  3320     00DF                     ??_main:
  3321                           
  3322                           ; 1 bytes @ 0x11
  3323     00DF                     	ds	2
  3324                           
  3325                           	psect	cstackCOMMON
  3326     0070                     __pcstackCOMMON:
  3327     0070                     ?_chegadaS4:
  3328     0070                     ?_chegadaS3:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331     0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334     0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3335                           ; 1 bytes @ 0x0
  3336                           
  3337     0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340     0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343     0070                     ?_IOCBF0_ISR:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346     0070                     ?_IOCBF3_ISR:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349     0070                     ?_SPI1_Initialize:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352     0070                     ?_OSCILLATOR_Initialize:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355     0070                     ?_WDT_Initialize:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358     0070                     ?_FVR_Initialize:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361     0070                     ?_TMR4_Initialize:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364     0070                     ?_TMR2_Initialize:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367     0070                     ?_TMR0_Initialize:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370     0070                     ?_ADC_Initialize:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373     0070                     ?_CCP4_Initialize:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376     0070                     ?_TMR1_Initialize:	
  3377                           ; 1 bytes @ 0x0
  3378                           
  3379     0070                     ?_EUSART_Initialize:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382     0070                     ?_TMR0_ISR:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385     0070                     ?_CCP4_CaptureISR:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388     0070                     ?_TMR4_ISR:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391     0070                     ?_TMR0_DefaultInterruptHandler:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394     0070                     ??_TMR0_DefaultInterruptHandler:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397     0070                     ?_TMR0_CallBack:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400     0070                     ?_TMR4_DefaultInterruptHandler:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403     0070                     ??_TMR4_DefaultInterruptHandler:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406     0070                     ?_TMR4_CallBack:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409     0070                     ?_memset:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412     0070                     ?_PWM3_Initialize:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415     0070                     ?_PWM3_LoadDutyValue:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418     0070                     ?_CMP2_Initialize:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421     0070                     ?_CMP2_ISR:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424     0070                     ?_CMP1_Initialize:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427     0070                     ?_CMP1_ISR:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430     0070                     ?_PIN_MANAGER_Initialize:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433     0070                     ?_PIN_MANAGER_IOC:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436     0070                     ?_SYSTEM_Initialize:	
  3437                           ; 1 bytes @ 0x0
  3438                           
  3439     0070                     ?_EUSART_is_rx_ready:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442     0070                     ?_EUSART_Read:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445     0070                     ?_EUSART_Write:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448     0070                     ??_EUSART_Write:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451     0070                     ?_SPI1_Open:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454     0070                     ?_INTERRUPT_InterruptManager:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457     0070                     ?_CCP4_DefaultCallBack:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460     0070                     ?_TMR4_StartTimer:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463     0070                     ?_TMR4_WriteTimer:	
  3464                           ; 1 bytes @ 0x0
  3465                           
  3466     0070                     ?_organizaTrajeto:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469     0070                     ?_isValidFloor:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472     0070                     ?_sendInfo:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475     0070                     ?_interrupcaoCCP4:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478     0070                     ??_interrupcaoCCP4:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481     0070                     ?_matrixUpdate:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484     0070                     ?_initMatrix:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487     0070                     ?_controleMovimento:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490     0070                     ?_chegadaS1:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493     0070                     ?_chegadaS2:	
  3494                           ; 1 bytes @ 0x0
  3495                           
  3496     0070                     ?_main:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499     0070                     ?i1_SPI1_ExchangeBlock:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502     0070                     ?i1_TMR4_StartTimer:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505     0070                     ??i1_TMR4_StartTimer:	
  3506                           ; 1 bytes @ 0x0
  3507                           
  3508     0070                     ?i1_TMR4_WriteTimer:	
  3509                           ; 1 bytes @ 0x0
  3510                           
  3511     0070                     ??i1_TMR4_WriteTimer:	
  3512                           ; 1 bytes @ 0x0
  3513                           
  3514     0070                     ?i1_matrixUpdate:	
  3515                           ; 1 bytes @ 0x0
  3516                           
  3517     0070                     ?i1_chegadaS1:	
  3518                           ; 1 bytes @ 0x0
  3519                           
  3520     0070                     ?_abs:	
  3521                           ; 1 bytes @ 0x0
  3522                           
  3523     0070                     ?__Umul8_16:	
  3524                           ; 2 bytes @ 0x0
  3525                           
  3526     0070                     ?_ADC_GetConversion:	
  3527                           ; 2 bytes @ 0x0
  3528                           
  3529     0070                     EUSART_Write@txData:	
  3530                           ; 2 bytes @ 0x0
  3531                           
  3532     0070                     __Umul8_16@multiplicand:	
  3533                           ; 1 bytes @ 0x0
  3534                           
  3535     0070                     i1TMR4_WriteTimer@timerVal:	
  3536                           ; 1 bytes @ 0x0
  3537                           
  3538     0070                     PWM3_LoadDutyValue@dutyValue:	
  3539                           ; 1 bytes @ 0x0
  3540                           
  3541     0070                     CCP4_DefaultCallBack@capturedValue:	
  3542                           ; 2 bytes @ 0x0
  3543                           
  3544     0070                     abs@a:	
  3545                           ; 2 bytes @ 0x0
  3546                           
  3547     0070                     memset@c:	
  3548                           ; 2 bytes @ 0x0
  3549                           
  3550     0070                     i1SPI1_ExchangeBlock@blockSize:	
  3551                           ; 2 bytes @ 0x0
  3552                           
  3553                           
  3554                           ; 2 bytes @ 0x0
  3555     0070                     	ds	2
  3556     0072                     ??_CCP4_CaptureISR:
  3557     0072                     ??_abs:	
  3558                           ; 1 bytes @ 0x2
  3559                           
  3560     0072                     ??__Umul8_16:	
  3561                           ; 1 bytes @ 0x2
  3562                           
  3563     0072                     ??_PWM3_LoadDutyValue:	
  3564                           ; 1 bytes @ 0x2
  3565                           
  3566     0072                     ??_ADC_GetConversion:	
  3567                           ; 1 bytes @ 0x2
  3568                           
  3569     0072                     ??_CCP4_DefaultCallBack:	
  3570                           ; 1 bytes @ 0x2
  3571                           
  3572     0072                     ??i1_SPI1_ExchangeBlock:	
  3573                           ; 1 bytes @ 0x2
  3574                           
  3575     0072                     CCP4_CaptureISR@module:	
  3576                           ; 1 bytes @ 0x2
  3577                           
  3578     0072                     memset@n:	
  3579                           ; 2 bytes @ 0x2
  3580                           
  3581                           
  3582                           ; 2 bytes @ 0x2
  3583     0072                     	ds	1
  3584     0073                     ADC_GetConversion@channel:
  3585     0073                     i1SPI1_ExchangeBlock@block:	
  3586                           ; 1 bytes @ 0x3
  3587                           
  3588                           
  3589                           ; 1 bytes @ 0x3
  3590     0073                     	ds	1
  3591     0074                     ??_memset:
  3592     0074                     ?___xxtofl:	
  3593                           ; 1 bytes @ 0x4
  3594                           
  3595     0074                     i1SPI1_ExchangeBlock@data:	
  3596                           ; 4 bytes @ 0x4
  3597                           
  3598     0074                     __Umul8_16@product:	
  3599                           ; 1 bytes @ 0x4
  3600                           
  3601     0074                     ___xxtofl@val:	
  3602                           ; 2 bytes @ 0x4
  3603                           
  3604                           
  3605                           ; 4 bytes @ 0x4
  3606     0074                     	ds	1
  3607     0075                     ?i1_txSpi:
  3608     0075                     i1txSpi@dataSize:	
  3609                           ; 1 bytes @ 0x5
  3610                           
  3611                           
  3612                           ; 2 bytes @ 0x5
  3613     0075                     	ds	1
  3614     0076                     __Umul8_16@word_mpld:
  3615     0076                     memset@k:	
  3616                           ; 2 bytes @ 0x6
  3617                           
  3618                           
  3619                           ; 2 bytes @ 0x6
  3620     0076                     	ds	1
  3621     0077                     ??i1_txSpi:
  3622     0077                     i1txSpi@data:	
  3623                           ; 1 bytes @ 0x7
  3624                           
  3625                           
  3626                           ; 1 bytes @ 0x7
  3627     0077                     	ds	1
  3628     0078                     ??___xxtofl:
  3629     0078                     ??i1_matrixUpdate:	
  3630                           ; 1 bytes @ 0x8
  3631                           
  3632     0078                     __Umul8_16@multiplier:	
  3633                           ; 1 bytes @ 0x8
  3634                           
  3635     0078                     memset@dest:	
  3636                           ; 1 bytes @ 0x8
  3637                           
  3638     0078                     i1matrixUpdate@data:	
  3639                           ; 1 bytes @ 0x8
  3640                           
  3641                           
  3642                           ; 2 bytes @ 0x8
  3643     0078                     	ds	1
  3644     0079                     memset@s:
  3645                           
  3646                           ; 1 bytes @ 0x9
  3647     0079                     	ds	1
  3648     007A                     ?_bin2bcd:
  3649     007A                     i1matrixUpdate@i:	
  3650                           ; 2 bytes @ 0xA
  3651                           
  3652     007A                     bin2bcd@binVal:	
  3653                           ; 1 bytes @ 0xA
  3654                           
  3655                           
  3656                           ; 2 bytes @ 0xA
  3657     007A                     	ds	1
  3658     007B                     ??_chegadaS4:
  3659     007B                     ??_chegadaS3:	
  3660                           ; 1 bytes @ 0xB
  3661                           
  3662     007B                     ??_IOCBF0_ISR:	
  3663                           ; 1 bytes @ 0xB
  3664                           
  3665     007B                     ??_IOCBF3_ISR:	
  3666                           ; 1 bytes @ 0xB
  3667                           
  3668     007B                     ??_CMP2_ISR:	
  3669                           ; 1 bytes @ 0xB
  3670                           
  3671     007B                     ??_CMP1_ISR:	
  3672                           ; 1 bytes @ 0xB
  3673                           
  3674     007B                     ??_PIN_MANAGER_IOC:	
  3675                           ; 1 bytes @ 0xB
  3676                           
  3677     007B                     ??_controleMovimento:	
  3678                           ; 1 bytes @ 0xB
  3679                           
  3680     007B                     ??_chegadaS2:	
  3681                           ; 1 bytes @ 0xB
  3682                           
  3683     007B                     ??i1_chegadaS1:	
  3684                           ; 1 bytes @ 0xB
  3685                           
  3686                           
  3687                           ; 1 bytes @ 0xB
  3688     007B                     	ds	1
  3689     007C                     ___fltol@sign1:
  3690                           
  3691                           ; 1 bytes @ 0xC
  3692     007C                     	ds	1
  3693     007D                     ??_TMR4_ISR:
  3694     007D                     ??_TMR4_CallBack:	
  3695                           ; 1 bytes @ 0xD
  3696                           
  3697     007D                     ___fltol@exp1:	
  3698                           ; 1 bytes @ 0xD
  3699                           
  3700                           
  3701                           ; 1 bytes @ 0xD
  3702     007D                     	ds	1
  3703     007E                     ??_TMR0_ISR:
  3704     007E                     ??_TMR0_CallBack:	
  3705                           ; 1 bytes @ 0xE
  3706                           
  3707     007E                     ??_INTERRUPT_InterruptManager:	
  3708                           ; 1 bytes @ 0xE
  3709                           
  3710                           
  3711                           	psect	cstackBANK0
  3712     0020                     __pcstackBANK0:	
  3713                           ; 1 bytes @ 0xE
  3714                           
  3715     0020                     ??_bin2bcd:
  3716     0020                     ___xxtofl@sign:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719                           
  3720                           ; 1 bytes @ 0x0
  3721     0020                     	ds	1
  3722     0021                     ___xxtofl@exp:
  3723                           
  3724                           ; 1 bytes @ 0x1
  3725     0021                     	ds	1
  3726     0022                     ___xxtofl@arg:
  3727                           
  3728                           ; 4 bytes @ 0x2
  3729     0022                     	ds	2
  3730     0024                     bin2bcd@i:
  3731                           
  3732                           ; 1 bytes @ 0x4
  3733     0024                     	ds	1
  3734     0025                     bin2bcd@dataU:
  3735                           
  3736                           ; 4 bytes @ 0x5
  3737     0025                     	ds	1
  3738     0026                     ?___fldiv:
  3739     0026                     ___fldiv@a:	
  3740                           ; 4 bytes @ 0x6
  3741                           
  3742                           
  3743                           ; 4 bytes @ 0x6
  3744     0026                     	ds	4
  3745     002A                     ___fldiv@b:
  3746                           
  3747                           ; 4 bytes @ 0xA
  3748     002A                     	ds	4
  3749     002E                     ??___fldiv:
  3750                           
  3751                           ; 1 bytes @ 0xE
  3752     002E                     	ds	5
  3753     0033                     ___fldiv@rem:
  3754                           
  3755                           ; 4 bytes @ 0x13
  3756     0033                     	ds	4
  3757     0037                     ___fldiv@sign:
  3758                           
  3759                           ; 1 bytes @ 0x17
  3760     0037                     	ds	1
  3761     0038                     ___fldiv@new_exp:
  3762                           
  3763                           ; 2 bytes @ 0x18
  3764     0038                     	ds	2
  3765     003A                     ___fldiv@grs:
  3766                           
  3767                           ; 4 bytes @ 0x1A
  3768     003A                     	ds	4
  3769     003E                     ___fldiv@bexp:
  3770                           
  3771                           ; 1 bytes @ 0x1E
  3772     003E                     	ds	1
  3773     003F                     ___fldiv@aexp:
  3774                           
  3775                           ; 1 bytes @ 0x1F
  3776     003F                     	ds	1
  3777     0040                     ?___flmul:
  3778     0040                     ___flmul@b:	
  3779                           ; 4 bytes @ 0x20
  3780                           
  3781                           
  3782                           ; 4 bytes @ 0x20
  3783     0040                     	ds	4
  3784     0044                     ___flmul@a:
  3785                           
  3786                           ; 4 bytes @ 0x24
  3787     0044                     	ds	4
  3788     0048                     ??___flmul:
  3789                           
  3790                           ; 1 bytes @ 0x28
  3791     0048                     	ds	5
  3792     004D                     ___flmul@sign:
  3793                           
  3794                           ; 1 bytes @ 0x2D
  3795     004D                     	ds	1
  3796     004E                     ___flmul@grs:
  3797                           
  3798                           ; 4 bytes @ 0x2E
  3799     004E                     	ds	4
  3800     0052                     ___flmul@aexp:
  3801                           
  3802                           ; 1 bytes @ 0x32
  3803     0052                     	ds	1
  3804     0053                     ___flmul@bexp:
  3805                           
  3806                           ; 1 bytes @ 0x33
  3807     0053                     	ds	1
  3808     0054                     ___flmul@prod:
  3809                           
  3810                           ; 4 bytes @ 0x34
  3811     0054                     	ds	4
  3812     0058                     ___flmul@temp:
  3813                           
  3814                           ; 2 bytes @ 0x38
  3815     0058                     	ds	2
  3816     005A                     ?___fltol:
  3817     005A                     ___fltol@f1:	
  3818                           ; 4 bytes @ 0x3A
  3819                           
  3820                           
  3821                           ; 4 bytes @ 0x3A
  3822     005A                     	ds	4
  3823     005E                     ??___fltol:
  3824                           
  3825                           ; 1 bytes @ 0x3E
  3826     005E                     	ds	4
  3827     0062                     ??_sendInfo:
  3828                           
  3829                           ; 1 bytes @ 0x42
  3830     0062                     	ds	4
  3831     0066                     sendInfo@velocidade:
  3832                           
  3833                           ; 2 bytes @ 0x46
  3834     0066                     	ds	2
  3835     0068                     sendInfo@v:
  3836                           
  3837                           ; 1 bytes @ 0x48
  3838     0068                     	ds	1
  3839     0069                     sendInfo@destinoAtual:
  3840                           
  3841                           ; 1 bytes @ 0x49
  3842     0069                     	ds	1
  3843     006A                     sendInfo@i:
  3844                           
  3845                           ; 1 bytes @ 0x4A
  3846     006A                     	ds	1
  3847     006B                     sendInfo@mascara:
  3848                           
  3849                           ; 1 bytes @ 0x4B
  3850     006B                     	ds	1
  3851     006C                     sendInfo@bcd:
  3852                           
  3853                           ; 2 bytes @ 0x4C
  3854     006C                     	ds	2
  3855                           
  3856                           	psect	maintext
  3857     070C                     __pmaintext:	
  3858 ;;
  3859 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3860 ;;
  3861 ;; *************** function _main *****************
  3862 ;; Defined at:
  3863 ;;		line 427 in file "main.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : B1F/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3877 ;;      Params:         0       0       0       0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0
  3879 ;;      Temps:          0       0       2       0       0       0
  3880 ;;      Totals:         0       0       2       0       0       0
  3881 ;;Total ram usage:        2 bytes
  3882 ;; Hardware stack levels required when called: 11
  3883 ;; This function calls:
  3884 ;;		_CCP4_SetCallBack
  3885 ;;		_EUSART_Read
  3886 ;;		_EUSART_is_rx_ready
  3887 ;;		_IOCBF0_SetInterruptHandler
  3888 ;;		_IOCBF3_SetInterruptHandler
  3889 ;;		_SPI1_Open
  3890 ;;		_SYSTEM_Initialize
  3891 ;;		_TMR0_SetInterruptHandler
  3892 ;;		_TMR4_SetInterruptHandler
  3893 ;;		_chegadaS1
  3894 ;;		_initMatrix
  3895 ;;		_isValidFloor
  3896 ;;		_organizaTrajeto
  3897 ;; This function is called by:
  3898 ;;		Startup code after reset
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902     070C                     _main:	
  3903                           ;psect for function _main
  3904                           
  3905     070C                     l4517:	
  3906                           ;incstack = 0
  3907                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3908                           
  3909                           
  3910                           ;main.c: 430:     SYSTEM_Initialize();
  3911     070C  318B  236D  3187   	fcall	_SYSTEM_Initialize
  3912                           
  3913                           ;main.c: 439:     IOCBF0_SetInterruptHandler(chegadaS1);
  3914     070F  30FE               	movlw	low _chegadaS1
  3915     0710  0021               	movlb	1	; select bank1
  3916     0711  00CE               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  3917     0712  300B               	movlw	high _chegadaS1
  3918     0713  00CF               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3919     0714  3188  2097  3187   	fcall	_IOCBF0_SetInterruptHandler
  3920                           
  3921                           ;main.c: 440:     IOCBF3_SetInterruptHandler(chegadaS2);
  3922     0717  3083               	movlw	low _chegadaS2
  3923     0718  0021               	movlb	1	; select bank1
  3924     0719  00CE               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3925     071A  300C               	movlw	high _chegadaS2
  3926     071B  00CF               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3927     071C  3188  209D  3187   	fcall	_IOCBF3_SetInterruptHandler
  3928                           
  3929                           ;main.c: 441:     TMR4_SetInterruptHandler(controleMovimento);
  3930     071F  3064               	movlw	low _controleMovimento
  3931     0720  0021               	movlb	1	; select bank1
  3932     0721  00CE               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  3933     0722  300E               	movlw	high _controleMovimento
  3934     0723  00CF               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3935     0724  3188  20A9  3187   	fcall	_TMR4_SetInterruptHandler
  3936                           
  3937                           ;main.c: 442:     TMR0_SetInterruptHandler(sendInfo);
  3938     0727  30AA               	movlw	low _sendInfo
  3939     0728  0021               	movlb	1	; select bank1
  3940     0729  00CE               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3941     072A  3002               	movlw	high _sendInfo
  3942     072B  00CF               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3943     072C  3188  20A3  3187   	fcall	_TMR0_SetInterruptHandler
  3944                           
  3945                           ;main.c: 443:     CCP4_SetCallBack(interrupcaoCCP4);
  3946     072F  3019               	movlw	low _interrupcaoCCP4
  3947     0730  0021               	movlb	1	; select bank1
  3948     0731  00CE               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  3949     0732  300B               	movlw	high _interrupcaoCCP4
  3950     0733  00CF               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  3951     0734  3188  2085  3187   	fcall	_CCP4_SetCallBack
  3952     0737                     l4519:
  3953     0737  0022               	movlb	2	; select bank2
  3954     0738  148D               	bsf	13,1	;volatile
  3955     0739                     l4521:
  3956                           
  3957                           ;main.c: 447:     SPI1_Open(SPI1_DEFAULT);
  3958     0739  3000               	movlw	0
  3959     073A  318C  24DA  3187   	fcall	_SPI1_Open
  3960     073D                     l4523:
  3961                           
  3962                           ;main.c: 448:     initMatrix();
  3963     073D  318C  2434  3187   	fcall	_initMatrix
  3964     0740                     l4525:
  3965                           
  3966                           ;main.c: 451:     (INTCONbits.GIE = 1);
  3967     0740  178B               	bsf	11,7	;volatile
  3968     0741                     l4527:
  3969                           
  3970                           ;main.c: 454:     (INTCONbits.PEIE = 1);
  3971     0741  170B               	bsf	11,6	;volatile
  3972                           
  3973                           ;main.c: 461:     chegadaS1();
  3974     0742  318B  23FE  3187   	fcall	_chegadaS1
  3975     0745                     l4529:
  3976                           
  3977                           ;main.c: 463:     {;main.c: 465:         if(EUSART_is_rx_ready()){
  3978     0745  3188  2074  3187   	fcall	_EUSART_is_rx_ready
  3979     0748  3A00               	xorlw	0
  3980     0749  1903               	skipnz
  3981     074A  2F4C               	goto	u3671
  3982     074B  2F4D               	goto	u3670
  3983     074C                     u3671:
  3984     074C  2F45               	goto	l4529
  3985     074D                     u3670:
  3986     074D                     l4531:
  3987                           
  3988                           ;main.c: 466:             rxValue = EUSART_Read();
  3989     074D  3189  2157  3187   	fcall	_EUSART_Read
  3990     0750  0021               	movlb	1	; select bank1
  3991     0751  00C8               	movwf	_rxValue^(0+128)
  3992     0752                     l4533:
  3993                           
  3994                           ;main.c: 467:             if(rxValue == '$') state = START;
  3995     0752  3024               	movlw	36
  3996     0753  0648               	xorwf	_rxValue^(0+128),w
  3997     0754  1D03               	btfss	3,2
  3998     0755  2F57               	goto	u3681
  3999     0756  2F58               	goto	u3680
  4000     0757                     u3681:
  4001     0757  2F99               	goto	l4569
  4002     0758                     u3680:
  4003     0758                     l4535:
  4004     0758  01CA               	clrf	_state^(0+128)
  4005     0759  2F99               	goto	l4569
  4006     075A                     l4537:
  4007                           
  4008                           ;main.c: 470:                     if(rxValue == '$'){
  4009     075A  3024               	movlw	36
  4010     075B  0648               	xorwf	_rxValue^(0+128),w
  4011     075C  1D03               	btfss	3,2
  4012     075D  2F5F               	goto	u3691
  4013     075E  2F60               	goto	u3690
  4014     075F                     u3691:
  4015     075F  2FAF               	goto	l942
  4016     0760                     u3690:
  4017     0760                     l4539:
  4018                           
  4019                           ;main.c: 471:                         state = FIRST_NUM;
  4020     0760  01CA               	clrf	_state^(0+128)
  4021     0761  0ACA               	incf	_state^(0+128),f
  4022     0762  2F45               	goto	l4529
  4023     0763                     l4541:
  4024                           
  4025                           ;main.c: 475:                     if(isValidFloor(rxValue)){
  4026     0763  0848               	movf	_rxValue^(0+128),w
  4027     0764  3189  21D1  3187   	fcall	_isValidFloor
  4028     0767  3A00               	xorlw	0
  4029     0768  1903               	skipnz
  4030     0769  2F6B               	goto	u3701
  4031     076A  2F6C               	goto	u3700
  4032     076B                     u3701:
  4033     076B  2F73               	goto	l4547
  4034     076C                     u3700:
  4035     076C                     l4543:
  4036                           
  4037                           ;main.c: 476:                         oTemp = rxValue - 0x30;
  4038     076C  0021               	movlb	1	; select bank1
  4039     076D  0848               	movf	_rxValue^(0+128),w
  4040     076E  3ED0               	addlw	208
  4041     076F  00C3               	movwf	_oTemp^(0+128)
  4042     0770                     l4545:
  4043                           
  4044                           ;main.c: 477:                         state = SECOND_NUM;
  4045     0770  3002               	movlw	2
  4046     0771  00CA               	movwf	_state^(0+128)
  4047                           
  4048                           ;main.c: 478:                     }else{
  4049     0772  2F45               	goto	l4529
  4050     0773                     l4547:
  4051                           
  4052                           ;main.c: 479:                         state = START;
  4053     0773  0021               	movlb	1	; select bank1
  4054     0774  01CA               	clrf	_state^(0+128)
  4055     0775  2F45               	goto	l4529
  4056     0776                     l4549:
  4057                           
  4058                           ;main.c: 483:                     if(isValidFloor(rxValue)){
  4059     0776  0848               	movf	_rxValue^(0+128),w
  4060     0777  3189  21D1  3187   	fcall	_isValidFloor
  4061     077A  3A00               	xorlw	0
  4062     077B  1903               	skipnz
  4063     077C  2F7E               	goto	u3711
  4064     077D  2F7F               	goto	u3710
  4065     077E                     u3711:
  4066     077E  2F73               	goto	l4547
  4067     077F                     u3710:
  4068     077F                     l4551:
  4069                           
  4070                           ;main.c: 484:                         dTemp = rxValue - 0x30;
  4071     077F  0021               	movlb	1	; select bank1
  4072     0780  0848               	movf	_rxValue^(0+128),w
  4073     0781  3ED0               	addlw	208
  4074     0782  00C2               	movwf	_dTemp^(0+128)
  4075     0783                     l4553:
  4076                           
  4077                           ;main.c: 485:                         state = CR;
  4078     0783  3003               	movlw	3
  4079     0784  00CA               	movwf	_state^(0+128)
  4080                           
  4081                           ;main.c: 486:                     }else{
  4082     0785  2F45               	goto	l4529
  4083     0786                     l4557:
  4084                           
  4085                           ;main.c: 491:                     if(rxValue == 0x0D){
  4086     0786  300D               	movlw	13
  4087     0787  0648               	xorwf	_rxValue^(0+128),w
  4088     0788  1D03               	btfss	3,2
  4089     0789  2F8B               	goto	u3721
  4090     078A  2F8C               	goto	u3720
  4091     078B                     u3721:
  4092     078B  2F73               	goto	l4547
  4093     078C                     u3720:
  4094     078C                     l4559:
  4095                           
  4096                           ;main.c: 492:                         origem = oTemp;
  4097     078C  0843               	movf	_oTemp^(0+128),w
  4098     078D  00CC               	movwf	_origem^(0+128)
  4099                           
  4100                           ;main.c: 493:                         destino = dTemp;
  4101     078E  0842               	movf	_dTemp^(0+128),w
  4102     078F  00CB               	movwf	_destino^(0+128)
  4103     0790                     l4561:
  4104                           
  4105                           ;main.c: 495:                         organizaTrajeto();
  4106     0790  3187  27B2  3187   	fcall	_organizaTrajeto
  4107     0793                     l4563:
  4108                           
  4109                           ;main.c: 496:                         contComandos++;
  4110     0793  3001               	movlw	1
  4111     0794  0021               	movlb	1	; select bank1
  4112     0795  00DF               	movwf	??_main^(0+128)
  4113     0796  085F               	movf	??_main^(0+128),w
  4114     0797  07C5               	addwf	_contComandos^(0+128),f
  4115     0798  2F73               	goto	l4547
  4116     0799                     l4569:
  4117     0799  084A               	movf	_state^(0+128),w
  4118     079A  00DF               	movwf	??_main^(0+128)
  4119     079B  01E0               	clrf	(??_main^(0+128)+1)
  4120                           
  4121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4122                           ; Switch size 1, requested type "simple"
  4123                           ; Number of cases is 1, Range of values is 0 to 0
  4124                           ; switch strategies available:
  4125                           ; Name         Instructions Cycles
  4126                           ; simple_byte            4     3 (average)
  4127                           ; direct_byte            8     6 (fixed)
  4128                           ; jumptable            260     6 (fixed)
  4129                           ;	Chosen strategy is simple_byte
  4130     079C  0860               	movf	(??_main+1)^(0+128),w
  4131     079D  3A00               	xorlw	0	; case 0
  4132     079E  1903               	skipnz
  4133     079F  2FA1               	goto	l4667
  4134     07A0  2F73               	goto	l4547
  4135     07A1                     l4667:
  4136                           
  4137                           ; Switch size 1, requested type "simple"
  4138                           ; Number of cases is 4, Range of values is 0 to 3
  4139                           ; switch strategies available:
  4140                           ; Name         Instructions Cycles
  4141                           ; simple_byte           13     7 (average)
  4142                           ; direct_byte           14     6 (fixed)
  4143                           ; jumptable            260     6 (fixed)
  4144                           ;	Chosen strategy is simple_byte
  4145     07A1  085F               	movf	??_main^(0+128),w
  4146     07A2  3A00               	xorlw	0	; case 0
  4147     07A3  1903               	skipnz
  4148     07A4  2F5A               	goto	l4537
  4149     07A5  3A01               	xorlw	1	; case 1
  4150     07A6  1903               	skipnz
  4151     07A7  2F63               	goto	l4541
  4152     07A8  3A03               	xorlw	3	; case 2
  4153     07A9  1903               	skipnz
  4154     07AA  2F76               	goto	l4549
  4155     07AB  3A01               	xorlw	1	; case 3
  4156     07AC  1903               	skipnz
  4157     07AD  2F86               	goto	l4557
  4158     07AE  2F73               	goto	l4547
  4159     07AF                     l942:	
  4160                           ;main.c: 503:         }
  4161                           
  4162     07AF  2F45               	goto	l4529
  4163     07B0  3180  2856         	ljmp	start
  4164     07B2                     __end_of_main:
  4165                           
  4166                           	psect	text1
  4167     07B2                     __ptext1:	
  4168 ;; *************** function _organizaTrajeto *****************
  4169 ;; Defined at:
  4170 ;;		line 52 in file "main.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  mascaraDesti    1    3[BANK1 ] unsigned char 
  4175 ;;  mascaraOrige    1    2[BANK1 ] unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, pclath, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4185 ;;      Params:         0       0       0       0       0       0
  4186 ;;      Locals:         0       0       2       0       0       0
  4187 ;;      Temps:          0       0       1       0       0       0
  4188 ;;      Totals:         0       0       3       0       0       0
  4189 ;;Total ram usage:        3 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; Hardware stack levels required when called: 8
  4192 ;; This function calls:
  4193 ;;		_TMR4_WriteTimer
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199     07B2                     _organizaTrajeto:	
  4200                           ;psect for function _organizaTrajeto
  4201                           
  4202     07B2                     l4371:	
  4203                           ;incstack = 0
  4204                           ; Regs used in _organizaTrajeto: [wreg+status,2+status,0+pclath+cstack]
  4205                           
  4206                           
  4207                           ;main.c: 53:     uint8_t mascaraOrigem = 1<<origem;
  4208     07B2  3001               	movlw	1
  4209     07B3  0021               	movlb	1	; select bank1
  4210     07B4  00CF               	movwf	??_organizaTrajeto^(0+128)
  4211     07B5  0A4C               	incf	_origem^(0+128),w
  4212     07B6  2FB8               	goto	u3424
  4213     07B7                     u3425:
  4214     07B7  35CF               	lslf	??_organizaTrajeto^(0+128),f
  4215     07B8                     u3424:
  4216     07B8  0B89               	decfsz	9,f
  4217     07B9  2FB7               	goto	u3425
  4218     07BA  084F               	movf	??_organizaTrajeto^(0+128),w
  4219     07BB  00D0               	movwf	organizaTrajeto@mascaraOrigem^(0+128)
  4220                           
  4221                           ;main.c: 54:     uint8_t mascaraDestino = 1<<destino;
  4222     07BC  3001               	movlw	1
  4223     07BD  00CF               	movwf	??_organizaTrajeto^(0+128)
  4224     07BE  0A4B               	incf	_destino^(0+128),w
  4225     07BF  2FC1               	goto	u3434
  4226     07C0                     u3435:
  4227     07C0  35CF               	lslf	??_organizaTrajeto^(0+128),f
  4228     07C1                     u3434:
  4229     07C1  0B89               	decfsz	9,f
  4230     07C2  2FC0               	goto	u3435
  4231     07C3  084F               	movf	??_organizaTrajeto^(0+128),w
  4232     07C4  00D1               	movwf	organizaTrajeto@mascaraDestino^(0+128)
  4233                           
  4234                           ;main.c: 56:     if(origem == 0){
  4235     07C5  084C               	movf	_origem^(0+128),w
  4236     07C6  1D03               	btfss	3,2
  4237     07C7  2FC9               	goto	u3441
  4238     07C8  2FCA               	goto	u3440
  4239     07C9                     u3441:
  4240     07C9  2FCE               	goto	l4375
  4241     07CA                     u3440:
  4242     07CA                     l4373:
  4243                           
  4244                           ;main.c: 57:         destinoSub = destinoSub | mascaraDestino;
  4245     07CA  083E               	movf	_destinoSub^(0+128),w
  4246     07CB  0451               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4247     07CC  00BE               	movwf	_destinoSub^(0+128)
  4248                           
  4249                           ;main.c: 58:     }else if (origem < destino)
  4250     07CD  2FE5               	goto	l807
  4251     07CE                     l4375:
  4252     07CE  084B               	movf	_destino^(0+128),w
  4253     07CF  024C               	subwf	_origem^(0+128),w
  4254     07D0  1803               	skipnc
  4255     07D1  2FD3               	goto	u3451
  4256     07D2  2FD4               	goto	u3450
  4257     07D3                     u3451:
  4258     07D3  2FD9               	goto	l4379
  4259     07D4                     u3450:
  4260     07D4                     l4377:
  4261                           
  4262                           ;main.c: 59:     {;main.c: 60:         destinoSub =destinoSub | mascaraOrigem | mascaraD
      +                          estino;
  4263     07D4  083E               	movf	_destinoSub^(0+128),w
  4264     07D5  0450               	iorwf	organizaTrajeto@mascaraOrigem^(0+128),w
  4265     07D6  0451               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4266     07D7  00BE               	movwf	_destinoSub^(0+128)
  4267                           
  4268                           ;main.c: 61:     }else if(origem > destino){
  4269     07D8  2FE5               	goto	l807
  4270     07D9                     l4379:
  4271     07D9  084C               	movf	_origem^(0+128),w
  4272     07DA  024B               	subwf	_destino^(0+128),w
  4273     07DB  1803               	skipnc
  4274     07DC  2FDE               	goto	u3461
  4275     07DD  2FDF               	goto	u3460
  4276     07DE                     u3461:
  4277     07DE  2FE5               	goto	l807
  4278     07DF                     u3460:
  4279     07DF                     l4381:
  4280                           
  4281                           ;main.c: 64:         destinoSub = destinoSub| mascaraOrigem;
  4282     07DF  083E               	movf	_destinoSub^(0+128),w
  4283     07E0  0450               	iorwf	organizaTrajeto@mascaraOrigem^(0+128),w
  4284     07E1  00BE               	movwf	_destinoSub^(0+128)
  4285                           
  4286                           ;main.c: 65:         destinoDesc = destinoDesc| mascaraDestino;
  4287     07E2  083D               	movf	_destinoDesc^(0+128),w
  4288     07E3  0451               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4289     07E4  00BD               	movwf	_destinoDesc^(0+128)
  4290     07E5                     l807:
  4291                           
  4292                           ;main.c: 68:     if (mov == RetornaS0)
  4293     07E5  3003               	movlw	3
  4294     07E6  0649               	xorwf	_mov^(0+128),w
  4295     07E7  1D03               	btfss	3,2
  4296     07E8  2FEA               	goto	u3471
  4297     07E9  2FEB               	goto	u3470
  4298     07EA                     u3471:
  4299     07EA  2FF2               	goto	l4387
  4300     07EB                     u3470:
  4301     07EB                     l4383:
  4302                           
  4303                           ;main.c: 69:     {;main.c: 70:         mov = EmTrajeto;
  4304     07EB  3002               	movlw	2
  4305     07EC  00C9               	movwf	_mov^(0+128)
  4306     07ED                     l4385:
  4307                           
  4308                           ;main.c: 72:         TMR4_WriteTimer(0);
  4309     07ED  3000               	movlw	0
  4310     07EE  3188  20AF  3187   	fcall	_TMR4_WriteTimer
  4311                           
  4312                           ;main.c: 74:     }else{
  4313     07F1  2FF4               	goto	l813
  4314     07F2                     l4387:
  4315                           
  4316                           ;main.c: 75:         mov = EmTrajeto;
  4317     07F2  3002               	movlw	2
  4318     07F3  00C9               	movwf	_mov^(0+128)
  4319     07F4                     l813:
  4320     07F4  0008               	return
  4321     07F5                     __end_of_organizaTrajeto:
  4322                           
  4323                           	psect	text2
  4324     08AF                     __ptext2:	
  4325 ;; *************** function _TMR4_WriteTimer *****************
  4326 ;; Defined at:
  4327 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  timerVal        1    wreg     unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  timerVal        1    0[BANK1 ] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4341 ;;      Params:         0       0       0       0       0       0
  4342 ;;      Locals:         0       0       1       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0
  4344 ;;      Totals:         0       0       1       0       0       0
  4345 ;;Total ram usage:        1 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 7
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_organizaTrajeto
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355     08AF                     _TMR4_WriteTimer:	
  4356                           ;psect for function _TMR4_WriteTimer
  4357                           
  4358                           
  4359                           ;incstack = 0
  4360                           ; Regs used in _TMR4_WriteTimer: [wreg]
  4361                           ;TMR4_WriteTimer@timerVal stored from wreg
  4362     08AF  0021               	movlb	1	; select bank1
  4363     08B0  00CE               	movwf	TMR4_WriteTimer@timerVal^(0+128)
  4364     08B1                     l4235:
  4365                           
  4366                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  4367     08B1  084E               	movf	TMR4_WriteTimer@timerVal^(0+128),w
  4368     08B2  0028               	movlb	8	; select bank8
  4369     08B3  0095               	movwf	21	;volatile
  4370     08B4                     l690:
  4371     08B4  0008               	return
  4372     08B5                     __end_of_TMR4_WriteTimer:
  4373                           
  4374                           	psect	text3
  4375     09D1                     __ptext3:	
  4376 ;; *************** function _isValidFloor *****************
  4377 ;; Defined at:
  4378 ;;		line 81 in file "main.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  floor           1    wreg     unsigned char 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  floor           1    1[BANK1 ] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      _Bool 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4392 ;;      Params:         0       0       0       0       0       0
  4393 ;;      Locals:         0       0       2       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0
  4395 ;;      Totals:         0       0       2       0       0       0
  4396 ;;Total ram usage:        2 bytes
  4397 ;; Hardware stack levels used: 1
  4398 ;; Hardware stack levels required when called: 7
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406     09D1                     _isValidFloor:	
  4407                           ;psect for function _isValidFloor
  4408                           
  4409                           
  4410                           ;incstack = 0
  4411                           ; Regs used in _isValidFloor: [wreg+status,2]
  4412                           ;isValidFloor@floor stored from wreg
  4413     09D1  0021               	movlb	1	; select bank1
  4414     09D2  00CF               	movwf	isValidFloor@floor^(0+128)
  4415     09D3                     l4389:
  4416                           
  4417                           ;main.c: 82:     return floor >= '0' && floor <= '3';
  4418     09D3  01CE               	clrf	_isValidFloor$1576^(0+128)
  4419     09D4                     l4391:
  4420     09D4  3030               	movlw	48
  4421     09D5  024F               	subwf	isValidFloor@floor^(0+128),w
  4422     09D6  1C03               	skipc
  4423     09D7  29D9               	goto	u3481
  4424     09D8  29DA               	goto	u3480
  4425     09D9                     u3481:
  4426     09D9  29E2               	goto	l4397
  4427     09DA                     u3480:
  4428     09DA                     l4393:
  4429     09DA  3034               	movlw	52
  4430     09DB  024F               	subwf	isValidFloor@floor^(0+128),w
  4431     09DC  1803               	skipnc
  4432     09DD  29DF               	goto	u3491
  4433     09DE  29E0               	goto	u3490
  4434     09DF                     u3491:
  4435     09DF  29E2               	goto	l4397
  4436     09E0                     u3490:
  4437     09E0                     l4395:
  4438     09E0  01CE               	clrf	_isValidFloor$1576^(0+128)
  4439     09E1  0ACE               	incf	_isValidFloor$1576^(0+128),f
  4440     09E2                     l4397:
  4441     09E2  084E               	movf	_isValidFloor$1576^(0+128),w
  4442     09E3                     l818:
  4443     09E3  0008               	return
  4444     09E4                     __end_of_isValidFloor:
  4445                           
  4446                           	psect	text4
  4447     0C34                     __ptext4:	
  4448 ;; *************** function _initMatrix *****************
  4449 ;; Defined at:
  4450 ;;		line 211 in file "main.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;		None
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  j               1   16[BANK1 ] unsigned char 
  4455 ;;  i               1   15[BANK1 ] unsigned char 
  4456 ;;  i               1   14[BANK1 ] unsigned char 
  4457 ;;  data            4    9[BANK1 ] unsigned char [4]
  4458 ;;  k               1   13[BANK1 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4468 ;;      Params:         0       0       0       0       0       0
  4469 ;;      Locals:         0       0       8       0       0       0
  4470 ;;      Temps:          0       0       1       0       0       0
  4471 ;;      Totals:         0       0       9       0       0       0
  4472 ;;Total ram usage:        9 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 9
  4475 ;; This function calls:
  4476 ;;		_txSpi
  4477 ;; This function is called by:
  4478 ;;		_main
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482     0C34                     _initMatrix:	
  4483                           ;psect for function _initMatrix
  4484                           
  4485     0C34                     l4401:	
  4486                           ;incstack = 0
  4487                           ; Regs used in _initMatrix: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4488                           
  4489                           
  4490                           ;main.c: 212:     uint8_t data[4];;main.c: 213:     uint8_t k=0;
  4491     0C34  0021               	movlb	1	; select bank1
  4492     0C35  01DB               	clrf	initMatrix@k^(0+128)
  4493                           
  4494                           ;main.c: 214:    for(uint8_t i =0; i<8; i++){
  4495     0C36  01DC               	clrf	initMatrix@i^(0+128)
  4496     0C37                     l4407:
  4497                           
  4498                           ;main.c: 215:             MatrixLed[i] = 0;
  4499     0C37  085C               	movf	initMatrix@i^(0+128),w
  4500     0C38  3EA0               	addlw	(low (_MatrixLed| 0))& (0+255)
  4501     0C39  0086               	movwf	6
  4502     0C3A  0187               	clrf	7
  4503     0C3B  0181               	clrf	1
  4504     0C3C                     l4409:
  4505                           
  4506                           ;main.c: 216:         }
  4507     0C3C  3001               	movlw	1
  4508     0C3D  00D6               	movwf	??_initMatrix^(0+128)
  4509     0C3E  0856               	movf	??_initMatrix^(0+128),w
  4510     0C3F  07DC               	addwf	initMatrix@i^(0+128),f
  4511     0C40                     l4411:
  4512     0C40  3008               	movlw	8
  4513     0C41  025C               	subwf	initMatrix@i^(0+128),w
  4514     0C42  1C03               	skipc
  4515     0C43  2C45               	goto	u3501
  4516     0C44  2C46               	goto	u3500
  4517     0C45                     u3501:
  4518     0C45  2C37               	goto	l4407
  4519     0C46                     u3500:
  4520     0C46                     l4413:
  4521                           
  4522                           ;main.c: 217:     for(uint8_t i=0;i<6;i++){
  4523     0C46  01DD               	clrf	initMatrix@i_1620^(0+128)
  4524     0C47                     l4419:
  4525                           
  4526                           ;main.c: 218:         for(uint8_t j=0;j<4;j=j+2){
  4527     0C47  01DE               	clrf	initMatrix@j^(0+128)
  4528     0C48                     l4425:
  4529                           
  4530                           ;main.c: 219:             data[j]= matrix_conf[k];
  4531     0C48  085E               	movf	initMatrix@j^(0+128),w
  4532     0C49  3ED7               	addlw	(low (initMatrix@data| 0))& (0+255)
  4533     0C4A  0086               	movwf	6
  4534     0C4B  0187               	clrf	7
  4535     0C4C  085B               	movf	initMatrix@k^(0+128),w
  4536     0C4D  3EF5               	addlw	low (_matrix_conf| (0+32768))
  4537     0C4E  0084               	movwf	4
  4538     0C4F  3087               	movlw	high (_matrix_conf| (0+32768))
  4539     0C50  1803               	skipnc
  4540     0C51  3E01               	addlw	1
  4541     0C52  0085               	movwf	5
  4542     0C53  0800               	movf	0,w	;code access
  4543     0C54  0081               	movwf	1
  4544                           
  4545                           ;main.c: 220:             data[j+1]= matrix_conf[k+1];
  4546     0C55  085E               	movf	initMatrix@j^(0+128),w
  4547     0C56  3E01               	addlw	1
  4548     0C57  3ED7               	addlw	(low (initMatrix@data| 0))& (0+255)
  4549     0C58  0086               	movwf	6
  4550     0C59  0187               	clrf	7
  4551     0C5A  085B               	movf	initMatrix@k^(0+128),w
  4552     0C5B  3EF6               	addlw	low ((_matrix_conf+1)| (0+32768))
  4553     0C5C  0084               	movwf	4
  4554     0C5D  3087               	movlw	high ((_matrix_conf+1)| (0+32768))
  4555     0C5E  1803               	skipnc
  4556     0C5F  3E01               	addlw	1
  4557     0C60  0085               	movwf	5
  4558     0C61  0800               	movf	0,w	;code access
  4559     0C62  0081               	movwf	1
  4560     0C63                     l4427:
  4561                           
  4562                           ;main.c: 221:         }
  4563     0C63  085E               	movf	initMatrix@j^(0+128),w
  4564     0C64  3E02               	addlw	2
  4565     0C65  00DE               	movwf	initMatrix@j^(0+128)
  4566     0C66                     l4429:
  4567     0C66  3004               	movlw	4
  4568     0C67  025E               	subwf	initMatrix@j^(0+128),w
  4569     0C68  1C03               	skipc
  4570     0C69  2C6B               	goto	u3511
  4571     0C6A  2C6C               	goto	u3510
  4572     0C6B                     u3511:
  4573     0C6B  2C48               	goto	l4425
  4574     0C6C                     u3510:
  4575     0C6C                     l4431:
  4576                           
  4577                           ;main.c: 222:         k=k+2;
  4578     0C6C  085B               	movf	initMatrix@k^(0+128),w
  4579     0C6D  3E02               	addlw	2
  4580     0C6E  00DB               	movwf	initMatrix@k^(0+128)
  4581     0C6F                     l4433:
  4582                           
  4583                           ;main.c: 223:         txSpi( data, 4);
  4584     0C6F  3004               	movlw	4
  4585     0C70  00D3               	movwf	txSpi@dataSize^(0+128)
  4586     0C71  3000               	movlw	0
  4587     0C72  00D4               	movwf	(txSpi@dataSize^(0+128)+1)
  4588     0C73  30D7               	movlw	(low (initMatrix@data| 0))& (0+255)
  4589     0C74  3189  2167  318C   	fcall	_txSpi
  4590     0C77                     l4437:
  4591                           
  4592                           ;main.c: 227:     }
  4593     0C77  3001               	movlw	1
  4594     0C78  0021               	movlb	1	; select bank1
  4595     0C79  00D6               	movwf	??_initMatrix^(0+128)
  4596     0C7A  0856               	movf	??_initMatrix^(0+128),w
  4597     0C7B  07DD               	addwf	initMatrix@i_1620^(0+128),f
  4598     0C7C                     l4439:
  4599     0C7C  3006               	movlw	6
  4600     0C7D  025D               	subwf	initMatrix@i_1620^(0+128),w
  4601     0C7E  1C03               	skipc
  4602     0C7F  2C81               	goto	u3521
  4603     0C80  2C82               	goto	u3520
  4604     0C81                     u3521:
  4605     0C81  2C47               	goto	l4419
  4606     0C82                     u3520:
  4607     0C82                     l869:
  4608     0C82  0008               	return
  4609     0C83                     __end_of_initMatrix:
  4610                           
  4611                           	psect	text5
  4612     0BFE                     __ptext5:	
  4613 ;; *************** function _chegadaS1 *****************
  4614 ;; Defined at:
  4615 ;;		line 283 in file "main.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4629 ;;      Params:         0       0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0
  4632 ;;      Totals:         0       0       0       0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 10
  4636 ;; This function calls:
  4637 ;;		_TMR4_StartTimer
  4638 ;;		_matrixUpdate
  4639 ;; This function is called by:
  4640 ;;		_main
  4641 ;;		_IOCBF0_ISR
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645     0BFE                     _chegadaS1:	
  4646                           ;psect for function _chegadaS1
  4647                           
  4648                           
  4649                           ;Skip over the trampoline to the duplicate function for level 1
  4650     0BFE  1C7E               	btfss	int$flags,0
  4651     0BFF  2C02               	goto	_chegadaS1$intlevel0
  4652     0C00  318B  2BCC         	ljmp	i1_chegadaS1
  4653     0C02                     _chegadaS1$intlevel0:
  4654     0C02                     l4441:	
  4655                           ;incstack = 0
  4656                           ; Regs used in _chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4657                           
  4658                           
  4659                           ;main.c: 285:     motor = 0;
  4660     0C02  0021               	movlb	1	; select bank1
  4661     0C03  01BF               	clrf	_motor^(0+128)
  4662                           
  4663                           ;main.c: 286:     andarAtual = 0;
  4664     0C04  01C1               	clrf	_andarAtual^(0+128)
  4665     0C05                     l4443:
  4666                           
  4667                           ;main.c: 287:     pulsoEncoder = 1;
  4668     0C05  01CD               	clrf	_pulsoEncoder^(0+128)
  4669     0C06  0ACD               	incf	_pulsoEncoder^(0+128),f
  4670     0C07                     l4445:
  4671                           
  4672                           ;main.c: 291:     MatrixLed[0] = 0b01111110;
  4673     0C07  307E               	movlw	126
  4674     0C08  00A0               	movwf	_MatrixLed^(0+128)
  4675     0C09                     l4447:
  4676                           
  4677                           ;main.c: 292:     MatrixLed[1] = 0b10000001;
  4678     0C09  3081               	movlw	129
  4679     0C0A  00A1               	movwf	(_MatrixLed^(0+128)+1)
  4680     0C0B                     l4449:
  4681                           
  4682                           ;main.c: 293:     MatrixLed[2] = 0b10000001;
  4683     0C0B  3081               	movlw	129
  4684     0C0C  00A2               	movwf	(_MatrixLed^(0+128)+2)
  4685     0C0D                     l4451:
  4686                           
  4687                           ;main.c: 294:     MatrixLed[3] = 0b01111110;
  4688     0C0D  307E               	movlw	126
  4689     0C0E  00A3               	movwf	(_MatrixLed^(0+128)+3)
  4690                           
  4691                           ;main.c: 295:     MatrixLed[4] = 0;
  4692     0C0F  01A4               	clrf	(_MatrixLed^(0+128)+4)
  4693     0C10                     l4453:
  4694                           
  4695                           ;main.c: 296:     MatrixLed[5] = 0b00100000;
  4696     0C10  3020               	movlw	32
  4697     0C11  00A5               	movwf	(_MatrixLed^(0+128)+5)
  4698     0C12                     l4455:
  4699                           
  4700                           ;main.c: 297:     MatrixLed[6] = 0b00100000;
  4701     0C12  3020               	movlw	32
  4702     0C13  00A6               	movwf	(_MatrixLed^(0+128)+6)
  4703     0C14                     l4457:
  4704                           
  4705                           ;main.c: 298:     MatrixLed[7] = 0b00100000;
  4706     0C14  3020               	movlw	32
  4707     0C15  00A7               	movwf	(_MatrixLed^(0+128)+7)
  4708     0C16                     l4459:
  4709                           
  4710                           ;main.c: 299:     if(subindo){
  4711     0C16  0020               	movlb	0	; select bank0
  4712     0C17  086F               	movf	_subindo,w
  4713     0C18  1903               	btfsc	3,2
  4714     0C19  2C1B               	goto	u3531
  4715     0C1A  2C1C               	goto	u3530
  4716     0C1B                     u3531:
  4717     0C1B  2C21               	goto	l4463
  4718     0C1C                     u3530:
  4719     0C1C                     l4461:
  4720                           
  4721                           ;main.c: 300:         destinoSub = destinoSub & 0b11111110;
  4722     0C1C  0021               	movlb	1	; select bank1
  4723     0C1D  083E               	movf	_destinoSub^(0+128),w
  4724     0C1E  39FE               	andlw	254
  4725     0C1F  00BE               	movwf	_destinoSub^(0+128)
  4726                           
  4727                           ;main.c: 301:     }else{
  4728     0C20  2C29               	goto	l4469
  4729     0C21                     l4463:
  4730                           
  4731                           ;main.c: 302:         destinoDesc = destinoDesc & 0b11111110;
  4732     0C21  0021               	movlb	1	; select bank1
  4733     0C22  083D               	movf	_destinoDesc^(0+128),w
  4734     0C23  39FE               	andlw	254
  4735     0C24  00BD               	movwf	_destinoDesc^(0+128)
  4736     0C25                     l4465:
  4737                           
  4738                           ;main.c: 303:         mov = Repouso;
  4739     0C25  01C9               	clrf	_mov^(0+128)
  4740     0C26                     l4467:
  4741                           
  4742                           ;main.c: 305:         TMR4_StartTimer();
  4743     0C26  3188  2064  318B   	fcall	_TMR4_StartTimer
  4744     0C29                     l4469:
  4745                           
  4746                           ;main.c: 307:     matrixUpdate();
  4747     0C29  318A  228E  318B   	fcall	_matrixUpdate
  4748     0C2C                     l4471:
  4749                           
  4750                           ;main.c: 309:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  4751     0C2C  0021               	movlb	1	; select bank1
  4752     0C2D  0827               	movf	(_MatrixLed^(0+128)+7),w
  4753     0C2E  043E               	iorwf	_destinoSub^(0+128),w
  4754     0C2F  00A7               	movwf	(_MatrixLed^(0+128)+7)
  4755     0C30                     l4473:
  4756                           
  4757                           ;main.c: 310:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  4758     0C30  0826               	movf	(_MatrixLed^(0+128)+6),w
  4759     0C31  043D               	iorwf	_destinoDesc^(0+128),w
  4760     0C32  00A6               	movwf	(_MatrixLed^(0+128)+6)
  4761     0C33                     l899:
  4762     0C33  0008               	return
  4763     0C34                     __end_of_chegadaS1:
  4764                           
  4765                           	psect	text6
  4766     0A8E                     __ptext6:	
  4767 ;; *************** function _matrixUpdate *****************
  4768 ;; Defined at:
  4769 ;;		line 191 in file "main.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  i               1    0        unsigned char 
  4774 ;;  i               1   10[BANK1 ] unsigned char 
  4775 ;;  index           1    0        unsigned char 
  4776 ;;  data            2    8[BANK1 ] unsigned char [2]
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4786 ;;      Params:         0       0       0       0       0       0
  4787 ;;      Locals:         0       0       3       0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0
  4789 ;;      Totals:         0       0       3       0       0       0
  4790 ;;Total ram usage:        3 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; Hardware stack levels required when called: 9
  4793 ;; This function calls:
  4794 ;;		_txSpi
  4795 ;; This function is called by:
  4796 ;;		_chegadaS1
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800     0A8E                     _matrixUpdate:	
  4801                           ;psect for function _matrixUpdate
  4802                           
  4803     0A8E                     l4253:	
  4804                           ;incstack = 0
  4805                           ; Regs used in _matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4806                           
  4807                           
  4808                           ;main.c: 194:         for(uint8_t i=8;i>0;i--){
  4809     0A8E  3008               	movlw	8
  4810     0A8F  0021               	movlb	1	; select bank1
  4811     0A90  00D8               	movwf	matrixUpdate@i^(0+128)
  4812     0A91                     l4259:
  4813                           
  4814                           ;main.c: 195:             data[0] = i;
  4815     0A91  0858               	movf	matrixUpdate@i^(0+128),w
  4816     0A92  00D6               	movwf	matrixUpdate@data^(0+128)
  4817     0A93                     l4261:
  4818                           
  4819                           ;main.c: 196:             data[1] = MatrixLed[i-1];
  4820     0A93  0858               	movf	matrixUpdate@i^(0+128),w
  4821     0A94  3E9F               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
  4822     0A95  0086               	movwf	6
  4823     0A96  0187               	clrf	7
  4824     0A97  0801               	movf	1,w
  4825     0A98  00D7               	movwf	(matrixUpdate@data^(0+128)+1)
  4826     0A99                     l4263:
  4827                           
  4828                           ;main.c: 197:             txSpi(data, 2);
  4829     0A99  3002               	movlw	2
  4830     0A9A  00D3               	movwf	txSpi@dataSize^(0+128)
  4831     0A9B  3000               	movlw	0
  4832     0A9C  00D4               	movwf	(txSpi@dataSize^(0+128)+1)
  4833     0A9D  30D6               	movlw	(low (matrixUpdate@data| 0))& (0+255)
  4834     0A9E  3189  2167  318A   	fcall	_txSpi
  4835     0AA1                     l4265:
  4836                           
  4837                           ;main.c: 198:         }
  4838     0AA1  3001               	movlw	1
  4839     0AA2  0021               	movlb	1	; select bank1
  4840     0AA3  02D8               	subwf	matrixUpdate@i^(0+128),f
  4841     0AA4                     l4267:
  4842     0AA4  0858               	movf	matrixUpdate@i^(0+128),w
  4843     0AA5  1D03               	btfss	3,2
  4844     0AA6  2AA8               	goto	u3331
  4845     0AA7  2AA9               	goto	u3330
  4846     0AA8                     u3331:
  4847     0AA8  2A91               	goto	l4259
  4848     0AA9                     u3330:
  4849     0AA9                     l859:
  4850     0AA9  0008               	return
  4851     0AAA                     __end_of_matrixUpdate:
  4852                           
  4853                           	psect	text7
  4854     0967                     __ptext7:	
  4855 ;; *************** function _txSpi *****************
  4856 ;; Defined at:
  4857 ;;		line 183 in file "main.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  data            1    wreg     PTR unsigned char 
  4860 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4861 ;;  dataSize        2    5[BANK1 ] unsigned int 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  data            1    7[BANK1 ] PTR unsigned char 
  4864 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4874 ;;      Params:         0       0       2       0       0       0
  4875 ;;      Locals:         0       0       1       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0
  4877 ;;      Totals:         0       0       3       0       0       0
  4878 ;;Total ram usage:        3 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 8
  4881 ;; This function calls:
  4882 ;;		_SPI1_ExchangeBlock
  4883 ;; This function is called by:
  4884 ;;		_matrixUpdate
  4885 ;;		_initMatrix
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889     0967                     _txSpi:	
  4890                           ;psect for function _txSpi
  4891                           
  4892                           
  4893                           ;incstack = 0
  4894                           ; Regs used in _txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4895                           ;txSpi@data stored from wreg
  4896     0967  0021               	movlb	1	; select bank1
  4897     0968  00D5               	movwf	txSpi@data^(0+128)
  4898     0969                     l846:	
  4899                           ;main.c: 184:     do { LATBbits.LATB1 = 0; } while(0);
  4900                           
  4901     0969  0022               	movlb	2	; select bank2
  4902     096A  108D               	bcf	13,1	;volatile
  4903     096B                     l3833:
  4904                           
  4905                           ;main.c: 185:     SPI1_ExchangeBlock(data,dataSize);
  4906     096B  0021               	movlb	1	; select bank1
  4907     096C  0854               	movf	(txSpi@dataSize+1)^(0+128),w
  4908     096D  00CF               	movwf	(SPI1_ExchangeBlock@blockSize+1)^(0+128)
  4909     096E  0853               	movf	txSpi@dataSize^(0+128),w
  4910     096F  00CE               	movwf	SPI1_ExchangeBlock@blockSize^(0+128)
  4911     0970  0855               	movf	txSpi@data^(0+128),w
  4912     0971  318B  2343  3189   	fcall	_SPI1_ExchangeBlock
  4913     0974                     l3835:
  4914     0974  0022               	movlb	2	; select bank2
  4915     0975  148D               	bsf	13,1	;volatile
  4916     0976                     l850:
  4917     0976  0008               	return
  4918     0977                     __end_of_txSpi:
  4919                           
  4920                           	psect	text8
  4921     0B43                     __ptext8:	
  4922 ;; *************** function _SPI1_ExchangeBlock *****************
  4923 ;; Defined at:
  4924 ;;		line 100 in file "mcc_generated_files/spi1.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  block           1    wreg     PTR void 
  4927 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4928 ;;  blockSize       2    0[BANK1 ] unsigned int 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  block           1    3[BANK1 ] PTR void 
  4931 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4932 ;;  data            1    4[BANK1 ] PTR unsigned char 
  4933 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4943 ;;      Params:         0       0       2       0       0       0
  4944 ;;      Locals:         0       0       2       0       0       0
  4945 ;;      Temps:          0       0       1       0       0       0
  4946 ;;      Totals:         0       0       5       0       0       0
  4947 ;;Total ram usage:        5 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; Hardware stack levels required when called: 7
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_txSpi
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957     0B43                     _SPI1_ExchangeBlock:	
  4958                           ;psect for function _SPI1_ExchangeBlock
  4959                           
  4960                           
  4961                           ;incstack = 0
  4962                           ; Regs used in _SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4963                           ;SPI1_ExchangeBlock@block stored from wreg
  4964     0B43  0021               	movlb	1	; select bank1
  4965     0B44  00D1               	movwf	SPI1_ExchangeBlock@block^(0+128)
  4966     0B45                     l3279:
  4967                           
  4968                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  4969     0B45  0851               	movf	SPI1_ExchangeBlock@block^(0+128),w
  4970     0B46  00D2               	movwf	SPI1_ExchangeBlock@data^(0+128)
  4971                           
  4972                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4973     0B47  2B60               	goto	l3287
  4974     0B48                     l3281:
  4975                           
  4976                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  4977     0B48  0852               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4978     0B49  0086               	movwf	6
  4979     0B4A  0187               	clrf	7
  4980     0B4B  0801               	movf	1,w
  4981     0B4C  0024               	movlb	4	; select bank4
  4982     0B4D  0091               	movwf	17	;volatile
  4983     0B4E                     l452:	
  4984                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  4985                           
  4986     0B4E  0020               	movlb	0	; select bank0
  4987     0B4F  1D91               	btfss	17,3	;volatile
  4988     0B50  2B52               	goto	u2031
  4989     0B51  2B53               	goto	u2030
  4990     0B52                     u2031:
  4991     0B52  2B4E               	goto	l452
  4992     0B53                     u2030:
  4993     0B53                     l454:
  4994                           
  4995                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  4996     0B53  1191               	bcf	17,3	;volatile
  4997     0B54                     l3283:
  4998                           
  4999                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  5000     0B54  0021               	movlb	1	; select bank1
  5001     0B55  0852               	movf	SPI1_ExchangeBlock@data^(0+128),w
  5002     0B56  0086               	movwf	6
  5003     0B57  0187               	clrf	7
  5004     0B58  0024               	movlb	4	; select bank4
  5005     0B59  0811               	movf	17,w	;volatile
  5006     0B5A  0081               	movwf	1
  5007     0B5B                     l3285:
  5008     0B5B  3001               	movlw	1
  5009     0B5C  0021               	movlb	1	; select bank1
  5010     0B5D  00D0               	movwf	??_SPI1_ExchangeBlock^(0+128)
  5011     0B5E  0850               	movf	??_SPI1_ExchangeBlock^(0+128),w
  5012     0B5F  07D2               	addwf	SPI1_ExchangeBlock@data^(0+128),f
  5013     0B60                     l3287:
  5014                           
  5015                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  5016     0B60  3001               	movlw	1
  5017     0B61  02CE               	subwf	SPI1_ExchangeBlock@blockSize^(0+128),f
  5018     0B62  3000               	movlw	0
  5019     0B63  3BCF               	subwfb	(SPI1_ExchangeBlock@blockSize+1)^(0+128),f
  5020     0B64  0A4E               	incf	SPI1_ExchangeBlock@blockSize^(0+128),w
  5021     0B65  1D03               	skipz
  5022     0B66  2B6B               	goto	u2041
  5023     0B67  0A4F               	incf	(SPI1_ExchangeBlock@blockSize+1)^(0+128),w
  5024     0B68  1D03               	btfss	3,2
  5025     0B69  2B6B               	goto	u2041
  5026     0B6A  2B6C               	goto	u2040
  5027     0B6B                     u2041:
  5028     0B6B  2B48               	goto	l3281
  5029     0B6C                     u2040:
  5030     0B6C                     l456:
  5031     0B6C  0008               	return
  5032     0B6D                     __end_of_SPI1_ExchangeBlock:
  5033                           
  5034                           	psect	text9
  5035     0864                     __ptext9:	
  5036 ;; *************** function _TMR4_StartTimer *****************
  5037 ;; Defined at:
  5038 ;;		line 87 in file "mcc_generated_files/tmr4.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		None
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5052 ;;      Params:         0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0
  5055 ;;      Totals:         0       0       0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; Hardware stack levels required when called: 7
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_chegadaS1
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066     0864                     _TMR4_StartTimer:	
  5067                           ;psect for function _TMR4_StartTimer
  5068                           
  5069     0864                     l4233:	
  5070                           ;incstack = 0
  5071                           ; Regs used in _TMR4_StartTimer: []
  5072                           
  5073                           
  5074                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
  5075     0864  0028               	movlb	8	; select bank8
  5076     0865  1517               	bsf	23,2	;volatile
  5077     0866                     l681:
  5078     0866  0008               	return
  5079     0867                     __end_of_TMR4_StartTimer:
  5080                           
  5081                           	psect	text10
  5082     0B6D                     __ptext10:	
  5083 ;; *************** function _SYSTEM_Initialize *****************
  5084 ;; Defined at:
  5085 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;		None
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      void 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0, pclath, cstack
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5099 ;;      Params:         0       0       0       0       0       0
  5100 ;;      Locals:         0       0       0       0       0       0
  5101 ;;      Temps:          0       0       0       0       0       0
  5102 ;;      Totals:         0       0       0       0       0       0
  5103 ;;Total ram usage:        0 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; Hardware stack levels required when called: 9
  5106 ;; This function calls:
  5107 ;;		_ADC_Initialize
  5108 ;;		_CCP4_Initialize
  5109 ;;		_CMP1_Initialize
  5110 ;;		_CMP2_Initialize
  5111 ;;		_EUSART_Initialize
  5112 ;;		_FVR_Initialize
  5113 ;;		_OSCILLATOR_Initialize
  5114 ;;		_PIN_MANAGER_Initialize
  5115 ;;		_PWM3_Initialize
  5116 ;;		_SPI1_Initialize
  5117 ;;		_TMR0_Initialize
  5118 ;;		_TMR1_Initialize
  5119 ;;		_TMR2_Initialize
  5120 ;;		_TMR4_Initialize
  5121 ;;		_WDT_Initialize
  5122 ;; This function is called by:
  5123 ;;		_main
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127     0B6D                     _SYSTEM_Initialize:	
  5128                           ;psect for function _SYSTEM_Initialize
  5129                           
  5130     0B6D                     l4303:	
  5131                           ;incstack = 0
  5132                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5133                           
  5134                           
  5135                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  5136     0B6D  3188  20EE  318B   	fcall	_SPI1_Initialize
  5137                           
  5138                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5139     0B70  318B  239B  318B   	fcall	_PIN_MANAGER_Initialize
  5140                           
  5141                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5142     0B73  3188  20BB  318B   	fcall	_OSCILLATOR_Initialize
  5143                           
  5144                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  5145     0B76  3188  206B  318B   	fcall	_WDT_Initialize
  5146                           
  5147                           ;mcc_generated_files/mcc.c: 57:     CMP2_Initialize();
  5148     0B79  3189  2105  318B   	fcall	_CMP2_Initialize
  5149                           
  5150                           ;mcc_generated_files/mcc.c: 58:     FVR_Initialize();
  5151     0B7C  3188  2067  318B   	fcall	_FVR_Initialize
  5152                           
  5153                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  5154     0B7F  3189  21BE  318B   	fcall	_TMR4_Initialize
  5155                           
  5156                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  5157     0B82  3188  20CA  318B   	fcall	_TMR2_Initialize
  5158                           
  5159                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  5160     0B85  3189  21E4  318B   	fcall	_TMR0_Initialize
  5161                           
  5162                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  5163     0B88  3188  20F9  318B   	fcall	_CMP1_Initialize
  5164                           
  5165                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  5166     0B8B  3188  20C2  318B   	fcall	_ADC_Initialize
  5167                           
  5168                           ;mcc_generated_files/mcc.c: 64:     CCP4_Initialize();
  5169     0B8E  3189  219A  318B   	fcall	_CCP4_Initialize
  5170                           
  5171                           ;mcc_generated_files/mcc.c: 65:     PWM3_Initialize();
  5172     0B91  3188  20DB  318B   	fcall	_PWM3_Initialize
  5173                           
  5174                           ;mcc_generated_files/mcc.c: 66:     TMR1_Initialize();
  5175     0B94  3189  21AC  318B   	fcall	_TMR1_Initialize
  5176                           
  5177                           ;mcc_generated_files/mcc.c: 67:     EUSART_Initialize();
  5178     0B97  318A  22CD  318B   	fcall	_EUSART_Initialize
  5179     0B9A                     l271:
  5180     0B9A  0008               	return
  5181     0B9B                     __end_of_SYSTEM_Initialize:
  5182                           
  5183                           	psect	text11
  5184     086B                     __ptext11:	
  5185 ;; *************** function _WDT_Initialize *****************
  5186 ;; Defined at:
  5187 ;;		line 80 in file "mcc_generated_files/mcc.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		wreg
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5201 ;;      Params:         0       0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0
  5204 ;;      Totals:         0       0       0       0       0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used: 1
  5207 ;; Hardware stack levels required when called: 7
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_SYSTEM_Initialize
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215     086B                     _WDT_Initialize:	
  5216                           ;psect for function _WDT_Initialize
  5217                           
  5218     086B                     l4151:	
  5219                           ;incstack = 0
  5220                           ; Regs used in _WDT_Initialize: [wreg]
  5221                           
  5222                           
  5223                           ;mcc_generated_files/mcc.c: 83:     WDTCON = 0x16;
  5224     086B  3016               	movlw	22
  5225     086C  0021               	movlb	1	; select bank1
  5226     086D  0097               	movwf	23	;volatile
  5227     086E                     l277:
  5228     086E  0008               	return
  5229     086F                     __end_of_WDT_Initialize:
  5230                           
  5231                           	psect	text12
  5232     09BE                     __ptext12:	
  5233 ;; *************** function _TMR4_Initialize *****************
  5234 ;; Defined at:
  5235 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;		None
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;		None
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      void 
  5242 ;; Registers used:
  5243 ;;		wreg, status,2, status,0, pclath, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5249 ;;      Params:         0       0       0       0       0       0
  5250 ;;      Locals:         0       0       0       0       0       0
  5251 ;;      Temps:          0       0       0       0       0       0
  5252 ;;      Totals:         0       0       0       0       0       0
  5253 ;;Total ram usage:        0 bytes
  5254 ;; Hardware stack levels used: 1
  5255 ;; Hardware stack levels required when called: 8
  5256 ;; This function calls:
  5257 ;;		_TMR4_SetInterruptHandler
  5258 ;; This function is called by:
  5259 ;;		_SYSTEM_Initialize
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263     09BE                     _TMR4_Initialize:	
  5264                           ;psect for function _TMR4_Initialize
  5265                           
  5266     09BE                     l4155:	
  5267                           ;incstack = 0
  5268                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5269                           
  5270                           
  5271                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF3;
  5272     09BE  30F3               	movlw	243
  5273     09BF  0028               	movlb	8	; select bank8
  5274     09C0  0096               	movwf	22	;volatile
  5275     09C1                     l4157:
  5276                           
  5277                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5278     09C1  0195               	clrf	21	;volatile
  5279     09C2                     l4159:
  5280                           
  5281                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  5282     09C2  0020               	movlb	0	; select bank0
  5283     09C3  1093               	bcf	19,1	;volatile
  5284     09C4                     l4161:
  5285                           
  5286                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  5287     09C4  0021               	movlb	1	; select bank1
  5288     09C5  1493               	bsf	19,1	;volatile
  5289     09C6                     l4163:
  5290                           
  5291                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5292     09C6  3060               	movlw	low _TMR4_DefaultInterruptHandler
  5293     09C7  00CE               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  5294     09C8  3008               	movlw	high _TMR4_DefaultInterruptHandler
  5295     09C9  00CF               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5296     09CA  3188  20A9  3189   	fcall	_TMR4_SetInterruptHandler
  5297     09CD                     l4165:
  5298                           
  5299                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x7F;
  5300     09CD  307F               	movlw	127
  5301     09CE  0028               	movlb	8	; select bank8
  5302     09CF  0097               	movwf	23	;volatile
  5303     09D0                     l678:
  5304     09D0  0008               	return
  5305     09D1                     __end_of_TMR4_Initialize:
  5306                           
  5307                           	psect	text13
  5308     08A9                     __ptext13:	
  5309 ;; *************** function _TMR4_SetInterruptHandler *****************
  5310 ;; Defined at:
  5311 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5314 ;;		 -> controleMovimento(1), TMR4_DefaultInterruptHandler(1), 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5326 ;;      Params:         0       0       2       0       0       0
  5327 ;;      Locals:         0       0       0       0       0       0
  5328 ;;      Temps:          0       0       0       0       0       0
  5329 ;;      Totals:         0       0       2       0       0       0
  5330 ;;Total ram usage:        2 bytes
  5331 ;; Hardware stack levels used: 1
  5332 ;; Hardware stack levels required when called: 7
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		_TMR4_Initialize
  5337 ;;		_main
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341     08A9                     _TMR4_SetInterruptHandler:	
  5342                           ;psect for function _TMR4_SetInterruptHandler
  5343                           
  5344     08A9                     l3731:	
  5345                           ;incstack = 0
  5346                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  5347                           
  5348                           
  5349                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  5350     08A9  0021               	movlb	1	; select bank1
  5351     08AA  084F               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5352     08AB  00E2               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  5353     08AC  084E               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  5354     08AD  00E1               	movwf	_TMR4_InterruptHandler^(0+128)
  5355     08AE                     l706:
  5356     08AE  0008               	return
  5357     08AF                     __end_of_TMR4_SetInterruptHandler:
  5358                           
  5359                           	psect	text14
  5360     08CA                     __ptext14:	
  5361 ;; *************** function _TMR2_Initialize *****************
  5362 ;; Defined at:
  5363 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		wreg, status,2
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5377 ;;      Params:         0       0       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0
  5380 ;;      Totals:         0       0       0       0       0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; Hardware stack levels required when called: 7
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_SYSTEM_Initialize
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391     08CA                     _TMR2_Initialize:	
  5392                           ;psect for function _TMR2_Initialize
  5393                           
  5394     08CA                     l4167:	
  5395                           ;incstack = 0
  5396                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5397                           
  5398                           
  5399                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  5400     08CA  30FF               	movlw	255
  5401     08CB  0020               	movlb	0	; select bank0
  5402     08CC  009B               	movwf	27	;volatile
  5403     08CD                     l4169:
  5404                           
  5405                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5406     08CD  019A               	clrf	26	;volatile
  5407     08CE                     l4171:
  5408                           
  5409                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5410     08CE  1091               	bcf	17,1	;volatile
  5411     08CF                     l4173:
  5412                           
  5413                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  5414     08CF  3004               	movlw	4
  5415     08D0  009C               	movwf	28	;volatile
  5416     08D1                     l566:
  5417     08D1  0008               	return
  5418     08D2                     __end_of_TMR2_Initialize:
  5419                           
  5420                           	psect	text15
  5421     09AC                     __ptext15:	
  5422 ;; *************** function _TMR1_Initialize *****************
  5423 ;; Defined at:
  5424 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		wreg, status,2
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5438 ;;      Params:         0       0       0       0       0       0
  5439 ;;      Locals:         0       0       0       0       0       0
  5440 ;;      Temps:          0       0       0       0       0       0
  5441 ;;      Totals:         0       0       0       0       0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used: 1
  5444 ;; Hardware stack levels required when called: 7
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_SYSTEM_Initialize
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452     09AC                     _TMR1_Initialize:	
  5453                           ;psect for function _TMR1_Initialize
  5454                           
  5455     09AC                     l4205:	
  5456                           ;incstack = 0
  5457                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  5458                           
  5459                           
  5460                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5461     09AC  0020               	movlb	0	; select bank0
  5462     09AD  0199               	clrf	25	;volatile
  5463     09AE                     l4207:
  5464                           
  5465                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0xFF;
  5466     09AE  30FF               	movlw	255
  5467     09AF  0097               	movwf	23	;volatile
  5468     09B0                     l4209:
  5469                           
  5470                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xFF;
  5471     09B0  30FF               	movlw	255
  5472     09B1  0096               	movwf	22	;volatile
  5473     09B2                     l4211:
  5474                           
  5475                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  5476     09B2  1011               	bcf	17,0	;volatile
  5477     09B3                     l4213:
  5478                           
  5479                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5480     09B3  0817               	movf	23,w	;volatile
  5481     09B4  0021               	movlb	1	; select bank1
  5482     09B5  00B1               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  5483     09B6  0020               	movlb	0	; select bank0
  5484     09B7  0816               	movf	22,w	;volatile
  5485     09B8  0021               	movlb	1	; select bank1
  5486     09B9  00B0               	movwf	_timer1ReloadVal^(0+128)	;volatile
  5487     09BA                     l4215:
  5488                           
  5489                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  5490     09BA  3001               	movlw	1
  5491     09BB  0020               	movlb	0	; select bank0
  5492     09BC  0098               	movwf	24	;volatile
  5493     09BD                     l527:
  5494     09BD  0008               	return
  5495     09BE                     __end_of_TMR1_Initialize:
  5496                           
  5497                           	psect	text16
  5498     09E4                     __ptext16:	
  5499 ;; *************** function _TMR0_Initialize *****************
  5500 ;; Defined at:
  5501 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0, pclath, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5515 ;;      Params:         0       0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0
  5518 ;;      Totals:         0       0       0       0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 8
  5522 ;; This function calls:
  5523 ;;		_TMR0_SetInterruptHandler
  5524 ;; This function is called by:
  5525 ;;		_SYSTEM_Initialize
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529     09E4                     _TMR0_Initialize:	
  5530                           ;psect for function _TMR0_Initialize
  5531                           
  5532     09E4                     l4175:	
  5533                           ;incstack = 0
  5534                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5535                           
  5536                           
  5537                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  5538     09E4  0021               	movlb	1	; select bank1
  5539     09E5  0815               	movf	21,w	;volatile
  5540     09E6  39C0               	andlw	192
  5541     09E7  3817               	iorlw	23
  5542     09E8  0095               	movwf	21	;volatile
  5543     09E9                     l4177:
  5544                           
  5545                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  5546     09E9  3016               	movlw	22
  5547     09EA  0020               	movlb	0	; select bank0
  5548     09EB  0095               	movwf	21	;volatile
  5549     09EC                     l4179:
  5550                           
  5551                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  5552     09EC  3016               	movlw	22
  5553     09ED  00EE               	movwf	_timer0ReloadVal	;volatile
  5554     09EE                     l4181:
  5555                           
  5556                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  5557     09EE  110B               	bcf	11,2	;volatile
  5558     09EF                     l4183:
  5559                           
  5560                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  5561     09EF  168B               	bsf	11,5	;volatile
  5562     09F0                     l4185:
  5563                           
  5564                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5565     09F0  305F               	movlw	low _TMR0_DefaultInterruptHandler
  5566     09F1  0021               	movlb	1	; select bank1
  5567     09F2  00CE               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  5568     09F3  3008               	movlw	high _TMR0_DefaultInterruptHandler
  5569     09F4  00CF               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5570     09F5  3188  20A3  3189   	fcall	_TMR0_SetInterruptHandler
  5571     09F8                     l604:
  5572     09F8  0008               	return
  5573     09F9                     __end_of_TMR0_Initialize:
  5574                           
  5575                           	psect	text17
  5576     08A3                     __ptext17:	
  5577 ;; *************** function _TMR0_SetInterruptHandler *****************
  5578 ;; Defined at:
  5579 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5582 ;;		 -> sendInfo(1), TMR0_DefaultInterruptHandler(1), 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;		None
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5594 ;;      Params:         0       0       2       0       0       0
  5595 ;;      Locals:         0       0       0       0       0       0
  5596 ;;      Temps:          0       0       0       0       0       0
  5597 ;;      Totals:         0       0       2       0       0       0
  5598 ;;Total ram usage:        2 bytes
  5599 ;; Hardware stack levels used: 1
  5600 ;; Hardware stack levels required when called: 7
  5601 ;; This function calls:
  5602 ;;		Nothing
  5603 ;; This function is called by:
  5604 ;;		_TMR0_Initialize
  5605 ;;		_main
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609     08A3                     _TMR0_SetInterruptHandler:	
  5610                           ;psect for function _TMR0_SetInterruptHandler
  5611                           
  5612     08A3                     l3727:	
  5613                           ;incstack = 0
  5614                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5615                           
  5616                           
  5617                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  5618     08A3  0021               	movlb	1	; select bank1
  5619     08A4  084F               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5620     08A5  00E6               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  5621     08A6  084E               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  5622     08A7  00E5               	movwf	_TMR0_InterruptHandler^(0+128)
  5623     08A8                     l626:
  5624     08A8  0008               	return
  5625     08A9                     __end_of_TMR0_SetInterruptHandler:
  5626                           
  5627                           	psect	text18
  5628     08EE                     __ptext18:	
  5629 ;; *************** function _SPI1_Initialize *****************
  5630 ;; Defined at:
  5631 ;;		line 62 in file "mcc_generated_files/spi1.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5645 ;;      Params:         0       0       0       0       0       0
  5646 ;;      Locals:         0       0       0       0       0       0
  5647 ;;      Temps:          0       0       0       0       0       0
  5648 ;;      Totals:         0       0       0       0       0       0
  5649 ;;Total ram usage:        0 bytes
  5650 ;; Hardware stack levels used: 1
  5651 ;; Hardware stack levels required when called: 7
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_SYSTEM_Initialize
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659     08EE                     _SPI1_Initialize:	
  5660                           ;psect for function _SPI1_Initialize
  5661                           
  5662     08EE                     l4135:	
  5663                           ;incstack = 0
  5664                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  5665                           
  5666                           
  5667                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  5668     08EE  3040               	movlw	64
  5669     08EF  0024               	movlb	4	; select bank4
  5670     08F0  0094               	movwf	20	;volatile
  5671     08F1                     l4137:
  5672                           
  5673                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  5674     08F1  0195               	clrf	21	;volatile
  5675     08F2                     l4139:
  5676                           
  5677                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  5678     08F2  3001               	movlw	1
  5679     08F3  0092               	movwf	18	;volatile
  5680     08F4                     l4141:
  5681                           
  5682                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  5683     08F4  0021               	movlb	1	; select bank1
  5684     08F5  120D               	bcf	13,4	;volatile
  5685     08F6                     l4143:
  5686                           
  5687                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  5688     08F6  0024               	movlb	4	; select bank4
  5689     08F7  1295               	bcf	21,5	;volatile
  5690     08F8                     l434:
  5691     08F8  0008               	return
  5692     08F9                     __end_of_SPI1_Initialize:
  5693                           
  5694                           	psect	text19
  5695     08DB                     __ptext19:	
  5696 ;; *************** function _PWM3_Initialize *****************
  5697 ;; Defined at:
  5698 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5712 ;;      Params:         0       0       0       0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0
  5715 ;;      Totals:         0       0       0       0       0       0
  5716 ;;Total ram usage:        0 bytes
  5717 ;; Hardware stack levels used: 1
  5718 ;; Hardware stack levels required when called: 7
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		_SYSTEM_Initialize
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726     08DB                     _PWM3_Initialize:	
  5727                           ;psect for function _PWM3_Initialize
  5728                           
  5729     08DB                     l3975:	
  5730                           ;incstack = 0
  5731                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  5732                           
  5733                           
  5734                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  5735     08DB  300C               	movlw	12
  5736     08DC  0026               	movlb	6	; select bank6
  5737     08DD  0093               	movwf	19	;volatile
  5738     08DE                     l3977:
  5739                           
  5740                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  5741     08DE  0191               	clrf	17	;volatile
  5742     08DF                     l3979:
  5743                           
  5744                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  5745     08DF  0192               	clrf	18	;volatile
  5746     08E0                     l3981:
  5747                           
  5748                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  5749     08E0  30CF               	movlw	-49
  5750     08E1  0025               	movlb	5	; select bank5
  5751     08E2  059E               	andwf	30,f	;volatile
  5752     08E3                     l11:
  5753     08E3  0008               	return
  5754     08E4                     __end_of_PWM3_Initialize:
  5755                           
  5756                           	psect	text20
  5757     0B9B                     __ptext20:	
  5758 ;; *************** function _PIN_MANAGER_Initialize *****************
  5759 ;; Defined at:
  5760 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;		None
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  1    wreg      void 
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0, pclath, cstack
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5774 ;;      Params:         0       0       0       0       0       0
  5775 ;;      Locals:         0       0       0       0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0
  5777 ;;      Totals:         0       0       0       0       0       0
  5778 ;;Total ram usage:        0 bytes
  5779 ;; Hardware stack levels used: 1
  5780 ;; Hardware stack levels required when called: 8
  5781 ;; This function calls:
  5782 ;;		_IOCBF0_SetInterruptHandler
  5783 ;;		_IOCBF3_SetInterruptHandler
  5784 ;; This function is called by:
  5785 ;;		_SYSTEM_Initialize
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789     0B9B                     _PIN_MANAGER_Initialize:	
  5790                           ;psect for function _PIN_MANAGER_Initialize
  5791                           
  5792     0B9B                     l4089:	
  5793                           ;incstack = 0
  5794                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5795                           
  5796                           
  5797                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  5798     0B9B  0022               	movlb	2	; select bank2
  5799     0B9C  018C               	clrf	12	;volatile
  5800                           
  5801                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  5802     0B9D  018D               	clrf	13	;volatile
  5803     0B9E                     l4091:
  5804                           
  5805                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  5806     0B9E  3037               	movlw	55
  5807     0B9F  0021               	movlb	1	; select bank1
  5808     0BA0  008C               	movwf	12	;volatile
  5809     0BA1                     l4093:
  5810                           
  5811                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xED;
  5812     0BA1  30ED               	movlw	237
  5813     0BA2  008D               	movwf	13	;volatile
  5814     0BA3                     l4095:
  5815                           
  5816                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5817     0BA3  30C0               	movlw	192
  5818     0BA4  0023               	movlb	3	; select bank3
  5819     0BA5  008D               	movwf	13	;volatile
  5820     0BA6                     l4097:
  5821                           
  5822                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0F;
  5823     0BA6  300F               	movlw	15
  5824     0BA7  008C               	movwf	12	;volatile
  5825     0BA8                     l4099:
  5826                           
  5827                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x09;
  5828     0BA8  3009               	movlw	9
  5829     0BA9  0024               	movlb	4	; select bank4
  5830     0BAA  008D               	movwf	13	;volatile
  5831     0BAB                     l4101:
  5832                           
  5833                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5834     0BAB  018C               	clrf	12	;volatile
  5835     0BAC                     l4103:
  5836                           
  5837                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 0;
  5838     0BAC  0021               	movlb	1	; select bank1
  5839     0BAD  1395               	bcf	21,7	;volatile
  5840                           
  5841                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  5842     0BAE  30C0               	movlw	192
  5843     0BAF  0022               	movlb	2	; select bank2
  5844     0BB0  009D               	movwf	29	;volatile
  5845                           
  5846                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  5847     0BB1  3001               	movlw	1
  5848     0BB2  009E               	movwf	30	;volatile
  5849     0BB3                     l4105:
  5850                           
  5851                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  5852     0BB3  0027               	movlb	7	; select bank7
  5853     0BB4  1016               	bcf	22,0	;volatile
  5854     0BB5                     l4107:
  5855                           
  5856                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  5857     0BB5  1196               	bcf	22,3	;volatile
  5858     0BB6                     l4109:
  5859                           
  5860                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  5861     0BB6  1415               	bsf	21,0	;volatile
  5862     0BB7                     l4111:
  5863                           
  5864                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  5865     0BB7  1595               	bsf	21,3	;volatile
  5866     0BB8                     l4113:
  5867                           
  5868                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 0;
  5869     0BB8  1014               	bcf	20,0	;volatile
  5870     0BB9                     l4115:
  5871                           
  5872                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 0;
  5873     0BB9  1194               	bcf	20,3	;volatile
  5874     0BBA                     l4117:
  5875                           
  5876                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  5877     0BBA  305D               	movlw	low _IOCBF0_DefaultInterruptHandler
  5878     0BBB  0021               	movlb	1	; select bank1
  5879     0BBC  00CE               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  5880     0BBD  3008               	movlw	high _IOCBF0_DefaultInterruptHandler
  5881     0BBE  00CF               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5882     0BBF  3188  2097  318B   	fcall	_IOCBF0_SetInterruptHandler
  5883     0BC2                     l4119:
  5884                           
  5885                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  5886     0BC2  305E               	movlw	low _IOCBF3_DefaultInterruptHandler
  5887     0BC3  0021               	movlb	1	; select bank1
  5888     0BC4  00CE               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  5889     0BC5  3008               	movlw	high _IOCBF3_DefaultInterruptHandler
  5890     0BC6  00CF               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5891     0BC7  3188  209D  318B   	fcall	_IOCBF3_SetInterruptHandler
  5892     0BCA                     l4121:
  5893                           
  5894                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  5895     0BCA  158B               	bsf	11,3	;volatile
  5896     0BCB                     l205:
  5897     0BCB  0008               	return
  5898     0BCC                     __end_of_PIN_MANAGER_Initialize:
  5899                           
  5900                           	psect	text21
  5901     089D                     __ptext21:	
  5902 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  5903 ;; Defined at:
  5904 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5907 ;;		 -> chegadaS2(1), IOCBF3_DefaultInterruptHandler(1), 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5919 ;;      Params:         0       0       2       0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0
  5922 ;;      Totals:         0       0       2       0       0       0
  5923 ;;Total ram usage:        2 bytes
  5924 ;; Hardware stack levels used: 1
  5925 ;; Hardware stack levels required when called: 7
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_PIN_MANAGER_Initialize
  5930 ;;		_main
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934     089D                     _IOCBF3_SetInterruptHandler:	
  5935                           ;psect for function _IOCBF3_SetInterruptHandler
  5936                           
  5937     089D                     l3719:	
  5938                           ;incstack = 0
  5939                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  5940                           
  5941                           
  5942                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  5943     089D  0021               	movlb	1	; select bank1
  5944     089E  084F               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5945     089F  00EC               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  5946     08A0  084E               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  5947     08A1  00EB               	movwf	_IOCBF3_InterruptHandler^(0+128)
  5948     08A2                     l227:
  5949     08A2  0008               	return
  5950     08A3                     __end_of_IOCBF3_SetInterruptHandler:
  5951                           
  5952                           	psect	text22
  5953     0897                     __ptext22:	
  5954 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  5955 ;; Defined at:
  5956 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5959 ;;		 -> chegadaS1(1), IOCBF0_DefaultInterruptHandler(1), 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		wreg
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5971 ;;      Params:         0       0       2       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0
  5974 ;;      Totals:         0       0       2       0       0       0
  5975 ;;Total ram usage:        2 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; Hardware stack levels required when called: 7
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_PIN_MANAGER_Initialize
  5982 ;;		_main
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986     0897                     _IOCBF0_SetInterruptHandler:	
  5987                           ;psect for function _IOCBF0_SetInterruptHandler
  5988                           
  5989     0897                     l3717:	
  5990                           ;incstack = 0
  5991                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  5992                           
  5993                           
  5994                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  5995     0897  0021               	movlb	1	; select bank1
  5996     0898  084F               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5997     0899  00EE               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  5998     089A  084E               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  5999     089B  00ED               	movwf	_IOCBF0_InterruptHandler^(0+128)
  6000     089C                     l217:
  6001     089C  0008               	return
  6002     089D                     __end_of_IOCBF0_SetInterruptHandler:
  6003                           
  6004                           	psect	text23
  6005     08BB                     __ptext23:	
  6006 ;; *************** function _OSCILLATOR_Initialize *****************
  6007 ;; Defined at:
  6008 ;;		line 70 in file "mcc_generated_files/mcc.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;		None
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;		None
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  1    wreg      void 
  6015 ;; Registers used:
  6016 ;;		wreg, status,2
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6022 ;;      Params:         0       0       0       0       0       0
  6023 ;;      Locals:         0       0       0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0       0
  6025 ;;      Totals:         0       0       0       0       0       0
  6026 ;;Total ram usage:        0 bytes
  6027 ;; Hardware stack levels used: 1
  6028 ;; Hardware stack levels required when called: 7
  6029 ;; This function calls:
  6030 ;;		Nothing
  6031 ;; This function is called by:
  6032 ;;		_SYSTEM_Initialize
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036     08BB                     _OSCILLATOR_Initialize:	
  6037                           ;psect for function _OSCILLATOR_Initialize
  6038                           
  6039     08BB                     l4145:	
  6040                           ;incstack = 0
  6041                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6042                           
  6043                           
  6044                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x68;
  6045     08BB  3068               	movlw	104
  6046     08BC  0021               	movlb	1	; select bank1
  6047     08BD  0099               	movwf	25	;volatile
  6048     08BE                     l4147:
  6049                           
  6050                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  6051     08BE  0198               	clrf	24	;volatile
  6052     08BF                     l4149:
  6053                           
  6054                           ;mcc_generated_files/mcc.c: 77:     BORCON = 0x00;
  6055     08BF  0022               	movlb	2	; select bank2
  6056     08C0  0196               	clrf	22	;volatile
  6057     08C1                     l274:
  6058     08C1  0008               	return
  6059     08C2                     __end_of_OSCILLATOR_Initialize:
  6060                           
  6061                           	psect	text24
  6062     0867                     __ptext24:	
  6063 ;; *************** function _FVR_Initialize *****************
  6064 ;; Defined at:
  6065 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6079 ;;      Params:         0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; Hardware stack levels required when called: 7
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_SYSTEM_Initialize
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093     0867                     _FVR_Initialize:	
  6094                           ;psect for function _FVR_Initialize
  6095                           
  6096     0867                     l4153:	
  6097                           ;incstack = 0
  6098                           ; Regs used in _FVR_Initialize: [wreg]
  6099                           
  6100                           
  6101                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x89;
  6102     0867  3089               	movlw	137
  6103     0868  0022               	movlb	2	; select bank2
  6104     0869  0097               	movwf	23	;volatile
  6105     086A                     l322:
  6106     086A  0008               	return
  6107     086B                     __end_of_FVR_Initialize:
  6108                           
  6109                           	psect	text25
  6110     0ACD                     __ptext25:	
  6111 ;; *************** function _EUSART_Initialize *****************
  6112 ;; Defined at:
  6113 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0, pclath, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6127 ;;      Params:         0       0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0
  6130 ;;      Totals:         0       0       0       0       0       0
  6131 ;;Total ram usage:        0 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; Hardware stack levels required when called: 8
  6134 ;; This function calls:
  6135 ;;		_EUSART_SetErrorHandler
  6136 ;;		_EUSART_SetFramingErrorHandler
  6137 ;;		_EUSART_SetOverrunErrorHandler
  6138 ;; This function is called by:
  6139 ;;		_SYSTEM_Initialize
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143     0ACD                     _EUSART_Initialize:	
  6144                           ;psect for function _EUSART_Initialize
  6145                           
  6146     0ACD                     l4217:	
  6147                           ;incstack = 0
  6148                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6149                           
  6150                           
  6151                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6152     0ACD  3008               	movlw	8
  6153     0ACE  0023               	movlb	3	; select bank3
  6154     0ACF  009F               	movwf	31	;volatile
  6155                           
  6156                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6157     0AD0  3090               	movlw	144
  6158     0AD1  009D               	movwf	29	;volatile
  6159                           
  6160                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  6161     0AD2  3024               	movlw	36
  6162     0AD3  009E               	movwf	30	;volatile
  6163                           
  6164                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x33;
  6165     0AD4  3033               	movlw	51
  6166     0AD5  009B               	movwf	27	;volatile
  6167     0AD6                     l4219:
  6168                           
  6169                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  6170     0AD6  019C               	clrf	28	;volatile
  6171     0AD7                     l4221:
  6172                           
  6173                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6174     0AD7  3000               	movlw	0
  6175     0AD8  0021               	movlb	1	; select bank1
  6176     0AD9  00CE               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  6177     0ADA  3000               	movlw	0
  6178     0ADB  00CF               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  6179     0ADC  3188  208B  318A   	fcall	_EUSART_SetFramingErrorHandler
  6180     0ADF                     l4223:
  6181                           
  6182                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6183     0ADF  3000               	movlw	0
  6184     0AE0  0021               	movlb	1	; select bank1
  6185     0AE1  00CE               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  6186     0AE2  3000               	movlw	0
  6187     0AE3  00CF               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  6188     0AE4  3188  2091  318A   	fcall	_EUSART_SetOverrunErrorHandler
  6189     0AE7                     l4225:
  6190                           
  6191                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6192     0AE7  3000               	movlw	0
  6193     0AE8  0021               	movlb	1	; select bank1
  6194     0AE9  00CE               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  6195     0AEA  3000               	movlw	0
  6196     0AEB  00CF               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  6197     0AEC  3188  20D2  318A   	fcall	_EUSART_SetErrorHandler
  6198     0AEF                     l4227:
  6199                           
  6200                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6201     0AEF  0021               	movlb	1	; select bank1
  6202     0AF0  01BC               	clrf	_eusartRxLastError^(0+128)	;volatile
  6203     0AF1                     l368:
  6204     0AF1  0008               	return
  6205     0AF2                     __end_of_EUSART_Initialize:
  6206                           
  6207                           	psect	text26
  6208     0891                     __ptext26:	
  6209 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6210 ;; Defined at:
  6211 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6214 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6226 ;;      Params:         0       0       2       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0
  6229 ;;      Totals:         0       0       2       0       0       0
  6230 ;;Total ram usage:        2 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 7
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_EUSART_Initialize
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240     0891                     _EUSART_SetOverrunErrorHandler:	
  6241                           ;psect for function _EUSART_SetOverrunErrorHandler
  6242                           
  6243     0891                     l3723:	
  6244                           ;incstack = 0
  6245                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6246                           
  6247                           
  6248                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6249     0891  0021               	movlb	1	; select bank1
  6250     0892  084F               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  6251     0893  00E8               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6252     0894  084E               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  6253     0895  00E7               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6254     0896                     l410:
  6255     0896  0008               	return
  6256     0897                     __end_of_EUSART_SetOverrunErrorHandler:
  6257                           
  6258                           	psect	text27
  6259     088B                     __ptext27:	
  6260 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6261 ;; Defined at:
  6262 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6265 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6277 ;;      Params:         0       0       2       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0
  6280 ;;      Totals:         0       0       2       0       0       0
  6281 ;;Total ram usage:        2 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; Hardware stack levels required when called: 7
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_EUSART_Initialize
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291     088B                     _EUSART_SetFramingErrorHandler:	
  6292                           ;psect for function _EUSART_SetFramingErrorHandler
  6293                           
  6294     088B                     l3721:	
  6295                           ;incstack = 0
  6296                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6297                           
  6298                           
  6299                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  6300     088B  0021               	movlb	1	; select bank1
  6301     088C  084F               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  6302     088D  00EA               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  6303     088E  084E               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  6304     088F  00E9               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6305     0890                     l407:
  6306     0890  0008               	return
  6307     0891                     __end_of_EUSART_SetFramingErrorHandler:
  6308                           
  6309                           	psect	text28
  6310     08D2                     __ptext28:	
  6311 ;; *************** function _EUSART_SetErrorHandler *****************
  6312 ;; Defined at:
  6313 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6316 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6328 ;;      Params:         0       0       2       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0
  6331 ;;      Totals:         0       0       2       0       0       0
  6332 ;;Total ram usage:        2 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; Hardware stack levels required when called: 7
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_EUSART_Initialize
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342     08D2                     _EUSART_SetErrorHandler:	
  6343                           ;psect for function _EUSART_SetErrorHandler
  6344                           
  6345     08D2                     l3725:	
  6346                           ;incstack = 0
  6347                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6348                           
  6349                           
  6350                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6351     08D2  0021               	movlb	1	; select bank1
  6352     08D3  084F               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  6353     08D4  0022               	movlb	2	; select bank2
  6354     08D5  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  6355     08D6  0021               	movlb	1	; select bank1
  6356     08D7  084E               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  6357     08D8  0022               	movlb	2	; select bank2
  6358     08D9  00A0               	movwf	_EUSART_ErrorHandler^(0+256)
  6359     08DA                     l413:
  6360     08DA  0008               	return
  6361     08DB                     __end_of_EUSART_SetErrorHandler:
  6362                           
  6363                           	psect	text29
  6364     0905                     __ptext29:	
  6365 ;; *************** function _CMP2_Initialize *****************
  6366 ;; Defined at:
  6367 ;;		line 59 in file "mcc_generated_files/cmp2.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6381 ;;      Params:         0       0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0       0
  6384 ;;      Totals:         0       0       0       0       0       0
  6385 ;;Total ram usage:        0 bytes
  6386 ;; Hardware stack levels used: 1
  6387 ;; Hardware stack levels required when called: 7
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_SYSTEM_Initialize
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395     0905                     _CMP2_Initialize:	
  6396                           ;psect for function _CMP2_Initialize
  6397                           
  6398     0905                     l3983:	
  6399                           ;incstack = 0
  6400                           ; Regs used in _CMP2_Initialize: [wreg]
  6401                           
  6402                           
  6403                           ;mcc_generated_files/cmp2.c: 66:     PIE2bits.C2IE = 0;
  6404     0905  0021               	movlb	1	; select bank1
  6405     0906  1312               	bcf	18,6	;volatile
  6406     0907                     l3985:
  6407                           
  6408                           ;mcc_generated_files/cmp2.c: 69:     CM2CON0 = 0x84;
  6409     0907  3084               	movlw	132
  6410     0908  0022               	movlb	2	; select bank2
  6411     0909  0093               	movwf	19	;volatile
  6412                           
  6413                           ;mcc_generated_files/cmp2.c: 72:     CM2CON1 = 0xA1;
  6414     090A  30A1               	movlw	161
  6415     090B  0094               	movwf	20	;volatile
  6416     090C                     l3987:
  6417                           
  6418                           ;mcc_generated_files/cmp2.c: 75:     PIR2bits.C2IF = 0;
  6419     090C  0020               	movlb	0	; select bank0
  6420     090D  1312               	bcf	18,6	;volatile
  6421     090E                     l3989:
  6422                           
  6423                           ;mcc_generated_files/cmp2.c: 78:     PIE2bits.C2IE = 1;
  6424     090E  0021               	movlb	1	; select bank1
  6425     090F  1712               	bsf	18,6	;volatile
  6426     0910                     l79:
  6427     0910  0008               	return
  6428     0911                     __end_of_CMP2_Initialize:
  6429                           
  6430                           	psect	text30
  6431     08F9                     __ptext30:	
  6432 ;; *************** function _CMP1_Initialize *****************
  6433 ;; Defined at:
  6434 ;;		line 59 in file "mcc_generated_files/cmp1.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;		None
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;		None
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6448 ;;      Params:         0       0       0       0       0       0
  6449 ;;      Locals:         0       0       0       0       0       0
  6450 ;;      Temps:          0       0       0       0       0       0
  6451 ;;      Totals:         0       0       0       0       0       0
  6452 ;;Total ram usage:        0 bytes
  6453 ;; Hardware stack levels used: 1
  6454 ;; Hardware stack levels required when called: 7
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_SYSTEM_Initialize
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462     08F9                     _CMP1_Initialize:	
  6463                           ;psect for function _CMP1_Initialize
  6464                           
  6465     08F9                     l4039:	
  6466                           ;incstack = 0
  6467                           ; Regs used in _CMP1_Initialize: [wreg]
  6468                           
  6469                           
  6470                           ;mcc_generated_files/cmp1.c: 66:     PIE2bits.C1IE = 0;
  6471     08F9  0021               	movlb	1	; select bank1
  6472     08FA  1292               	bcf	18,5	;volatile
  6473     08FB                     l4041:
  6474                           
  6475                           ;mcc_generated_files/cmp1.c: 69:     CM1CON0 = 0x84;
  6476     08FB  3084               	movlw	132
  6477     08FC  0022               	movlb	2	; select bank2
  6478     08FD  0091               	movwf	17	;volatile
  6479                           
  6480                           ;mcc_generated_files/cmp1.c: 72:     CM1CON1 = 0x60;
  6481     08FE  3060               	movlw	96
  6482     08FF  0092               	movwf	18	;volatile
  6483     0900                     l4043:
  6484                           
  6485                           ;mcc_generated_files/cmp1.c: 75:     PIR2bits.C1IF = 0;
  6486     0900  0020               	movlb	0	; select bank0
  6487     0901  1292               	bcf	18,5	;volatile
  6488     0902                     l4045:
  6489                           
  6490                           ;mcc_generated_files/cmp1.c: 78:     PIE2bits.C1IE = 1;
  6491     0902  0021               	movlb	1	; select bank1
  6492     0903  1692               	bsf	18,5	;volatile
  6493     0904                     l150:
  6494     0904  0008               	return
  6495     0905                     __end_of_CMP1_Initialize:
  6496                           
  6497                           	psect	text31
  6498     099A                     __ptext31:	
  6499 ;; *************** function _CCP4_Initialize *****************
  6500 ;; Defined at:
  6501 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0, pclath, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6515 ;;      Params:         0       0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0
  6518 ;;      Totals:         0       0       0       0       0       0
  6519 ;;Total ram usage:        0 bytes
  6520 ;; Hardware stack levels used: 1
  6521 ;; Hardware stack levels required when called: 8
  6522 ;; This function calls:
  6523 ;;		_CCP4_SetCallBack
  6524 ;; This function is called by:
  6525 ;;		_SYSTEM_Initialize
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529     099A                     _CCP4_Initialize:	
  6530                           ;psect for function _CCP4_Initialize
  6531                           
  6532     099A                     l4193:	
  6533                           ;incstack = 0
  6534                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6535                           
  6536                           
  6537                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  6538     099A  3004               	movlw	4
  6539     099B  0026               	movlb	6	; select bank6
  6540     099C  009A               	movwf	26	;volatile
  6541     099D                     l4195:
  6542                           
  6543                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  6544     099D  0198               	clrf	24	;volatile
  6545     099E                     l4197:
  6546                           
  6547                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  6548     099E  0199               	clrf	25	;volatile
  6549     099F                     l4199:
  6550                           
  6551                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  6552     099F  305C               	movlw	low _CCP4_DefaultCallBack
  6553     09A0  0021               	movlb	1	; select bank1
  6554     09A1  00CE               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  6555     09A2  3008               	movlw	high _CCP4_DefaultCallBack
  6556     09A3  00CF               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  6557     09A4  3188  2085  3189   	fcall	_CCP4_SetCallBack
  6558     09A7                     l4201:
  6559                           
  6560                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  6561     09A7  0020               	movlb	0	; select bank0
  6562     09A8  1293               	bcf	19,5	;volatile
  6563     09A9                     l4203:
  6564                           
  6565                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  6566     09A9  0021               	movlb	1	; select bank1
  6567     09AA  1693               	bsf	19,5	;volatile
  6568     09AB                     l649:
  6569     09AB  0008               	return
  6570     09AC                     __end_of_CCP4_Initialize:
  6571                           
  6572                           	psect	text32
  6573     0885                     __ptext32:	
  6574 ;; *************** function _CCP4_SetCallBack *****************
  6575 ;; Defined at:
  6576 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  6579 ;;		 -> interrupcaoCCP4(1), CCP4_DefaultCallBack(1), 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6591 ;;      Params:         0       0       2       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0
  6594 ;;      Totals:         0       0       2       0       0       0
  6595 ;;Total ram usage:        2 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; Hardware stack levels required when called: 7
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_CCP4_Initialize
  6602 ;;		_main
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606     0885                     _CCP4_SetCallBack:	
  6607                           ;psect for function _CCP4_SetCallBack
  6608                           
  6609     0885                     l3729:	
  6610                           ;incstack = 0
  6611                           ; Regs used in _CCP4_SetCallBack: [wreg]
  6612                           
  6613                           
  6614                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  6615     0885  0021               	movlb	1	; select bank1
  6616     0886  084F               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  6617     0887  00E4               	movwf	(_CCP4_CallBack+1)^(0+128)
  6618     0888  084E               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  6619     0889  00E3               	movwf	_CCP4_CallBack^(0+128)
  6620     088A                     l655:
  6621     088A  0008               	return
  6622     088B                     __end_of_CCP4_SetCallBack:
  6623                           
  6624                           	psect	text33
  6625     08C2                     __ptext33:	
  6626 ;; *************** function _ADC_Initialize *****************
  6627 ;; Defined at:
  6628 ;;		line 67 in file "mcc_generated_files/adc.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;		None
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6642 ;;      Params:         0       0       0       0       0       0
  6643 ;;      Locals:         0       0       0       0       0       0
  6644 ;;      Temps:          0       0       0       0       0       0
  6645 ;;      Totals:         0       0       0       0       0       0
  6646 ;;Total ram usage:        0 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; Hardware stack levels required when called: 7
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_SYSTEM_Initialize
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656     08C2                     _ADC_Initialize:	
  6657                           ;psect for function _ADC_Initialize
  6658                           
  6659     08C2                     l4187:	
  6660                           ;incstack = 0
  6661                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6662                           
  6663                           
  6664                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC3;
  6665     08C2  30C3               	movlw	195
  6666     08C3  0021               	movlb	1	; select bank1
  6667     08C4  009E               	movwf	30	;volatile
  6668     08C5                     l4189:
  6669                           
  6670                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  6671     08C5  019B               	clrf	27	;volatile
  6672     08C6                     l4191:
  6673                           
  6674                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  6675     08C6  019C               	clrf	28	;volatile
  6676                           
  6677                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  6678     08C7  3001               	movlw	1
  6679     08C8  009D               	movwf	29	;volatile
  6680     08C9                     l294:
  6681     08C9  0008               	return
  6682     08CA                     __end_of_ADC_Initialize:
  6683                           
  6684                           	psect	text34
  6685     0CDA                     __ptext34:	
  6686 ;; *************** function _SPI1_Open *****************
  6687 ;; Defined at:
  6688 ;;		line 72 in file "mcc_generated_files/spi1.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  spi1UniqueCo    1    wreg     enum E358
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  spi1UniqueCo    1    3[BANK1 ] enum E358
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  1    wreg      _Bool 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6702 ;;      Params:         0       0       0       0       0       0
  6703 ;;      Locals:         0       0       1       0       0       0
  6704 ;;      Temps:          0       0       3       0       0       0
  6705 ;;      Totals:         0       0       4       0       0       0
  6706 ;;Total ram usage:        4 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; Hardware stack levels required when called: 7
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_main
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716     0CDA                     _SPI1_Open:	
  6717                           ;psect for function _SPI1_Open
  6718                           
  6719                           
  6720                           ;incstack = 0
  6721                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
  6722                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  6723     0CDA  0021               	movlb	1	; select bank1
  6724     0CDB  00D1               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+128)
  6725     0CDC                     l4321:
  6726                           
  6727                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  6728     0CDC  0024               	movlb	4	; select bank4
  6729     0CDD  1A95               	btfsc	21,5	;volatile
  6730     0CDE  2CE0               	goto	u3381
  6731     0CDF  2CE1               	goto	u3380
  6732     0CE0                     u3381:
  6733     0CE0  2D31               	goto	l438
  6734     0CE1                     u3380:
  6735     0CE1                     l4323:
  6736                           
  6737                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  6738     0CE1  0021               	movlb	1	; select bank1
  6739     0CE2  0851               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6740     0CE3  00CE               	movwf	??_SPI1_Open^(0+128)
  6741     0CE4  01CF               	clrf	(??_SPI1_Open^(0+128)+1)
  6742     0CE5  35CE               	lslf	??_SPI1_Open^(0+128),f
  6743     0CE6  0DCF               	rlf	(??_SPI1_Open^(0+128)+1),f
  6744     0CE7  35CE               	lslf	??_SPI1_Open^(0+128),f
  6745     0CE8  0DCF               	rlf	(??_SPI1_Open^(0+128)+1),f
  6746     0CE9  3002               	movlw	low (_spi1_configuration+1)
  6747     0CEA  074E               	addwf	??_SPI1_Open^(0+128),w
  6748     0CEB  0084               	movwf	4
  6749     0CEC  3008               	movlw	high (_spi1_configuration+1)
  6750     0CED  3D4F               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6751     0CEE  3880               	iorlw	128
  6752     0CEF  0085               	movwf	5
  6753     0CF0  0800               	movf	0,w	;code access
  6754     0CF1  0024               	movlb	4	; select bank4
  6755     0CF2  0094               	movwf	20	;volatile
  6756                           
  6757                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  6758     0CF3  0021               	movlb	1	; select bank1
  6759     0CF4  0851               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6760     0CF5  00CE               	movwf	??_SPI1_Open^(0+128)
  6761     0CF6  01CF               	clrf	(??_SPI1_Open^(0+128)+1)
  6762     0CF7  35CE               	lslf	??_SPI1_Open^(0+128),f
  6763     0CF8  0DCF               	rlf	(??_SPI1_Open^(0+128)+1),f
  6764     0CF9  35CE               	lslf	??_SPI1_Open^(0+128),f
  6765     0CFA  0DCF               	rlf	(??_SPI1_Open^(0+128)+1),f
  6766     0CFB  3001               	movlw	low _spi1_configuration
  6767     0CFC  074E               	addwf	??_SPI1_Open^(0+128),w
  6768     0CFD  0084               	movwf	4
  6769     0CFE  3008               	movlw	high _spi1_configuration
  6770     0CFF  3D4F               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6771     0D00  3880               	iorlw	128
  6772     0D01  0085               	movwf	5
  6773     0D02  0800               	movf	0,w	;code access
  6774     0D03  0024               	movlb	4	; select bank4
  6775     0D04  0095               	movwf	21	;volatile
  6776     0D05                     l4325:
  6777                           
  6778                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  6779     0D05  0196               	clrf	22	;volatile
  6780     0D06                     l4327:
  6781                           
  6782                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  6783     0D06  0021               	movlb	1	; select bank1
  6784     0D07  0851               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6785     0D08  00CE               	movwf	??_SPI1_Open^(0+128)
  6786     0D09  01CF               	clrf	(??_SPI1_Open^(0+128)+1)
  6787     0D0A  35CE               	lslf	??_SPI1_Open^(0+128),f
  6788     0D0B  0DCF               	rlf	(??_SPI1_Open^(0+128)+1),f
  6789     0D0C  35CE               	lslf	??_SPI1_Open^(0+128),f
  6790     0D0D  0DCF               	rlf	(??_SPI1_Open^(0+128)+1),f
  6791     0D0E  3003               	movlw	low (_spi1_configuration+2)
  6792     0D0F  074E               	addwf	??_SPI1_Open^(0+128),w
  6793     0D10  0084               	movwf	4
  6794     0D11  3008               	movlw	high (_spi1_configuration+2)
  6795     0D12  3D4F               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6796     0D13  3880               	iorlw	128
  6797     0D14  0085               	movwf	5
  6798     0D15  0800               	movf	0,w	;code access
  6799     0D16  0024               	movlb	4	; select bank4
  6800     0D17  0092               	movwf	18	;volatile
  6801     0D18                     l4329:
  6802                           
  6803                           ;mcc_generated_files/spi1.c: 80:         TRISBbits.TRISB4 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  6804     0D18  0021               	movlb	1	; select bank1
  6805     0D19  0851               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6806     0D1A  00CE               	movwf	??_SPI1_Open^(0+128)
  6807     0D1B  01CF               	clrf	(??_SPI1_Open^(0+128)+1)
  6808     0D1C  35CE               	lslf	??_SPI1_Open^(0+128),f
  6809     0D1D  0DCF               	rlf	(??_SPI1_Open^(0+128)+1),f
  6810     0D1E  35CE               	lslf	??_SPI1_Open^(0+128),f
  6811     0D1F  0DCF               	rlf	(??_SPI1_Open^(0+128)+1),f
  6812     0D20  3004               	movlw	low (_spi1_configuration+3)
  6813     0D21  074E               	addwf	??_SPI1_Open^(0+128),w
  6814     0D22  0084               	movwf	4
  6815     0D23  3008               	movlw	high (_spi1_configuration+3)
  6816     0D24  3D4F               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6817     0D25  3880               	iorlw	128
  6818     0D26  0085               	movwf	5
  6819     0D27  0800               	movf	0,w	;code access
  6820     0D28  00D0               	movwf	(??_SPI1_Open+2)^(0+128)
  6821     0D29  0ED0               	swapf	(??_SPI1_Open+2)^(0+128),f
  6822     0D2A  080D               	movf	13,w	;volatile
  6823     0D2B  0650               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6824     0D2C  39EF               	andlw	-17
  6825     0D2D  0650               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6826     0D2E  008D               	movwf	13	;volatile
  6827     0D2F                     l4331:
  6828                           
  6829                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  6830     0D2F  0024               	movlb	4	; select bank4
  6831     0D30  1695               	bsf	21,5	;volatile
  6832     0D31                     l438:
  6833     0D31  0008               	return
  6834     0D32                     __end_of_SPI1_Open:
  6835                           
  6836                           	psect	text35
  6837     0874                     __ptext35:	
  6838 ;; *************** function _EUSART_is_rx_ready *****************
  6839 ;; Defined at:
  6840 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;		None
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;		None
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      _Bool 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2, status,0
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6854 ;;      Params:         0       0       0       0       0       0
  6855 ;;      Locals:         0       0       0       0       0       0
  6856 ;;      Temps:          0       0       0       0       0       0
  6857 ;;      Totals:         0       0       0       0       0       0
  6858 ;;Total ram usage:        0 bytes
  6859 ;; Hardware stack levels used: 1
  6860 ;; Hardware stack levels required when called: 7
  6861 ;; This function calls:
  6862 ;;		Nothing
  6863 ;; This function is called by:
  6864 ;;		_main
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868     0874                     _EUSART_is_rx_ready:	
  6869                           ;psect for function _EUSART_is_rx_ready
  6870                           
  6871     0874                     l4305:	
  6872                           ;incstack = 0
  6873                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6874                           
  6875                           
  6876                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  6877     0874  0020               	movlb	0	; select bank0
  6878     0875  0E11               	swapf	17,w	;volatile
  6879     0876  0C89               	rrf	9,f
  6880     0877  3901               	andlw	1
  6881     0878                     l376:
  6882     0878  0008               	return
  6883     0879                     __end_of_EUSART_is_rx_ready:
  6884                           
  6885                           	psect	text36
  6886     0957                     __ptext36:	
  6887 ;; *************** function _EUSART_Read *****************
  6888 ;; Defined at:
  6889 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;		None
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;		None
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  1    wreg      unsigned char 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6903 ;;      Params:         0       0       0       0       0       0
  6904 ;;      Locals:         0       0       0       0       0       0
  6905 ;;      Temps:          0       0       0       0       0       0
  6906 ;;      Totals:         0       0       0       0       0       0
  6907 ;;Total ram usage:        0 bytes
  6908 ;; Hardware stack levels used: 1
  6909 ;; Hardware stack levels required when called: 7
  6910 ;; This function calls:
  6911 ;;		Nothing
  6912 ;; This function is called by:
  6913 ;;		_main
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917     0957                     _EUSART_Read:	
  6918                           ;psect for function _EUSART_Read
  6919                           
  6920     0957                     l4309:	
  6921                           ;incstack = 0
  6922                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6923                           
  6924     0957                     l385:	
  6925                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6926                           
  6927                           
  6928                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  6929     0957  0020               	movlb	0	; select bank0
  6930     0958  1E91               	btfss	17,5	;volatile
  6931     0959  295B               	goto	u3361
  6932     095A  295C               	goto	u3360
  6933     095B                     u3361:
  6934     095B  2957               	goto	l385
  6935     095C                     u3360:
  6936     095C                     l4311:
  6937                           
  6938                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6939     095C  0021               	movlb	1	; select bank1
  6940     095D  01BC               	clrf	_eusartRxLastError^(0+128)	;volatile
  6941     095E                     l4313:
  6942                           
  6943                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  6944     095E  0023               	movlb	3	; select bank3
  6945     095F  1C9D               	btfss	29,1	;volatile
  6946     0960  2962               	goto	u3371
  6947     0961  2963               	goto	u3370
  6948     0962                     u3371:
  6949     0962  2965               	goto	l4317
  6950     0963                     u3370:
  6951     0963                     l4315:
  6952                           
  6953                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  6954     0963  121D               	bcf	29,4	;volatile
  6955                           
  6956                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  6957     0964  161D               	bsf	29,4	;volatile
  6958     0965                     l4317:
  6959                           
  6960                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  6961     0965  0819               	movf	25,w	;volatile
  6962     0966                     l389:
  6963     0966  0008               	return
  6964     0967                     __end_of_EUSART_Read:
  6965                           
  6966                           	psect	intentry
  6967     0004                     __pintentry:	
  6968 ;; *************** function _INTERRUPT_InterruptManager *****************
  6969 ;; Defined at:
  6970 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6984 ;;      Params:         0       0       0       0       0       0
  6985 ;;      Locals:         0       0       0       0       0       0
  6986 ;;      Temps:          0       0       0       0       0       0
  6987 ;;      Totals:         0       0       0       0       0       0
  6988 ;;Total ram usage:        0 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; Hardware stack levels required when called: 6
  6991 ;; This function calls:
  6992 ;;		_CCP4_CaptureISR
  6993 ;;		_CMP1_ISR
  6994 ;;		_CMP2_ISR
  6995 ;;		_PIN_MANAGER_IOC
  6996 ;;		_TMR0_ISR
  6997 ;;		_TMR4_ISR
  6998 ;; This function is called by:
  6999 ;;		Interrupt level 1
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003     0004                     _INTERRUPT_InterruptManager:
  7004                           
  7005                           ;incstack = 0
  7006     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7007                           
  7008                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7009     0005  3180               	pagesel	$
  7010     0006                     i1l4475:
  7011                           
  7012                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7013     0006  1D8B               	btfss	11,3	;volatile
  7014     0007  2809               	goto	u354_21
  7015     0008  280A               	goto	u354_20
  7016     0009                     u354_21:
  7017     0009  2811               	goto	i1l4481
  7018     000A                     u354_20:
  7019     000A                     i1l4477:
  7020     000A  1C0B               	btfss	11,0	;volatile
  7021     000B  280D               	goto	u355_21
  7022     000C  280E               	goto	u355_20
  7023     000D                     u355_21:
  7024     000D  2811               	goto	i1l4481
  7025     000E                     u355_20:
  7026     000E                     i1l4479:
  7027                           
  7028                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7029     000E  3189  2177  3180   	fcall	_PIN_MANAGER_IOC
  7030     0011                     i1l4481:
  7031                           
  7032                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7033     0011  1E8B               	btfss	11,5	;volatile
  7034     0012  2814               	goto	u356_21
  7035     0013  2815               	goto	u356_20
  7036     0014                     u356_21:
  7037     0014  281C               	goto	i1l4487
  7038     0015                     u356_20:
  7039     0015                     i1l4483:
  7040     0015  1D0B               	btfss	11,2	;volatile
  7041     0016  2818               	goto	u357_21
  7042     0017  2819               	goto	u357_20
  7043     0018                     u357_21:
  7044     0018  281C               	goto	i1l4487
  7045     0019                     u357_20:
  7046     0019                     i1l4485:
  7047                           
  7048                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  7049     0019  318A  2227  3180   	fcall	_TMR0_ISR
  7050     001C                     i1l4487:
  7051                           
  7052                           ;mcc_generated_files/interrupt_manager.c: 63:     if(INTCONbits.PEIE == 1)
  7053     001C  1F0B               	btfss	11,6	;volatile
  7054     001D  281F               	goto	u358_21
  7055     001E  2820               	goto	u358_20
  7056     001F                     u358_21:
  7057     001F  2854               	goto	i1l508
  7058     0020                     u358_20:
  7059     0020                     i1l4489:
  7060                           
  7061                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE2bits.C2IE == 1 && PIR2bits.C2IF == 1)
  7062     0020  0021               	movlb	1	; select bank1
  7063     0021  1F12               	btfss	18,6	;volatile
  7064     0022  2824               	goto	u359_21
  7065     0023  2825               	goto	u359_20
  7066     0024                     u359_21:
  7067     0024  282D               	goto	i1l4495
  7068     0025                     u359_20:
  7069     0025                     i1l4491:
  7070     0025  0020               	movlb	0	; select bank0
  7071     0026  1F12               	btfss	18,6	;volatile
  7072     0027  2829               	goto	u360_21
  7073     0028  282A               	goto	u360_20
  7074     0029                     u360_21:
  7075     0029  282D               	goto	i1l4495
  7076     002A                     u360_20:
  7077     002A                     i1l4493:
  7078                           
  7079                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             CMP2_ISR();
  7080     002A  3188  207F  3180   	fcall	_CMP2_ISR
  7081     002D                     i1l4495:
  7082                           
  7083                           ;mcc_generated_files/interrupt_manager.c: 69:         if(PIE2bits.C1IE == 1 && PIR2bits.
      +                          C1IF == 1)
  7084     002D  0021               	movlb	1	; select bank1
  7085     002E  1E92               	btfss	18,5	;volatile
  7086     002F  2831               	goto	u361_21
  7087     0030  2832               	goto	u361_20
  7088     0031                     u361_21:
  7089     0031  283A               	goto	i1l4501
  7090     0032                     u361_20:
  7091     0032                     i1l4497:
  7092     0032  0020               	movlb	0	; select bank0
  7093     0033  1E92               	btfss	18,5	;volatile
  7094     0034  2836               	goto	u362_21
  7095     0035  2837               	goto	u362_20
  7096     0036                     u362_21:
  7097     0036  283A               	goto	i1l4501
  7098     0037                     u362_20:
  7099     0037                     i1l4499:
  7100                           
  7101                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP1_ISR();
  7102     0037  3188  2079  3180   	fcall	_CMP1_ISR
  7103     003A                     i1l4501:
  7104                           
  7105                           ;mcc_generated_files/interrupt_manager.c: 73:         if(PIE3bits.CCP4IE == 1 && PIR3bit
      +                          s.CCP4IF == 1)
  7106     003A  0021               	movlb	1	; select bank1
  7107     003B  1E93               	btfss	19,5	;volatile
  7108     003C  283E               	goto	u363_21
  7109     003D  283F               	goto	u363_20
  7110     003E                     u363_21:
  7111     003E  2847               	goto	i1l4507
  7112     003F                     u363_20:
  7113     003F                     i1l4503:
  7114     003F  0020               	movlb	0	; select bank0
  7115     0040  1E93               	btfss	19,5	;volatile
  7116     0041  2843               	goto	u364_21
  7117     0042  2844               	goto	u364_20
  7118     0043                     u364_21:
  7119     0043  2847               	goto	i1l4507
  7120     0044                     u364_20:
  7121     0044                     i1l4505:
  7122                           
  7123                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CCP4_CaptureISR();
  7124     0044  3189  2188  3180   	fcall	_CCP4_CaptureISR
  7125     0047                     i1l4507:
  7126                           
  7127                           ;mcc_generated_files/interrupt_manager.c: 77:         if(PIE3bits.TMR4IE == 1 && PIR3bit
      +                          s.TMR4IF == 1)
  7128     0047  0021               	movlb	1	; select bank1
  7129     0048  1C93               	btfss	19,1	;volatile
  7130     0049  284B               	goto	u365_21
  7131     004A  284C               	goto	u365_20
  7132     004B                     u365_21:
  7133     004B  2854               	goto	i1l508
  7134     004C                     u365_20:
  7135     004C                     i1l4509:
  7136     004C  0020               	movlb	0	; select bank0
  7137     004D  1C93               	btfss	19,1	;volatile
  7138     004E  2850               	goto	u366_21
  7139     004F  2851               	goto	u366_20
  7140     0050                     u366_21:
  7141     0050  2854               	goto	i1l508
  7142     0051                     u366_20:
  7143     0051                     i1l4511:
  7144                           
  7145                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR4_ISR();
  7146     0051  318A  2210  3180   	fcall	_TMR4_ISR
  7147     0054                     i1l508:
  7148     0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7149     0055  0009               	retfie
  7150     0056                     __end_of_INTERRUPT_InterruptManager:
  7151                           
  7152                           	psect	text38
  7153     0A10                     __ptext38:	
  7154 ;; *************** function _TMR4_ISR *****************
  7155 ;; Defined at:
  7156 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7170 ;;      Params:         0       0       0       0       0       0
  7171 ;;      Locals:         0       0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0
  7173 ;;      Totals:         0       0       0       0       0       0
  7174 ;;Total ram usage:        0 bytes
  7175 ;; Hardware stack levels used: 1
  7176 ;; Hardware stack levels required when called: 5
  7177 ;; This function calls:
  7178 ;;		_TMR4_CallBack
  7179 ;; This function is called by:
  7180 ;;		_INTERRUPT_InterruptManager
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184     0A10                     _TMR4_ISR:	
  7185                           ;psect for function _TMR4_ISR
  7186                           
  7187     0A10                     i1l4349:	
  7188                           ;incstack = 0
  7189                           ; Regs used in _TMR4_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7190                           
  7191                           
  7192                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  7193     0A10  0020               	movlb	0	; select bank0
  7194     0A11  1093               	bcf	19,1	;volatile
  7195     0A12                     i1l4351:
  7196                           
  7197                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 2)
  7198     0A12  3001               	movlw	1
  7199     0A13  0021               	movlb	1	; select bank1
  7200     0A14  07AC               	addwf	TMR4_ISR@CountCallBack^(0+128),f	;volatile
  7201     0A15  3000               	movlw	0
  7202     0A16  3DAD               	addwfc	(TMR4_ISR@CountCallBack+1)^(0+128),f	;volatile
  7203     0A17  3000               	movlw	0
  7204     0A18  022D               	subwf	(TMR4_ISR@CountCallBack+1)^(0+128),w	;volatile
  7205     0A19  3002               	movlw	2
  7206     0A1A  1903               	skipnz
  7207     0A1B  022C               	subwf	TMR4_ISR@CountCallBack^(0+128),w	;volatile
  7208     0A1C  1C03               	skipc
  7209     0A1D  2A1F               	goto	u340_21
  7210     0A1E  2A20               	goto	u340_20
  7211     0A1F                     u340_21:
  7212     0A1F  2A26               	goto	i1l699
  7213     0A20                     u340_20:
  7214     0A20                     i1l4353:
  7215                           
  7216                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  7217     0A20  3189  211E  318A   	fcall	_TMR4_CallBack
  7218     0A23                     i1l4355:
  7219                           
  7220                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  7221     0A23  0021               	movlb	1	; select bank1
  7222     0A24  01AC               	clrf	TMR4_ISR@CountCallBack^(0+128)	;volatile
  7223     0A25  01AD               	clrf	(TMR4_ISR@CountCallBack+1)^(0+128)	;volatile
  7224     0A26                     i1l699:
  7225     0A26  0008               	return
  7226     0A27                     __end_of_TMR4_ISR:
  7227                           
  7228                           	psect	text39
  7229     091E                     __ptext39:	
  7230 ;; *************** function _TMR4_CallBack *****************
  7231 ;; Defined at:
  7232 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;		None
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7246 ;;      Params:         0       0       0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0
  7249 ;;      Totals:         0       0       0       0       0       0
  7250 ;;Total ram usage:        0 bytes
  7251 ;; Hardware stack levels used: 1
  7252 ;; Hardware stack levels required when called: 4
  7253 ;; This function calls:
  7254 ;;		NULL
  7255 ;;		_TMR4_DefaultInterruptHandler
  7256 ;;		_controleMovimento
  7257 ;; This function is called by:
  7258 ;;		_TMR4_ISR
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262     091E                     _TMR4_CallBack:	
  7263                           ;psect for function _TMR4_CallBack
  7264                           
  7265     091E                     i1l4237:	
  7266                           ;incstack = 0
  7267                           ; Regs used in _TMR4_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7268                           
  7269                           
  7270                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  7271     091E  0021               	movlb	1	; select bank1
  7272     091F  0861               	movf	_TMR4_InterruptHandler^(0+128),w
  7273     0920  0462               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  7274     0921  1903               	btfsc	3,2
  7275     0922  2924               	goto	u330_21
  7276     0923  2925               	goto	u330_20
  7277     0924                     u330_21:
  7278     0924  292A               	goto	i1l703
  7279     0925                     u330_20:
  7280     0925                     i1l4239:
  7281                           
  7282                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  7283     0925  0862               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  7284     0926  008A               	movwf	10
  7285     0927  0861               	movf	_TMR4_InterruptHandler^(0+128),w
  7286     0928  000A               	callw
  7287     0929  3189               	pagesel	$
  7288     092A                     i1l703:
  7289     092A  0008               	return
  7290     092B                     __end_of_TMR4_CallBack:
  7291                           
  7292                           	psect	text40
  7293     0860                     __ptext40:	
  7294 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  7295 ;; Defined at:
  7296 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		None
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7310 ;;      Params:         0       0       0       0       0       0
  7311 ;;      Locals:         0       0       0       0       0       0
  7312 ;;      Temps:          0       0       0       0       0       0
  7313 ;;      Totals:         0       0       0       0       0       0
  7314 ;;Total ram usage:        0 bytes
  7315 ;; Hardware stack levels used: 1
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_TMR4_Initialize
  7320 ;;		_TMR4_CallBack
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324     0860                     _TMR4_DefaultInterruptHandler:	
  7325                           ;psect for function _TMR4_DefaultInterruptHandler
  7326                           
  7327     0860                     i1l709:	
  7328                           ;incstack = 0
  7329                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  7330                           
  7331     0860  0008               	return
  7332     0861                     __end_of_TMR4_DefaultInterruptHandler:
  7333                           
  7334                           	psect	text41
  7335     0E64                     __ptext41:	
  7336 ;; *************** function _controleMovimento *****************
  7337 ;; Defined at:
  7338 ;;		line 230 in file "main.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;		None
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      void 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7352 ;;      Params:         0       0       0       0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0
  7354 ;;      Temps:          2       0       0       0       0       0
  7355 ;;      Totals:         2       0       0       0       0       0
  7356 ;;Total ram usage:        2 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; Hardware stack levels required when called: 3
  7359 ;; This function calls:
  7360 ;;		_PWM3_LoadDutyValue
  7361 ;;		i1_matrixUpdate
  7362 ;; This function is called by:
  7363 ;;		_main
  7364 ;;		_TMR4_CallBack
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368     0E64                     _controleMovimento:	
  7369                           ;psect for function _controleMovimento
  7370                           
  7371     0E64                     i1l3837:	
  7372                           ;incstack = 0
  7373                           ; Regs used in _controleMovimento: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7374                           
  7375                           
  7376                           ;main.c: 231:     static uint8_t cont = 0;;main.c: 232:     switch(mov){
  7377     0E64  2E84               	goto	i1l3861
  7378     0E65                     i1l3839:
  7379                           
  7380                           ;main.c: 234:             PWM3_LoadDutyValue(0);
  7381     0E65  3000               	movlw	0
  7382     0E66  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7383     0E67  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7384     0E68  3189  21F9  318E   	fcall	_PWM3_LoadDutyValue
  7385     0E6B                     i1l3841:
  7386                           
  7387                           ;main.c: 235:             cont = 0;
  7388     0E6B  0021               	movlb	1	; select bank1
  7389     0E6C  01BA               	clrf	controleMovimento@cont^(0+128)
  7390                           
  7391                           ;main.c: 236:             break;
  7392     0E6D  2E9B               	goto	i1l3863
  7393     0E6E                     i1l3843:
  7394                           
  7395                           ;main.c: 238:             if (cont >=4){
  7396     0E6E  3004               	movlw	4
  7397     0E6F  023A               	subwf	controleMovimento@cont^(0+128),w
  7398     0E70  1C03               	skipc
  7399     0E71  2E73               	goto	u299_21
  7400     0E72  2E74               	goto	u299_20
  7401     0E73                     u299_21:
  7402     0E73  2E77               	goto	i1l3849
  7403     0E74                     u299_20:
  7404     0E74                     i1l3845:
  7405                           
  7406                           ;main.c: 240:                 mov = RetornaS0;
  7407     0E74  3003               	movlw	3
  7408     0E75  00C9               	movwf	_mov^(0+128)
  7409     0E76  2E6B               	goto	i1l3841
  7410     0E77                     i1l3849:
  7411                           
  7412                           ;main.c: 243:                 cont++;
  7413     0E77  3001               	movlw	1
  7414     0E78  00FB               	movwf	??_controleMovimento
  7415     0E79  087B               	movf	??_controleMovimento,w
  7416     0E7A  07BA               	addwf	controleMovimento@cont^(0+128),f
  7417     0E7B  2E9B               	goto	i1l3863
  7418     0E7C                     i1l3851:
  7419                           
  7420                           ;main.c: 247:             PWM3_LoadDutyValue(500);
  7421     0E7C  30F4               	movlw	244
  7422     0E7D  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7423     0E7E  3001               	movlw	1
  7424     0E7F  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7425     0E80  3189  21F9  318E   	fcall	_PWM3_LoadDutyValue
  7426     0E83  2E6B               	goto	i1l3841
  7427     0E84                     i1l3861:
  7428     0E84  0021               	movlb	1	; select bank1
  7429     0E85  0849               	movf	_mov^(0+128),w
  7430     0E86  00FB               	movwf	??_controleMovimento
  7431     0E87  01FC               	clrf	??_controleMovimento+1
  7432                           
  7433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7434                           ; Switch size 1, requested type "simple"
  7435                           ; Number of cases is 1, Range of values is 0 to 0
  7436                           ; switch strategies available:
  7437                           ; Name         Instructions Cycles
  7438                           ; simple_byte            4     3 (average)
  7439                           ; direct_byte            8     6 (fixed)
  7440                           ; jumptable            260     6 (fixed)
  7441                           ;	Chosen strategy is simple_byte
  7442     0E88  087C               	movf	??_controleMovimento+1,w
  7443     0E89  3A00               	xorlw	0	; case 0
  7444     0E8A  1903               	skipnz
  7445     0E8B  2E8D               	goto	i1l4669
  7446     0E8C  2E9B               	goto	i1l3863
  7447     0E8D                     i1l4669:
  7448                           
  7449                           ; Switch size 1, requested type "simple"
  7450                           ; Number of cases is 4, Range of values is 0 to 3
  7451                           ; switch strategies available:
  7452                           ; Name         Instructions Cycles
  7453                           ; simple_byte           13     7 (average)
  7454                           ; direct_byte           14     6 (fixed)
  7455                           ; jumptable            260     6 (fixed)
  7456                           ;	Chosen strategy is simple_byte
  7457     0E8D  087B               	movf	??_controleMovimento,w
  7458     0E8E  3A00               	xorlw	0	; case 0
  7459     0E8F  1903               	skipnz
  7460     0E90  2E65               	goto	i1l3839
  7461     0E91  3A01               	xorlw	1	; case 1
  7462     0E92  1903               	skipnz
  7463     0E93  2E6E               	goto	i1l3843
  7464     0E94  3A03               	xorlw	3	; case 2
  7465     0E95  1903               	skipnz
  7466     0E96  2E7C               	goto	i1l3851
  7467     0E97  3A01               	xorlw	1	; case 3
  7468     0E98  1903               	skipnz
  7469     0E99  2E7C               	goto	i1l3851
  7470     0E9A  2E9B               	goto	i1l3863
  7471     0E9B                     i1l3863:
  7472                           
  7473                           ;main.c: 256:     if(destinoSub != 0 ){
  7474     0E9B  083E               	movf	_destinoSub^(0+128),w
  7475     0E9C  1903               	btfsc	3,2
  7476     0E9D  2E9F               	goto	u300_21
  7477     0E9E  2EA0               	goto	u300_20
  7478     0E9F                     u300_21:
  7479     0E9F  2EBB               	goto	i1l3875
  7480     0EA0                     u300_20:
  7481     0EA0                     i1l3865:
  7482                           
  7483                           ;main.c: 258:         subindo = 1;
  7484     0EA0  0020               	movlb	0	; select bank0
  7485     0EA1  01EF               	clrf	_subindo
  7486     0EA2  0AEF               	incf	_subindo,f
  7487     0EA3                     i1l883:	
  7488                           ;main.c: 259:         do { LATAbits.LATA7 = 1; } while(0);
  7489                           
  7490     0EA3  0022               	movlb	2	; select bank2
  7491     0EA4  178C               	bsf	12,7	;volatile
  7492     0EA5                     i1l3867:
  7493                           
  7494                           ;main.c: 260:         if(mov == EmTrajeto || mov == RetornaS0){
  7495     0EA5  3002               	movlw	2
  7496     0EA6  0021               	movlb	1	; select bank1
  7497     0EA7  0649               	xorwf	_mov^(0+128),w
  7498     0EA8  1903               	btfsc	3,2
  7499     0EA9  2EAB               	goto	u301_21
  7500     0EAA  2EAC               	goto	u301_20
  7501     0EAB                     u301_21:
  7502     0EAB  2EB2               	goto	i1l3871
  7503     0EAC                     u301_20:
  7504     0EAC                     i1l3869:
  7505     0EAC  3003               	movlw	3
  7506     0EAD  0649               	xorwf	_mov^(0+128),w
  7507     0EAE  1D03               	btfss	3,2
  7508     0EAF  2EB1               	goto	u302_21
  7509     0EB0  2EB2               	goto	u302_20
  7510     0EB1                     u302_21:
  7511     0EB1  2ED4               	goto	i1l3885
  7512     0EB2                     u302_20:
  7513     0EB2                     i1l3871:
  7514                           
  7515                           ;main.c: 261:             MatrixLed[5] = 0b01100000;
  7516     0EB2  3060               	movlw	96
  7517     0EB3  00A5               	movwf	(_MatrixLed^(0+128)+5)
  7518                           
  7519                           ;main.c: 262:             MatrixLed[6] = 0b11000000;
  7520     0EB4  30C0               	movlw	192
  7521     0EB5  00A6               	movwf	(_MatrixLed^(0+128)+6)
  7522                           
  7523                           ;main.c: 263:             MatrixLed[7] = 0b01100000;
  7524     0EB6  3060               	movlw	96
  7525     0EB7  00A7               	movwf	(_MatrixLed^(0+128)+7)
  7526     0EB8                     i1l3873:
  7527                           
  7528                           ;main.c: 264:             motor = 1;
  7529     0EB8  01BF               	clrf	_motor^(0+128)
  7530     0EB9  0ABF               	incf	_motor^(0+128),f
  7531     0EBA  2ED4               	goto	i1l3885
  7532     0EBB                     i1l3875:
  7533                           
  7534                           ;main.c: 268:         subindo = 0;
  7535     0EBB  0020               	movlb	0	; select bank0
  7536     0EBC  01EF               	clrf	_subindo
  7537     0EBD                     i1l3877:
  7538     0EBD  0022               	movlb	2	; select bank2
  7539     0EBE  138C               	bcf	12,7	;volatile
  7540     0EBF                     i1l3879:
  7541                           
  7542                           ;main.c: 270:         if(mov == EmTrajeto || mov == RetornaS0){
  7543     0EBF  3002               	movlw	2
  7544     0EC0  0021               	movlb	1	; select bank1
  7545     0EC1  0649               	xorwf	_mov^(0+128),w
  7546     0EC2  1903               	btfsc	3,2
  7547     0EC3  2EC5               	goto	u303_21
  7548     0EC4  2EC6               	goto	u303_20
  7549     0EC5                     u303_21:
  7550     0EC5  2ECC               	goto	i1l3883
  7551     0EC6                     u303_20:
  7552     0EC6                     i1l3881:
  7553     0EC6  3003               	movlw	3
  7554     0EC7  0649               	xorwf	_mov^(0+128),w
  7555     0EC8  1D03               	btfss	3,2
  7556     0EC9  2ECB               	goto	u304_21
  7557     0ECA  2ECC               	goto	u304_20
  7558     0ECB                     u304_21:
  7559     0ECB  2ED4               	goto	i1l3885
  7560     0ECC                     u304_20:
  7561     0ECC                     i1l3883:
  7562                           
  7563                           ;main.c: 271:             MatrixLed[5] = 0b11000000;
  7564     0ECC  30C0               	movlw	192
  7565     0ECD  00A5               	movwf	(_MatrixLed^(0+128)+5)
  7566                           
  7567                           ;main.c: 272:             MatrixLed[6] = 0b01100000;
  7568     0ECE  3060               	movlw	96
  7569     0ECF  00A6               	movwf	(_MatrixLed^(0+128)+6)
  7570                           
  7571                           ;main.c: 273:             MatrixLed[7] = 0b11000000;
  7572     0ED0  30C0               	movlw	192
  7573     0ED1  00A7               	movwf	(_MatrixLed^(0+128)+7)
  7574                           
  7575                           ;main.c: 274:             motor = 2;
  7576     0ED2  3002               	movlw	2
  7577     0ED3  00BF               	movwf	_motor^(0+128)
  7578     0ED4                     i1l3885:
  7579                           
  7580                           ;main.c: 278:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  7581     0ED4  0827               	movf	(_MatrixLed^(0+128)+7),w
  7582     0ED5  043E               	iorwf	_destinoSub^(0+128),w
  7583     0ED6  00A7               	movwf	(_MatrixLed^(0+128)+7)
  7584     0ED7                     i1l3887:
  7585                           
  7586                           ;main.c: 279:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  7587     0ED7  0826               	movf	(_MatrixLed^(0+128)+6),w
  7588     0ED8  043D               	iorwf	_destinoDesc^(0+128),w
  7589     0ED9  00A6               	movwf	(_MatrixLed^(0+128)+6)
  7590     0EDA                     i1l3889:
  7591                           
  7592                           ;main.c: 280:     matrixUpdate();
  7593     0EDA  318A  2240  318E   	fcall	i1_matrixUpdate
  7594     0EDD                     i1l894:
  7595     0EDD  0008               	return
  7596     0EDE                     __end_of_controleMovimento:
  7597                           
  7598                           	psect	text42
  7599     0A27                     __ptext42:	
  7600 ;; *************** function _TMR0_ISR *****************
  7601 ;; Defined at:
  7602 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7616 ;;      Params:         0       0       0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0
  7619 ;;      Totals:         0       0       0       0       0       0
  7620 ;;Total ram usage:        0 bytes
  7621 ;; Hardware stack levels used: 1
  7622 ;; Hardware stack levels required when called: 4
  7623 ;; This function calls:
  7624 ;;		_TMR0_CallBack
  7625 ;; This function is called by:
  7626 ;;		_INTERRUPT_InterruptManager
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630     0A27                     _TMR0_ISR:	
  7631                           ;psect for function _TMR0_ISR
  7632                           
  7633     0A27                     i1l4335:	
  7634                           ;incstack = 0
  7635                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7636                           
  7637                           
  7638                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  7639     0A27  110B               	bcf	11,2	;volatile
  7640     0A28                     i1l4337:
  7641                           
  7642                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  7643     0A28  0020               	movlb	0	; select bank0
  7644     0A29  086E               	movf	_timer0ReloadVal,w	;volatile
  7645     0A2A  0095               	movwf	21	;volatile
  7646                           
  7647                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 5)
  7648     0A2B  3001               	movlw	1
  7649     0A2C  0021               	movlb	1	; select bank1
  7650     0A2D  07AE               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
  7651     0A2E  3000               	movlw	0
  7652     0A2F  3DAF               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
  7653     0A30  3000               	movlw	0
  7654     0A31  022F               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
  7655     0A32  3005               	movlw	5
  7656     0A33  1903               	skipnz
  7657     0A34  022E               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
  7658     0A35  1C03               	skipc
  7659     0A36  2A38               	goto	u339_21
  7660     0A37  2A39               	goto	u339_20
  7661     0A38                     u339_21:
  7662     0A38  2A3F               	goto	i1l619
  7663     0A39                     u339_20:
  7664     0A39                     i1l4339:
  7665                           
  7666                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  7667     0A39  3189  2111  318A   	fcall	_TMR0_CallBack
  7668     0A3C                     i1l4341:
  7669                           
  7670                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  7671     0A3C  0021               	movlb	1	; select bank1
  7672     0A3D  01AE               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
  7673     0A3E  01AF               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
  7674     0A3F                     i1l619:
  7675     0A3F  0008               	return
  7676     0A40                     __end_of_TMR0_ISR:
  7677                           
  7678                           	psect	text43
  7679     0911                     __ptext43:	
  7680 ;; *************** function _TMR0_CallBack *****************
  7681 ;; Defined at:
  7682 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;		None
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7696 ;;      Params:         0       0       0       0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0
  7699 ;;      Totals:         0       0       0       0       0       0
  7700 ;;Total ram usage:        0 bytes
  7701 ;; Hardware stack levels used: 1
  7702 ;; Hardware stack levels required when called: 3
  7703 ;; This function calls:
  7704 ;;		NULL
  7705 ;;		_TMR0_DefaultInterruptHandler
  7706 ;;		_sendInfo
  7707 ;; This function is called by:
  7708 ;;		_TMR0_ISR
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712     0911                     _TMR0_CallBack:	
  7713                           ;psect for function _TMR0_CallBack
  7714                           
  7715     0911                     i1l4229:	
  7716                           ;incstack = 0
  7717                           ; Regs used in _TMR0_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7718                           
  7719                           
  7720                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  7721     0911  0021               	movlb	1	; select bank1
  7722     0912  0865               	movf	_TMR0_InterruptHandler^(0+128),w
  7723     0913  0466               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  7724     0914  1903               	btfsc	3,2
  7725     0915  2917               	goto	u329_21
  7726     0916  2918               	goto	u329_20
  7727     0917                     u329_21:
  7728     0917  291D               	goto	i1l623
  7729     0918                     u329_20:
  7730     0918                     i1l4231:
  7731                           
  7732                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  7733     0918  0866               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  7734     0919  008A               	movwf	10
  7735     091A  0865               	movf	_TMR0_InterruptHandler^(0+128),w
  7736     091B  000A               	callw
  7737     091C  3189               	pagesel	$
  7738     091D                     i1l623:
  7739     091D  0008               	return
  7740     091E                     __end_of_TMR0_CallBack:
  7741                           
  7742                           	psect	text44
  7743     085F                     __ptext44:	
  7744 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7745 ;; Defined at:
  7746 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;		None
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;		None
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  1    wreg      void 
  7753 ;; Registers used:
  7754 ;;		None
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7760 ;;      Params:         0       0       0       0       0       0
  7761 ;;      Locals:         0       0       0       0       0       0
  7762 ;;      Temps:          0       0       0       0       0       0
  7763 ;;      Totals:         0       0       0       0       0       0
  7764 ;;Total ram usage:        0 bytes
  7765 ;; Hardware stack levels used: 1
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_TMR0_Initialize
  7770 ;;		_TMR0_CallBack
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774     085F                     _TMR0_DefaultInterruptHandler:	
  7775                           ;psect for function _TMR0_DefaultInterruptHandler
  7776                           
  7777     085F                     i1l629:	
  7778                           ;incstack = 0
  7779                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7780                           
  7781     085F  0008               	return
  7782     0860                     __end_of_TMR0_DefaultInterruptHandler:
  7783                           
  7784                           	psect	text45
  7785     02AA                     __ptext45:	
  7786 ;; *************** function _sendInfo *****************
  7787 ;; Defined at:
  7788 ;;		line 85 in file "main.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;		None
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  v               1   72[BANK0 ] unsigned char 
  7793 ;;  i               1   74[BANK0 ] unsigned char 
  7794 ;;  bcd             2   76[BANK0 ] struct .
  7795 ;;  velocidade      2   70[BANK0 ] unsigned short 
  7796 ;;  mascara         1   75[BANK0 ] unsigned char 
  7797 ;;  destinoAtual    1   73[BANK0 ] unsigned char 
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7807 ;;      Params:         0       0       0       0       0       0
  7808 ;;      Locals:         0       8       0       0       0       0
  7809 ;;      Temps:          0       4       0       0       0       0
  7810 ;;      Totals:         0      12       0       0       0       0
  7811 ;;Total ram usage:       12 bytes
  7812 ;; Hardware stack levels used: 1
  7813 ;; Hardware stack levels required when called: 2
  7814 ;; This function calls:
  7815 ;;		_ADC_GetConversion
  7816 ;;		_EUSART_Write
  7817 ;;		___fldiv
  7818 ;;		___flmul
  7819 ;;		___fltol
  7820 ;;		___xxtofl
  7821 ;;		_abs
  7822 ;;		_bin2bcd
  7823 ;; This function is called by:
  7824 ;;		_main
  7825 ;;		_TMR0_CallBack
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829     02AA                     _sendInfo:	
  7830                           ;psect for function _sendInfo
  7831                           
  7832     02AA                     i1l3733:	
  7833                           ;incstack = 0
  7834                           ; Regs used in _sendInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7835                           
  7836                           
  7837                           ;main.c: 87:     bcd16_t bcd;;main.c: 88:     static uint8_t aux_altura = 0;;main.c: 89:
      +                               uint8_t destinoAtual=0;
  7838     02AA  0020               	movlb	0	; select bank0
  7839     02AB  01E9               	clrf	sendInfo@destinoAtual
  7840     02AC                     i1l3735:
  7841                           
  7842                           ;main.c: 93:     if (subindo){
  7843     02AC  086F               	movf	_subindo,w
  7844     02AD  1903               	btfsc	3,2
  7845     02AE  2AB0               	goto	u293_21
  7846     02AF  2AB1               	goto	u293_20
  7847     02B0                     u293_21:
  7848     02B0  2AB4               	goto	i1l3739
  7849     02B1                     u293_20:
  7850     02B1                     i1l3737:
  7851                           
  7852                           ;main.c: 94:         mascara = 0b00000001;
  7853     02B1  01EB               	clrf	sendInfo@mascara
  7854     02B2  0AEB               	incf	sendInfo@mascara,f
  7855                           
  7856                           ;main.c: 95:     }else{
  7857     02B3  2AB6               	goto	i1l3741
  7858     02B4                     i1l3739:
  7859                           
  7860                           ;main.c: 96:          mascara = 0b0001000;
  7861     02B4  3008               	movlw	8
  7862     02B5  00EB               	movwf	sendInfo@mascara
  7863     02B6                     i1l3741:
  7864                           
  7865                           ;main.c: 98:     for(uint8_t i = 0; i<4; i++ ){
  7866     02B6  01EA               	clrf	sendInfo@i
  7867     02B7                     i1l3747:
  7868     02B7                     i1l3749:
  7869                           
  7870                           ;main.c: 100:         if(subindo){
  7871     02B7  086F               	movf	_subindo,w
  7872     02B8  1903               	btfsc	3,2
  7873     02B9  2ABB               	goto	u294_21
  7874     02BA  2ABC               	goto	u294_20
  7875     02BB                     u294_21:
  7876     02BB  2ACB               	goto	i1l3753
  7877     02BC                     u294_20:
  7878     02BC                     i1l3751:
  7879                           
  7880                           ;main.c: 101:             mascara = mascara<<i;
  7881     02BC  086B               	movf	sendInfo@mascara,w
  7882     02BD  00E2               	movwf	??_sendInfo
  7883     02BE  0A6A               	incf	sendInfo@i,w
  7884     02BF  2AC1               	goto	u295_24
  7885     02C0                     u295_25:
  7886     02C0  35E2               	lslf	??_sendInfo,f
  7887     02C1                     u295_24:
  7888     02C1  0B89               	decfsz	9,f
  7889     02C2  2AC0               	goto	u295_25
  7890     02C3  0862               	movf	??_sendInfo,w
  7891     02C4  00EB               	movwf	sendInfo@mascara
  7892                           
  7893                           ;main.c: 102:             v =destinoSub&mascara;
  7894     02C5  0021               	movlb	1	; select bank1
  7895     02C6  083E               	movf	_destinoSub^(0+128),w
  7896     02C7  0020               	movlb	0	; select bank0
  7897     02C8  056B               	andwf	sendInfo@mascara,w
  7898     02C9  00E8               	movwf	sendInfo@v
  7899                           
  7900                           ;main.c: 103:         }else{
  7901     02CA  2AD9               	goto	i1l828
  7902     02CB                     i1l3753:
  7903                           
  7904                           ;main.c: 104:             mascara = i>>mascara;
  7905     02CB  086A               	movf	sendInfo@i,w
  7906     02CC  00E2               	movwf	??_sendInfo
  7907     02CD  0A6B               	incf	sendInfo@mascara,w
  7908     02CE  2AD0               	goto	u296_24
  7909     02CF                     u296_25:
  7910     02CF  36E2               	lsrf	??_sendInfo,f
  7911     02D0                     u296_24:
  7912     02D0  0B89               	decfsz	9,f
  7913     02D1  2ACF               	goto	u296_25
  7914     02D2  0862               	movf	??_sendInfo,w
  7915     02D3  00EB               	movwf	sendInfo@mascara
  7916                           
  7917                           ;main.c: 105:             v =destinoDesc&mascara;
  7918     02D4  0021               	movlb	1	; select bank1
  7919     02D5  083D               	movf	_destinoDesc^(0+128),w
  7920     02D6  0020               	movlb	0	; select bank0
  7921     02D7  056B               	andwf	sendInfo@mascara,w
  7922     02D8  00E8               	movwf	sendInfo@v
  7923     02D9                     i1l828:	
  7924                           ;main.c: 106:         }
  7925                           
  7926                           
  7927                           ;main.c: 107:         if(v !=0 ){
  7928     02D9  0868               	movf	sendInfo@v,w
  7929     02DA  1903               	btfsc	3,2
  7930     02DB  2ADD               	goto	u297_21
  7931     02DC  2ADE               	goto	u297_20
  7932     02DD                     u297_21:
  7933     02DD  2AE1               	goto	i1l3757
  7934     02DE                     u297_20:
  7935     02DE                     i1l3755:
  7936                           
  7937                           ;main.c: 108:             destinoAtual = v;
  7938     02DE  0868               	movf	sendInfo@v,w
  7939     02DF  00E9               	movwf	sendInfo@destinoAtual
  7940                           
  7941                           ;main.c: 109:             break;
  7942     02E0  2AF8               	goto	i1l3767
  7943     02E1                     i1l3757:
  7944                           
  7945                           ;main.c: 111:     }
  7946     02E1  3001               	movlw	1
  7947     02E2  00E2               	movwf	??_sendInfo
  7948     02E3  0862               	movf	??_sendInfo,w
  7949     02E4  07EA               	addwf	sendInfo@i,f
  7950     02E5                     i1l3759:
  7951     02E5  3004               	movlw	4
  7952     02E6  026A               	subwf	sendInfo@i,w
  7953     02E7  1C03               	skipc
  7954     02E8  2AEA               	goto	u298_21
  7955     02E9  2AEB               	goto	u298_20
  7956     02EA                     u298_21:
  7957     02EA  2AB7               	goto	i1l3747
  7958     02EB                     u298_20:
  7959     02EB  2AF8               	goto	i1l3767
  7960     02EC                     i1l831:	
  7961                           ;main.c: 114:         case 2:
  7962                           
  7963                           
  7964                           ;main.c: 115:             destinoAtual=1;
  7965     02EC  01E9               	clrf	sendInfo@destinoAtual
  7966     02ED  0AE9               	incf	sendInfo@destinoAtual,f
  7967                           
  7968                           ;main.c: 116:             break;
  7969     02EE  2B0B               	goto	i1l3769
  7970     02EF                     i1l3761:
  7971                           
  7972                           ;main.c: 118:             destinoAtual=2;
  7973     02EF  3002               	movlw	2
  7974     02F0  00E9               	movwf	sendInfo@destinoAtual
  7975                           
  7976                           ;main.c: 119:             break;
  7977     02F1  2B0B               	goto	i1l3769
  7978     02F2                     i1l3763:
  7979                           
  7980                           ;main.c: 121:             destinoAtual = 3;
  7981     02F2  3003               	movlw	3
  7982     02F3  00E9               	movwf	sendInfo@destinoAtual
  7983                           
  7984                           ;main.c: 122:             break;
  7985     02F4  2B0B               	goto	i1l3769
  7986     02F5                     i1l3765:
  7987                           
  7988                           ;main.c: 124:             destinoAtual = 4;
  7989     02F5  3004               	movlw	4
  7990     02F6  00E9               	movwf	sendInfo@destinoAtual
  7991                           
  7992                           ;main.c: 125:     }
  7993     02F7  2B0B               	goto	i1l3769
  7994     02F8                     i1l3767:
  7995     02F8  0869               	movf	sendInfo@destinoAtual,w
  7996     02F9  00E2               	movwf	??_sendInfo
  7997     02FA  01E3               	clrf	??_sendInfo+1
  7998                           
  7999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8000                           ; Switch size 1, requested type "simple"
  8001                           ; Number of cases is 1, Range of values is 0 to 0
  8002                           ; switch strategies available:
  8003                           ; Name         Instructions Cycles
  8004                           ; simple_byte            4     3 (average)
  8005                           ; direct_byte            8     6 (fixed)
  8006                           ; jumptable            260     6 (fixed)
  8007                           ;	Chosen strategy is simple_byte
  8008     02FB  0863               	movf	??_sendInfo+1,w
  8009     02FC  3A00               	xorlw	0	; case 0
  8010     02FD  1903               	skipnz
  8011     02FE  2B00               	goto	i1l4671
  8012     02FF  2AF5               	goto	i1l3765
  8013     0300                     i1l4671:
  8014                           
  8015                           ; Switch size 1, requested type "simple"
  8016                           ; Number of cases is 3, Range of values is 2 to 8
  8017                           ; switch strategies available:
  8018                           ; Name         Instructions Cycles
  8019                           ; simple_byte           10     6 (average)
  8020                           ; direct_byte           23     9 (fixed)
  8021                           ; jumptable            263     9 (fixed)
  8022                           ;	Chosen strategy is simple_byte
  8023     0300  0862               	movf	??_sendInfo,w
  8024     0301  3A02               	xorlw	2	; case 2
  8025     0302  1903               	skipnz
  8026     0303  2AEC               	goto	i1l831
  8027     0304  3A06               	xorlw	6	; case 4
  8028     0305  1903               	skipnz
  8029     0306  2AEF               	goto	i1l3761
  8030     0307  3A0C               	xorlw	12	; case 8
  8031     0308  1903               	skipnz
  8032     0309  2AF2               	goto	i1l3763
  8033     030A  2AF5               	goto	i1l3765
  8034     030B                     i1l3769:
  8035                           
  8036                           ;main.c: 127:     altura = (1.5 * pulsoEncoder);
  8037     030B  0021               	movlb	1	; select bank1
  8038     030C  084D               	movf	_pulsoEncoder^(0+128),w
  8039     030D  0020               	movlb	0	; select bank0
  8040     030E  00E2               	movwf	??_sendInfo
  8041     030F  01E3               	clrf	??_sendInfo+1
  8042     0310  01E4               	clrf	??_sendInfo+2
  8043     0311  01E5               	clrf	??_sendInfo+3
  8044     0312  0865               	movf	??_sendInfo+3,w
  8045     0313  00F7               	movwf	___xxtofl@val+3
  8046     0314  0864               	movf	??_sendInfo+2,w
  8047     0315  00F6               	movwf	___xxtofl@val+2
  8048     0316  0863               	movf	??_sendInfo+1,w
  8049     0317  00F5               	movwf	___xxtofl@val+1
  8050     0318  0862               	movf	??_sendInfo,w
  8051     0319  00F4               	movwf	___xxtofl@val
  8052     031A  3001               	movlw	1
  8053     031B  3186  2661  3182   	fcall	___xxtofl
  8054     031E  0877               	movf	?___xxtofl+3,w
  8055     031F  0020               	movlb	0	; select bank0
  8056     0320  00C7               	movwf	___flmul@a+3
  8057     0321  0876               	movf	?___xxtofl+2,w
  8058     0322  00C6               	movwf	___flmul@a+2
  8059     0323  0875               	movf	?___xxtofl+1,w
  8060     0324  00C5               	movwf	___flmul@a+1
  8061     0325  0874               	movf	?___xxtofl,w
  8062     0326  00C4               	movwf	___flmul@a
  8063     0327  303F               	movlw	63
  8064     0328  00C3               	movwf	___flmul@b+3
  8065     0329  30C0               	movlw	192
  8066     032A  00C2               	movwf	___flmul@b+2
  8067     032B  3000               	movlw	0
  8068     032C  00C1               	movwf	___flmul@b+1
  8069     032D  3000               	movlw	0
  8070     032E  00C0               	movwf	___flmul@b
  8071     032F  3180  206F  3182   	fcall	___flmul
  8072     0332  0020               	movlb	0	; select bank0
  8073     0333  0843               	movf	?___flmul+3,w
  8074     0334  00DD               	movwf	___fltol@f1+3
  8075     0335  0842               	movf	?___flmul+2,w
  8076     0336  00DC               	movwf	___fltol@f1+2
  8077     0337  0841               	movf	?___flmul+1,w
  8078     0338  00DB               	movwf	___fltol@f1+1
  8079     0339  0840               	movf	?___flmul,w
  8080     033A  00DA               	movwf	___fltol@f1
  8081     033B  318D  25F3  3182   	fcall	___fltol
  8082     033E  0020               	movlb	0	; select bank0
  8083     033F  085A               	movf	?___fltol,w
  8084     0340  0021               	movlb	1	; select bank1
  8085     0341  00C0               	movwf	_altura^(0+128)
  8086                           
  8087                           ;main.c: 128:     velocidadeMotor = (abs(altura - aux_altura)/ 300.f) * 1000;
  8088     0342  3044               	movlw	68
  8089     0343  0020               	movlb	0	; select bank0
  8090     0344  00C3               	movwf	___flmul@b+3
  8091     0345  307A               	movlw	122
  8092     0346  00C2               	movwf	___flmul@b+2
  8093     0347  3000               	movlw	0
  8094     0348  00C1               	movwf	___flmul@b+1
  8095     0349  3000               	movlw	0
  8096     034A  00C0               	movwf	___flmul@b
  8097     034B  3043               	movlw	67
  8098     034C  00A9               	movwf	___fldiv@a+3
  8099     034D  3096               	movlw	150
  8100     034E  00A8               	movwf	___fldiv@a+2
  8101     034F  3000               	movlw	0
  8102     0350  00A7               	movwf	___fldiv@a+1
  8103     0351  3000               	movlw	0
  8104     0352  00A6               	movwf	___fldiv@a
  8105     0353  0021               	movlb	1	; select bank1
  8106     0354  083B               	movf	sendInfo@aux_altura^(0+128),w
  8107     0355  0240               	subwf	_altura^(0+128),w
  8108     0356  00F0               	movwf	abs@a
  8109     0357  01F1               	clrf	abs@a+1
  8110     0358  1C03               	skipc
  8111     0359  03F1               	decf	abs@a+1,f
  8112     035A  318A  2274  3182   	fcall	_abs
  8113     035D  0870               	movf	?_abs,w
  8114     035E  00F4               	movwf	___xxtofl@val
  8115     035F  0871               	movf	?_abs+1,w
  8116     0360  00F5               	movwf	___xxtofl@val+1
  8117     0361  0D89               	rlf	9,f
  8118     0362  3B89               	subwfb	9,f
  8119     0363  0989               	comf	9,f
  8120     0364  00F6               	movwf	___xxtofl@val+2
  8121     0365  00F7               	movwf	___xxtofl@val+3
  8122     0366  3001               	movlw	1
  8123     0367  3186  2661  3182   	fcall	___xxtofl
  8124     036A  0877               	movf	?___xxtofl+3,w
  8125     036B  0020               	movlb	0	; select bank0
  8126     036C  00AD               	movwf	___fldiv@b+3
  8127     036D  0876               	movf	?___xxtofl+2,w
  8128     036E  00AC               	movwf	___fldiv@b+2
  8129     036F  0875               	movf	?___xxtofl+1,w
  8130     0370  00AB               	movwf	___fldiv@b+1
  8131     0371  0874               	movf	?___xxtofl,w
  8132     0372  00AA               	movwf	___fldiv@b
  8133     0373  3184  24B7  3182   	fcall	___fldiv
  8134     0376  0020               	movlb	0	; select bank0
  8135     0377  0829               	movf	?___fldiv+3,w
  8136     0378  00C7               	movwf	___flmul@a+3
  8137     0379  0828               	movf	?___fldiv+2,w
  8138     037A  00C6               	movwf	___flmul@a+2
  8139     037B  0827               	movf	?___fldiv+1,w
  8140     037C  00C5               	movwf	___flmul@a+1
  8141     037D  0826               	movf	?___fldiv,w
  8142     037E  00C4               	movwf	___flmul@a
  8143     037F  3180  206F  3182   	fcall	___flmul
  8144     0382  0020               	movlb	0	; select bank0
  8145     0383  0843               	movf	?___flmul+3,w
  8146     0384  0021               	movlb	1	; select bank1
  8147     0385  00AB               	movwf	(_velocidadeMotor+3)^(0+128)
  8148     0386  0020               	movlb	0	; select bank0
  8149     0387  0842               	movf	?___flmul+2,w
  8150     0388  0021               	movlb	1	; select bank1
  8151     0389  00AA               	movwf	(_velocidadeMotor+2)^(0+128)
  8152     038A  0020               	movlb	0	; select bank0
  8153     038B  0841               	movf	?___flmul+1,w
  8154     038C  0021               	movlb	1	; select bank1
  8155     038D  00A9               	movwf	(_velocidadeMotor+1)^(0+128)
  8156     038E  0020               	movlb	0	; select bank0
  8157     038F  0840               	movf	?___flmul,w
  8158     0390  0021               	movlb	1	; select bank1
  8159     0391  00A8               	movwf	_velocidadeMotor^(0+128)
  8160     0392                     i1l3771:
  8161                           
  8162                           ;main.c: 129:     aux_altura = altura;
  8163     0392  0840               	movf	_altura^(0+128),w
  8164     0393  00BB               	movwf	sendInfo@aux_altura^(0+128)
  8165     0394                     i1l3773:
  8166                           
  8167                           ;main.c: 131:     velocidade = (uint16_t)(velocidadeMotor * 10);
  8168     0394  082B               	movf	(_velocidadeMotor+3)^(0+128),w
  8169     0395  0020               	movlb	0	; select bank0
  8170     0396  00C7               	movwf	___flmul@a+3
  8171     0397  0021               	movlb	1	; select bank1
  8172     0398  082A               	movf	(_velocidadeMotor+2)^(0+128),w
  8173     0399  0020               	movlb	0	; select bank0
  8174     039A  00C6               	movwf	___flmul@a+2
  8175     039B  0021               	movlb	1	; select bank1
  8176     039C  0829               	movf	(_velocidadeMotor+1)^(0+128),w
  8177     039D  0020               	movlb	0	; select bank0
  8178     039E  00C5               	movwf	___flmul@a+1
  8179     039F  0021               	movlb	1	; select bank1
  8180     03A0  0828               	movf	_velocidadeMotor^(0+128),w
  8181     03A1  0020               	movlb	0	; select bank0
  8182     03A2  00C4               	movwf	___flmul@a
  8183     03A3  3041               	movlw	65
  8184     03A4  00C3               	movwf	___flmul@b+3
  8185     03A5  3020               	movlw	32
  8186     03A6  00C2               	movwf	___flmul@b+2
  8187     03A7  3000               	movlw	0
  8188     03A8  00C1               	movwf	___flmul@b+1
  8189     03A9  3000               	movlw	0
  8190     03AA  00C0               	movwf	___flmul@b
  8191     03AB  3180  206F  3182   	fcall	___flmul
  8192     03AE  0020               	movlb	0	; select bank0
  8193     03AF  0843               	movf	?___flmul+3,w
  8194     03B0  00DD               	movwf	___fltol@f1+3
  8195     03B1  0842               	movf	?___flmul+2,w
  8196     03B2  00DC               	movwf	___fltol@f1+2
  8197     03B3  0841               	movf	?___flmul+1,w
  8198     03B4  00DB               	movwf	___fltol@f1+1
  8199     03B5  0840               	movf	?___flmul,w
  8200     03B6  00DA               	movwf	___fltol@f1
  8201     03B7  318D  25F3  3182   	fcall	___fltol
  8202     03BA  0020               	movlb	0	; select bank0
  8203     03BB  085B               	movf	?___fltol+1,w
  8204     03BC  00E7               	movwf	sendInfo@velocidade+1
  8205     03BD  085A               	movf	?___fltol,w
  8206     03BE  00E6               	movwf	sendInfo@velocidade
  8207     03BF                     i1l3775:
  8208                           
  8209                           ;main.c: 132:     temperatura = (ADC_GetConversion(2) / 1024.f) * 999;
  8210     03BF  3002               	movlw	2
  8211     03C0  318A  225A  3182   	fcall	_ADC_GetConversion
  8212     03C3  0870               	movf	?_ADC_GetConversion,w
  8213     03C4  0020               	movlb	0	; select bank0
  8214     03C5  00E2               	movwf	??_sendInfo
  8215     03C6  0871               	movf	?_ADC_GetConversion+1,w
  8216     03C7  00E3               	movwf	??_sendInfo+1
  8217     03C8  01E4               	clrf	??_sendInfo+2
  8218     03C9  01E5               	clrf	??_sendInfo+3
  8219     03CA  0865               	movf	??_sendInfo+3,w
  8220     03CB  00F7               	movwf	___xxtofl@val+3
  8221     03CC  0864               	movf	??_sendInfo+2,w
  8222     03CD  00F6               	movwf	___xxtofl@val+2
  8223     03CE  0863               	movf	??_sendInfo+1,w
  8224     03CF  00F5               	movwf	___xxtofl@val+1
  8225     03D0  0862               	movf	??_sendInfo,w
  8226     03D1  00F4               	movwf	___xxtofl@val
  8227     03D2  3000               	movlw	0
  8228     03D3  3186  2661  3182   	fcall	___xxtofl
  8229     03D6  0877               	movf	?___xxtofl+3,w
  8230     03D7  0020               	movlb	0	; select bank0
  8231     03D8  00AD               	movwf	___fldiv@b+3
  8232     03D9  0876               	movf	?___xxtofl+2,w
  8233     03DA  00AC               	movwf	___fldiv@b+2
  8234     03DB  0875               	movf	?___xxtofl+1,w
  8235     03DC  00AB               	movwf	___fldiv@b+1
  8236     03DD  0874               	movf	?___xxtofl,w
  8237     03DE  00AA               	movwf	___fldiv@b
  8238     03DF  3044               	movlw	68
  8239     03E0  00A9               	movwf	___fldiv@a+3
  8240     03E1  3080               	movlw	128
  8241     03E2  00A8               	movwf	___fldiv@a+2
  8242     03E3  3000               	movlw	0
  8243     03E4  00A7               	movwf	___fldiv@a+1
  8244     03E5  3000               	movlw	0
  8245     03E6  00A6               	movwf	___fldiv@a
  8246     03E7  3184  24B7  3182   	fcall	___fldiv
  8247     03EA  0020               	movlb	0	; select bank0
  8248     03EB  0829               	movf	?___fldiv+3,w
  8249     03EC  00C7               	movwf	___flmul@a+3
  8250     03ED  0828               	movf	?___fldiv+2,w
  8251     03EE  00C6               	movwf	___flmul@a+2
  8252     03EF  0827               	movf	?___fldiv+1,w
  8253     03F0  00C5               	movwf	___flmul@a+1
  8254     03F1  0826               	movf	?___fldiv,w
  8255     03F2  00C4               	movwf	___flmul@a
  8256     03F3  3044               	movlw	68
  8257     03F4  00C3               	movwf	___flmul@b+3
  8258     03F5  3079               	movlw	121
  8259     03F6  00C2               	movwf	___flmul@b+2
  8260     03F7  30C0               	movlw	192
  8261     03F8  00C1               	movwf	___flmul@b+1
  8262     03F9  3000               	movlw	0
  8263     03FA  00C0               	movwf	___flmul@b
  8264     03FB  3180  206F  3182   	fcall	___flmul
  8265     03FE  0020               	movlb	0	; select bank0
  8266     03FF  0843               	movf	?___flmul+3,w
  8267     0400  00DD               	movwf	___fltol@f1+3
  8268     0401  0842               	movf	?___flmul+2,w
  8269     0402  00DC               	movwf	___fltol@f1+2
  8270     0403  0841               	movf	?___flmul+1,w
  8271     0404  00DB               	movwf	___fltol@f1+1
  8272     0405  0840               	movf	?___flmul,w
  8273     0406  00DA               	movwf	___fltol@f1
  8274     0407  318D  25F3  3182   	fcall	___fltol
  8275     040A  0020               	movlb	0	; select bank0
  8276     040B  085B               	movf	?___fltol+1,w
  8277     040C  0021               	movlb	1	; select bank1
  8278     040D  00B5               	movwf	(_temperatura+1)^(0+128)
  8279     040E  0020               	movlb	0	; select bank0
  8280     040F  085A               	movf	?___fltol,w
  8281     0410  0021               	movlb	1	; select bank1
  8282     0411  00B4               	movwf	_temperatura^(0+128)
  8283     0412                     i1l3777:
  8284                           
  8285                           ;main.c: 134:     EUSART_Write('$');
  8286     0412  3024               	movlw	36
  8287     0413  3188  20E4  3182   	fcall	_EUSART_Write
  8288     0416                     i1l3779:
  8289                           
  8290                           ;main.c: 136:     EUSART_Write(0x30 + destinoAtual);
  8291     0416  0020               	movlb	0	; select bank0
  8292     0417  0869               	movf	sendInfo@destinoAtual,w
  8293     0418  3E30               	addlw	48
  8294     0419  3188  20E4  3182   	fcall	_EUSART_Write
  8295     041C                     i1l3781:
  8296                           
  8297                           ;main.c: 137:     EUSART_Write(0x2C);
  8298     041C  302C               	movlw	44
  8299     041D  3188  20E4  3182   	fcall	_EUSART_Write
  8300     0420                     i1l3783:
  8301                           
  8302                           ;main.c: 138:     EUSART_Write(0x30 + andarAtual);
  8303     0420  0021               	movlb	1	; select bank1
  8304     0421  0841               	movf	_andarAtual^(0+128),w
  8305     0422  3E30               	addlw	48
  8306     0423  3188  20E4  3182   	fcall	_EUSART_Write
  8307     0426                     i1l3785:
  8308                           
  8309                           ;main.c: 139:     EUSART_Write(0x2C);
  8310     0426  302C               	movlw	44
  8311     0427  3188  20E4  3182   	fcall	_EUSART_Write
  8312     042A                     i1l3787:
  8313                           
  8314                           ;main.c: 140:     EUSART_Write(0x30 + motor);
  8315     042A  0021               	movlb	1	; select bank1
  8316     042B  083F               	movf	_motor^(0+128),w
  8317     042C  3E30               	addlw	48
  8318     042D  3188  20E4  3182   	fcall	_EUSART_Write
  8319     0430                     i1l3789:
  8320                           
  8321                           ;main.c: 142:     EUSART_Write(0x2C);
  8322     0430  302C               	movlw	44
  8323     0431  3188  20E4  3182   	fcall	_EUSART_Write
  8324     0434                     i1l3791:
  8325                           
  8326                           ;main.c: 144:     bcd.v = bin2bcd(altura);
  8327     0434  0021               	movlb	1	; select bank1
  8328     0435  0840               	movf	_altura^(0+128),w
  8329     0436  0020               	movlb	0	; select bank0
  8330     0437  00E2               	movwf	??_sendInfo
  8331     0438  01E3               	clrf	??_sendInfo+1
  8332     0439  0862               	movf	??_sendInfo,w
  8333     043A  00FA               	movwf	bin2bcd@binVal
  8334     043B  0863               	movf	??_sendInfo+1,w
  8335     043C  00FB               	movwf	bin2bcd@binVal+1
  8336     043D  318F  276E  3182   	fcall	_bin2bcd
  8337     0440  087B               	movf	?_bin2bcd+1,w
  8338     0441  0020               	movlb	0	; select bank0
  8339     0442  00ED               	movwf	sendInfo@bcd+1
  8340     0443  087A               	movf	?_bin2bcd,w
  8341     0444  00EC               	movwf	sendInfo@bcd
  8342     0445                     i1l3793:
  8343                           
  8344                           ;main.c: 145:     EUSART_Write(bcd.num2 + 0x30);
  8345     0445  086D               	movf	sendInfo@bcd+1,w
  8346     0446  390F               	andlw	15
  8347     0447  3E30               	addlw	48
  8348     0448  3188  20E4  3182   	fcall	_EUSART_Write
  8349     044B                     i1l3795:
  8350                           
  8351                           ;main.c: 146:     EUSART_Write(bcd.num3 + 0x30);
  8352     044B  0020               	movlb	0	; select bank0
  8353     044C  0E6C               	swapf	sendInfo@bcd,w
  8354     044D  390F               	andlw	15
  8355     044E  3E30               	addlw	48
  8356     044F  3188  20E4  3182   	fcall	_EUSART_Write
  8357     0452                     i1l3797:
  8358                           
  8359                           ;main.c: 147:     EUSART_Write(bcd.num4 + 0x30);
  8360     0452  0020               	movlb	0	; select bank0
  8361     0453  086C               	movf	sendInfo@bcd,w
  8362     0454  390F               	andlw	15
  8363     0455  3E30               	addlw	48
  8364     0456  3188  20E4  3182   	fcall	_EUSART_Write
  8365     0459                     i1l3799:
  8366                           
  8367                           ;main.c: 148:     EUSART_Write(0x2C);
  8368     0459  302C               	movlw	44
  8369     045A  3188  20E4  3182   	fcall	_EUSART_Write
  8370     045D                     i1l3801:
  8371                           
  8372                           ;main.c: 150:     bcd.v = bin2bcd(velocidade);
  8373     045D  0020               	movlb	0	; select bank0
  8374     045E  0867               	movf	sendInfo@velocidade+1,w
  8375     045F  00FB               	movwf	bin2bcd@binVal+1
  8376     0460  0866               	movf	sendInfo@velocidade,w
  8377     0461  00FA               	movwf	bin2bcd@binVal
  8378     0462  318F  276E  3182   	fcall	_bin2bcd
  8379     0465  087B               	movf	?_bin2bcd+1,w
  8380     0466  0020               	movlb	0	; select bank0
  8381     0467  00ED               	movwf	sendInfo@bcd+1
  8382     0468  087A               	movf	?_bin2bcd,w
  8383     0469  00EC               	movwf	sendInfo@bcd
  8384     046A                     i1l3803:
  8385                           
  8386                           ;main.c: 151:     EUSART_Write(bcd.num2 + 0x30);
  8387     046A  086D               	movf	sendInfo@bcd+1,w
  8388     046B  390F               	andlw	15
  8389     046C  3E30               	addlw	48
  8390     046D  3188  20E4  3182   	fcall	_EUSART_Write
  8391     0470                     i1l3805:
  8392                           
  8393                           ;main.c: 152:     EUSART_Write(bcd.num3 + 0x30);
  8394     0470  0020               	movlb	0	; select bank0
  8395     0471  0E6C               	swapf	sendInfo@bcd,w
  8396     0472  390F               	andlw	15
  8397     0473  3E30               	addlw	48
  8398     0474  3188  20E4  3182   	fcall	_EUSART_Write
  8399     0477                     i1l3807:
  8400                           
  8401                           ;main.c: 153:     EUSART_Write(0x2E);
  8402     0477  302E               	movlw	46
  8403     0478  3188  20E4  3182   	fcall	_EUSART_Write
  8404     047B                     i1l3809:
  8405                           
  8406                           ;main.c: 154:     EUSART_Write(bcd.num4 + 0x30);
  8407     047B  0020               	movlb	0	; select bank0
  8408     047C  086C               	movf	sendInfo@bcd,w
  8409     047D  390F               	andlw	15
  8410     047E  3E30               	addlw	48
  8411     047F  3188  20E4  3182   	fcall	_EUSART_Write
  8412     0482                     i1l3811:
  8413                           
  8414                           ;main.c: 155:     EUSART_Write(0x2C);
  8415     0482  302C               	movlw	44
  8416     0483  3188  20E4  3182   	fcall	_EUSART_Write
  8417     0486                     i1l3813:
  8418                           
  8419                           ;main.c: 157:     bcd.v = bin2bcd(temperatura);
  8420     0486  0021               	movlb	1	; select bank1
  8421     0487  0835               	movf	(_temperatura+1)^(0+128),w
  8422     0488  00FB               	movwf	bin2bcd@binVal+1
  8423     0489  0834               	movf	_temperatura^(0+128),w
  8424     048A  00FA               	movwf	bin2bcd@binVal
  8425     048B  318F  276E  3182   	fcall	_bin2bcd
  8426     048E  087B               	movf	?_bin2bcd+1,w
  8427     048F  0020               	movlb	0	; select bank0
  8428     0490  00ED               	movwf	sendInfo@bcd+1
  8429     0491  087A               	movf	?_bin2bcd,w
  8430     0492  00EC               	movwf	sendInfo@bcd
  8431     0493                     i1l3815:
  8432                           
  8433                           ;main.c: 158:     EUSART_Write(bcd.num1 + 0x30);
  8434     0493  0E6D               	swapf	sendInfo@bcd+1,w
  8435     0494  390F               	andlw	15
  8436     0495  3E30               	addlw	48
  8437     0496  3188  20E4  3182   	fcall	_EUSART_Write
  8438     0499                     i1l3817:
  8439                           
  8440                           ;main.c: 159:     EUSART_Write(bcd.num2 + 0x30);
  8441     0499  0020               	movlb	0	; select bank0
  8442     049A  086D               	movf	sendInfo@bcd+1,w
  8443     049B  390F               	andlw	15
  8444     049C  3E30               	addlw	48
  8445     049D  3188  20E4  3182   	fcall	_EUSART_Write
  8446     04A0                     i1l3819:
  8447                           
  8448                           ;main.c: 160:     EUSART_Write(bcd.num3 + 0x30);
  8449     04A0  0020               	movlb	0	; select bank0
  8450     04A1  0E6C               	swapf	sendInfo@bcd,w
  8451     04A2  390F               	andlw	15
  8452     04A3  3E30               	addlw	48
  8453     04A4  3188  20E4  3182   	fcall	_EUSART_Write
  8454     04A7                     i1l3821:
  8455                           
  8456                           ;main.c: 161:     EUSART_Write(0x2E);
  8457     04A7  302E               	movlw	46
  8458     04A8  3188  20E4  3182   	fcall	_EUSART_Write
  8459     04AB                     i1l3823:
  8460                           
  8461                           ;main.c: 162:     EUSART_Write(bcd.num4 + 0x30);
  8462     04AB  0020               	movlb	0	; select bank0
  8463     04AC  086C               	movf	sendInfo@bcd,w
  8464     04AD  390F               	andlw	15
  8465     04AE  3E30               	addlw	48
  8466     04AF  3188  20E4  3182   	fcall	_EUSART_Write
  8467     04B2                     i1l3825:
  8468                           
  8469                           ;main.c: 163:     EUSART_Write(0x0D);
  8470     04B2  300D               	movlw	13
  8471     04B3  3188  20E4  3182   	fcall	_EUSART_Write
  8472     04B6                     i1l836:
  8473     04B6  0008               	return
  8474     04B7                     __end_of_sendInfo:
  8475                           
  8476                           	psect	text46
  8477     0F6E                     __ptext46:	
  8478 ;; *************** function _bin2bcd *****************
  8479 ;; Defined at:
  8480 ;;		line 10 in file "bin2bcd.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  binVal          2   10[COMMON] unsigned short 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  i               1    4[BANK0 ] unsigned char 
  8485 ;;  dataU           4    5[BANK0 ] struct .
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  2   10[COMMON] unsigned short 
  8488 ;; Registers used:
  8489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8495 ;;      Params:         2       0       0       0       0       0
  8496 ;;      Locals:         0       5       0       0       0       0
  8497 ;;      Temps:          0       4       0       0       0       0
  8498 ;;      Totals:         2       9       0       0       0       0
  8499 ;;Total ram usage:       11 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 1
  8502 ;; This function calls:
  8503 ;;		_memset
  8504 ;; This function is called by:
  8505 ;;		_sendInfo
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509     0F6E                     _bin2bcd:	
  8510                           ;psect for function _bin2bcd
  8511                           
  8512     0F6E                     i1l3293:	
  8513                           ;incstack = 0
  8514                           ; Regs used in _bin2bcd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8515                           
  8516                           
  8517                           ;bin2bcd.c: 22:     }dataU;;bin2bcd.c: 23:     memset(&dataU,0,4);
  8518     0F6E  3000               	movlw	0
  8519     0F6F  00F0               	movwf	memset@c
  8520     0F70  00F1               	movwf	memset@c+1
  8521     0F71  3004               	movlw	4
  8522     0F72  00F2               	movwf	memset@n
  8523     0F73  3000               	movlw	0
  8524     0F74  00F3               	movwf	memset@n+1
  8525     0F75  3025               	movlw	(low (bin2bcd@dataU| 0))& (0+255)
  8526     0F76  318E  26DE  318F   	fcall	_memset
  8527     0F79                     i1l3295:
  8528                           
  8529                           ;bin2bcd.c: 24:     dataU.shift = (uint32_t)binVal;
  8530     0F79  087A               	movf	bin2bcd@binVal,w
  8531     0F7A  0020               	movlb	0	; select bank0
  8532     0F7B  00A5               	movwf	bin2bcd@dataU
  8533     0F7C  087B               	movf	bin2bcd@binVal+1,w
  8534     0F7D  00A6               	movwf	bin2bcd@dataU+1
  8535     0F7E  01A7               	clrf	bin2bcd@dataU+2
  8536     0F7F  01A8               	clrf	bin2bcd@dataU+3
  8537     0F80                     i1l3297:
  8538                           
  8539                           ;bin2bcd.c: 25:     for(uint8_t i=0;i<12;i++){
  8540     0F80  01A4               	clrf	bin2bcd@i
  8541     0F81                     i1l3303:
  8542                           
  8543                           ;bin2bcd.c: 26:    if(dataU.dat.d0>=5){
  8544     0F81  0828               	movf	bin2bcd@dataU+3,w
  8545     0F82  390F               	andlw	15
  8546     0F83  00A0               	movwf	??_bin2bcd
  8547     0F84  3005               	movlw	5
  8548     0F85  0220               	subwf	??_bin2bcd,w
  8549     0F86  1C03               	skipc
  8550     0F87  2F89               	goto	u206_21
  8551     0F88  2F8A               	goto	u206_20
  8552     0F89                     u206_21:
  8553     0F89  2F93               	goto	i1l966
  8554     0F8A                     u206_20:
  8555     0F8A                     i1l3305:
  8556                           
  8557                           ;bin2bcd.c: 27:     dataU.dat.d0 = dataU.dat.d0 + 3;
  8558     0F8A  0828               	movf	bin2bcd@dataU+3,w
  8559     0F8B  390F               	andlw	15
  8560     0F8C  3E03               	addlw	3
  8561     0F8D  00A0               	movwf	??_bin2bcd
  8562     0F8E  0828               	movf	bin2bcd@dataU+3,w
  8563     0F8F  0620               	xorwf	??_bin2bcd,w
  8564     0F90  39F0               	andlw	-16
  8565     0F91  0620               	xorwf	??_bin2bcd,w
  8566     0F92  00A8               	movwf	bin2bcd@dataU+3
  8567     0F93                     i1l966:	
  8568                           ;bin2bcd.c: 28:    }
  8569                           
  8570                           
  8571                           ;bin2bcd.c: 29:    if(dataU.dat.d1>=5){
  8572     0F93  0E27               	swapf	bin2bcd@dataU+2,w
  8573     0F94  390F               	andlw	15
  8574     0F95  00A0               	movwf	??_bin2bcd
  8575     0F96  3005               	movlw	5
  8576     0F97  0220               	subwf	??_bin2bcd,w
  8577     0F98  1C03               	skipc
  8578     0F99  2F9B               	goto	u207_21
  8579     0F9A  2F9C               	goto	u207_20
  8580     0F9B                     u207_21:
  8581     0F9B  2FA6               	goto	i1l967
  8582     0F9C                     u207_20:
  8583     0F9C                     i1l3307:
  8584                           
  8585                           ;bin2bcd.c: 30:     dataU.dat.d1 = dataU.dat.d1 + 3;
  8586     0F9C  0E27               	swapf	bin2bcd@dataU+2,w
  8587     0F9D  390F               	andlw	15
  8588     0F9E  3E03               	addlw	3
  8589     0F9F  00A0               	movwf	??_bin2bcd
  8590     0FA0  0EA0               	swapf	??_bin2bcd,f
  8591     0FA1  0827               	movf	bin2bcd@dataU+2,w
  8592     0FA2  0620               	xorwf	??_bin2bcd,w
  8593     0FA3  390F               	andlw	-241
  8594     0FA4  0620               	xorwf	??_bin2bcd,w
  8595     0FA5  00A7               	movwf	bin2bcd@dataU+2
  8596     0FA6                     i1l967:	
  8597                           ;bin2bcd.c: 31:    }
  8598                           
  8599                           
  8600                           ;bin2bcd.c: 32:             if(dataU.dat.d2>=5){
  8601     0FA6  0827               	movf	bin2bcd@dataU+2,w
  8602     0FA7  390F               	andlw	15
  8603     0FA8  00A0               	movwf	??_bin2bcd
  8604     0FA9  3005               	movlw	5
  8605     0FAA  0220               	subwf	??_bin2bcd,w
  8606     0FAB  1C03               	skipc
  8607     0FAC  2FAE               	goto	u208_21
  8608     0FAD  2FAF               	goto	u208_20
  8609     0FAE                     u208_21:
  8610     0FAE  2FB8               	goto	i1l968
  8611     0FAF                     u208_20:
  8612     0FAF                     i1l3309:
  8613                           
  8614                           ;bin2bcd.c: 33:     dataU.dat.d2 = dataU.dat.d2 + 3;
  8615     0FAF  0827               	movf	bin2bcd@dataU+2,w
  8616     0FB0  390F               	andlw	15
  8617     0FB1  3E03               	addlw	3
  8618     0FB2  00A0               	movwf	??_bin2bcd
  8619     0FB3  0827               	movf	bin2bcd@dataU+2,w
  8620     0FB4  0620               	xorwf	??_bin2bcd,w
  8621     0FB5  39F0               	andlw	-16
  8622     0FB6  0620               	xorwf	??_bin2bcd,w
  8623     0FB7  00A7               	movwf	bin2bcd@dataU+2
  8624     0FB8                     i1l968:	
  8625                           ;bin2bcd.c: 34:    }
  8626                           
  8627                           
  8628                           ;bin2bcd.c: 35:             if(dataU.dat.d3>=5){
  8629     0FB8  0E26               	swapf	bin2bcd@dataU+1,w
  8630     0FB9  390F               	andlw	15
  8631     0FBA  00A0               	movwf	??_bin2bcd
  8632     0FBB  3005               	movlw	5
  8633     0FBC  0220               	subwf	??_bin2bcd,w
  8634     0FBD  1C03               	skipc
  8635     0FBE  2FC0               	goto	u209_21
  8636     0FBF  2FC1               	goto	u209_20
  8637     0FC0                     u209_21:
  8638     0FC0  2FCB               	goto	i1l969
  8639     0FC1                     u209_20:
  8640     0FC1                     i1l3311:
  8641                           
  8642                           ;bin2bcd.c: 36:     dataU.dat.d3 = dataU.dat.d3 + 3;
  8643     0FC1  0E26               	swapf	bin2bcd@dataU+1,w
  8644     0FC2  390F               	andlw	15
  8645     0FC3  3E03               	addlw	3
  8646     0FC4  00A0               	movwf	??_bin2bcd
  8647     0FC5  0EA0               	swapf	??_bin2bcd,f
  8648     0FC6  0826               	movf	bin2bcd@dataU+1,w
  8649     0FC7  0620               	xorwf	??_bin2bcd,w
  8650     0FC8  390F               	andlw	-241
  8651     0FC9  0620               	xorwf	??_bin2bcd,w
  8652     0FCA  00A6               	movwf	bin2bcd@dataU+1
  8653     0FCB                     i1l969:	
  8654                           ;bin2bcd.c: 37:    }
  8655                           
  8656                           
  8657                           ;bin2bcd.c: 38:    dataU.shift = dataU.shift<<1;
  8658     0FCB  0825               	movf	bin2bcd@dataU,w
  8659     0FCC  00A0               	movwf	??_bin2bcd
  8660     0FCD  0826               	movf	bin2bcd@dataU+1,w
  8661     0FCE  00A1               	movwf	??_bin2bcd+1
  8662     0FCF  0827               	movf	bin2bcd@dataU+2,w
  8663     0FD0  00A2               	movwf	??_bin2bcd+2
  8664     0FD1  0828               	movf	bin2bcd@dataU+3,w
  8665     0FD2  00A3               	movwf	??_bin2bcd+3
  8666     0FD3  3001               	movlw	1
  8667     0FD4                     u210_25:
  8668     0FD4  35A0               	lslf	??_bin2bcd,f
  8669     0FD5  0DA1               	rlf	??_bin2bcd+1,f
  8670     0FD6  0DA2               	rlf	??_bin2bcd+2,f
  8671     0FD7  0DA3               	rlf	??_bin2bcd+3,f
  8672     0FD8                     u210_20:
  8673     0FD8  0B89               	decfsz	9,f
  8674     0FD9  2FD4               	goto	u210_25
  8675     0FDA  0823               	movf	??_bin2bcd+3,w
  8676     0FDB  00A8               	movwf	bin2bcd@dataU+3
  8677     0FDC  0822               	movf	??_bin2bcd+2,w
  8678     0FDD  00A7               	movwf	bin2bcd@dataU+2
  8679     0FDE  0821               	movf	??_bin2bcd+1,w
  8680     0FDF  00A6               	movwf	bin2bcd@dataU+1
  8681     0FE0  0820               	movf	??_bin2bcd,w
  8682     0FE1  00A5               	movwf	bin2bcd@dataU
  8683                           
  8684                           ;bin2bcd.c: 39:     }
  8685     0FE2  3001               	movlw	1
  8686     0FE3  00A0               	movwf	??_bin2bcd
  8687     0FE4  0820               	movf	??_bin2bcd,w
  8688     0FE5  07A4               	addwf	bin2bcd@i,f
  8689     0FE6                     i1l3313:
  8690     0FE6  300C               	movlw	12
  8691     0FE7  0224               	subwf	bin2bcd@i,w
  8692     0FE8  1C03               	skipc
  8693     0FE9  2FEB               	goto	u211_21
  8694     0FEA  2FEC               	goto	u211_20
  8695     0FEB                     u211_21:
  8696     0FEB  2F81               	goto	i1l3303
  8697     0FEC                     u211_20:
  8698     0FEC                     i1l3315:
  8699                           
  8700                           ;bin2bcd.c: 40:     return (uint16_t)(dataU.shift>>12);
  8701     0FEC  0825               	movf	bin2bcd@dataU,w
  8702     0FED  00A0               	movwf	??_bin2bcd
  8703     0FEE  0826               	movf	bin2bcd@dataU+1,w
  8704     0FEF  00A1               	movwf	??_bin2bcd+1
  8705     0FF0  0827               	movf	bin2bcd@dataU+2,w
  8706     0FF1  00A2               	movwf	??_bin2bcd+2
  8707     0FF2  0828               	movf	bin2bcd@dataU+3,w
  8708     0FF3  00A3               	movwf	??_bin2bcd+3
  8709     0FF4  300C               	movlw	12
  8710     0FF5                     u212_25:
  8711     0FF5  36A3               	lsrf	??_bin2bcd+3,f
  8712     0FF6  0CA2               	rrf	??_bin2bcd+2,f
  8713     0FF7  0CA1               	rrf	??_bin2bcd+1,f
  8714     0FF8  0CA0               	rrf	??_bin2bcd,f
  8715     0FF9                     u212_20:
  8716     0FF9  0B89               	decfsz	9,f
  8717     0FFA  2FF5               	goto	u212_25
  8718     0FFB  0821               	movf	??_bin2bcd+1,w
  8719     0FFC  00FB               	movwf	?_bin2bcd+1
  8720     0FFD  0820               	movf	??_bin2bcd,w
  8721     0FFE  00FA               	movwf	?_bin2bcd
  8722     0FFF                     i1l970:
  8723     0FFF  0008               	return
  8724     1000                     __end_of_bin2bcd:
  8725                           
  8726                           	psect	text47
  8727     0EDE                     __ptext47:	
  8728 ;; *************** function _memset *****************
  8729 ;; Defined at:
  8730 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;  dest            1    wreg     PTR void 
  8733 ;;		 -> bin2bcd@dataU(4), 
  8734 ;;  c               2    0[COMMON] int 
  8735 ;;  n               2    2[COMMON] unsigned int 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;  dest            1    8[COMMON] PTR void 
  8738 ;;		 -> bin2bcd@dataU(4), 
  8739 ;;  k               2    6[COMMON] unsigned int 
  8740 ;;  s               1    9[COMMON] PTR unsigned char 
  8741 ;;		 -> bin2bcd@dataU(4), 
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  1    wreg      PTR void 
  8744 ;; Registers used:
  8745 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8751 ;;      Params:         4       0       0       0       0       0
  8752 ;;      Locals:         4       0       0       0       0       0
  8753 ;;      Temps:          2       0       0       0       0       0
  8754 ;;      Totals:        10       0       0       0       0       0
  8755 ;;Total ram usage:       10 bytes
  8756 ;; Hardware stack levels used: 1
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_bin2bcd
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764     0EDE                     _memset:	
  8765                           ;psect for function _memset
  8766                           
  8767                           
  8768                           ;incstack = 0
  8769                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8770                           ;memset@dest stored from wreg
  8771     0EDE  00F8               	movwf	memset@dest
  8772     0EDF                     i1l3197:
  8773     0EDF  0878               	movf	memset@dest,w
  8774     0EE0  00F9               	movwf	memset@s
  8775     0EE1                     i1l3199:
  8776     0EE1  0872               	movf	memset@n,w
  8777     0EE2  0473               	iorwf	memset@n+1,w
  8778     0EE3  1D03               	btfss	3,2
  8779     0EE4  2EE6               	goto	u192_21
  8780     0EE5  2EE7               	goto	u192_20
  8781     0EE6                     u192_21:
  8782     0EE6  2EE8               	goto	i1l3203
  8783     0EE7                     u192_20:
  8784     0EE7  2F6D               	goto	i1l1587
  8785     0EE8                     i1l3203:
  8786     0EE8  0879               	movf	memset@s,w
  8787     0EE9  0086               	movwf	6
  8788     0EEA  0187               	clrf	7
  8789     0EEB  0870               	movf	memset@c,w
  8790     0EEC  0081               	movwf	1
  8791     0EED                     i1l3205:
  8792     0EED  0872               	movf	memset@n,w
  8793     0EEE  0779               	addwf	memset@s,w
  8794     0EEF  00F4               	movwf	??_memset
  8795     0EF0  0874               	movf	??_memset,w
  8796     0EF1  3EFF               	addlw	255
  8797     0EF2  0086               	movwf	6
  8798     0EF3  0187               	clrf	7
  8799     0EF4  0870               	movf	memset@c,w
  8800     0EF5  0081               	movwf	1
  8801     0EF6                     i1l3207:
  8802     0EF6  3000               	movlw	0
  8803     0EF7  0273               	subwf	memset@n+1,w
  8804     0EF8  3003               	movlw	3
  8805     0EF9  1903               	skipnz
  8806     0EFA  0272               	subwf	memset@n,w
  8807     0EFB  1803               	skipnc
  8808     0EFC  2EFE               	goto	u193_21
  8809     0EFD  2EFF               	goto	u193_20
  8810     0EFE                     u193_21:
  8811     0EFE  2F00               	goto	i1l3211
  8812     0EFF                     u193_20:
  8813     0EFF  2F6D               	goto	i1l1587
  8814     0F00                     i1l3211:
  8815     0F00  0A79               	incf	memset@s,w
  8816     0F01  0086               	movwf	6
  8817     0F02  0187               	clrf	7
  8818     0F03  0870               	movf	memset@c,w
  8819     0F04  0081               	movwf	1
  8820     0F05                     i1l3213:
  8821     0F05  0879               	movf	memset@s,w
  8822     0F06  3E02               	addlw	2
  8823     0F07  0086               	movwf	6
  8824     0F08  0187               	clrf	7
  8825     0F09  0870               	movf	memset@c,w
  8826     0F0A  0081               	movwf	1
  8827     0F0B                     i1l3215:
  8828     0F0B  0872               	movf	memset@n,w
  8829     0F0C  0779               	addwf	memset@s,w
  8830     0F0D  00F4               	movwf	??_memset
  8831     0F0E  0874               	movf	??_memset,w
  8832     0F0F  3EFE               	addlw	254
  8833     0F10  0086               	movwf	6
  8834     0F11  0187               	clrf	7
  8835     0F12  0870               	movf	memset@c,w
  8836     0F13  0081               	movwf	1
  8837     0F14                     i1l3217:
  8838     0F14  0872               	movf	memset@n,w
  8839     0F15  0779               	addwf	memset@s,w
  8840     0F16  00F4               	movwf	??_memset
  8841     0F17  0874               	movf	??_memset,w
  8842     0F18  3EFD               	addlw	253
  8843     0F19  0086               	movwf	6
  8844     0F1A  0187               	clrf	7
  8845     0F1B  0870               	movf	memset@c,w
  8846     0F1C  0081               	movwf	1
  8847     0F1D                     i1l3219:
  8848     0F1D  3000               	movlw	0
  8849     0F1E  0273               	subwf	memset@n+1,w
  8850     0F1F  3007               	movlw	7
  8851     0F20  1903               	skipnz
  8852     0F21  0272               	subwf	memset@n,w
  8853     0F22  1803               	skipnc
  8854     0F23  2F25               	goto	u194_21
  8855     0F24  2F26               	goto	u194_20
  8856     0F25                     u194_21:
  8857     0F25  2F27               	goto	i1l3223
  8858     0F26                     u194_20:
  8859     0F26  2F6D               	goto	i1l1587
  8860     0F27                     i1l3223:
  8861     0F27  0879               	movf	memset@s,w
  8862     0F28  3E03               	addlw	3
  8863     0F29  0086               	movwf	6
  8864     0F2A  0187               	clrf	7
  8865     0F2B  0870               	movf	memset@c,w
  8866     0F2C  0081               	movwf	1
  8867     0F2D  0872               	movf	memset@n,w
  8868     0F2E  0779               	addwf	memset@s,w
  8869     0F2F  00F4               	movwf	??_memset
  8870     0F30  0874               	movf	??_memset,w
  8871     0F31  3EFC               	addlw	252
  8872     0F32  0086               	movwf	6
  8873     0F33  0187               	clrf	7
  8874     0F34  0870               	movf	memset@c,w
  8875     0F35  0081               	movwf	1
  8876     0F36                     i1l3225:
  8877     0F36  3000               	movlw	0
  8878     0F37  0273               	subwf	memset@n+1,w
  8879     0F38  3009               	movlw	9
  8880     0F39  1903               	skipnz
  8881     0F3A  0272               	subwf	memset@n,w
  8882     0F3B  1803               	skipnc
  8883     0F3C  2F3E               	goto	u195_21
  8884     0F3D  2F3F               	goto	u195_20
  8885     0F3E                     u195_21:
  8886     0F3E  2F40               	goto	i1l3229
  8887     0F3F                     u195_20:
  8888     0F3F  2F6D               	goto	i1l1587
  8889     0F40                     i1l3229:
  8890     0F40  0979               	comf	memset@s,w
  8891     0F41  00F4               	movwf	??_memset
  8892     0F42  097A               	comf	memset@s+1,w
  8893     0F43  00F5               	movwf	??_memset+1
  8894     0F44  0AF4               	incf	??_memset,f
  8895     0F45  1903               	skipnz
  8896     0F46  0AF5               	incf	??_memset+1,f
  8897     0F47  3003               	movlw	3
  8898     0F48  0574               	andwf	??_memset,w
  8899     0F49  00F6               	movwf	memset@k
  8900     0F4A  3000               	movlw	0
  8901     0F4B  0575               	andwf	??_memset+1,w
  8902     0F4C  00F7               	movwf	memset@k+1
  8903     0F4D  0876               	movf	memset@k,w
  8904     0F4E  00F4               	movwf	??_memset
  8905     0F4F  0874               	movf	??_memset,w
  8906     0F50  07F9               	addwf	memset@s,f
  8907     0F51                     i1l3231:
  8908     0F51  0876               	movf	memset@k,w
  8909     0F52  02F2               	subwf	memset@n,f
  8910     0F53  0877               	movf	memset@k+1,w
  8911     0F54  3BF3               	subwfb	memset@n+1,f
  8912     0F55                     i1l3233:
  8913     0F55  30FC               	movlw	252
  8914     0F56  05F2               	andwf	memset@n,f
  8915     0F57  30FF               	movlw	255
  8916     0F58  05F3               	andwf	memset@n+1,f
  8917     0F59  2F67               	goto	i1l3241
  8918     0F5A                     i1l3235:
  8919     0F5A  0879               	movf	memset@s,w
  8920     0F5B  0086               	movwf	6
  8921     0F5C  0187               	clrf	7
  8922     0F5D  0870               	movf	memset@c,w
  8923     0F5E  0081               	movwf	1
  8924     0F5F                     i1l3237:
  8925     0F5F  3001               	movlw	1
  8926     0F60  02F2               	subwf	memset@n,f
  8927     0F61  3000               	movlw	0
  8928     0F62  3BF3               	subwfb	memset@n+1,f
  8929     0F63                     i1l3239:
  8930     0F63  3001               	movlw	1
  8931     0F64  00F4               	movwf	??_memset
  8932     0F65  0874               	movf	??_memset,w
  8933     0F66  07F9               	addwf	memset@s,f
  8934     0F67                     i1l3241:
  8935     0F67  0872               	movf	memset@n,w
  8936     0F68  0473               	iorwf	memset@n+1,w
  8937     0F69  1D03               	btfss	3,2
  8938     0F6A  2F6C               	goto	u196_21
  8939     0F6B  2F6D               	goto	u196_20
  8940     0F6C                     u196_21:
  8941     0F6C  2F5A               	goto	i1l3235
  8942     0F6D                     u196_20:
  8943     0F6D                     i1l1587:
  8944     0F6D  0008               	return
  8945     0F6E                     __end_of_memset:
  8946                           
  8947                           	psect	text48
  8948     0A74                     __ptext48:	
  8949 ;; *************** function _abs *****************
  8950 ;; Defined at:
  8951 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  a               2    0[COMMON] int 
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;		None
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  2    0[COMMON] int 
  8958 ;; Registers used:
  8959 ;;		wreg, status,2, status,0
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8965 ;;      Params:         2       0       0       0       0       0
  8966 ;;      Locals:         0       0       0       0       0       0
  8967 ;;      Temps:          2       0       0       0       0       0
  8968 ;;      Totals:         4       0       0       0       0       0
  8969 ;;Total ram usage:        4 bytes
  8970 ;; Hardware stack levels used: 1
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		_sendInfo
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978     0A74                     _abs:	
  8979                           ;psect for function _abs
  8980                           
  8981     0A74                     i1l3289:	
  8982                           ;incstack = 0
  8983                           ; Regs used in _abs: [wreg+status,2+status,0]
  8984                           
  8985     0A74  0871               	movf	abs@a+1,w
  8986     0A75  3A80               	xorlw	128
  8987     0A76  00F2               	movwf	??_abs
  8988     0A77  3080               	movlw	128
  8989     0A78  0272               	subwf	??_abs,w
  8990     0A79  1D03               	skipz
  8991     0A7A  2A7D               	goto	u205_25
  8992     0A7B  3001               	movlw	1
  8993     0A7C  0270               	subwf	abs@a,w
  8994     0A7D                     u205_25:
  8995     0A7D  1803               	skipnc
  8996     0A7E  2A80               	goto	u205_21
  8997     0A7F  2A81               	goto	u205_20
  8998     0A80                     u205_21:
  8999     0A80  2A8D               	goto	i1l1580
  9000     0A81                     u205_20:
  9001     0A81                     i1l3291:
  9002     0A81  0970               	comf	abs@a,w
  9003     0A82  00F2               	movwf	??_abs
  9004     0A83  0971               	comf	abs@a+1,w
  9005     0A84  00F3               	movwf	??_abs+1
  9006     0A85  0AF2               	incf	??_abs,f
  9007     0A86  1903               	skipnz
  9008     0A87  0AF3               	incf	??_abs+1,f
  9009     0A88  0872               	movf	??_abs,w
  9010     0A89  00F0               	movwf	?_abs
  9011     0A8A  0873               	movf	??_abs+1,w
  9012     0A8B  00F1               	movwf	?_abs+1
  9013     0A8C  2A8D               	goto	i1l1583
  9014     0A8D                     i1l1580:
  9015     0A8D                     i1l1583:
  9016     0A8D  0008               	return
  9017     0A8E                     __end_of_abs:
  9018                           
  9019                           	psect	text49
  9020     0661                     __ptext49:	
  9021 ;; *************** function ___xxtofl *****************
  9022 ;; Defined at:
  9023 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;  sign            1    wreg     unsigned char 
  9026 ;;  val             4    4[COMMON] long 
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;  sign            1    0[BANK0 ] unsigned char 
  9029 ;;  arg             4    2[BANK0 ] unsigned long 
  9030 ;;  exp             1    1[BANK0 ] unsigned char 
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  4    4[COMMON] unsigned char 
  9033 ;; Registers used:
  9034 ;;		wreg, status,2, status,0
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9040 ;;      Params:         4       0       0       0       0       0
  9041 ;;      Locals:         0       6       0       0       0       0
  9042 ;;      Temps:          4       0       0       0       0       0
  9043 ;;      Totals:         8       6       0       0       0       0
  9044 ;;Total ram usage:       14 bytes
  9045 ;; Hardware stack levels used: 1
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_sendInfo
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053     0661                     ___xxtofl:	
  9054                           ;psect for function ___xxtofl
  9055                           
  9056                           
  9057                           ;incstack = 0
  9058                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9059                           ;___xxtofl@sign stored from wreg
  9060     0661  0020               	movlb	0	; select bank0
  9061     0662  00A0               	movwf	___xxtofl@sign
  9062     0663                     i1l3635:
  9063     0663  0820               	movf	___xxtofl@sign,w
  9064     0664  1903               	btfsc	3,2
  9065     0665  2E67               	goto	u278_21
  9066     0666  2E68               	goto	u278_20
  9067     0667                     u278_21:
  9068     0667  2E7C               	goto	i1l3641
  9069     0668                     u278_20:
  9070     0668                     i1l3637:
  9071     0668  1FF7               	btfss	___xxtofl@val+3,7
  9072     0669  2E6B               	goto	u279_21
  9073     066A  2E6C               	goto	u279_20
  9074     066B                     u279_21:
  9075     066B  2E7C               	goto	i1l3641
  9076     066C                     u279_20:
  9077     066C                     i1l3639:
  9078     066C  0974               	comf	___xxtofl@val,w
  9079     066D  00A2               	movwf	___xxtofl@arg
  9080     066E  0975               	comf	___xxtofl@val+1,w
  9081     066F  00A3               	movwf	___xxtofl@arg+1
  9082     0670  0976               	comf	___xxtofl@val+2,w
  9083     0671  00A4               	movwf	___xxtofl@arg+2
  9084     0672  0977               	comf	___xxtofl@val+3,w
  9085     0673  00A5               	movwf	___xxtofl@arg+3
  9086     0674  0AA2               	incf	___xxtofl@arg,f
  9087     0675  1903               	skipnz
  9088     0676  0AA3               	incf	___xxtofl@arg+1,f
  9089     0677  1903               	skipnz
  9090     0678  0AA4               	incf	___xxtofl@arg+2,f
  9091     0679  1903               	skipnz
  9092     067A  0AA5               	incf	___xxtofl@arg+3,f
  9093     067B  2E84               	goto	i1l1561
  9094     067C                     i1l3641:
  9095     067C  0877               	movf	___xxtofl@val+3,w
  9096     067D  00A5               	movwf	___xxtofl@arg+3
  9097     067E  0876               	movf	___xxtofl@val+2,w
  9098     067F  00A4               	movwf	___xxtofl@arg+2
  9099     0680  0875               	movf	___xxtofl@val+1,w
  9100     0681  00A3               	movwf	___xxtofl@arg+1
  9101     0682  0874               	movf	___xxtofl@val,w
  9102     0683  00A2               	movwf	___xxtofl@arg
  9103     0684                     i1l1561:
  9104     0684  0877               	movf	___xxtofl@val+3,w
  9105     0685  0476               	iorwf	___xxtofl@val+2,w
  9106     0686  0475               	iorwf	___xxtofl@val+1,w
  9107     0687  0474               	iorwf	___xxtofl@val,w
  9108     0688  1D03               	skipz
  9109     0689  2E8B               	goto	u280_21
  9110     068A  2E8C               	goto	u280_20
  9111     068B                     u280_21:
  9112     068B  2E95               	goto	i1l3647
  9113     068C                     u280_20:
  9114     068C                     i1l3643:
  9115     068C  3000               	movlw	0
  9116     068D  00F7               	movwf	?___xxtofl+3
  9117     068E  3000               	movlw	0
  9118     068F  00F6               	movwf	?___xxtofl+2
  9119     0690  3000               	movlw	0
  9120     0691  00F5               	movwf	?___xxtofl+1
  9121     0692  3000               	movlw	0
  9122     0693  00F4               	movwf	?___xxtofl
  9123     0694  2F0B               	goto	i1l1563
  9124     0695                     i1l3647:
  9125     0695  3096               	movlw	150
  9126     0696  00A1               	movwf	___xxtofl@exp
  9127     0697  2EA3               	goto	i1l3651
  9128     0698                     i1l3649:
  9129     0698  3001               	movlw	1
  9130     0699  00F8               	movwf	??___xxtofl
  9131     069A  0878               	movf	??___xxtofl,w
  9132     069B  07A1               	addwf	___xxtofl@exp,f
  9133     069C  3001               	movlw	1
  9134     069D                     u281_25:
  9135     069D  36A5               	lsrf	___xxtofl@arg+3,f
  9136     069E  0CA4               	rrf	___xxtofl@arg+2,f
  9137     069F  0CA3               	rrf	___xxtofl@arg+1,f
  9138     06A0  0CA2               	rrf	___xxtofl@arg,f
  9139     06A1  0B89               	decfsz	9,f
  9140     06A2  2E9D               	goto	u281_25
  9141     06A3                     i1l3651:
  9142     06A3  30FE               	movlw	254
  9143     06A4  0525               	andwf	___xxtofl@arg+3,w
  9144     06A5  1D03               	btfss	3,2
  9145     06A6  2EA8               	goto	u282_21
  9146     06A7  2EA9               	goto	u282_20
  9147     06A8                     u282_21:
  9148     06A8  2E98               	goto	i1l3649
  9149     06A9                     u282_20:
  9150     06A9  2EBD               	goto	i1l1567
  9151     06AA                     i1l3653:
  9152     06AA  3001               	movlw	1
  9153     06AB  00F8               	movwf	??___xxtofl
  9154     06AC  0878               	movf	??___xxtofl,w
  9155     06AD  07A1               	addwf	___xxtofl@exp,f
  9156     06AE                     i1l3655:
  9157     06AE  3001               	movlw	1
  9158     06AF  07A2               	addwf	___xxtofl@arg,f
  9159     06B0  3000               	movlw	0
  9160     06B1  3DA3               	addwfc	___xxtofl@arg+1,f
  9161     06B2  3000               	movlw	0
  9162     06B3  3DA4               	addwfc	___xxtofl@arg+2,f
  9163     06B4  3000               	movlw	0
  9164     06B5  3DA5               	addwfc	___xxtofl@arg+3,f
  9165     06B6                     i1l3657:
  9166     06B6  3001               	movlw	1
  9167     06B7                     u283_25:
  9168     06B7  36A5               	lsrf	___xxtofl@arg+3,f
  9169     06B8  0CA4               	rrf	___xxtofl@arg+2,f
  9170     06B9  0CA3               	rrf	___xxtofl@arg+1,f
  9171     06BA  0CA2               	rrf	___xxtofl@arg,f
  9172     06BB  0B89               	decfsz	9,f
  9173     06BC  2EB7               	goto	u283_25
  9174     06BD                     i1l1567:
  9175     06BD  30FF               	movlw	255
  9176     06BE  0525               	andwf	___xxtofl@arg+3,w
  9177     06BF  1D03               	btfss	3,2
  9178     06C0  2EC2               	goto	u284_21
  9179     06C1  2EC3               	goto	u284_20
  9180     06C2                     u284_21:
  9181     06C2  2EAA               	goto	i1l3653
  9182     06C3                     u284_20:
  9183     06C3  2ECD               	goto	i1l3661
  9184     06C4                     i1l3659:
  9185     06C4  3001               	movlw	1
  9186     06C5  02A1               	subwf	___xxtofl@exp,f
  9187     06C6  3001               	movlw	1
  9188     06C7                     u285_25:
  9189     06C7  35A2               	lslf	___xxtofl@arg,f
  9190     06C8  0DA3               	rlf	___xxtofl@arg+1,f
  9191     06C9  0DA4               	rlf	___xxtofl@arg+2,f
  9192     06CA  0DA5               	rlf	___xxtofl@arg+3,f
  9193     06CB  0B89               	decfsz	9,f
  9194     06CC  2EC7               	goto	u285_25
  9195     06CD                     i1l3661:
  9196     06CD  1BA4               	btfsc	___xxtofl@arg+2,7
  9197     06CE  2ED0               	goto	u286_21
  9198     06CF  2ED1               	goto	u286_20
  9199     06D0                     u286_21:
  9200     06D0  2ED7               	goto	i1l1574
  9201     06D1                     u286_20:
  9202     06D1                     i1l3663:
  9203     06D1  3002               	movlw	2
  9204     06D2  0221               	subwf	___xxtofl@exp,w
  9205     06D3  1803               	skipnc
  9206     06D4  2ED6               	goto	u287_21
  9207     06D5  2ED7               	goto	u287_20
  9208     06D6                     u287_21:
  9209     06D6  2EC4               	goto	i1l3659
  9210     06D7                     u287_20:
  9211     06D7                     i1l1574:
  9212     06D7  1821               	btfsc	___xxtofl@exp,0
  9213     06D8  2EDA               	goto	u288_21
  9214     06D9  2EDB               	goto	u288_20
  9215     06DA                     u288_21:
  9216     06DA  2EE3               	goto	i1l1575
  9217     06DB                     u288_20:
  9218     06DB                     i1l3665:
  9219     06DB  30FF               	movlw	255
  9220     06DC  05A2               	andwf	___xxtofl@arg,f
  9221     06DD  30FF               	movlw	255
  9222     06DE  05A3               	andwf	___xxtofl@arg+1,f
  9223     06DF  307F               	movlw	127
  9224     06E0  05A4               	andwf	___xxtofl@arg+2,f
  9225     06E1  30FF               	movlw	255
  9226     06E2  05A5               	andwf	___xxtofl@arg+3,f
  9227     06E3                     i1l1575:
  9228     06E3  1003               	clrc
  9229     06E4  0CA1               	rrf	___xxtofl@exp,f
  9230     06E5                     i1l3667:
  9231     06E5  0821               	movf	___xxtofl@exp,w
  9232     06E6  00F8               	movwf	??___xxtofl
  9233     06E7  01F9               	clrf	??___xxtofl+1
  9234     06E8  01FA               	clrf	??___xxtofl+2
  9235     06E9  01FB               	clrf	??___xxtofl+3
  9236     06EA  3018               	movlw	24
  9237     06EB                     u289_25:
  9238     06EB  35F8               	lslf	??___xxtofl,f
  9239     06EC  0DF9               	rlf	??___xxtofl+1,f
  9240     06ED  0DFA               	rlf	??___xxtofl+2,f
  9241     06EE  0DFB               	rlf	??___xxtofl+3,f
  9242     06EF                     u289_20:
  9243     06EF  0B89               	decfsz	9,f
  9244     06F0  2EEB               	goto	u289_25
  9245     06F1  0878               	movf	??___xxtofl,w
  9246     06F2  04A2               	iorwf	___xxtofl@arg,f
  9247     06F3  0879               	movf	??___xxtofl+1,w
  9248     06F4  04A3               	iorwf	___xxtofl@arg+1,f
  9249     06F5  087A               	movf	??___xxtofl+2,w
  9250     06F6  04A4               	iorwf	___xxtofl@arg+2,f
  9251     06F7  087B               	movf	??___xxtofl+3,w
  9252     06F8  04A5               	iorwf	___xxtofl@arg+3,f
  9253     06F9                     i1l3669:
  9254     06F9  0820               	movf	___xxtofl@sign,w
  9255     06FA  1903               	btfsc	3,2
  9256     06FB  2EFD               	goto	u290_21
  9257     06FC  2EFE               	goto	u290_20
  9258     06FD                     u290_21:
  9259     06FD  2F03               	goto	i1l3675
  9260     06FE                     u290_20:
  9261     06FE                     i1l3671:
  9262     06FE  1FF7               	btfss	___xxtofl@val+3,7
  9263     06FF  2F01               	goto	u291_21
  9264     0700  2F02               	goto	u291_20
  9265     0701                     u291_21:
  9266     0701  2F03               	goto	i1l3675
  9267     0702                     u291_20:
  9268     0702                     i1l3673:
  9269     0702  17A5               	bsf	___xxtofl@arg+3,7
  9270     0703                     i1l3675:
  9271     0703  0825               	movf	___xxtofl@arg+3,w
  9272     0704  00F7               	movwf	?___xxtofl+3
  9273     0705  0824               	movf	___xxtofl@arg+2,w
  9274     0706  00F6               	movwf	?___xxtofl+2
  9275     0707  0823               	movf	___xxtofl@arg+1,w
  9276     0708  00F5               	movwf	?___xxtofl+1
  9277     0709  0822               	movf	___xxtofl@arg,w
  9278     070A  00F4               	movwf	?___xxtofl
  9279     070B                     i1l1563:
  9280     070B  0008               	return
  9281     070C                     __end_of___xxtofl:
  9282                           
  9283                           	psect	text50
  9284     0DF3                     __ptext50:	
  9285 ;; *************** function ___fltol *****************
  9286 ;; Defined at:
  9287 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;  f1              4   58[BANK0 ] unsigned char 
  9290 ;; Auto vars:     Size  Location     Type
  9291 ;;  exp1            1   13[COMMON] unsigned char 
  9292 ;;  sign1           1   12[COMMON] unsigned char 
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  4   58[BANK0 ] long 
  9295 ;; Registers used:
  9296 ;;		wreg, status,2, status,0
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9302 ;;      Params:         0       4       0       0       0       0
  9303 ;;      Locals:         2       0       0       0       0       0
  9304 ;;      Temps:          0       4       0       0       0       0
  9305 ;;      Totals:         2       8       0       0       0       0
  9306 ;;Total ram usage:       10 bytes
  9307 ;; Hardware stack levels used: 1
  9308 ;; This function calls:
  9309 ;;		Nothing
  9310 ;; This function is called by:
  9311 ;;		_sendInfo
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315     0DF3                     ___fltol:	
  9316                           ;psect for function ___fltol
  9317                           
  9318     0DF3                     i1l3319:	
  9319                           ;incstack = 0
  9320                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9321                           
  9322     0DF3  1003               	clrc
  9323     0DF4  0020               	movlb	0	; select bank0
  9324     0DF5  0D5C               	rlf	___fltol@f1+2,w
  9325     0DF6  0D5D               	rlf	___fltol@f1+3,w
  9326     0DF7  00FD               	movwf	___fltol@exp1
  9327     0DF8  087D               	movf	___fltol@exp1,w
  9328     0DF9  1D03               	btfss	3,2
  9329     0DFA  2DFC               	goto	u213_21
  9330     0DFB  2DFD               	goto	u213_20
  9331     0DFC                     u213_21:
  9332     0DFC  2E06               	goto	i1l3325
  9333     0DFD                     u213_20:
  9334     0DFD                     i1l3321:
  9335     0DFD  3000               	movlw	0
  9336     0DFE  00DD               	movwf	?___fltol+3
  9337     0DFF  3000               	movlw	0
  9338     0E00  00DC               	movwf	?___fltol+2
  9339     0E01  3000               	movlw	0
  9340     0E02  00DB               	movwf	?___fltol+1
  9341     0E03  3000               	movlw	0
  9342     0E04  00DA               	movwf	?___fltol
  9343     0E05  2E63               	goto	i1l1314
  9344     0E06                     i1l3325:
  9345     0E06  085A               	movf	___fltol@f1,w
  9346     0E07  00DE               	movwf	??___fltol
  9347     0E08  085B               	movf	___fltol@f1+1,w
  9348     0E09  00DF               	movwf	??___fltol+1
  9349     0E0A  085C               	movf	___fltol@f1+2,w
  9350     0E0B  00E0               	movwf	??___fltol+2
  9351     0E0C  085D               	movf	___fltol@f1+3,w
  9352     0E0D  00E1               	movwf	??___fltol+3
  9353     0E0E  301F               	movlw	31
  9354     0E0F                     u214_25:
  9355     0E0F  36E1               	lsrf	??___fltol+3,f
  9356     0E10  0CE0               	rrf	??___fltol+2,f
  9357     0E11  0CDF               	rrf	??___fltol+1,f
  9358     0E12  0CDE               	rrf	??___fltol,f
  9359     0E13                     u214_20:
  9360     0E13  0B89               	decfsz	9,f
  9361     0E14  2E0F               	goto	u214_25
  9362     0E15  085E               	movf	??___fltol,w
  9363     0E16  00FC               	movwf	___fltol@sign1
  9364     0E17                     i1l3327:
  9365     0E17  17DC               	bsf	___fltol@f1+2,7
  9366     0E18                     i1l3329:
  9367     0E18  30FF               	movlw	255
  9368     0E19  05DA               	andwf	___fltol@f1,f
  9369     0E1A  30FF               	movlw	255
  9370     0E1B  05DB               	andwf	___fltol@f1+1,f
  9371     0E1C  30FF               	movlw	255
  9372     0E1D  05DC               	andwf	___fltol@f1+2,f
  9373     0E1E  3000               	movlw	0
  9374     0E1F  05DD               	andwf	___fltol@f1+3,f
  9375     0E20                     i1l3331:
  9376     0E20  3096               	movlw	150
  9377     0E21  02FD               	subwf	___fltol@exp1,f
  9378     0E22                     i1l3333:
  9379     0E22  1FFD               	btfss	___fltol@exp1,7
  9380     0E23  2E25               	goto	u215_21
  9381     0E24  2E26               	goto	u215_20
  9382     0E25                     u215_21:
  9383     0E25  2E3E               	goto	i1l3343
  9384     0E26                     u215_20:
  9385     0E26                     i1l3335:
  9386     0E26  087D               	movf	___fltol@exp1,w
  9387     0E27  3A80               	xorlw	128
  9388     0E28  3E97               	addlw	151
  9389     0E29  1803               	skipnc
  9390     0E2A  2E2C               	goto	u216_21
  9391     0E2B  2E2D               	goto	u216_20
  9392     0E2C                     u216_21:
  9393     0E2C  2E2E               	goto	i1l3341
  9394     0E2D                     u216_20:
  9395     0E2D  2DFD               	goto	i1l3321
  9396     0E2E                     i1l3341:
  9397     0E2E  3001               	movlw	1
  9398     0E2F                     u217_25:
  9399     0E2F  36DD               	lsrf	___fltol@f1+3,f
  9400     0E30  0CDC               	rrf	___fltol@f1+2,f
  9401     0E31  0CDB               	rrf	___fltol@f1+1,f
  9402     0E32  0CDA               	rrf	___fltol@f1,f
  9403     0E33  0B89               	decfsz	9,f
  9404     0E34  2E2F               	goto	u217_25
  9405     0E35  3001               	movlw	1
  9406     0E36  00DE               	movwf	??___fltol
  9407     0E37  085E               	movf	??___fltol,w
  9408     0E38  07FD               	addwf	___fltol@exp1,f
  9409     0E39  1D03               	btfss	3,2
  9410     0E3A  2E3C               	goto	u218_21
  9411     0E3B  2E3D               	goto	u218_20
  9412     0E3C                     u218_21:
  9413     0E3C  2E2E               	goto	i1l3341
  9414     0E3D                     u218_20:
  9415     0E3D  2E53               	goto	i1l3351
  9416     0E3E                     i1l3343:
  9417     0E3E  3020               	movlw	32
  9418     0E3F  027D               	subwf	___fltol@exp1,w
  9419     0E40  1C03               	skipc
  9420     0E41  2E43               	goto	u219_21
  9421     0E42  2E44               	goto	u219_20
  9422     0E43                     u219_21:
  9423     0E43  2E4E               	goto	i1l1321
  9424     0E44                     u219_20:
  9425     0E44  2DFD               	goto	i1l3321
  9426     0E45                     i1l3349:
  9427     0E45  3001               	movlw	1
  9428     0E46                     u220_25:
  9429     0E46  35DA               	lslf	___fltol@f1,f
  9430     0E47  0DDB               	rlf	___fltol@f1+1,f
  9431     0E48  0DDC               	rlf	___fltol@f1+2,f
  9432     0E49  0DDD               	rlf	___fltol@f1+3,f
  9433     0E4A  0B89               	decfsz	9,f
  9434     0E4B  2E46               	goto	u220_25
  9435     0E4C  3001               	movlw	1
  9436     0E4D  02FD               	subwf	___fltol@exp1,f
  9437     0E4E                     i1l1321:
  9438     0E4E  087D               	movf	___fltol@exp1,w
  9439     0E4F  1D03               	btfss	3,2
  9440     0E50  2E52               	goto	u221_21
  9441     0E51  2E53               	goto	u221_20
  9442     0E52                     u221_21:
  9443     0E52  2E45               	goto	i1l3349
  9444     0E53                     u221_20:
  9445     0E53                     i1l3351:
  9446     0E53  087C               	movf	___fltol@sign1,w
  9447     0E54  1903               	btfsc	3,2
  9448     0E55  2E57               	goto	u222_21
  9449     0E56  2E58               	goto	u222_20
  9450     0E57                     u222_21:
  9451     0E57  2E63               	goto	i1l1324
  9452     0E58                     u222_20:
  9453     0E58                     i1l3353:
  9454     0E58  09DA               	comf	___fltol@f1,f
  9455     0E59  09DB               	comf	___fltol@f1+1,f
  9456     0E5A  09DC               	comf	___fltol@f1+2,f
  9457     0E5B  09DD               	comf	___fltol@f1+3,f
  9458     0E5C  0ADA               	incf	___fltol@f1,f
  9459     0E5D  1903               	skipnz
  9460     0E5E  0ADB               	incf	___fltol@f1+1,f
  9461     0E5F  1903               	skipnz
  9462     0E60  0ADC               	incf	___fltol@f1+2,f
  9463     0E61  1903               	skipnz
  9464     0E62  0ADD               	incf	___fltol@f1+3,f
  9465     0E63                     i1l1324:
  9466     0E63                     i1l1314:
  9467     0E63  0008               	return
  9468     0E64                     __end_of___fltol:
  9469                           
  9470                           	psect	text51
  9471     006F                     __ptext51:	
  9472 ;; *************** function ___flmul *****************
  9473 ;; Defined at:
  9474 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;  b               4   32[BANK0 ] long 
  9477 ;;  a               4   36[BANK0 ] long 
  9478 ;; Auto vars:     Size  Location     Type
  9479 ;;  prod            4   52[BANK0 ] struct .
  9480 ;;  grs             4   46[BANK0 ] unsigned long 
  9481 ;;  temp            2   56[BANK0 ] struct .
  9482 ;;  bexp            1   51[BANK0 ] unsigned char 
  9483 ;;  aexp            1   50[BANK0 ] unsigned char 
  9484 ;;  sign            1   45[BANK0 ] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  4   32[BANK0 ] unsigned char 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0, pclath, cstack
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9494 ;;      Params:         0       8       0       0       0       0
  9495 ;;      Locals:         0      13       0       0       0       0
  9496 ;;      Temps:          0       5       0       0       0       0
  9497 ;;      Totals:         0      26       0       0       0       0
  9498 ;;Total ram usage:       26 bytes
  9499 ;; Hardware stack levels used: 1
  9500 ;; Hardware stack levels required when called: 1
  9501 ;; This function calls:
  9502 ;;		__Umul8_16
  9503 ;; This function is called by:
  9504 ;;		_sendInfo
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508     006F                     ___flmul:	
  9509                           ;psect for function ___flmul
  9510                           
  9511     006F                     i1l3495:	
  9512                           ;incstack = 0
  9513                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9514                           
  9515     006F  0020               	movlb	0	; select bank0
  9516     0070  0843               	movf	___flmul@b+3,w
  9517     0071  3980               	andlw	128
  9518     0072  00CD               	movwf	___flmul@sign
  9519     0073                     i1l3497:
  9520     0073  3543               	lslf	___flmul@b+3,w
  9521     0074  00D3               	movwf	___flmul@bexp
  9522     0075                     i1l3499:
  9523     0075  1FC2               	btfss	___flmul@b+2,7
  9524     0076  2878               	goto	u252_21
  9525     0077  2879               	goto	u252_20
  9526     0078                     u252_21:
  9527     0078  287A               	goto	i1l3503
  9528     0079                     u252_20:
  9529     0079                     i1l3501:
  9530     0079  1453               	bsf	___flmul@bexp,0
  9531     007A                     i1l3503:
  9532     007A  0853               	movf	___flmul@bexp,w
  9533     007B  1903               	btfsc	3,2
  9534     007C  287E               	goto	u253_21
  9535     007D  287F               	goto	u253_20
  9536     007E                     u253_21:
  9537     007E  288E               	goto	i1l3511
  9538     007F                     u253_20:
  9539     007F                     i1l3505:
  9540     007F  0A53               	incf	___flmul@bexp,w
  9541     0080  1D03               	btfss	3,2
  9542     0081  2883               	goto	u254_21
  9543     0082  2884               	goto	u254_20
  9544     0083                     u254_21:
  9545     0083  288C               	goto	i1l3509
  9546     0084                     u254_20:
  9547     0084                     i1l3507:
  9548     0084  3000               	movlw	0
  9549     0085  00C3               	movwf	___flmul@b+3
  9550     0086  3000               	movlw	0
  9551     0087  00C2               	movwf	___flmul@b+2
  9552     0088  3000               	movlw	0
  9553     0089  00C1               	movwf	___flmul@b+1
  9554     008A  3000               	movlw	0
  9555     008B  00C0               	movwf	___flmul@b
  9556     008C                     i1l3509:
  9557     008C  17C2               	bsf	___flmul@b+2,7
  9558     008D  2896               	goto	i1l3513
  9559     008E                     i1l3511:
  9560     008E  3000               	movlw	0
  9561     008F  00C3               	movwf	___flmul@b+3
  9562     0090  3000               	movlw	0
  9563     0091  00C2               	movwf	___flmul@b+2
  9564     0092  3000               	movlw	0
  9565     0093  00C1               	movwf	___flmul@b+1
  9566     0094  3000               	movlw	0
  9567     0095  00C0               	movwf	___flmul@b
  9568     0096                     i1l3513:
  9569     0096  0847               	movf	___flmul@a+3,w
  9570     0097  3980               	andlw	128
  9571     0098  00C8               	movwf	??___flmul
  9572     0099  0848               	movf	??___flmul,w
  9573     009A  06CD               	xorwf	___flmul@sign,f
  9574     009B                     i1l3515:
  9575     009B  3547               	lslf	___flmul@a+3,w
  9576     009C  00D2               	movwf	___flmul@aexp
  9577     009D                     i1l3517:
  9578     009D  1FC6               	btfss	___flmul@a+2,7
  9579     009E  28A0               	goto	u255_21
  9580     009F  28A1               	goto	u255_20
  9581     00A0                     u255_21:
  9582     00A0  28A2               	goto	i1l3521
  9583     00A1                     u255_20:
  9584     00A1                     i1l3519:
  9585     00A1  1452               	bsf	___flmul@aexp,0
  9586     00A2                     i1l3521:
  9587     00A2  0852               	movf	___flmul@aexp,w
  9588     00A3  1903               	btfsc	3,2
  9589     00A4  28A6               	goto	u256_21
  9590     00A5  28A7               	goto	u256_20
  9591     00A6                     u256_21:
  9592     00A6  28B6               	goto	i1l3529
  9593     00A7                     u256_20:
  9594     00A7                     i1l3523:
  9595     00A7  0A52               	incf	___flmul@aexp,w
  9596     00A8  1D03               	btfss	3,2
  9597     00A9  28AB               	goto	u257_21
  9598     00AA  28AC               	goto	u257_20
  9599     00AB                     u257_21:
  9600     00AB  28B4               	goto	i1l3527
  9601     00AC                     u257_20:
  9602     00AC                     i1l3525:
  9603     00AC  3000               	movlw	0
  9604     00AD  00C7               	movwf	___flmul@a+3
  9605     00AE  3000               	movlw	0
  9606     00AF  00C6               	movwf	___flmul@a+2
  9607     00B0  3000               	movlw	0
  9608     00B1  00C5               	movwf	___flmul@a+1
  9609     00B2  3000               	movlw	0
  9610     00B3  00C4               	movwf	___flmul@a
  9611     00B4                     i1l3527:
  9612     00B4  17C6               	bsf	___flmul@a+2,7
  9613     00B5  28BE               	goto	i1l3531
  9614     00B6                     i1l3529:
  9615     00B6  3000               	movlw	0
  9616     00B7  00C7               	movwf	___flmul@a+3
  9617     00B8  3000               	movlw	0
  9618     00B9  00C6               	movwf	___flmul@a+2
  9619     00BA  3000               	movlw	0
  9620     00BB  00C5               	movwf	___flmul@a+1
  9621     00BC  3000               	movlw	0
  9622     00BD  00C4               	movwf	___flmul@a
  9623     00BE                     i1l3531:
  9624     00BE  0852               	movf	___flmul@aexp,w
  9625     00BF  1903               	btfsc	3,2
  9626     00C0  28C2               	goto	u258_21
  9627     00C1  28C3               	goto	u258_20
  9628     00C2                     u258_21:
  9629     00C2  28C8               	goto	i1l3535
  9630     00C3                     u258_20:
  9631     00C3                     i1l3533:
  9632     00C3  0853               	movf	___flmul@bexp,w
  9633     00C4  1D03               	btfss	3,2
  9634     00C5  28C7               	goto	u259_21
  9635     00C6  28C8               	goto	u259_20
  9636     00C7                     u259_21:
  9637     00C7  28D1               	goto	i1l3539
  9638     00C8                     u259_20:
  9639     00C8                     i1l3535:
  9640     00C8  3000               	movlw	0
  9641     00C9  00C3               	movwf	?___flmul+3
  9642     00CA  3000               	movlw	0
  9643     00CB  00C2               	movwf	?___flmul+2
  9644     00CC  3000               	movlw	0
  9645     00CD  00C1               	movwf	?___flmul+1
  9646     00CE  3000               	movlw	0
  9647     00CF  00C0               	movwf	?___flmul
  9648     00D0  2AA9               	goto	i1l1517
  9649     00D1                     i1l3539:
  9650     00D1  0840               	movf	___flmul@b,w
  9651     00D2  00F0               	movwf	__Umul8_16@multiplicand
  9652     00D3  0846               	movf	___flmul@a+2,w
  9653     00D4  318A  22AA  3180   	fcall	__Umul8_16
  9654     00D7  0871               	movf	?__Umul8_16+1,w
  9655     00D8  0020               	movlb	0	; select bank0
  9656     00D9  00D9               	movwf	___flmul@temp+1
  9657     00DA  0870               	movf	?__Umul8_16,w
  9658     00DB  00D8               	movwf	___flmul@temp
  9659     00DC                     i1l3541:
  9660     00DC  0858               	movf	___flmul@temp,w
  9661     00DD  00C8               	movwf	??___flmul
  9662     00DE  01C9               	clrf	??___flmul+1
  9663     00DF  01CA               	clrf	??___flmul+2
  9664     00E0  01CB               	clrf	??___flmul+3
  9665     00E1  084B               	movf	??___flmul+3,w
  9666     00E2  00D1               	movwf	___flmul@grs+3
  9667     00E3  084A               	movf	??___flmul+2,w
  9668     00E4  00D0               	movwf	___flmul@grs+2
  9669     00E5  0849               	movf	??___flmul+1,w
  9670     00E6  00CF               	movwf	___flmul@grs+1
  9671     00E7  0848               	movf	??___flmul,w
  9672     00E8  00CE               	movwf	___flmul@grs
  9673     00E9                     i1l3543:
  9674     00E9  0859               	movf	___flmul@temp+1,w
  9675     00EA  00C8               	movwf	??___flmul
  9676     00EB  01C9               	clrf	??___flmul+1
  9677     00EC  01CA               	clrf	??___flmul+2
  9678     00ED  01CB               	clrf	??___flmul+3
  9679     00EE  084B               	movf	??___flmul+3,w
  9680     00EF  00D7               	movwf	___flmul@prod+3
  9681     00F0  084A               	movf	??___flmul+2,w
  9682     00F1  00D6               	movwf	___flmul@prod+2
  9683     00F2  0849               	movf	??___flmul+1,w
  9684     00F3  00D5               	movwf	___flmul@prod+1
  9685     00F4  0848               	movf	??___flmul,w
  9686     00F5  00D4               	movwf	___flmul@prod
  9687     00F6  0841               	movf	___flmul@b+1,w
  9688     00F7  00F0               	movwf	__Umul8_16@multiplicand
  9689     00F8  0845               	movf	___flmul@a+1,w
  9690     00F9  318A  22AA  3180   	fcall	__Umul8_16
  9691     00FC  0871               	movf	?__Umul8_16+1,w
  9692     00FD  0020               	movlb	0	; select bank0
  9693     00FE  00D9               	movwf	___flmul@temp+1
  9694     00FF  0870               	movf	?__Umul8_16,w
  9695     0100  00D8               	movwf	___flmul@temp
  9696     0101                     i1l3545:
  9697     0101  0858               	movf	___flmul@temp,w
  9698     0102  00C8               	movwf	??___flmul
  9699     0103  01C9               	clrf	??___flmul+1
  9700     0104  01CA               	clrf	??___flmul+2
  9701     0105  01CB               	clrf	??___flmul+3
  9702     0106  0848               	movf	??___flmul,w
  9703     0107  07CE               	addwf	___flmul@grs,f
  9704     0108  0849               	movf	??___flmul+1,w
  9705     0109  3DCF               	addwfc	___flmul@grs+1,f
  9706     010A  084A               	movf	??___flmul+2,w
  9707     010B  3DD0               	addwfc	___flmul@grs+2,f
  9708     010C  084B               	movf	??___flmul+3,w
  9709     010D  3DD1               	addwfc	___flmul@grs+3,f
  9710     010E                     i1l3547:
  9711     010E  0859               	movf	___flmul@temp+1,w
  9712     010F  00C8               	movwf	??___flmul
  9713     0110  01C9               	clrf	??___flmul+1
  9714     0111  01CA               	clrf	??___flmul+2
  9715     0112  01CB               	clrf	??___flmul+3
  9716     0113  0848               	movf	??___flmul,w
  9717     0114  07D4               	addwf	___flmul@prod,f
  9718     0115  0849               	movf	??___flmul+1,w
  9719     0116  3DD5               	addwfc	___flmul@prod+1,f
  9720     0117  084A               	movf	??___flmul+2,w
  9721     0118  3DD6               	addwfc	___flmul@prod+2,f
  9722     0119  084B               	movf	??___flmul+3,w
  9723     011A  3DD7               	addwfc	___flmul@prod+3,f
  9724     011B  0842               	movf	___flmul@b+2,w
  9725     011C  00F0               	movwf	__Umul8_16@multiplicand
  9726     011D  0844               	movf	___flmul@a,w
  9727     011E  318A  22AA  3180   	fcall	__Umul8_16
  9728     0121  0871               	movf	?__Umul8_16+1,w
  9729     0122  0020               	movlb	0	; select bank0
  9730     0123  00D9               	movwf	___flmul@temp+1
  9731     0124  0870               	movf	?__Umul8_16,w
  9732     0125  00D8               	movwf	___flmul@temp
  9733     0126                     i1l3549:
  9734     0126  0858               	movf	___flmul@temp,w
  9735     0127  00C8               	movwf	??___flmul
  9736     0128  01C9               	clrf	??___flmul+1
  9737     0129  01CA               	clrf	??___flmul+2
  9738     012A  01CB               	clrf	??___flmul+3
  9739     012B  0848               	movf	??___flmul,w
  9740     012C  07CE               	addwf	___flmul@grs,f
  9741     012D  0849               	movf	??___flmul+1,w
  9742     012E  3DCF               	addwfc	___flmul@grs+1,f
  9743     012F  084A               	movf	??___flmul+2,w
  9744     0130  3DD0               	addwfc	___flmul@grs+2,f
  9745     0131  084B               	movf	??___flmul+3,w
  9746     0132  3DD1               	addwfc	___flmul@grs+3,f
  9747     0133                     i1l3551:
  9748     0133  0859               	movf	___flmul@temp+1,w
  9749     0134  00C8               	movwf	??___flmul
  9750     0135  01C9               	clrf	??___flmul+1
  9751     0136  01CA               	clrf	??___flmul+2
  9752     0137  01CB               	clrf	??___flmul+3
  9753     0138  0848               	movf	??___flmul,w
  9754     0139  07D4               	addwf	___flmul@prod,f
  9755     013A  0849               	movf	??___flmul+1,w
  9756     013B  3DD5               	addwfc	___flmul@prod+1,f
  9757     013C  084A               	movf	??___flmul+2,w
  9758     013D  3DD6               	addwfc	___flmul@prod+2,f
  9759     013E  084B               	movf	??___flmul+3,w
  9760     013F  3DD7               	addwfc	___flmul@prod+3,f
  9761     0140                     i1l3553:
  9762     0140  3008               	movlw	8
  9763     0141                     u260_25:
  9764     0141  35CE               	lslf	___flmul@grs,f
  9765     0142  0DCF               	rlf	___flmul@grs+1,f
  9766     0143  0DD0               	rlf	___flmul@grs+2,f
  9767     0144  0DD1               	rlf	___flmul@grs+3,f
  9768     0145  0B89               	decfsz	9,f
  9769     0146  2941               	goto	u260_25
  9770     0147                     i1l3555:
  9771     0147  0841               	movf	___flmul@b+1,w
  9772     0148  00F0               	movwf	__Umul8_16@multiplicand
  9773     0149  0844               	movf	___flmul@a,w
  9774     014A  318A  22AA  3180   	fcall	__Umul8_16
  9775     014D  0871               	movf	?__Umul8_16+1,w
  9776     014E  0020               	movlb	0	; select bank0
  9777     014F  00D9               	movwf	___flmul@temp+1
  9778     0150  0870               	movf	?__Umul8_16,w
  9779     0151  00D8               	movwf	___flmul@temp
  9780     0152                     i1l3557:
  9781     0152  0858               	movf	___flmul@temp,w
  9782     0153  07CE               	addwf	___flmul@grs,f
  9783     0154  0859               	movf	___flmul@temp+1,w
  9784     0155  3DCF               	addwfc	___flmul@grs+1,f
  9785     0156  3000               	movlw	0
  9786     0157  3DD0               	addwfc	___flmul@grs+2,f
  9787     0158  3DD1               	addwfc	___flmul@grs+3,f
  9788     0159                     i1l3559:
  9789     0159  0840               	movf	___flmul@b,w
  9790     015A  00F0               	movwf	__Umul8_16@multiplicand
  9791     015B  0845               	movf	___flmul@a+1,w
  9792     015C  318A  22AA  3180   	fcall	__Umul8_16
  9793     015F  0871               	movf	?__Umul8_16+1,w
  9794     0160  0020               	movlb	0	; select bank0
  9795     0161  00D9               	movwf	___flmul@temp+1
  9796     0162  0870               	movf	?__Umul8_16,w
  9797     0163  00D8               	movwf	___flmul@temp
  9798     0164                     i1l3561:
  9799     0164  0858               	movf	___flmul@temp,w
  9800     0165  07CE               	addwf	___flmul@grs,f
  9801     0166  0859               	movf	___flmul@temp+1,w
  9802     0167  3DCF               	addwfc	___flmul@grs+1,f
  9803     0168  3000               	movlw	0
  9804     0169  3DD0               	addwfc	___flmul@grs+2,f
  9805     016A  3DD1               	addwfc	___flmul@grs+3,f
  9806     016B                     i1l3563:
  9807     016B  3008               	movlw	8
  9808     016C                     u261_25:
  9809     016C  35CE               	lslf	___flmul@grs,f
  9810     016D  0DCF               	rlf	___flmul@grs+1,f
  9811     016E  0DD0               	rlf	___flmul@grs+2,f
  9812     016F  0DD1               	rlf	___flmul@grs+3,f
  9813     0170  0B89               	decfsz	9,f
  9814     0171  296C               	goto	u261_25
  9815     0172  0840               	movf	___flmul@b,w
  9816     0173  00F0               	movwf	__Umul8_16@multiplicand
  9817     0174  0844               	movf	___flmul@a,w
  9818     0175  318A  22AA  3180   	fcall	__Umul8_16
  9819     0178  0871               	movf	?__Umul8_16+1,w
  9820     0179  0020               	movlb	0	; select bank0
  9821     017A  00D9               	movwf	___flmul@temp+1
  9822     017B  0870               	movf	?__Umul8_16,w
  9823     017C  00D8               	movwf	___flmul@temp
  9824     017D                     i1l3565:
  9825     017D  0858               	movf	___flmul@temp,w
  9826     017E  07CE               	addwf	___flmul@grs,f
  9827     017F  0859               	movf	___flmul@temp+1,w
  9828     0180  3DCF               	addwfc	___flmul@grs+1,f
  9829     0181  3000               	movlw	0
  9830     0182  3DD0               	addwfc	___flmul@grs+2,f
  9831     0183  3DD1               	addwfc	___flmul@grs+3,f
  9832     0184                     i1l3567:
  9833     0184  0841               	movf	___flmul@b+1,w
  9834     0185  00F0               	movwf	__Umul8_16@multiplicand
  9835     0186  0846               	movf	___flmul@a+2,w
  9836     0187  318A  22AA  3180   	fcall	__Umul8_16
  9837     018A  0871               	movf	?__Umul8_16+1,w
  9838     018B  0020               	movlb	0	; select bank0
  9839     018C  00D9               	movwf	___flmul@temp+1
  9840     018D  0870               	movf	?__Umul8_16,w
  9841     018E  00D8               	movwf	___flmul@temp
  9842     018F  0858               	movf	___flmul@temp,w
  9843     0190  07D4               	addwf	___flmul@prod,f
  9844     0191  0859               	movf	___flmul@temp+1,w
  9845     0192  3DD5               	addwfc	___flmul@prod+1,f
  9846     0193  3000               	movlw	0
  9847     0194  3DD6               	addwfc	___flmul@prod+2,f
  9848     0195  3DD7               	addwfc	___flmul@prod+3,f
  9849     0196                     i1l3569:
  9850     0196  0842               	movf	___flmul@b+2,w
  9851     0197  00F0               	movwf	__Umul8_16@multiplicand
  9852     0198  0845               	movf	___flmul@a+1,w
  9853     0199  318A  22AA  3180   	fcall	__Umul8_16
  9854     019C  0871               	movf	?__Umul8_16+1,w
  9855     019D  0020               	movlb	0	; select bank0
  9856     019E  00D9               	movwf	___flmul@temp+1
  9857     019F  0870               	movf	?__Umul8_16,w
  9858     01A0  00D8               	movwf	___flmul@temp
  9859     01A1                     i1l3571:
  9860     01A1  0858               	movf	___flmul@temp,w
  9861     01A2  07D4               	addwf	___flmul@prod,f
  9862     01A3  0859               	movf	___flmul@temp+1,w
  9863     01A4  3DD5               	addwfc	___flmul@prod+1,f
  9864     01A5  3000               	movlw	0
  9865     01A6  3DD6               	addwfc	___flmul@prod+2,f
  9866     01A7  3DD7               	addwfc	___flmul@prod+3,f
  9867     01A8  0842               	movf	___flmul@b+2,w
  9868     01A9  00F0               	movwf	__Umul8_16@multiplicand
  9869     01AA  0846               	movf	___flmul@a+2,w
  9870     01AB  318A  22AA  3180   	fcall	__Umul8_16
  9871     01AE  0871               	movf	?__Umul8_16+1,w
  9872     01AF  0020               	movlb	0	; select bank0
  9873     01B0  00D9               	movwf	___flmul@temp+1
  9874     01B1  0870               	movf	?__Umul8_16,w
  9875     01B2  00D8               	movwf	___flmul@temp
  9876     01B3                     i1l3573:
  9877     01B3  0858               	movf	___flmul@temp,w
  9878     01B4  00C8               	movwf	??___flmul
  9879     01B5  0859               	movf	___flmul@temp+1,w
  9880     01B6  00C9               	movwf	??___flmul+1
  9881     01B7  01CA               	clrf	??___flmul+2
  9882     01B8  01CB               	clrf	??___flmul+3
  9883     01B9  3008               	movlw	8
  9884     01BA                     u262_25:
  9885     01BA  35C8               	lslf	??___flmul,f
  9886     01BB  0DC9               	rlf	??___flmul+1,f
  9887     01BC  0DCA               	rlf	??___flmul+2,f
  9888     01BD  0DCB               	rlf	??___flmul+3,f
  9889     01BE                     u262_20:
  9890     01BE  0B89               	decfsz	9,f
  9891     01BF  29BA               	goto	u262_25
  9892     01C0  0848               	movf	??___flmul,w
  9893     01C1  07D4               	addwf	___flmul@prod,f
  9894     01C2  0849               	movf	??___flmul+1,w
  9895     01C3  3DD5               	addwfc	___flmul@prod+1,f
  9896     01C4  084A               	movf	??___flmul+2,w
  9897     01C5  3DD6               	addwfc	___flmul@prod+2,f
  9898     01C6  084B               	movf	??___flmul+3,w
  9899     01C7  3DD7               	addwfc	___flmul@prod+3,f
  9900     01C8                     i1l3575:
  9901     01C8  084E               	movf	___flmul@grs,w
  9902     01C9  00C8               	movwf	??___flmul
  9903     01CA  084F               	movf	___flmul@grs+1,w
  9904     01CB  00C9               	movwf	??___flmul+1
  9905     01CC  0850               	movf	___flmul@grs+2,w
  9906     01CD  00CA               	movwf	??___flmul+2
  9907     01CE  0851               	movf	___flmul@grs+3,w
  9908     01CF  00CB               	movwf	??___flmul+3
  9909     01D0  3018               	movlw	24
  9910     01D1                     u263_25:
  9911     01D1  36CB               	lsrf	??___flmul+3,f
  9912     01D2  0CCA               	rrf	??___flmul+2,f
  9913     01D3  0CC9               	rrf	??___flmul+1,f
  9914     01D4  0CC8               	rrf	??___flmul,f
  9915     01D5                     u263_20:
  9916     01D5  0B89               	decfsz	9,f
  9917     01D6  29D1               	goto	u263_25
  9918     01D7  0848               	movf	??___flmul,w
  9919     01D8  07D4               	addwf	___flmul@prod,f
  9920     01D9  0849               	movf	??___flmul+1,w
  9921     01DA  3DD5               	addwfc	___flmul@prod+1,f
  9922     01DB  084A               	movf	??___flmul+2,w
  9923     01DC  3DD6               	addwfc	___flmul@prod+2,f
  9924     01DD  084B               	movf	??___flmul+3,w
  9925     01DE  3DD7               	addwfc	___flmul@prod+3,f
  9926     01DF                     i1l3577:
  9927     01DF  3008               	movlw	8
  9928     01E0                     u264_25:
  9929     01E0  35CE               	lslf	___flmul@grs,f
  9930     01E1  0DCF               	rlf	___flmul@grs+1,f
  9931     01E2  0DD0               	rlf	___flmul@grs+2,f
  9932     01E3  0DD1               	rlf	___flmul@grs+3,f
  9933     01E4  0B89               	decfsz	9,f
  9934     01E5  29E0               	goto	u264_25
  9935     01E6                     i1l3579:
  9936     01E6  0853               	movf	___flmul@bexp,w
  9937     01E7  0752               	addwf	___flmul@aexp,w
  9938     01E8  00C8               	movwf	??___flmul
  9939     01E9  01C9               	clrf	??___flmul+1
  9940     01EA  0DC9               	rlf	??___flmul+1,f
  9941     01EB  0848               	movf	??___flmul,w
  9942     01EC  3E82               	addlw	130
  9943     01ED  00D8               	movwf	___flmul@temp
  9944     01EE  30FF               	movlw	255
  9945     01EF  3D49               	addwfc	??___flmul+1,w
  9946     01F0  00D9               	movwf	___flmul@temp+1
  9947     01F1  2A09               	goto	i1l3591
  9948     01F2                     i1l3581:
  9949     01F2  3001               	movlw	1
  9950     01F3                     u265_25:
  9951     01F3  35D4               	lslf	___flmul@prod,f
  9952     01F4  0DD5               	rlf	___flmul@prod+1,f
  9953     01F5  0DD6               	rlf	___flmul@prod+2,f
  9954     01F6  0DD7               	rlf	___flmul@prod+3,f
  9955     01F7  0B89               	decfsz	9,f
  9956     01F8  29F3               	goto	u265_25
  9957     01F9                     i1l3583:
  9958     01F9  1FD1               	btfss	___flmul@grs+3,7
  9959     01FA  29FC               	goto	u266_21
  9960     01FB  29FD               	goto	u266_20
  9961     01FC                     u266_21:
  9962     01FC  29FE               	goto	i1l3587
  9963     01FD                     u266_20:
  9964     01FD                     i1l3585:
  9965     01FD  1454               	bsf	___flmul@prod,0
  9966     01FE                     i1l3587:
  9967     01FE  3001               	movlw	1
  9968     01FF                     u267_25:
  9969     01FF  35CE               	lslf	___flmul@grs,f
  9970     0200  0DCF               	rlf	___flmul@grs+1,f
  9971     0201  0DD0               	rlf	___flmul@grs+2,f
  9972     0202  0DD1               	rlf	___flmul@grs+3,f
  9973     0203  0B89               	decfsz	9,f
  9974     0204  29FF               	goto	u267_25
  9975     0205                     i1l3589:
  9976     0205  30FF               	movlw	255
  9977     0206  07D8               	addwf	___flmul@temp,f
  9978     0207  30FF               	movlw	255
  9979     0208  3DD9               	addwfc	___flmul@temp+1,f
  9980     0209                     i1l3591:
  9981     0209  1FD6               	btfss	___flmul@prod+2,7
  9982     020A  2A0C               	goto	u268_21
  9983     020B  2A0D               	goto	u268_20
  9984     020C                     u268_21:
  9985     020C  29F2               	goto	i1l3581
  9986     020D                     u268_20:
  9987     020D                     i1l3593:
  9988     020D  01D2               	clrf	___flmul@aexp
  9989     020E                     i1l3595:
  9990     020E  1FD1               	btfss	___flmul@grs+3,7
  9991     020F  2A11               	goto	u269_21
  9992     0210  2A12               	goto	u269_20
  9993     0211                     u269_21:
  9994     0211  2A2E               	goto	i1l3603
  9995     0212                     u269_20:
  9996     0212                     i1l3597:
  9997     0212  30FF               	movlw	255
  9998     0213  054E               	andwf	___flmul@grs,w
  9999     0214  00C8               	movwf	??___flmul
 10000     0215  30FF               	movlw	255
 10001     0216  054F               	andwf	___flmul@grs+1,w
 10002     0217  00C9               	movwf	??___flmul+1
 10003     0218  30FF               	movlw	255
 10004     0219  0550               	andwf	___flmul@grs+2,w
 10005     021A  00CA               	movwf	??___flmul+2
 10006     021B  307F               	movlw	127
 10007     021C  0551               	andwf	___flmul@grs+3,w
 10008     021D  00CB               	movwf	??___flmul+3
 10009     021E  084B               	movf	??___flmul+3,w
 10010     021F  044A               	iorwf	??___flmul+2,w
 10011     0220  0449               	iorwf	??___flmul+1,w
 10012     0221  0448               	iorwf	??___flmul,w
 10013     0222  1903               	skipnz
 10014     0223  2A25               	goto	u270_21
 10015     0224  2A26               	goto	u270_20
 10016     0225                     u270_21:
 10017     0225  2A29               	goto	i1l1523
 10018     0226                     u270_20:
 10019     0226                     i1l3599:
 10020     0226  01D2               	clrf	___flmul@aexp
 10021     0227  0AD2               	incf	___flmul@aexp,f
 10022     0228  2A2E               	goto	i1l3603
 10023     0229                     i1l1523:
 10024     0229  1C54               	btfss	___flmul@prod,0
 10025     022A  2A2C               	goto	u271_21
 10026     022B  2A2D               	goto	u271_20
 10027     022C                     u271_21:
 10028     022C  2A2E               	goto	i1l3603
 10029     022D                     u271_20:
 10030     022D  2A26               	goto	i1l3599
 10031     022E                     i1l3603:
 10032     022E  0852               	movf	___flmul@aexp,w
 10033     022F  1903               	btfsc	3,2
 10034     0230  2A32               	goto	u272_21
 10035     0231  2A33               	goto	u272_20
 10036     0232                     u272_21:
 10037     0232  2A5B               	goto	i1l3613
 10038     0233                     u272_20:
 10039     0233                     i1l3605:
 10040     0233  3001               	movlw	1
 10041     0234  07D4               	addwf	___flmul@prod,f
 10042     0235  3000               	movlw	0
 10043     0236  3DD5               	addwfc	___flmul@prod+1,f
 10044     0237  3000               	movlw	0
 10045     0238  3DD6               	addwfc	___flmul@prod+2,f
 10046     0239  3000               	movlw	0
 10047     023A  3DD7               	addwfc	___flmul@prod+3,f
 10048     023B                     i1l3607:
 10049     023B  1C57               	btfss	___flmul@prod+3,0
 10050     023C  2A3E               	goto	u273_21
 10051     023D  2A3F               	goto	u273_20
 10052     023E                     u273_21:
 10053     023E  2A5B               	goto	i1l3613
 10054     023F                     u273_20:
 10055     023F                     i1l3609:
 10056     023F  0854               	movf	___flmul@prod,w
 10057     0240  00C8               	movwf	??___flmul
 10058     0241  0855               	movf	___flmul@prod+1,w
 10059     0242  00C9               	movwf	??___flmul+1
 10060     0243  0856               	movf	___flmul@prod+2,w
 10061     0244  00CA               	movwf	??___flmul+2
 10062     0245  0857               	movf	___flmul@prod+3,w
 10063     0246  00CB               	movwf	??___flmul+3
 10064     0247  3001               	movlw	1
 10065     0248  00CC               	movwf	??___flmul+4
 10066     0249                     u274_25:
 10067     0249  37CB               	asrf	??___flmul+3,f
 10068     024A  0CCA               	rrf	??___flmul+2,f
 10069     024B  0CC9               	rrf	??___flmul+1,f
 10070     024C  0CC8               	rrf	??___flmul,f
 10071     024D                     u274_20:
 10072     024D  0BCC               	decfsz	??___flmul+4,f
 10073     024E  2A49               	goto	u274_25
 10074     024F  084B               	movf	??___flmul+3,w
 10075     0250  00D7               	movwf	___flmul@prod+3
 10076     0251  084A               	movf	??___flmul+2,w
 10077     0252  00D6               	movwf	___flmul@prod+2
 10078     0253  0849               	movf	??___flmul+1,w
 10079     0254  00D5               	movwf	___flmul@prod+1
 10080     0255  0848               	movf	??___flmul,w
 10081     0256  00D4               	movwf	___flmul@prod
 10082     0257                     i1l3611:
 10083     0257  3001               	movlw	1
 10084     0258  07D8               	addwf	___flmul@temp,f
 10085     0259  3000               	movlw	0
 10086     025A  3DD9               	addwfc	___flmul@temp+1,f
 10087     025B                     i1l3613:
 10088     025B  0859               	movf	___flmul@temp+1,w
 10089     025C  3A80               	xorlw	128
 10090     025D  00C8               	movwf	??___flmul
 10091     025E  3080               	movlw	128
 10092     025F  0248               	subwf	??___flmul,w
 10093     0260  1D03               	skipz
 10094     0261  2A64               	goto	u275_25
 10095     0262  30FF               	movlw	255
 10096     0263  0258               	subwf	___flmul@temp,w
 10097     0264                     u275_25:
 10098     0264  1C03               	skipc
 10099     0265  2A67               	goto	u275_21
 10100     0266  2A68               	goto	u275_20
 10101     0267                     u275_21:
 10102     0267  2A72               	goto	i1l3617
 10103     0268                     u275_20:
 10104     0268                     i1l3615:
 10105     0268  307F               	movlw	127
 10106     0269  0020               	movlb	0	; select bank0
 10107     026A  00D7               	movwf	___flmul@prod+3
 10108     026B  3080               	movlw	128
 10109     026C  00D6               	movwf	___flmul@prod+2
 10110     026D  3000               	movlw	0
 10111     026E  00D5               	movwf	___flmul@prod+1
 10112     026F  3000               	movlw	0
 10113     0270  00D4               	movwf	___flmul@prod
 10114     0271  2A9D               	goto	i1l1529
 10115     0272                     i1l3617:
 10116     0272  0020               	movlb	0	; select bank0
 10117     0273  0859               	movf	___flmul@temp+1,w
 10118     0274  3A80               	xorlw	128
 10119     0275  00C8               	movwf	??___flmul
 10120     0276  3080               	movlw	128
 10121     0277  0248               	subwf	??___flmul,w
 10122     0278  1D03               	skipz
 10123     0279  2A7C               	goto	u276_25
 10124     027A  3001               	movlw	1
 10125     027B  0258               	subwf	___flmul@temp,w
 10126     027C                     u276_25:
 10127     027C  1803               	skipnc
 10128     027D  2A7F               	goto	u276_21
 10129     027E  2A80               	goto	u276_20
 10130     027F                     u276_21:
 10131     027F  2A8B               	goto	i1l3623
 10132     0280                     u276_20:
 10133     0280                     i1l3619:
 10134     0280  3000               	movlw	0
 10135     0281  0020               	movlb	0	; select bank0
 10136     0282  00D7               	movwf	___flmul@prod+3
 10137     0283  3000               	movlw	0
 10138     0284  00D6               	movwf	___flmul@prod+2
 10139     0285  3000               	movlw	0
 10140     0286  00D5               	movwf	___flmul@prod+1
 10141     0287  3000               	movlw	0
 10142     0288  00D4               	movwf	___flmul@prod
 10143     0289                     i1l3621:
 10144     0289  01CD               	clrf	___flmul@sign
 10145     028A  2A9D               	goto	i1l1529
 10146     028B                     i1l3623:
 10147     028B  0020               	movlb	0	; select bank0
 10148     028C  0858               	movf	___flmul@temp,w
 10149     028D  00D3               	movwf	___flmul@bexp
 10150     028E  30FF               	movlw	255
 10151     028F  05D4               	andwf	___flmul@prod,f
 10152     0290  30FF               	movlw	255
 10153     0291  05D5               	andwf	___flmul@prod+1,f
 10154     0292  307F               	movlw	127
 10155     0293  05D6               	andwf	___flmul@prod+2,f
 10156     0294  3000               	movlw	0
 10157     0295  05D7               	andwf	___flmul@prod+3,f
 10158     0296                     i1l3625:
 10159     0296  1C53               	btfss	___flmul@bexp,0
 10160     0297  2A99               	goto	u277_21
 10161     0298  2A9A               	goto	u277_20
 10162     0299                     u277_21:
 10163     0299  2A9B               	goto	i1l3629
 10164     029A                     u277_20:
 10165     029A                     i1l3627:
 10166     029A  17D6               	bsf	___flmul@prod+2,7
 10167     029B                     i1l3629:
 10168     029B  3653               	lsrf	___flmul@bexp,w
 10169     029C  00D7               	movwf	___flmul@prod+3
 10170     029D                     i1l1529:
 10171     029D  084D               	movf	___flmul@sign,w
 10172     029E  00C8               	movwf	??___flmul
 10173     029F  0848               	movf	??___flmul,w
 10174     02A0  04D7               	iorwf	___flmul@prod+3,f
 10175     02A1                     i1l3631:
 10176     02A1  0857               	movf	___flmul@prod+3,w
 10177     02A2  00C3               	movwf	?___flmul+3
 10178     02A3  0856               	movf	___flmul@prod+2,w
 10179     02A4  00C2               	movwf	?___flmul+2
 10180     02A5  0855               	movf	___flmul@prod+1,w
 10181     02A6  00C1               	movwf	?___flmul+1
 10182     02A7  0854               	movf	___flmul@prod,w
 10183     02A8  00C0               	movwf	?___flmul
 10184     02A9                     i1l1517:
 10185     02A9  0008               	return
 10186     02AA                     __end_of___flmul:
 10187                           
 10188                           	psect	text52
 10189     0AAA                     __ptext52:	
 10190 ;; *************** function __Umul8_16 *****************
 10191 ;; Defined at:
 10192 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  multiplier      1    wreg     unsigned char 
 10195 ;;  multiplicand    1    0[COMMON] unsigned char 
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;  multiplier      1    8[COMMON] unsigned char 
 10198 ;;  word_mpld       2    6[COMMON] unsigned int 
 10199 ;;  product         2    4[COMMON] unsigned int 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  2    0[COMMON] unsigned int 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10209 ;;      Params:         2       0       0       0       0       0
 10210 ;;      Locals:         5       0       0       0       0       0
 10211 ;;      Temps:          2       0       0       0       0       0
 10212 ;;      Totals:         9       0       0       0       0       0
 10213 ;;Total ram usage:        9 bytes
 10214 ;; Hardware stack levels used: 1
 10215 ;; This function calls:
 10216 ;;		Nothing
 10217 ;; This function is called by:
 10218 ;;		___flmul
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222     0AAA                     __Umul8_16:	
 10223                           ;psect for function __Umul8_16
 10224                           
 10225                           
 10226                           ;incstack = 0
 10227                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10228                           ;__Umul8_16@multiplier stored from wreg
 10229     0AAA  00F8               	movwf	__Umul8_16@multiplier
 10230     0AAB                     i1l3243:
 10231     0AAB  01F4               	clrf	__Umul8_16@product
 10232     0AAC  01F5               	clrf	__Umul8_16@product+1
 10233     0AAD                     i1l3245:
 10234     0AAD  0870               	movf	__Umul8_16@multiplicand,w
 10235     0AAE  00F2               	movwf	??__Umul8_16
 10236     0AAF  01F3               	clrf	??__Umul8_16+1
 10237     0AB0  0872               	movf	??__Umul8_16,w
 10238     0AB1  00F6               	movwf	__Umul8_16@word_mpld
 10239     0AB2  0873               	movf	??__Umul8_16+1,w
 10240     0AB3  00F7               	movwf	__Umul8_16@word_mpld+1
 10241     0AB4                     i1l3247:
 10242     0AB4  1C78               	btfss	__Umul8_16@multiplier,0
 10243     0AB5  2AB7               	goto	u197_21
 10244     0AB6  2AB8               	goto	u197_20
 10245     0AB7                     u197_21:
 10246     0AB7  2ABC               	goto	i1l1536
 10247     0AB8                     u197_20:
 10248     0AB8                     i1l3249:
 10249     0AB8  0876               	movf	__Umul8_16@word_mpld,w
 10250     0AB9  07F4               	addwf	__Umul8_16@product,f
 10251     0ABA  0877               	movf	__Umul8_16@word_mpld+1,w
 10252     0ABB  3DF5               	addwfc	__Umul8_16@product+1,f
 10253     0ABC                     i1l1536:
 10254     0ABC  3001               	movlw	1
 10255     0ABD                     u198_25:
 10256     0ABD  35F6               	lslf	__Umul8_16@word_mpld,f
 10257     0ABE  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10258     0ABF  0B89               	decfsz	9,f
 10259     0AC0  2ABD               	goto	u198_25
 10260     0AC1  1003               	clrc
 10261     0AC2  0CF8               	rrf	__Umul8_16@multiplier,f
 10262     0AC3                     i1l3251:
 10263     0AC3  0878               	movf	__Umul8_16@multiplier,w
 10264     0AC4  1D03               	btfss	3,2
 10265     0AC5  2AC7               	goto	u199_21
 10266     0AC6  2AC8               	goto	u199_20
 10267     0AC7                     u199_21:
 10268     0AC7  2AB4               	goto	i1l3247
 10269     0AC8                     u199_20:
 10270     0AC8                     i1l3253:
 10271     0AC8  0875               	movf	__Umul8_16@product+1,w
 10272     0AC9  00F1               	movwf	?__Umul8_16+1
 10273     0ACA  0874               	movf	__Umul8_16@product,w
 10274     0ACB  00F0               	movwf	?__Umul8_16
 10275     0ACC                     i1l1538:
 10276     0ACC  0008               	return
 10277     0ACD                     __end_of__Umul8_16:
 10278                           
 10279                           	psect	text53
 10280     04B7                     __ptext53:	
 10281 ;; *************** function ___fldiv *****************
 10282 ;; Defined at:
 10283 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;  a               4    6[BANK0 ] unsigned int 
 10286 ;;  b               4   10[BANK0 ] unsigned int 
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;  grs             4   26[BANK0 ] unsigned long 
 10289 ;;  rem             4   19[BANK0 ] unsigned long 
 10290 ;;  new_exp         2   24[BANK0 ] int 
 10291 ;;  aexp            1   31[BANK0 ] unsigned char 
 10292 ;;  bexp            1   30[BANK0 ] unsigned char 
 10293 ;;  sign            1   23[BANK0 ] unsigned char 
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  4    6[BANK0 ] unsigned char 
 10296 ;; Registers used:
 10297 ;;		wreg, status,2, status,0
 10298 ;; Tracked objects:
 10299 ;;		On entry : 0/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10303 ;;      Params:         0       8       0       0       0       0
 10304 ;;      Locals:         0      13       0       0       0       0
 10305 ;;      Temps:          0       5       0       0       0       0
 10306 ;;      Totals:         0      26       0       0       0       0
 10307 ;;Total ram usage:       26 bytes
 10308 ;; Hardware stack levels used: 1
 10309 ;; This function calls:
 10310 ;;		Nothing
 10311 ;; This function is called by:
 10312 ;;		_sendInfo
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316     04B7                     ___fldiv:	
 10317                           ;psect for function ___fldiv
 10318                           
 10319     04B7                     i1l3355:	
 10320                           ;incstack = 0
 10321                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10322                           
 10323     04B7  0020               	movlb	0	; select bank0
 10324     04B8  082D               	movf	___fldiv@b+3,w
 10325     04B9  3980               	andlw	128
 10326     04BA  00B7               	movwf	___fldiv@sign
 10327     04BB                     i1l3357:
 10328     04BB  352D               	lslf	___fldiv@b+3,w
 10329     04BC  00BE               	movwf	___fldiv@bexp
 10330     04BD                     i1l3359:
 10331     04BD  1FAC               	btfss	___fldiv@b+2,7
 10332     04BE  2CC0               	goto	u223_21
 10333     04BF  2CC1               	goto	u223_20
 10334     04C0                     u223_21:
 10335     04C0  2CC2               	goto	i1l3363
 10336     04C1                     u223_20:
 10337     04C1                     i1l3361:
 10338     04C1  143E               	bsf	___fldiv@bexp,0
 10339     04C2                     i1l3363:
 10340     04C2  083E               	movf	___fldiv@bexp,w
 10341     04C3  1903               	btfsc	3,2
 10342     04C4  2CC6               	goto	u224_21
 10343     04C5  2CC7               	goto	u224_20
 10344     04C6                     u224_21:
 10345     04C6  2CD7               	goto	i1l3373
 10346     04C7                     u224_20:
 10347     04C7                     i1l3365:
 10348     04C7  0A3E               	incf	___fldiv@bexp,w
 10349     04C8  1D03               	btfss	3,2
 10350     04C9  2CCB               	goto	u225_21
 10351     04CA  2CCC               	goto	u225_20
 10352     04CB                     u225_21:
 10353     04CB  2CD4               	goto	i1l3369
 10354     04CC                     u225_20:
 10355     04CC                     i1l3367:
 10356     04CC  3000               	movlw	0
 10357     04CD  00AD               	movwf	___fldiv@b+3
 10358     04CE  3000               	movlw	0
 10359     04CF  00AC               	movwf	___fldiv@b+2
 10360     04D0  3000               	movlw	0
 10361     04D1  00AB               	movwf	___fldiv@b+1
 10362     04D2  3000               	movlw	0
 10363     04D3  00AA               	movwf	___fldiv@b
 10364     04D4                     i1l3369:
 10365     04D4  17AC               	bsf	___fldiv@b+2,7
 10366     04D5                     i1l3371:
 10367     04D5  01AD               	clrf	___fldiv@b+3
 10368     04D6  2CDF               	goto	i1l3375
 10369     04D7                     i1l3373:
 10370     04D7  3000               	movlw	0
 10371     04D8  00AD               	movwf	___fldiv@b+3
 10372     04D9  3000               	movlw	0
 10373     04DA  00AC               	movwf	___fldiv@b+2
 10374     04DB  3000               	movlw	0
 10375     04DC  00AB               	movwf	___fldiv@b+1
 10376     04DD  3000               	movlw	0
 10377     04DE  00AA               	movwf	___fldiv@b
 10378     04DF                     i1l3375:
 10379     04DF  0829               	movf	___fldiv@a+3,w
 10380     04E0  3980               	andlw	128
 10381     04E1  00AE               	movwf	??___fldiv
 10382     04E2  082E               	movf	??___fldiv,w
 10383     04E3  06B7               	xorwf	___fldiv@sign,f
 10384     04E4                     i1l3377:
 10385     04E4  3529               	lslf	___fldiv@a+3,w
 10386     04E5  00BF               	movwf	___fldiv@aexp
 10387     04E6                     i1l3379:
 10388     04E6  1FA8               	btfss	___fldiv@a+2,7
 10389     04E7  2CE9               	goto	u226_21
 10390     04E8  2CEA               	goto	u226_20
 10391     04E9                     u226_21:
 10392     04E9  2CEB               	goto	i1l3383
 10393     04EA                     u226_20:
 10394     04EA                     i1l3381:
 10395     04EA  143F               	bsf	___fldiv@aexp,0
 10396     04EB                     i1l3383:
 10397     04EB  083F               	movf	___fldiv@aexp,w
 10398     04EC  1903               	btfsc	3,2
 10399     04ED  2CEF               	goto	u227_21
 10400     04EE  2CF0               	goto	u227_20
 10401     04EF                     u227_21:
 10402     04EF  2D00               	goto	i1l3393
 10403     04F0                     u227_20:
 10404     04F0                     i1l3385:
 10405     04F0  0A3F               	incf	___fldiv@aexp,w
 10406     04F1  1D03               	btfss	3,2
 10407     04F2  2CF4               	goto	u228_21
 10408     04F3  2CF5               	goto	u228_20
 10409     04F4                     u228_21:
 10410     04F4  2CFD               	goto	i1l3389
 10411     04F5                     u228_20:
 10412     04F5                     i1l3387:
 10413     04F5  3000               	movlw	0
 10414     04F6  00A9               	movwf	___fldiv@a+3
 10415     04F7  3000               	movlw	0
 10416     04F8  00A8               	movwf	___fldiv@a+2
 10417     04F9  3000               	movlw	0
 10418     04FA  00A7               	movwf	___fldiv@a+1
 10419     04FB  3000               	movlw	0
 10420     04FC  00A6               	movwf	___fldiv@a
 10421     04FD                     i1l3389:
 10422     04FD  17A8               	bsf	___fldiv@a+2,7
 10423     04FE                     i1l3391:
 10424     04FE  01A9               	clrf	___fldiv@a+3
 10425     04FF  2D08               	goto	i1l1477
 10426     0500                     i1l3393:
 10427     0500  3000               	movlw	0
 10428     0501  00A9               	movwf	___fldiv@a+3
 10429     0502  3000               	movlw	0
 10430     0503  00A8               	movwf	___fldiv@a+2
 10431     0504  3000               	movlw	0
 10432     0505  00A7               	movwf	___fldiv@a+1
 10433     0506  3000               	movlw	0
 10434     0507  00A6               	movwf	___fldiv@a
 10435     0508                     i1l1477:
 10436     0508  0829               	movf	___fldiv@a+3,w
 10437     0509  0428               	iorwf	___fldiv@a+2,w
 10438     050A  0427               	iorwf	___fldiv@a+1,w
 10439     050B  0426               	iorwf	___fldiv@a,w
 10440     050C  1D03               	skipz
 10441     050D  2D0F               	goto	u229_21
 10442     050E  2D10               	goto	u229_20
 10443     050F                     u229_21:
 10444     050F  2D29               	goto	i1l3403
 10445     0510                     u229_20:
 10446     0510                     i1l3395:
 10447     0510  3000               	movlw	0
 10448     0511  00AD               	movwf	___fldiv@b+3
 10449     0512  3000               	movlw	0
 10450     0513  00AC               	movwf	___fldiv@b+2
 10451     0514  3000               	movlw	0
 10452     0515  00AB               	movwf	___fldiv@b+1
 10453     0516  3000               	movlw	0
 10454     0517  00AA               	movwf	___fldiv@b
 10455     0518  3080               	movlw	128
 10456     0519  04AC               	iorwf	___fldiv@b+2,f
 10457     051A  307F               	movlw	127
 10458     051B  04AD               	iorwf	___fldiv@b+3,f
 10459     051C                     i1l3397:
 10460     051C  0837               	movf	___fldiv@sign,w
 10461     051D  00AE               	movwf	??___fldiv
 10462     051E  082E               	movf	??___fldiv,w
 10463     051F  04AD               	iorwf	___fldiv@b+3,f
 10464     0520                     i1l3399:
 10465     0520  082D               	movf	___fldiv@b+3,w
 10466     0521  00A9               	movwf	?___fldiv+3
 10467     0522  082C               	movf	___fldiv@b+2,w
 10468     0523  00A8               	movwf	?___fldiv+2
 10469     0524  082B               	movf	___fldiv@b+1,w
 10470     0525  00A7               	movwf	?___fldiv+1
 10471     0526  082A               	movf	___fldiv@b,w
 10472     0527  00A6               	movwf	?___fldiv
 10473     0528  2E60               	goto	i1l1479
 10474     0529                     i1l3403:
 10475     0529  083E               	movf	___fldiv@bexp,w
 10476     052A  1D03               	btfss	3,2
 10477     052B  2D2D               	goto	u230_21
 10478     052C  2D2E               	goto	u230_20
 10479     052D                     u230_21:
 10480     052D  2D37               	goto	i1l3409
 10481     052E                     u230_20:
 10482     052E                     i1l3405:
 10483     052E  3000               	movlw	0
 10484     052F  00A9               	movwf	?___fldiv+3
 10485     0530  3000               	movlw	0
 10486     0531  00A8               	movwf	?___fldiv+2
 10487     0532  3000               	movlw	0
 10488     0533  00A7               	movwf	?___fldiv+1
 10489     0534  3000               	movlw	0
 10490     0535  00A6               	movwf	?___fldiv
 10491     0536  2E60               	goto	i1l1479
 10492     0537                     i1l3409:
 10493     0537  083E               	movf	___fldiv@bexp,w
 10494     0538  00AE               	movwf	??___fldiv
 10495     0539  01AF               	clrf	??___fldiv+1
 10496     053A  082F               	movf	??___fldiv+1,w
 10497     053B  00B1               	movwf	??___fldiv+3
 10498     053C  083F               	movf	___fldiv@aexp,w
 10499     053D  022E               	subwf	??___fldiv,w
 10500     053E  00B0               	movwf	??___fldiv+2
 10501     053F  1C03               	skipc
 10502     0540  03B1               	decf	??___fldiv+3,f
 10503     0541  0830               	movf	??___fldiv+2,w
 10504     0542  3E7F               	addlw	127
 10505     0543  00B8               	movwf	___fldiv@new_exp
 10506     0544  3000               	movlw	0
 10507     0545  3D31               	addwfc	??___fldiv+3,w
 10508     0546  00B9               	movwf	___fldiv@new_exp+1
 10509     0547                     i1l3411:
 10510     0547  082D               	movf	___fldiv@b+3,w
 10511     0548  00B6               	movwf	___fldiv@rem+3
 10512     0549  082C               	movf	___fldiv@b+2,w
 10513     054A  00B5               	movwf	___fldiv@rem+2
 10514     054B  082B               	movf	___fldiv@b+1,w
 10515     054C  00B4               	movwf	___fldiv@rem+1
 10516     054D  082A               	movf	___fldiv@b,w
 10517     054E  00B3               	movwf	___fldiv@rem
 10518     054F                     i1l3413:
 10519     054F  3000               	movlw	0
 10520     0550  00AD               	movwf	___fldiv@b+3
 10521     0551  3000               	movlw	0
 10522     0552  00AC               	movwf	___fldiv@b+2
 10523     0553  3000               	movlw	0
 10524     0554  00AB               	movwf	___fldiv@b+1
 10525     0555  3000               	movlw	0
 10526     0556  00AA               	movwf	___fldiv@b
 10527     0557                     i1l3415:
 10528     0557  3000               	movlw	0
 10529     0558  00BD               	movwf	___fldiv@grs+3
 10530     0559  3000               	movlw	0
 10531     055A  00BC               	movwf	___fldiv@grs+2
 10532     055B  3000               	movlw	0
 10533     055C  00BB               	movwf	___fldiv@grs+1
 10534     055D  3000               	movlw	0
 10535     055E  00BA               	movwf	___fldiv@grs
 10536     055F                     i1l3417:
 10537     055F  01BF               	clrf	___fldiv@aexp
 10538     0560  2D9F               	goto	i1l3437
 10539     0561                     i1l3419:
 10540     0561  083F               	movf	___fldiv@aexp,w
 10541     0562  1903               	btfsc	3,2
 10542     0563  2D65               	goto	u231_21
 10543     0564  2D66               	goto	u231_20
 10544     0565                     u231_21:
 10545     0565  2D80               	goto	i1l3429
 10546     0566                     u231_20:
 10547     0566                     i1l3421:
 10548     0566  3001               	movlw	1
 10549     0567                     u232_25:
 10550     0567  35B3               	lslf	___fldiv@rem,f
 10551     0568  0DB4               	rlf	___fldiv@rem+1,f
 10552     0569  0DB5               	rlf	___fldiv@rem+2,f
 10553     056A  0DB6               	rlf	___fldiv@rem+3,f
 10554     056B  0B89               	decfsz	9,f
 10555     056C  2D67               	goto	u232_25
 10556     056D  3001               	movlw	1
 10557     056E                     u233_25:
 10558     056E  35AA               	lslf	___fldiv@b,f
 10559     056F  0DAB               	rlf	___fldiv@b+1,f
 10560     0570  0DAC               	rlf	___fldiv@b+2,f
 10561     0571  0DAD               	rlf	___fldiv@b+3,f
 10562     0572  0B89               	decfsz	9,f
 10563     0573  2D6E               	goto	u233_25
 10564     0574                     i1l3423:
 10565     0574  1FBD               	btfss	___fldiv@grs+3,7
 10566     0575  2D77               	goto	u234_21
 10567     0576  2D78               	goto	u234_20
 10568     0577                     u234_21:
 10569     0577  2D79               	goto	i1l3427
 10570     0578                     u234_20:
 10571     0578                     i1l3425:
 10572     0578  142A               	bsf	___fldiv@b,0
 10573     0579                     i1l3427:
 10574     0579  3001               	movlw	1
 10575     057A                     u235_25:
 10576     057A  35BA               	lslf	___fldiv@grs,f
 10577     057B  0DBB               	rlf	___fldiv@grs+1,f
 10578     057C  0DBC               	rlf	___fldiv@grs+2,f
 10579     057D  0DBD               	rlf	___fldiv@grs+3,f
 10580     057E  0B89               	decfsz	9,f
 10581     057F  2D7A               	goto	u235_25
 10582     0580                     i1l3429:
 10583     0580  0829               	movf	___fldiv@a+3,w
 10584     0581  0236               	subwf	___fldiv@rem+3,w
 10585     0582  1D03               	skipz
 10586     0583  2D8E               	goto	u236_25
 10587     0584  0828               	movf	___fldiv@a+2,w
 10588     0585  0235               	subwf	___fldiv@rem+2,w
 10589     0586  1D03               	skipz
 10590     0587  2D8E               	goto	u236_25
 10591     0588  0827               	movf	___fldiv@a+1,w
 10592     0589  0234               	subwf	___fldiv@rem+1,w
 10593     058A  1D03               	skipz
 10594     058B  2D8E               	goto	u236_25
 10595     058C  0826               	movf	___fldiv@a,w
 10596     058D  0233               	subwf	___fldiv@rem,w
 10597     058E                     u236_25:
 10598     058E  1C03               	skipc
 10599     058F  2D91               	goto	u236_21
 10600     0590  2D92               	goto	u236_20
 10601     0591                     u236_21:
 10602     0591  2D9B               	goto	i1l3435
 10603     0592                     u236_20:
 10604     0592                     i1l3431:
 10605     0592  173D               	bsf	___fldiv@grs+3,6
 10606     0593                     i1l3433:
 10607     0593  0826               	movf	___fldiv@a,w
 10608     0594  02B3               	subwf	___fldiv@rem,f
 10609     0595  0827               	movf	___fldiv@a+1,w
 10610     0596  3BB4               	subwfb	___fldiv@rem+1,f
 10611     0597  0828               	movf	___fldiv@a+2,w
 10612     0598  3BB5               	subwfb	___fldiv@rem+2,f
 10613     0599  0829               	movf	___fldiv@a+3,w
 10614     059A  3BB6               	subwfb	___fldiv@rem+3,f
 10615     059B                     i1l3435:
 10616     059B  3001               	movlw	1
 10617     059C  00AE               	movwf	??___fldiv
 10618     059D  082E               	movf	??___fldiv,w
 10619     059E  07BF               	addwf	___fldiv@aexp,f
 10620     059F                     i1l3437:
 10621     059F  301A               	movlw	26
 10622     05A0  023F               	subwf	___fldiv@aexp,w
 10623     05A1  1C03               	skipc
 10624     05A2  2DA4               	goto	u237_21
 10625     05A3  2DA5               	goto	u237_20
 10626     05A4                     u237_21:
 10627     05A4  2D61               	goto	i1l3419
 10628     05A5                     u237_20:
 10629     05A5                     i1l3439:
 10630     05A5  0836               	movf	___fldiv@rem+3,w
 10631     05A6  0435               	iorwf	___fldiv@rem+2,w
 10632     05A7  0434               	iorwf	___fldiv@rem+1,w
 10633     05A8  0433               	iorwf	___fldiv@rem,w
 10634     05A9  1903               	skipnz
 10635     05AA  2DAC               	goto	u238_21
 10636     05AB  2DAD               	goto	u238_20
 10637     05AC                     u238_21:
 10638     05AC  2DC6               	goto	i1l3453
 10639     05AD                     u238_20:
 10640     05AD                     i1l3441:
 10641     05AD  143A               	bsf	___fldiv@grs,0
 10642     05AE  2DC6               	goto	i1l3453
 10643     05AF                     i1l3443:
 10644     05AF  3001               	movlw	1
 10645     05B0                     u239_25:
 10646     05B0  35AA               	lslf	___fldiv@b,f
 10647     05B1  0DAB               	rlf	___fldiv@b+1,f
 10648     05B2  0DAC               	rlf	___fldiv@b+2,f
 10649     05B3  0DAD               	rlf	___fldiv@b+3,f
 10650     05B4  0B89               	decfsz	9,f
 10651     05B5  2DB0               	goto	u239_25
 10652     05B6                     i1l3445:
 10653     05B6  1FBD               	btfss	___fldiv@grs+3,7
 10654     05B7  2DB9               	goto	u240_21
 10655     05B8  2DBA               	goto	u240_20
 10656     05B9                     u240_21:
 10657     05B9  2DBB               	goto	i1l3449
 10658     05BA                     u240_20:
 10659     05BA                     i1l3447:
 10660     05BA  142A               	bsf	___fldiv@b,0
 10661     05BB                     i1l3449:
 10662     05BB  3001               	movlw	1
 10663     05BC                     u241_25:
 10664     05BC  35BA               	lslf	___fldiv@grs,f
 10665     05BD  0DBB               	rlf	___fldiv@grs+1,f
 10666     05BE  0DBC               	rlf	___fldiv@grs+2,f
 10667     05BF  0DBD               	rlf	___fldiv@grs+3,f
 10668     05C0  0B89               	decfsz	9,f
 10669     05C1  2DBC               	goto	u241_25
 10670     05C2                     i1l3451:
 10671     05C2  30FF               	movlw	255
 10672     05C3  07B8               	addwf	___fldiv@new_exp,f
 10673     05C4  30FF               	movlw	255
 10674     05C5  3DB9               	addwfc	___fldiv@new_exp+1,f
 10675     05C6                     i1l3453:
 10676     05C6  1FAC               	btfss	___fldiv@b+2,7
 10677     05C7  2DC9               	goto	u242_21
 10678     05C8  2DCA               	goto	u242_20
 10679     05C9                     u242_21:
 10680     05C9  2DAF               	goto	i1l3443
 10681     05CA                     u242_20:
 10682     05CA                     i1l3455:
 10683     05CA  01BF               	clrf	___fldiv@aexp
 10684     05CB                     i1l3457:
 10685     05CB  1FBD               	btfss	___fldiv@grs+3,7
 10686     05CC  2DCE               	goto	u243_21
 10687     05CD  2DCF               	goto	u243_20
 10688     05CE                     u243_21:
 10689     05CE  2DEB               	goto	i1l3465
 10690     05CF                     u243_20:
 10691     05CF                     i1l3459:
 10692     05CF  30FF               	movlw	255
 10693     05D0  053A               	andwf	___fldiv@grs,w
 10694     05D1  00AE               	movwf	??___fldiv
 10695     05D2  30FF               	movlw	255
 10696     05D3  053B               	andwf	___fldiv@grs+1,w
 10697     05D4  00AF               	movwf	??___fldiv+1
 10698     05D5  30FF               	movlw	255
 10699     05D6  053C               	andwf	___fldiv@grs+2,w
 10700     05D7  00B0               	movwf	??___fldiv+2
 10701     05D8  307F               	movlw	127
 10702     05D9  053D               	andwf	___fldiv@grs+3,w
 10703     05DA  00B1               	movwf	??___fldiv+3
 10704     05DB  0831               	movf	??___fldiv+3,w
 10705     05DC  0430               	iorwf	??___fldiv+2,w
 10706     05DD  042F               	iorwf	??___fldiv+1,w
 10707     05DE  042E               	iorwf	??___fldiv,w
 10708     05DF  1903               	skipnz
 10709     05E0  2DE2               	goto	u244_21
 10710     05E1  2DE3               	goto	u244_20
 10711     05E2                     u244_21:
 10712     05E2  2DE6               	goto	i1l1493
 10713     05E3                     u244_20:
 10714     05E3                     i1l3461:
 10715     05E3  01BF               	clrf	___fldiv@aexp
 10716     05E4  0ABF               	incf	___fldiv@aexp,f
 10717     05E5  2DEB               	goto	i1l3465
 10718     05E6                     i1l1493:
 10719     05E6  1C2A               	btfss	___fldiv@b,0
 10720     05E7  2DE9               	goto	u245_21
 10721     05E8  2DEA               	goto	u245_20
 10722     05E9                     u245_21:
 10723     05E9  2DEB               	goto	i1l3465
 10724     05EA                     u245_20:
 10725     05EA  2DE3               	goto	i1l3461
 10726     05EB                     i1l3465:
 10727     05EB  083F               	movf	___fldiv@aexp,w
 10728     05EC  1903               	btfsc	3,2
 10729     05ED  2DEF               	goto	u246_21
 10730     05EE  2DF0               	goto	u246_20
 10731     05EF                     u246_21:
 10732     05EF  2E18               	goto	i1l3475
 10733     05F0                     u246_20:
 10734     05F0                     i1l3467:
 10735     05F0  3001               	movlw	1
 10736     05F1  07AA               	addwf	___fldiv@b,f
 10737     05F2  3000               	movlw	0
 10738     05F3  3DAB               	addwfc	___fldiv@b+1,f
 10739     05F4  3000               	movlw	0
 10740     05F5  3DAC               	addwfc	___fldiv@b+2,f
 10741     05F6  3000               	movlw	0
 10742     05F7  3DAD               	addwfc	___fldiv@b+3,f
 10743     05F8                     i1l3469:
 10744     05F8  1C2D               	btfss	___fldiv@b+3,0
 10745     05F9  2DFB               	goto	u247_21
 10746     05FA  2DFC               	goto	u247_20
 10747     05FB                     u247_21:
 10748     05FB  2E18               	goto	i1l3475
 10749     05FC                     u247_20:
 10750     05FC                     i1l3471:
 10751     05FC  082A               	movf	___fldiv@b,w
 10752     05FD  00AE               	movwf	??___fldiv
 10753     05FE  082B               	movf	___fldiv@b+1,w
 10754     05FF  00AF               	movwf	??___fldiv+1
 10755     0600  082C               	movf	___fldiv@b+2,w
 10756     0601  00B0               	movwf	??___fldiv+2
 10757     0602  082D               	movf	___fldiv@b+3,w
 10758     0603  00B1               	movwf	??___fldiv+3
 10759     0604  3001               	movlw	1
 10760     0605  00B2               	movwf	??___fldiv+4
 10761     0606                     u248_25:
 10762     0606  37B1               	asrf	??___fldiv+3,f
 10763     0607  0CB0               	rrf	??___fldiv+2,f
 10764     0608  0CAF               	rrf	??___fldiv+1,f
 10765     0609  0CAE               	rrf	??___fldiv,f
 10766     060A                     u248_20:
 10767     060A  0BB2               	decfsz	??___fldiv+4,f
 10768     060B  2E06               	goto	u248_25
 10769     060C  0831               	movf	??___fldiv+3,w
 10770     060D  00AD               	movwf	___fldiv@b+3
 10771     060E  0830               	movf	??___fldiv+2,w
 10772     060F  00AC               	movwf	___fldiv@b+2
 10773     0610  082F               	movf	??___fldiv+1,w
 10774     0611  00AB               	movwf	___fldiv@b+1
 10775     0612  082E               	movf	??___fldiv,w
 10776     0613  00AA               	movwf	___fldiv@b
 10777     0614                     i1l3473:
 10778     0614  3001               	movlw	1
 10779     0615  07B8               	addwf	___fldiv@new_exp,f
 10780     0616  3000               	movlw	0
 10781     0617  3DB9               	addwfc	___fldiv@new_exp+1,f
 10782     0618                     i1l3475:
 10783     0618  0839               	movf	___fldiv@new_exp+1,w
 10784     0619  3A80               	xorlw	128
 10785     061A  00AE               	movwf	??___fldiv
 10786     061B  3080               	movlw	128
 10787     061C  022E               	subwf	??___fldiv,w
 10788     061D  1D03               	skipz
 10789     061E  2E21               	goto	u249_25
 10790     061F  30FF               	movlw	255
 10791     0620  0238               	subwf	___fldiv@new_exp,w
 10792     0621                     u249_25:
 10793     0621  1C03               	skipc
 10794     0622  2E24               	goto	u249_21
 10795     0623  2E25               	goto	u249_20
 10796     0624                     u249_21:
 10797     0624  2E32               	goto	i1l1498
 10798     0625                     u249_20:
 10799     0625                     i1l3477:
 10800     0625  30FF               	movlw	255
 10801     0626  0020               	movlb	0	; select bank0
 10802     0627  00B8               	movwf	___fldiv@new_exp
 10803     0628  3000               	movlw	0
 10804     0629  00B9               	movwf	___fldiv@new_exp+1
 10805     062A  3000               	movlw	0
 10806     062B  00AD               	movwf	___fldiv@b+3
 10807     062C  3000               	movlw	0
 10808     062D  00AC               	movwf	___fldiv@b+2
 10809     062E  3000               	movlw	0
 10810     062F  00AB               	movwf	___fldiv@b+1
 10811     0630  3000               	movlw	0
 10812     0631  00AA               	movwf	___fldiv@b
 10813     0632                     i1l1498:
 10814     0632  0020               	movlb	0	; select bank0
 10815     0633  0839               	movf	___fldiv@new_exp+1,w
 10816     0634  3A80               	xorlw	128
 10817     0635  00AE               	movwf	??___fldiv
 10818     0636  3080               	movlw	128
 10819     0637  022E               	subwf	??___fldiv,w
 10820     0638  1D03               	skipz
 10821     0639  2E3C               	goto	u250_25
 10822     063A  3001               	movlw	1
 10823     063B  0238               	subwf	___fldiv@new_exp,w
 10824     063C                     u250_25:
 10825     063C  1803               	skipnc
 10826     063D  2E3F               	goto	u250_21
 10827     063E  2E40               	goto	u250_20
 10828     063F                     u250_21:
 10829     063F  2E4C               	goto	i1l1499
 10830     0640                     u250_20:
 10831     0640                     i1l3479:
 10832     0640  0020               	movlb	0	; select bank0
 10833     0641  01B8               	clrf	___fldiv@new_exp
 10834     0642  01B9               	clrf	___fldiv@new_exp+1
 10835     0643                     i1l3481:
 10836     0643  3000               	movlw	0
 10837     0644  00AD               	movwf	___fldiv@b+3
 10838     0645  3000               	movlw	0
 10839     0646  00AC               	movwf	___fldiv@b+2
 10840     0647  3000               	movlw	0
 10841     0648  00AB               	movwf	___fldiv@b+1
 10842     0649  3000               	movlw	0
 10843     064A  00AA               	movwf	___fldiv@b
 10844     064B                     i1l3483:
 10845     064B  01B7               	clrf	___fldiv@sign
 10846     064C                     i1l1499:
 10847     064C  0020               	movlb	0	; select bank0
 10848     064D  0838               	movf	___fldiv@new_exp,w
 10849     064E  00BE               	movwf	___fldiv@bexp
 10850     064F                     i1l3485:
 10851     064F  1C3E               	btfss	___fldiv@bexp,0
 10852     0650  2E52               	goto	u251_21
 10853     0651  2E53               	goto	u251_20
 10854     0652                     u251_21:
 10855     0652  2E55               	goto	i1l3489
 10856     0653                     u251_20:
 10857     0653                     i1l3487:
 10858     0653  17AC               	bsf	___fldiv@b+2,7
 10859     0654  2E59               	goto	i1l1501
 10860     0655                     i1l3489:
 10861     0655  307F               	movlw	127
 10862     0656  00AE               	movwf	??___fldiv
 10863     0657  082E               	movf	??___fldiv,w
 10864     0658  05AC               	andwf	___fldiv@b+2,f
 10865     0659                     i1l1501:
 10866     0659  363E               	lsrf	___fldiv@bexp,w
 10867     065A  00AD               	movwf	___fldiv@b+3
 10868     065B  0837               	movf	___fldiv@sign,w
 10869     065C  00AE               	movwf	??___fldiv
 10870     065D  082E               	movf	??___fldiv,w
 10871     065E  04AD               	iorwf	___fldiv@b+3,f
 10872     065F  2D20               	goto	i1l3399
 10873     0660                     i1l1479:
 10874     0660  0008               	return
 10875     0661                     __end_of___fldiv:
 10876                           
 10877                           	psect	text54
 10878     08E4                     __ptext54:	
 10879 ;; *************** function _EUSART_Write *****************
 10880 ;; Defined at:
 10881 ;;		line 132 in file "mcc_generated_files/eusart.c"
 10882 ;; Parameters:    Size  Location     Type
 10883 ;;  txData          1    wreg     unsigned char 
 10884 ;; Auto vars:     Size  Location     Type
 10885 ;;  txData          1    0[COMMON] unsigned char 
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      void 
 10888 ;; Registers used:
 10889 ;;		wreg
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10895 ;;      Params:         0       0       0       0       0       0
 10896 ;;      Locals:         1       0       0       0       0       0
 10897 ;;      Temps:          0       0       0       0       0       0
 10898 ;;      Totals:         1       0       0       0       0       0
 10899 ;;Total ram usage:        1 bytes
 10900 ;; Hardware stack levels used: 1
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_sendInfo
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908     08E4                     _EUSART_Write:	
 10909                           ;psect for function _EUSART_Write
 10910                           
 10911                           
 10912                           ;incstack = 0
 10913                           ; Regs used in _EUSART_Write: [wreg]
 10914                           ;EUSART_Write@txData stored from wreg
 10915     08E4  00F0               	movwf	EUSART_Write@txData
 10916     08E5                     i1l3275:
 10917     08E5                     i1l392:	
 10918                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10919                           
 10920                           
 10921                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 10922     08E5  0020               	movlb	0	; select bank0
 10923     08E6  1E11               	btfss	17,4	;volatile
 10924     08E7  28E9               	goto	u202_21
 10925     08E8  28EA               	goto	u202_20
 10926     08E9                     u202_21:
 10927     08E9  28E5               	goto	i1l392
 10928     08EA                     u202_20:
 10929     08EA                     i1l3277:
 10930                           
 10931                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 10932     08EA  0870               	movf	EUSART_Write@txData,w
 10933     08EB  0023               	movlb	3	; select bank3
 10934     08EC  009A               	movwf	26	;volatile
 10935     08ED                     i1l395:
 10936     08ED  0008               	return
 10937     08EE                     __end_of_EUSART_Write:
 10938                           
 10939                           	psect	text55
 10940     0A5A                     __ptext55:	
 10941 ;; *************** function _ADC_GetConversion *****************
 10942 ;; Defined at:
 10943 ;;		line 112 in file "mcc_generated_files/adc.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;  channel         1    wreg     enum E2485
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;  channel         1    3[COMMON] enum E2485
 10948 ;; Return value:  Size  Location     Type
 10949 ;;                  2    0[COMMON] unsigned short 
 10950 ;; Registers used:
 10951 ;;		wreg, status,2, status,0
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/0
 10954 ;;		On exit  : 0/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10957 ;;      Params:         2       0       0       0       0       0
 10958 ;;      Locals:         1       0       0       0       0       0
 10959 ;;      Temps:          1       0       0       0       0       0
 10960 ;;      Totals:         4       0       0       0       0       0
 10961 ;;Total ram usage:        4 bytes
 10962 ;; Hardware stack levels used: 1
 10963 ;; This function calls:
 10964 ;;		Nothing
 10965 ;; This function is called by:
 10966 ;;		_sendInfo
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970     0A5A                     _ADC_GetConversion:	
 10971                           ;psect for function _ADC_GetConversion
 10972                           
 10973                           
 10974                           ;incstack = 0
 10975                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10976                           ;ADC_GetConversion@channel stored from wreg
 10977     0A5A  00F3               	movwf	ADC_GetConversion@channel
 10978     0A5B                     i1l3263:
 10979                           
 10980                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 10981     0A5B  0873               	movf	ADC_GetConversion@channel,w
 10982     0A5C  00F2               	movwf	??_ADC_GetConversion
 10983     0A5D  0DF2               	rlf	??_ADC_GetConversion,f
 10984     0A5E  0DF2               	rlf	??_ADC_GetConversion,f
 10985     0A5F  0021               	movlb	1	; select bank1
 10986     0A60  081D               	movf	29,w	;volatile
 10987     0A61  0672               	xorwf	??_ADC_GetConversion,w
 10988     0A62  3983               	andlw	-125
 10989     0A63  0672               	xorwf	??_ADC_GetConversion,w
 10990     0A64  009D               	movwf	29	;volatile
 10991     0A65                     i1l3265:
 10992                           
 10993                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 10994     0A65  141D               	bsf	29,0	;volatile
 10995     0A66                     i1l3267:
 10996                           
 10997                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
 10998     0A66  3200               	nop2	;2 cycle nop
 10999     0A67  3200               	nop2	;2 cycle nop
 11000     0A68  0000               	nop
 11001     0A69                     i1l3269:
 11002                           
 11003                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
 11004     0A69  0021               	movlb	1	; select bank1
 11005     0A6A  149D               	bsf	29,1	;volatile
 11006     0A6B                     i1l309:	
 11007                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
 11008                           
 11009                           
 11010                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
 11011     0A6B  189D               	btfsc	29,1	;volatile
 11012     0A6C  2A6E               	goto	u201_21
 11013     0A6D  2A6F               	goto	u201_20
 11014     0A6E                     u201_21:
 11015     0A6E  2A6B               	goto	i1l309
 11016     0A6F                     u201_20:
 11017     0A6F                     i1l3271:
 11018                           
 11019                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11020     0A6F  081C               	movf	28,w	;volatile
 11021     0A70  00F1               	movwf	?_ADC_GetConversion+1
 11022     0A71  081B               	movf	27,w	;volatile
 11023     0A72  00F0               	movwf	?_ADC_GetConversion
 11024     0A73                     i1l312:
 11025     0A73  0008               	return
 11026     0A74                     __end_of_ADC_GetConversion:
 11027                           
 11028                           	psect	text56
 11029     0977                     __ptext56:	
 11030 ;; *************** function _PIN_MANAGER_IOC *****************
 11031 ;; Defined at:
 11032 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;		None
 11035 ;; Auto vars:     Size  Location     Type
 11036 ;;		None
 11037 ;; Return value:  Size  Location     Type
 11038 ;;                  1    wreg      void 
 11039 ;; Registers used:
 11040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11041 ;; Tracked objects:
 11042 ;;		On entry : 0/0
 11043 ;;		On exit  : 0/0
 11044 ;;		Unchanged: 0/0
 11045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11046 ;;      Params:         0       0       0       0       0       0
 11047 ;;      Locals:         0       0       0       0       0       0
 11048 ;;      Temps:          0       0       0       0       0       0
 11049 ;;      Totals:         0       0       0       0       0       0
 11050 ;;Total ram usage:        0 bytes
 11051 ;; Hardware stack levels used: 1
 11052 ;; Hardware stack levels required when called: 5
 11053 ;; This function calls:
 11054 ;;		_IOCBF0_ISR
 11055 ;;		_IOCBF3_ISR
 11056 ;; This function is called by:
 11057 ;;		_INTERRUPT_InterruptManager
 11058 ;; This function uses a non-reentrant model
 11059 ;;
 11060                           
 11061     0977                     _PIN_MANAGER_IOC:	
 11062                           ;psect for function _PIN_MANAGER_IOC
 11063                           
 11064     0977                     i1l4295:	
 11065                           ;incstack = 0
 11066                           ; Regs used in _PIN_MANAGER_IOC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11067                           
 11068                           
 11069                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
 11070     0977  0027               	movlb	7	; select bank7
 11071     0978  1C16               	btfss	22,0	;volatile
 11072     0979  297B               	goto	u334_21
 11073     097A  297C               	goto	u334_20
 11074     097B                     u334_21:
 11075     097B  297F               	goto	i1l4299
 11076     097C                     u334_20:
 11077     097C                     i1l4297:
 11078                           
 11079                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
 11080     097C  3189  2139  3189   	fcall	_IOCBF0_ISR
 11081     097F                     i1l4299:
 11082                           
 11083                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
 11084     097F  0027               	movlb	7	; select bank7
 11085     0980  1D96               	btfss	22,3	;volatile
 11086     0981  2983               	goto	u335_21
 11087     0982  2984               	goto	u335_20
 11088     0983                     u335_21:
 11089     0983  2987               	goto	i1l210
 11090     0984                     u335_20:
 11091     0984                     i1l4301:
 11092                           
 11093                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
 11094     0984  3189  2148  3189   	fcall	_IOCBF3_ISR
 11095     0987                     i1l210:
 11096     0987  0008               	return
 11097     0988                     __end_of_PIN_MANAGER_IOC:
 11098                           
 11099                           	psect	text57
 11100     0948                     __ptext57:	
 11101 ;; *************** function _IOCBF3_ISR *****************
 11102 ;; Defined at:
 11103 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11117 ;;      Params:         0       0       0       0       0       0
 11118 ;;      Locals:         0       0       0       0       0       0
 11119 ;;      Temps:          0       0       0       0       0       0
 11120 ;;      Totals:         0       0       0       0       0       0
 11121 ;;Total ram usage:        0 bytes
 11122 ;; Hardware stack levels used: 1
 11123 ;; Hardware stack levels required when called: 4
 11124 ;; This function calls:
 11125 ;;		NULL
 11126 ;;		_IOCBF3_DefaultInterruptHandler
 11127 ;;		_chegadaS2
 11128 ;; This function is called by:
 11129 ;;		_PIN_MANAGER_IOC
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133     0948                     _IOCBF3_ISR:	
 11134                           ;psect for function _IOCBF3_ISR
 11135                           
 11136     0948                     i1l4129:	
 11137                           ;incstack = 0
 11138                           ; Regs used in _IOCBF3_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11139                           
 11140                           
 11141                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
 11142     0948  0021               	movlb	1	; select bank1
 11143     0949  086B               	movf	_IOCBF3_InterruptHandler^(0+128),w
 11144     094A  046C               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 11145     094B  1903               	btfsc	3,2
 11146     094C  294E               	goto	u328_21
 11147     094D  294F               	goto	u328_20
 11148     094E                     u328_21:
 11149     094E  2954               	goto	i1l4133
 11150     094F                     u328_20:
 11151     094F                     i1l4131:
 11152                           
 11153                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
 11154     094F  086C               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 11155     0950  008A               	movwf	10
 11156     0951  086B               	movf	_IOCBF3_InterruptHandler^(0+128),w
 11157     0952  000A               	callw
 11158     0953  3189               	pagesel	$
 11159     0954                     i1l4133:
 11160                           
 11161                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
 11162     0954  0027               	movlb	7	; select bank7
 11163     0955  1196               	bcf	22,3	;volatile
 11164     0956                     i1l224:
 11165     0956  0008               	return
 11166     0957                     __end_of_IOCBF3_ISR:
 11167                           
 11168                           	psect	text58
 11169     085E                     __ptext58:	
 11170 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 11171 ;; Defined at:
 11172 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;		None
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		None
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11186 ;;      Params:         0       0       0       0       0       0
 11187 ;;      Locals:         0       0       0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0
 11189 ;;      Totals:         0       0       0       0       0       0
 11190 ;;Total ram usage:        0 bytes
 11191 ;; Hardware stack levels used: 1
 11192 ;; This function calls:
 11193 ;;		Nothing
 11194 ;; This function is called by:
 11195 ;;		_PIN_MANAGER_Initialize
 11196 ;;		_IOCBF3_ISR
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200     085E                     _IOCBF3_DefaultInterruptHandler:	
 11201                           ;psect for function _IOCBF3_DefaultInterruptHandler
 11202                           
 11203     085E                     i1l230:	
 11204                           ;incstack = 0
 11205                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
 11206                           
 11207     085E  0008               	return
 11208     085F                     __end_of_IOCBF3_DefaultInterruptHandler:
 11209                           
 11210                           	psect	text59
 11211     0C83                     __ptext59:	
 11212 ;; *************** function _chegadaS2 *****************
 11213 ;; Defined at:
 11214 ;;		line 313 in file "main.c"
 11215 ;; Parameters:    Size  Location     Type
 11216 ;;		None
 11217 ;; Auto vars:     Size  Location     Type
 11218 ;;		None
 11219 ;; Return value:  Size  Location     Type
 11220 ;;                  1    wreg      void 
 11221 ;; Registers used:
 11222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11223 ;; Tracked objects:
 11224 ;;		On entry : 0/0
 11225 ;;		On exit  : 0/0
 11226 ;;		Unchanged: 0/0
 11227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11228 ;;      Params:         0       0       0       0       0       0
 11229 ;;      Locals:         0       0       0       0       0       0
 11230 ;;      Temps:          0       0       0       0       0       0
 11231 ;;      Totals:         0       0       0       0       0       0
 11232 ;;Total ram usage:        0 bytes
 11233 ;; Hardware stack levels used: 1
 11234 ;; Hardware stack levels required when called: 3
 11235 ;; This function calls:
 11236 ;;		_PWM3_LoadDutyValue
 11237 ;;		i1_TMR4_StartTimer
 11238 ;;		i1_TMR4_WriteTimer
 11239 ;;		i1_matrixUpdate
 11240 ;; This function is called by:
 11241 ;;		_main
 11242 ;;		_IOCBF3_ISR
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246     0C83                     _chegadaS2:	
 11247                           ;psect for function _chegadaS2
 11248                           
 11249     0C83                     i1l3897:	
 11250                           ;incstack = 0
 11251                           ; Regs used in _chegadaS2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11252                           
 11253                           
 11254                           ;main.c: 315:     motor = 0;
 11255     0C83  0021               	movlb	1	; select bank1
 11256     0C84  01BF               	clrf	_motor^(0+128)
 11257     0C85                     i1l3899:
 11258                           
 11259                           ;main.c: 316:     andarAtual = 1;
 11260     0C85  01C1               	clrf	_andarAtual^(0+128)
 11261     0C86  0AC1               	incf	_andarAtual^(0+128),f
 11262     0C87                     i1l3901:
 11263                           
 11264                           ;main.c: 319:     if((((destinoSub & 0b00000010) == 2 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00000010) == 2) ) ){
 11265     0C87  1CBE               	btfss	_destinoSub^(0+128),1
 11266     0C88  2C8A               	goto	u305_21
 11267     0C89  2C8B               	goto	u305_20
 11268     0C8A                     u305_21:
 11269     0C8A  2C91               	goto	i1l3905
 11270     0C8B                     u305_20:
 11271     0C8B                     i1l3903:
 11272     0C8B  0020               	movlb	0	; select bank0
 11273     0C8C  086F               	movf	_subindo,w
 11274     0C8D  1D03               	btfss	3,2
 11275     0C8E  2C90               	goto	u306_21
 11276     0C8F  2C91               	goto	u306_20
 11277     0C90                     u306_21:
 11278     0C90  2C9C               	goto	i1l3909
 11279     0C91                     u306_20:
 11280     0C91                     i1l3905:
 11281     0C91  0020               	movlb	0	; select bank0
 11282     0C92  086F               	movf	_subindo,w
 11283     0C93  1D03               	btfss	3,2
 11284     0C94  2C96               	goto	u307_21
 11285     0C95  2C97               	goto	u307_20
 11286     0C96                     u307_21:
 11287     0C96  2CA9               	goto	i1l3913
 11288     0C97                     u307_20:
 11289     0C97                     i1l3907:
 11290     0C97  0021               	movlb	1	; select bank1
 11291     0C98  1CBD               	btfss	_destinoDesc^(0+128),1
 11292     0C99  2C9B               	goto	u308_21
 11293     0C9A  2C9C               	goto	u308_20
 11294     0C9B                     u308_21:
 11295     0C9B  2CA9               	goto	i1l3913
 11296     0C9C                     u308_20:
 11297     0C9C                     i1l3909:
 11298                           
 11299                           ;main.c: 320:         PWM3_LoadDutyValue(0);
 11300     0C9C  3000               	movlw	0
 11301     0C9D  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 11302     0C9E  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 11303     0C9F  3189  21F9  318C   	fcall	_PWM3_LoadDutyValue
 11304                           
 11305                           ;main.c: 321:         TMR4_WriteTimer(0);
 11306     0CA2  3000               	movlw	0
 11307     0CA3  3188  206F  318C   	fcall	i1_TMR4_WriteTimer
 11308     0CA6                     i1l3911:
 11309                           
 11310                           ;main.c: 322:         TMR4_StartTimer();
 11311     0CA6  3188  2061  318C   	fcall	i1_TMR4_StartTimer
 11312     0CA9                     i1l3913:
 11313                           
 11314                           ;main.c: 327:     MatrixLed[0] = 0b00000000;
 11315     0CA9  0021               	movlb	1	; select bank1
 11316     0CAA  01A0               	clrf	_MatrixLed^(0+128)
 11317     0CAB                     i1l3915:
 11318                           
 11319                           ;main.c: 328:     MatrixLed[1] = 0b01000001;
 11320     0CAB  3041               	movlw	65
 11321     0CAC  00A1               	movwf	(_MatrixLed^(0+128)+1)
 11322     0CAD                     i1l3917:
 11323                           
 11324                           ;main.c: 329:     MatrixLed[2] = 0b11111111;
 11325     0CAD  30FF               	movlw	255
 11326     0CAE  00A2               	movwf	(_MatrixLed^(0+128)+2)
 11327     0CAF                     i1l3919:
 11328                           
 11329                           ;main.c: 330:     MatrixLed[3] = 0b00000001;
 11330     0CAF  01A3               	clrf	(_MatrixLed^(0+128)+3)
 11331     0CB0  0AA3               	incf	(_MatrixLed^(0+128)+3),f
 11332     0CB1                     i1l3921:
 11333                           
 11334                           ;main.c: 331:     MatrixLed[4] = 0;
 11335     0CB1  01A4               	clrf	(_MatrixLed^(0+128)+4)
 11336                           
 11337                           ;main.c: 332:     MatrixLed[5] = 0b00100000;
 11338     0CB2  3020               	movlw	32
 11339     0CB3  00A5               	movwf	(_MatrixLed^(0+128)+5)
 11340                           
 11341                           ;main.c: 333:     MatrixLed[6] = 0b00100000;
 11342     0CB4  3020               	movlw	32
 11343     0CB5  00A6               	movwf	(_MatrixLed^(0+128)+6)
 11344                           
 11345                           ;main.c: 334:     MatrixLed[7] = 0b00100000;
 11346     0CB6  3020               	movlw	32
 11347     0CB7  00A7               	movwf	(_MatrixLed^(0+128)+7)
 11348     0CB8                     i1l3923:
 11349                           
 11350                           ;main.c: 335:     if(subindo){
 11351     0CB8  0020               	movlb	0	; select bank0
 11352     0CB9  086F               	movf	_subindo,w
 11353     0CBA  1903               	btfsc	3,2
 11354     0CBB  2CBD               	goto	u309_21
 11355     0CBC  2CBE               	goto	u309_20
 11356     0CBD                     u309_21:
 11357     0CBD  2CC5               	goto	i1l3929
 11358     0CBE                     u309_20:
 11359     0CBE                     i1l3925:
 11360                           
 11361                           ;main.c: 336:         destinoSub = destinoSub & 0b11111101;
 11362     0CBE  0021               	movlb	1	; select bank1
 11363     0CBF  083E               	movf	_destinoSub^(0+128),w
 11364     0CC0  39FD               	andlw	253
 11365     0CC1  00BE               	movwf	_destinoSub^(0+128)
 11366     0CC2                     i1l3927:
 11367                           
 11368                           ;main.c: 337:         mov = EmTrajeto;
 11369     0CC2  3002               	movlw	2
 11370     0CC3  00C9               	movwf	_mov^(0+128)
 11371                           
 11372                           ;main.c: 338:     }else{
 11373     0CC4  2CD0               	goto	i1l3935
 11374     0CC5                     i1l3929:
 11375                           
 11376                           ;main.c: 339:         destinoDesc = destinoDesc & 0b11111101;
 11377     0CC5  0021               	movlb	1	; select bank1
 11378     0CC6  083D               	movf	_destinoDesc^(0+128),w
 11379     0CC7  39FD               	andlw	253
 11380     0CC8  00BD               	movwf	_destinoDesc^(0+128)
 11381     0CC9                     i1l3931:
 11382                           
 11383                           ;main.c: 342:         if(destinoDesc == 0){
 11384     0CC9  083D               	movf	_destinoDesc^(0+128),w
 11385     0CCA  1D03               	btfss	3,2
 11386     0CCB  2CCD               	goto	u310_21
 11387     0CCC  2CCE               	goto	u310_20
 11388     0CCD                     u310_21:
 11389     0CCD  2CD0               	goto	i1l3935
 11390     0CCE                     u310_20:
 11391     0CCE                     i1l3933:
 11392                           
 11393                           ;main.c: 343:             mov = RetornaS0;
 11394     0CCE  3003               	movlw	3
 11395     0CCF  00C9               	movwf	_mov^(0+128)
 11396     0CD0                     i1l3935:
 11397                           
 11398                           ;main.c: 346:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 11399     0CD0  0827               	movf	(_MatrixLed^(0+128)+7),w
 11400     0CD1  043E               	iorwf	_destinoSub^(0+128),w
 11401     0CD2  00A7               	movwf	(_MatrixLed^(0+128)+7)
 11402     0CD3                     i1l3937:
 11403                           
 11404                           ;main.c: 347:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 11405     0CD3  0826               	movf	(_MatrixLed^(0+128)+6),w
 11406     0CD4  043D               	iorwf	_destinoDesc^(0+128),w
 11407     0CD5  00A6               	movwf	(_MatrixLed^(0+128)+6)
 11408     0CD6                     i1l3939:
 11409                           
 11410                           ;main.c: 348:     matrixUpdate();
 11411     0CD6  318A  2240  318C   	fcall	i1_matrixUpdate
 11412     0CD9                     i1l910:
 11413     0CD9  0008               	return
 11414     0CDA                     __end_of_chegadaS2:
 11415                           
 11416                           	psect	text60
 11417     0939                     __ptext60:	
 11418 ;; *************** function _IOCBF0_ISR *****************
 11419 ;; Defined at:
 11420 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;		None
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;		None
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      void 
 11427 ;; Registers used:
 11428 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11434 ;;      Params:         0       0       0       0       0       0
 11435 ;;      Locals:         0       0       0       0       0       0
 11436 ;;      Temps:          0       0       0       0       0       0
 11437 ;;      Totals:         0       0       0       0       0       0
 11438 ;;Total ram usage:        0 bytes
 11439 ;; Hardware stack levels used: 1
 11440 ;; Hardware stack levels required when called: 4
 11441 ;; This function calls:
 11442 ;;		NULL
 11443 ;;		_IOCBF0_DefaultInterruptHandler
 11444 ;;		i1_chegadaS1
 11445 ;; This function is called by:
 11446 ;;		_PIN_MANAGER_IOC
 11447 ;; This function uses a non-reentrant model
 11448 ;;
 11449                           
 11450     0939                     _IOCBF0_ISR:	
 11451                           ;psect for function _IOCBF0_ISR
 11452                           
 11453     0939                     i1l4123:	
 11454                           ;incstack = 0
 11455                           ; Regs used in _IOCBF0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11456                           
 11457                           
 11458                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
 11459     0939  0021               	movlb	1	; select bank1
 11460     093A  086D               	movf	_IOCBF0_InterruptHandler^(0+128),w
 11461     093B  046E               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 11462     093C  1903               	btfsc	3,2
 11463     093D  293F               	goto	u327_21
 11464     093E  2940               	goto	u327_20
 11465     093F                     u327_21:
 11466     093F  2945               	goto	i1l4127
 11467     0940                     u327_20:
 11468     0940                     i1l4125:
 11469                           
 11470                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
 11471     0940  086E               	movf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 11472     0941  008A               	movwf	10
 11473     0942  086D               	movf	_IOCBF0_InterruptHandler^(0+128),w
 11474     0943  000A               	callw
 11475     0944  3189               	pagesel	$
 11476     0945                     i1l4127:
 11477                           
 11478                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
 11479     0945  0027               	movlb	7	; select bank7
 11480     0946  1016               	bcf	22,0	;volatile
 11481     0947                     i1l214:
 11482     0947  0008               	return
 11483     0948                     __end_of_IOCBF0_ISR:
 11484                           
 11485                           	psect	text61
 11486     085D                     __ptext61:	
 11487 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 11488 ;; Defined at:
 11489 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;		None
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;		None
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      void 
 11496 ;; Registers used:
 11497 ;;		None
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11503 ;;      Params:         0       0       0       0       0       0
 11504 ;;      Locals:         0       0       0       0       0       0
 11505 ;;      Temps:          0       0       0       0       0       0
 11506 ;;      Totals:         0       0       0       0       0       0
 11507 ;;Total ram usage:        0 bytes
 11508 ;; Hardware stack levels used: 1
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		_PIN_MANAGER_Initialize
 11513 ;;		_IOCBF0_ISR
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517     085D                     _IOCBF0_DefaultInterruptHandler:	
 11518                           ;psect for function _IOCBF0_DefaultInterruptHandler
 11519                           
 11520     085D                     i1l220:	
 11521                           ;incstack = 0
 11522                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
 11523                           
 11524     085D  0008               	return
 11525     085E                     __end_of_IOCBF0_DefaultInterruptHandler:
 11526                           
 11527                           	psect	text62
 11528     0BCC                     __ptext62:	
 11529 ;; *************** function i1_chegadaS1 *****************
 11530 ;; Defined at:
 11531 ;;		line 283 in file "main.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;		None
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;		None
 11536 ;; Return value:  Size  Location     Type
 11537 ;;                  1    wreg      void 
 11538 ;; Registers used:
 11539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11545 ;;      Params:         0       0       0       0       0       0
 11546 ;;      Locals:         0       0       0       0       0       0
 11547 ;;      Temps:          0       0       0       0       0       0
 11548 ;;      Totals:         0       0       0       0       0       0
 11549 ;;Total ram usage:        0 bytes
 11550 ;; Hardware stack levels used: 1
 11551 ;; Hardware stack levels required when called: 3
 11552 ;; This function calls:
 11553 ;;		i1_TMR4_StartTimer
 11554 ;;		i1_matrixUpdate
 11555 ;; This function is called by:
 11556 ;;		_IOCBF0_ISR
 11557 ;; This function uses a non-reentrant model
 11558 ;;
 11559                           
 11560     0BCC                     i1_chegadaS1:	
 11561                           ;psect for function i1_chegadaS1
 11562                           
 11563     0BCC                     i1l3941:	
 11564                           ;incstack = 0
 11565                           ; Regs used in i1_chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11566                           
 11567                           
 11568                           ;main.c: 285:     motor = 0;
 11569     0BCC  0021               	movlb	1	; select bank1
 11570     0BCD  01BF               	clrf	_motor^(0+128)
 11571                           
 11572                           ;main.c: 286:     andarAtual = 0;
 11573     0BCE  01C1               	clrf	_andarAtual^(0+128)
 11574     0BCF                     i1l3943:
 11575                           
 11576                           ;main.c: 287:     pulsoEncoder = 1;
 11577     0BCF  01CD               	clrf	_pulsoEncoder^(0+128)
 11578     0BD0  0ACD               	incf	_pulsoEncoder^(0+128),f
 11579     0BD1                     i1l3945:
 11580                           
 11581                           ;main.c: 291:     MatrixLed[0] = 0b01111110;
 11582     0BD1  307E               	movlw	126
 11583     0BD2  00A0               	movwf	_MatrixLed^(0+128)
 11584     0BD3                     i1l3947:
 11585                           
 11586                           ;main.c: 292:     MatrixLed[1] = 0b10000001;
 11587     0BD3  3081               	movlw	129
 11588     0BD4  00A1               	movwf	(_MatrixLed^(0+128)+1)
 11589     0BD5                     i1l3949:
 11590                           
 11591                           ;main.c: 293:     MatrixLed[2] = 0b10000001;
 11592     0BD5  3081               	movlw	129
 11593     0BD6  00A2               	movwf	(_MatrixLed^(0+128)+2)
 11594     0BD7                     i1l3951:
 11595                           
 11596                           ;main.c: 294:     MatrixLed[3] = 0b01111110;
 11597     0BD7  307E               	movlw	126
 11598     0BD8  00A3               	movwf	(_MatrixLed^(0+128)+3)
 11599                           
 11600                           ;main.c: 295:     MatrixLed[4] = 0;
 11601     0BD9  01A4               	clrf	(_MatrixLed^(0+128)+4)
 11602     0BDA                     i1l3953:
 11603                           
 11604                           ;main.c: 296:     MatrixLed[5] = 0b00100000;
 11605     0BDA  3020               	movlw	32
 11606     0BDB  00A5               	movwf	(_MatrixLed^(0+128)+5)
 11607     0BDC                     i1l3955:
 11608                           
 11609                           ;main.c: 297:     MatrixLed[6] = 0b00100000;
 11610     0BDC  3020               	movlw	32
 11611     0BDD  00A6               	movwf	(_MatrixLed^(0+128)+6)
 11612     0BDE                     i1l3957:
 11613                           
 11614                           ;main.c: 298:     MatrixLed[7] = 0b00100000;
 11615     0BDE  3020               	movlw	32
 11616     0BDF  00A7               	movwf	(_MatrixLed^(0+128)+7)
 11617     0BE0                     i1l3959:
 11618                           
 11619                           ;main.c: 299:     if(subindo){
 11620     0BE0  0020               	movlb	0	; select bank0
 11621     0BE1  086F               	movf	_subindo,w
 11622     0BE2  1903               	btfsc	3,2
 11623     0BE3  2BE5               	goto	u311_21
 11624     0BE4  2BE6               	goto	u311_20
 11625     0BE5                     u311_21:
 11626     0BE5  2BEB               	goto	i1l3963
 11627     0BE6                     u311_20:
 11628     0BE6                     i1l3961:
 11629                           
 11630                           ;main.c: 300:         destinoSub = destinoSub & 0b11111110;
 11631     0BE6  0021               	movlb	1	; select bank1
 11632     0BE7  083E               	movf	_destinoSub^(0+128),w
 11633     0BE8  39FE               	andlw	254
 11634     0BE9  00BE               	movwf	_destinoSub^(0+128)
 11635                           
 11636                           ;main.c: 301:     }else{
 11637     0BEA  2BF3               	goto	i1l3969
 11638     0BEB                     i1l3963:
 11639                           
 11640                           ;main.c: 302:         destinoDesc = destinoDesc & 0b11111110;
 11641     0BEB  0021               	movlb	1	; select bank1
 11642     0BEC  083D               	movf	_destinoDesc^(0+128),w
 11643     0BED  39FE               	andlw	254
 11644     0BEE  00BD               	movwf	_destinoDesc^(0+128)
 11645     0BEF                     i1l3965:
 11646                           
 11647                           ;main.c: 303:         mov = Repouso;
 11648     0BEF  01C9               	clrf	_mov^(0+128)
 11649     0BF0                     i1l3967:
 11650                           
 11651                           ;main.c: 305:         TMR4_StartTimer();
 11652     0BF0  3188  2061  318B   	fcall	i1_TMR4_StartTimer
 11653     0BF3                     i1l3969:
 11654                           
 11655                           ;main.c: 307:     matrixUpdate();
 11656     0BF3  318A  2240  318B   	fcall	i1_matrixUpdate
 11657     0BF6                     i1l3971:
 11658                           
 11659                           ;main.c: 309:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 11660     0BF6  0021               	movlb	1	; select bank1
 11661     0BF7  0827               	movf	(_MatrixLed^(0+128)+7),w
 11662     0BF8  043E               	iorwf	_destinoSub^(0+128),w
 11663     0BF9  00A7               	movwf	(_MatrixLed^(0+128)+7)
 11664     0BFA                     i1l3973:
 11665                           
 11666                           ;main.c: 310:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 11667     0BFA  0826               	movf	(_MatrixLed^(0+128)+6),w
 11668     0BFB  043D               	iorwf	_destinoDesc^(0+128),w
 11669     0BFC  00A6               	movwf	(_MatrixLed^(0+128)+6)
 11670     0BFD                     i1l899:
 11671     0BFD  0008               	return
 11672     0BFE                     __end_ofi1_chegadaS1:
 11673                           
 11674                           	psect	text63
 11675     087F                     __ptext63:	
 11676 ;; *************** function _CMP2_ISR *****************
 11677 ;; Defined at:
 11678 ;;		line 86 in file "mcc_generated_files/cmp2.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;		None
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;		None
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  1    wreg      void 
 11685 ;; Registers used:
 11686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11692 ;;      Params:         0       0       0       0       0       0
 11693 ;;      Locals:         0       0       0       0       0       0
 11694 ;;      Temps:          0       0       0       0       0       0
 11695 ;;      Totals:         0       0       0       0       0       0
 11696 ;;Total ram usage:        0 bytes
 11697 ;; Hardware stack levels used: 1
 11698 ;; Hardware stack levels required when called: 4
 11699 ;; This function calls:
 11700 ;;		_chegadaS4
 11701 ;; This function is called by:
 11702 ;;		_INTERRUPT_InterruptManager
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706     087F                     _CMP2_ISR:	
 11707                           ;psect for function _CMP2_ISR
 11708                           
 11709     087F                     i1l4287:	
 11710                           ;incstack = 0
 11711                           ; Regs used in _CMP2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11712                           
 11713                           
 11714                           ;mcc_generated_files/cmp2.c: 89:     PIR2bits.C2IF = 0;
 11715     087F  0020               	movlb	0	; select bank0
 11716     0880  1312               	bcf	18,6	;volatile
 11717     0881                     i1l4289:
 11718                           
 11719                           ;mcc_generated_files/cmp2.c: 90:     chegadaS4();
 11720     0881  318D  258E  3188   	fcall	_chegadaS4
 11721     0884                     i1l85:
 11722     0884  0008               	return
 11723     0885                     __end_of_CMP2_ISR:
 11724                           
 11725                           	psect	text64
 11726     0D8E                     __ptext64:	
 11727 ;; *************** function _chegadaS4 *****************
 11728 ;; Defined at:
 11729 ;;		line 388 in file "main.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;		None
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;		None
 11734 ;; Return value:  Size  Location     Type
 11735 ;;                  1    wreg      void 
 11736 ;; Registers used:
 11737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11738 ;; Tracked objects:
 11739 ;;		On entry : 0/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11743 ;;      Params:         0       0       0       0       0       0
 11744 ;;      Locals:         0       0       0       0       0       0
 11745 ;;      Temps:          0       0       0       0       0       0
 11746 ;;      Totals:         0       0       0       0       0       0
 11747 ;;Total ram usage:        0 bytes
 11748 ;; Hardware stack levels used: 1
 11749 ;; Hardware stack levels required when called: 3
 11750 ;; This function calls:
 11751 ;;		_PWM3_LoadDutyValue
 11752 ;;		i1_TMR4_StartTimer
 11753 ;;		i1_TMR4_WriteTimer
 11754 ;;		i1_matrixUpdate
 11755 ;; This function is called by:
 11756 ;;		_CMP2_ISR
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760     0D8E                     _chegadaS4:	
 11761                           ;psect for function _chegadaS4
 11762                           
 11763     0D8E                     i1l3991:	
 11764                           ;incstack = 0
 11765                           ; Regs used in _chegadaS4: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11766                           
 11767                           
 11768                           ;main.c: 390:     motor = 0;
 11769     0D8E  0021               	movlb	1	; select bank1
 11770     0D8F  01BF               	clrf	_motor^(0+128)
 11771     0D90                     i1l3993:
 11772                           
 11773                           ;main.c: 391:     andarAtual = 3;
 11774     0D90  3003               	movlw	3
 11775     0D91  00C1               	movwf	_andarAtual^(0+128)
 11776     0D92                     i1l3995:
 11777                           
 11778                           ;main.c: 392:     pulsoEncoder = 120;
 11779     0D92  3078               	movlw	120
 11780     0D93  00CD               	movwf	_pulsoEncoder^(0+128)
 11781     0D94                     i1l3997:
 11782                           
 11783                           ;main.c: 395:     if((((destinoSub & 0b00001000) == 8 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00001000) == 8 )) ){
 11784     0D94  1DBE               	btfss	_destinoSub^(0+128),3
 11785     0D95  2D97               	goto	u312_21
 11786     0D96  2D98               	goto	u312_20
 11787     0D97                     u312_21:
 11788     0D97  2D9E               	goto	i1l4001
 11789     0D98                     u312_20:
 11790     0D98                     i1l3999:
 11791     0D98  0020               	movlb	0	; select bank0
 11792     0D99  086F               	movf	_subindo,w
 11793     0D9A  1D03               	btfss	3,2
 11794     0D9B  2D9D               	goto	u313_21
 11795     0D9C  2D9E               	goto	u313_20
 11796     0D9D                     u313_21:
 11797     0D9D  2DA9               	goto	i1l4005
 11798     0D9E                     u313_20:
 11799     0D9E                     i1l4001:
 11800     0D9E  0020               	movlb	0	; select bank0
 11801     0D9F  086F               	movf	_subindo,w
 11802     0DA0  1D03               	btfss	3,2
 11803     0DA1  2DA3               	goto	u314_21
 11804     0DA2  2DA4               	goto	u314_20
 11805     0DA3                     u314_21:
 11806     0DA3  2DB6               	goto	i1l924
 11807     0DA4                     u314_20:
 11808     0DA4                     i1l4003:
 11809     0DA4  0021               	movlb	1	; select bank1
 11810     0DA5  1DBD               	btfss	_destinoDesc^(0+128),3
 11811     0DA6  2DA8               	goto	u315_21
 11812     0DA7  2DA9               	goto	u315_20
 11813     0DA8                     u315_21:
 11814     0DA8  2DB6               	goto	i1l924
 11815     0DA9                     u315_20:
 11816     0DA9                     i1l4005:
 11817                           
 11818                           ;main.c: 396:         PWM3_LoadDutyValue(0);
 11819     0DA9  3000               	movlw	0
 11820     0DAA  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 11821     0DAB  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 11822     0DAC  3189  21F9  318D   	fcall	_PWM3_LoadDutyValue
 11823                           
 11824                           ;main.c: 397:         TMR4_WriteTimer(0);
 11825     0DAF  3000               	movlw	0
 11826     0DB0  3188  206F  318D   	fcall	i1_TMR4_WriteTimer
 11827     0DB3                     i1l4007:
 11828                           
 11829                           ;main.c: 398:         TMR4_StartTimer();
 11830     0DB3  3188  2061  318D   	fcall	i1_TMR4_StartTimer
 11831     0DB6                     i1l924:	
 11832                           ;main.c: 399:     }
 11833                           
 11834                           
 11835                           ;main.c: 402:     MatrixLed[0] = 0b10000001;
 11836     0DB6  3081               	movlw	129
 11837     0DB7  0021               	movlb	1	; select bank1
 11838     0DB8  00A0               	movwf	_MatrixLed^(0+128)
 11839                           
 11840                           ;main.c: 403:     MatrixLed[1] = 0b10010001;
 11841     0DB9  3091               	movlw	145
 11842     0DBA  00A1               	movwf	(_MatrixLed^(0+128)+1)
 11843                           
 11844                           ;main.c: 404:     MatrixLed[2] = 0b10010001;
 11845     0DBB  3091               	movlw	145
 11846     0DBC  00A2               	movwf	(_MatrixLed^(0+128)+2)
 11847                           
 11848                           ;main.c: 405:     MatrixLed[3] = 0b01101110;
 11849     0DBD  306E               	movlw	110
 11850     0DBE  00A3               	movwf	(_MatrixLed^(0+128)+3)
 11851     0DBF                     i1l4009:
 11852                           
 11853                           ;main.c: 406:     MatrixLed[4] = 0;
 11854     0DBF  01A4               	clrf	(_MatrixLed^(0+128)+4)
 11855     0DC0                     i1l4011:
 11856                           
 11857                           ;main.c: 407:     MatrixLed[5] = 0b00100000;
 11858     0DC0  3020               	movlw	32
 11859     0DC1  00A5               	movwf	(_MatrixLed^(0+128)+5)
 11860     0DC2                     i1l4013:
 11861                           
 11862                           ;main.c: 408:     MatrixLed[6] = 0b00100000;
 11863     0DC2  3020               	movlw	32
 11864     0DC3  00A6               	movwf	(_MatrixLed^(0+128)+6)
 11865     0DC4                     i1l4015:
 11866                           
 11867                           ;main.c: 409:     MatrixLed[7] = 0b00100000;
 11868     0DC4  3020               	movlw	32
 11869     0DC5  00A7               	movwf	(_MatrixLed^(0+128)+7)
 11870     0DC6                     i1l4017:
 11871                           
 11872                           ;main.c: 410:     if(subindo){
 11873     0DC6  0020               	movlb	0	; select bank0
 11874     0DC7  086F               	movf	_subindo,w
 11875     0DC8  1903               	btfsc	3,2
 11876     0DC9  2DCB               	goto	u316_21
 11877     0DCA  2DCC               	goto	u316_20
 11878     0DCB                     u316_21:
 11879     0DCB  2DD1               	goto	i1l4021
 11880     0DCC                     u316_20:
 11881     0DCC                     i1l4019:
 11882                           
 11883                           ;main.c: 411:         destinoSub = destinoSub & 0b11110111;
 11884     0DCC  0021               	movlb	1	; select bank1
 11885     0DCD  083E               	movf	_destinoSub^(0+128),w
 11886     0DCE  39F7               	andlw	247
 11887     0DCF  00BE               	movwf	_destinoSub^(0+128)
 11888                           
 11889                           ;main.c: 412:     }else{
 11890     0DD0  2DD5               	goto	i1l4023
 11891     0DD1                     i1l4021:
 11892                           
 11893                           ;main.c: 413:         destinoDesc = destinoDesc & 0b11110111;
 11894     0DD1  0021               	movlb	1	; select bank1
 11895     0DD2  083D               	movf	_destinoDesc^(0+128),w
 11896     0DD3  39F7               	andlw	247
 11897     0DD4  00BD               	movwf	_destinoDesc^(0+128)
 11898     0DD5                     i1l4023:
 11899                           
 11900                           ;main.c: 415:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 11901     0DD5  0827               	movf	(_MatrixLed^(0+128)+7),w
 11902     0DD6  043E               	iorwf	_destinoSub^(0+128),w
 11903     0DD7  00A7               	movwf	(_MatrixLed^(0+128)+7)
 11904     0DD8                     i1l4025:
 11905                           
 11906                           ;main.c: 416:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 11907     0DD8  0826               	movf	(_MatrixLed^(0+128)+6),w
 11908     0DD9  043D               	iorwf	_destinoDesc^(0+128),w
 11909     0DDA  00A6               	movwf	(_MatrixLed^(0+128)+6)
 11910     0DDB                     i1l4027:
 11911                           
 11912                           ;main.c: 417:     matrixUpdate();
 11913     0DDB  318A  2240  318D   	fcall	i1_matrixUpdate
 11914     0DDE                     i1l4029:
 11915                           
 11916                           ;main.c: 420:     if(destinoDesc ==0 && destinoSub == 0){
 11917     0DDE  0021               	movlb	1	; select bank1
 11918     0DDF  083D               	movf	_destinoDesc^(0+128),w
 11919     0DE0  1D03               	btfss	3,2
 11920     0DE1  2DE3               	goto	u317_21
 11921     0DE2  2DE4               	goto	u317_20
 11922     0DE3                     u317_21:
 11923     0DE3  2DEC               	goto	i1l4035
 11924     0DE4                     u317_20:
 11925     0DE4                     i1l4031:
 11926     0DE4  083E               	movf	_destinoSub^(0+128),w
 11927     0DE5  1D03               	btfss	3,2
 11928     0DE6  2DE8               	goto	u318_21
 11929     0DE7  2DE9               	goto	u318_20
 11930     0DE8                     u318_21:
 11931     0DE8  2DEC               	goto	i1l4035
 11932     0DE9                     u318_20:
 11933     0DE9                     i1l4033:
 11934                           
 11935                           ;main.c: 421:         mov = RetornaS0;
 11936     0DE9  3003               	movlw	3
 11937     0DEA  00C9               	movwf	_mov^(0+128)
 11938                           
 11939                           ;main.c: 422:     }else if(destinoSub != 0 ){
 11940     0DEB  2DF2               	goto	i1l934
 11941     0DEC                     i1l4035:
 11942     0DEC  083E               	movf	_destinoSub^(0+128),w
 11943     0DED  1903               	btfsc	3,2
 11944     0DEE  2DF0               	goto	u319_21
 11945     0DEF  2DF1               	goto	u319_20
 11946     0DF0                     u319_21:
 11947     0DF0  2DF2               	goto	i1l934
 11948     0DF1                     u319_20:
 11949     0DF1                     i1l4037:
 11950                           
 11951                           ;main.c: 423:         destinoSub = 0;
 11952     0DF1  01BE               	clrf	_destinoSub^(0+128)
 11953     0DF2                     i1l934:
 11954     0DF2  0008               	return
 11955     0DF3                     __end_of_chegadaS4:
 11956                           
 11957                           	psect	text65
 11958     0879                     __ptext65:	
 11959 ;; *************** function _CMP1_ISR *****************
 11960 ;; Defined at:
 11961 ;;		line 86 in file "mcc_generated_files/cmp1.c"
 11962 ;; Parameters:    Size  Location     Type
 11963 ;;		None
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;		None
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  1    wreg      void 
 11968 ;; Registers used:
 11969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11975 ;;      Params:         0       0       0       0       0       0
 11976 ;;      Locals:         0       0       0       0       0       0
 11977 ;;      Temps:          0       0       0       0       0       0
 11978 ;;      Totals:         0       0       0       0       0       0
 11979 ;;Total ram usage:        0 bytes
 11980 ;; Hardware stack levels used: 1
 11981 ;; Hardware stack levels required when called: 4
 11982 ;; This function calls:
 11983 ;;		_chegadaS3
 11984 ;; This function is called by:
 11985 ;;		_INTERRUPT_InterruptManager
 11986 ;; This function uses a non-reentrant model
 11987 ;;
 11988                           
 11989     0879                     _CMP1_ISR:	
 11990                           ;psect for function _CMP1_ISR
 11991                           
 11992     0879                     i1l4291:	
 11993                           ;incstack = 0
 11994                           ; Regs used in _CMP1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11995                           
 11996                           
 11997                           ;mcc_generated_files/cmp1.c: 89:     PIR2bits.C1IF = 0;
 11998     0879  0020               	movlb	0	; select bank0
 11999     087A  1292               	bcf	18,5	;volatile
 12000     087B                     i1l4293:
 12001                           
 12002                           ;mcc_generated_files/cmp1.c: 90:     chegadaS3();
 12003     087B  318D  2532  3188   	fcall	_chegadaS3
 12004     087E                     i1l156:
 12005     087E  0008               	return
 12006     087F                     __end_of_CMP1_ISR:
 12007                           
 12008                           	psect	text66
 12009     0D32                     __ptext66:	
 12010 ;; *************** function _chegadaS3 *****************
 12011 ;; Defined at:
 12012 ;;		line 351 in file "main.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;		None
 12015 ;; Auto vars:     Size  Location     Type
 12016 ;;		None
 12017 ;; Return value:  Size  Location     Type
 12018 ;;                  1    wreg      void 
 12019 ;; Registers used:
 12020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12021 ;; Tracked objects:
 12022 ;;		On entry : 0/0
 12023 ;;		On exit  : 0/0
 12024 ;;		Unchanged: 0/0
 12025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12026 ;;      Params:         0       0       0       0       0       0
 12027 ;;      Locals:         0       0       0       0       0       0
 12028 ;;      Temps:          0       0       0       0       0       0
 12029 ;;      Totals:         0       0       0       0       0       0
 12030 ;;Total ram usage:        0 bytes
 12031 ;; Hardware stack levels used: 1
 12032 ;; Hardware stack levels required when called: 3
 12033 ;; This function calls:
 12034 ;;		_PWM3_LoadDutyValue
 12035 ;;		i1_TMR4_StartTimer
 12036 ;;		i1_TMR4_WriteTimer
 12037 ;;		i1_matrixUpdate
 12038 ;; This function is called by:
 12039 ;;		_CMP1_ISR
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043     0D32                     _chegadaS3:	
 12044                           ;psect for function _chegadaS3
 12045                           
 12046     0D32                     i1l4047:	
 12047                           ;incstack = 0
 12048                           ; Regs used in _chegadaS3: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12049                           
 12050                           
 12051                           ;main.c: 353:     motor = 0;
 12052     0D32  0021               	movlb	1	; select bank1
 12053     0D33  01BF               	clrf	_motor^(0+128)
 12054     0D34                     i1l4049:
 12055                           
 12056                           ;main.c: 354:     andarAtual = 2;
 12057     0D34  3002               	movlw	2
 12058     0D35  00C1               	movwf	_andarAtual^(0+128)
 12059     0D36                     i1l4051:
 12060                           
 12061                           ;main.c: 357:     if((((destinoSub & 0b00000100) == 4 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00000100) == 4 )) ){
 12062     0D36  1D3E               	btfss	_destinoSub^(0+128),2
 12063     0D37  2D39               	goto	u320_21
 12064     0D38  2D3A               	goto	u320_20
 12065     0D39                     u320_21:
 12066     0D39  2D40               	goto	i1l4055
 12067     0D3A                     u320_20:
 12068     0D3A                     i1l4053:
 12069     0D3A  0020               	movlb	0	; select bank0
 12070     0D3B  086F               	movf	_subindo,w
 12071     0D3C  1D03               	btfss	3,2
 12072     0D3D  2D3F               	goto	u321_21
 12073     0D3E  2D40               	goto	u321_20
 12074     0D3F                     u321_21:
 12075     0D3F  2D4B               	goto	i1l4059
 12076     0D40                     u321_20:
 12077     0D40                     i1l4055:
 12078     0D40  0020               	movlb	0	; select bank0
 12079     0D41  086F               	movf	_subindo,w
 12080     0D42  1D03               	btfss	3,2
 12081     0D43  2D45               	goto	u322_21
 12082     0D44  2D46               	goto	u322_20
 12083     0D45                     u322_21:
 12084     0D45  2D58               	goto	i1l913
 12085     0D46                     u322_20:
 12086     0D46                     i1l4057:
 12087     0D46  0021               	movlb	1	; select bank1
 12088     0D47  1D3D               	btfss	_destinoDesc^(0+128),2
 12089     0D48  2D4A               	goto	u323_21
 12090     0D49  2D4B               	goto	u323_20
 12091     0D4A                     u323_21:
 12092     0D4A  2D58               	goto	i1l913
 12093     0D4B                     u323_20:
 12094     0D4B                     i1l4059:
 12095                           
 12096                           ;main.c: 358:         PWM3_LoadDutyValue(0);
 12097     0D4B  3000               	movlw	0
 12098     0D4C  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 12099     0D4D  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 12100     0D4E  3189  21F9  318D   	fcall	_PWM3_LoadDutyValue
 12101                           
 12102                           ;main.c: 359:         TMR4_WriteTimer(0);
 12103     0D51  3000               	movlw	0
 12104     0D52  3188  206F  318D   	fcall	i1_TMR4_WriteTimer
 12105     0D55                     i1l4061:
 12106                           
 12107                           ;main.c: 360:         TMR4_StartTimer();
 12108     0D55  3188  2061  318D   	fcall	i1_TMR4_StartTimer
 12109     0D58                     i1l913:	
 12110                           ;main.c: 361:     }
 12111                           
 12112                           
 12113                           ;main.c: 364:     MatrixLed[0] = 0b01000011;
 12114     0D58  3043               	movlw	67
 12115     0D59  0021               	movlb	1	; select bank1
 12116     0D5A  00A0               	movwf	_MatrixLed^(0+128)
 12117                           
 12118                           ;main.c: 365:     MatrixLed[1] = 0b10000101;
 12119     0D5B  3085               	movlw	133
 12120     0D5C  00A1               	movwf	(_MatrixLed^(0+128)+1)
 12121                           
 12122                           ;main.c: 366:     MatrixLed[2] = 0b10001001;
 12123     0D5D  3089               	movlw	137
 12124     0D5E  00A2               	movwf	(_MatrixLed^(0+128)+2)
 12125                           
 12126                           ;main.c: 367:     MatrixLed[3] = 0b01110001;
 12127     0D5F  3071               	movlw	113
 12128     0D60  00A3               	movwf	(_MatrixLed^(0+128)+3)
 12129     0D61                     i1l4063:
 12130                           
 12131                           ;main.c: 368:     MatrixLed[4] = 0;
 12132     0D61  01A4               	clrf	(_MatrixLed^(0+128)+4)
 12133     0D62                     i1l4065:
 12134                           
 12135                           ;main.c: 369:    MatrixLed[5] = 0b00100000;
 12136     0D62  3020               	movlw	32
 12137     0D63  00A5               	movwf	(_MatrixLed^(0+128)+5)
 12138     0D64                     i1l4067:
 12139                           
 12140                           ;main.c: 370:     MatrixLed[6] = 0b00100000;
 12141     0D64  3020               	movlw	32
 12142     0D65  00A6               	movwf	(_MatrixLed^(0+128)+6)
 12143     0D66                     i1l4069:
 12144                           
 12145                           ;main.c: 371:     MatrixLed[7] = 0b00100000;
 12146     0D66  3020               	movlw	32
 12147     0D67  00A7               	movwf	(_MatrixLed^(0+128)+7)
 12148     0D68                     i1l4071:
 12149                           
 12150                           ;main.c: 372:     if(subindo){
 12151     0D68  0020               	movlb	0	; select bank0
 12152     0D69  086F               	movf	_subindo,w
 12153     0D6A  1903               	btfsc	3,2
 12154     0D6B  2D6D               	goto	u324_21
 12155     0D6C  2D6E               	goto	u324_20
 12156     0D6D                     u324_21:
 12157     0D6D  2D73               	goto	i1l4075
 12158     0D6E                     u324_20:
 12159     0D6E                     i1l4073:
 12160                           
 12161                           ;main.c: 373:         destinoSub = destinoSub & 0b11111011;
 12162     0D6E  0021               	movlb	1	; select bank1
 12163     0D6F  083E               	movf	_destinoSub^(0+128),w
 12164     0D70  39FB               	andlw	251
 12165     0D71  00BE               	movwf	_destinoSub^(0+128)
 12166                           
 12167                           ;main.c: 374:     }else{
 12168     0D72  2D77               	goto	i1l4077
 12169     0D73                     i1l4075:
 12170                           
 12171                           ;main.c: 375:         destinoDesc = destinoDesc & 0b11111011;
 12172     0D73  0021               	movlb	1	; select bank1
 12173     0D74  083D               	movf	_destinoDesc^(0+128),w
 12174     0D75  39FB               	andlw	251
 12175     0D76  00BD               	movwf	_destinoDesc^(0+128)
 12176     0D77                     i1l4077:
 12177                           
 12178                           ;main.c: 377:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 12179     0D77  0827               	movf	(_MatrixLed^(0+128)+7),w
 12180     0D78  043E               	iorwf	_destinoSub^(0+128),w
 12181     0D79  00A7               	movwf	(_MatrixLed^(0+128)+7)
 12182     0D7A                     i1l4079:
 12183                           
 12184                           ;main.c: 378:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 12185     0D7A  0826               	movf	(_MatrixLed^(0+128)+6),w
 12186     0D7B  043D               	iorwf	_destinoDesc^(0+128),w
 12187     0D7C  00A6               	movwf	(_MatrixLed^(0+128)+6)
 12188     0D7D                     i1l4081:
 12189                           
 12190                           ;main.c: 379:     matrixUpdate();
 12191     0D7D  318A  2240  318D   	fcall	i1_matrixUpdate
 12192     0D80                     i1l4083:
 12193                           
 12194                           ;main.c: 382:     if(destinoDesc ==0 && destinoSub == 0){
 12195     0D80  0021               	movlb	1	; select bank1
 12196     0D81  083D               	movf	_destinoDesc^(0+128),w
 12197     0D82  1D03               	btfss	3,2
 12198     0D83  2D85               	goto	u325_21
 12199     0D84  2D86               	goto	u325_20
 12200     0D85                     u325_21:
 12201     0D85  2D8D               	goto	i1l921
 12202     0D86                     u325_20:
 12203     0D86                     i1l4085:
 12204     0D86  083E               	movf	_destinoSub^(0+128),w
 12205     0D87  1D03               	btfss	3,2
 12206     0D88  2D8A               	goto	u326_21
 12207     0D89  2D8B               	goto	u326_20
 12208     0D8A                     u326_21:
 12209     0D8A  2D8D               	goto	i1l921
 12210     0D8B                     u326_20:
 12211     0D8B                     i1l4087:
 12212                           
 12213                           ;main.c: 383:         mov = RetornaS0;
 12214     0D8B  3003               	movlw	3
 12215     0D8C  00C9               	movwf	_mov^(0+128)
 12216     0D8D                     i1l921:
 12217     0D8D  0008               	return
 12218     0D8E                     __end_of_chegadaS3:
 12219                           
 12220                           	psect	text67
 12221     0A40                     __ptext67:	
 12222 ;; *************** function i1_matrixUpdate *****************
 12223 ;; Defined at:
 12224 ;;		line 191 in file "main.c"
 12225 ;; Parameters:    Size  Location     Type
 12226 ;;		None
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;  data            2    8[COMMON] unsigned char [2]
 12229 ;;  i               1   10[COMMON] unsigned char 
 12230 ;;  i               1    0        unsigned char 
 12231 ;;  index           1    0        unsigned char 
 12232 ;; Return value:  Size  Location     Type
 12233 ;;                  1    wreg      void 
 12234 ;; Registers used:
 12235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12236 ;; Tracked objects:
 12237 ;;		On entry : 0/0
 12238 ;;		On exit  : 0/0
 12239 ;;		Unchanged: 0/0
 12240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12241 ;;      Params:         0       0       0       0       0       0
 12242 ;;      Locals:         3       0       0       0       0       0
 12243 ;;      Temps:          0       0       0       0       0       0
 12244 ;;      Totals:         3       0       0       0       0       0
 12245 ;;Total ram usage:        3 bytes
 12246 ;; Hardware stack levels used: 1
 12247 ;; Hardware stack levels required when called: 2
 12248 ;; This function calls:
 12249 ;;		i1_txSpi
 12250 ;; This function is called by:
 12251 ;;		_controleMovimento
 12252 ;;		_chegadaS2
 12253 ;;		_chegadaS3
 12254 ;;		_chegadaS4
 12255 ;;		i1_chegadaS1
 12256 ;; This function uses a non-reentrant model
 12257 ;;
 12258                           
 12259     0A40                     i1_matrixUpdate:	
 12260                           ;psect for function i1_matrixUpdate
 12261                           
 12262     0A40                     i1l3683:	
 12263                           ;incstack = 0
 12264                           ; Regs used in i1_matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12265                           
 12266                           
 12267                           ;main.c: 194:         for(uint8_t i=8;i>0;i--){
 12268     0A40  3008               	movlw	8
 12269     0A41  00FA               	movwf	i1matrixUpdate@i
 12270     0A42                     i1l3689:
 12271                           
 12272                           ;main.c: 195:             data[0] = i;
 12273     0A42  087A               	movf	i1matrixUpdate@i,w
 12274     0A43  00F8               	movwf	i1matrixUpdate@data
 12275     0A44                     i1l3691:
 12276                           
 12277                           ;main.c: 196:             data[1] = MatrixLed[i-1];
 12278     0A44  087A               	movf	i1matrixUpdate@i,w
 12279     0A45  3E9F               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
 12280     0A46  0086               	movwf	6
 12281     0A47  0187               	clrf	7
 12282     0A48  0801               	movf	1,w
 12283     0A49  00F9               	movwf	i1matrixUpdate@data+1
 12284     0A4A                     i1l3693:
 12285                           
 12286                           ;main.c: 197:             txSpi(data, 2);
 12287     0A4A  3002               	movlw	2
 12288     0A4B  00F5               	movwf	i1txSpi@dataSize
 12289     0A4C  3000               	movlw	0
 12290     0A4D  00F6               	movwf	i1txSpi@dataSize+1
 12291     0A4E  3078               	movlw	(low (i1matrixUpdate@data| 0))& (0+255)
 12292     0A4F  3189  212B  318A   	fcall	i1_txSpi
 12293     0A52                     i1l3695:
 12294                           
 12295                           ;main.c: 198:         }
 12296     0A52  3001               	movlw	1
 12297     0A53  02FA               	subwf	i1matrixUpdate@i,f
 12298     0A54                     i1l3697:
 12299     0A54  087A               	movf	i1matrixUpdate@i,w
 12300     0A55  1D03               	btfss	3,2
 12301     0A56  2A58               	goto	u292_21
 12302     0A57  2A59               	goto	u292_20
 12303     0A58                     u292_21:
 12304     0A58  2A42               	goto	i1l3689
 12305     0A59                     u292_20:
 12306     0A59                     i1l859:
 12307     0A59  0008               	return
 12308     0A5A                     __end_ofi1_matrixUpdate:
 12309                           
 12310                           	psect	text68
 12311     092B                     __ptext68:	
 12312 ;; *************** function i1_txSpi *****************
 12313 ;; Defined at:
 12314 ;;		line 183 in file "main.c"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;  data            1    wreg     PTR unsigned char 
 12317 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 12318 ;;  dataSize        2    5[COMMON] unsigned int 
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;  data            1    7[COMMON] PTR unsigned char 
 12321 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12331 ;;      Params:         2       0       0       0       0       0
 12332 ;;      Locals:         1       0       0       0       0       0
 12333 ;;      Temps:          0       0       0       0       0       0
 12334 ;;      Totals:         3       0       0       0       0       0
 12335 ;;Total ram usage:        3 bytes
 12336 ;; Hardware stack levels used: 1
 12337 ;; Hardware stack levels required when called: 1
 12338 ;; This function calls:
 12339 ;;		i1_SPI1_ExchangeBlock
 12340 ;; This function is called by:
 12341 ;;		i1_matrixUpdate
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345     092B                     i1_txSpi:	
 12346                           ;psect for function i1_txSpi
 12347                           
 12348                           
 12349                           ;incstack = 0
 12350                           ; Regs used in i1_txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12351                           ;i1txSpi@data stored from wreg
 12352     092B  00F7               	movwf	i1txSpi@data
 12353     092C                     i1l846:	
 12354                           ;main.c: 184:     do { LATBbits.LATB1 = 0; } while(0);
 12355                           
 12356     092C  0022               	movlb	2	; select bank2
 12357     092D  108D               	bcf	13,1	;volatile
 12358     092E                     i1l3257:
 12359                           
 12360                           ;main.c: 185:     SPI1_ExchangeBlock(data,dataSize);
 12361     092E  0876               	movf	i1txSpi@dataSize+1,w
 12362     092F  00F1               	movwf	i1SPI1_ExchangeBlock@blockSize+1
 12363     0930  0875               	movf	i1txSpi@dataSize,w
 12364     0931  00F0               	movwf	i1SPI1_ExchangeBlock@blockSize
 12365     0932  0877               	movf	i1txSpi@data,w
 12366     0933  318A  22F2  3189   	fcall	i1_SPI1_ExchangeBlock
 12367     0936                     i1l3259:
 12368     0936  0022               	movlb	2	; select bank2
 12369     0937  148D               	bsf	13,1	;volatile
 12370     0938                     i1l850:
 12371     0938  0008               	return
 12372     0939                     __end_ofi1_txSpi:
 12373                           
 12374                           	psect	text69
 12375     0AF2                     __ptext69:	
 12376 ;; *************** function i1_SPI1_ExchangeBlock *****************
 12377 ;; Defined at:
 12378 ;;		line 100 in file "mcc_generated_files/spi1.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;  block           1    wreg     PTR void 
 12381 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 12382 ;;  blockSize       2    0[COMMON] unsigned int 
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;  block           1    3[COMMON] PTR void 
 12385 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 12386 ;;  data            1    4[COMMON] PTR unsigned char 
 12387 ;;		 -> i1matrixUpdate@data(2), initMatrix@data(4), matrixUpdate@data(2), 
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  1    wreg      void 
 12390 ;; Registers used:
 12391 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12397 ;;      Params:         2       0       0       0       0       0
 12398 ;;      Locals:         2       0       0       0       0       0
 12399 ;;      Temps:          1       0       0       0       0       0
 12400 ;;      Totals:         5       0       0       0       0       0
 12401 ;;Total ram usage:        5 bytes
 12402 ;; Hardware stack levels used: 1
 12403 ;; This function calls:
 12404 ;;		Nothing
 12405 ;; This function is called by:
 12406 ;;		i1_txSpi
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410     0AF2                     i1_SPI1_ExchangeBlock:	
 12411                           ;psect for function i1_SPI1_ExchangeBlock
 12412                           
 12413                           
 12414                           ;incstack = 0
 12415                           ; Regs used in i1_SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
 12416                           ;i1SPI1_ExchangeBlock@block stored from wreg
 12417     0AF2  00F3               	movwf	i1SPI1_ExchangeBlock@block
 12418     0AF3                     i1l3187:
 12419                           
 12420                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
 12421     0AF3  0873               	movf	i1SPI1_ExchangeBlock@block,w
 12422     0AF4  00F4               	movwf	i1SPI1_ExchangeBlock@data
 12423                           
 12424                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 12425     0AF5  2B0C               	goto	i1l3195
 12426     0AF6                     i1l3189:
 12427                           
 12428                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
 12429     0AF6  0874               	movf	i1SPI1_ExchangeBlock@data,w
 12430     0AF7  0086               	movwf	6
 12431     0AF8  0187               	clrf	7
 12432     0AF9  0801               	movf	1,w
 12433     0AFA  0024               	movlb	4	; select bank4
 12434     0AFB  0091               	movwf	17	;volatile
 12435     0AFC                     i1l452:	
 12436                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
 12437                           
 12438     0AFC  0020               	movlb	0	; select bank0
 12439     0AFD  1D91               	btfss	17,3	;volatile
 12440     0AFE  2B00               	goto	u190_21
 12441     0AFF  2B01               	goto	u190_20
 12442     0B00                     u190_21:
 12443     0B00  2AFC               	goto	i1l452
 12444     0B01                     u190_20:
 12445     0B01                     i1l454:
 12446                           
 12447                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
 12448     0B01  1191               	bcf	17,3	;volatile
 12449     0B02                     i1l3191:
 12450                           
 12451                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
 12452     0B02  0874               	movf	i1SPI1_ExchangeBlock@data,w
 12453     0B03  0086               	movwf	6
 12454     0B04  0187               	clrf	7
 12455     0B05  0024               	movlb	4	; select bank4
 12456     0B06  0811               	movf	17,w	;volatile
 12457     0B07  0081               	movwf	1
 12458     0B08                     i1l3193:
 12459     0B08  3001               	movlw	1
 12460     0B09  00F2               	movwf	??i1_SPI1_ExchangeBlock
 12461     0B0A  0872               	movf	??i1_SPI1_ExchangeBlock,w
 12462     0B0B  07F4               	addwf	i1SPI1_ExchangeBlock@data,f
 12463     0B0C                     i1l3195:
 12464                           
 12465                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 12466     0B0C  3001               	movlw	1
 12467     0B0D  02F0               	subwf	i1SPI1_ExchangeBlock@blockSize,f
 12468     0B0E  3000               	movlw	0
 12469     0B0F  3BF1               	subwfb	i1SPI1_ExchangeBlock@blockSize+1,f
 12470     0B10  0A70               	incf	i1SPI1_ExchangeBlock@blockSize,w
 12471     0B11  1D03               	skipz
 12472     0B12  2B17               	goto	u191_21
 12473     0B13  0A71               	incf	i1SPI1_ExchangeBlock@blockSize+1,w
 12474     0B14  1D03               	btfss	3,2
 12475     0B15  2B17               	goto	u191_21
 12476     0B16  2B18               	goto	u191_20
 12477     0B17                     u191_21:
 12478     0B17  2AF6               	goto	i1l3189
 12479     0B18                     u191_20:
 12480     0B18                     i1l456:
 12481     0B18  0008               	return
 12482     0B19                     __end_ofi1_SPI1_ExchangeBlock:
 12483                           
 12484                           	psect	text70
 12485     086F                     __ptext70:	
 12486 ;; *************** function i1_TMR4_WriteTimer *****************
 12487 ;; Defined at:
 12488 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  timerVal        1    wreg     unsigned char 
 12491 ;; Auto vars:     Size  Location     Type
 12492 ;;  timerVal        1    0[COMMON] unsigned char 
 12493 ;; Return value:  Size  Location     Type
 12494 ;;                  1    wreg      void 
 12495 ;; Registers used:
 12496 ;;		wreg
 12497 ;; Tracked objects:
 12498 ;;		On entry : 0/0
 12499 ;;		On exit  : 0/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12502 ;;      Params:         0       0       0       0       0       0
 12503 ;;      Locals:         1       0       0       0       0       0
 12504 ;;      Temps:          0       0       0       0       0       0
 12505 ;;      Totals:         1       0       0       0       0       0
 12506 ;;Total ram usage:        1 bytes
 12507 ;; Hardware stack levels used: 1
 12508 ;; This function calls:
 12509 ;;		Nothing
 12510 ;; This function is called by:
 12511 ;;		_chegadaS2
 12512 ;;		_chegadaS3
 12513 ;;		_chegadaS4
 12514 ;; This function uses a non-reentrant model
 12515 ;;
 12516                           
 12517     086F                     i1_TMR4_WriteTimer:	
 12518                           ;psect for function i1_TMR4_WriteTimer
 12519                           
 12520                           
 12521                           ;incstack = 0
 12522                           ; Regs used in i1_TMR4_WriteTimer: [wreg]
 12523                           ;i1TMR4_WriteTimer@timerVal stored from wreg
 12524     086F  00F0               	movwf	i1TMR4_WriteTimer@timerVal
 12525     0870                     i1l3681:
 12526                           
 12527                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
 12528     0870  0870               	movf	i1TMR4_WriteTimer@timerVal,w
 12529     0871  0028               	movlb	8	; select bank8
 12530     0872  0095               	movwf	21	;volatile
 12531     0873                     i1l690:
 12532     0873  0008               	return
 12533     0874                     __end_ofi1_TMR4_WriteTimer:
 12534                           
 12535                           	psect	text71
 12536     0861                     __ptext71:	
 12537 ;; *************** function i1_TMR4_StartTimer *****************
 12538 ;; Defined at:
 12539 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;		None
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;		None
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  1    wreg      void 
 12546 ;; Registers used:
 12547 ;;		None
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/0
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12553 ;;      Params:         0       0       0       0       0       0
 12554 ;;      Locals:         0       0       0       0       0       0
 12555 ;;      Temps:          0       0       0       0       0       0
 12556 ;;      Totals:         0       0       0       0       0       0
 12557 ;;Total ram usage:        0 bytes
 12558 ;; Hardware stack levels used: 1
 12559 ;; This function calls:
 12560 ;;		Nothing
 12561 ;; This function is called by:
 12562 ;;		_chegadaS2
 12563 ;;		_chegadaS3
 12564 ;;		_chegadaS4
 12565 ;;		i1_chegadaS1
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           
 12569     0861                     i1_TMR4_StartTimer:	
 12570                           ;psect for function i1_TMR4_StartTimer
 12571                           
 12572     0861                     i1l3679:	
 12573                           ;incstack = 0
 12574                           ; Regs used in i1_TMR4_StartTimer: []
 12575                           
 12576                           
 12577                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 12578     0861  0028               	movlb	8	; select bank8
 12579     0862  1517               	bsf	23,2	;volatile
 12580     0863                     i1l681:
 12581     0863  0008               	return
 12582     0864                     __end_ofi1_TMR4_StartTimer:
 12583                           
 12584                           	psect	text72
 12585     09F9                     __ptext72:	
 12586 ;; *************** function _PWM3_LoadDutyValue *****************
 12587 ;; Defined at:
 12588 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  dutyValue       2    0[COMMON] unsigned short 
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;		None
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1    wreg      void 
 12595 ;; Registers used:
 12596 ;;		wreg, status,2, status,0
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12602 ;;      Params:         2       0       0       0       0       0
 12603 ;;      Locals:         0       0       0       0       0       0
 12604 ;;      Temps:          2       0       0       0       0       0
 12605 ;;      Totals:         4       0       0       0       0       0
 12606 ;;Total ram usage:        4 bytes
 12607 ;; Hardware stack levels used: 1
 12608 ;; This function calls:
 12609 ;;		Nothing
 12610 ;; This function is called by:
 12611 ;;		_controleMovimento
 12612 ;;		_chegadaS2
 12613 ;;		_chegadaS3
 12614 ;;		_chegadaS4
 12615 ;; This function uses a non-reentrant model
 12616 ;;
 12617                           
 12618     09F9                     _PWM3_LoadDutyValue:	
 12619                           ;psect for function _PWM3_LoadDutyValue
 12620                           
 12621     09F9                     i1l3261:	
 12622                           ;incstack = 0
 12623                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 12624                           
 12625                           
 12626                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
 12627     09F9  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 12628     09FA  00F3               	movwf	??_PWM3_LoadDutyValue+1
 12629     09FB  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 12630     09FC  00F2               	movwf	??_PWM3_LoadDutyValue
 12631     09FD  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 12632     09FE  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 12633     09FF  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 12634     0A00  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 12635     0A01  0872               	movf	??_PWM3_LoadDutyValue,w
 12636     0A02  0026               	movlb	6	; select bank6
 12637     0A03  0091               	movwf	17	;volatile
 12638                           
 12639                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
 12640     0A04  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 12641     0A05  3903               	andlw	3
 12642     0A06  00F2               	movwf	??_PWM3_LoadDutyValue
 12643     0A07  3004               	movlw	4
 12644     0A08                     u200_25:
 12645     0A08  35F2               	lslf	??_PWM3_LoadDutyValue,f
 12646     0A09  0B89               	decfsz	9,f
 12647     0A0A  2A08               	goto	u200_25
 12648     0A0B  0813               	movf	19,w	;volatile
 12649     0A0C  39CF               	andlw	207
 12650     0A0D  0472               	iorwf	??_PWM3_LoadDutyValue,w
 12651     0A0E  0093               	movwf	19	;volatile
 12652     0A0F                     i1l14:
 12653     0A0F  0008               	return
 12654     0A10                     __end_of_PWM3_LoadDutyValue:
 12655                           
 12656                           	psect	text73
 12657     0988                     __ptext73:	
 12658 ;; *************** function _CCP4_CaptureISR *****************
 12659 ;; Defined at:
 12660 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;		None
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;  module          2    2[COMMON] struct CCPR4Reg_tag
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      void 
 12667 ;; Registers used:
 12668 ;;		wreg, status,2, status,0, pclath, cstack
 12669 ;; Tracked objects:
 12670 ;;		On entry : 0/0
 12671 ;;		On exit  : 0/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12674 ;;      Params:         0       0       0       0       0       0
 12675 ;;      Locals:         2       0       0       0       0       0
 12676 ;;      Temps:          0       0       0       0       0       0
 12677 ;;      Totals:         2       0       0       0       0       0
 12678 ;;Total ram usage:        2 bytes
 12679 ;; Hardware stack levels used: 1
 12680 ;; Hardware stack levels required when called: 1
 12681 ;; This function calls:
 12682 ;;		NULL
 12683 ;;		_CCP4_DefaultCallBack
 12684 ;;		_interrupcaoCCP4
 12685 ;; This function is called by:
 12686 ;;		_INTERRUPT_InterruptManager
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690     0988                     _CCP4_CaptureISR:	
 12691                           ;psect for function _CCP4_CaptureISR
 12692                           
 12693     0988                     i1l4343:	
 12694                           ;incstack = 0
 12695                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 12696                           
 12697                           
 12698                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 12699     0988  0020               	movlb	0	; select bank0
 12700     0989  1293               	bcf	19,5	;volatile
 12701     098A                     i1l4345:
 12702                           
 12703                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 12704     098A  0026               	movlb	6	; select bank6
 12705     098B  0818               	movf	24,w	;volatile
 12706     098C  00F2               	movwf	CCP4_CaptureISR@module
 12707                           
 12708                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 12709     098D  0819               	movf	25,w	;volatile
 12710     098E  00F3               	movwf	CCP4_CaptureISR@module+1
 12711     098F                     i1l4347:
 12712                           
 12713                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 12714     098F  0873               	movf	CCP4_CaptureISR@module+1,w
 12715     0990  00F1               	movwf	CCP4_DefaultCallBack@capturedValue+1
 12716     0991  0872               	movf	CCP4_CaptureISR@module,w
 12717     0992  00F0               	movwf	CCP4_DefaultCallBack@capturedValue
 12718     0993  0021               	movlb	1	; select bank1
 12719     0994  0864               	movf	(_CCP4_CallBack+1)^(0+128),w
 12720     0995  008A               	movwf	10
 12721     0996  0863               	movf	_CCP4_CallBack^(0+128),w
 12722     0997  000A               	callw
 12723     0998  3189               	pagesel	$
 12724     0999                     i1l652:
 12725     0999  0008               	return
 12726     099A                     __end_of_CCP4_CaptureISR:
 12727                           
 12728                           	psect	text74
 12729     085C                     __ptext74:	
 12730 ;; *************** function _CCP4_DefaultCallBack *****************
 12731 ;; Defined at:
 12732 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;  capturedValu    2    0[COMMON] unsigned short 
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;		None
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      void 
 12739 ;; Registers used:
 12740 ;;		None
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12746 ;;      Params:         2       0       0       0       0       0
 12747 ;;      Locals:         0       0       0       0       0       0
 12748 ;;      Temps:          0       0       0       0       0       0
 12749 ;;      Totals:         2       0       0       0       0       0
 12750 ;;Total ram usage:        2 bytes
 12751 ;; Hardware stack levels used: 1
 12752 ;; This function calls:
 12753 ;;		Nothing
 12754 ;; This function is called by:
 12755 ;;		_CCP4_Initialize
 12756 ;;		_CCP4_CaptureISR
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760     085C                     _CCP4_DefaultCallBack:	
 12761                           ;psect for function _CCP4_DefaultCallBack
 12762                           
 12763     085C                     i1l646:	
 12764                           ;incstack = 0
 12765                           ; Regs used in _CCP4_DefaultCallBack: []
 12766                           
 12767     085C  0008               	return
 12768     085D                     __end_of_CCP4_DefaultCallBack:
 12769                           
 12770                           	psect	text75
 12771     0B19                     __ptext75:	
 12772 ;; *************** function _interrupcaoCCP4 *****************
 12773 ;; Defined at:
 12774 ;;		line 166 in file "main.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;		None
 12777 ;; Auto vars:     Size  Location     Type
 12778 ;;		None
 12779 ;; Return value:  Size  Location     Type
 12780 ;;                  1    wreg      void 
 12781 ;; Registers used:
 12782 ;;		wreg, status,2, status,0
 12783 ;; Tracked objects:
 12784 ;;		On entry : 0/0
 12785 ;;		On exit  : 0/0
 12786 ;;		Unchanged: 0/0
 12787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 12788 ;;      Params:         0       0       0       0       0       0
 12789 ;;      Locals:         0       0       0       0       0       0
 12790 ;;      Temps:          1       0       0       0       0       0
 12791 ;;      Totals:         1       0       0       0       0       0
 12792 ;;Total ram usage:        1 bytes
 12793 ;; Hardware stack levels used: 1
 12794 ;; This function calls:
 12795 ;;		Nothing
 12796 ;; This function is called by:
 12797 ;;		_main
 12798 ;;		_CCP4_CaptureISR
 12799 ;; This function uses a non-reentrant model
 12800 ;;
 12801                           
 12802     0B19                     _interrupcaoCCP4:	
 12803                           ;psect for function _interrupcaoCCP4
 12804                           
 12805     0B19                     i1l4241:	
 12806                           ;incstack = 0
 12807                           ; Regs used in _interrupcaoCCP4: [wreg+status,2+status,0]
 12808                           
 12809                           
 12810                           ;main.c: 168:     if (subindo){
 12811     0B19  0020               	movlb	0	; select bank0
 12812     0B1A  086F               	movf	_subindo,w
 12813     0B1B  1903               	btfsc	3,2
 12814     0B1C  2B1E               	goto	u331_21
 12815     0B1D  2B1F               	goto	u331_20
 12816     0B1E                     u331_21:
 12817     0B1E  2B25               	goto	i1l4245
 12818     0B1F                     u331_20:
 12819     0B1F                     i1l4243:
 12820                           
 12821                           ;main.c: 169:         pulsoEncoder++;
 12822     0B1F  3001               	movlw	1
 12823     0B20  00F0               	movwf	??_interrupcaoCCP4
 12824     0B21  0870               	movf	??_interrupcaoCCP4,w
 12825     0B22  0021               	movlb	1	; select bank1
 12826     0B23  07CD               	addwf	_pulsoEncoder^(0+128),f
 12827                           
 12828                           ;main.c: 170:     } else {
 12829     0B24  2B28               	goto	i1l840
 12830     0B25                     i1l4245:
 12831                           
 12832                           ;main.c: 171:         pulsoEncoder--;
 12833     0B25  3001               	movlw	1
 12834     0B26  0021               	movlb	1	; select bank1
 12835     0B27  02CD               	subwf	_pulsoEncoder^(0+128),f
 12836     0B28                     i1l840:	
 12837                           ;main.c: 172:     }
 12838                           
 12839                           
 12840                           ;main.c: 174:     if(!flag){
 12841     0B28  0844               	movf	_flag^(0+128),w
 12842     0B29  1D03               	btfss	3,2
 12843     0B2A  2B2C               	goto	u332_21
 12844     0B2B  2B2D               	goto	u332_20
 12845     0B2C                     u332_21:
 12846     0B2C  2B38               	goto	i1l4251
 12847     0B2D                     u332_20:
 12848     0B2D                     i1l4247:
 12849                           
 12850                           ;main.c: 175:         t1 = (CCPR4H << 8) + CCPR4L;
 12851     0B2D  0026               	movlb	6	; select bank6
 12852     0B2E  0819               	movf	25,w	;volatile
 12853     0B2F  0021               	movlb	1	; select bank1
 12854     0B30  00B9               	movwf	(_t1+1)^(0+128)
 12855     0B31  0026               	movlb	6	; select bank6
 12856     0B32  0818               	movf	24,w	;volatile
 12857     0B33  0021               	movlb	1	; select bank1
 12858     0B34  00B8               	movwf	_t1^(0+128)
 12859     0B35                     i1l4249:
 12860                           
 12861                           ;main.c: 176:         flag = 0x01;
 12862     0B35  01C4               	clrf	_flag^(0+128)
 12863     0B36  0AC4               	incf	_flag^(0+128),f
 12864                           
 12865                           ;main.c: 177:     } else {
 12866     0B37  2B42               	goto	i1l843
 12867     0B38                     i1l4251:
 12868                           
 12869                           ;main.c: 178:         t2 = (CCPR4H << 8) + CCPR4L;
 12870     0B38  0026               	movlb	6	; select bank6
 12871     0B39  0819               	movf	25,w	;volatile
 12872     0B3A  0021               	movlb	1	; select bank1
 12873     0B3B  00B7               	movwf	(_t2+1)^(0+128)
 12874     0B3C  0026               	movlb	6	; select bank6
 12875     0B3D  0818               	movf	24,w	;volatile
 12876     0B3E  0021               	movlb	1	; select bank1
 12877     0B3F  00B6               	movwf	_t2^(0+128)
 12878                           
 12879                           ;main.c: 179:         flag = 0x02;
 12880     0B40  3002               	movlw	2
 12881     0B41  00C4               	movwf	_flag^(0+128)
 12882     0B42                     i1l843:
 12883     0B42  0008               	return
 12884     0B43                     __end_of_interrupcaoCCP4:
 12885     007E                     btemp	set	126	;btemp
 12886     007E                     int$flags	set	126
 12887     007E                     wtemp0	set	126
 12888                           
 12889                           	psect	idloc
 12890                           
 12891                           ;Config register IDLOC0 @ 0x8000
 12892                           ;	unspecified, using default values
 12893     8000                     	org	32768
 12894     8000  3FFF               	dw	16383
 12895                           
 12896                           ;Config register IDLOC1 @ 0x8001
 12897                           ;	unspecified, using default values
 12898     8001                     	org	32769
 12899     8001  3FFF               	dw	16383
 12900                           
 12901                           ;Config register IDLOC2 @ 0x8002
 12902                           ;	unspecified, using default values
 12903     8002                     	org	32770
 12904     8002  3FFF               	dw	16383
 12905                           
 12906                           ;Config register IDLOC3 @ 0x8003
 12907                           ;	unspecified, using default values
 12908     8003                     	org	32771
 12909     8003  3FFF               	dw	16383
 12910                           
 12911                           	psect	config
 12912                           
 12913                           ;Config register CONFIG1 @ 0x8007
 12914                           ;	Oscillator Selection
 12915                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 12916                           ;	Watchdog Timer Enable
 12917                           ;	WDTE = OFF, WDT disabled
 12918                           ;	Power-up Timer Enable
 12919                           ;	PWRTE = OFF, PWRT disabled
 12920                           ;	MCLR Pin Function Select
 12921                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 12922                           ;	Flash Program Memory Code Protection
 12923                           ;	CP = OFF, Program memory code protection is disabled
 12924                           ;	Data Memory Code Protection
 12925                           ;	CPD = OFF, Data memory code protection is disabled
 12926                           ;	Brown-out Reset Enable
 12927                           ;	BOREN = ON, Brown-out Reset enabled
 12928                           ;	Clock Out Enable
 12929                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 12930                           ;	Internal/External Switchover
 12931                           ;	IESO = ON, Internal/External Switchover mode is enabled
 12932                           ;	Fail-Safe Clock Monitor Enable
 12933                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 12934     8007                     	org	32775
 12935     8007  3FE4               	dw	16356
 12936                           
 12937                           ;Config register CONFIG2 @ 0x8008
 12938                           ;	Flash Memory Self-Write Protection
 12939                           ;	WRT = OFF, Write protection off
 12940                           ;	PLL Enable
 12941                           ;	PLLEN = OFF, 4x PLL disabled
 12942                           ;	Stack Overflow/Underflow Reset Enable
 12943                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 12944                           ;	Brown-out Reset Voltage Selection
 12945                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 12946                           ;	Low-Voltage Programming Enable
 12947                           ;	LVP = ON, Low-voltage programming enabled
 12948     8008                     	org	32776
 12949     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    16
    Data        2
    BSS         47
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     19      80
    BANK2            80      0       2
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    memset@s	PTR unsigned char  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    txSpi@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controleMovimento(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controleMovimento(), TMR4_DefaultInterruptHandler(), NULL(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> interrupcaoCCP4(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> interrupcaoCCP4(), CCP4_DefaultCallBack(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), NULL(), 

    SPI1_ExchangeBlock@block	PTR void  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(BANK1[2]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(BANK1[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), NULL(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS1(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_chegadaS1(), chegadaS1(), NULL(), IOCBF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR4_CallBack->_controleMovimento
    _controleMovimento->i1_matrixUpdate
    _sendInfo->___fltol
    _bin2bcd->_memset
    ___xxtofl->_ADC_GetConversion
    ___xxtofl->_abs
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _chegadaS2->i1_matrixUpdate
    i1_chegadaS1->i1_matrixUpdate
    _chegadaS4->i1_matrixUpdate
    _chegadaS3->i1_matrixUpdate
    i1_matrixUpdate->i1_txSpi
    i1_txSpi->i1_SPI1_ExchangeBlock
    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->_sendInfo
    _sendInfo->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK1

    _main->_initMatrix
    _organizaTrajeto->_TMR4_WriteTimer
    _initMatrix->_txSpi
    _chegadaS1->_matrixUpdate
    _matrixUpdate->_txSpi
    _txSpi->_SPI1_ExchangeBlock
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4138
                                             17 BANK1      2     2      0
                   _CCP4_SetCallBack
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR4_SetInterruptHandler
                          _chegadaS1
                         _initMatrix
                       _isValidFloor
                    _organizaTrajeto
 ---------------------------------------------------------------------------------
 (1) _organizaTrajeto                                      3     3      0     134
                                              1 BANK1      3     3      0
                    _TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR4_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _isValidFloor                                         2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initMatrix                                           9     9      0     962
                                              8 BANK1      9     9      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (1) _chegadaS1                                            0     0      0     852
                    _TMR4_StartTimer
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (2) _matrixUpdate                                         5     5      0     852
                                              8 BANK1      3     3      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (2) _txSpi                                                3     1      2     570
                                              5 BANK1      3     1      2
                 _SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeBlock                                   5     3      2     199
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1164
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     348
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     174
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0      88
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   12204
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0     991
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0     991
                                NULL *
       _TMR4_DefaultInterruptHandler *
                  _controleMovimento *
 ---------------------------------------------------------------------------------
 (8) _controleMovimento                                    2     2      0     991
                                             11 COMMON     2     2      0
                 _PWM3_LoadDutyValue
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0    7583
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0    7583
                                NULL *
       _TMR0_DefaultInterruptHandler *
                           _sendInfo *
 ---------------------------------------------------------------------------------
 (8) _sendInfo                                            12    12      0    7583
                                             66 BANK0     12    12      0
                  _ADC_GetConversion
                       _EUSART_Write
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (9) _bin2bcd                                             11     9      2    1562
                                             10 COMMON     2     0      2
                                              0 BANK0      9     9      0
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                             10     6      4     904
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) ___xxtofl                                            14    10      4     550
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fltol                                             10     6      4     457
                                             12 COMMON     2     2      0
                                             58 BANK0      8     4      4
                  _ADC_GetConversion (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) ___flmul                                             26    18      8    2873
                                             32 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (10) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (9) ___fldiv                                             26    18      8    1425
                                              6 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0    1504
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_ISR                                           0     0      0    1013
                                NULL *
     _IOCBF3_DefaultInterruptHandler *
                          _chegadaS2 *
 ---------------------------------------------------------------------------------
 (8) _chegadaS2                                            0     0      0    1013
                 _PWM3_LoadDutyValue
                  i1_TMR4_StartTimer
                  i1_TMR4_WriteTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_ISR                                           0     0      0     491
                                NULL *
     _IOCBF0_DefaultInterruptHandler *
                        i1_chegadaS1 *
 ---------------------------------------------------------------------------------
 (8) i1_chegadaS1                                          0     0      0     491
                  i1_TMR4_StartTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CMP2_ISR                                             0     0      0    1013
                          _chegadaS4
 ---------------------------------------------------------------------------------
 (7) _chegadaS4                                            0     0      0    1013
                 _PWM3_LoadDutyValue
                  i1_TMR4_StartTimer
                  i1_TMR4_WriteTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (6) _CMP1_ISR                                             0     0      0    1013
                          _chegadaS3
 ---------------------------------------------------------------------------------
 (7) _chegadaS3                                            0     0      0    1013
                 _PWM3_LoadDutyValue
                  i1_TMR4_StartTimer
                  i1_TMR4_WriteTimer
                     i1_matrixUpdate
 ---------------------------------------------------------------------------------
 (9) i1_matrixUpdate                                       5     5      0     491
                                              8 COMMON     3     3      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (10) i1_txSpi                                             3     1      2     212
                                              5 COMMON     3     1      2
               i1_SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (11) i1_SPI1_ExchangeBlock                                5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) i1_TMR4_WriteTimer                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) i1_TMR4_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PWM3_LoadDutyValue                                   4     2      2     500
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _CCP4_CaptureISR                                      2     2      0     100
                                              2 COMMON     2     2      0
                                NULL *
               _CCP4_DefaultCallBack *
                    _interrupcaoCCP4 *
 ---------------------------------------------------------------------------------
 (7) _interrupcaoCCP4                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _CCP4_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _SPI1_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _chegadaS1
     _TMR4_StartTimer
     _matrixUpdate
       _txSpi
         _SPI1_ExchangeBlock
   _initMatrix
     _txSpi
   _isValidFloor
   _organizaTrajeto
     _TMR4_WriteTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     NULL(Fake) *
     _CCP4_DefaultCallBack *
     _interrupcaoCCP4 *
   _CMP1_ISR
     _chegadaS3
       _PWM3_LoadDutyValue
       i1_TMR4_StartTimer
       i1_TMR4_WriteTimer
       i1_matrixUpdate
         i1_txSpi
           i1_SPI1_ExchangeBlock
   _CMP2_ISR
     _chegadaS4
       _PWM3_LoadDutyValue
       i1_TMR4_StartTimer
       i1_TMR4_WriteTimer
       i1_matrixUpdate
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       NULL(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       i1_chegadaS1 *
         i1_TMR4_StartTimer
         i1_matrixUpdate
     _IOCBF3_ISR
       NULL(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _chegadaS2 *
         _PWM3_LoadDutyValue
         i1_TMR4_StartTimer
         i1_TMR4_WriteTimer
         i1_matrixUpdate
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _sendInfo *
         _ADC_GetConversion
         _EUSART_Write
         ___fldiv
           _ADC_GetConversion (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversion (ARG)
             _abs (ARG)
           _abs (ARG)
         ___flmul
           _ADC_GetConversion (ARG)
           __Umul8_16 (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
           _abs (ARG)
         ___fltol
           _ADC_GetConversion (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _abs
         _bin2bcd
           _memset
   _TMR4_ISR
     _TMR4_CallBack
       NULL(Fake) *
       _TMR4_DefaultInterruptHandler *
       _controleMovimento *
         _PWM3_LoadDutyValue
         i1_matrixUpdate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     13      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       2      10        2.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      B0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 19 22:02:49 2023

                              _CCP4_Initialize 099A                                   ___fldiv@aexp 003F  
                                 ___fldiv@bexp 003E               ??_IOCBF3_DefaultInterruptHandler 0070  
              ?_IOCBF3_DefaultInterruptHandler 0070                             _SPI1_ExchangeBlock 0B43  
                                 ___fldiv@sign 0037                                             l11 08E3  
                      __end_of_organizaTrajeto 07F5                              ??_CMP1_Initialize 00CE  
                                           l79 0910                                             _t1 00B8  
                                           _t2 00B6                         __end_of_FVR_Initialize 086B  
                      __end_of_interrupcaoCCP4 0B43                                _timer0ReloadVal 006E  
                          __Umul8_16@word_mpld 0076                                            l205 0BCB  
                                          l150 0904                                            l217 089C  
                                          l410 0896                                            l322 086A  
                                          l227 08A2                                            l413 08DA  
                                          l407 0890                                            l271 0B9A  
                                          l274 08C1                                            l434 08F8  
                                          l604 09F8                                            l452 0B4E  
                                          l277 086E                                            l438 0D31  
                                          l294 08C9                                            l454 0B53  
                                          l527 09BD                                            l376 0878  
                                          l368 0AF1                                            l456 0B6C  
                                          l385 0957                                            l626 08A8  
                                          l706 08AE                                            l389 0966  
                                          l813 07F4                                            l566 08D1  
                                          l655 088A                                            l807 07E5  
                                          l649 09AB                                            l681 0866  
                                          l850 0976                                            l818 09E3  
                                          l690 08B4                                            l678 09D0  
                                          l846 0969                                            l942 07AF  
                                          l859 0AA9                                            l869 0C82  
                                          l899 0C33                                            _PR2 001B  
                                          _PR4 0416                            ?_SPI1_ExchangeBlock 00CE  
                              _timer1ReloadVal 00B0                                            _abs 0A74  
                                 _pulsoEncoder 00CD                                            _inc 00EF  
                                          _mov 00C9                 ?_EUSART_SetFramingErrorHandler 00CE  
                              _TMR2_Initialize 08CA                 CCP4_SetCallBack@customCallBack 00CE  
                                          wreg 0009                               _CCP4_SetCallBack 0885  
                                 ___flmul@aexp 0052                                   ___flmul@bexp 0053  
                      SPI1_ExchangeBlock@block 00D1                                   ___flmul@sign 004D  
                                 ___flmul@temp 0058                                   ___flmul@prod 0054  
                      __end_of_CCP4_CaptureISR 099A                                   ?_EUSART_Read 0070  
                                  i1_chegadaS1 0BCC                                   ___fltol@exp1 007D  
                                         ?_abs 0070                                           l4101 0BAB  
                                         l4111 0BB7                                           l4103 0BAC  
                                         l4201 09A7                                           l4041 08FB  
                                         l4121 0BCA                                           l4113 0BB8  
                                         l4105 0BB3                                           l4203 09A9  
                                         l4043 0900                                           l4115 0BB9  
                                         l4107 0BB5                                           l4211 09B2  
                                         l4045 0902                                           l4221 0AD7  
                                         l4117 0BBA                                           l4109 0BB6  
                                         l4141 08F4                                           l4213 09B3  
                                         l4205 09AC                                           l4311 095C  
                                         l4039 08F9                                           l4223 0ADF  
                                         l4119 0BC2                                           l4143 08F6  
                                         l4135 08EE                                           l4215 09BA  
                                         l4207 09AE                                           l4151 086B  
                                         l4303 0B6D                                           l4313 095E  
                                         l4305 0874                                           l4321 0CDC  
                                         l4225 0AE7                                           l4217 0ACD  
                                         l4153 0867                                           l4145 08BB  
                                         l4137 08F1                                           l4209 09B0  
                                         l4161 09C4                                           l4233 0864  
                                         l3281 0B48                                           l4401 0C34  
                                         l4315 0963                                           l4331 0D2F  
                                         l4323 0CE1                                           l4227 0AEF  
                                         l4219 0AD6                                           l4147 08BE  
                                         l4091 0B9E                                           l4139 08F2  
                                         l4171 08CE                                           l4163 09C6  
                                         l4155 09BE                                           l3283 0B54  
                                         l4411 0C40                                           l4235 08B1  
                                         l4317 0965                                           l4309 0957  
                                         l4325 0D05                                           l4149 08BF  
                                         l4093 0BA1                                           l4181 09EE  
                                         l4173 08CF                                           l4165 09CD  
                                         l4157 09C1                                           l3285 0B5B  
                                         l4261 0A93                                           l4253 0A8E  
                                         l4413 0C46                                           l4327 0D06  
                                         l4191 08C6                                           l4095 0BA3  
                                         l4183 09EF                                           l4175 09E4  
                                         l4167 08CA                                           l4159 09C2  
                                         l3287 0B60                                           l3279 0B45  
                                         l4263 0A99                                           l4431 0C6C  
                                         l4407 0C37                                           l4329 0D18  
                                         l4193 099A                                           l3721 088B  
                                         l4097 0BA6                                           l4089 0B9B  
                                         l4185 09F0                                           l4177 09E9  
                                         l4169 08CD                                           l4265 0AA1  
                                         l4441 0C02                                           l4433 0C6F  
                                         l4425 0C48                                           l4409 0C3C  
                                         l4521 0739                                           l4187 08C2  
                                         l4195 099D                                           l3723 0891  
                                         l4099 0BA8                                           l4179 09EC  
                                         l3731 08A9                                           l4267 0AA4  
                                         l4259 0A91                                           l4451 0C0D  
                                         l4443 0C05                                           l4427 0C63  
                                         l4419 0C47                                           l4371 07B2  
                                         l4531 074D                                           l4523 073D  
                                         l4189 08C5                                           l4197 099E  
                                         l3725 08D2                                           l3717 0897  
                                         l4461 0C1C                                           l4453 0C10  
                                         l4445 0C07                                           l4437 0C77  
                                         l4429 0C66                                           l4381 07DF  
                                         l4373 07CA                                           l4541 0763  
                                         l4533 0752                                           l4525 0740  
                                         l4517 070C                                           l4199 099F  
                                         l3719 089D                                           l3727 08A3  
                                         l4471 0C2C                                           l4463 0C21  
                                         l4455 0C12                                           l4447 0C09  
                                         l4439 0C7C                                           l4391 09D4  
                                         l4383 07EB                                           l4375 07CE  
                                         l4551 077F                                           l4543 076C  
                                         l4535 0758                                           l4527 0741  
                                         l4519 0737                                           l3729 0885  
                                         l3833 096B                                           l4473 0C30  
                                         l4465 0C25                                           l4457 0C14  
                                         l4449 0C0B                                           l4393 09DA  
                                         l4385 07ED                                           l4377 07D4  
                                         l4561 0790                                           l4553 0783  
                                         l4545 0770                                           l4537 075A  
                                         l4529 0745                                           l3835 0974  
                                         l4467 0C26                                           l4459 0C16  
                                         l4395 09E0                                           l4387 07F2  
                                         l4379 07D9                                           l4563 0793  
                                         l4547 0773                                           l4539 0760  
                                         l4469 0C29                                           l4397 09E2  
                                         l4389 09D3                                           l4557 0786  
                                         l4549 0776                                           l4559 078C  
                                         l4569 0799                                           l4667 07A1  
                                         l3981 08E0                                           l3983 0905  
                                         l3975 08DB                                           l3985 0907  
                                         l3977 08DE                                           l3987 090C  
                                         l3979 08DF                                           l3989 090E  
                                ?_isValidFloor 0070                                           u2030 0B53  
                                         u2031 0B52                                           u2040 0B6C  
                                         u2041 0B6B                                           _LATA 010C  
                                         _LATB 010D                                           u3330 0AA9  
                                         u3331 0AA8                                           u3500 0C46  
                                         u3501 0C45                                           u3510 0C6C  
                                         u3511 0C6B                                           u3360 095C  
                                         u3520 0C82                                           u3440 07CA  
                                         u3424 07B8                                           u3361 095B  
                                         u3521 0C81                                           u3441 07C9  
                                         u3425 07B7                                           u3370 0963  
                                         u3530 0C1C                                           u3450 07D4  
                                         u3434 07C1                              ??_CMP2_Initialize 00CE  
                                         u3371 0962                                           u3531 0C1B  
                                         u3451 07D3                                           u3435 07C0  
                                         u3380 0CE1                                           u3460 07DF  
                                         u3700 076C                                           u3381 0CE0  
                                         u3461 07DE                                           u3701 076B  
                                         u3470 07EB                                           u3710 077F  
                                         u3471 07EA                                           u3711 077E  
                                         u3480 09DA                                           u3720 078C  
                                         u3481 09D9                                           u3721 078B  
                                         u3490 09E0                                           u3491 09DF  
                                         i1l14 0A0F                                           u3670 074D  
                                         u3671 074C                                           u3680 0758  
                                         u3681 0757                                           u3690 0760  
                                         u3691 075F                                           i1l85 0884  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _WPUA 020C  
                                         _WPUB 020D                                           abs@a 0070  
                                         _flag 00C4                                           _main 070C  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                           ??_SPI1_ExchangeBlock 00D0  
                    i1SPI1_ExchangeBlock@block 0073                                           start 0056  
                              ___fldiv@new_exp 0038                                __end_ofi1_txSpi 0939  
                             __end_of_CMP1_ISR 087F                               __end_of_CMP2_ISR 0885  
                   ??_TMR4_SetInterruptHandler 00D0                                          ??_abs 0072  
                           i1matrixUpdate@data 0078                        __end_of_TMR0_Initialize 09F9  
               ??_TMR0_DefaultInterruptHandler 0070                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 08C2  
                            isValidFloor@floor 00CF                                  ___fltol@sign1 007C  
                                        ?_main 0070                                __end_of___fldiv 0661  
                       ??_CCP4_DefaultCallBack 0072                                __end_of___flmul 02AA  
             SPI1_Open@spi1UniqueConfiguration 00D1                                __end_of___fltol 0E64  
                                        _T1CON 0018                                          _T2CON 001C  
                              __end_of_bin2bcd 1000                                          _T4CON 0417  
                                        i1l210 0987                                          i1l220 085D  
                                        i1l214 0947                                          i1l230 085E  
                                        i1l224 0956                                          i1l312 0A73  
                                        i1l156 087E                                          i1l309 0A6B  
                                        i1l452 0AFC                                          i1l508 0054  
                                        i1l454 0B01                                          i1l623 091D  
                                        i1l703 092A                                          i1l456 0B18  
                                        i1l392 08E5                                          i1l395 08ED  
                                        i1l619 0A3F                                          i1l652 0999  
                                        i1l629 085F                                          i1l709 0860  
                                        i1l646 085C                                          i1l910 0CD9  
                                        i1l831 02EC                                          i1l840 0B28  
                                        i1l681 0863                                          i1l921 0D8D  
                                        i1l913 0D58                                          i1l690 0873  
                                        i1l850 0938                                          i1l843 0B42  
                                        i1l924 0DB6                                          i1l836 04B6  
                                        i1l828 02D9                                          i1l846 092C  
                                        i1l934 0DF2                                          i1l970 0FFF  
                                        i1l859 0A59                                          i1l883 0EA3  
                                        i1l699 0A26                                          i1l966 0F93  
                                        i1l894 0EDD                                          i1l967 0FA6  
                                        i1l968 0FB8                                          i1l969 0FCB  
                                        i1l899 0BFD                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                     _RXaccepted 00C6  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 09BE                      ?_TMR0_SetInterruptHandler 00CE  
                             __end_of_TMR0_ISR 0A40                                          _dTemp 00C2  
                             __end_of_TMR4_ISR 0A27                                          _oTemp 00C3  
                      __end_of_PIN_MANAGER_IOC 0988                                 _WDT_Initialize 086B  
                               ??_isValidFloor 00CE                                          _motor 00BF  
                                        _txSpi 0967                                          _state 00CA  
                      __end_of_PWM3_Initialize 08E4                        __end_of_TMR1_Initialize 09BE  
                                        pclath 000A                                          status 0003  
                      __end_of_CCP4_Initialize 09AC                                          wtemp0 007E  
                                txSpi@dataSize 00D3                               ??i1_matrixUpdate 0078  
                              __initialization 0058                                i1matrixUpdate@i 007A  
                                 __end_of_main 07B2                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 08D2                               ?_organizaTrajeto 0070  
                  ?_INTERRUPT_InterruptManager 0070                               ?_interrupcaoCCP4 0070  
                                       ??_main 00DF                            _chegadaS1$intlevel0 0C02  
                      _IOCBF0_InterruptHandler 00ED                         __end_of_WDT_Initialize 086F  
                             ?_CCP4_CaptureISR 0070              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00E7                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         ?_txSpi 00D3  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0879                                         _BORCON 0116  
                                       _T1GCON 0019                                         i1l1321 0E4E  
                                       i1l1314 0E63                                         i1l1324 0E63  
                                       i1l1501 0659                                         i1l4001 0D9E  
                                       i1l4011 0DC0                                         i1l4003 0DA4  
                                       i1l1523 0229                                         i1l3211 0F00  
                                       i1l3203 0EE8                                         u200_25 0A08  
                                       i1l4021 0DD1                                         i1l4013 0DC2  
                                       i1l4005 0DA9                                         i1l1517 02A9  
                                       i1l3213 0F05                                         i1l3205 0EED  
                                       i1l4031 0DE4                                         i1l4023 0DD5  
                                       i1l4015 0DC4                                         i1l4007 0DB3  
                                       i1l3231 0F51                                         i1l3223 0F27  
                                       i1l3215 0F0B                                         i1l3207 0EF6  
                                       i1l3311 0FC1                                         i1l3303 0F81  
                                       u201_20 0A6F                                         i1l1536 0ABC  
                                       i1l4033 0DE9                                         i1l4025 0DD8  
                                       i1l4017 0DC6                                         i1l4009 0DBF  
                                       u201_21 0A6E                                         i1l1529 029D  
                                       i1l3321 0DFD                                         i1l1561 0684  
                                       i1l3241 0F67                                         i1l3233 0F55  
                                       i1l3225 0F36                                         i1l3217 0F14  
                                       i1l3313 0FE6                                         i1l3305 0F8A  
                                       i1l1538 0ACC                                         i1l4051 0D36  
                                       i1l4035 0DEC                                         i1l4027 0DDB  
                                       i1l4019 0DCC                                         i1l4123 0939  
                                       i1l4131 094F                                         i1l3411 0547  
                                       i1l3403 0529                                         i1l3251 0AC3  
                                       i1l3243 0AAB                                         i1l3331 0E20  
                                       i1l1563 070B                                         i1l3235 0F5A  
                                       i1l3219 0F1D                                         i1l3315 0FEC  
                                       i1l3307 0F9C                                         i1l1580 0A8D  
                                       i1l3261 09F9                                         i1l4061 0D55  
                                       i1l4053 0D3A                                         i1l4037 0DF1  
                                       i1l4029 0DDE                                         i1l4125 0940  
                                       i1l4133 0954                                         i1l4301 0984  
                                       i1l1493 05E6                                         i1l3421 0566  
                                       i1l3413 054F                                         i1l3405 052E  
                                       i1l1477 0508                                         i1l3253 0AC8  
                                       i1l3245 0AAD                                         i1l3501 0079  
                                       i1l3341 0E2E                                         i1l3333 0E22  
                                       i1l3325 0E06                                         i1l3237 0F5F  
                                       i1l3229 0F40                                         i1l3309 0FAF  
                                       i1l1574 06D7                                         i1l3191 0B02  
                                       i1l4071 0D68                                         i1l4063 0D61  
                                       i1l4055 0D40                                         i1l4047 0D32  
                                       i1l4127 0945                                         i1l3271 0A6F  
                                       i1l3263 0A5B                                         i1l3431 0592  
                                       i1l3423 0574                                         i1l3415 0557  
                                       i1l1479 0660                                         i1l3247 0AB4  
                                       i1l3511 008E                                         i1l3503 007A  
                                       i1l3351 0E53                                         i1l3335 0E26  
                                       i1l3343 0E3E                                         i1l3327 0E17  
                                       i1l3319 0DF3                                         i1l1575 06E3  
                                       i1l1567 06BD                                         i1l1583 0A8D  
                                       i1l3239 0F63                                         i1l4231 0918  
                                       u202_20 08EA                                         u210_20 0FD8  
                                       i1l4241 0B19                                         i1l3193 0B08  
                                       i1l3257 092E                                         i1l4081 0D7D  
                                       i1l4073 0D6E                                         i1l4065 0D62  
                                       i1l4057 0D46                                         i1l4049 0D34  
                                       i1l4129 0948                                         i1l3265 0A65  
                                       u202_21 08E9                                         i1l3441 05AD  
                                       i1l3433 0593                                         i1l3425 0578  
                                       i1l3417 055F                                         i1l3409 0537  
                                       i1l3361 04C1                                         i1l3249 0AB8  
                                       i1l3521 00A2                                         i1l3513 0096  
                                       i1l3505 007F                                         i1l3353 0E58  
                                       i1l3329 0E18                                         i1l1498 0632  
                                       i1l4251 0B38                                         i1l4243 0B1F  
                                       i1l3195 0B0C                                         i1l3187 0AF3  
                                       i1l3259 0936                                         i1l4083 0D80  
                                       i1l4075 0D73                                         i1l4067 0D64  
                                       i1l4059 0D4B                                         i1l3267 0A66  
                                       i1l3275 08E5                                         i1l1499 064C  
                                       i1l3451 05C2                                         i1l3443 05AF  
                                       i1l3435 059B                                         i1l3427 0579  
                                       i1l3419 0561                                         i1l3371 04D5  
                                       i1l3363 04C2                                         i1l3355 04B7  
                                       i1l3611 0257                                         i1l3603 022E  
                                       i1l3531 00BE                                         i1l3523 00A7  
                                       i1l3515 009B                                         i1l3507 0084  
                                       i1l3291 0A81                                         i1l1587 0F6D  
                                       i1l4245 0B25                                         i1l3189 0AF6  
                                       i1l4085 0D86                                         i1l4077 0D77  
                                       i1l4069 0D66                                         i1l3269 0A69  
                                       i1l3277 08EA                                         i1l3461 05E3  
                                       i1l3445 05B6                                         i1l3453 05C6  
                                       i1l3429 0580                                         i1l3437 059F  
                                       i1l3381 04EA                                         i1l3365 04C7  
                                       i1l3373 04D7                                         i1l3357 04BB  
                                       i1l3621 0289                                         i1l3605 0233  
                                       i1l3613 025B                                         i1l3541 00DC  
                                       i1l3533 00C3                                         i1l3525 00AC  
                                       i1l3517 009D                                         i1l3509 008C  
                                       i1l3349 0E45                                         i1l3197 0EDF  
                                       u210_25 0FD4                                         i1l3293 0F6E  
                                       i1l4229 0911                                         i1l4341 0A3C  
                                       i1l4237 091E                                         i1l4501 003A  
                                       i1l4247 0B2D                                         i1l4343 0988  
                                       i1l4087 0D8B                                         i1l4079 0D7A  
                                       i1l3471 05FC                                         i1l3455 05CA  
                                       i1l3447 05BA                                         i1l3439 05A5  
                                       i1l3391 04FE                                         i1l3383 04EB  
                                       i1l3375 04DF                                         i1l3367 04CC  
                                       i1l3359 04BD                                         i1l3631 02A1  
                                       i1l3623 028B                                         i1l3615 0268  
                                       i1l3607 023B                                         i1l3551 0133  
                                       i1l3543 00E9                                         i1l3535 00C8  
                                       i1l3527 00B4                                         i1l3519 00A1  
                                       i1l3199 0EE1                                         i1l3295 0F79  
                                       i1l4335 0A27                                         i1l4239 0925  
                                       i1l4351 0A12                                         i1l4511 0051  
                                       i1l4503 003F                                         u211_20 0FEC  
                                       i1l4249 0B35                                         i1l4345 098A  
                                       i1l3481 0643                                         i1l3473 0614  
                                       i1l3465 05EB                                         i1l3457 05CB  
                                       i1l3449 05BB                                         i1l3385 04F0  
                                       i1l3393 0500                                         i1l3377 04E4  
                                       i1l3369 04D4                                         i1l3625 0296  
                                       i1l3617 0272                                         i1l3609 023F  
                                       i1l3561 0164                                         i1l3553 0140  
                                       i1l3545 0101                                         i1l3529 00B6  
                                       i1l3641 067C                                         i1l3289 0A74  
                                       u211_21 0FEB                                         i1l3297 0F80  
                                       i1l3801 045D                                         i1l4337 0A28  
                                       i1l4353 0A20                                         i1l4505 0044  
                                       i1l4347 098F                                         i1l4291 0879  
                                       i1l3483 064B                                         i1l3467 05F0  
                                       i1l3475 0618                                         i1l3459 05CF  
                                       i1l3395 0510                                         i1l3387 04F5  
                                       i1l3379 04E6                                         i1l3627 029A  
                                       i1l3619 0280                                         i1l3571 01A1  
                                       i1l3563 016B                                         i1l3555 0147  
                                       i1l3547 010E                                         i1l3539 00D1  
                                       i1l3651 06A3                                         i1l3643 068C  
                                       i1l3635 0663                                         i1l3811 0482  
                                       i1l3803 046A                                         i1l4339 0A39  
                                       i1l4355 0A23                                         i1l4507 0047  
                                       i1l4293 087B                                         i1l3901 0C87  
                                       i1l3485 064F                                         i1l3477 0625  
                                       i1l3469 05F8                                         i1l3397 051C  
                                       i1l3389 04FD                                         i1l3629 029B  
                                       i1l3581 01F2                                         i1l3573 01B3  
                                       i1l3565 017D                                         i1l3557 0152  
                                       i1l3549 0126                                         i1l3661 06CD  
                                       i1l3653 06AA                                         i1l3637 0668  
                                       i1l3821 04A7                                         i1l3813 0486  
                                       i1l3805 0470                                         i1l3741 02B6  
                                       i1l3733 02AA                                         i1l4349 0A10  
                                       i1l4509 004C                                         i1l4287 087F  
                                       i1l3911 0CA6                                         i1l3903 0C8B  
                                       i1l4295 0977                                         i1l3487 0653  
                                       i1l3479 0640                                         i1l3399 0520  
                                       i1l3583 01F9                                         i1l3591 0209  
                                       i1l3575 01C8                                         i1l3567 0184  
                                       i1l3559 0159                                         i1l3495 006F  
                                       i1l3671 06FE                                         i1l3663 06D1  
                                       i1l3655 06AE                                         i1l3647 0695  
                                       i1l3639 066C                                         i1l3823 04AB  
                                       i1l3815 0493                                         i1l3807 0477  
                                       i1l3751 02BC                                         i1l3735 02AC  
                                       u212_20 0FF9                                         u300_20 0EA0  
                                       i1l3681 0870                                         i1l4289 0881  
                                       i1l3921 0CB1                                         i1l3913 0CA9  
                                       i1l3905 0C91                                         i1l4297 097C  
                                       i1l3489 0655                                         i1l3593 020D  
                                       i1l3585 01FD                                         i1l3577 01DF  
                                       i1l3569 0196                                         i1l3497 0073  
                                       i1l3673 0702                                         i1l3665 06DB  
                                       i1l3657 06B6                                         i1l3649 0698  
                                       i1l3825 04B2                                         i1l3817 0499  
                                       i1l3809 047B                                         i1l3761 02EF  
                                       i1l3753 02CB                                         i1l3737 02B1  
                                       u300_21 0E9F                                         i1l3841 0E6B  
                                       i1l4481 0011                                         i1l3691 0A44  
                                       i1l3683 0A40                                         i1l3931 0CC9  
                                       i1l3923 0CB8                                         i1l3915 0CAB  
                                       i1l3907 0C97                                         i1l4299 097F  
                                       i1l3595 020E                                         i1l3587 01FE  
                                       i1l3579 01E6                                         i1l3499 0075  
                                       i1l3675 0703                                         i1l3667 06E5  
                                       i1l3659 06C4                                         i1l3819 04A0  
                                       i1l3771 0392                                         i1l3763 02F2  
                                       i1l3755 02DE                                         i1l3747 02B7  
                                       i1l3739 02B4                                         i1l3851 0E7C  
                                       i1l3843 0E6E                                         i1l4491 0025  
                                       i1l4483 0015                                         i1l4475 0006  
                                       i1l3693 0A4A                                         i1l3941 0BCC  
                                       i1l3933 0CCE                                         i1l3925 0CBE  
                                       i1l3917 0CAD                                         i1l3909 0C9C  
                                       i1l3597 0212                                         i1l3589 0205  
                                       u220_25 0E46                                         i1l3669 06F9  
                                       u212_25 0FF5                                         i1l3781 041C  
                                       i1l3773 0394                                         i1l3765 02F5  
                                       i1l3757 02E1                                         i1l3749 02B7  
                                       i1l3845 0E74                                         i1l3861 0E84  
                                       i1l3837 0E64                                         i1l4493 002A  
                                       i1l4485 0019                                         i1l4477 000A  
                                       i1l3679 0861                                         i1l3695 0A52  
                                       i1l3951 0BD7                                         i1l3943 0BCF  
                                       i1l3935 0CD0                                         i1l3927 0CC2  
                                       i1l3919 0CAF                                         i1l3599 0226  
                                       i1l3791 0434                                         i1l3783 0420  
                                       i1l3775 03BF                                         i1l4671 0300  
                                       i1l3759 02E5                                         i1l3767 02F8  
                                       i1l3871 0EB2                                         i1l3863 0E9B  
                                       i1l3839 0E65                                         i1l4495 002D  
                                       i1l4487 001C                                         i1l4479 000E  
                                       u221_20 0E53                                         u213_20 0DFD  
                                       u205_20 0A81                                         u301_20 0EAC  
                                       i1l3697 0A54                                         i1l3689 0A42  
                                       i1l3961 0BE6                                         i1l3953 0BDA  
                                       i1l3945 0BD1                                         i1l3937 0CD3  
                                       i1l3929 0CC5                                         u221_21 0E52  
                                       u213_21 0DFC                                         u205_21 0A80  
                                       i1l3793 0445                                         i1l3785 0426  
                                       i1l3777 0412                                         i1l3769 030B  
                                       i1l3881 0EC6                                         i1l3873 0EB8  
                                       u301_21 0EAB                                         i1l3865 0EA0  
                                       i1l3849 0E77                                         i1l4497 0032  
                                       i1l4489 0020                                         i1l3971 0BF6  
                                       i1l3963 0BEB                                         i1l3955 0BDC  
                                       i1l3947 0BD3                                         i1l3939 0CD6  
                                       i1l3795 044B                                         i1l3787 042A  
                                       i1l3779 0416                                         i1l3883 0ECC  
                                       i1l3867 0EA5                                         i1l3875 0EBB  
                                       i1l4499 0037                                         i1l3973 0BFA  
                                       i1l3965 0BEF                                         i1l3957 0BDE  
                                       i1l3949 0BD5                                         u205_25 0A7D  
                                       i1l3797 0452                                         i1l3789 0430  
                                       i1l3877 0EBD                                         i1l3885 0ED4  
                                       i1l3869 0EAC                                         i1l4669 0E8D  
                                       i1l3991 0D8E                                         i1l3967 0BF0  
                                       i1l3959 0BE0                                         i1l3799 0459  
                                       i1l3887 0ED7                                         i1l3879 0EBF  
                                       u310_20 0CCE                                         u230_20 052E  
                                       u222_20 0E58                                         u214_20 0E13  
                                       u206_20 0F8A                                         u302_20 0EB2  
                                       i1l3993 0D90                                         i1l3969 0BF3  
                                       u310_21 0CCD                                         i1l3897 0C83  
                                       u230_21 052D                                         u222_21 0E57  
                                       u206_21 0F89                                         i1l3889 0EDA  
                                       u302_21 0EB1                                         i1l3995 0D92  
                                       i1l3899 0C85                                         i1l3997 0D94  
                                       u214_25 0E0F                                         i1l3999 0D98  
                                       u311_20 0BE6                                         u231_20 0566  
                                       u223_20 04C1                                         u215_20 0E26  
                                       u207_20 0F9C                                         u303_20 0EC6  
                                       u311_21 0BE5                                         u231_21 0565  
                                       u223_21 04C0                                         u215_21 0E25  
                                       u207_21 0F9B                                         u303_21 0EC5  
                                       u320_20 0D3A                                         u312_20 0D98  
                                       u240_20 05BA                                         u224_20 04C7  
                                       u216_20 0E2D                                         u208_20 0FAF  
                                       u304_20 0ECC                                         u320_21 0D39  
                                       u312_21 0D97                                         u240_21 05B9  
                                       u224_21 04C6                                         u216_21 0E2C  
                                       u208_21 0FAE                                         u304_21 0ECB  
                                       u232_25 0567                                    initMatrix@i 00DC  
                                  initMatrix@j 00DE                                         u321_20 0D40  
                                       u313_20 0D9E                                         u305_20 0C8B  
                                       u225_20 04CC                                         u209_20 0FC1  
                                  initMatrix@k 00DB                                         u321_21 0D3F  
                                       u313_21 0D9D                                         u305_21 0C8A  
                                       u225_21 04CB                                         u209_21 0FC0  
                                       u241_25 05BC                                         u233_25 056E  
                                       u217_25 0E2F                        TMR4_WriteTimer@timerVal 00CE  
                                       u322_20 0D46                                         u314_20 0DA4  
                                       u306_20 0C91                                         u250_20 0640  
                                       u242_20 05CA                                         u234_20 0578  
                                       u226_20 04EA                                         u218_20 0E3D  
                                       u330_20 0925                                         u322_21 0D45  
                                       u314_21 0DA3                                         u306_21 0C90  
                                       u250_21 063F                                         u242_21 05C9  
                                       u234_21 0577                                         u226_21 04E9  
                                       u218_21 0E3C                                         u330_21 0924  
                                       u250_25 063C                                         u331_20 0B1F  
                                       u323_20 0D4B                                         u315_20 0DA9  
                                       u307_20 0C97                                         u251_20 0653  
                                       u243_20 05CF                                         u227_20 04F0  
                                       u219_20 0E44                                         _FVRCON 0117  
                                       u331_21 0B1E                                         u323_21 0D4A  
                                       u315_21 0DA8                                         u307_21 0C96  
                                       u251_21 0652                                         u243_21 05CE  
                                       u227_21 04EF                                         u219_21 0E43  
                                       u235_25 057A                                         u332_20 0B2D  
                                       u324_20 0D6E                                         u316_20 0DCC  
                                       u308_20 0C9C                                         u244_20 05E3  
                                       u236_20 0592                                         u228_20 04F5  
                                       u252_20 0079                                         u340_20 0A20  
                                       u332_21 0B2C                                         u324_21 0D6D  
                                       u316_21 0DCB                                         u308_21 0C9B  
                                       u244_21 05E2                                         u236_21 0591  
                                       u228_21 04F4                                         u252_21 0078  
                                       u340_21 0A1F                                         u236_25 058E  
                                       u260_25 0141                                         u325_20 0D86  
                                       u317_20 0DE4                                         u309_20 0CBE  
                                       u245_20 05EA                                         u237_20 05A5  
                                       u229_20 0510                                         u253_20 007F  
                                       u325_21 0D85                                         u317_21 0DE3  
                                       u309_21 0CBD                                         u245_21 05E9  
                                       u237_21 05A4                                         u229_21 050F  
                                       u253_21 007E                                         u261_25 016C  
                                       u190_20 0B01                                         u326_20 0D8B  
                                       u318_20 0DE9                                         u334_20 097C  
                                       u246_20 05F0                                         u238_20 05AD  
                                       u270_20 0226                                         u262_20 01BE  
                                       u254_20 0084                                         u190_21 0B00  
                                       u326_21 0D8A                                         u318_21 0DE8  
                                       u334_21 097B                                         u246_21 05EF  
                                       u238_21 05AC                                         u270_21 0225  
                                       u254_21 0083                                         u262_25 01BA  
                                       u191_20 0B18                                         u319_20 0DF1  
                                       u327_20 0940                                         u335_20 0984  
                                       u247_20 05FC                                         u271_20 022D  
                                       u263_20 01D5                                         u255_20 00A1  
                                       u191_21 0B17                                         u319_21 0DF0  
                                       u327_21 093F                                         u335_21 0983  
                                       u247_21 05FB                                         u271_21 022C  
                                       u255_21 00A0                                         u239_25 05B0  
                                       u263_25 01D1                                         u328_20 094F  
                                       u248_20 060A                                         u272_20 0233  
                                       u256_20 00A7                                         u280_20 068C  
                                       u192_20 0EE7                                         u360_20 002A  
                                       u328_21 094E                                         u272_21 0232  
                                       u256_21 00A6                                         u280_21 068B  
                                       u192_21 0EE6                                         u360_21 0029  
                                       u248_25 0606                                         u264_25 01E0  
                                       u249_20 0625                                         u273_20 023F  
                                       u257_20 00AC                                         u193_20 0EFF  
                                       u329_20 0918                                         u361_20 0032  
                                       u249_21 0624                                         u273_21 023E  
                                       u257_21 00AB                                         u193_21 0EFE  
                                       u329_21 0917                                         u361_21 0031  
                                       u249_25 0621                                         u265_25 01F3  
                                       u281_25 069D                                         u274_20 024D  
                                       u266_20 01FD                                         u258_20 00C3  
                                       u290_20 06FE                                         u282_20 06A9  
                                       u194_20 0F26                                         u362_20 0037  
                                       u354_20 000A                                         u266_21 01FC  
                                       u258_21 00C2                                         u290_21 06FD  
                                       u282_21 06A8                                         u194_21 0F25  
                                       u362_21 0036                                         u354_21 0009  
                                       u274_25 0249                                         u275_20 0268  
                                       u259_20 00C8                                         u291_20 0702  
                                       u195_20 0F3F                                         u339_20 0A39  
                                       u363_20 003F                                         u355_20 000E  
                                       u275_21 0267                                         u259_21 00C7  
                                       u291_21 0701                                         u195_21 0F3E  
                                       u339_21 0A38                                         u363_21 003E  
                                       u355_21 000D                                         u275_25 0264  
                                       u267_25 01FF                                         u283_25 06B7  
                                       u292_20 0A59                                         u276_20 0280  
                                       u268_20 020D                                         u284_20 06C3  
                                       u196_20 0F6D                                         u364_20 0044  
                                       u356_20 0015                                         u292_21 0A58  
                                       u276_21 027F                                         u268_21 020C  
                                       u284_21 06C2                                         u196_21 0F6C  
                                       u364_21 0043                                         u356_21 0014  
                                       u276_25 027C                                         u197_20 0AB8  
                                       u277_20 029A                                         u269_20 0212  
                                       u293_20 02B1                                         u365_20 004C  
                                       u357_20 0019                                         u197_21 0AB7  
                                       u277_21 0299                                         u269_21 0211  
                                       u293_21 02B0                                         u365_21 004B  
                                       u357_21 0018                                         u285_25 06C7  
                                       u286_20 06D1                                         u278_20 0668  
                                       u294_20 02BC                                         u366_20 0051  
                                       u358_20 0020                                         u286_21 06D0  
                                       u278_21 0667                                         u294_21 02BB  
                                       u366_21 0050                                         u358_21 001F  
                                       u198_25 0ABD                                         u199_20 0AC8  
                                       u287_20 06D7                                         u279_20 066C  
                                       u359_20 0025                                         u199_21 0AC7  
                                       u287_21 06D6                                         u279_21 066B  
                                       u359_21 0024                                         u295_24 02C1  
                                       u295_25 02C0                                         u288_20 06DB  
                                       u288_21 06DA                                         u296_24 02D0  
                                       u296_25 02CF                                         u289_20 06EF  
                                       u297_20 02DE                                         u297_21 02DD  
                                       u289_25 06EB                                         u298_20 02EB  
                                       _OSCCON 0099                                         u298_21 02EA  
                                       u299_20 0E74                                      ??i1_txSpi 0077  
                                       u299_21 0E73                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 070C                                _TMR4_StartTimer 0864  
                            __end_of_SPI1_Open 0D32                                   _CCPTMRS0bits 029E  
                    i1TMR4_WriteTimer@timerVal 0070                                      ??___fldiv 002E  
                                    ??___flmul 0048                                      ??___fltol 005E  
                                    ??_bin2bcd 0020                                         _altura 00C0  
                                ?_matrixUpdate 0070                               ?_TMR0_Initialize 0070  
                                       _memset 0EDE                        __end_of_TMR4_Initialize 09D1  
                                       _waitRX 00C7                                         _origem 00CC  
                                _CCP4_CallBack 00E3                               __end_of_sendInfo 04B7  
         __end_of_TMR4_DefaultInterruptHandler 0861                   _TMR4_DefaultInterruptHandler 0860  
                              _TMR4_WriteTimer 08AF                                ?_WDT_Initialize 0070  
                     i1SPI1_ExchangeBlock@data 0074                       ADC_GetConversion@channel 0073  
                                    ?_CMP1_ISR 0070                          __end_of_TMR0_CallBack 091E  
                                    ?_CMP2_ISR 0070       TMR4_SetInterruptHandler@InterruptHandler 00CE  
     TMR0_SetInterruptHandler@InterruptHandler 00CE     IOCBF3_SetInterruptHandler@InterruptHandler 00CE  
   IOCBF0_SetInterruptHandler@InterruptHandler 00CE                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCBF0_ISR 007B                                   ??_IOCBF3_ISR 007B  
                             ?_PWM3_Initialize 0070                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 0022                                   ___xxtofl@exp 0021  
                            _SYSTEM_Initialize 0B6D                                   ___xxtofl@val 0074  
                      __end_of__initialization 006B                               ?_CCP4_Initialize 0070  
                              _CMP1_Initialize 08F9                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 005A                       __end_of_CCP4_SetCallBack 088B  
                                  i1txSpi@data 0077                                 __pcstackCOMMON 0070  
                        __end_of_TMR4_CallBack 092B                                   __pidataBANK0 0003  
                                 __pidataBANK1 0002                            ??_SYSTEM_Initialize 00D0  
                                    ?_TMR0_ISR 0070                                i1txSpi@dataSize 0075  
                               ??_matrixUpdate 00D6                                      ?_TMR4_ISR 0070  
                         __end_of_isValidFloor 09E4                              ??_SPI1_Initialize 00CE  
       __end_of_IOCBF0_DefaultInterruptHandler 085E                 _IOCBF0_DefaultInterruptHandler 085D  
                                __end_of_txSpi 0977                               ?_TMR2_Initialize 0070  
                           __end_of_IOCBF0_ISR 0948                             __end_of_IOCBF3_ISR 0957  
                              _CMP2_Initialize 0905                             _spi1_configuration 0801  
                                 bin2bcd@dataU 0025                                 _OPTION_REGbits 0095  
                        TMR0_ISR@CountCallBack 00AE                  ?_TMR4_DefaultInterruptHandler 0070  
              ??_EUSART_SetOverrunErrorHandler 00D0         __end_of_IOCBF3_DefaultInterruptHandler 085F  
               _IOCBF3_DefaultInterruptHandler 085E                                     ??_CMP1_ISR 007B  
                                   ??_CMP2_ISR 007B                                   ?i1_chegadaS1 0070  
                      __end_of_TMR4_StartTimer 0867                      __end_of_SYSTEM_Initialize 0B9B  
                                      ??_txSpi 00D5                                     __pbssBANK0 006E  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 08EE  
                                   _andarAtual 00C1                          _TMR4_InterruptHandler 00E1  
                            __end_of__Umul8_16 0ACD                               ??_FVR_Initialize 00CE  
                                  sendInfo@bcd 006C                                     __pmaintext 070C  
             __end_of_TMR0_SetInterruptHandler 08A9                                     ??_TMR0_ISR 007E  
                                   ??_TMR4_ISR 007D                                sendInfo@mascara 006B  
                                   __pintentry 0004                        __end_of_TMR4_WriteTimer 08B5  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_memset 0070  
                             ?_TMR4_Initialize 0070                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _destinoSub 00BE  
                            _isValidFloor$1576 00CE                                      ?___xxtofl 0074  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                        __end_of_CMP1_Initialize 0905  
                     ??_EUSART_SetErrorHandler 00D0                              __end_of_chegadaS1 0C34  
                            __end_of_chegadaS2 0CDA                              __end_of_chegadaS3 0D8E  
                            __end_of_chegadaS4 0DF3                                        i1_txSpi 092B  
                                    ?_sendInfo 0070                           _ADC_InterruptHandler 00B2  
                                   _initMatrix 0C34                        __end_of_CMP2_Initialize 0911  
                                      ___fldiv 04B7                                        ___flmul 006F  
                                      ___fltol 0DF3                                        _bin2bcd 0F6E  
                                      __ptext1 07B2                                        __ptext2 08AF  
                                      __ptext3 09D1                                        __ptext4 0C34  
                                      __ptext5 0BFE                                        __ptext6 0A8E  
                                      __ptext7 0967                                        __ptext8 0B43  
                                      __ptext9 0864                                        _destino 00CB  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 08BB  
                                    _T2CONbits 001C                                     ??___xxtofl 0078  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00D0                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 00CE                   organizaTrajeto@mascaraOrigem 00D0  
                                    _IOCBNbits 0395                                      _IOCBPbits 0394  
                                      _rxValue 00C8                                        _subindo 006F  
                                      clrloop0 08B6                               ?_TMR4_StartTimer 0070  
                organizaTrajeto@mascaraDestino 00D1                           end_of_initialization 006B  
                         __end_of_matrixUpdate 0AAA                                 initMatrix@data 00D7  
               ??_TMR4_DefaultInterruptHandler 0070          __end_of_EUSART_SetOverrunErrorHandler 0897  
                _EUSART_SetOverrunErrorHandler 0891                                        memset@c 0070  
                                      memset@k 0076                                        memset@n 0072  
                                      memset@s 0079                                   _contComandos 00C5  
                            _EUSART_Initialize 0ACD                                     ??_sendInfo 0062  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0874                                      _SPI1_Open 0CDA  
                             ?_TMR4_WriteTimer 0070                            ??_EUSART_Initialize 00D0  
                             ??_WDT_Initialize 00CE                       _TMR0_SetInterruptHandler 08A3  
                          ?_EUSART_is_rx_ready 0070                                  ___xxtofl@sign 0020  
                                    _TRISBbits 008D                                    ___fldiv@grs 003A  
                                  ___fldiv@rem 0033                   ??_IOCBF0_SetInterruptHandler 00D0  
                 ??_IOCBF3_SetInterruptHandler 00D0                               ?_CMP1_Initialize 0070  
                                 _isValidFloor 09D1                         SPI1_ExchangeBlock@data 00D2  
                                  ___flmul@grs 004E                      __end_of_EUSART_Initialize 0AF2  
                         ??_EUSART_is_rx_ready 00CE                                _SPI1_Initialize 08EE  
                                    _TXSTAbits 019E              CCP4_DefaultCallBack@capturedValue 0070  
                   __end_of_PWM3_LoadDutyValue 0A10                              ?_CCP4_SetCallBack 00CE  
                                  ?_initMatrix 0070                               ?_CMP2_Initialize 0070  
                                   ?_SPI1_Open 0070                             ??_CCP4_SetCallBack 00D0  
                   _EUSART_DefaultErrorHandler 0000                                   _EUSART_Write 08E4  
                               _ADC_Initialize 08C2                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_memset 0F6E                            start_initialization 0058  
                                  __end_of_abs 0A8E                   __end_ofi1_SPI1_ExchangeBlock 0B19  
                              _velocidadeMotor 00A8                                  ??_EUSART_Read 00CE  
                                    _MatrixLed 00A0                                  bin2bcd@binVal 007A  
               ?_EUSART_SetOverrunErrorHandler 00CE                     _EUSART_FramingErrorHandler 00E9  
                       _EUSART_SetErrorHandler 08D2                         __end_of_ADC_Initialize 08CA  
                                    __Umul8_16 0AAA                                    __pdataBANK0 006F  
                                  __pdataBANK1 00EF                                       ??_memset 0074  
                                   memset@dest 0078                          CCP4_CaptureISR@module 0072  
                                    ___fldiv@a 0026                                      ___fldiv@b 002A  
                        TMR4_ISR@CountCallBack 00AC                                      ___flmul@a 0044  
                                    ___flmul@b 0040                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00CE  
                      __end_of_SPI1_Initialize 08F9                                       ?i1_txSpi 0075  
                            ??_organizaTrajeto 00CF                              ??_interrupcaoCCP4 0070  
                                    _chegadaS1 0BFE                                      _chegadaS2 0C83  
                                    _chegadaS3 0D32                                      _chegadaS4 0D8E  
                          __end_of_EUSART_Read 0967                          _TMR0_InterruptHandler 00E5  
                                    __pnvBANK1 00E1                                      __pnvBANK2 0120  
                      _IOCBF3_InterruptHandler 00EB                         _PIN_MANAGER_Initialize 0B9B  
             __end_of_TMR4_SetInterruptHandler 08AF                                       ?___fldiv 0026  
                            ??_CCP4_CaptureISR 0072                                       ?___flmul 0040  
                                     ?___fltol 005A                                       ?_bin2bcd 007A  
                                   ?__Umul8_16 0070                                    ??_SPI1_Open 00CE  
                              ?_ADC_Initialize 0070                              _controleMovimento 0E64  
                                 _matrixUpdate 0A8E                   ??_INTERRUPT_InterruptManager 007E  
                           ?_controleMovimento 0070             __end_of_IOCBF0_SetInterruptHandler 089D  
                   _IOCBF0_SetInterruptHandler 0897             __end_of_IOCBF3_SetInterruptHandler 08A3  
                   _IOCBF3_SetInterruptHandler 089D                            ??_controleMovimento 007B  
                                     _CMP1_ISR 0879                                       _CMP2_ISR 087F  
                                _TMR0_CallBack 0911                     __end_of_SPI1_ExchangeBlock 0B6D  
                            ??_TMR0_Initialize 00D0                                    _destinoDesc 00BD  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00CE  
                                     _LATBbits 010D                                     ?_chegadaS1 0070  
                                   ?_chegadaS2 0070                                     ?_chegadaS3 0070  
                                   ?_chegadaS4 0070                             sendInfo@aux_altura 00BB  
                          __end_of_matrix_conf 0801                                      clear_ram0 08B5  
                 __end_of_CCP4_DefaultCallBack 085D                                       _PIE2bits 0092  
                                     _PIE3bits 0093                              _eusartRxLastError 00BC  
                   ??_TMR0_SetInterruptHandler 00D0                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00D0                                       _PIR2bits 0012  
                                     _PIR3bits 0013                      __end_of_controleMovimento 0EDE  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
                         i1_SPI1_ExchangeBlock 0AF2                                       _TMR0_ISR 0A27  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 0A10  
                                _TMR4_CallBack 091E                                       _SSP1STAT 0214  
                            ??_PIN_MANAGER_IOC 007B                              ??_PWM3_Initialize 00CE  
                            ??_TMR1_Initialize 00CE                                     _ADCON0bits 009D  
                               i1_matrixUpdate 0A40                              ??_CCP4_Initialize 00D0  
                         sendInfo@destinoAtual 0069                                 ?_TMR0_CallBack 0070  
                             initMatrix@i_1620 00DD                                    _EUSART_Read 0957  
                             ?_SPI1_Initialize 0070                              i1_TMR4_StartTimer 0861  
                            ??_TMR2_Initialize 00CE                             ?i1_TMR4_StartTimer 0070  
                            _ADC_GetConversion 0A5A                                   ??_initMatrix 00D6  
                        ?i1_SPI1_ExchangeBlock 0070                                 ?_TMR4_CallBack 0070  
                          ??i1_TMR4_StartTimer 0070                        ??_OSCILLATOR_Initialize 00CE  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 0120  
                           ?_ADC_GetConversion 0070                         __end_ofi1_matrixUpdate 0A5A  
                            i1_TMR4_WriteTimer 086F                             sendInfo@velocidade 0066  
                     _TMR4_SetInterruptHandler 08A9                             _PWM3_LoadDutyValue 09F9  
                          ??_ADC_GetConversion 0072                             ?i1_TMR4_WriteTimer 0070  
                                     ___xxtofl 0661                                       bin2bcd@i 0024  
                                    sendInfo@i 006A                                      sendInfo@v 0068  
                                ??i1_chegadaS1 007B                                       __ptext10 0B6D  
                                     __ptext11 086B                                       __ptext20 0B9B  
                                     __ptext12 09BE                                       __ptext21 089D  
                                     __ptext13 08A9                                     _T1GCONbits 0019  
                                     __ptext30 08F9                                       __ptext22 0897  
                                     __ptext14 08CA                                       __ptext31 099A  
                                     __ptext23 08BB                                       __ptext15 09AC  
                                     __ptext40 0860                                       __ptext32 0885  
                                     __ptext24 0867                                       __ptext16 09E4  
                                     __ptext41 0E64                                       __ptext33 08C2  
                                     __ptext25 0ACD                                       __ptext17 08A3  
                                     __ptext50 0DF3                                       __ptext42 0A27  
                                     __ptext34 0CDA                                       __ptext26 0891  
                                     __ptext18 08EE                                       __ptext51 006F  
                                     __ptext43 0911                                       __ptext35 0874  
                                     __ptext27 088B                                       __ptext19 08DB  
                                     __ptext60 0939                                       __ptext52 0AAA  
                                     __ptext44 085F                                       __ptext36 0957  
                                     __ptext28 08D2                                       __ptext61 085D  
                                     __ptext53 04B7                                       __ptext45 02AA  
                                     __ptext29 0905                                       __ptext70 086F  
                                     __ptext62 0BCC                                       __ptext54 08E4  
                                     __ptext46 0F6E                                       __ptext38 0A10  
                                     __ptext71 0861                                       __ptext63 087F  
                                     __ptext55 0A5A                                       __ptext47 0EDE  
                                     __ptext39 091E                                       __ptext72 09F9  
                                     __ptext64 0D8E                                       __ptext56 0977  
                                     __ptext48 0A74                                       __ptext73 0988  
                                     __ptext65 0879                                       __ptext57 0948  
                                     __ptext49 0661                                       __ptext74 085C  
                                     __ptext66 0D32                                       __ptext58 085E  
                          ?_PWM3_LoadDutyValue 0070                                       __ptext75 0B19  
                                     __ptext67 0A40                                       __ptext59 0C83  
                                     __ptext68 092B                                       __ptext69 0AF2  
                                 _SSP1CON1bits 0215                      __end_ofi1_TMR4_StartTimer 0864  
                        controleMovimento@cont 00BA                            ??i1_TMR4_WriteTimer 0070  
                                  _matrix_conf 07F5                             __end_of_initMatrix 0C83  
                                   _IOCBF0_ISR 0939                                     _IOCBF3_ISR 0948  
                            ??_TMR4_Initialize 00D0                                    ??_chegadaS1 00D9  
                                  ??_chegadaS2 007B                                    ??_chegadaS3 007B  
                                  ??_chegadaS4 007B           __end_of_TMR0_DefaultInterruptHandler 0860  
                 _TMR0_DefaultInterruptHandler 085F                      __end_of_ADC_GetConversion 0A74  
                                     _sendInfo 02AA                        ?_EUSART_SetErrorHandler 00CE  
                i1SPI1_ExchangeBlock@blockSize 0070  EUSART_SetOverrunErrorHandler@interruptHandler 00CE  
                         ??_PWM3_LoadDutyValue 0072                                       int$flags 007E  
                    __end_ofi1_TMR4_WriteTimer 0874             __end_of_INTERRUPT_InterruptManager 0056  
                   _INTERRUPT_InterruptManager 0004                                ?i1_matrixUpdate 0070  
        __end_of_EUSART_SetFramingErrorHandler 0891                  _EUSART_SetFramingErrorHandler 088B  
                                    txSpi@data 00D5                    SPI1_ExchangeBlock@blockSize 00CE  
                             matrixUpdate@data 00D6                                     _INTCONbits 000B  
                              _organizaTrajeto 07B2                           _CCP4_DefaultCallBack 085C  
                              ??_TMR0_CallBack 007E                                     _FVRCONbits 0117  
                              _interrupcaoCCP4 0B19                                       intlevel1 0000  
                              _CCP4_CaptureISR 0988                        ?_PIN_MANAGER_Initialize 0070  
                          __end_ofi1_chegadaS1 0BFE                 __end_of_EUSART_SetErrorHandler 08DB  
                             ??_ADC_Initialize 00CE                                ??_TMR4_CallBack 007D  
                       ??i1_SPI1_ExchangeBlock 0072                  ?_TMR0_DefaultInterruptHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 00CE                    PWM3_LoadDutyValue@dutyValue 0070  
                            ??_TMR4_StartTimer 00CE                                  __pstringtext1 07F5  
                                __pstringtext2 0801                                 _FVR_Initialize 0867  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                                  _temperatura 00B4                          ?_CCP4_DefaultCallBack 0070  
                              _TMR0_Initialize 09E4                    ?_IOCBF0_SetInterruptHandler 00CE  
                  ?_IOCBF3_SetInterruptHandler 00CE                                    ?_IOCBF0_ISR 0070  
                           EUSART_Write@txData 0070                                    ?_IOCBF3_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 0BCC                              ??_TMR4_WriteTimer 00CE  
             ??_IOCBF0_DefaultInterruptHandler 0070                ?_IOCBF0_DefaultInterruptHandler 0070  
                                matrixUpdate@i 00D8                                _PIN_MANAGER_IOC 0977  
                         __Umul8_16@multiplier 0078                                _TMR1_Initialize 09AC  
                              _PWM3_Initialize 08DB                     __end_of_spi1_configuration 0805  
                            __Umul8_16@product 0074  
