

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 17 23:07:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x7E,2
    84     0000                     
    85                           ; Version 2.40
    86                           ; Generated 17/11/2021 GMT
    87                           ; 
    88                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F1827 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0095                     	;# 
   156     0096                     	;# 
   157     0097                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009A                     	;# 
   161     009B                     	;# 
   162     009B                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     0111                     	;# 
   169     0112                     	;# 
   170     0113                     	;# 
   171     0114                     	;# 
   172     0115                     	;# 
   173     0116                     	;# 
   174     0117                     	;# 
   175     0118                     	;# 
   176     0119                     	;# 
   177     011A                     	;# 
   178     011B                     	;# 
   179     011D                     	;# 
   180     011E                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0191                     	;# 
   184     0191                     	;# 
   185     0192                     	;# 
   186     0193                     	;# 
   187     0193                     	;# 
   188     0193                     	;# 
   189     0194                     	;# 
   190     0195                     	;# 
   191     0196                     	;# 
   192     0199                     	;# 
   193     019A                     	;# 
   194     019B                     	;# 
   195     019B                     	;# 
   196     019B                     	;# 
   197     019B                     	;# 
   198     019C                     	;# 
   199     019C                     	;# 
   200     019D                     	;# 
   201     019E                     	;# 
   202     019F                     	;# 
   203     020C                     	;# 
   204     020D                     	;# 
   205     0211                     	;# 
   206     0211                     	;# 
   207     0212                     	;# 
   208     0212                     	;# 
   209     0213                     	;# 
   210     0213                     	;# 
   211     0214                     	;# 
   212     0214                     	;# 
   213     0215                     	;# 
   214     0215                     	;# 
   215     0215                     	;# 
   216     0216                     	;# 
   217     0216                     	;# 
   218     0217                     	;# 
   219     0217                     	;# 
   220     0219                     	;# 
   221     021A                     	;# 
   222     021B                     	;# 
   223     021C                     	;# 
   224     021D                     	;# 
   225     021E                     	;# 
   226     021F                     	;# 
   227     0291                     	;# 
   228     0291                     	;# 
   229     0292                     	;# 
   230     0293                     	;# 
   231     0294                     	;# 
   232     0295                     	;# 
   233     0295                     	;# 
   234     0296                     	;# 
   235     0298                     	;# 
   236     0298                     	;# 
   237     0299                     	;# 
   238     029A                     	;# 
   239     029B                     	;# 
   240     029C                     	;# 
   241     029C                     	;# 
   242     029D                     	;# 
   243     029E                     	;# 
   244     029E                     	;# 
   245     0311                     	;# 
   246     0311                     	;# 
   247     0312                     	;# 
   248     0313                     	;# 
   249     0318                     	;# 
   250     0318                     	;# 
   251     0319                     	;# 
   252     031A                     	;# 
   253     0394                     	;# 
   254     0395                     	;# 
   255     0396                     	;# 
   256     039A                     	;# 
   257     039C                     	;# 
   258     039D                     	;# 
   259     039E                     	;# 
   260     039F                     	;# 
   261     0415                     	;# 
   262     0416                     	;# 
   263     0417                     	;# 
   264     041C                     	;# 
   265     041D                     	;# 
   266     041E                     	;# 
   267     0FE4                     	;# 
   268     0FE5                     	;# 
   269     0FE6                     	;# 
   270     0FE7                     	;# 
   271     0FE8                     	;# 
   272     0FE9                     	;# 
   273     0FEA                     	;# 
   274     0FEB                     	;# 
   275     0FED                     	;# 
   276     0FEE                     	;# 
   277     0FEF                     	;# 
   278     0000                     	;# 
   279     0001                     	;# 
   280     0002                     	;# 
   281     0003                     	;# 
   282     0004                     	;# 
   283     0005                     	;# 
   284     0006                     	;# 
   285     0007                     	;# 
   286     0008                     	;# 
   287     0009                     	;# 
   288     000A                     	;# 
   289     000B                     	;# 
   290     000C                     	;# 
   291     000D                     	;# 
   292     0011                     	;# 
   293     0012                     	;# 
   294     0013                     	;# 
   295     0014                     	;# 
   296     0015                     	;# 
   297     0016                     	;# 
   298     0016                     	;# 
   299     0017                     	;# 
   300     0018                     	;# 
   301     0019                     	;# 
   302     001A                     	;# 
   303     001B                     	;# 
   304     001C                     	;# 
   305     001E                     	;# 
   306     001F                     	;# 
   307     008C                     	;# 
   308     008D                     	;# 
   309     0091                     	;# 
   310     0092                     	;# 
   311     0093                     	;# 
   312     0094                     	;# 
   313     0095                     	;# 
   314     0096                     	;# 
   315     0097                     	;# 
   316     0098                     	;# 
   317     0099                     	;# 
   318     009A                     	;# 
   319     009B                     	;# 
   320     009B                     	;# 
   321     009C                     	;# 
   322     009D                     	;# 
   323     009E                     	;# 
   324     010C                     	;# 
   325     010D                     	;# 
   326     0111                     	;# 
   327     0112                     	;# 
   328     0113                     	;# 
   329     0114                     	;# 
   330     0115                     	;# 
   331     0116                     	;# 
   332     0117                     	;# 
   333     0118                     	;# 
   334     0119                     	;# 
   335     011A                     	;# 
   336     011B                     	;# 
   337     011D                     	;# 
   338     011E                     	;# 
   339     018C                     	;# 
   340     018D                     	;# 
   341     0191                     	;# 
   342     0191                     	;# 
   343     0192                     	;# 
   344     0193                     	;# 
   345     0193                     	;# 
   346     0193                     	;# 
   347     0194                     	;# 
   348     0195                     	;# 
   349     0196                     	;# 
   350     0199                     	;# 
   351     019A                     	;# 
   352     019B                     	;# 
   353     019B                     	;# 
   354     019B                     	;# 
   355     019B                     	;# 
   356     019C                     	;# 
   357     019C                     	;# 
   358     019D                     	;# 
   359     019E                     	;# 
   360     019F                     	;# 
   361     020C                     	;# 
   362     020D                     	;# 
   363     0211                     	;# 
   364     0211                     	;# 
   365     0212                     	;# 
   366     0212                     	;# 
   367     0213                     	;# 
   368     0213                     	;# 
   369     0214                     	;# 
   370     0214                     	;# 
   371     0215                     	;# 
   372     0215                     	;# 
   373     0215                     	;# 
   374     0216                     	;# 
   375     0216                     	;# 
   376     0217                     	;# 
   377     0217                     	;# 
   378     0219                     	;# 
   379     021A                     	;# 
   380     021B                     	;# 
   381     021C                     	;# 
   382     021D                     	;# 
   383     021E                     	;# 
   384     021F                     	;# 
   385     0291                     	;# 
   386     0291                     	;# 
   387     0292                     	;# 
   388     0293                     	;# 
   389     0294                     	;# 
   390     0295                     	;# 
   391     0295                     	;# 
   392     0296                     	;# 
   393     0298                     	;# 
   394     0298                     	;# 
   395     0299                     	;# 
   396     029A                     	;# 
   397     029B                     	;# 
   398     029C                     	;# 
   399     029C                     	;# 
   400     029D                     	;# 
   401     029E                     	;# 
   402     029E                     	;# 
   403     0311                     	;# 
   404     0311                     	;# 
   405     0312                     	;# 
   406     0313                     	;# 
   407     0318                     	;# 
   408     0318                     	;# 
   409     0319                     	;# 
   410     031A                     	;# 
   411     0394                     	;# 
   412     0395                     	;# 
   413     0396                     	;# 
   414     039A                     	;# 
   415     039C                     	;# 
   416     039D                     	;# 
   417     039E                     	;# 
   418     039F                     	;# 
   419     0415                     	;# 
   420     0416                     	;# 
   421     0417                     	;# 
   422     041C                     	;# 
   423     041D                     	;# 
   424     041E                     	;# 
   425     0FE4                     	;# 
   426     0FE5                     	;# 
   427     0FE6                     	;# 
   428     0FE7                     	;# 
   429     0FE8                     	;# 
   430     0FE9                     	;# 
   431     0FEA                     	;# 
   432     0FEB                     	;# 
   433     0FED                     	;# 
   434     0FEE                     	;# 
   435     0FEF                     	;# 
   436     0000                     	;# 
   437     0001                     	;# 
   438     0002                     	;# 
   439     0003                     	;# 
   440     0004                     	;# 
   441     0005                     	;# 
   442     0006                     	;# 
   443     0007                     	;# 
   444     0008                     	;# 
   445     0009                     	;# 
   446     000A                     	;# 
   447     000B                     	;# 
   448     000C                     	;# 
   449     000D                     	;# 
   450     0011                     	;# 
   451     0012                     	;# 
   452     0013                     	;# 
   453     0014                     	;# 
   454     0015                     	;# 
   455     0016                     	;# 
   456     0016                     	;# 
   457     0017                     	;# 
   458     0018                     	;# 
   459     0019                     	;# 
   460     001A                     	;# 
   461     001B                     	;# 
   462     001C                     	;# 
   463     001E                     	;# 
   464     001F                     	;# 
   465     008C                     	;# 
   466     008D                     	;# 
   467     0091                     	;# 
   468     0092                     	;# 
   469     0093                     	;# 
   470     0094                     	;# 
   471     0095                     	;# 
   472     0096                     	;# 
   473     0097                     	;# 
   474     0098                     	;# 
   475     0099                     	;# 
   476     009A                     	;# 
   477     009B                     	;# 
   478     009B                     	;# 
   479     009C                     	;# 
   480     009D                     	;# 
   481     009E                     	;# 
   482     010C                     	;# 
   483     010D                     	;# 
   484     0111                     	;# 
   485     0112                     	;# 
   486     0113                     	;# 
   487     0114                     	;# 
   488     0115                     	;# 
   489     0116                     	;# 
   490     0117                     	;# 
   491     0118                     	;# 
   492     0119                     	;# 
   493     011A                     	;# 
   494     011B                     	;# 
   495     011D                     	;# 
   496     011E                     	;# 
   497     018C                     	;# 
   498     018D                     	;# 
   499     0191                     	;# 
   500     0191                     	;# 
   501     0192                     	;# 
   502     0193                     	;# 
   503     0193                     	;# 
   504     0193                     	;# 
   505     0194                     	;# 
   506     0195                     	;# 
   507     0196                     	;# 
   508     0199                     	;# 
   509     019A                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019B                     	;# 
   513     019B                     	;# 
   514     019C                     	;# 
   515     019C                     	;# 
   516     019D                     	;# 
   517     019E                     	;# 
   518     019F                     	;# 
   519     020C                     	;# 
   520     020D                     	;# 
   521     0211                     	;# 
   522     0211                     	;# 
   523     0212                     	;# 
   524     0212                     	;# 
   525     0213                     	;# 
   526     0213                     	;# 
   527     0214                     	;# 
   528     0214                     	;# 
   529     0215                     	;# 
   530     0215                     	;# 
   531     0215                     	;# 
   532     0216                     	;# 
   533     0216                     	;# 
   534     0217                     	;# 
   535     0217                     	;# 
   536     0219                     	;# 
   537     021A                     	;# 
   538     021B                     	;# 
   539     021C                     	;# 
   540     021D                     	;# 
   541     021E                     	;# 
   542     021F                     	;# 
   543     0291                     	;# 
   544     0291                     	;# 
   545     0292                     	;# 
   546     0293                     	;# 
   547     0294                     	;# 
   548     0295                     	;# 
   549     0295                     	;# 
   550     0296                     	;# 
   551     0298                     	;# 
   552     0298                     	;# 
   553     0299                     	;# 
   554     029A                     	;# 
   555     029B                     	;# 
   556     029C                     	;# 
   557     029C                     	;# 
   558     029D                     	;# 
   559     029E                     	;# 
   560     029E                     	;# 
   561     0311                     	;# 
   562     0311                     	;# 
   563     0312                     	;# 
   564     0313                     	;# 
   565     0318                     	;# 
   566     0318                     	;# 
   567     0319                     	;# 
   568     031A                     	;# 
   569     0394                     	;# 
   570     0395                     	;# 
   571     0396                     	;# 
   572     039A                     	;# 
   573     039C                     	;# 
   574     039D                     	;# 
   575     039E                     	;# 
   576     039F                     	;# 
   577     0415                     	;# 
   578     0416                     	;# 
   579     0417                     	;# 
   580     041C                     	;# 
   581     041D                     	;# 
   582     041E                     	;# 
   583     0FE4                     	;# 
   584     0FE5                     	;# 
   585     0FE6                     	;# 
   586     0FE7                     	;# 
   587     0FE8                     	;# 
   588     0FE9                     	;# 
   589     0FEA                     	;# 
   590     0FEB                     	;# 
   591     0FED                     	;# 
   592     0FEE                     	;# 
   593     0FEF                     	;# 
   594     0000                     	;# 
   595     0001                     	;# 
   596     0002                     	;# 
   597     0003                     	;# 
   598     0004                     	;# 
   599     0005                     	;# 
   600     0006                     	;# 
   601     0007                     	;# 
   602     0008                     	;# 
   603     0009                     	;# 
   604     000A                     	;# 
   605     000B                     	;# 
   606     000C                     	;# 
   607     000D                     	;# 
   608     0011                     	;# 
   609     0012                     	;# 
   610     0013                     	;# 
   611     0014                     	;# 
   612     0015                     	;# 
   613     0016                     	;# 
   614     0016                     	;# 
   615     0017                     	;# 
   616     0018                     	;# 
   617     0019                     	;# 
   618     001A                     	;# 
   619     001B                     	;# 
   620     001C                     	;# 
   621     001E                     	;# 
   622     001F                     	;# 
   623     008C                     	;# 
   624     008D                     	;# 
   625     0091                     	;# 
   626     0092                     	;# 
   627     0093                     	;# 
   628     0094                     	;# 
   629     0095                     	;# 
   630     0096                     	;# 
   631     0097                     	;# 
   632     0098                     	;# 
   633     0099                     	;# 
   634     009A                     	;# 
   635     009B                     	;# 
   636     009B                     	;# 
   637     009C                     	;# 
   638     009D                     	;# 
   639     009E                     	;# 
   640     010C                     	;# 
   641     010D                     	;# 
   642     0111                     	;# 
   643     0112                     	;# 
   644     0113                     	;# 
   645     0114                     	;# 
   646     0115                     	;# 
   647     0116                     	;# 
   648     0117                     	;# 
   649     0118                     	;# 
   650     0119                     	;# 
   651     011A                     	;# 
   652     011B                     	;# 
   653     011D                     	;# 
   654     011E                     	;# 
   655     018C                     	;# 
   656     018D                     	;# 
   657     0191                     	;# 
   658     0191                     	;# 
   659     0192                     	;# 
   660     0193                     	;# 
   661     0193                     	;# 
   662     0193                     	;# 
   663     0194                     	;# 
   664     0195                     	;# 
   665     0196                     	;# 
   666     0199                     	;# 
   667     019A                     	;# 
   668     019B                     	;# 
   669     019B                     	;# 
   670     019B                     	;# 
   671     019B                     	;# 
   672     019C                     	;# 
   673     019C                     	;# 
   674     019D                     	;# 
   675     019E                     	;# 
   676     019F                     	;# 
   677     020C                     	;# 
   678     020D                     	;# 
   679     0211                     	;# 
   680     0211                     	;# 
   681     0212                     	;# 
   682     0212                     	;# 
   683     0213                     	;# 
   684     0213                     	;# 
   685     0214                     	;# 
   686     0214                     	;# 
   687     0215                     	;# 
   688     0215                     	;# 
   689     0215                     	;# 
   690     0216                     	;# 
   691     0216                     	;# 
   692     0217                     	;# 
   693     0217                     	;# 
   694     0219                     	;# 
   695     021A                     	;# 
   696     021B                     	;# 
   697     021C                     	;# 
   698     021D                     	;# 
   699     021E                     	;# 
   700     021F                     	;# 
   701     0291                     	;# 
   702     0291                     	;# 
   703     0292                     	;# 
   704     0293                     	;# 
   705     0294                     	;# 
   706     0295                     	;# 
   707     0295                     	;# 
   708     0296                     	;# 
   709     0298                     	;# 
   710     0298                     	;# 
   711     0299                     	;# 
   712     029A                     	;# 
   713     029B                     	;# 
   714     029C                     	;# 
   715     029C                     	;# 
   716     029D                     	;# 
   717     029E                     	;# 
   718     029E                     	;# 
   719     0311                     	;# 
   720     0311                     	;# 
   721     0312                     	;# 
   722     0313                     	;# 
   723     0318                     	;# 
   724     0318                     	;# 
   725     0319                     	;# 
   726     031A                     	;# 
   727     0394                     	;# 
   728     0395                     	;# 
   729     0396                     	;# 
   730     039A                     	;# 
   731     039C                     	;# 
   732     039D                     	;# 
   733     039E                     	;# 
   734     039F                     	;# 
   735     0415                     	;# 
   736     0416                     	;# 
   737     0417                     	;# 
   738     041C                     	;# 
   739     041D                     	;# 
   740     041E                     	;# 
   741     0FE4                     	;# 
   742     0FE5                     	;# 
   743     0FE6                     	;# 
   744     0FE7                     	;# 
   745     0FE8                     	;# 
   746     0FE9                     	;# 
   747     0FEA                     	;# 
   748     0FEB                     	;# 
   749     0FED                     	;# 
   750     0FEE                     	;# 
   751     0FEF                     	;# 
   752     0000                     	;# 
   753     0001                     	;# 
   754     0002                     	;# 
   755     0003                     	;# 
   756     0004                     	;# 
   757     0005                     	;# 
   758     0006                     	;# 
   759     0007                     	;# 
   760     0008                     	;# 
   761     0009                     	;# 
   762     000A                     	;# 
   763     000B                     	;# 
   764     000C                     	;# 
   765     000D                     	;# 
   766     0011                     	;# 
   767     0012                     	;# 
   768     0013                     	;# 
   769     0014                     	;# 
   770     0015                     	;# 
   771     0016                     	;# 
   772     0016                     	;# 
   773     0017                     	;# 
   774     0018                     	;# 
   775     0019                     	;# 
   776     001A                     	;# 
   777     001B                     	;# 
   778     001C                     	;# 
   779     001E                     	;# 
   780     001F                     	;# 
   781     008C                     	;# 
   782     008D                     	;# 
   783     0091                     	;# 
   784     0092                     	;# 
   785     0093                     	;# 
   786     0094                     	;# 
   787     0095                     	;# 
   788     0096                     	;# 
   789     0097                     	;# 
   790     0098                     	;# 
   791     0099                     	;# 
   792     009A                     	;# 
   793     009B                     	;# 
   794     009B                     	;# 
   795     009C                     	;# 
   796     009D                     	;# 
   797     009E                     	;# 
   798     010C                     	;# 
   799     010D                     	;# 
   800     0111                     	;# 
   801     0112                     	;# 
   802     0113                     	;# 
   803     0114                     	;# 
   804     0115                     	;# 
   805     0116                     	;# 
   806     0117                     	;# 
   807     0118                     	;# 
   808     0119                     	;# 
   809     011A                     	;# 
   810     011B                     	;# 
   811     011D                     	;# 
   812     011E                     	;# 
   813     018C                     	;# 
   814     018D                     	;# 
   815     0191                     	;# 
   816     0191                     	;# 
   817     0192                     	;# 
   818     0193                     	;# 
   819     0193                     	;# 
   820     0193                     	;# 
   821     0194                     	;# 
   822     0195                     	;# 
   823     0196                     	;# 
   824     0199                     	;# 
   825     019A                     	;# 
   826     019B                     	;# 
   827     019B                     	;# 
   828     019B                     	;# 
   829     019B                     	;# 
   830     019C                     	;# 
   831     019C                     	;# 
   832     019D                     	;# 
   833     019E                     	;# 
   834     019F                     	;# 
   835     020C                     	;# 
   836     020D                     	;# 
   837     0211                     	;# 
   838     0211                     	;# 
   839     0212                     	;# 
   840     0212                     	;# 
   841     0213                     	;# 
   842     0213                     	;# 
   843     0214                     	;# 
   844     0214                     	;# 
   845     0215                     	;# 
   846     0215                     	;# 
   847     0215                     	;# 
   848     0216                     	;# 
   849     0216                     	;# 
   850     0217                     	;# 
   851     0217                     	;# 
   852     0219                     	;# 
   853     021A                     	;# 
   854     021B                     	;# 
   855     021C                     	;# 
   856     021D                     	;# 
   857     021E                     	;# 
   858     021F                     	;# 
   859     0291                     	;# 
   860     0291                     	;# 
   861     0292                     	;# 
   862     0293                     	;# 
   863     0294                     	;# 
   864     0295                     	;# 
   865     0295                     	;# 
   866     0296                     	;# 
   867     0298                     	;# 
   868     0298                     	;# 
   869     0299                     	;# 
   870     029A                     	;# 
   871     029B                     	;# 
   872     029C                     	;# 
   873     029C                     	;# 
   874     029D                     	;# 
   875     029E                     	;# 
   876     029E                     	;# 
   877     0311                     	;# 
   878     0311                     	;# 
   879     0312                     	;# 
   880     0313                     	;# 
   881     0318                     	;# 
   882     0318                     	;# 
   883     0319                     	;# 
   884     031A                     	;# 
   885     0394                     	;# 
   886     0395                     	;# 
   887     0396                     	;# 
   888     039A                     	;# 
   889     039C                     	;# 
   890     039D                     	;# 
   891     039E                     	;# 
   892     039F                     	;# 
   893     0415                     	;# 
   894     0416                     	;# 
   895     0417                     	;# 
   896     041C                     	;# 
   897     041D                     	;# 
   898     041E                     	;# 
   899     0FE4                     	;# 
   900     0FE5                     	;# 
   901     0FE6                     	;# 
   902     0FE7                     	;# 
   903     0FE8                     	;# 
   904     0FE9                     	;# 
   905     0FEA                     	;# 
   906     0FEB                     	;# 
   907     0FED                     	;# 
   908     0FEE                     	;# 
   909     0FEF                     	;# 
   910     0000                     	;# 
   911     0001                     	;# 
   912     0002                     	;# 
   913     0003                     	;# 
   914     0004                     	;# 
   915     0005                     	;# 
   916     0006                     	;# 
   917     0007                     	;# 
   918     0008                     	;# 
   919     0009                     	;# 
   920     000A                     	;# 
   921     000B                     	;# 
   922     000C                     	;# 
   923     000D                     	;# 
   924     0011                     	;# 
   925     0012                     	;# 
   926     0013                     	;# 
   927     0014                     	;# 
   928     0015                     	;# 
   929     0016                     	;# 
   930     0016                     	;# 
   931     0017                     	;# 
   932     0018                     	;# 
   933     0019                     	;# 
   934     001A                     	;# 
   935     001B                     	;# 
   936     001C                     	;# 
   937     001E                     	;# 
   938     001F                     	;# 
   939     008C                     	;# 
   940     008D                     	;# 
   941     0091                     	;# 
   942     0092                     	;# 
   943     0093                     	;# 
   944     0094                     	;# 
   945     0095                     	;# 
   946     0096                     	;# 
   947     0097                     	;# 
   948     0098                     	;# 
   949     0099                     	;# 
   950     009A                     	;# 
   951     009B                     	;# 
   952     009B                     	;# 
   953     009C                     	;# 
   954     009D                     	;# 
   955     009E                     	;# 
   956     010C                     	;# 
   957     010D                     	;# 
   958     0111                     	;# 
   959     0112                     	;# 
   960     0113                     	;# 
   961     0114                     	;# 
   962     0115                     	;# 
   963     0116                     	;# 
   964     0117                     	;# 
   965     0118                     	;# 
   966     0119                     	;# 
   967     011A                     	;# 
   968     011B                     	;# 
   969     011D                     	;# 
   970     011E                     	;# 
   971     018C                     	;# 
   972     018D                     	;# 
   973     0191                     	;# 
   974     0191                     	;# 
   975     0192                     	;# 
   976     0193                     	;# 
   977     0193                     	;# 
   978     0193                     	;# 
   979     0194                     	;# 
   980     0195                     	;# 
   981     0196                     	;# 
   982     0199                     	;# 
   983     019A                     	;# 
   984     019B                     	;# 
   985     019B                     	;# 
   986     019B                     	;# 
   987     019B                     	;# 
   988     019C                     	;# 
   989     019C                     	;# 
   990     019D                     	;# 
   991     019E                     	;# 
   992     019F                     	;# 
   993     020C                     	;# 
   994     020D                     	;# 
   995     0211                     	;# 
   996     0211                     	;# 
   997     0212                     	;# 
   998     0212                     	;# 
   999     0213                     	;# 
  1000     0213                     	;# 
  1001     0214                     	;# 
  1002     0214                     	;# 
  1003     0215                     	;# 
  1004     0215                     	;# 
  1005     0215                     	;# 
  1006     0216                     	;# 
  1007     0216                     	;# 
  1008     0217                     	;# 
  1009     0217                     	;# 
  1010     0219                     	;# 
  1011     021A                     	;# 
  1012     021B                     	;# 
  1013     021C                     	;# 
  1014     021D                     	;# 
  1015     021E                     	;# 
  1016     021F                     	;# 
  1017     0291                     	;# 
  1018     0291                     	;# 
  1019     0292                     	;# 
  1020     0293                     	;# 
  1021     0294                     	;# 
  1022     0295                     	;# 
  1023     0295                     	;# 
  1024     0296                     	;# 
  1025     0298                     	;# 
  1026     0298                     	;# 
  1027     0299                     	;# 
  1028     029A                     	;# 
  1029     029B                     	;# 
  1030     029C                     	;# 
  1031     029C                     	;# 
  1032     029D                     	;# 
  1033     029E                     	;# 
  1034     029E                     	;# 
  1035     0311                     	;# 
  1036     0311                     	;# 
  1037     0312                     	;# 
  1038     0313                     	;# 
  1039     0318                     	;# 
  1040     0318                     	;# 
  1041     0319                     	;# 
  1042     031A                     	;# 
  1043     0394                     	;# 
  1044     0395                     	;# 
  1045     0396                     	;# 
  1046     039A                     	;# 
  1047     039C                     	;# 
  1048     039D                     	;# 
  1049     039E                     	;# 
  1050     039F                     	;# 
  1051     0415                     	;# 
  1052     0416                     	;# 
  1053     0417                     	;# 
  1054     041C                     	;# 
  1055     041D                     	;# 
  1056     041E                     	;# 
  1057     0FE4                     	;# 
  1058     0FE5                     	;# 
  1059     0FE6                     	;# 
  1060     0FE7                     	;# 
  1061     0FE8                     	;# 
  1062     0FE9                     	;# 
  1063     0FEA                     	;# 
  1064     0FEB                     	;# 
  1065     0FED                     	;# 
  1066     0FEE                     	;# 
  1067     0FEF                     	;# 
  1068     0000                     	;# 
  1069     0001                     	;# 
  1070     0002                     	;# 
  1071     0003                     	;# 
  1072     0004                     	;# 
  1073     0005                     	;# 
  1074     0006                     	;# 
  1075     0007                     	;# 
  1076     0008                     	;# 
  1077     0009                     	;# 
  1078     000A                     	;# 
  1079     000B                     	;# 
  1080     000C                     	;# 
  1081     000D                     	;# 
  1082     0011                     	;# 
  1083     0012                     	;# 
  1084     0013                     	;# 
  1085     0014                     	;# 
  1086     0015                     	;# 
  1087     0016                     	;# 
  1088     0016                     	;# 
  1089     0017                     	;# 
  1090     0018                     	;# 
  1091     0019                     	;# 
  1092     001A                     	;# 
  1093     001B                     	;# 
  1094     001C                     	;# 
  1095     001E                     	;# 
  1096     001F                     	;# 
  1097     008C                     	;# 
  1098     008D                     	;# 
  1099     0091                     	;# 
  1100     0092                     	;# 
  1101     0093                     	;# 
  1102     0094                     	;# 
  1103     0095                     	;# 
  1104     0096                     	;# 
  1105     0097                     	;# 
  1106     0098                     	;# 
  1107     0099                     	;# 
  1108     009A                     	;# 
  1109     009B                     	;# 
  1110     009B                     	;# 
  1111     009C                     	;# 
  1112     009D                     	;# 
  1113     009E                     	;# 
  1114     010C                     	;# 
  1115     010D                     	;# 
  1116     0111                     	;# 
  1117     0112                     	;# 
  1118     0113                     	;# 
  1119     0114                     	;# 
  1120     0115                     	;# 
  1121     0116                     	;# 
  1122     0117                     	;# 
  1123     0118                     	;# 
  1124     0119                     	;# 
  1125     011A                     	;# 
  1126     011B                     	;# 
  1127     011D                     	;# 
  1128     011E                     	;# 
  1129     018C                     	;# 
  1130     018D                     	;# 
  1131     0191                     	;# 
  1132     0191                     	;# 
  1133     0192                     	;# 
  1134     0193                     	;# 
  1135     0193                     	;# 
  1136     0193                     	;# 
  1137     0194                     	;# 
  1138     0195                     	;# 
  1139     0196                     	;# 
  1140     0199                     	;# 
  1141     019A                     	;# 
  1142     019B                     	;# 
  1143     019B                     	;# 
  1144     019B                     	;# 
  1145     019B                     	;# 
  1146     019C                     	;# 
  1147     019C                     	;# 
  1148     019D                     	;# 
  1149     019E                     	;# 
  1150     019F                     	;# 
  1151     020C                     	;# 
  1152     020D                     	;# 
  1153     0211                     	;# 
  1154     0211                     	;# 
  1155     0212                     	;# 
  1156     0212                     	;# 
  1157     0213                     	;# 
  1158     0213                     	;# 
  1159     0214                     	;# 
  1160     0214                     	;# 
  1161     0215                     	;# 
  1162     0215                     	;# 
  1163     0215                     	;# 
  1164     0216                     	;# 
  1165     0216                     	;# 
  1166     0217                     	;# 
  1167     0217                     	;# 
  1168     0219                     	;# 
  1169     021A                     	;# 
  1170     021B                     	;# 
  1171     021C                     	;# 
  1172     021D                     	;# 
  1173     021E                     	;# 
  1174     021F                     	;# 
  1175     0291                     	;# 
  1176     0291                     	;# 
  1177     0292                     	;# 
  1178     0293                     	;# 
  1179     0294                     	;# 
  1180     0295                     	;# 
  1181     0295                     	;# 
  1182     0296                     	;# 
  1183     0298                     	;# 
  1184     0298                     	;# 
  1185     0299                     	;# 
  1186     029A                     	;# 
  1187     029B                     	;# 
  1188     029C                     	;# 
  1189     029C                     	;# 
  1190     029D                     	;# 
  1191     029E                     	;# 
  1192     029E                     	;# 
  1193     0311                     	;# 
  1194     0311                     	;# 
  1195     0312                     	;# 
  1196     0313                     	;# 
  1197     0318                     	;# 
  1198     0318                     	;# 
  1199     0319                     	;# 
  1200     031A                     	;# 
  1201     0394                     	;# 
  1202     0395                     	;# 
  1203     0396                     	;# 
  1204     039A                     	;# 
  1205     039C                     	;# 
  1206     039D                     	;# 
  1207     039E                     	;# 
  1208     039F                     	;# 
  1209     0415                     	;# 
  1210     0416                     	;# 
  1211     0417                     	;# 
  1212     041C                     	;# 
  1213     041D                     	;# 
  1214     041E                     	;# 
  1215     0FE4                     	;# 
  1216     0FE5                     	;# 
  1217     0FE6                     	;# 
  1218     0FE7                     	;# 
  1219     0FE8                     	;# 
  1220     0FE9                     	;# 
  1221     0FEA                     	;# 
  1222     0FEB                     	;# 
  1223     0FED                     	;# 
  1224     0FEE                     	;# 
  1225     0FEF                     	;# 
  1226     0000                     	;# 
  1227     0001                     	;# 
  1228     0002                     	;# 
  1229     0003                     	;# 
  1230     0004                     	;# 
  1231     0005                     	;# 
  1232     0006                     	;# 
  1233     0007                     	;# 
  1234     0008                     	;# 
  1235     0009                     	;# 
  1236     000A                     	;# 
  1237     000B                     	;# 
  1238     000C                     	;# 
  1239     000D                     	;# 
  1240     0011                     	;# 
  1241     0012                     	;# 
  1242     0013                     	;# 
  1243     0014                     	;# 
  1244     0015                     	;# 
  1245     0016                     	;# 
  1246     0016                     	;# 
  1247     0017                     	;# 
  1248     0018                     	;# 
  1249     0019                     	;# 
  1250     001A                     	;# 
  1251     001B                     	;# 
  1252     001C                     	;# 
  1253     001E                     	;# 
  1254     001F                     	;# 
  1255     008C                     	;# 
  1256     008D                     	;# 
  1257     0091                     	;# 
  1258     0092                     	;# 
  1259     0093                     	;# 
  1260     0094                     	;# 
  1261     0095                     	;# 
  1262     0096                     	;# 
  1263     0097                     	;# 
  1264     0098                     	;# 
  1265     0099                     	;# 
  1266     009A                     	;# 
  1267     009B                     	;# 
  1268     009B                     	;# 
  1269     009C                     	;# 
  1270     009D                     	;# 
  1271     009E                     	;# 
  1272     010C                     	;# 
  1273     010D                     	;# 
  1274     0111                     	;# 
  1275     0112                     	;# 
  1276     0113                     	;# 
  1277     0114                     	;# 
  1278     0115                     	;# 
  1279     0116                     	;# 
  1280     0117                     	;# 
  1281     0118                     	;# 
  1282     0119                     	;# 
  1283     011A                     	;# 
  1284     011B                     	;# 
  1285     011D                     	;# 
  1286     011E                     	;# 
  1287     018C                     	;# 
  1288     018D                     	;# 
  1289     0191                     	;# 
  1290     0191                     	;# 
  1291     0192                     	;# 
  1292     0193                     	;# 
  1293     0193                     	;# 
  1294     0193                     	;# 
  1295     0194                     	;# 
  1296     0195                     	;# 
  1297     0196                     	;# 
  1298     0199                     	;# 
  1299     019A                     	;# 
  1300     019B                     	;# 
  1301     019B                     	;# 
  1302     019B                     	;# 
  1303     019B                     	;# 
  1304     019C                     	;# 
  1305     019C                     	;# 
  1306     019D                     	;# 
  1307     019E                     	;# 
  1308     019F                     	;# 
  1309     020C                     	;# 
  1310     020D                     	;# 
  1311     0211                     	;# 
  1312     0211                     	;# 
  1313     0212                     	;# 
  1314     0212                     	;# 
  1315     0213                     	;# 
  1316     0213                     	;# 
  1317     0214                     	;# 
  1318     0214                     	;# 
  1319     0215                     	;# 
  1320     0215                     	;# 
  1321     0215                     	;# 
  1322     0216                     	;# 
  1323     0216                     	;# 
  1324     0217                     	;# 
  1325     0217                     	;# 
  1326     0219                     	;# 
  1327     021A                     	;# 
  1328     021B                     	;# 
  1329     021C                     	;# 
  1330     021D                     	;# 
  1331     021E                     	;# 
  1332     021F                     	;# 
  1333     0291                     	;# 
  1334     0291                     	;# 
  1335     0292                     	;# 
  1336     0293                     	;# 
  1337     0294                     	;# 
  1338     0295                     	;# 
  1339     0295                     	;# 
  1340     0296                     	;# 
  1341     0298                     	;# 
  1342     0298                     	;# 
  1343     0299                     	;# 
  1344     029A                     	;# 
  1345     029B                     	;# 
  1346     029C                     	;# 
  1347     029C                     	;# 
  1348     029D                     	;# 
  1349     029E                     	;# 
  1350     029E                     	;# 
  1351     0311                     	;# 
  1352     0311                     	;# 
  1353     0312                     	;# 
  1354     0313                     	;# 
  1355     0318                     	;# 
  1356     0318                     	;# 
  1357     0319                     	;# 
  1358     031A                     	;# 
  1359     0394                     	;# 
  1360     0395                     	;# 
  1361     0396                     	;# 
  1362     039A                     	;# 
  1363     039C                     	;# 
  1364     039D                     	;# 
  1365     039E                     	;# 
  1366     039F                     	;# 
  1367     0415                     	;# 
  1368     0416                     	;# 
  1369     0417                     	;# 
  1370     041C                     	;# 
  1371     041D                     	;# 
  1372     041E                     	;# 
  1373     0FE4                     	;# 
  1374     0FE5                     	;# 
  1375     0FE6                     	;# 
  1376     0FE7                     	;# 
  1377     0FE8                     	;# 
  1378     0FE9                     	;# 
  1379     0FEA                     	;# 
  1380     0FEB                     	;# 
  1381     0FED                     	;# 
  1382     0FEE                     	;# 
  1383     0FEF                     	;# 
  1384     0000                     	;# 
  1385     0001                     	;# 
  1386     0002                     	;# 
  1387     0003                     	;# 
  1388     0004                     	;# 
  1389     0005                     	;# 
  1390     0006                     	;# 
  1391     0007                     	;# 
  1392     0008                     	;# 
  1393     0009                     	;# 
  1394     000A                     	;# 
  1395     000B                     	;# 
  1396     000C                     	;# 
  1397     000D                     	;# 
  1398     0011                     	;# 
  1399     0012                     	;# 
  1400     0013                     	;# 
  1401     0014                     	;# 
  1402     0015                     	;# 
  1403     0016                     	;# 
  1404     0016                     	;# 
  1405     0017                     	;# 
  1406     0018                     	;# 
  1407     0019                     	;# 
  1408     001A                     	;# 
  1409     001B                     	;# 
  1410     001C                     	;# 
  1411     001E                     	;# 
  1412     001F                     	;# 
  1413     008C                     	;# 
  1414     008D                     	;# 
  1415     0091                     	;# 
  1416     0092                     	;# 
  1417     0093                     	;# 
  1418     0094                     	;# 
  1419     0095                     	;# 
  1420     0096                     	;# 
  1421     0097                     	;# 
  1422     0098                     	;# 
  1423     0099                     	;# 
  1424     009A                     	;# 
  1425     009B                     	;# 
  1426     009B                     	;# 
  1427     009C                     	;# 
  1428     009D                     	;# 
  1429     009E                     	;# 
  1430     010C                     	;# 
  1431     010D                     	;# 
  1432     0111                     	;# 
  1433     0112                     	;# 
  1434     0113                     	;# 
  1435     0114                     	;# 
  1436     0115                     	;# 
  1437     0116                     	;# 
  1438     0117                     	;# 
  1439     0118                     	;# 
  1440     0119                     	;# 
  1441     011A                     	;# 
  1442     011B                     	;# 
  1443     011D                     	;# 
  1444     011E                     	;# 
  1445     018C                     	;# 
  1446     018D                     	;# 
  1447     0191                     	;# 
  1448     0191                     	;# 
  1449     0192                     	;# 
  1450     0193                     	;# 
  1451     0193                     	;# 
  1452     0193                     	;# 
  1453     0194                     	;# 
  1454     0195                     	;# 
  1455     0196                     	;# 
  1456     0199                     	;# 
  1457     019A                     	;# 
  1458     019B                     	;# 
  1459     019B                     	;# 
  1460     019B                     	;# 
  1461     019B                     	;# 
  1462     019C                     	;# 
  1463     019C                     	;# 
  1464     019D                     	;# 
  1465     019E                     	;# 
  1466     019F                     	;# 
  1467     020C                     	;# 
  1468     020D                     	;# 
  1469     0211                     	;# 
  1470     0211                     	;# 
  1471     0212                     	;# 
  1472     0212                     	;# 
  1473     0213                     	;# 
  1474     0213                     	;# 
  1475     0214                     	;# 
  1476     0214                     	;# 
  1477     0215                     	;# 
  1478     0215                     	;# 
  1479     0215                     	;# 
  1480     0216                     	;# 
  1481     0216                     	;# 
  1482     0217                     	;# 
  1483     0217                     	;# 
  1484     0219                     	;# 
  1485     021A                     	;# 
  1486     021B                     	;# 
  1487     021C                     	;# 
  1488     021D                     	;# 
  1489     021E                     	;# 
  1490     021F                     	;# 
  1491     0291                     	;# 
  1492     0291                     	;# 
  1493     0292                     	;# 
  1494     0293                     	;# 
  1495     0294                     	;# 
  1496     0295                     	;# 
  1497     0295                     	;# 
  1498     0296                     	;# 
  1499     0298                     	;# 
  1500     0298                     	;# 
  1501     0299                     	;# 
  1502     029A                     	;# 
  1503     029B                     	;# 
  1504     029C                     	;# 
  1505     029C                     	;# 
  1506     029D                     	;# 
  1507     029E                     	;# 
  1508     029E                     	;# 
  1509     0311                     	;# 
  1510     0311                     	;# 
  1511     0312                     	;# 
  1512     0313                     	;# 
  1513     0318                     	;# 
  1514     0318                     	;# 
  1515     0319                     	;# 
  1516     031A                     	;# 
  1517     0394                     	;# 
  1518     0395                     	;# 
  1519     0396                     	;# 
  1520     039A                     	;# 
  1521     039C                     	;# 
  1522     039D                     	;# 
  1523     039E                     	;# 
  1524     039F                     	;# 
  1525     0415                     	;# 
  1526     0416                     	;# 
  1527     0417                     	;# 
  1528     041C                     	;# 
  1529     041D                     	;# 
  1530     041E                     	;# 
  1531     0FE4                     	;# 
  1532     0FE5                     	;# 
  1533     0FE6                     	;# 
  1534     0FE7                     	;# 
  1535     0FE8                     	;# 
  1536     0FE9                     	;# 
  1537     0FEA                     	;# 
  1538     0FEB                     	;# 
  1539     0FED                     	;# 
  1540     0FEE                     	;# 
  1541     0FEF                     	;# 
  1542     0000                     	;# 
  1543     0001                     	;# 
  1544     0002                     	;# 
  1545     0003                     	;# 
  1546     0004                     	;# 
  1547     0005                     	;# 
  1548     0006                     	;# 
  1549     0007                     	;# 
  1550     0008                     	;# 
  1551     0009                     	;# 
  1552     000A                     	;# 
  1553     000B                     	;# 
  1554     000C                     	;# 
  1555     000D                     	;# 
  1556     0011                     	;# 
  1557     0012                     	;# 
  1558     0013                     	;# 
  1559     0014                     	;# 
  1560     0015                     	;# 
  1561     0016                     	;# 
  1562     0016                     	;# 
  1563     0017                     	;# 
  1564     0018                     	;# 
  1565     0019                     	;# 
  1566     001A                     	;# 
  1567     001B                     	;# 
  1568     001C                     	;# 
  1569     001E                     	;# 
  1570     001F                     	;# 
  1571     008C                     	;# 
  1572     008D                     	;# 
  1573     0091                     	;# 
  1574     0092                     	;# 
  1575     0093                     	;# 
  1576     0094                     	;# 
  1577     0095                     	;# 
  1578     0096                     	;# 
  1579     0097                     	;# 
  1580     0098                     	;# 
  1581     0099                     	;# 
  1582     009A                     	;# 
  1583     009B                     	;# 
  1584     009B                     	;# 
  1585     009C                     	;# 
  1586     009D                     	;# 
  1587     009E                     	;# 
  1588     010C                     	;# 
  1589     010D                     	;# 
  1590     0111                     	;# 
  1591     0112                     	;# 
  1592     0113                     	;# 
  1593     0114                     	;# 
  1594     0115                     	;# 
  1595     0116                     	;# 
  1596     0117                     	;# 
  1597     0118                     	;# 
  1598     0119                     	;# 
  1599     011A                     	;# 
  1600     011B                     	;# 
  1601     011D                     	;# 
  1602     011E                     	;# 
  1603     018C                     	;# 
  1604     018D                     	;# 
  1605     0191                     	;# 
  1606     0191                     	;# 
  1607     0192                     	;# 
  1608     0193                     	;# 
  1609     0193                     	;# 
  1610     0193                     	;# 
  1611     0194                     	;# 
  1612     0195                     	;# 
  1613     0196                     	;# 
  1614     0199                     	;# 
  1615     019A                     	;# 
  1616     019B                     	;# 
  1617     019B                     	;# 
  1618     019B                     	;# 
  1619     019B                     	;# 
  1620     019C                     	;# 
  1621     019C                     	;# 
  1622     019D                     	;# 
  1623     019E                     	;# 
  1624     019F                     	;# 
  1625     020C                     	;# 
  1626     020D                     	;# 
  1627     0211                     	;# 
  1628     0211                     	;# 
  1629     0212                     	;# 
  1630     0212                     	;# 
  1631     0213                     	;# 
  1632     0213                     	;# 
  1633     0214                     	;# 
  1634     0214                     	;# 
  1635     0215                     	;# 
  1636     0215                     	;# 
  1637     0215                     	;# 
  1638     0216                     	;# 
  1639     0216                     	;# 
  1640     0217                     	;# 
  1641     0217                     	;# 
  1642     0219                     	;# 
  1643     021A                     	;# 
  1644     021B                     	;# 
  1645     021C                     	;# 
  1646     021D                     	;# 
  1647     021E                     	;# 
  1648     021F                     	;# 
  1649     0291                     	;# 
  1650     0291                     	;# 
  1651     0292                     	;# 
  1652     0293                     	;# 
  1653     0294                     	;# 
  1654     0295                     	;# 
  1655     0295                     	;# 
  1656     0296                     	;# 
  1657     0298                     	;# 
  1658     0298                     	;# 
  1659     0299                     	;# 
  1660     029A                     	;# 
  1661     029B                     	;# 
  1662     029C                     	;# 
  1663     029C                     	;# 
  1664     029D                     	;# 
  1665     029E                     	;# 
  1666     029E                     	;# 
  1667     0311                     	;# 
  1668     0311                     	;# 
  1669     0312                     	;# 
  1670     0313                     	;# 
  1671     0318                     	;# 
  1672     0318                     	;# 
  1673     0319                     	;# 
  1674     031A                     	;# 
  1675     0394                     	;# 
  1676     0395                     	;# 
  1677     0396                     	;# 
  1678     039A                     	;# 
  1679     039C                     	;# 
  1680     039D                     	;# 
  1681     039E                     	;# 
  1682     039F                     	;# 
  1683     0415                     	;# 
  1684     0416                     	;# 
  1685     0417                     	;# 
  1686     041C                     	;# 
  1687     041D                     	;# 
  1688     041E                     	;# 
  1689     0FE4                     	;# 
  1690     0FE5                     	;# 
  1691     0FE6                     	;# 
  1692     0FE7                     	;# 
  1693     0FE8                     	;# 
  1694     0FE9                     	;# 
  1695     0FEA                     	;# 
  1696     0FEB                     	;# 
  1697     0FED                     	;# 
  1698     0FEE                     	;# 
  1699     0FEF                     	;# 
  1700     0000                     	;# 
  1701     0001                     	;# 
  1702     0002                     	;# 
  1703     0003                     	;# 
  1704     0004                     	;# 
  1705     0005                     	;# 
  1706     0006                     	;# 
  1707     0007                     	;# 
  1708     0008                     	;# 
  1709     0009                     	;# 
  1710     000A                     	;# 
  1711     000B                     	;# 
  1712     000C                     	;# 
  1713     000D                     	;# 
  1714     0011                     	;# 
  1715     0012                     	;# 
  1716     0013                     	;# 
  1717     0014                     	;# 
  1718     0015                     	;# 
  1719     0016                     	;# 
  1720     0016                     	;# 
  1721     0017                     	;# 
  1722     0018                     	;# 
  1723     0019                     	;# 
  1724     001A                     	;# 
  1725     001B                     	;# 
  1726     001C                     	;# 
  1727     001E                     	;# 
  1728     001F                     	;# 
  1729     008C                     	;# 
  1730     008D                     	;# 
  1731     0091                     	;# 
  1732     0092                     	;# 
  1733     0093                     	;# 
  1734     0094                     	;# 
  1735     0095                     	;# 
  1736     0096                     	;# 
  1737     0097                     	;# 
  1738     0098                     	;# 
  1739     0099                     	;# 
  1740     009A                     	;# 
  1741     009B                     	;# 
  1742     009B                     	;# 
  1743     009C                     	;# 
  1744     009D                     	;# 
  1745     009E                     	;# 
  1746     010C                     	;# 
  1747     010D                     	;# 
  1748     0111                     	;# 
  1749     0112                     	;# 
  1750     0113                     	;# 
  1751     0114                     	;# 
  1752     0115                     	;# 
  1753     0116                     	;# 
  1754     0117                     	;# 
  1755     0118                     	;# 
  1756     0119                     	;# 
  1757     011A                     	;# 
  1758     011B                     	;# 
  1759     011D                     	;# 
  1760     011E                     	;# 
  1761     018C                     	;# 
  1762     018D                     	;# 
  1763     0191                     	;# 
  1764     0191                     	;# 
  1765     0192                     	;# 
  1766     0193                     	;# 
  1767     0193                     	;# 
  1768     0193                     	;# 
  1769     0194                     	;# 
  1770     0195                     	;# 
  1771     0196                     	;# 
  1772     0199                     	;# 
  1773     019A                     	;# 
  1774     019B                     	;# 
  1775     019B                     	;# 
  1776     019B                     	;# 
  1777     019B                     	;# 
  1778     019C                     	;# 
  1779     019C                     	;# 
  1780     019D                     	;# 
  1781     019E                     	;# 
  1782     019F                     	;# 
  1783     020C                     	;# 
  1784     020D                     	;# 
  1785     0211                     	;# 
  1786     0211                     	;# 
  1787     0212                     	;# 
  1788     0212                     	;# 
  1789     0213                     	;# 
  1790     0213                     	;# 
  1791     0214                     	;# 
  1792     0214                     	;# 
  1793     0215                     	;# 
  1794     0215                     	;# 
  1795     0215                     	;# 
  1796     0216                     	;# 
  1797     0216                     	;# 
  1798     0217                     	;# 
  1799     0217                     	;# 
  1800     0219                     	;# 
  1801     021A                     	;# 
  1802     021B                     	;# 
  1803     021C                     	;# 
  1804     021D                     	;# 
  1805     021E                     	;# 
  1806     021F                     	;# 
  1807     0291                     	;# 
  1808     0291                     	;# 
  1809     0292                     	;# 
  1810     0293                     	;# 
  1811     0294                     	;# 
  1812     0295                     	;# 
  1813     0295                     	;# 
  1814     0296                     	;# 
  1815     0298                     	;# 
  1816     0298                     	;# 
  1817     0299                     	;# 
  1818     029A                     	;# 
  1819     029B                     	;# 
  1820     029C                     	;# 
  1821     029C                     	;# 
  1822     029D                     	;# 
  1823     029E                     	;# 
  1824     029E                     	;# 
  1825     0311                     	;# 
  1826     0311                     	;# 
  1827     0312                     	;# 
  1828     0313                     	;# 
  1829     0318                     	;# 
  1830     0318                     	;# 
  1831     0319                     	;# 
  1832     031A                     	;# 
  1833     0394                     	;# 
  1834     0395                     	;# 
  1835     0396                     	;# 
  1836     039A                     	;# 
  1837     039C                     	;# 
  1838     039D                     	;# 
  1839     039E                     	;# 
  1840     039F                     	;# 
  1841     0415                     	;# 
  1842     0416                     	;# 
  1843     0417                     	;# 
  1844     041C                     	;# 
  1845     041D                     	;# 
  1846     041E                     	;# 
  1847     0FE4                     	;# 
  1848     0FE5                     	;# 
  1849     0FE6                     	;# 
  1850     0FE7                     	;# 
  1851     0FE8                     	;# 
  1852     0FE9                     	;# 
  1853     0FEA                     	;# 
  1854     0FEB                     	;# 
  1855     0FED                     	;# 
  1856     0FEE                     	;# 
  1857     0FEF                     	;# 
  1858     0000                     	;# 
  1859     0001                     	;# 
  1860     0002                     	;# 
  1861     0003                     	;# 
  1862     0004                     	;# 
  1863     0005                     	;# 
  1864     0006                     	;# 
  1865     0007                     	;# 
  1866     0008                     	;# 
  1867     0009                     	;# 
  1868     000A                     	;# 
  1869     000B                     	;# 
  1870     000C                     	;# 
  1871     000D                     	;# 
  1872     0011                     	;# 
  1873     0012                     	;# 
  1874     0013                     	;# 
  1875     0014                     	;# 
  1876     0015                     	;# 
  1877     0016                     	;# 
  1878     0016                     	;# 
  1879     0017                     	;# 
  1880     0018                     	;# 
  1881     0019                     	;# 
  1882     001A                     	;# 
  1883     001B                     	;# 
  1884     001C                     	;# 
  1885     001E                     	;# 
  1886     001F                     	;# 
  1887     008C                     	;# 
  1888     008D                     	;# 
  1889     0091                     	;# 
  1890     0092                     	;# 
  1891     0093                     	;# 
  1892     0094                     	;# 
  1893     0095                     	;# 
  1894     0096                     	;# 
  1895     0097                     	;# 
  1896     0098                     	;# 
  1897     0099                     	;# 
  1898     009A                     	;# 
  1899     009B                     	;# 
  1900     009B                     	;# 
  1901     009C                     	;# 
  1902     009D                     	;# 
  1903     009E                     	;# 
  1904     010C                     	;# 
  1905     010D                     	;# 
  1906     0111                     	;# 
  1907     0112                     	;# 
  1908     0113                     	;# 
  1909     0114                     	;# 
  1910     0115                     	;# 
  1911     0116                     	;# 
  1912     0117                     	;# 
  1913     0118                     	;# 
  1914     0119                     	;# 
  1915     011A                     	;# 
  1916     011B                     	;# 
  1917     011D                     	;# 
  1918     011E                     	;# 
  1919     018C                     	;# 
  1920     018D                     	;# 
  1921     0191                     	;# 
  1922     0191                     	;# 
  1923     0192                     	;# 
  1924     0193                     	;# 
  1925     0193                     	;# 
  1926     0193                     	;# 
  1927     0194                     	;# 
  1928     0195                     	;# 
  1929     0196                     	;# 
  1930     0199                     	;# 
  1931     019A                     	;# 
  1932     019B                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019C                     	;# 
  1937     019C                     	;# 
  1938     019D                     	;# 
  1939     019E                     	;# 
  1940     019F                     	;# 
  1941     020C                     	;# 
  1942     020D                     	;# 
  1943     0211                     	;# 
  1944     0211                     	;# 
  1945     0212                     	;# 
  1946     0212                     	;# 
  1947     0213                     	;# 
  1948     0213                     	;# 
  1949     0214                     	;# 
  1950     0214                     	;# 
  1951     0215                     	;# 
  1952     0215                     	;# 
  1953     0215                     	;# 
  1954     0216                     	;# 
  1955     0216                     	;# 
  1956     0217                     	;# 
  1957     0217                     	;# 
  1958     0219                     	;# 
  1959     021A                     	;# 
  1960     021B                     	;# 
  1961     021C                     	;# 
  1962     021D                     	;# 
  1963     021E                     	;# 
  1964     021F                     	;# 
  1965     0291                     	;# 
  1966     0291                     	;# 
  1967     0292                     	;# 
  1968     0293                     	;# 
  1969     0294                     	;# 
  1970     0295                     	;# 
  1971     0295                     	;# 
  1972     0296                     	;# 
  1973     0298                     	;# 
  1974     0298                     	;# 
  1975     0299                     	;# 
  1976     029A                     	;# 
  1977     029B                     	;# 
  1978     029C                     	;# 
  1979     029C                     	;# 
  1980     029D                     	;# 
  1981     029E                     	;# 
  1982     029E                     	;# 
  1983     0311                     	;# 
  1984     0311                     	;# 
  1985     0312                     	;# 
  1986     0313                     	;# 
  1987     0318                     	;# 
  1988     0318                     	;# 
  1989     0319                     	;# 
  1990     031A                     	;# 
  1991     0394                     	;# 
  1992     0395                     	;# 
  1993     0396                     	;# 
  1994     039A                     	;# 
  1995     039C                     	;# 
  1996     039D                     	;# 
  1997     039E                     	;# 
  1998     039F                     	;# 
  1999     0415                     	;# 
  2000     0416                     	;# 
  2001     0417                     	;# 
  2002     041C                     	;# 
  2003     041D                     	;# 
  2004     041E                     	;# 
  2005     0FE4                     	;# 
  2006     0FE5                     	;# 
  2007     0FE6                     	;# 
  2008     0FE7                     	;# 
  2009     0FE8                     	;# 
  2010     0FE9                     	;# 
  2011     0FEA                     	;# 
  2012     0FEB                     	;# 
  2013     0FED                     	;# 
  2014     0FEE                     	;# 
  2015     0FEF                     	;# 
  2016     0000                     	;# 
  2017     0001                     	;# 
  2018     0002                     	;# 
  2019     0003                     	;# 
  2020     0004                     	;# 
  2021     0005                     	;# 
  2022     0006                     	;# 
  2023     0007                     	;# 
  2024     0008                     	;# 
  2025     0009                     	;# 
  2026     000A                     	;# 
  2027     000B                     	;# 
  2028     000C                     	;# 
  2029     000D                     	;# 
  2030     0011                     	;# 
  2031     0012                     	;# 
  2032     0013                     	;# 
  2033     0014                     	;# 
  2034     0015                     	;# 
  2035     0016                     	;# 
  2036     0016                     	;# 
  2037     0017                     	;# 
  2038     0018                     	;# 
  2039     0019                     	;# 
  2040     001A                     	;# 
  2041     001B                     	;# 
  2042     001C                     	;# 
  2043     001E                     	;# 
  2044     001F                     	;# 
  2045     008C                     	;# 
  2046     008D                     	;# 
  2047     0091                     	;# 
  2048     0092                     	;# 
  2049     0093                     	;# 
  2050     0094                     	;# 
  2051     0095                     	;# 
  2052     0096                     	;# 
  2053     0097                     	;# 
  2054     0098                     	;# 
  2055     0099                     	;# 
  2056     009A                     	;# 
  2057     009B                     	;# 
  2058     009B                     	;# 
  2059     009C                     	;# 
  2060     009D                     	;# 
  2061     009E                     	;# 
  2062     010C                     	;# 
  2063     010D                     	;# 
  2064     0111                     	;# 
  2065     0112                     	;# 
  2066     0113                     	;# 
  2067     0114                     	;# 
  2068     0115                     	;# 
  2069     0116                     	;# 
  2070     0117                     	;# 
  2071     0118                     	;# 
  2072     0119                     	;# 
  2073     011A                     	;# 
  2074     011B                     	;# 
  2075     011D                     	;# 
  2076     011E                     	;# 
  2077     018C                     	;# 
  2078     018D                     	;# 
  2079     0191                     	;# 
  2080     0191                     	;# 
  2081     0192                     	;# 
  2082     0193                     	;# 
  2083     0193                     	;# 
  2084     0193                     	;# 
  2085     0194                     	;# 
  2086     0195                     	;# 
  2087     0196                     	;# 
  2088     0199                     	;# 
  2089     019A                     	;# 
  2090     019B                     	;# 
  2091     019B                     	;# 
  2092     019B                     	;# 
  2093     019B                     	;# 
  2094     019C                     	;# 
  2095     019C                     	;# 
  2096     019D                     	;# 
  2097     019E                     	;# 
  2098     019F                     	;# 
  2099     020C                     	;# 
  2100     020D                     	;# 
  2101     0211                     	;# 
  2102     0211                     	;# 
  2103     0212                     	;# 
  2104     0212                     	;# 
  2105     0213                     	;# 
  2106     0213                     	;# 
  2107     0214                     	;# 
  2108     0214                     	;# 
  2109     0215                     	;# 
  2110     0215                     	;# 
  2111     0215                     	;# 
  2112     0216                     	;# 
  2113     0216                     	;# 
  2114     0217                     	;# 
  2115     0217                     	;# 
  2116     0219                     	;# 
  2117     021A                     	;# 
  2118     021B                     	;# 
  2119     021C                     	;# 
  2120     021D                     	;# 
  2121     021E                     	;# 
  2122     021F                     	;# 
  2123     0291                     	;# 
  2124     0291                     	;# 
  2125     0292                     	;# 
  2126     0293                     	;# 
  2127     0294                     	;# 
  2128     0295                     	;# 
  2129     0295                     	;# 
  2130     0296                     	;# 
  2131     0298                     	;# 
  2132     0298                     	;# 
  2133     0299                     	;# 
  2134     029A                     	;# 
  2135     029B                     	;# 
  2136     029C                     	;# 
  2137     029C                     	;# 
  2138     029D                     	;# 
  2139     029E                     	;# 
  2140     029E                     	;# 
  2141     0311                     	;# 
  2142     0311                     	;# 
  2143     0312                     	;# 
  2144     0313                     	;# 
  2145     0318                     	;# 
  2146     0318                     	;# 
  2147     0319                     	;# 
  2148     031A                     	;# 
  2149     0394                     	;# 
  2150     0395                     	;# 
  2151     0396                     	;# 
  2152     039A                     	;# 
  2153     039C                     	;# 
  2154     039D                     	;# 
  2155     039E                     	;# 
  2156     039F                     	;# 
  2157     0415                     	;# 
  2158     0416                     	;# 
  2159     0417                     	;# 
  2160     041C                     	;# 
  2161     041D                     	;# 
  2162     041E                     	;# 
  2163     0FE4                     	;# 
  2164     0FE5                     	;# 
  2165     0FE6                     	;# 
  2166     0FE7                     	;# 
  2167     0FE8                     	;# 
  2168     0FE9                     	;# 
  2169     0FEA                     	;# 
  2170     0FEB                     	;# 
  2171     0FED                     	;# 
  2172     0FEE                     	;# 
  2173     0FEF                     	;# 
  2174     0000                     	;# 
  2175     0001                     	;# 
  2176     0002                     	;# 
  2177     0003                     	;# 
  2178     0004                     	;# 
  2179     0005                     	;# 
  2180     0006                     	;# 
  2181     0007                     	;# 
  2182     0008                     	;# 
  2183     0009                     	;# 
  2184     000A                     	;# 
  2185     000B                     	;# 
  2186     000C                     	;# 
  2187     000D                     	;# 
  2188     0011                     	;# 
  2189     0012                     	;# 
  2190     0013                     	;# 
  2191     0014                     	;# 
  2192     0015                     	;# 
  2193     0016                     	;# 
  2194     0016                     	;# 
  2195     0017                     	;# 
  2196     0018                     	;# 
  2197     0019                     	;# 
  2198     001A                     	;# 
  2199     001B                     	;# 
  2200     001C                     	;# 
  2201     001E                     	;# 
  2202     001F                     	;# 
  2203     008C                     	;# 
  2204     008D                     	;# 
  2205     0091                     	;# 
  2206     0092                     	;# 
  2207     0093                     	;# 
  2208     0094                     	;# 
  2209     0095                     	;# 
  2210     0096                     	;# 
  2211     0097                     	;# 
  2212     0098                     	;# 
  2213     0099                     	;# 
  2214     009A                     	;# 
  2215     009B                     	;# 
  2216     009B                     	;# 
  2217     009C                     	;# 
  2218     009D                     	;# 
  2219     009E                     	;# 
  2220     010C                     	;# 
  2221     010D                     	;# 
  2222     0111                     	;# 
  2223     0112                     	;# 
  2224     0113                     	;# 
  2225     0114                     	;# 
  2226     0115                     	;# 
  2227     0116                     	;# 
  2228     0117                     	;# 
  2229     0118                     	;# 
  2230     0119                     	;# 
  2231     011A                     	;# 
  2232     011B                     	;# 
  2233     011D                     	;# 
  2234     011E                     	;# 
  2235     018C                     	;# 
  2236     018D                     	;# 
  2237     0191                     	;# 
  2238     0191                     	;# 
  2239     0192                     	;# 
  2240     0193                     	;# 
  2241     0193                     	;# 
  2242     0193                     	;# 
  2243     0194                     	;# 
  2244     0195                     	;# 
  2245     0196                     	;# 
  2246     0199                     	;# 
  2247     019A                     	;# 
  2248     019B                     	;# 
  2249     019B                     	;# 
  2250     019B                     	;# 
  2251     019B                     	;# 
  2252     019C                     	;# 
  2253     019C                     	;# 
  2254     019D                     	;# 
  2255     019E                     	;# 
  2256     019F                     	;# 
  2257     020C                     	;# 
  2258     020D                     	;# 
  2259     0211                     	;# 
  2260     0211                     	;# 
  2261     0212                     	;# 
  2262     0212                     	;# 
  2263     0213                     	;# 
  2264     0213                     	;# 
  2265     0214                     	;# 
  2266     0214                     	;# 
  2267     0215                     	;# 
  2268     0215                     	;# 
  2269     0215                     	;# 
  2270     0216                     	;# 
  2271     0216                     	;# 
  2272     0217                     	;# 
  2273     0217                     	;# 
  2274     0219                     	;# 
  2275     021A                     	;# 
  2276     021B                     	;# 
  2277     021C                     	;# 
  2278     021D                     	;# 
  2279     021E                     	;# 
  2280     021F                     	;# 
  2281     0291                     	;# 
  2282     0291                     	;# 
  2283     0292                     	;# 
  2284     0293                     	;# 
  2285     0294                     	;# 
  2286     0295                     	;# 
  2287     0295                     	;# 
  2288     0296                     	;# 
  2289     0298                     	;# 
  2290     0298                     	;# 
  2291     0299                     	;# 
  2292     029A                     	;# 
  2293     029B                     	;# 
  2294     029C                     	;# 
  2295     029C                     	;# 
  2296     029D                     	;# 
  2297     029E                     	;# 
  2298     029E                     	;# 
  2299     0311                     	;# 
  2300     0311                     	;# 
  2301     0312                     	;# 
  2302     0313                     	;# 
  2303     0318                     	;# 
  2304     0318                     	;# 
  2305     0319                     	;# 
  2306     031A                     	;# 
  2307     0394                     	;# 
  2308     0395                     	;# 
  2309     0396                     	;# 
  2310     039A                     	;# 
  2311     039C                     	;# 
  2312     039D                     	;# 
  2313     039E                     	;# 
  2314     039F                     	;# 
  2315     0415                     	;# 
  2316     0416                     	;# 
  2317     0417                     	;# 
  2318     041C                     	;# 
  2319     041D                     	;# 
  2320     041E                     	;# 
  2321     0FE4                     	;# 
  2322     0FE5                     	;# 
  2323     0FE6                     	;# 
  2324     0FE7                     	;# 
  2325     0FE8                     	;# 
  2326     0FE9                     	;# 
  2327     0FEA                     	;# 
  2328     0FEB                     	;# 
  2329     0FED                     	;# 
  2330     0FEE                     	;# 
  2331     0FEF                     	;# 
  2332     0000                     	;# 
  2333     0001                     	;# 
  2334     0002                     	;# 
  2335     0003                     	;# 
  2336     0004                     	;# 
  2337     0005                     	;# 
  2338     0006                     	;# 
  2339     0007                     	;# 
  2340     0008                     	;# 
  2341     0009                     	;# 
  2342     000A                     	;# 
  2343     000B                     	;# 
  2344     000C                     	;# 
  2345     000D                     	;# 
  2346     0011                     	;# 
  2347     0012                     	;# 
  2348     0013                     	;# 
  2349     0014                     	;# 
  2350     0015                     	;# 
  2351     0016                     	;# 
  2352     0016                     	;# 
  2353     0017                     	;# 
  2354     0018                     	;# 
  2355     0019                     	;# 
  2356     001A                     	;# 
  2357     001B                     	;# 
  2358     001C                     	;# 
  2359     001E                     	;# 
  2360     001F                     	;# 
  2361     008C                     	;# 
  2362     008D                     	;# 
  2363     0091                     	;# 
  2364     0092                     	;# 
  2365     0093                     	;# 
  2366     0094                     	;# 
  2367     0095                     	;# 
  2368     0096                     	;# 
  2369     0097                     	;# 
  2370     0098                     	;# 
  2371     0099                     	;# 
  2372     009A                     	;# 
  2373     009B                     	;# 
  2374     009B                     	;# 
  2375     009C                     	;# 
  2376     009D                     	;# 
  2377     009E                     	;# 
  2378     010C                     	;# 
  2379     010D                     	;# 
  2380     0111                     	;# 
  2381     0112                     	;# 
  2382     0113                     	;# 
  2383     0114                     	;# 
  2384     0115                     	;# 
  2385     0116                     	;# 
  2386     0117                     	;# 
  2387     0118                     	;# 
  2388     0119                     	;# 
  2389     011A                     	;# 
  2390     011B                     	;# 
  2391     011D                     	;# 
  2392     011E                     	;# 
  2393     018C                     	;# 
  2394     018D                     	;# 
  2395     0191                     	;# 
  2396     0191                     	;# 
  2397     0192                     	;# 
  2398     0193                     	;# 
  2399     0193                     	;# 
  2400     0193                     	;# 
  2401     0194                     	;# 
  2402     0195                     	;# 
  2403     0196                     	;# 
  2404     0199                     	;# 
  2405     019A                     	;# 
  2406     019B                     	;# 
  2407     019B                     	;# 
  2408     019B                     	;# 
  2409     019B                     	;# 
  2410     019C                     	;# 
  2411     019C                     	;# 
  2412     019D                     	;# 
  2413     019E                     	;# 
  2414     019F                     	;# 
  2415     020C                     	;# 
  2416     020D                     	;# 
  2417     0211                     	;# 
  2418     0211                     	;# 
  2419     0212                     	;# 
  2420     0212                     	;# 
  2421     0213                     	;# 
  2422     0213                     	;# 
  2423     0214                     	;# 
  2424     0214                     	;# 
  2425     0215                     	;# 
  2426     0215                     	;# 
  2427     0215                     	;# 
  2428     0216                     	;# 
  2429     0216                     	;# 
  2430     0217                     	;# 
  2431     0217                     	;# 
  2432     0219                     	;# 
  2433     021A                     	;# 
  2434     021B                     	;# 
  2435     021C                     	;# 
  2436     021D                     	;# 
  2437     021E                     	;# 
  2438     021F                     	;# 
  2439     0291                     	;# 
  2440     0291                     	;# 
  2441     0292                     	;# 
  2442     0293                     	;# 
  2443     0294                     	;# 
  2444     0295                     	;# 
  2445     0295                     	;# 
  2446     0296                     	;# 
  2447     0298                     	;# 
  2448     0298                     	;# 
  2449     0299                     	;# 
  2450     029A                     	;# 
  2451     029B                     	;# 
  2452     029C                     	;# 
  2453     029C                     	;# 
  2454     029D                     	;# 
  2455     029E                     	;# 
  2456     029E                     	;# 
  2457     0311                     	;# 
  2458     0311                     	;# 
  2459     0312                     	;# 
  2460     0313                     	;# 
  2461     0318                     	;# 
  2462     0318                     	;# 
  2463     0319                     	;# 
  2464     031A                     	;# 
  2465     0394                     	;# 
  2466     0395                     	;# 
  2467     0396                     	;# 
  2468     039A                     	;# 
  2469     039C                     	;# 
  2470     039D                     	;# 
  2471     039E                     	;# 
  2472     039F                     	;# 
  2473     0415                     	;# 
  2474     0416                     	;# 
  2475     0417                     	;# 
  2476     041C                     	;# 
  2477     041D                     	;# 
  2478     041E                     	;# 
  2479     0FE4                     	;# 
  2480     0FE5                     	;# 
  2481     0FE6                     	;# 
  2482     0FE7                     	;# 
  2483     0FE8                     	;# 
  2484     0FE9                     	;# 
  2485     0FEA                     	;# 
  2486     0FEB                     	;# 
  2487     0FED                     	;# 
  2488     0FEE                     	;# 
  2489     0FEF                     	;# 
  2490     0000                     	;# 
  2491     0001                     	;# 
  2492     0002                     	;# 
  2493     0003                     	;# 
  2494     0004                     	;# 
  2495     0005                     	;# 
  2496     0006                     	;# 
  2497     0007                     	;# 
  2498     0008                     	;# 
  2499     0009                     	;# 
  2500     000A                     	;# 
  2501     000B                     	;# 
  2502     000C                     	;# 
  2503     000D                     	;# 
  2504     0011                     	;# 
  2505     0012                     	;# 
  2506     0013                     	;# 
  2507     0014                     	;# 
  2508     0015                     	;# 
  2509     0016                     	;# 
  2510     0016                     	;# 
  2511     0017                     	;# 
  2512     0018                     	;# 
  2513     0019                     	;# 
  2514     001A                     	;# 
  2515     001B                     	;# 
  2516     001C                     	;# 
  2517     001E                     	;# 
  2518     001F                     	;# 
  2519     008C                     	;# 
  2520     008D                     	;# 
  2521     0091                     	;# 
  2522     0092                     	;# 
  2523     0093                     	;# 
  2524     0094                     	;# 
  2525     0095                     	;# 
  2526     0096                     	;# 
  2527     0097                     	;# 
  2528     0098                     	;# 
  2529     0099                     	;# 
  2530     009A                     	;# 
  2531     009B                     	;# 
  2532     009B                     	;# 
  2533     009C                     	;# 
  2534     009D                     	;# 
  2535     009E                     	;# 
  2536     010C                     	;# 
  2537     010D                     	;# 
  2538     0111                     	;# 
  2539     0112                     	;# 
  2540     0113                     	;# 
  2541     0114                     	;# 
  2542     0115                     	;# 
  2543     0116                     	;# 
  2544     0117                     	;# 
  2545     0118                     	;# 
  2546     0119                     	;# 
  2547     011A                     	;# 
  2548     011B                     	;# 
  2549     011D                     	;# 
  2550     011E                     	;# 
  2551     018C                     	;# 
  2552     018D                     	;# 
  2553     0191                     	;# 
  2554     0191                     	;# 
  2555     0192                     	;# 
  2556     0193                     	;# 
  2557     0193                     	;# 
  2558     0193                     	;# 
  2559     0194                     	;# 
  2560     0195                     	;# 
  2561     0196                     	;# 
  2562     0199                     	;# 
  2563     019A                     	;# 
  2564     019B                     	;# 
  2565     019B                     	;# 
  2566     019B                     	;# 
  2567     019B                     	;# 
  2568     019C                     	;# 
  2569     019C                     	;# 
  2570     019D                     	;# 
  2571     019E                     	;# 
  2572     019F                     	;# 
  2573     020C                     	;# 
  2574     020D                     	;# 
  2575     0211                     	;# 
  2576     0211                     	;# 
  2577     0212                     	;# 
  2578     0212                     	;# 
  2579     0213                     	;# 
  2580     0213                     	;# 
  2581     0214                     	;# 
  2582     0214                     	;# 
  2583     0215                     	;# 
  2584     0215                     	;# 
  2585     0215                     	;# 
  2586     0216                     	;# 
  2587     0216                     	;# 
  2588     0217                     	;# 
  2589     0217                     	;# 
  2590     0219                     	;# 
  2591     021A                     	;# 
  2592     021B                     	;# 
  2593     021C                     	;# 
  2594     021D                     	;# 
  2595     021E                     	;# 
  2596     021F                     	;# 
  2597     0291                     	;# 
  2598     0291                     	;# 
  2599     0292                     	;# 
  2600     0293                     	;# 
  2601     0294                     	;# 
  2602     0295                     	;# 
  2603     0295                     	;# 
  2604     0296                     	;# 
  2605     0298                     	;# 
  2606     0298                     	;# 
  2607     0299                     	;# 
  2608     029A                     	;# 
  2609     029B                     	;# 
  2610     029C                     	;# 
  2611     029C                     	;# 
  2612     029D                     	;# 
  2613     029E                     	;# 
  2614     029E                     	;# 
  2615     0311                     	;# 
  2616     0311                     	;# 
  2617     0312                     	;# 
  2618     0313                     	;# 
  2619     0318                     	;# 
  2620     0318                     	;# 
  2621     0319                     	;# 
  2622     031A                     	;# 
  2623     0394                     	;# 
  2624     0395                     	;# 
  2625     0396                     	;# 
  2626     039A                     	;# 
  2627     039C                     	;# 
  2628     039D                     	;# 
  2629     039E                     	;# 
  2630     039F                     	;# 
  2631     0415                     	;# 
  2632     0416                     	;# 
  2633     0417                     	;# 
  2634     041C                     	;# 
  2635     041D                     	;# 
  2636     041E                     	;# 
  2637     0FE4                     	;# 
  2638     0FE5                     	;# 
  2639     0FE6                     	;# 
  2640     0FE7                     	;# 
  2641     0FE8                     	;# 
  2642     0FE9                     	;# 
  2643     0FEA                     	;# 
  2644     0FEB                     	;# 
  2645     0FED                     	;# 
  2646     0FEE                     	;# 
  2647     0FEF                     	;# 
  2648     0000                     	;# 
  2649     0001                     	;# 
  2650     0002                     	;# 
  2651     0003                     	;# 
  2652     0004                     	;# 
  2653     0005                     	;# 
  2654     0006                     	;# 
  2655     0007                     	;# 
  2656     0008                     	;# 
  2657     0009                     	;# 
  2658     000A                     	;# 
  2659     000B                     	;# 
  2660     000C                     	;# 
  2661     000D                     	;# 
  2662     0011                     	;# 
  2663     0012                     	;# 
  2664     0013                     	;# 
  2665     0014                     	;# 
  2666     0015                     	;# 
  2667     0016                     	;# 
  2668     0016                     	;# 
  2669     0017                     	;# 
  2670     0018                     	;# 
  2671     0019                     	;# 
  2672     001A                     	;# 
  2673     001B                     	;# 
  2674     001C                     	;# 
  2675     001E                     	;# 
  2676     001F                     	;# 
  2677     008C                     	;# 
  2678     008D                     	;# 
  2679     0091                     	;# 
  2680     0092                     	;# 
  2681     0093                     	;# 
  2682     0094                     	;# 
  2683     0095                     	;# 
  2684     0096                     	;# 
  2685     0097                     	;# 
  2686     0098                     	;# 
  2687     0099                     	;# 
  2688     009A                     	;# 
  2689     009B                     	;# 
  2690     009B                     	;# 
  2691     009C                     	;# 
  2692     009D                     	;# 
  2693     009E                     	;# 
  2694     010C                     	;# 
  2695     010D                     	;# 
  2696     0111                     	;# 
  2697     0112                     	;# 
  2698     0113                     	;# 
  2699     0114                     	;# 
  2700     0115                     	;# 
  2701     0116                     	;# 
  2702     0117                     	;# 
  2703     0118                     	;# 
  2704     0119                     	;# 
  2705     011A                     	;# 
  2706     011B                     	;# 
  2707     011D                     	;# 
  2708     011E                     	;# 
  2709     018C                     	;# 
  2710     018D                     	;# 
  2711     0191                     	;# 
  2712     0191                     	;# 
  2713     0192                     	;# 
  2714     0193                     	;# 
  2715     0193                     	;# 
  2716     0193                     	;# 
  2717     0194                     	;# 
  2718     0195                     	;# 
  2719     0196                     	;# 
  2720     0199                     	;# 
  2721     019A                     	;# 
  2722     019B                     	;# 
  2723     019B                     	;# 
  2724     019B                     	;# 
  2725     019B                     	;# 
  2726     019C                     	;# 
  2727     019C                     	;# 
  2728     019D                     	;# 
  2729     019E                     	;# 
  2730     019F                     	;# 
  2731     020C                     	;# 
  2732     020D                     	;# 
  2733     0211                     	;# 
  2734     0211                     	;# 
  2735     0212                     	;# 
  2736     0212                     	;# 
  2737     0213                     	;# 
  2738     0213                     	;# 
  2739     0214                     	;# 
  2740     0214                     	;# 
  2741     0215                     	;# 
  2742     0215                     	;# 
  2743     0215                     	;# 
  2744     0216                     	;# 
  2745     0216                     	;# 
  2746     0217                     	;# 
  2747     0217                     	;# 
  2748     0219                     	;# 
  2749     021A                     	;# 
  2750     021B                     	;# 
  2751     021C                     	;# 
  2752     021D                     	;# 
  2753     021E                     	;# 
  2754     021F                     	;# 
  2755     0291                     	;# 
  2756     0291                     	;# 
  2757     0292                     	;# 
  2758     0293                     	;# 
  2759     0294                     	;# 
  2760     0295                     	;# 
  2761     0295                     	;# 
  2762     0296                     	;# 
  2763     0298                     	;# 
  2764     0298                     	;# 
  2765     0299                     	;# 
  2766     029A                     	;# 
  2767     029B                     	;# 
  2768     029C                     	;# 
  2769     029C                     	;# 
  2770     029D                     	;# 
  2771     029E                     	;# 
  2772     029E                     	;# 
  2773     0311                     	;# 
  2774     0311                     	;# 
  2775     0312                     	;# 
  2776     0313                     	;# 
  2777     0318                     	;# 
  2778     0318                     	;# 
  2779     0319                     	;# 
  2780     031A                     	;# 
  2781     0394                     	;# 
  2782     0395                     	;# 
  2783     0396                     	;# 
  2784     039A                     	;# 
  2785     039C                     	;# 
  2786     039D                     	;# 
  2787     039E                     	;# 
  2788     039F                     	;# 
  2789     0415                     	;# 
  2790     0416                     	;# 
  2791     0417                     	;# 
  2792     041C                     	;# 
  2793     041D                     	;# 
  2794     041E                     	;# 
  2795     0FE4                     	;# 
  2796     0FE5                     	;# 
  2797     0FE6                     	;# 
  2798     0FE7                     	;# 
  2799     0FE8                     	;# 
  2800     0FE9                     	;# 
  2801     0FEA                     	;# 
  2802     0FEB                     	;# 
  2803     0FED                     	;# 
  2804     0FEE                     	;# 
  2805     0FEF                     	;# 
  2806                           
  2807 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2808     0000                     
  2809 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2810     0000                     
  2811 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2812     0000                     
  2813                           	psect	idataBANK0
  2814     0003                     __pidataBANK0:
  2815                           
  2816                           ;initializer for _subindo
  2817     0003  3401               	retlw	1
  2818                           
  2819                           	psect	stringtext1
  2820     07FF                     __pstringtext1:
  2821     07FF                     _matrix_conf:
  2822     07FF  3409               	retlw	9
  2823     0800  3400               	retlw	0
  2824     0801  340A               	retlw	10
  2825     0802  3400               	retlw	0
  2826     0803  340B               	retlw	11
  2827     0804  3407               	retlw	7
  2828     0805  340C               	retlw	12
  2829     0806  3401               	retlw	1
  2830     0807  340F               	retlw	15
  2831     0808  3401               	retlw	1
  2832     0809  340F               	retlw	15
  2833     080A  3400               	retlw	0
  2834     080B                     __end_of_matrix_conf:
  2835                           
  2836                           	psect	stringtext2
  2837     080B                     __pstringtext2:
  2838     080B                     _spi1_configuration:
  2839     080B  3400               	retlw	0
  2840     080C  3440               	retlw	64
  2841     080D  3401               	retlw	1
  2842     080E  3400               	retlw	0
  2843     080F                     __end_of_spi1_configuration:
  2844                           
  2845                           	psect	nvBANK0
  2846     0067                     __pnvBANK0:
  2847     0067                     _IOCBF0_InterruptHandler:
  2848     0067                     	ds	2
  2849                           
  2850                           	psect	nvBANK1
  2851     00B3                     __pnvBANK1:
  2852     00B3                     _TMR4_InterruptHandler:
  2853     00B3                     	ds	2
  2854     00B5                     _CCP4_CallBack:
  2855     00B5                     	ds	2
  2856     00B7                     _TMR0_InterruptHandler:
  2857     00B7                     	ds	2
  2858     00B9                     _EUSART_ErrorHandler:
  2859     00B9                     	ds	2
  2860     00BB                     _EUSART_OverrunErrorHandler:
  2861     00BB                     	ds	2
  2862     00BD                     _EUSART_FramingErrorHandler:
  2863     00BD                     	ds	2
  2864     00BF                     _IOCBF3_InterruptHandler:
  2865     00BF                     	ds	2
  2866     0015                     _TMR0	set	21
  2867     001C                     _T2CONbits	set	28
  2868     001C                     _T2CON	set	28
  2869     001A                     _TMR2	set	26
  2870     001B                     _PR2	set	27
  2871     0019                     _T1GCONbits	set	25
  2872     0018                     _T1CONbits	set	24
  2873     0018                     _T1CON	set	24
  2874     0016                     _TMR1L	set	22
  2875     0017                     _TMR1H	set	23
  2876     0019                     _T1GCON	set	25
  2877     0013                     _PIR3bits	set	19
  2878     0011                     _PIR1bits	set	17
  2879     000B                     _INTCONbits	set	11
  2880     0012                     _PIR2bits	set	18
  2881     0095                     _OPTION_REG	set	149
  2882     0093                     _PIE3bits	set	147
  2883     008D                     _TRISBbits	set	141
  2884     009D                     _ADCON0bits	set	157
  2885     009D                     _ADCON0	set	157
  2886     009C                     _ADRESH	set	156
  2887     009B                     _ADRESL	set	155
  2888     009E                     _ADCON1	set	158
  2889     0097                     _WDTCON	set	151
  2890     0098                     _OSCTUNE	set	152
  2891     0099                     _OSCCON	set	153
  2892     0095                     _OPTION_REGbits	set	149
  2893     008D                     _TRISB	set	141
  2894     008C                     _TRISA	set	140
  2895     0092                     _PIE2bits	set	146
  2896     010D                     _LATBbits	set	269
  2897     0117                     _FVRCONbits	set	279
  2898     0117                     _FVRCON	set	279
  2899     0116                     _BORCON	set	278
  2900     011E                     _APFCON1	set	286
  2901     011D                     _APFCON0	set	285
  2902     010D                     _LATB	set	269
  2903     010C                     _LATA	set	268
  2904     0112                     _CM1CON1	set	274
  2905     0111                     _CM1CON0	set	273
  2906     0115                     _CMOUTbits	set	277
  2907     0114                     _CM2CON1	set	276
  2908     0113                     _CM2CON0	set	275
  2909     019A                     _TXREG	set	410
  2910     0199                     _RCREG	set	409
  2911     019D                     _RCSTAbits	set	413
  2912     019E                     _TXSTAbits	set	414
  2913     019C                     _SPBRGH	set	412
  2914     019B                     _SPBRGL	set	411
  2915     019E                     _TXSTA	set	414
  2916     019D                     _RCSTA	set	413
  2917     019F                     _BAUDCON	set	415
  2918     018C                     _ANSELA	set	396
  2919     018D                     _ANSELB	set	397
  2920     0211                     _SSP1BUF	set	529
  2921     0216                     _SSP1CON2	set	534
  2922     0215                     _SSP1CON1bits	set	533
  2923     0212                     _SSP1ADD	set	530
  2924     0215                     _SSP1CON1	set	533
  2925     0214                     _SSP1STAT	set	532
  2926     020C                     _WPUA	set	524
  2927     020D                     _WPUB	set	525
  2928     029E                     _CCPTMRS0bits	set	670
  2929     031A                     _CCP4CON	set	794
  2930     0318                     _CCPR4L	set	792
  2931     0319                     _CCPR4H	set	793
  2932     0312                     _CCPR3H	set	786
  2933     0311                     _CCPR3L	set	785
  2934     0313                     _CCP3CON	set	787
  2935     0394                     _IOCBPbits	set	916
  2936     0395                     _IOCBNbits	set	917
  2937     0396                     _IOCBFbits	set	918
  2938     0417                     _T4CONbits	set	1047
  2939     0417                     _T4CON	set	1047
  2940     0415                     _TMR4	set	1045
  2941     0416                     _PR4	set	1046
  2942                           
  2943                           	psect	cinit
  2944     0058                     start_initialization:	
  2945                           ; #config settings
  2946                           
  2947     0058                     __initialization:
  2948                           
  2949                           ; Initialize objects allocated to BANK0
  2950     0058  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  2951     005B  00E9               	movwf	__pdataBANK0& (0+127)
  2952                           
  2953                           ; Clear objects allocated to BANK0
  2954     005C  3045               	movlw	low __pbssBANK0
  2955     005D  0084               	movwf	4
  2956     005E  3000               	movlw	high __pbssBANK0
  2957     005F  0085               	movwf	5
  2958     0060  3022               	movlw	34
  2959     0061  318E  2617  3180   	fcall	clear_ram0
  2960                           
  2961                           ; Clear objects allocated to BANK1
  2962     0064  30C1               	movlw	low __pbssBANK1
  2963     0065  0084               	movwf	4
  2964     0066  3000               	movlw	high __pbssBANK1
  2965     0067  0085               	movwf	5
  2966     0068  3008               	movlw	8
  2967     0069  318E  2617  3180   	fcall	clear_ram0
  2968     006C                     end_of_initialization:	
  2969                           ;End of C runtime variable initialization code
  2970                           
  2971     006C                     __end_of__initialization:
  2972     006C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2973     006D  0020               	movlb	0
  2974     006E  3184  2CBC         	ljmp	_main	;jump to C main() function
  2975                           
  2976                           	psect	bssBANK0
  2977     0045                     __pbssBANK0:
  2978     0045                     _velocidadeMotor:
  2979     0045                     	ds	4
  2980     0049                     TMR4_ISR@CountCallBack:
  2981     0049                     	ds	2
  2982     004B                     TMR0_ISR@CountCallBack:
  2983     004B                     	ds	2
  2984     004D                     _timer1ReloadVal:
  2985     004D                     	ds	2
  2986     004F                     _ADC_InterruptHandler:
  2987     004F                     	ds	2
  2988     0051                     _temperatura:
  2989     0051                     	ds	2
  2990     0053                     _t2:
  2991     0053                     	ds	2
  2992     0055                     _t1:
  2993     0055                     	ds	2
  2994     0057                     _timer0ReloadVal:
  2995     0057                     	ds	1
  2996     0058                     _eusartRxLastError:
  2997     0058                     	ds	1
  2998     0059                     _destinoDesc:
  2999     0059                     	ds	1
  3000     005A                     _destinoSub:
  3001     005A                     	ds	1
  3002     005B                     _altura:
  3003     005B                     	ds	1
  3004     005C                     _andarAtual:
  3005     005C                     	ds	1
  3006     005D                     _dTemp:
  3007     005D                     	ds	1
  3008     005E                     _destino:
  3009     005E                     	ds	1
  3010     005F                     _oTemp:
  3011     005F                     	ds	1
  3012     0060                     _origem:
  3013     0060                     	ds	1
  3014     0061                     _flag:
  3015     0061                     	ds	1
  3016     0062                     _pulsoEncoder:
  3017     0062                     	ds	1
  3018     0063                     _RXaccepted:
  3019     0063                     	ds	1
  3020     0064                     _waitRX:
  3021     0064                     	ds	1
  3022     0065                     _rxValue:
  3023     0065                     	ds	1
  3024     0066                     _state:
  3025     0066                     	ds	1
  3026                           
  3027                           	psect	dataBANK0
  3028     0069                     __pdataBANK0:
  3029     0069                     _subindo:
  3030     0069                     	ds	1
  3031                           
  3032                           	psect	bssBANK1
  3033     00C1                     __pbssBANK1:
  3034     00C1                     _MatrixLed:
  3035     00C1                     	ds	8
  3036                           
  3037                           	psect	clrtext
  3038     0E17                     clear_ram0:	
  3039                           ;	Called with FSR0 containing the base address, and
  3040                           ;	WREG with the size to clear
  3041                           
  3042     0E17  0064               	clrwdt	;clear the watchdog before getting into this loop
  3043     0E18                     clrloop0:
  3044     0E18  0180               	clrf	0	;clear RAM location pointed to by FSR
  3045     0E19  3101               	addfsr 0,1
  3046     0E1A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3047     0E1B  2E18               	goto	clrloop0	;have we reached the end yet?
  3048     0E1C  3400               	retlw	0	;all done for this memory range, return
  3049                           
  3050                           	psect	cstackBANK1
  3051     00A0                     __pcstackBANK1:
  3052     00A0                     ?_IOCBF0_SetInterruptHandler:
  3053     00A0                     ?_IOCBF3_SetInterruptHandler:	
  3054                           ; 1 bytes @ 0x0
  3055                           
  3056     00A0                     ??_SPI1_Initialize:	
  3057                           ; 1 bytes @ 0x0
  3058                           
  3059     00A0                     ??_OSCILLATOR_Initialize:	
  3060                           ; 1 bytes @ 0x0
  3061                           
  3062     00A0                     ??_WDT_Initialize:	
  3063                           ; 1 bytes @ 0x0
  3064                           
  3065     00A0                     ??_FVR_Initialize:	
  3066                           ; 1 bytes @ 0x0
  3067                           
  3068     00A0                     ??_TMR2_Initialize:	
  3069                           ; 1 bytes @ 0x0
  3070                           
  3071     00A0                     ??_ADC_Initialize:	
  3072                           ; 1 bytes @ 0x0
  3073                           
  3074     00A0                     ??_TMR1_Initialize:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077     00A0                     ?_EUSART_SetFramingErrorHandler:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080     00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083     00A0                     ?_EUSART_SetErrorHandler:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086     00A0                     ?_TMR0_SetInterruptHandler:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089     00A0                     ?_CCP4_SetCallBack:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092     00A0                     ?_TMR4_SetInterruptHandler:	
  3093                           ; 1 bytes @ 0x0
  3094                           
  3095     00A0                     ??_PWM3_Initialize:	
  3096                           ; 1 bytes @ 0x0
  3097                           
  3098     00A0                     ??_CMP2_Initialize:	
  3099                           ; 1 bytes @ 0x0
  3100                           
  3101     00A0                     ??_CMP1_Initialize:	
  3102                           ; 1 bytes @ 0x0
  3103                           
  3104     00A0                     ??_EUSART_is_rx_ready:	
  3105                           ; 1 bytes @ 0x0
  3106                           
  3107     00A0                     ??_EUSART_Read:	
  3108                           ; 1 bytes @ 0x0
  3109                           
  3110     00A0                     ??_SPI1_Open:	
  3111                           ; 1 bytes @ 0x0
  3112                           
  3113     00A0                     ?_SPI1_ExchangeBlock:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116     00A0                     ??_isValidFloor:	
  3117                           ; 1 bytes @ 0x0
  3118                           
  3119     00A0                     _isValidFloor$1351:	
  3120                           ; 1 bytes @ 0x0
  3121                           
  3122     00A0                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3123                           ; 1 bytes @ 0x0
  3124                           
  3125     00A0                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3126                           ; 2 bytes @ 0x0
  3127                           
  3128     00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3129                           ; 2 bytes @ 0x0
  3130                           
  3131     00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3132                           ; 2 bytes @ 0x0
  3133                           
  3134     00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3135                           ; 2 bytes @ 0x0
  3136                           
  3137     00A0                     SPI1_ExchangeBlock@blockSize:	
  3138                           ; 2 bytes @ 0x0
  3139                           
  3140     00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3141                           ; 2 bytes @ 0x0
  3142                           
  3143     00A0                     CCP4_SetCallBack@customCallBack:	
  3144                           ; 2 bytes @ 0x0
  3145                           
  3146     00A0                     TMR4_SetInterruptHandler@InterruptHandler:	
  3147                           ; 2 bytes @ 0x0
  3148                           
  3149                           
  3150                           ; 2 bytes @ 0x0
  3151     00A0                     	ds	1
  3152     00A1                     isValidFloor@floor:
  3153                           
  3154                           ; 1 bytes @ 0x1
  3155     00A1                     	ds	1
  3156     00A2                     ??_IOCBF0_SetInterruptHandler:
  3157     00A2                     ??_IOCBF3_SetInterruptHandler:	
  3158                           ; 1 bytes @ 0x2
  3159                           
  3160     00A2                     ??_TMR4_Initialize:	
  3161                           ; 1 bytes @ 0x2
  3162                           
  3163     00A2                     ??_TMR0_Initialize:	
  3164                           ; 1 bytes @ 0x2
  3165                           
  3166     00A2                     ??_CCP4_Initialize:	
  3167                           ; 1 bytes @ 0x2
  3168                           
  3169     00A2                     ??_EUSART_Initialize:	
  3170                           ; 1 bytes @ 0x2
  3171                           
  3172     00A2                     ??_EUSART_SetFramingErrorHandler:	
  3173                           ; 1 bytes @ 0x2
  3174                           
  3175     00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3176                           ; 1 bytes @ 0x2
  3177                           
  3178     00A2                     ??_EUSART_SetErrorHandler:	
  3179                           ; 1 bytes @ 0x2
  3180                           
  3181     00A2                     ??_TMR0_SetInterruptHandler:	
  3182                           ; 1 bytes @ 0x2
  3183                           
  3184     00A2                     ??_CCP4_SetCallBack:	
  3185                           ; 1 bytes @ 0x2
  3186                           
  3187     00A2                     ??_TMR4_SetInterruptHandler:	
  3188                           ; 1 bytes @ 0x2
  3189                           
  3190     00A2                     ??_PIN_MANAGER_Initialize:	
  3191                           ; 1 bytes @ 0x2
  3192                           
  3193     00A2                     ??_SYSTEM_Initialize:	
  3194                           ; 1 bytes @ 0x2
  3195                           
  3196     00A2                     ??_SPI1_ExchangeBlock:	
  3197                           ; 1 bytes @ 0x2
  3198                           
  3199                           
  3200                           ; 1 bytes @ 0x2
  3201     00A2                     	ds	1
  3202     00A3                     SPI1_Open@spi1UniqueConfiguration:
  3203     00A3                     SPI1_ExchangeBlock@block:	
  3204                           ; 1 bytes @ 0x3
  3205                           
  3206                           
  3207                           ; 1 bytes @ 0x3
  3208     00A3                     	ds	1
  3209     00A4                     SPI1_ExchangeBlock@data:
  3210                           
  3211                           ; 1 bytes @ 0x4
  3212     00A4                     	ds	1
  3213     00A5                     ?_txSpi:
  3214     00A5                     txSpi@dataSize:	
  3215                           ; 1 bytes @ 0x5
  3216                           
  3217                           
  3218                           ; 2 bytes @ 0x5
  3219     00A5                     	ds	2
  3220     00A7                     ??_txSpi:
  3221     00A7                     txSpi@data:	
  3222                           ; 1 bytes @ 0x7
  3223                           
  3224                           
  3225                           ; 1 bytes @ 0x7
  3226     00A7                     	ds	1
  3227     00A8                     ??_initMatrix:
  3228                           
  3229                           ; 1 bytes @ 0x8
  3230     00A8                     	ds	1
  3231     00A9                     initMatrix@data:
  3232                           
  3233                           ; 4 bytes @ 0x9
  3234     00A9                     	ds	4
  3235     00AD                     initMatrix@k:
  3236                           
  3237                           ; 1 bytes @ 0xD
  3238     00AD                     	ds	1
  3239     00AE                     initMatrix@i:
  3240                           
  3241                           ; 1 bytes @ 0xE
  3242     00AE                     	ds	1
  3243     00AF                     initMatrix@i_1390:
  3244                           
  3245                           ; 1 bytes @ 0xF
  3246     00AF                     	ds	1
  3247     00B0                     initMatrix@j:
  3248                           
  3249                           ; 1 bytes @ 0x10
  3250     00B0                     	ds	1
  3251     00B1                     ??_main:
  3252                           
  3253                           ; 1 bytes @ 0x11
  3254     00B1                     	ds	2
  3255                           
  3256                           	psect	cstackCOMMON
  3257     0070                     __pcstackCOMMON:
  3258     0070                     ?_chegadaS4:
  3259     0070                     ?_chegadaS3:	
  3260                           ; 1 bytes @ 0x0
  3261                           
  3262     0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3263                           ; 1 bytes @ 0x0
  3264                           
  3265     0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3266                           ; 1 bytes @ 0x0
  3267                           
  3268     0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3269                           ; 1 bytes @ 0x0
  3270                           
  3271     0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3272                           ; 1 bytes @ 0x0
  3273                           
  3274     0070                     ?_IOCBF0_ISR:	
  3275                           ; 1 bytes @ 0x0
  3276                           
  3277     0070                     ??_IOCBF0_ISR:	
  3278                           ; 1 bytes @ 0x0
  3279                           
  3280     0070                     ?_IOCBF3_ISR:	
  3281                           ; 1 bytes @ 0x0
  3282                           
  3283     0070                     ?_SPI1_Initialize:	
  3284                           ; 1 bytes @ 0x0
  3285                           
  3286     0070                     ?_OSCILLATOR_Initialize:	
  3287                           ; 1 bytes @ 0x0
  3288                           
  3289     0070                     ?_WDT_Initialize:	
  3290                           ; 1 bytes @ 0x0
  3291                           
  3292     0070                     ?_FVR_Initialize:	
  3293                           ; 1 bytes @ 0x0
  3294                           
  3295     0070                     ?_TMR4_Initialize:	
  3296                           ; 1 bytes @ 0x0
  3297                           
  3298     0070                     ?_TMR2_Initialize:	
  3299                           ; 1 bytes @ 0x0
  3300                           
  3301     0070                     ?_TMR0_Initialize:	
  3302                           ; 1 bytes @ 0x0
  3303                           
  3304     0070                     ?_CCP4_Initialize:	
  3305                           ; 1 bytes @ 0x0
  3306                           
  3307     0070                     ?_ADC_Initialize:	
  3308                           ; 1 bytes @ 0x0
  3309                           
  3310     0070                     ?_TMR1_Initialize:	
  3311                           ; 1 bytes @ 0x0
  3312                           
  3313     0070                     ?_EUSART_Initialize:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316     0070                     ?_TMR0_ISR:	
  3317                           ; 1 bytes @ 0x0
  3318                           
  3319     0070                     ?_CCP4_CaptureISR:	
  3320                           ; 1 bytes @ 0x0
  3321                           
  3322     0070                     ?_TMR4_ISR:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325     0070                     ??_TMR4_ISR:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328     0070                     ?_TMR0_DefaultInterruptHandler:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331     0070                     ??_TMR0_DefaultInterruptHandler:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334     0070                     ?_TMR0_CallBack:	
  3335                           ; 1 bytes @ 0x0
  3336                           
  3337     0070                     ?_memset:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340     0070                     ?_TMR4_DefaultInterruptHandler:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343     0070                     ??_TMR4_DefaultInterruptHandler:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346     0070                     ?_TMR4_CallBack:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349     0070                     ??_TMR4_CallBack:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352     0070                     ?_PWM3_Initialize:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355     0070                     ?_CMP2_Initialize:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358     0070                     ?_CMP2_ISR:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361     0070                     ?_CMP1_Initialize:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364     0070                     ?_CMP1_ISR:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367     0070                     ?_PIN_MANAGER_Initialize:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370     0070                     ?_PIN_MANAGER_IOC:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373     0070                     ?_SYSTEM_Initialize:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376     0070                     ?_EUSART_is_rx_ready:	
  3377                           ; 1 bytes @ 0x0
  3378                           
  3379     0070                     ?_EUSART_Read:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382     0070                     ?_EUSART_Write:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385     0070                     ??_EUSART_Write:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388     0070                     ?_SPI1_Open:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391     0070                     ?_INTERRUPT_InterruptManager:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394     0070                     ?_isValidFloor:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397     0070                     ?_sendInfo:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400     0070                     ?_matrixUpdate:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403     0070                     ?_initMatrix:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406     0070                     ?_chegadaS1:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409     0070                     ?_chegadaS2:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412     0070                     ?_main:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415     0070                     ?_CCP4_DefaultCallBack:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418     0070                     ?i1_SPI1_ExchangeBlock:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421     0070                     ?__Umul8_16:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424     0070                     ?_ADC_GetConversion:	
  3425                           ; 2 bytes @ 0x0
  3426                           
  3427     0070                     EUSART_Write@txData:	
  3428                           ; 2 bytes @ 0x0
  3429                           
  3430     0070                     __Umul8_16@multiplicand:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433     0070                     CCP4_DefaultCallBack@capturedValue:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436     0070                     memset@c:	
  3437                           ; 2 bytes @ 0x0
  3438                           
  3439     0070                     i1SPI1_ExchangeBlock@blockSize:	
  3440                           ; 2 bytes @ 0x0
  3441                           
  3442                           
  3443                           ; 2 bytes @ 0x0
  3444     0070                     	ds	2
  3445     0072                     ??_CCP4_CaptureISR:
  3446     0072                     ??__Umul8_16:	
  3447                           ; 1 bytes @ 0x2
  3448                           
  3449     0072                     ??_ADC_GetConversion:	
  3450                           ; 1 bytes @ 0x2
  3451                           
  3452     0072                     ??_CCP4_DefaultCallBack:	
  3453                           ; 1 bytes @ 0x2
  3454                           
  3455     0072                     ??i1_SPI1_ExchangeBlock:	
  3456                           ; 1 bytes @ 0x2
  3457                           
  3458     0072                     CCP4_CaptureISR@module:	
  3459                           ; 1 bytes @ 0x2
  3460                           
  3461     0072                     memset@n:	
  3462                           ; 2 bytes @ 0x2
  3463                           
  3464                           
  3465                           ; 2 bytes @ 0x2
  3466     0072                     	ds	1
  3467     0073                     ADC_GetConversion@channel:
  3468     0073                     i1SPI1_ExchangeBlock@block:	
  3469                           ; 1 bytes @ 0x3
  3470                           
  3471                           
  3472                           ; 1 bytes @ 0x3
  3473     0073                     	ds	1
  3474     0074                     ??_memset:
  3475     0074                     ?___wmul:	
  3476                           ; 1 bytes @ 0x4
  3477                           
  3478     0074                     i1SPI1_ExchangeBlock@data:	
  3479                           ; 2 bytes @ 0x4
  3480                           
  3481     0074                     ___wmul@multiplier:	
  3482                           ; 1 bytes @ 0x4
  3483                           
  3484     0074                     __Umul8_16@product:	
  3485                           ; 2 bytes @ 0x4
  3486                           
  3487                           
  3488                           ; 2 bytes @ 0x4
  3489     0074                     	ds	1
  3490     0075                     ?i1_txSpi:
  3491     0075                     i1txSpi@dataSize:	
  3492                           ; 1 bytes @ 0x5
  3493                           
  3494                           
  3495                           ; 2 bytes @ 0x5
  3496     0075                     	ds	1
  3497     0076                     ___wmul@multiplicand:
  3498     0076                     __Umul8_16@word_mpld:	
  3499                           ; 2 bytes @ 0x6
  3500                           
  3501     0076                     memset@k:	
  3502                           ; 2 bytes @ 0x6
  3503                           
  3504                           
  3505                           ; 2 bytes @ 0x6
  3506     0076                     	ds	1
  3507     0077                     ??i1_txSpi:
  3508     0077                     i1txSpi@data:	
  3509                           ; 1 bytes @ 0x7
  3510                           
  3511                           
  3512                           ; 1 bytes @ 0x7
  3513     0077                     	ds	1
  3514     0078                     ??_matrixUpdate:
  3515     0078                     ??___wmul:	
  3516                           ; 1 bytes @ 0x8
  3517                           
  3518     0078                     __Umul8_16@multiplier:	
  3519                           ; 1 bytes @ 0x8
  3520                           
  3521     0078                     memset@dest:	
  3522                           ; 1 bytes @ 0x8
  3523                           
  3524     0078                     matrixUpdate@data:	
  3525                           ; 1 bytes @ 0x8
  3526                           
  3527     0078                     ___wmul@product:	
  3528                           ; 2 bytes @ 0x8
  3529                           
  3530                           
  3531                           ; 2 bytes @ 0x8
  3532     0078                     	ds	1
  3533     0079                     ??___flmul:
  3534     0079                     memset@s:	
  3535                           ; 1 bytes @ 0x9
  3536                           
  3537                           
  3538                           ; 1 bytes @ 0x9
  3539     0079                     	ds	1
  3540     007A                     ?_bin2bcd:
  3541     007A                     matrixUpdate@i:	
  3542                           ; 2 bytes @ 0xA
  3543                           
  3544     007A                     bin2bcd@binVal:	
  3545                           ; 1 bytes @ 0xA
  3546                           
  3547                           
  3548                           ; 2 bytes @ 0xA
  3549     007A                     	ds	1
  3550     007B                     ??_chegadaS4:
  3551     007B                     ??_chegadaS3:	
  3552                           ; 1 bytes @ 0xB
  3553                           
  3554     007B                     ??_IOCBF3_ISR:	
  3555                           ; 1 bytes @ 0xB
  3556                           
  3557     007B                     ??_CMP2_ISR:	
  3558                           ; 1 bytes @ 0xB
  3559                           
  3560     007B                     ??_CMP1_ISR:	
  3561                           ; 1 bytes @ 0xB
  3562                           
  3563     007B                     ??_PIN_MANAGER_IOC:	
  3564                           ; 1 bytes @ 0xB
  3565                           
  3566     007B                     ??_chegadaS1:	
  3567                           ; 1 bytes @ 0xB
  3568                           
  3569     007B                     ??_chegadaS2:	
  3570                           ; 1 bytes @ 0xB
  3571                           
  3572                           
  3573                           ; 1 bytes @ 0xB
  3574     007B                     	ds	3
  3575     007E                     ??_TMR0_ISR:
  3576     007E                     ??_TMR0_CallBack:	
  3577                           ; 1 bytes @ 0xE
  3578                           
  3579     007E                     ??_INTERRUPT_InterruptManager:	
  3580                           ; 1 bytes @ 0xE
  3581                           
  3582                           
  3583                           	psect	cstackBANK0
  3584     0020                     __pcstackBANK0:	
  3585                           ; 1 bytes @ 0xE
  3586                           
  3587     0020                     ??_bin2bcd:
  3588     0020                     ?___flmul:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591     0020                     ___flmul@b:	
  3592                           ; 4 bytes @ 0x0
  3593                           
  3594                           
  3595                           ; 4 bytes @ 0x0
  3596     0020                     	ds	4
  3597     0024                     bin2bcd@i:
  3598     0024                     ___flmul@a:	
  3599                           ; 1 bytes @ 0x4
  3600                           
  3601                           
  3602                           ; 4 bytes @ 0x4
  3603     0024                     	ds	1
  3604     0025                     bin2bcd@dataU:
  3605                           
  3606                           ; 4 bytes @ 0x5
  3607     0025                     	ds	3
  3608     0028                     ___flmul@sign:
  3609                           
  3610                           ; 1 bytes @ 0x8
  3611     0028                     	ds	1
  3612     0029                     ___flmul@grs:
  3613                           
  3614                           ; 4 bytes @ 0x9
  3615     0029                     	ds	4
  3616     002D                     ___flmul@aexp:
  3617                           
  3618                           ; 1 bytes @ 0xD
  3619     002D                     	ds	1
  3620     002E                     ___flmul@bexp:
  3621                           
  3622                           ; 1 bytes @ 0xE
  3623     002E                     	ds	1
  3624     002F                     ___flmul@prod:
  3625                           
  3626                           ; 4 bytes @ 0xF
  3627     002F                     	ds	4
  3628     0033                     ___flmul@temp:
  3629                           
  3630                           ; 2 bytes @ 0x13
  3631     0033                     	ds	2
  3632     0035                     ?___fltol:
  3633     0035                     ___fltol@f1:	
  3634                           ; 4 bytes @ 0x15
  3635                           
  3636                           
  3637                           ; 4 bytes @ 0x15
  3638     0035                     	ds	4
  3639     0039                     ??___fltol:
  3640                           
  3641                           ; 1 bytes @ 0x19
  3642     0039                     	ds	4
  3643     003D                     ___fltol@sign1:
  3644                           
  3645                           ; 1 bytes @ 0x1D
  3646     003D                     	ds	1
  3647     003E                     ___fltol@exp1:
  3648                           
  3649                           ; 1 bytes @ 0x1E
  3650     003E                     	ds	1
  3651     003F                     ??_sendInfo:
  3652                           
  3653                           ; 1 bytes @ 0x1F
  3654     003F                     	ds	2
  3655     0041                     sendInfo@velocidade:
  3656                           
  3657                           ; 2 bytes @ 0x21
  3658     0041                     	ds	2
  3659     0043                     sendInfo@bcd:
  3660                           
  3661                           ; 2 bytes @ 0x23
  3662     0043                     	ds	2
  3663                           
  3664                           	psect	maintext
  3665     04BC                     __pmaintext:	
  3666 ;;
  3667 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3668 ;;
  3669 ;; *************** function _main *****************
  3670 ;; Defined at:
  3671 ;;		line 263 in file "main.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : B1F/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3685 ;;      Params:         0       0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0
  3687 ;;      Temps:          0       0       2       0       0       0
  3688 ;;      Totals:         0       0       2       0       0       0
  3689 ;;Total ram usage:        2 bytes
  3690 ;; Hardware stack levels required when called: 10
  3691 ;; This function calls:
  3692 ;;		_EUSART_Read
  3693 ;;		_EUSART_is_rx_ready
  3694 ;;		_IOCBF3_SetInterruptHandler
  3695 ;;		_SPI1_Open
  3696 ;;		_SYSTEM_Initialize
  3697 ;;		_TMR0_SetInterruptHandler
  3698 ;;		_initMatrix
  3699 ;;		_isValidFloor
  3700 ;; This function is called by:
  3701 ;;		Startup code after reset
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705     04BC                     _main:	
  3706                           ;psect for function _main
  3707                           
  3708     04BC                     l3838:	
  3709                           ;incstack = 0
  3710                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3711                           
  3712                           
  3713                           ;main.c: 266:     SYSTEM_Initialize();
  3714     04BC  3187  2738  3184   	fcall	_SYSTEM_Initialize
  3715                           
  3716                           ;main.c: 275:     IOCBF3_SetInterruptHandler(chegadaS1);
  3717     04BF  3090               	movlw	low _chegadaS1
  3718     04C0  0021               	movlb	1	; select bank1
  3719     04C1  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3720     04C2  3007               	movlw	high _chegadaS1
  3721     04C3  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3722     04C4  318E  2605  3184   	fcall	_IOCBF3_SetInterruptHandler
  3723                           
  3724                           ;main.c: 276:     IOCBF3_SetInterruptHandler(chegadaS2);
  3725     04C7  30CF               	movlw	low _chegadaS2
  3726     04C8  0021               	movlb	1	; select bank1
  3727     04C9  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3728     04CA  3006               	movlw	high _chegadaS2
  3729     04CB  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3730     04CC  318E  2605  3184   	fcall	_IOCBF3_SetInterruptHandler
  3731                           
  3732                           ;main.c: 277:     TMR0_SetInterruptHandler(sendInfo);
  3733     04CF  30AB               	movlw	low _sendInfo
  3734     04D0  0021               	movlb	1	; select bank1
  3735     04D1  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3736     04D2  3002               	movlw	high _sendInfo
  3737     04D3  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3738     04D4  318E  260B  3184   	fcall	_TMR0_SetInterruptHandler
  3739     04D7                     l3840:
  3740     04D7  0022               	movlb	2	; select bank2
  3741     04D8  148D               	bsf	13,1	;volatile
  3742     04D9                     l3842:
  3743                           
  3744                           ;main.c: 281:     SPI1_Open(SPI1_DEFAULT);
  3745     04D9  3000               	movlw	0
  3746     04DA  3185  25B6  3184   	fcall	_SPI1_Open
  3747     04DD                     l3844:
  3748                           
  3749                           ;main.c: 282:     initMatrix();
  3750     04DD  3186  260E  3184   	fcall	_initMatrix
  3751     04E0                     l3846:
  3752                           
  3753                           ;main.c: 285:     (INTCONbits.GIE = 1);
  3754     04E0  178B               	bsf	11,7	;volatile
  3755     04E1                     l3848:
  3756                           
  3757                           ;main.c: 288:     (INTCONbits.PEIE = 1);
  3758     04E1  170B               	bsf	11,6	;volatile
  3759     04E2                     l3850:
  3760                           
  3761                           ;main.c: 297:     {;main.c: 299:         if(EUSART_is_rx_ready()){
  3762     04E2  318D  25DC  3184   	fcall	_EUSART_is_rx_ready
  3763     04E5  3A00               	xorlw	0
  3764     04E6  1903               	skipnz
  3765     04E7  2CE9               	goto	u2521
  3766     04E8  2CEA               	goto	u2520
  3767     04E9                     u2521:
  3768     04E9  2CE2               	goto	l3850
  3769     04EA                     u2520:
  3770     04EA                     l3852:
  3771                           
  3772                           ;main.c: 300:             rxValue = EUSART_Read();
  3773     04EA  318E  26C7  3184   	fcall	_EUSART_Read
  3774     04ED  0020               	movlb	0	; select bank0
  3775     04EE  00E5               	movwf	_rxValue
  3776                           
  3777                           ;main.c: 301:             switch(state){
  3778     04EF  2D2B               	goto	l3882
  3779     04F0                     l3854:
  3780                           
  3781                           ;main.c: 303:                     if(rxValue == '$'){
  3782     04F0  3024               	movlw	36
  3783     04F1  0020               	movlb	0	; select bank0
  3784     04F2  0665               	xorwf	_rxValue,w
  3785     04F3  1D03               	btfss	3,2
  3786     04F4  2CF6               	goto	u2531
  3787     04F5  2CF7               	goto	u2530
  3788     04F6                     u2531:
  3789     04F6  2D42               	goto	l753
  3790     04F7                     u2530:
  3791     04F7                     l3856:
  3792                           
  3793                           ;main.c: 304:                         state = FIRST_NUM;
  3794     04F7  01E6               	clrf	_state
  3795     04F8  0AE6               	incf	_state,f
  3796     04F9  2CE2               	goto	l3850
  3797     04FA                     l3858:
  3798                           
  3799                           ;main.c: 308:                     if(isValidFloor(rxValue)){
  3800     04FA  0020               	movlb	0	; select bank0
  3801     04FB  0865               	movf	_rxValue,w
  3802     04FC  318F  272E  3184   	fcall	_isValidFloor
  3803     04FF  3A00               	xorlw	0
  3804     0500  1903               	skipnz
  3805     0501  2D03               	goto	u2541
  3806     0502  2D04               	goto	u2540
  3807     0503                     u2541:
  3808     0503  2D0B               	goto	l3864
  3809     0504                     u2540:
  3810     0504                     l3860:
  3811                           
  3812                           ;main.c: 309:                         oTemp = rxValue - 0x30;
  3813     0504  0020               	movlb	0	; select bank0
  3814     0505  0865               	movf	_rxValue,w
  3815     0506  3ED0               	addlw	208
  3816     0507  00DF               	movwf	_oTemp
  3817     0508                     l3862:
  3818                           
  3819                           ;main.c: 310:                         state = SECOND_NUM;
  3820     0508  3002               	movlw	2
  3821     0509  00E6               	movwf	_state
  3822                           
  3823                           ;main.c: 311:                     }else{
  3824     050A  2CE2               	goto	l3850
  3825     050B                     l3864:
  3826                           
  3827                           ;main.c: 312:                         state = START;
  3828     050B  0020               	movlb	0	; select bank0
  3829     050C  01E6               	clrf	_state
  3830     050D  2CE2               	goto	l3850
  3831     050E                     l3866:
  3832                           
  3833                           ;main.c: 316:                     if(isValidFloor(rxValue)){
  3834     050E  0020               	movlb	0	; select bank0
  3835     050F  0865               	movf	_rxValue,w
  3836     0510  318F  272E  3184   	fcall	_isValidFloor
  3837     0513  3A00               	xorlw	0
  3838     0514  1903               	skipnz
  3839     0515  2D17               	goto	u2551
  3840     0516  2D18               	goto	u2550
  3841     0517                     u2551:
  3842     0517  2D0B               	goto	l3864
  3843     0518                     u2550:
  3844     0518                     l3868:
  3845                           
  3846                           ;main.c: 317:                         dTemp = rxValue - 0x30;
  3847     0518  0020               	movlb	0	; select bank0
  3848     0519  0865               	movf	_rxValue,w
  3849     051A  3ED0               	addlw	208
  3850     051B  00DD               	movwf	_dTemp
  3851     051C                     l3870:
  3852                           
  3853                           ;main.c: 318:                         state = CR;
  3854     051C  3003               	movlw	3
  3855     051D  00E6               	movwf	_state
  3856                           
  3857                           ;main.c: 319:                     }else{
  3858     051E  2CE2               	goto	l3850
  3859     051F                     l3874:
  3860                           
  3861                           ;main.c: 324:                     if(rxValue == 0x0D){
  3862     051F  300D               	movlw	13
  3863     0520  0020               	movlb	0	; select bank0
  3864     0521  0665               	xorwf	_rxValue,w
  3865     0522  1D03               	btfss	3,2
  3866     0523  2D25               	goto	u2561
  3867     0524  2D26               	goto	u2560
  3868     0525                     u2561:
  3869     0525  2D0B               	goto	l3864
  3870     0526                     u2560:
  3871     0526                     l3876:
  3872                           
  3873                           ;main.c: 325:                         origem = oTemp;
  3874     0526  085F               	movf	_oTemp,w
  3875     0527  00E0               	movwf	_origem
  3876                           
  3877                           ;main.c: 326:                         destino = dTemp;
  3878     0528  085D               	movf	_dTemp,w
  3879     0529  00DE               	movwf	_destino
  3880     052A  2D0B               	goto	l3864
  3881     052B                     l3882:
  3882     052B  0866               	movf	_state,w
  3883     052C  0021               	movlb	1	; select bank1
  3884     052D  00B1               	movwf	??_main^(0+128)
  3885     052E  01B2               	clrf	(??_main^(0+128)+1)
  3886                           
  3887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3888                           ; Switch size 1, requested type "simple"
  3889                           ; Number of cases is 1, Range of values is 0 to 0
  3890                           ; switch strategies available:
  3891                           ; Name         Instructions Cycles
  3892                           ; simple_byte            4     3 (average)
  3893                           ; direct_byte            8     6 (fixed)
  3894                           ; jumptable            260     6 (fixed)
  3895                           ;	Chosen strategy is simple_byte
  3896     052F  0832               	movf	(??_main+1)^(0+128),w
  3897     0530  3A00               	xorlw	0	; case 0
  3898     0531  1903               	skipnz
  3899     0532  2D34               	goto	l3920
  3900     0533  2D0B               	goto	l3864
  3901     0534                     l3920:
  3902                           
  3903                           ; Switch size 1, requested type "simple"
  3904                           ; Number of cases is 4, Range of values is 0 to 3
  3905                           ; switch strategies available:
  3906                           ; Name         Instructions Cycles
  3907                           ; simple_byte           13     7 (average)
  3908                           ; direct_byte           14     6 (fixed)
  3909                           ; jumptable            260     6 (fixed)
  3910                           ;	Chosen strategy is simple_byte
  3911     0534  0831               	movf	??_main^(0+128),w
  3912     0535  3A00               	xorlw	0	; case 0
  3913     0536  1903               	skipnz
  3914     0537  2CF0               	goto	l3854
  3915     0538  3A01               	xorlw	1	; case 1
  3916     0539  1903               	skipnz
  3917     053A  2CFA               	goto	l3858
  3918     053B  3A03               	xorlw	3	; case 2
  3919     053C  1903               	skipnz
  3920     053D  2D0E               	goto	l3866
  3921     053E  3A01               	xorlw	1	; case 3
  3922     053F  1903               	skipnz
  3923     0540  2D1F               	goto	l3874
  3924     0541  2D0B               	goto	l3864
  3925     0542                     l753:	
  3926                           ;main.c: 334:         }
  3927                           
  3928     0542  2CE2               	goto	l3850
  3929     0543  3180  2856         	ljmp	start
  3930     0545                     __end_of_main:
  3931                           
  3932                           	psect	text1
  3933     0F2E                     __ptext1:	
  3934 ;; *************** function _isValidFloor *****************
  3935 ;; Defined at:
  3936 ;;		line 52 in file "main.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  floor           1    wreg     unsigned char 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  floor           1    1[BANK1 ] unsigned char 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      _Bool 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3950 ;;      Params:         0       0       0       0       0       0
  3951 ;;      Locals:         0       0       2       0       0       0
  3952 ;;      Temps:          0       0       0       0       0       0
  3953 ;;      Totals:         0       0       2       0       0       0
  3954 ;;Total ram usage:        2 bytes
  3955 ;; Hardware stack levels used: 1
  3956 ;; Hardware stack levels required when called: 7
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_main
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964     0F2E                     _isValidFloor:	
  3965                           ;psect for function _isValidFloor
  3966                           
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in _isValidFloor: [wreg+status,2]
  3970                           ;isValidFloor@floor stored from wreg
  3971     0F2E  0021               	movlb	1	; select bank1
  3972     0F2F  00A1               	movwf	isValidFloor@floor^(0+128)
  3973     0F30                     l3786:
  3974                           
  3975                           ;main.c: 53:     return floor >= '0' && floor <= '3';
  3976     0F30  01A0               	clrf	_isValidFloor$1351^(0+128)
  3977     0F31                     l3788:
  3978     0F31  3030               	movlw	48
  3979     0F32  0221               	subwf	isValidFloor@floor^(0+128),w
  3980     0F33  1C03               	skipc
  3981     0F34  2F36               	goto	u2471
  3982     0F35  2F37               	goto	u2470
  3983     0F36                     u2471:
  3984     0F36  2F3F               	goto	l3794
  3985     0F37                     u2470:
  3986     0F37                     l3790:
  3987     0F37  3034               	movlw	52
  3988     0F38  0221               	subwf	isValidFloor@floor^(0+128),w
  3989     0F39  1803               	skipnc
  3990     0F3A  2F3C               	goto	u2481
  3991     0F3B  2F3D               	goto	u2480
  3992     0F3C                     u2481:
  3993     0F3C  2F3F               	goto	l3794
  3994     0F3D                     u2480:
  3995     0F3D                     l3792:
  3996     0F3D  01A0               	clrf	_isValidFloor$1351^(0+128)
  3997     0F3E  0AA0               	incf	_isValidFloor$1351^(0+128),f
  3998     0F3F                     l3794:
  3999     0F3F  0820               	movf	_isValidFloor$1351^(0+128),w
  4000     0F40                     l688:
  4001     0F40  0008               	return
  4002     0F41                     __end_of_isValidFloor:
  4003                           
  4004                           	psect	text2
  4005     060E                     __ptext2:	
  4006 ;; *************** function _initMatrix *****************
  4007 ;; Defined at:
  4008 ;;		line 147 in file "main.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  j               1   16[BANK1 ] unsigned char 
  4013 ;;  i               1   15[BANK1 ] unsigned char 
  4014 ;;  i               1   14[BANK1 ] unsigned char 
  4015 ;;  data            4    9[BANK1 ] unsigned char [4]
  4016 ;;  k               1   13[BANK1 ] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4026 ;;      Params:         0       0       0       0       0       0
  4027 ;;      Locals:         0       0       8       0       0       0
  4028 ;;      Temps:          0       0       1       0       0       0
  4029 ;;      Totals:         0       0       9       0       0       0
  4030 ;;Total ram usage:        9 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; Hardware stack levels required when called: 9
  4033 ;; This function calls:
  4034 ;;		_txSpi
  4035 ;; This function is called by:
  4036 ;;		_main
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040     060E                     _initMatrix:	
  4041                           ;psect for function _initMatrix
  4042                           
  4043     060E                     l3798:	
  4044                           ;incstack = 0
  4045                           ; Regs used in _initMatrix: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4046                           
  4047                           
  4048                           ;main.c: 148:     uint8_t data[4];;main.c: 149:     uint8_t k=0;
  4049     060E  0021               	movlb	1	; select bank1
  4050     060F  01AD               	clrf	initMatrix@k^(0+128)
  4051                           
  4052                           ;main.c: 150:    for(uint8_t i =0; i<8; i++){
  4053     0610  01AE               	clrf	initMatrix@i^(0+128)
  4054     0611                     l3804:
  4055                           
  4056                           ;main.c: 151:             MatrixLed[i] = 0;
  4057     0611  082E               	movf	initMatrix@i^(0+128),w
  4058     0612  3EC1               	addlw	(low (_MatrixLed| 0))& (0+255)
  4059     0613  0086               	movwf	6
  4060     0614  0187               	clrf	7
  4061     0615  0181               	clrf	1
  4062     0616                     l3806:
  4063                           
  4064                           ;main.c: 152:         }
  4065     0616  3001               	movlw	1
  4066     0617  00A8               	movwf	??_initMatrix^(0+128)
  4067     0618  0828               	movf	??_initMatrix^(0+128),w
  4068     0619  07AE               	addwf	initMatrix@i^(0+128),f
  4069     061A                     l3808:
  4070     061A  3008               	movlw	8
  4071     061B  022E               	subwf	initMatrix@i^(0+128),w
  4072     061C  1C03               	skipc
  4073     061D  2E1F               	goto	u2491
  4074     061E  2E20               	goto	u2490
  4075     061F                     u2491:
  4076     061F  2E11               	goto	l3804
  4077     0620                     u2490:
  4078     0620                     l3810:
  4079                           
  4080                           ;main.c: 153:     for(uint8_t i=0;i<6;i++){
  4081     0620  01AF               	clrf	initMatrix@i_1390^(0+128)
  4082     0621                     l3816:
  4083                           
  4084                           ;main.c: 154:         for(uint8_t j=0;j<4;j=j+2){
  4085     0621  01B0               	clrf	initMatrix@j^(0+128)
  4086     0622                     l3822:
  4087                           
  4088                           ;main.c: 155:             data[j]= matrix_conf[k];
  4089     0622  0830               	movf	initMatrix@j^(0+128),w
  4090     0623  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4091     0624  0086               	movwf	6
  4092     0625  0187               	clrf	7
  4093     0626  082D               	movf	initMatrix@k^(0+128),w
  4094     0627  3EFF               	addlw	low (_matrix_conf| (0+32768))
  4095     0628  0084               	movwf	4
  4096     0629  3087               	movlw	high (_matrix_conf| (0+32768))
  4097     062A  1803               	skipnc
  4098     062B  3E01               	addlw	1
  4099     062C  0085               	movwf	5
  4100     062D  0800               	movf	0,w	;code access
  4101     062E  0081               	movwf	1
  4102                           
  4103                           ;main.c: 156:             data[j+1]= matrix_conf[k+1];
  4104     062F  0830               	movf	initMatrix@j^(0+128),w
  4105     0630  3E01               	addlw	1
  4106     0631  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4107     0632  0086               	movwf	6
  4108     0633  0187               	clrf	7
  4109     0634  082D               	movf	initMatrix@k^(0+128),w
  4110     0635  3E00               	addlw	low ((_matrix_conf+1)| (0+32768))
  4111     0636  0084               	movwf	4
  4112     0637  3088               	movlw	high ((_matrix_conf+1)| (0+32768))
  4113     0638  1803               	skipnc
  4114     0639  3E01               	addlw	1
  4115     063A  0085               	movwf	5
  4116     063B  0800               	movf	0,w	;code access
  4117     063C  0081               	movwf	1
  4118     063D                     l3824:
  4119                           
  4120                           ;main.c: 157:         }
  4121     063D  0830               	movf	initMatrix@j^(0+128),w
  4122     063E  3E02               	addlw	2
  4123     063F  00B0               	movwf	initMatrix@j^(0+128)
  4124     0640                     l3826:
  4125     0640  3004               	movlw	4
  4126     0641  0230               	subwf	initMatrix@j^(0+128),w
  4127     0642  1C03               	skipc
  4128     0643  2E45               	goto	u2501
  4129     0644  2E46               	goto	u2500
  4130     0645                     u2501:
  4131     0645  2E22               	goto	l3822
  4132     0646                     u2500:
  4133     0646                     l3828:
  4134                           
  4135                           ;main.c: 158:         k=k+2;
  4136     0646  082D               	movf	initMatrix@k^(0+128),w
  4137     0647  3E02               	addlw	2
  4138     0648  00AD               	movwf	initMatrix@k^(0+128)
  4139     0649                     l3830:
  4140                           
  4141                           ;main.c: 159:         txSpi( data, 4);
  4142     0649  3004               	movlw	4
  4143     064A  00A5               	movwf	txSpi@dataSize^(0+128)
  4144     064B  3000               	movlw	0
  4145     064C  00A6               	movwf	(txSpi@dataSize^(0+128)+1)
  4146     064D  30A9               	movlw	(low (initMatrix@data| 0))& (0+255)
  4147     064E  318E  26D6  3186   	fcall	_txSpi
  4148     0651                     l3834:
  4149                           
  4150                           ;main.c: 163:     }
  4151     0651  3001               	movlw	1
  4152     0652  0021               	movlb	1	; select bank1
  4153     0653  00A8               	movwf	??_initMatrix^(0+128)
  4154     0654  0828               	movf	??_initMatrix^(0+128),w
  4155     0655  07AF               	addwf	initMatrix@i_1390^(0+128),f
  4156     0656                     l3836:
  4157     0656  3006               	movlw	6
  4158     0657  022F               	subwf	initMatrix@i_1390^(0+128),w
  4159     0658  1C03               	skipc
  4160     0659  2E5B               	goto	u2511
  4161     065A  2E5C               	goto	u2510
  4162     065B                     u2511:
  4163     065B  2E21               	goto	l3816
  4164     065C                     u2510:
  4165     065C                     l725:
  4166     065C  0008               	return
  4167     065D                     __end_of_initMatrix:
  4168                           
  4169                           	psect	text3
  4170     0ED6                     __ptext3:	
  4171 ;; *************** function _txSpi *****************
  4172 ;; Defined at:
  4173 ;;		line 119 in file "main.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  data            1    wreg     PTR unsigned char 
  4176 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4177 ;;  dataSize        2    5[BANK1 ] unsigned int 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  data            1    7[BANK1 ] PTR unsigned char 
  4180 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4190 ;;      Params:         0       0       2       0       0       0
  4191 ;;      Locals:         0       0       1       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0
  4193 ;;      Totals:         0       0       3       0       0       0
  4194 ;;Total ram usage:        3 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 8
  4197 ;; This function calls:
  4198 ;;		_SPI1_ExchangeBlock
  4199 ;; This function is called by:
  4200 ;;		_initMatrix
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204     0ED6                     _txSpi:	
  4205                           ;psect for function _txSpi
  4206                           
  4207                           
  4208                           ;incstack = 0
  4209                           ; Regs used in _txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4210                           ;txSpi@data stored from wreg
  4211     0ED6  0021               	movlb	1	; select bank1
  4212     0ED7  00A7               	movwf	txSpi@data^(0+128)
  4213     0ED8                     l702:	
  4214                           ;main.c: 120:     do { LATBbits.LATB1 = 0; } while(0);
  4215                           
  4216     0ED8  0022               	movlb	2	; select bank2
  4217     0ED9  108D               	bcf	13,1	;volatile
  4218     0EDA                     l3750:
  4219                           
  4220                           ;main.c: 121:     SPI1_ExchangeBlock(data,dataSize);
  4221     0EDA  0021               	movlb	1	; select bank1
  4222     0EDB  0826               	movf	(txSpi@dataSize+1)^(0+128),w
  4223     0EDC  00A1               	movwf	(SPI1_ExchangeBlock@blockSize+1)^(0+128)
  4224     0EDD  0825               	movf	txSpi@dataSize^(0+128),w
  4225     0EDE  00A0               	movwf	SPI1_ExchangeBlock@blockSize^(0+128)
  4226     0EDF  0827               	movf	txSpi@data^(0+128),w
  4227     0EE0  3187  2766  318E   	fcall	_SPI1_ExchangeBlock
  4228     0EE3                     l3752:
  4229     0EE3  0022               	movlb	2	; select bank2
  4230     0EE4  148D               	bsf	13,1	;volatile
  4231     0EE5                     l706:
  4232     0EE5  0008               	return
  4233     0EE6                     __end_of_txSpi:
  4234                           
  4235                           	psect	text4
  4236     0766                     __ptext4:	
  4237 ;; *************** function _SPI1_ExchangeBlock *****************
  4238 ;; Defined at:
  4239 ;;		line 100 in file "mcc_generated_files/spi1.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  block           1    wreg     PTR void 
  4242 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4243 ;;  blockSize       2    0[BANK1 ] unsigned int 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  block           1    3[BANK1 ] PTR void 
  4246 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4247 ;;  data            1    4[BANK1 ] PTR unsigned char 
  4248 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4258 ;;      Params:         0       0       2       0       0       0
  4259 ;;      Locals:         0       0       2       0       0       0
  4260 ;;      Temps:          0       0       1       0       0       0
  4261 ;;      Totals:         0       0       5       0       0       0
  4262 ;;Total ram usage:        5 bytes
  4263 ;; Hardware stack levels used: 1
  4264 ;; Hardware stack levels required when called: 7
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_txSpi
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272     0766                     _SPI1_ExchangeBlock:	
  4273                           ;psect for function _SPI1_ExchangeBlock
  4274                           
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in _SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4278                           ;SPI1_ExchangeBlock@block stored from wreg
  4279     0766  0021               	movlb	1	; select bank1
  4280     0767  00A3               	movwf	SPI1_ExchangeBlock@block^(0+128)
  4281     0768                     l3582:
  4282                           
  4283                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  4284     0768  0823               	movf	SPI1_ExchangeBlock@block^(0+128),w
  4285     0769  00A4               	movwf	SPI1_ExchangeBlock@data^(0+128)
  4286                           
  4287                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4288     076A  2F83               	goto	l3590
  4289     076B                     l3584:
  4290                           
  4291                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  4292     076B  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4293     076C  0086               	movwf	6
  4294     076D  0187               	clrf	7
  4295     076E  0801               	movf	1,w
  4296     076F  0024               	movlb	4	; select bank4
  4297     0770  0091               	movwf	17	;volatile
  4298     0771                     l436:	
  4299                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  4300                           
  4301     0771  0020               	movlb	0	; select bank0
  4302     0772  1D91               	btfss	17,3	;volatile
  4303     0773  2F75               	goto	u2421
  4304     0774  2F76               	goto	u2420
  4305     0775                     u2421:
  4306     0775  2F71               	goto	l436
  4307     0776                     u2420:
  4308     0776                     l438:
  4309                           
  4310                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  4311     0776  1191               	bcf	17,3	;volatile
  4312     0777                     l3586:
  4313                           
  4314                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  4315     0777  0021               	movlb	1	; select bank1
  4316     0778  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4317     0779  0086               	movwf	6
  4318     077A  0187               	clrf	7
  4319     077B  0024               	movlb	4	; select bank4
  4320     077C  0811               	movf	17,w	;volatile
  4321     077D  0081               	movwf	1
  4322     077E                     l3588:
  4323     077E  3001               	movlw	1
  4324     077F  0021               	movlb	1	; select bank1
  4325     0780  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4326     0781  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4327     0782  07A4               	addwf	SPI1_ExchangeBlock@data^(0+128),f
  4328     0783                     l3590:
  4329                           
  4330                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4331     0783  3001               	movlw	1
  4332     0784  02A0               	subwf	SPI1_ExchangeBlock@blockSize^(0+128),f
  4333     0785  3000               	movlw	0
  4334     0786  3BA1               	subwfb	(SPI1_ExchangeBlock@blockSize+1)^(0+128),f
  4335     0787  0A20               	incf	SPI1_ExchangeBlock@blockSize^(0+128),w
  4336     0788  1D03               	skipz
  4337     0789  2F8E               	goto	u2431
  4338     078A  0A21               	incf	(SPI1_ExchangeBlock@blockSize+1)^(0+128),w
  4339     078B  1D03               	btfss	3,2
  4340     078C  2F8E               	goto	u2431
  4341     078D  2F8F               	goto	u2430
  4342     078E                     u2431:
  4343     078E  2F6B               	goto	l3584
  4344     078F                     u2430:
  4345     078F                     l440:
  4346     078F  0008               	return
  4347     0790                     __end_of_SPI1_ExchangeBlock:
  4348                           
  4349                           	psect	text5
  4350     0738                     __ptext5:	
  4351 ;; *************** function _SYSTEM_Initialize *****************
  4352 ;; Defined at:
  4353 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4367 ;;      Params:         0       0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0       0
  4370 ;;      Totals:         0       0       0       0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 9
  4374 ;; This function calls:
  4375 ;;		_ADC_Initialize
  4376 ;;		_CCP4_Initialize
  4377 ;;		_CMP1_Initialize
  4378 ;;		_CMP2_Initialize
  4379 ;;		_EUSART_Initialize
  4380 ;;		_FVR_Initialize
  4381 ;;		_OSCILLATOR_Initialize
  4382 ;;		_PIN_MANAGER_Initialize
  4383 ;;		_PWM3_Initialize
  4384 ;;		_SPI1_Initialize
  4385 ;;		_TMR0_Initialize
  4386 ;;		_TMR1_Initialize
  4387 ;;		_TMR2_Initialize
  4388 ;;		_TMR4_Initialize
  4389 ;;		_WDT_Initialize
  4390 ;; This function is called by:
  4391 ;;		_main
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395     0738                     _SYSTEM_Initialize:	
  4396                           ;psect for function _SYSTEM_Initialize
  4397                           
  4398     0738                     l3754:	
  4399                           ;incstack = 0
  4400                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4401                           
  4402                           
  4403                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  4404     0738  318E  2650  3187   	fcall	_SPI1_Initialize
  4405                           
  4406                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4407     073B  3187  2707  3187   	fcall	_PIN_MANAGER_Initialize
  4408                           
  4409                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4410     073E  318E  261D  3187   	fcall	_OSCILLATOR_Initialize
  4411                           
  4412                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4413     0741  318D  25D8  3187   	fcall	_WDT_Initialize
  4414                           
  4415                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  4416     0744  318D  25D4  3187   	fcall	_FVR_Initialize
  4417                           
  4418                           ;mcc_generated_files/mcc.c: 58:     CMP2_Initialize();
  4419     0747  318E  2667  3187   	fcall	_CMP2_Initialize
  4420                           
  4421                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  4422     074A  318F  271B  3187   	fcall	_TMR4_Initialize
  4423                           
  4424                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  4425     074D  318E  262C  3187   	fcall	_TMR2_Initialize
  4426                           
  4427                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  4428     0750  318F  2741  3187   	fcall	_TMR0_Initialize
  4429                           
  4430                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  4431     0753  318E  265B  3187   	fcall	_CMP1_Initialize
  4432                           
  4433                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  4434     0756  318F  2709  3187   	fcall	_CCP4_Initialize
  4435                           
  4436                           ;mcc_generated_files/mcc.c: 64:     ADC_Initialize();
  4437     0759  318E  2624  3187   	fcall	_ADC_Initialize
  4438                           
  4439                           ;mcc_generated_files/mcc.c: 65:     PWM3_Initialize();
  4440     075C  318E  263D  3187   	fcall	_PWM3_Initialize
  4441                           
  4442                           ;mcc_generated_files/mcc.c: 66:     TMR1_Initialize();
  4443     075F  318E  269B  3187   	fcall	_TMR1_Initialize
  4444                           
  4445                           ;mcc_generated_files/mcc.c: 67:     EUSART_Initialize();
  4446     0762  318F  27DB  3187   	fcall	_EUSART_Initialize
  4447     0765                     l255:
  4448     0765  0008               	return
  4449     0766                     __end_of_SYSTEM_Initialize:
  4450                           
  4451                           	psect	text6
  4452     0DD8                     __ptext6:	
  4453 ;; *************** function _WDT_Initialize *****************
  4454 ;; Defined at:
  4455 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4469 ;;      Params:         0       0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; Hardware stack levels required when called: 7
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_SYSTEM_Initialize
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483     0DD8                     _WDT_Initialize:	
  4484                           ;psect for function _WDT_Initialize
  4485                           
  4486     0DD8                     l3672:	
  4487                           ;incstack = 0
  4488                           ; Regs used in _WDT_Initialize: [wreg]
  4489                           
  4490                           
  4491                           ;mcc_generated_files/mcc.c: 83:     WDTCON = 0x16;
  4492     0DD8  3016               	movlw	22
  4493     0DD9  0021               	movlb	1	; select bank1
  4494     0DDA  0097               	movwf	23	;volatile
  4495     0DDB                     l261:
  4496     0DDB  0008               	return
  4497     0DDC                     __end_of_WDT_Initialize:
  4498                           
  4499                           	psect	text7
  4500     0F1B                     __ptext7:	
  4501 ;; *************** function _TMR4_Initialize *****************
  4502 ;; Defined at:
  4503 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0, pclath, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4517 ;;      Params:         0       0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0
  4520 ;;      Totals:         0       0       0       0       0       0
  4521 ;;Total ram usage:        0 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 8
  4524 ;; This function calls:
  4525 ;;		_TMR4_SetInterruptHandler
  4526 ;; This function is called by:
  4527 ;;		_SYSTEM_Initialize
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531     0F1B                     _TMR4_Initialize:	
  4532                           ;psect for function _TMR4_Initialize
  4533                           
  4534     0F1B                     l3676:	
  4535                           ;incstack = 0
  4536                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4537                           
  4538                           
  4539                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF3;
  4540     0F1B  30F3               	movlw	243
  4541     0F1C  0028               	movlb	8	; select bank8
  4542     0F1D  0096               	movwf	22	;volatile
  4543     0F1E                     l3678:
  4544                           
  4545                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  4546     0F1E  0195               	clrf	21	;volatile
  4547     0F1F                     l3680:
  4548                           
  4549                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  4550     0F1F  0020               	movlb	0	; select bank0
  4551     0F20  1093               	bcf	19,1	;volatile
  4552     0F21                     l3682:
  4553                           
  4554                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  4555     0F21  0021               	movlb	1	; select bank1
  4556     0F22  1493               	bsf	19,1	;volatile
  4557     0F23                     l3684:
  4558                           
  4559                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  4560     0F23  3002               	movlw	low _TMR4_DefaultInterruptHandler
  4561     0F24  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4562     0F25  3000               	movlw	high _TMR4_DefaultInterruptHandler
  4563     0F26  00A1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4564     0F27  318E  2611  318F   	fcall	_TMR4_SetInterruptHandler
  4565     0F2A                     l3686:
  4566                           
  4567                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x7F;
  4568     0F2A  307F               	movlw	127
  4569     0F2B  0028               	movlb	8	; select bank8
  4570     0F2C  0097               	movwf	23	;volatile
  4571     0F2D                     l829:
  4572     0F2D  0008               	return
  4573     0F2E                     __end_of_TMR4_Initialize:
  4574                           
  4575                           	psect	text8
  4576     0E11                     __ptext8:	
  4577 ;; *************** function _TMR4_SetInterruptHandler *****************
  4578 ;; Defined at:
  4579 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4582 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      void 
  4587 ;; Registers used:
  4588 ;;		wreg
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4594 ;;      Params:         0       0       2       0       0       0
  4595 ;;      Locals:         0       0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0
  4597 ;;      Totals:         0       0       2       0       0       0
  4598 ;;Total ram usage:        2 bytes
  4599 ;; Hardware stack levels used: 1
  4600 ;; Hardware stack levels required when called: 7
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_TMR4_Initialize
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608     0E11                     _TMR4_SetInterruptHandler:	
  4609                           ;psect for function _TMR4_SetInterruptHandler
  4610                           
  4611     0E11                     l3596:	
  4612                           ;incstack = 0
  4613                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  4614                           
  4615                           
  4616                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  4617     0E11  0021               	movlb	1	; select bank1
  4618     0E12  0821               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4619     0E13  00B4               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  4620     0E14  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  4621     0E15  00B3               	movwf	_TMR4_InterruptHandler^(0+128)
  4622     0E16                     l857:
  4623     0E16  0008               	return
  4624     0E17                     __end_of_TMR4_SetInterruptHandler:
  4625                           
  4626                           	psect	text9
  4627     0E2C                     __ptext9:	
  4628 ;; *************** function _TMR2_Initialize *****************
  4629 ;; Defined at:
  4630 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;		None
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4644 ;;      Params:         0       0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0
  4647 ;;      Totals:         0       0       0       0       0       0
  4648 ;;Total ram usage:        0 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; Hardware stack levels required when called: 7
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_SYSTEM_Initialize
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658     0E2C                     _TMR2_Initialize:	
  4659                           ;psect for function _TMR2_Initialize
  4660                           
  4661     0E2C                     l3688:	
  4662                           ;incstack = 0
  4663                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4664                           
  4665                           
  4666                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4667     0E2C  30FF               	movlw	255
  4668     0E2D  0020               	movlb	0	; select bank0
  4669     0E2E  009B               	movwf	27	;volatile
  4670     0E2F                     l3690:
  4671                           
  4672                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4673     0E2F  019A               	clrf	26	;volatile
  4674     0E30                     l3692:
  4675                           
  4676                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4677     0E30  1091               	bcf	17,1	;volatile
  4678     0E31                     l3694:
  4679                           
  4680                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4681     0E31  3004               	movlw	4
  4682     0E32  009C               	movwf	28	;volatile
  4683     0E33                     l550:
  4684     0E33  0008               	return
  4685     0E34                     __end_of_TMR2_Initialize:
  4686                           
  4687                           	psect	text10
  4688     0E9B                     __ptext10:	
  4689 ;; *************** function _TMR1_Initialize *****************
  4690 ;; Defined at:
  4691 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4705 ;;      Params:         0       0       0       0       0       0
  4706 ;;      Locals:         0       0       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0
  4708 ;;      Totals:         0       0       0       0       0       0
  4709 ;;Total ram usage:        0 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 7
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_SYSTEM_Initialize
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719     0E9B                     _TMR1_Initialize:	
  4720                           ;psect for function _TMR1_Initialize
  4721                           
  4722     0E9B                     l3726:	
  4723                           ;incstack = 0
  4724                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  4725                           
  4726                           
  4727                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  4728     0E9B  0020               	movlb	0	; select bank0
  4729     0E9C  0199               	clrf	25	;volatile
  4730     0E9D                     l3728:
  4731                           
  4732                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  4733     0E9D  300B               	movlw	11
  4734     0E9E  0097               	movwf	23	;volatile
  4735     0E9F                     l3730:
  4736                           
  4737                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  4738     0E9F  30DC               	movlw	220
  4739     0EA0  0096               	movwf	22	;volatile
  4740     0EA1                     l3732:
  4741                           
  4742                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  4743     0EA1  1011               	bcf	17,0	;volatile
  4744     0EA2                     l3734:
  4745                           
  4746                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4747     0EA2  0817               	movf	23,w	;volatile
  4748     0EA3  00CE               	movwf	_timer1ReloadVal+1	;volatile
  4749     0EA4  0816               	movf	22,w	;volatile
  4750     0EA5  00CD               	movwf	_timer1ReloadVal	;volatile
  4751     0EA6                     l3736:
  4752                           
  4753                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  4754     0EA6  3031               	movlw	49
  4755     0EA7  0098               	movwf	24	;volatile
  4756     0EA8                     l511:
  4757     0EA8  0008               	return
  4758     0EA9                     __end_of_TMR1_Initialize:
  4759                           
  4760                           	psect	text11
  4761     0F41                     __ptext11:	
  4762 ;; *************** function _TMR0_Initialize *****************
  4763 ;; Defined at:
  4764 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0, pclath, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4778 ;;      Params:         0       0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0       0
  4780 ;;      Temps:          0       0       0       0       0       0
  4781 ;;      Totals:         0       0       0       0       0       0
  4782 ;;Total ram usage:        0 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 8
  4785 ;; This function calls:
  4786 ;;		_TMR0_SetInterruptHandler
  4787 ;; This function is called by:
  4788 ;;		_SYSTEM_Initialize
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792     0F41                     _TMR0_Initialize:	
  4793                           ;psect for function _TMR0_Initialize
  4794                           
  4795     0F41                     l3696:	
  4796                           ;incstack = 0
  4797                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4798                           
  4799                           
  4800                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  4801     0F41  0021               	movlb	1	; select bank1
  4802     0F42  0815               	movf	21,w	;volatile
  4803     0F43  39C0               	andlw	192
  4804     0F44  3817               	iorlw	23
  4805     0F45  0095               	movwf	21	;volatile
  4806     0F46                     l3698:
  4807                           
  4808                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  4809     0F46  3016               	movlw	22
  4810     0F47  0020               	movlb	0	; select bank0
  4811     0F48  0095               	movwf	21	;volatile
  4812     0F49                     l3700:
  4813                           
  4814                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  4815     0F49  3016               	movlw	22
  4816     0F4A  00D7               	movwf	_timer0ReloadVal	;volatile
  4817     0F4B                     l3702:
  4818                           
  4819                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  4820     0F4B  110B               	bcf	11,2	;volatile
  4821     0F4C                     l3704:
  4822                           
  4823                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  4824     0F4C  168B               	bsf	11,5	;volatile
  4825     0F4D                     l3706:
  4826                           
  4827                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4828     0F4D  30D3               	movlw	low _TMR0_DefaultInterruptHandler
  4829     0F4E  0021               	movlb	1	; select bank1
  4830     0F4F  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4831     0F50  300D               	movlw	high _TMR0_DefaultInterruptHandler
  4832     0F51  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4833     0F52  318E  260B  318F   	fcall	_TMR0_SetInterruptHandler
  4834     0F55                     l588:
  4835     0F55  0008               	return
  4836     0F56                     __end_of_TMR0_Initialize:
  4837                           
  4838                           	psect	text12
  4839     0E0B                     __ptext12:	
  4840 ;; *************** function _TMR0_SetInterruptHandler *****************
  4841 ;; Defined at:
  4842 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4845 ;;		 -> sendInfo(1), TMR0_DefaultInterruptHandler(1), 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4857 ;;      Params:         0       0       2       0       0       0
  4858 ;;      Locals:         0       0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0
  4860 ;;      Totals:         0       0       2       0       0       0
  4861 ;;Total ram usage:        2 bytes
  4862 ;; Hardware stack levels used: 1
  4863 ;; Hardware stack levels required when called: 7
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_TMR0_Initialize
  4868 ;;		_main
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872     0E0B                     _TMR0_SetInterruptHandler:	
  4873                           ;psect for function _TMR0_SetInterruptHandler
  4874                           
  4875     0E0B                     l3592:	
  4876                           ;incstack = 0
  4877                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4878                           
  4879                           
  4880                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  4881     0E0B  0021               	movlb	1	; select bank1
  4882     0E0C  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4883     0E0D  00B8               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  4884     0E0E  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  4885     0E0F  00B7               	movwf	_TMR0_InterruptHandler^(0+128)
  4886     0E10                     l610:
  4887     0E10  0008               	return
  4888     0E11                     __end_of_TMR0_SetInterruptHandler:
  4889                           
  4890                           	psect	text13
  4891     0E50                     __ptext13:	
  4892 ;; *************** function _SPI1_Initialize *****************
  4893 ;; Defined at:
  4894 ;;		line 62 in file "mcc_generated_files/spi1.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4908 ;;      Params:         0       0       0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0
  4911 ;;      Totals:         0       0       0       0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 7
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_SYSTEM_Initialize
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922     0E50                     _SPI1_Initialize:	
  4923                           ;psect for function _SPI1_Initialize
  4924                           
  4925     0E50                     l3656:	
  4926                           ;incstack = 0
  4927                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  4928                           
  4929                           
  4930                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  4931     0E50  3040               	movlw	64
  4932     0E51  0024               	movlb	4	; select bank4
  4933     0E52  0094               	movwf	20	;volatile
  4934     0E53                     l3658:
  4935                           
  4936                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  4937     0E53  0195               	clrf	21	;volatile
  4938     0E54                     l3660:
  4939                           
  4940                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  4941     0E54  3001               	movlw	1
  4942     0E55  0092               	movwf	18	;volatile
  4943     0E56                     l3662:
  4944                           
  4945                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  4946     0E56  0021               	movlb	1	; select bank1
  4947     0E57  120D               	bcf	13,4	;volatile
  4948     0E58                     l3664:
  4949                           
  4950                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  4951     0E58  0024               	movlb	4	; select bank4
  4952     0E59  1295               	bcf	21,5	;volatile
  4953     0E5A                     l418:
  4954     0E5A  0008               	return
  4955     0E5B                     __end_of_SPI1_Initialize:
  4956                           
  4957                           	psect	text14
  4958     0E3D                     __ptext14:	
  4959 ;; *************** function _PWM3_Initialize *****************
  4960 ;; Defined at:
  4961 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, status,0
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4975 ;;      Params:         0       0       0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0
  4978 ;;      Totals:         0       0       0       0       0       0
  4979 ;;Total ram usage:        0 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; Hardware stack levels required when called: 7
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_SYSTEM_Initialize
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989     0E3D                     _PWM3_Initialize:	
  4990                           ;psect for function _PWM3_Initialize
  4991                           
  4992     0E3D                     l3598:	
  4993                           ;incstack = 0
  4994                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  4995                           
  4996                           
  4997                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  4998     0E3D  300C               	movlw	12
  4999     0E3E  0026               	movlb	6	; select bank6
  5000     0E3F  0093               	movwf	19	;volatile
  5001     0E40                     l3600:
  5002                           
  5003                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  5004     0E40  0191               	clrf	17	;volatile
  5005     0E41                     l3602:
  5006                           
  5007                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  5008     0E41  0192               	clrf	18	;volatile
  5009     0E42                     l3604:
  5010                           
  5011                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  5012     0E42  30CF               	movlw	-49
  5013     0E43  0025               	movlb	5	; select bank5
  5014     0E44  059E               	andwf	30,f	;volatile
  5015     0E45                     l11:
  5016     0E45  0008               	return
  5017     0E46                     __end_of_PWM3_Initialize:
  5018                           
  5019                           	psect	text15
  5020     0707                     __ptext15:	
  5021 ;; *************** function _PIN_MANAGER_Initialize *****************
  5022 ;; Defined at:
  5023 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0, pclath, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5037 ;;      Params:         0       0       0       0       0       0
  5038 ;;      Locals:         0       0       0       0       0       0
  5039 ;;      Temps:          0       0       0       0       0       0
  5040 ;;      Totals:         0       0       0       0       0       0
  5041 ;;Total ram usage:        0 bytes
  5042 ;; Hardware stack levels used: 1
  5043 ;; Hardware stack levels required when called: 8
  5044 ;; This function calls:
  5045 ;;		_IOCBF0_SetInterruptHandler
  5046 ;;		_IOCBF3_SetInterruptHandler
  5047 ;; This function is called by:
  5048 ;;		_SYSTEM_Initialize
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052     0707                     _PIN_MANAGER_Initialize:	
  5053                           ;psect for function _PIN_MANAGER_Initialize
  5054                           
  5055     0707                     l3622:	
  5056                           ;incstack = 0
  5057                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5058                           
  5059                           
  5060                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  5061     0707  0022               	movlb	2	; select bank2
  5062     0708  018C               	clrf	12	;volatile
  5063                           
  5064                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  5065     0709  018D               	clrf	13	;volatile
  5066     070A                     l3624:
  5067                           
  5068                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  5069     070A  3037               	movlw	55
  5070     070B  0021               	movlb	1	; select bank1
  5071     070C  008C               	movwf	12	;volatile
  5072     070D                     l3626:
  5073                           
  5074                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xED;
  5075     070D  30ED               	movlw	237
  5076     070E  008D               	movwf	13	;volatile
  5077     070F                     l3628:
  5078                           
  5079                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5080     070F  30C0               	movlw	192
  5081     0710  0023               	movlb	3	; select bank3
  5082     0711  008D               	movwf	13	;volatile
  5083     0712                     l3630:
  5084                           
  5085                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0F;
  5086     0712  300F               	movlw	15
  5087     0713  008C               	movwf	12	;volatile
  5088     0714                     l3632:
  5089                           
  5090                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x09;
  5091     0714  3009               	movlw	9
  5092     0715  0024               	movlb	4	; select bank4
  5093     0716  008D               	movwf	13	;volatile
  5094     0717                     l3634:
  5095                           
  5096                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5097     0717  018C               	clrf	12	;volatile
  5098     0718                     l3636:
  5099                           
  5100                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 0;
  5101     0718  0021               	movlb	1	; select bank1
  5102     0719  1395               	bcf	21,7	;volatile
  5103                           
  5104                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  5105     071A  30C0               	movlw	192
  5106     071B  0022               	movlb	2	; select bank2
  5107     071C  009D               	movwf	29	;volatile
  5108                           
  5109                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  5110     071D  3001               	movlw	1
  5111     071E  009E               	movwf	30	;volatile
  5112     071F                     l3638:
  5113                           
  5114                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  5115     071F  0027               	movlb	7	; select bank7
  5116     0720  1016               	bcf	22,0	;volatile
  5117     0721                     l3640:
  5118                           
  5119                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  5120     0721  1196               	bcf	22,3	;volatile
  5121     0722                     l3642:
  5122                           
  5123                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  5124     0722  1415               	bsf	21,0	;volatile
  5125     0723                     l3644:
  5126                           
  5127                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  5128     0723  1595               	bsf	21,3	;volatile
  5129     0724                     l3646:
  5130                           
  5131                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 0;
  5132     0724  1014               	bcf	20,0	;volatile
  5133     0725                     l3648:
  5134                           
  5135                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 0;
  5136     0725  1194               	bcf	20,3	;volatile
  5137     0726                     l3650:
  5138                           
  5139                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  5140     0726  30D1               	movlw	low _IOCBF0_DefaultInterruptHandler
  5141     0727  0021               	movlb	1	; select bank1
  5142     0728  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  5143     0729  300D               	movlw	high _IOCBF0_DefaultInterruptHandler
  5144     072A  00A1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5145     072B  318E  2634  3187   	fcall	_IOCBF0_SetInterruptHandler
  5146     072E                     l3652:
  5147                           
  5148                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  5149     072E  30D2               	movlw	low _IOCBF3_DefaultInterruptHandler
  5150     072F  0021               	movlb	1	; select bank1
  5151     0730  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  5152     0731  300D               	movlw	high _IOCBF3_DefaultInterruptHandler
  5153     0732  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5154     0733  318E  2605  3187   	fcall	_IOCBF3_SetInterruptHandler
  5155     0736                     l3654:
  5156                           
  5157                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  5158     0736  158B               	bsf	11,3	;volatile
  5159     0737                     l189:
  5160     0737  0008               	return
  5161     0738                     __end_of_PIN_MANAGER_Initialize:
  5162                           
  5163                           	psect	text16
  5164     0E05                     __ptext16:	
  5165 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  5166 ;; Defined at:
  5167 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5170 ;;		 -> chegadaS2(1), chegadaS1(1), IOCBF3_DefaultInterruptHandler(1), 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5182 ;;      Params:         0       0       2       0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0
  5185 ;;      Totals:         0       0       2       0       0       0
  5186 ;;Total ram usage:        2 bytes
  5187 ;; Hardware stack levels used: 1
  5188 ;; Hardware stack levels required when called: 7
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_PIN_MANAGER_Initialize
  5193 ;;		_main
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197     0E05                     _IOCBF3_SetInterruptHandler:	
  5198                           ;psect for function _IOCBF3_SetInterruptHandler
  5199                           
  5200     0E05                     l3574:	
  5201                           ;incstack = 0
  5202                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  5203                           
  5204                           
  5205                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  5206     0E05  0021               	movlb	1	; select bank1
  5207     0E06  0821               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5208     0E07  00C0               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  5209     0E08  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  5210     0E09  00BF               	movwf	_IOCBF3_InterruptHandler^(0+128)
  5211     0E0A                     l211:
  5212     0E0A  0008               	return
  5213     0E0B                     __end_of_IOCBF3_SetInterruptHandler:
  5214                           
  5215                           	psect	text17
  5216     0E34                     __ptext17:	
  5217 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  5218 ;; Defined at:
  5219 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5222 ;;		 -> IOCBF0_DefaultInterruptHandler(1), 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5234 ;;      Params:         0       0       2       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0
  5237 ;;      Totals:         0       0       2       0       0       0
  5238 ;;Total ram usage:        2 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; Hardware stack levels required when called: 7
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_PIN_MANAGER_Initialize
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248     0E34                     _IOCBF0_SetInterruptHandler:	
  5249                           ;psect for function _IOCBF0_SetInterruptHandler
  5250                           
  5251     0E34                     l3572:	
  5252                           ;incstack = 0
  5253                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  5254                           
  5255                           
  5256                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  5257     0E34  0021               	movlb	1	; select bank1
  5258     0E35  0821               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5259     0E36  0020               	movlb	0	; select bank0
  5260     0E37  00E8               	movwf	_IOCBF0_InterruptHandler+1
  5261     0E38  0021               	movlb	1	; select bank1
  5262     0E39  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  5263     0E3A  0020               	movlb	0	; select bank0
  5264     0E3B  00E7               	movwf	_IOCBF0_InterruptHandler
  5265     0E3C                     l201:
  5266     0E3C  0008               	return
  5267     0E3D                     __end_of_IOCBF0_SetInterruptHandler:
  5268                           
  5269                           	psect	text18
  5270     0E1D                     __ptext18:	
  5271 ;; *************** function _OSCILLATOR_Initialize *****************
  5272 ;; Defined at:
  5273 ;;		line 70 in file "mcc_generated_files/mcc.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5287 ;;      Params:         0       0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 7
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_SYSTEM_Initialize
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301     0E1D                     _OSCILLATOR_Initialize:	
  5302                           ;psect for function _OSCILLATOR_Initialize
  5303                           
  5304     0E1D                     l3666:	
  5305                           ;incstack = 0
  5306                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5307                           
  5308                           
  5309                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x68;
  5310     0E1D  3068               	movlw	104
  5311     0E1E  0021               	movlb	1	; select bank1
  5312     0E1F  0099               	movwf	25	;volatile
  5313     0E20                     l3668:
  5314                           
  5315                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  5316     0E20  0198               	clrf	24	;volatile
  5317     0E21                     l3670:
  5318                           
  5319                           ;mcc_generated_files/mcc.c: 77:     BORCON = 0x00;
  5320     0E21  0022               	movlb	2	; select bank2
  5321     0E22  0196               	clrf	22	;volatile
  5322     0E23                     l258:
  5323     0E23  0008               	return
  5324     0E24                     __end_of_OSCILLATOR_Initialize:
  5325                           
  5326                           	psect	text19
  5327     0DD4                     __ptext19:	
  5328 ;; *************** function _FVR_Initialize *****************
  5329 ;; Defined at:
  5330 ;;		line 58 in file "mcc_generated_files/fvr.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;		None
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      void 
  5337 ;; Registers used:
  5338 ;;		wreg
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5344 ;;      Params:         0       0       0       0       0       0
  5345 ;;      Locals:         0       0       0       0       0       0
  5346 ;;      Temps:          0       0       0       0       0       0
  5347 ;;      Totals:         0       0       0       0       0       0
  5348 ;;Total ram usage:        0 bytes
  5349 ;; Hardware stack levels used: 1
  5350 ;; Hardware stack levels required when called: 7
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_SYSTEM_Initialize
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358     0DD4                     _FVR_Initialize:	
  5359                           ;psect for function _FVR_Initialize
  5360                           
  5361     0DD4                     l3674:	
  5362                           ;incstack = 0
  5363                           ; Regs used in _FVR_Initialize: [wreg]
  5364                           
  5365                           
  5366                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x89;
  5367     0DD4  3089               	movlw	137
  5368     0DD5  0022               	movlb	2	; select bank2
  5369     0DD6  0097               	movwf	23	;volatile
  5370     0DD7                     l306:
  5371     0DD7  0008               	return
  5372     0DD8                     __end_of_FVR_Initialize:
  5373                           
  5374                           	psect	text20
  5375     0FDB                     __ptext20:	
  5376 ;; *************** function _EUSART_Initialize *****************
  5377 ;; Defined at:
  5378 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      void 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0, pclath, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5392 ;;      Params:         0       0       0       0       0       0
  5393 ;;      Locals:         0       0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0
  5395 ;;      Totals:         0       0       0       0       0       0
  5396 ;;Total ram usage:        0 bytes
  5397 ;; Hardware stack levels used: 1
  5398 ;; Hardware stack levels required when called: 8
  5399 ;; This function calls:
  5400 ;;		_EUSART_SetErrorHandler
  5401 ;;		_EUSART_SetFramingErrorHandler
  5402 ;;		_EUSART_SetOverrunErrorHandler
  5403 ;; This function is called by:
  5404 ;;		_SYSTEM_Initialize
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408     0FDB                     _EUSART_Initialize:	
  5409                           ;psect for function _EUSART_Initialize
  5410                           
  5411     0FDB                     l3738:	
  5412                           ;incstack = 0
  5413                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5414                           
  5415                           
  5416                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5417     0FDB  3008               	movlw	8
  5418     0FDC  0023               	movlb	3	; select bank3
  5419     0FDD  009F               	movwf	31	;volatile
  5420                           
  5421                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  5422     0FDE  3090               	movlw	144
  5423     0FDF  009D               	movwf	29	;volatile
  5424                           
  5425                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  5426     0FE0  3024               	movlw	36
  5427     0FE1  009E               	movwf	30	;volatile
  5428                           
  5429                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x33;
  5430     0FE2  3033               	movlw	51
  5431     0FE3  009B               	movwf	27	;volatile
  5432     0FE4                     l3740:
  5433                           
  5434                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5435     0FE4  019C               	clrf	28	;volatile
  5436     0FE5                     l3742:
  5437                           
  5438                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5439     0FE5  3000               	movlw	0
  5440     0FE6  0021               	movlb	1	; select bank1
  5441     0FE7  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  5442     0FE8  3000               	movlw	0
  5443     0FE9  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  5444     0FEA  318D  25F9  318F   	fcall	_EUSART_SetFramingErrorHandler
  5445     0FED                     l3744:
  5446                           
  5447                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5448     0FED  3000               	movlw	0
  5449     0FEE  0021               	movlb	1	; select bank1
  5450     0FEF  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  5451     0FF0  3000               	movlw	0
  5452     0FF1  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  5453     0FF2  318D  25FF  318F   	fcall	_EUSART_SetOverrunErrorHandler
  5454     0FF5                     l3746:
  5455                           
  5456                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5457     0FF5  3000               	movlw	0
  5458     0FF6  0021               	movlb	1	; select bank1
  5459     0FF7  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  5460     0FF8  3000               	movlw	0
  5461     0FF9  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  5462     0FFA  318D  25F3  318F   	fcall	_EUSART_SetErrorHandler
  5463     0FFD                     l3748:
  5464                           
  5465                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5466     0FFD  0020               	movlb	0	; select bank0
  5467     0FFE  01D8               	clrf	_eusartRxLastError	;volatile
  5468     0FFF                     l352:
  5469     0FFF  0008               	return
  5470     1000                     __end_of_EUSART_Initialize:
  5471                           
  5472                           	psect	text21
  5473     0DFF                     __ptext21:	
  5474 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5475 ;; Defined at:
  5476 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5479 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		wreg
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5491 ;;      Params:         0       0       2       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0
  5494 ;;      Totals:         0       0       2       0       0       0
  5495 ;;Total ram usage:        2 bytes
  5496 ;; Hardware stack levels used: 1
  5497 ;; Hardware stack levels required when called: 7
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_EUSART_Initialize
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505     0DFF                     _EUSART_SetOverrunErrorHandler:	
  5506                           ;psect for function _EUSART_SetOverrunErrorHandler
  5507                           
  5508     0DFF                     l3578:	
  5509                           ;incstack = 0
  5510                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5511                           
  5512                           
  5513                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5514     0DFF  0021               	movlb	1	; select bank1
  5515     0E00  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  5516     0E01  00BC               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5517     0E02  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  5518     0E03  00BB               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5519     0E04                     l394:
  5520     0E04  0008               	return
  5521     0E05                     __end_of_EUSART_SetOverrunErrorHandler:
  5522                           
  5523                           	psect	text22
  5524     0DF9                     __ptext22:	
  5525 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5526 ;; Defined at:
  5527 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5530 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      void 
  5535 ;; Registers used:
  5536 ;;		wreg
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5542 ;;      Params:         0       0       2       0       0       0
  5543 ;;      Locals:         0       0       0       0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0
  5545 ;;      Totals:         0       0       2       0       0       0
  5546 ;;Total ram usage:        2 bytes
  5547 ;; Hardware stack levels used: 1
  5548 ;; Hardware stack levels required when called: 7
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_EUSART_Initialize
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556     0DF9                     _EUSART_SetFramingErrorHandler:	
  5557                           ;psect for function _EUSART_SetFramingErrorHandler
  5558                           
  5559     0DF9                     l3576:	
  5560                           ;incstack = 0
  5561                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5562                           
  5563                           
  5564                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5565     0DF9  0021               	movlb	1	; select bank1
  5566     0DFA  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  5567     0DFB  00BE               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5568     0DFC  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  5569     0DFD  00BD               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5570     0DFE                     l391:
  5571     0DFE  0008               	return
  5572     0DFF                     __end_of_EUSART_SetFramingErrorHandler:
  5573                           
  5574                           	psect	text23
  5575     0DF3                     __ptext23:	
  5576 ;; *************** function _EUSART_SetErrorHandler *****************
  5577 ;; Defined at:
  5578 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5581 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5593 ;;      Params:         0       0       2       0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0
  5596 ;;      Totals:         0       0       2       0       0       0
  5597 ;;Total ram usage:        2 bytes
  5598 ;; Hardware stack levels used: 1
  5599 ;; Hardware stack levels required when called: 7
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_EUSART_Initialize
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607     0DF3                     _EUSART_SetErrorHandler:	
  5608                           ;psect for function _EUSART_SetErrorHandler
  5609                           
  5610     0DF3                     l3580:	
  5611                           ;incstack = 0
  5612                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5613                           
  5614                           
  5615                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  5616     0DF3  0021               	movlb	1	; select bank1
  5617     0DF4  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  5618     0DF5  00BA               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5619     0DF6  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  5620     0DF7  00B9               	movwf	_EUSART_ErrorHandler^(0+128)
  5621     0DF8                     l397:
  5622     0DF8  0008               	return
  5623     0DF9                     __end_of_EUSART_SetErrorHandler:
  5624                           
  5625                           	psect	text24
  5626     0E67                     __ptext24:	
  5627 ;; *************** function _CMP2_Initialize *****************
  5628 ;; Defined at:
  5629 ;;		line 59 in file "mcc_generated_files/cmp2.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;		None
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		wreg
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5643 ;;      Params:         0       0       0       0       0       0
  5644 ;;      Locals:         0       0       0       0       0       0
  5645 ;;      Temps:          0       0       0       0       0       0
  5646 ;;      Totals:         0       0       0       0       0       0
  5647 ;;Total ram usage:        0 bytes
  5648 ;; Hardware stack levels used: 1
  5649 ;; Hardware stack levels required when called: 7
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		_SYSTEM_Initialize
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657     0E67                     _CMP2_Initialize:	
  5658                           ;psect for function _CMP2_Initialize
  5659                           
  5660     0E67                     l3606:	
  5661                           ;incstack = 0
  5662                           ; Regs used in _CMP2_Initialize: [wreg]
  5663                           
  5664                           
  5665                           ;mcc_generated_files/cmp2.c: 66:     PIE2bits.C2IE = 0;
  5666     0E67  0021               	movlb	1	; select bank1
  5667     0E68  1312               	bcf	18,6	;volatile
  5668     0E69                     l3608:
  5669                           
  5670                           ;mcc_generated_files/cmp2.c: 69:     CM2CON0 = 0x84;
  5671     0E69  3084               	movlw	132
  5672     0E6A  0022               	movlb	2	; select bank2
  5673     0E6B  0093               	movwf	19	;volatile
  5674                           
  5675                           ;mcc_generated_files/cmp2.c: 72:     CM2CON1 = 0xA1;
  5676     0E6C  30A1               	movlw	161
  5677     0E6D  0094               	movwf	20	;volatile
  5678     0E6E                     l3610:
  5679                           
  5680                           ;mcc_generated_files/cmp2.c: 75:     PIR2bits.C2IF = 0;
  5681     0E6E  0020               	movlb	0	; select bank0
  5682     0E6F  1312               	bcf	18,6	;volatile
  5683     0E70                     l3612:
  5684                           
  5685                           ;mcc_generated_files/cmp2.c: 78:     PIE2bits.C2IE = 1;
  5686     0E70  0021               	movlb	1	; select bank1
  5687     0E71  1712               	bsf	18,6	;volatile
  5688     0E72                     l71:
  5689     0E72  0008               	return
  5690     0E73                     __end_of_CMP2_Initialize:
  5691                           
  5692                           	psect	text25
  5693     0E5B                     __ptext25:	
  5694 ;; *************** function _CMP1_Initialize *****************
  5695 ;; Defined at:
  5696 ;;		line 59 in file "mcc_generated_files/cmp1.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5710 ;;      Params:         0       0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0
  5713 ;;      Totals:         0       0       0       0       0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 7
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_SYSTEM_Initialize
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724     0E5B                     _CMP1_Initialize:	
  5725                           ;psect for function _CMP1_Initialize
  5726                           
  5727     0E5B                     l3614:	
  5728                           ;incstack = 0
  5729                           ; Regs used in _CMP1_Initialize: [wreg]
  5730                           
  5731                           
  5732                           ;mcc_generated_files/cmp1.c: 66:     PIE2bits.C1IE = 0;
  5733     0E5B  0021               	movlb	1	; select bank1
  5734     0E5C  1292               	bcf	18,5	;volatile
  5735     0E5D                     l3616:
  5736                           
  5737                           ;mcc_generated_files/cmp1.c: 69:     CM1CON0 = 0x84;
  5738     0E5D  3084               	movlw	132
  5739     0E5E  0022               	movlb	2	; select bank2
  5740     0E5F  0091               	movwf	17	;volatile
  5741                           
  5742                           ;mcc_generated_files/cmp1.c: 72:     CM1CON1 = 0xA0;
  5743     0E60  30A0               	movlw	160
  5744     0E61  0092               	movwf	18	;volatile
  5745     0E62                     l3618:
  5746                           
  5747                           ;mcc_generated_files/cmp1.c: 75:     PIR2bits.C1IF = 0;
  5748     0E62  0020               	movlb	0	; select bank0
  5749     0E63  1292               	bcf	18,5	;volatile
  5750     0E64                     l3620:
  5751                           
  5752                           ;mcc_generated_files/cmp1.c: 78:     PIE2bits.C1IE = 1;
  5753     0E64  0021               	movlb	1	; select bank1
  5754     0E65  1692               	bsf	18,5	;volatile
  5755     0E66                     l134:
  5756     0E66  0008               	return
  5757     0E67                     __end_of_CMP1_Initialize:
  5758                           
  5759                           	psect	text26
  5760     0F09                     __ptext26:	
  5761 ;; *************** function _CCP4_Initialize *****************
  5762 ;; Defined at:
  5763 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;		None
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  1    wreg      void 
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0, pclath, cstack
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5777 ;;      Params:         0       0       0       0       0       0
  5778 ;;      Locals:         0       0       0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0
  5780 ;;      Totals:         0       0       0       0       0       0
  5781 ;;Total ram usage:        0 bytes
  5782 ;; Hardware stack levels used: 1
  5783 ;; Hardware stack levels required when called: 8
  5784 ;; This function calls:
  5785 ;;		_CCP4_SetCallBack
  5786 ;; This function is called by:
  5787 ;;		_SYSTEM_Initialize
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791     0F09                     _CCP4_Initialize:	
  5792                           ;psect for function _CCP4_Initialize
  5793                           
  5794     0F09                     l3708:	
  5795                           ;incstack = 0
  5796                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5797                           
  5798                           
  5799                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  5800     0F09  3004               	movlw	4
  5801     0F0A  0026               	movlb	6	; select bank6
  5802     0F0B  009A               	movwf	26	;volatile
  5803     0F0C                     l3710:
  5804                           
  5805                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  5806     0F0C  0198               	clrf	24	;volatile
  5807     0F0D                     l3712:
  5808                           
  5809                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  5810     0F0D  0199               	clrf	25	;volatile
  5811     0F0E                     l3714:
  5812                           
  5813                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  5814     0F0E  30D0               	movlw	low _CCP4_DefaultCallBack
  5815     0F0F  0021               	movlb	1	; select bank1
  5816     0F10  00A0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  5817     0F11  300D               	movlw	high _CCP4_DefaultCallBack
  5818     0F12  00A1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  5819     0F13  318D  25ED  318F   	fcall	_CCP4_SetCallBack
  5820     0F16                     l3716:
  5821                           
  5822                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  5823     0F16  0020               	movlb	0	; select bank0
  5824     0F17  1293               	bcf	19,5	;volatile
  5825     0F18                     l3718:
  5826                           
  5827                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  5828     0F18  0021               	movlb	1	; select bank1
  5829     0F19  1693               	bsf	19,5	;volatile
  5830     0F1A                     l800:
  5831     0F1A  0008               	return
  5832     0F1B                     __end_of_CCP4_Initialize:
  5833                           
  5834                           	psect	text27
  5835     0DED                     __ptext27:	
  5836 ;; *************** function _CCP4_SetCallBack *****************
  5837 ;; Defined at:
  5838 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  5841 ;;		 -> CCP4_DefaultCallBack(1), 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;		None
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5853 ;;      Params:         0       0       2       0       0       0
  5854 ;;      Locals:         0       0       0       0       0       0
  5855 ;;      Temps:          0       0       0       0       0       0
  5856 ;;      Totals:         0       0       2       0       0       0
  5857 ;;Total ram usage:        2 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 7
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_CCP4_Initialize
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867     0DED                     _CCP4_SetCallBack:	
  5868                           ;psect for function _CCP4_SetCallBack
  5869                           
  5870     0DED                     l3594:	
  5871                           ;incstack = 0
  5872                           ; Regs used in _CCP4_SetCallBack: [wreg]
  5873                           
  5874                           
  5875                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  5876     0DED  0021               	movlb	1	; select bank1
  5877     0DEE  0821               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  5878     0DEF  00B6               	movwf	(_CCP4_CallBack+1)^(0+128)
  5879     0DF0  0820               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  5880     0DF1  00B5               	movwf	_CCP4_CallBack^(0+128)
  5881     0DF2                     l806:
  5882     0DF2  0008               	return
  5883     0DF3                     __end_of_CCP4_SetCallBack:
  5884                           
  5885                           	psect	text28
  5886     0E24                     __ptext28:	
  5887 ;; *************** function _ADC_Initialize *****************
  5888 ;; Defined at:
  5889 ;;		line 67 in file "mcc_generated_files/adc.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5903 ;;      Params:         0       0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0       0
  5906 ;;      Totals:         0       0       0       0       0       0
  5907 ;;Total ram usage:        0 bytes
  5908 ;; Hardware stack levels used: 1
  5909 ;; Hardware stack levels required when called: 7
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_SYSTEM_Initialize
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917     0E24                     _ADC_Initialize:	
  5918                           ;psect for function _ADC_Initialize
  5919                           
  5920     0E24                     l3720:	
  5921                           ;incstack = 0
  5922                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5923                           
  5924                           
  5925                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC3;
  5926     0E24  30C3               	movlw	195
  5927     0E25  0021               	movlb	1	; select bank1
  5928     0E26  009E               	movwf	30	;volatile
  5929     0E27                     l3722:
  5930                           
  5931                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  5932     0E27  019B               	clrf	27	;volatile
  5933     0E28                     l3724:
  5934                           
  5935                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  5936     0E28  019C               	clrf	28	;volatile
  5937                           
  5938                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  5939     0E29  3001               	movlw	1
  5940     0E2A  009D               	movwf	29	;volatile
  5941     0E2B                     l278:
  5942     0E2B  0008               	return
  5943     0E2C                     __end_of_ADC_Initialize:
  5944                           
  5945                           	psect	text29
  5946     05B6                     __ptext29:	
  5947 ;; *************** function _SPI1_Open *****************
  5948 ;; Defined at:
  5949 ;;		line 72 in file "mcc_generated_files/spi1.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  spi1UniqueCo    1    wreg     enum E358
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  spi1UniqueCo    1    3[BANK1 ] enum E358
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      _Bool 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5963 ;;      Params:         0       0       0       0       0       0
  5964 ;;      Locals:         0       0       1       0       0       0
  5965 ;;      Temps:          0       0       3       0       0       0
  5966 ;;      Totals:         0       0       4       0       0       0
  5967 ;;Total ram usage:        4 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; Hardware stack levels required when called: 7
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_main
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977     05B6                     _SPI1_Open:	
  5978                           ;psect for function _SPI1_Open
  5979                           
  5980                           
  5981                           ;incstack = 0
  5982                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
  5983                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  5984     05B6  0021               	movlb	1	; select bank1
  5985     05B7  00A3               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+128)
  5986     05B8                     l3772:
  5987                           
  5988                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  5989     05B8  0024               	movlb	4	; select bank4
  5990     05B9  1A95               	btfsc	21,5	;volatile
  5991     05BA  2DBC               	goto	u2461
  5992     05BB  2DBD               	goto	u2460
  5993     05BC                     u2461:
  5994     05BC  2E0D               	goto	l422
  5995     05BD                     u2460:
  5996     05BD                     l3774:
  5997                           
  5998                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  5999     05BD  0021               	movlb	1	; select bank1
  6000     05BE  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6001     05BF  00A0               	movwf	??_SPI1_Open^(0+128)
  6002     05C0  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6003     05C1  35A0               	lslf	??_SPI1_Open^(0+128),f
  6004     05C2  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6005     05C3  35A0               	lslf	??_SPI1_Open^(0+128),f
  6006     05C4  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6007     05C5  300C               	movlw	low (_spi1_configuration+1)
  6008     05C6  0720               	addwf	??_SPI1_Open^(0+128),w
  6009     05C7  0084               	movwf	4
  6010     05C8  3008               	movlw	high (_spi1_configuration+1)
  6011     05C9  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6012     05CA  3880               	iorlw	128
  6013     05CB  0085               	movwf	5
  6014     05CC  0800               	movf	0,w	;code access
  6015     05CD  0024               	movlb	4	; select bank4
  6016     05CE  0094               	movwf	20	;volatile
  6017                           
  6018                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  6019     05CF  0021               	movlb	1	; select bank1
  6020     05D0  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6021     05D1  00A0               	movwf	??_SPI1_Open^(0+128)
  6022     05D2  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6023     05D3  35A0               	lslf	??_SPI1_Open^(0+128),f
  6024     05D4  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6025     05D5  35A0               	lslf	??_SPI1_Open^(0+128),f
  6026     05D6  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6027     05D7  300B               	movlw	low _spi1_configuration
  6028     05D8  0720               	addwf	??_SPI1_Open^(0+128),w
  6029     05D9  0084               	movwf	4
  6030     05DA  3008               	movlw	high _spi1_configuration
  6031     05DB  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6032     05DC  3880               	iorlw	128
  6033     05DD  0085               	movwf	5
  6034     05DE  0800               	movf	0,w	;code access
  6035     05DF  0024               	movlb	4	; select bank4
  6036     05E0  0095               	movwf	21	;volatile
  6037     05E1                     l3776:
  6038                           
  6039                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  6040     05E1  0196               	clrf	22	;volatile
  6041     05E2                     l3778:
  6042                           
  6043                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  6044     05E2  0021               	movlb	1	; select bank1
  6045     05E3  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6046     05E4  00A0               	movwf	??_SPI1_Open^(0+128)
  6047     05E5  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6048     05E6  35A0               	lslf	??_SPI1_Open^(0+128),f
  6049     05E7  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6050     05E8  35A0               	lslf	??_SPI1_Open^(0+128),f
  6051     05E9  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6052     05EA  300D               	movlw	low (_spi1_configuration+2)
  6053     05EB  0720               	addwf	??_SPI1_Open^(0+128),w
  6054     05EC  0084               	movwf	4
  6055     05ED  3008               	movlw	high (_spi1_configuration+2)
  6056     05EE  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6057     05EF  3880               	iorlw	128
  6058     05F0  0085               	movwf	5
  6059     05F1  0800               	movf	0,w	;code access
  6060     05F2  0024               	movlb	4	; select bank4
  6061     05F3  0092               	movwf	18	;volatile
  6062     05F4                     l3780:
  6063                           
  6064                           ;mcc_generated_files/spi1.c: 80:         TRISBbits.TRISB4 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  6065     05F4  0021               	movlb	1	; select bank1
  6066     05F5  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6067     05F6  00A0               	movwf	??_SPI1_Open^(0+128)
  6068     05F7  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6069     05F8  35A0               	lslf	??_SPI1_Open^(0+128),f
  6070     05F9  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6071     05FA  35A0               	lslf	??_SPI1_Open^(0+128),f
  6072     05FB  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6073     05FC  300E               	movlw	low (_spi1_configuration+3)
  6074     05FD  0720               	addwf	??_SPI1_Open^(0+128),w
  6075     05FE  0084               	movwf	4
  6076     05FF  3008               	movlw	high (_spi1_configuration+3)
  6077     0600  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6078     0601  3880               	iorlw	128
  6079     0602  0085               	movwf	5
  6080     0603  0800               	movf	0,w	;code access
  6081     0604  00A2               	movwf	(??_SPI1_Open+2)^(0+128)
  6082     0605  0EA2               	swapf	(??_SPI1_Open+2)^(0+128),f
  6083     0606  080D               	movf	13,w	;volatile
  6084     0607  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6085     0608  39EF               	andlw	-17
  6086     0609  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6087     060A  008D               	movwf	13	;volatile
  6088     060B                     l3782:
  6089                           
  6090                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  6091     060B  0024               	movlb	4	; select bank4
  6092     060C  1695               	bsf	21,5	;volatile
  6093     060D                     l422:
  6094     060D  0008               	return
  6095     060E                     __end_of_SPI1_Open:
  6096                           
  6097                           	psect	text30
  6098     0DDC                     __ptext30:	
  6099 ;; *************** function _EUSART_is_rx_ready *****************
  6100 ;; Defined at:
  6101 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      _Bool 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6115 ;;      Params:         0       0       0       0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0
  6118 ;;      Totals:         0       0       0       0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; Hardware stack levels required when called: 7
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_main
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129     0DDC                     _EUSART_is_rx_ready:	
  6130                           ;psect for function _EUSART_is_rx_ready
  6131                           
  6132     0DDC                     l3756:	
  6133                           ;incstack = 0
  6134                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6135                           
  6136                           
  6137                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  6138     0DDC  0020               	movlb	0	; select bank0
  6139     0DDD  0E11               	swapf	17,w	;volatile
  6140     0DDE  0C89               	rrf	9,f
  6141     0DDF  3901               	andlw	1
  6142     0DE0                     l360:
  6143     0DE0  0008               	return
  6144     0DE1                     __end_of_EUSART_is_rx_ready:
  6145                           
  6146                           	psect	text31
  6147     0EC7                     __ptext31:	
  6148 ;; *************** function _EUSART_Read *****************
  6149 ;; Defined at:
  6150 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  1    wreg      unsigned char 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6164 ;;      Params:         0       0       0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0
  6167 ;;      Totals:         0       0       0       0       0       0
  6168 ;;Total ram usage:        0 bytes
  6169 ;; Hardware stack levels used: 1
  6170 ;; Hardware stack levels required when called: 7
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178     0EC7                     _EUSART_Read:	
  6179                           ;psect for function _EUSART_Read
  6180                           
  6181     0EC7                     l3760:	
  6182                           ;incstack = 0
  6183                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6184                           
  6185     0EC7                     l369:	
  6186                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6187                           
  6188                           
  6189                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  6190     0EC7  0020               	movlb	0	; select bank0
  6191     0EC8  1E91               	btfss	17,5	;volatile
  6192     0EC9  2ECB               	goto	u2441
  6193     0ECA  2ECC               	goto	u2440
  6194     0ECB                     u2441:
  6195     0ECB  2EC7               	goto	l369
  6196     0ECC                     u2440:
  6197     0ECC                     l3762:
  6198                           
  6199                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6200     0ECC  01D8               	clrf	_eusartRxLastError	;volatile
  6201     0ECD                     l3764:
  6202                           
  6203                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  6204     0ECD  0023               	movlb	3	; select bank3
  6205     0ECE  1C9D               	btfss	29,1	;volatile
  6206     0ECF  2ED1               	goto	u2451
  6207     0ED0  2ED2               	goto	u2450
  6208     0ED1                     u2451:
  6209     0ED1  2ED4               	goto	l3768
  6210     0ED2                     u2450:
  6211     0ED2                     l3766:
  6212                           
  6213                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  6214     0ED2  121D               	bcf	29,4	;volatile
  6215                           
  6216                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  6217     0ED3  161D               	bsf	29,4	;volatile
  6218     0ED4                     l3768:
  6219                           
  6220                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  6221     0ED4  0819               	movf	25,w	;volatile
  6222     0ED5                     l373:
  6223     0ED5  0008               	return
  6224     0ED6                     __end_of_EUSART_Read:
  6225                           
  6226                           	psect	intentry
  6227     0004                     __pintentry:	
  6228 ;; *************** function _INTERRUPT_InterruptManager *****************
  6229 ;; Defined at:
  6230 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;		None
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;		None
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  1    wreg      void 
  6237 ;; Registers used:
  6238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6244 ;;      Params:         0       0       0       0       0       0
  6245 ;;      Locals:         0       0       0       0       0       0
  6246 ;;      Temps:          0       0       0       0       0       0
  6247 ;;      Totals:         0       0       0       0       0       0
  6248 ;;Total ram usage:        0 bytes
  6249 ;; Hardware stack levels used: 1
  6250 ;; Hardware stack levels required when called: 6
  6251 ;; This function calls:
  6252 ;;		_CCP4_CaptureISR
  6253 ;;		_CMP1_ISR
  6254 ;;		_CMP2_ISR
  6255 ;;		_PIN_MANAGER_IOC
  6256 ;;		_TMR0_ISR
  6257 ;;		_TMR4_ISR
  6258 ;; This function is called by:
  6259 ;;		Interrupt level 1
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263     0004                     _INTERRUPT_InterruptManager:
  6264                           
  6265                           ;incstack = 0
  6266     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6267                           
  6268                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6269     0005  3180               	pagesel	$
  6270     0006                     i1l3340:
  6271                           
  6272                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  6273     0006  1D8B               	btfss	11,3	;volatile
  6274     0007  2809               	goto	u197_21
  6275     0008  280A               	goto	u197_20
  6276     0009                     u197_21:
  6277     0009  2811               	goto	i1l3346
  6278     000A                     u197_20:
  6279     000A                     i1l3342:
  6280     000A  1C0B               	btfss	11,0	;volatile
  6281     000B  280D               	goto	u198_21
  6282     000C  280E               	goto	u198_20
  6283     000D                     u198_21:
  6284     000D  2811               	goto	i1l3346
  6285     000E                     u198_20:
  6286     000E                     i1l3344:
  6287                           
  6288                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6289     000E  318E  26E6  3180   	fcall	_PIN_MANAGER_IOC
  6290     0011                     i1l3346:
  6291                           
  6292                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6293     0011  1E8B               	btfss	11,5	;volatile
  6294     0012  2814               	goto	u199_21
  6295     0013  2815               	goto	u199_20
  6296     0014                     u199_21:
  6297     0014  281C               	goto	i1l3352
  6298     0015                     u199_20:
  6299     0015                     i1l3348:
  6300     0015  1D0B               	btfss	11,2	;volatile
  6301     0016  2818               	goto	u200_21
  6302     0017  2819               	goto	u200_20
  6303     0018                     u200_21:
  6304     0018  281C               	goto	i1l3352
  6305     0019                     u200_20:
  6306     0019                     i1l3350:
  6307                           
  6308                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  6309     0019  318F  276C  3180   	fcall	_TMR0_ISR
  6310     001C                     i1l3352:
  6311                           
  6312                           ;mcc_generated_files/interrupt_manager.c: 63:     if(INTCONbits.PEIE == 1)
  6313     001C  1F0B               	btfss	11,6	;volatile
  6314     001D  281F               	goto	u201_21
  6315     001E  2820               	goto	u201_20
  6316     001F                     u201_21:
  6317     001F  2854               	goto	i1l492
  6318     0020                     u201_20:
  6319     0020                     i1l3354:
  6320                           
  6321                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE2bits.C2IE == 1 && PIR2bits.C2IF == 1)
  6322     0020  0021               	movlb	1	; select bank1
  6323     0021  1F12               	btfss	18,6	;volatile
  6324     0022  2824               	goto	u202_21
  6325     0023  2825               	goto	u202_20
  6326     0024                     u202_21:
  6327     0024  282D               	goto	i1l3360
  6328     0025                     u202_20:
  6329     0025                     i1l3356:
  6330     0025  0020               	movlb	0	; select bank0
  6331     0026  1F12               	btfss	18,6	;volatile
  6332     0027  2829               	goto	u203_21
  6333     0028  282A               	goto	u203_20
  6334     0029                     u203_21:
  6335     0029  282D               	goto	i1l3360
  6336     002A                     u203_20:
  6337     002A                     i1l3358:
  6338                           
  6339                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             CMP2_ISR();
  6340     002A  318D  25E7  3180   	fcall	_CMP2_ISR
  6341     002D                     i1l3360:
  6342                           
  6343                           ;mcc_generated_files/interrupt_manager.c: 69:         if(PIE2bits.C1IE == 1 && PIR2bits.
      +                          C1IF == 1)
  6344     002D  0021               	movlb	1	; select bank1
  6345     002E  1E92               	btfss	18,5	;volatile
  6346     002F  2831               	goto	u204_21
  6347     0030  2832               	goto	u204_20
  6348     0031                     u204_21:
  6349     0031  283A               	goto	i1l3366
  6350     0032                     u204_20:
  6351     0032                     i1l3362:
  6352     0032  0020               	movlb	0	; select bank0
  6353     0033  1E92               	btfss	18,5	;volatile
  6354     0034  2836               	goto	u205_21
  6355     0035  2837               	goto	u205_20
  6356     0036                     u205_21:
  6357     0036  283A               	goto	i1l3366
  6358     0037                     u205_20:
  6359     0037                     i1l3364:
  6360                           
  6361                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP1_ISR();
  6362     0037  318D  25E1  3180   	fcall	_CMP1_ISR
  6363     003A                     i1l3366:
  6364                           
  6365                           ;mcc_generated_files/interrupt_manager.c: 73:         if(PIE3bits.CCP4IE == 1 && PIR3bit
      +                          s.CCP4IF == 1)
  6366     003A  0021               	movlb	1	; select bank1
  6367     003B  1E93               	btfss	19,5	;volatile
  6368     003C  283E               	goto	u206_21
  6369     003D  283F               	goto	u206_20
  6370     003E                     u206_21:
  6371     003E  2847               	goto	i1l3372
  6372     003F                     u206_20:
  6373     003F                     i1l3368:
  6374     003F  0020               	movlb	0	; select bank0
  6375     0040  1E93               	btfss	19,5	;volatile
  6376     0041  2843               	goto	u207_21
  6377     0042  2844               	goto	u207_20
  6378     0043                     u207_21:
  6379     0043  2847               	goto	i1l3372
  6380     0044                     u207_20:
  6381     0044                     i1l3370:
  6382                           
  6383                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CCP4_CaptureISR();
  6384     0044  318E  26F7  3180   	fcall	_CCP4_CaptureISR
  6385     0047                     i1l3372:
  6386                           
  6387                           ;mcc_generated_files/interrupt_manager.c: 77:         if(PIE3bits.TMR4IE == 1 && PIR3bit
      +                          s.TMR4IF == 1)
  6388     0047  0021               	movlb	1	; select bank1
  6389     0048  1C93               	btfss	19,1	;volatile
  6390     0049  284B               	goto	u208_21
  6391     004A  284C               	goto	u208_20
  6392     004B                     u208_21:
  6393     004B  2854               	goto	i1l492
  6394     004C                     u208_20:
  6395     004C                     i1l3374:
  6396     004C  0020               	movlb	0	; select bank0
  6397     004D  1C93               	btfss	19,1	;volatile
  6398     004E  2850               	goto	u209_21
  6399     004F  2851               	goto	u209_20
  6400     0050                     u209_21:
  6401     0050  2854               	goto	i1l492
  6402     0051                     u209_20:
  6403     0051                     i1l3376:
  6404                           
  6405                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR4_ISR();
  6406     0051  318F  2756  3180   	fcall	_TMR4_ISR
  6407     0054                     i1l492:
  6408     0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6409     0055  0009               	retfie
  6410     0056                     __end_of_INTERRUPT_InterruptManager:
  6411                           
  6412                           	psect	text33
  6413     0F56                     __ptext33:	
  6414 ;; *************** function _TMR4_ISR *****************
  6415 ;; Defined at:
  6416 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;		None
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2, status,0, pclath, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6430 ;;      Params:         0       0       0       0       0       0
  6431 ;;      Locals:         0       0       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0
  6433 ;;      Totals:         0       0       0       0       0       0
  6434 ;;Total ram usage:        0 bytes
  6435 ;; Hardware stack levels used: 1
  6436 ;; Hardware stack levels required when called: 2
  6437 ;; This function calls:
  6438 ;;		_TMR4_CallBack
  6439 ;; This function is called by:
  6440 ;;		_INTERRUPT_InterruptManager
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444     0F56                     _TMR4_ISR:	
  6445                           ;psect for function _TMR4_ISR
  6446                           
  6447     0F56                     i1l3266:	
  6448                           ;incstack = 0
  6449                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
  6450                           
  6451                           
  6452                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  6453     0F56  0020               	movlb	0	; select bank0
  6454     0F57  1093               	bcf	19,1	;volatile
  6455     0F58                     i1l3268:
  6456                           
  6457                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 2)
  6458     0F58  3001               	movlw	1
  6459     0F59  07C9               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  6460     0F5A  3000               	movlw	0
  6461     0F5B  3DCA               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  6462     0F5C  3000               	movlw	0
  6463     0F5D  024A               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  6464     0F5E  3002               	movlw	2
  6465     0F5F  1903               	skipnz
  6466     0F60  0249               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  6467     0F61  1C03               	skipc
  6468     0F62  2F64               	goto	u190_21
  6469     0F63  2F65               	goto	u190_20
  6470     0F64                     u190_21:
  6471     0F64  2F6B               	goto	i1l850
  6472     0F65                     u190_20:
  6473     0F65                     i1l3270:
  6474                           
  6475                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  6476     0F65  318E  2680  318F   	fcall	_TMR4_CallBack
  6477     0F68                     i1l3272:
  6478                           
  6479                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  6480     0F68  0020               	movlb	0	; select bank0
  6481     0F69  01C9               	clrf	TMR4_ISR@CountCallBack	;volatile
  6482     0F6A  01CA               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  6483     0F6B                     i1l850:
  6484     0F6B  0008               	return
  6485     0F6C                     __end_of_TMR4_ISR:
  6486                           
  6487                           	psect	text34
  6488     0E80                     __ptext34:	
  6489 ;; *************** function _TMR4_CallBack *****************
  6490 ;; Defined at:
  6491 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0, pclath, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6505 ;;      Params:         0       0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0
  6508 ;;      Totals:         0       0       0       0       0       0
  6509 ;;Total ram usage:        0 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 1
  6512 ;; This function calls:
  6513 ;;		NULL
  6514 ;;		_TMR4_DefaultInterruptHandler
  6515 ;; This function is called by:
  6516 ;;		_TMR4_ISR
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520     0E80                     _TMR4_CallBack:	
  6521                           ;psect for function _TMR4_CallBack
  6522                           
  6523     0E80                     i1l3200:	
  6524                           ;incstack = 0
  6525                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6526                           
  6527                           
  6528                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  6529     0E80  0021               	movlb	1	; select bank1
  6530     0E81  0833               	movf	_TMR4_InterruptHandler^(0+128),w
  6531     0E82  0434               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  6532     0E83  1903               	btfsc	3,2
  6533     0E84  2E86               	goto	u183_21
  6534     0E85  2E87               	goto	u183_20
  6535     0E86                     u183_21:
  6536     0E86  2E8C               	goto	i1l854
  6537     0E87                     u183_20:
  6538     0E87                     i1l3202:
  6539                           
  6540                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  6541     0E87  0834               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  6542     0E88  008A               	movwf	10
  6543     0E89  0833               	movf	_TMR4_InterruptHandler^(0+128),w
  6544     0E8A  000A               	callw
  6545     0E8B  318E               	pagesel	$
  6546     0E8C                     i1l854:
  6547     0E8C  0008               	return
  6548     0E8D                     __end_of_TMR4_CallBack:
  6549                           
  6550                           	psect	text35
  6551     0002                     __ptext35:	
  6552 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  6553 ;; Defined at:
  6554 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		None
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6568 ;;      Params:         0       0       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0
  6571 ;;      Totals:         0       0       0       0       0       0
  6572 ;;Total ram usage:        0 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_TMR4_Initialize
  6578 ;;		_TMR4_CallBack
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582     0002                     _TMR4_DefaultInterruptHandler:	
  6583                           ;psect for function _TMR4_DefaultInterruptHandler
  6584                           
  6585     0002                     i1l860:	
  6586                           ;incstack = 0
  6587                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  6588                           
  6589     0002  0008               	return
  6590     0003                     __end_of_TMR4_DefaultInterruptHandler:
  6591                           
  6592                           	psect	text36
  6593     0F6C                     __ptext36:	
  6594 ;; *************** function _TMR0_ISR *****************
  6595 ;; Defined at:
  6596 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;		None
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;		None
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  1    wreg      void 
  6603 ;; Registers used:
  6604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6610 ;;      Params:         0       0       0       0       0       0
  6611 ;;      Locals:         0       0       0       0       0       0
  6612 ;;      Temps:          0       0       0       0       0       0
  6613 ;;      Totals:         0       0       0       0       0       0
  6614 ;;Total ram usage:        0 bytes
  6615 ;; Hardware stack levels used: 1
  6616 ;; Hardware stack levels required when called: 4
  6617 ;; This function calls:
  6618 ;;		_TMR0_CallBack
  6619 ;; This function is called by:
  6620 ;;		_INTERRUPT_InterruptManager
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624     0F6C                     _TMR0_ISR:	
  6625                           ;psect for function _TMR0_ISR
  6626                           
  6627     0F6C                     i1l3252:	
  6628                           ;incstack = 0
  6629                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6630                           
  6631                           
  6632                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  6633     0F6C  110B               	bcf	11,2	;volatile
  6634     0F6D                     i1l3254:
  6635                           
  6636                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  6637     0F6D  0020               	movlb	0	; select bank0
  6638     0F6E  0857               	movf	_timer0ReloadVal,w	;volatile
  6639     0F6F  0095               	movwf	21	;volatile
  6640                           
  6641                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 5)
  6642     0F70  3001               	movlw	1
  6643     0F71  07CB               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  6644     0F72  3000               	movlw	0
  6645     0F73  3DCC               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  6646     0F74  3000               	movlw	0
  6647     0F75  024C               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  6648     0F76  3005               	movlw	5
  6649     0F77  1903               	skipnz
  6650     0F78  024B               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  6651     0F79  1C03               	skipc
  6652     0F7A  2F7C               	goto	u189_21
  6653     0F7B  2F7D               	goto	u189_20
  6654     0F7C                     u189_21:
  6655     0F7C  2F83               	goto	i1l603
  6656     0F7D                     u189_20:
  6657     0F7D                     i1l3256:
  6658                           
  6659                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  6660     0F7D  318E  2673  318F   	fcall	_TMR0_CallBack
  6661     0F80                     i1l3258:
  6662                           
  6663                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  6664     0F80  0020               	movlb	0	; select bank0
  6665     0F81  01CB               	clrf	TMR0_ISR@CountCallBack	;volatile
  6666     0F82  01CC               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  6667     0F83                     i1l603:
  6668     0F83  0008               	return
  6669     0F84                     __end_of_TMR0_ISR:
  6670                           
  6671                           	psect	text37
  6672     0E73                     __ptext37:	
  6673 ;; *************** function _TMR0_CallBack *****************
  6674 ;; Defined at:
  6675 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;		None
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6689 ;;      Params:         0       0       0       0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0
  6692 ;;      Totals:         0       0       0       0       0       0
  6693 ;;Total ram usage:        0 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 3
  6696 ;; This function calls:
  6697 ;;		NULL
  6698 ;;		_TMR0_DefaultInterruptHandler
  6699 ;;		_sendInfo
  6700 ;; This function is called by:
  6701 ;;		_TMR0_ISR
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           
  6705     0E73                     _TMR0_CallBack:	
  6706                           ;psect for function _TMR0_CallBack
  6707                           
  6708     0E73                     i1l3192:	
  6709                           ;incstack = 0
  6710                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6711                           
  6712                           
  6713                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  6714     0E73  0021               	movlb	1	; select bank1
  6715     0E74  0837               	movf	_TMR0_InterruptHandler^(0+128),w
  6716     0E75  0438               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  6717     0E76  1903               	btfsc	3,2
  6718     0E77  2E79               	goto	u182_21
  6719     0E78  2E7A               	goto	u182_20
  6720     0E79                     u182_21:
  6721     0E79  2E7F               	goto	i1l607
  6722     0E7A                     u182_20:
  6723     0E7A                     i1l3194:
  6724                           
  6725                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  6726     0E7A  0838               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  6727     0E7B  008A               	movwf	10
  6728     0E7C  0837               	movf	_TMR0_InterruptHandler^(0+128),w
  6729     0E7D  000A               	callw
  6730     0E7E  318E               	pagesel	$
  6731     0E7F                     i1l607:
  6732     0E7F  0008               	return
  6733     0E80                     __end_of_TMR0_CallBack:
  6734                           
  6735                           	psect	text38
  6736     0DD3                     __ptext38:	
  6737 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6738 ;; Defined at:
  6739 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;		None
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;		None
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		None
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6753 ;;      Params:         0       0       0       0       0       0
  6754 ;;      Locals:         0       0       0       0       0       0
  6755 ;;      Temps:          0       0       0       0       0       0
  6756 ;;      Totals:         0       0       0       0       0       0
  6757 ;;Total ram usage:        0 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_TMR0_Initialize
  6763 ;;		_TMR0_CallBack
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767     0DD3                     _TMR0_DefaultInterruptHandler:	
  6768                           ;psect for function _TMR0_DefaultInterruptHandler
  6769                           
  6770     0DD3                     i1l613:	
  6771                           ;incstack = 0
  6772                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6773                           
  6774     0DD3  0008               	return
  6775     0DD4                     __end_of_TMR0_DefaultInterruptHandler:
  6776                           
  6777                           	psect	text39
  6778     02AB                     __ptext39:	
  6779 ;; *************** function _sendInfo *****************
  6780 ;; Defined at:
  6781 ;;		line 56 in file "main.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;		None
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  bcd             2   35[BANK0 ] struct .
  6786 ;;  velocidade      2   33[BANK0 ] unsigned short 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      void 
  6789 ;; Registers used:
  6790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6796 ;;      Params:         0       0       0       0       0       0
  6797 ;;      Locals:         0       4       0       0       0       0
  6798 ;;      Temps:          0       2       0       0       0       0
  6799 ;;      Totals:         0       6       0       0       0       0
  6800 ;;Total ram usage:        6 bytes
  6801 ;; Hardware stack levels used: 1
  6802 ;; Hardware stack levels required when called: 2
  6803 ;; This function calls:
  6804 ;;		_ADC_GetConversion
  6805 ;;		_EUSART_Write
  6806 ;;		___flmul
  6807 ;;		___fltol
  6808 ;;		___wmul
  6809 ;;		_bin2bcd
  6810 ;; This function is called by:
  6811 ;;		_main
  6812 ;;		_TMR0_CallBack
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816     02AB                     _sendInfo:	
  6817                           ;psect for function _sendInfo
  6818                           
  6819     02AB                     i1l2910:	
  6820                           ;incstack = 0
  6821                           ; Regs used in _sendInfo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6822                           
  6823                           
  6824                           ;main.c: 58:     bcd16_t bcd;;main.c: 59:     uint16_t velocidade;;main.c: 61:     veloc
      +                          idade = (uint16_t)(velocidadeMotor * 10);
  6825     02AB  0020               	movlb	0	; select bank0
  6826     02AC  0848               	movf	_velocidadeMotor+3,w
  6827     02AD  00A7               	movwf	___flmul@a+3
  6828     02AE  0847               	movf	_velocidadeMotor+2,w
  6829     02AF  00A6               	movwf	___flmul@a+2
  6830     02B0  0846               	movf	_velocidadeMotor+1,w
  6831     02B1  00A5               	movwf	___flmul@a+1
  6832     02B2  0845               	movf	_velocidadeMotor,w
  6833     02B3  00A4               	movwf	___flmul@a
  6834     02B4  3041               	movlw	65
  6835     02B5  00A3               	movwf	___flmul@b+3
  6836     02B6  3020               	movlw	32
  6837     02B7  00A2               	movwf	___flmul@b+2
  6838     02B8  3000               	movlw	0
  6839     02B9  00A1               	movwf	___flmul@b+1
  6840     02BA  3000               	movlw	0
  6841     02BB  00A0               	movwf	___flmul@b
  6842     02BC  3180  2070  3182   	fcall	___flmul
  6843     02BF  0020               	movlb	0	; select bank0
  6844     02C0  0823               	movf	?___flmul+3,w
  6845     02C1  00B8               	movwf	___fltol@f1+3
  6846     02C2  0822               	movf	?___flmul+2,w
  6847     02C3  00B7               	movwf	___fltol@f1+2
  6848     02C4  0821               	movf	?___flmul+1,w
  6849     02C5  00B6               	movwf	___fltol@f1+1
  6850     02C6  0820               	movf	?___flmul,w
  6851     02C7  00B5               	movwf	___fltol@f1
  6852     02C8  3185  2545  3182   	fcall	___fltol
  6853     02CB  0020               	movlb	0	; select bank0
  6854     02CC  0836               	movf	?___fltol+1,w
  6855     02CD  00C2               	movwf	sendInfo@velocidade+1
  6856     02CE  0835               	movf	?___fltol,w
  6857     02CF  00C1               	movwf	sendInfo@velocidade
  6858                           
  6859                           ;main.c: 62:     temperatura = (ADC_GetConversion(2) / 1024) * 999;
  6860     02D0  3002               	movlw	2
  6861     02D1  318F  279E  3182   	fcall	_ADC_GetConversion
  6862     02D4  0870               	movf	?_ADC_GetConversion,w
  6863     02D5  0020               	movlb	0	; select bank0
  6864     02D6  00BF               	movwf	??_sendInfo
  6865     02D7  0871               	movf	?_ADC_GetConversion+1,w
  6866     02D8  00C0               	movwf	??_sendInfo+1
  6867     02D9  300A               	movlw	10
  6868     02DA                     u175_25:
  6869     02DA  36C0               	lsrf	??_sendInfo+1,f
  6870     02DB  0CBF               	rrf	??_sendInfo,f
  6871     02DC  0B89               	decfsz	9,f
  6872     02DD  2ADA               	goto	u175_25
  6873     02DE  083F               	movf	??_sendInfo,w
  6874     02DF  00F4               	movwf	___wmul@multiplier
  6875     02E0  0840               	movf	??_sendInfo+1,w
  6876     02E1  00F5               	movwf	___wmul@multiplier+1
  6877     02E2  30E7               	movlw	231
  6878     02E3  00F6               	movwf	___wmul@multiplicand
  6879     02E4  3003               	movlw	3
  6880     02E5  00F7               	movwf	___wmul@multiplicand+1
  6881     02E6  3187  27E0  3182   	fcall	___wmul
  6882     02E9  0875               	movf	?___wmul+1,w
  6883     02EA  0020               	movlb	0	; select bank0
  6884     02EB  00D2               	movwf	_temperatura+1
  6885     02EC  0874               	movf	?___wmul,w
  6886     02ED  00D1               	movwf	_temperatura
  6887                           
  6888                           ;main.c: 64:     EUSART_Write('$');
  6889     02EE  3024               	movlw	36
  6890     02EF  318E  2646  3182   	fcall	_EUSART_Write
  6891                           
  6892                           ;main.c: 65:     EUSART_Write(0x30 + origem);
  6893     02F2  0020               	movlb	0	; select bank0
  6894     02F3  0860               	movf	_origem,w
  6895     02F4  3E30               	addlw	48
  6896     02F5  318E  2646  3182   	fcall	_EUSART_Write
  6897                           
  6898                           ;main.c: 66:     EUSART_Write(0x2C);
  6899     02F8  302C               	movlw	44
  6900     02F9  318E  2646  3182   	fcall	_EUSART_Write
  6901                           
  6902                           ;main.c: 67:     EUSART_Write(0x30 + destino);
  6903     02FC  0020               	movlb	0	; select bank0
  6904     02FD  085E               	movf	_destino,w
  6905     02FE  3E30               	addlw	48
  6906     02FF  318E  2646  3182   	fcall	_EUSART_Write
  6907                           
  6908                           ;main.c: 68:     EUSART_Write(0x2C);
  6909     0302  302C               	movlw	44
  6910     0303  318E  2646  3182   	fcall	_EUSART_Write
  6911                           
  6912                           ;main.c: 69:     EUSART_Write(0x30 + andarAtual);
  6913     0306  0020               	movlb	0	; select bank0
  6914     0307  085C               	movf	_andarAtual,w
  6915     0308  3E30               	addlw	48
  6916     0309  318E  2646  3182   	fcall	_EUSART_Write
  6917                           
  6918                           ;main.c: 70:     EUSART_Write(0x2C);
  6919     030C  302C               	movlw	44
  6920     030D  318E  2646  3182   	fcall	_EUSART_Write
  6921                           
  6922                           ;main.c: 71:     EUSART_Write(0);
  6923     0310  3000               	movlw	0
  6924     0311  318E  2646  3182   	fcall	_EUSART_Write
  6925                           
  6926                           ;main.c: 72:     EUSART_Write(0x2C);
  6927     0314  302C               	movlw	44
  6928     0315  318E  2646  3182   	fcall	_EUSART_Write
  6929     0318                     i1l2912:
  6930                           
  6931                           ;main.c: 74:     bcd.v = bin2bcd(altura);
  6932     0318  0020               	movlb	0	; select bank0
  6933     0319  085B               	movf	_altura,w
  6934     031A  00BF               	movwf	??_sendInfo
  6935     031B  01C0               	clrf	??_sendInfo+1
  6936     031C  083F               	movf	??_sendInfo,w
  6937     031D  00FA               	movwf	bin2bcd@binVal
  6938     031E  0840               	movf	??_sendInfo+1,w
  6939     031F  00FB               	movwf	bin2bcd@binVal+1
  6940     0320  3183  239A  3182   	fcall	_bin2bcd
  6941     0323  087B               	movf	?_bin2bcd+1,w
  6942     0324  0020               	movlb	0	; select bank0
  6943     0325  00C4               	movwf	sendInfo@bcd+1
  6944     0326  087A               	movf	?_bin2bcd,w
  6945     0327  00C3               	movwf	sendInfo@bcd
  6946     0328                     i1l2914:
  6947                           
  6948                           ;main.c: 75:     EUSART_Write(bcd.num2 + 0x30);
  6949     0328  0844               	movf	sendInfo@bcd+1,w
  6950     0329  390F               	andlw	15
  6951     032A  3E30               	addlw	48
  6952     032B  318E  2646  3182   	fcall	_EUSART_Write
  6953     032E                     i1l2916:
  6954                           
  6955                           ;main.c: 76:     EUSART_Write(bcd.num3 + 0x30);
  6956     032E  0020               	movlb	0	; select bank0
  6957     032F  0E43               	swapf	sendInfo@bcd,w
  6958     0330  390F               	andlw	15
  6959     0331  3E30               	addlw	48
  6960     0332  318E  2646  3182   	fcall	_EUSART_Write
  6961     0335                     i1l2918:
  6962                           
  6963                           ;main.c: 77:     EUSART_Write(bcd.num4 + 0x30);
  6964     0335  0020               	movlb	0	; select bank0
  6965     0336  0843               	movf	sendInfo@bcd,w
  6966     0337  390F               	andlw	15
  6967     0338  3E30               	addlw	48
  6968     0339  318E  2646  3182   	fcall	_EUSART_Write
  6969     033C                     i1l2920:
  6970                           
  6971                           ;main.c: 78:     EUSART_Write(0x2C);
  6972     033C  302C               	movlw	44
  6973     033D  318E  2646  3182   	fcall	_EUSART_Write
  6974     0340                     i1l2922:
  6975                           
  6976                           ;main.c: 80:     bcd.v = bin2bcd(velocidade);
  6977     0340  0020               	movlb	0	; select bank0
  6978     0341  0842               	movf	sendInfo@velocidade+1,w
  6979     0342  00FB               	movwf	bin2bcd@binVal+1
  6980     0343  0841               	movf	sendInfo@velocidade,w
  6981     0344  00FA               	movwf	bin2bcd@binVal
  6982     0345  3183  239A  3182   	fcall	_bin2bcd
  6983     0348  087B               	movf	?_bin2bcd+1,w
  6984     0349  0020               	movlb	0	; select bank0
  6985     034A  00C4               	movwf	sendInfo@bcd+1
  6986     034B  087A               	movf	?_bin2bcd,w
  6987     034C  00C3               	movwf	sendInfo@bcd
  6988                           
  6989                           ;main.c: 81:     EUSART_Write(bcd.num2 + 0x30);
  6990     034D  0844               	movf	sendInfo@bcd+1,w
  6991     034E  390F               	andlw	15
  6992     034F  3E30               	addlw	48
  6993     0350  318E  2646  3182   	fcall	_EUSART_Write
  6994                           
  6995                           ;main.c: 82:     EUSART_Write(bcd.num3 + 0x30);
  6996     0353  0020               	movlb	0	; select bank0
  6997     0354  0E43               	swapf	sendInfo@bcd,w
  6998     0355  390F               	andlw	15
  6999     0356  3E30               	addlw	48
  7000     0357  318E  2646  3182   	fcall	_EUSART_Write
  7001                           
  7002                           ;main.c: 83:     EUSART_Write(0x2E);
  7003     035A  302E               	movlw	46
  7004     035B  318E  2646  3182   	fcall	_EUSART_Write
  7005                           
  7006                           ;main.c: 84:     EUSART_Write(bcd.num4 + 0x30);
  7007     035E  0020               	movlb	0	; select bank0
  7008     035F  0843               	movf	sendInfo@bcd,w
  7009     0360  390F               	andlw	15
  7010     0361  3E30               	addlw	48
  7011     0362  318E  2646  3182   	fcall	_EUSART_Write
  7012                           
  7013                           ;main.c: 85:     EUSART_Write(0x2C);
  7014     0365  302C               	movlw	44
  7015     0366  318E  2646  3182   	fcall	_EUSART_Write
  7016     0369                     i1l2924:
  7017                           
  7018                           ;main.c: 87:     bcd.v = bin2bcd(temperatura);
  7019     0369  0020               	movlb	0	; select bank0
  7020     036A  0852               	movf	_temperatura+1,w
  7021     036B  00FB               	movwf	bin2bcd@binVal+1
  7022     036C  0851               	movf	_temperatura,w
  7023     036D  00FA               	movwf	bin2bcd@binVal
  7024     036E  3183  239A  3182   	fcall	_bin2bcd
  7025     0371  087B               	movf	?_bin2bcd+1,w
  7026     0372  0020               	movlb	0	; select bank0
  7027     0373  00C4               	movwf	sendInfo@bcd+1
  7028     0374  087A               	movf	?_bin2bcd,w
  7029     0375  00C3               	movwf	sendInfo@bcd
  7030     0376                     i1l2926:
  7031                           
  7032                           ;main.c: 88:     EUSART_Write(bcd.num1 + 0x30);
  7033     0376  0E44               	swapf	sendInfo@bcd+1,w
  7034     0377  390F               	andlw	15
  7035     0378  3E30               	addlw	48
  7036     0379  318E  2646  3182   	fcall	_EUSART_Write
  7037     037C                     i1l2928:
  7038                           
  7039                           ;main.c: 89:     EUSART_Write(bcd.num2 + 0x30);
  7040     037C  0020               	movlb	0	; select bank0
  7041     037D  0844               	movf	sendInfo@bcd+1,w
  7042     037E  390F               	andlw	15
  7043     037F  3E30               	addlw	48
  7044     0380  318E  2646  3182   	fcall	_EUSART_Write
  7045     0383                     i1l2930:
  7046                           
  7047                           ;main.c: 90:     EUSART_Write(bcd.num3 + 0x30);
  7048     0383  0020               	movlb	0	; select bank0
  7049     0384  0E43               	swapf	sendInfo@bcd,w
  7050     0385  390F               	andlw	15
  7051     0386  3E30               	addlw	48
  7052     0387  318E  2646  3182   	fcall	_EUSART_Write
  7053     038A                     i1l2932:
  7054                           
  7055                           ;main.c: 91:     EUSART_Write(0x2E);
  7056     038A  302E               	movlw	46
  7057     038B  318E  2646  3182   	fcall	_EUSART_Write
  7058     038E                     i1l2934:
  7059                           
  7060                           ;main.c: 92:     EUSART_Write(bcd.num4 + 0x30);
  7061     038E  0020               	movlb	0	; select bank0
  7062     038F  0843               	movf	sendInfo@bcd,w
  7063     0390  390F               	andlw	15
  7064     0391  3E30               	addlw	48
  7065     0392  318E  2646  3182   	fcall	_EUSART_Write
  7066     0395                     i1l2936:
  7067                           
  7068                           ;main.c: 93:     EUSART_Write(0x0D);
  7069     0395  300D               	movlw	13
  7070     0396  318E  2646  3182   	fcall	_EUSART_Write
  7071     0399                     i1l691:
  7072     0399  0008               	return
  7073     039A                     __end_of_sendInfo:
  7074                           
  7075                           	psect	text40
  7076     039A                     __ptext40:	
  7077 ;; *************** function _bin2bcd *****************
  7078 ;; Defined at:
  7079 ;;		line 10 in file "bin2bcd.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  binVal          2   10[COMMON] unsigned short 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;  i               1    4[BANK0 ] unsigned char 
  7084 ;;  dataU           4    5[BANK0 ] struct .
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  2   10[COMMON] unsigned short 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7094 ;;      Params:         2       0       0       0       0       0
  7095 ;;      Locals:         0       5       0       0       0       0
  7096 ;;      Temps:          0       4       0       0       0       0
  7097 ;;      Totals:         2       9       0       0       0       0
  7098 ;;Total ram usage:       11 bytes
  7099 ;; Hardware stack levels used: 1
  7100 ;; Hardware stack levels required when called: 1
  7101 ;; This function calls:
  7102 ;;		_memset
  7103 ;; This function is called by:
  7104 ;;		_sendInfo
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108     039A                     _bin2bcd:	
  7109                           ;psect for function _bin2bcd
  7110                           
  7111     039A                     i1l2638:	
  7112                           ;incstack = 0
  7113                           ; Regs used in _bin2bcd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7114                           
  7115                           
  7116                           ;bin2bcd.c: 22:     }dataU;;bin2bcd.c: 23:     memset(&dataU,0,4);
  7117     039A  3000               	movlw	0
  7118     039B  00F0               	movwf	memset@c
  7119     039C  00F1               	movwf	memset@c+1
  7120     039D  3004               	movlw	4
  7121     039E  00F2               	movwf	memset@n
  7122     039F  3000               	movlw	0
  7123     03A0  00F3               	movwf	memset@n+1
  7124     03A1  3025               	movlw	(low (bin2bcd@dataU| 0))& (0+255)
  7125     03A2  3184  242C  3183   	fcall	_memset
  7126     03A5                     i1l2640:
  7127                           
  7128                           ;bin2bcd.c: 24:     dataU.shift = (uint32_t)binVal;
  7129     03A5  087A               	movf	bin2bcd@binVal,w
  7130     03A6  0020               	movlb	0	; select bank0
  7131     03A7  00A5               	movwf	bin2bcd@dataU
  7132     03A8  087B               	movf	bin2bcd@binVal+1,w
  7133     03A9  00A6               	movwf	bin2bcd@dataU+1
  7134     03AA  01A7               	clrf	bin2bcd@dataU+2
  7135     03AB  01A8               	clrf	bin2bcd@dataU+3
  7136     03AC                     i1l2642:
  7137                           
  7138                           ;bin2bcd.c: 25:     for(uint8_t i=0;i<12;i++){
  7139     03AC  01A4               	clrf	bin2bcd@i
  7140     03AD                     i1l2648:
  7141                           
  7142                           ;bin2bcd.c: 26:    if(dataU.dat.d0>=5){
  7143     03AD  0828               	movf	bin2bcd@dataU+3,w
  7144     03AE  390F               	andlw	15
  7145     03AF  00A0               	movwf	??_bin2bcd
  7146     03B0  3005               	movlw	5
  7147     03B1  0220               	subwf	??_bin2bcd,w
  7148     03B2  1C03               	skipc
  7149     03B3  2BB5               	goto	u125_21
  7150     03B4  2BB6               	goto	u125_20
  7151     03B5                     u125_21:
  7152     03B5  2BBF               	goto	i1l776
  7153     03B6                     u125_20:
  7154     03B6                     i1l2650:
  7155                           
  7156                           ;bin2bcd.c: 27:     dataU.dat.d0 = dataU.dat.d0 + 3;
  7157     03B6  0828               	movf	bin2bcd@dataU+3,w
  7158     03B7  390F               	andlw	15
  7159     03B8  3E03               	addlw	3
  7160     03B9  00A0               	movwf	??_bin2bcd
  7161     03BA  0828               	movf	bin2bcd@dataU+3,w
  7162     03BB  0620               	xorwf	??_bin2bcd,w
  7163     03BC  39F0               	andlw	-16
  7164     03BD  0620               	xorwf	??_bin2bcd,w
  7165     03BE  00A8               	movwf	bin2bcd@dataU+3
  7166     03BF                     i1l776:	
  7167                           ;bin2bcd.c: 28:    }
  7168                           
  7169                           
  7170                           ;bin2bcd.c: 29:    if(dataU.dat.d1>=5){
  7171     03BF  0E27               	swapf	bin2bcd@dataU+2,w
  7172     03C0  390F               	andlw	15
  7173     03C1  00A0               	movwf	??_bin2bcd
  7174     03C2  3005               	movlw	5
  7175     03C3  0220               	subwf	??_bin2bcd,w
  7176     03C4  1C03               	skipc
  7177     03C5  2BC7               	goto	u126_21
  7178     03C6  2BC8               	goto	u126_20
  7179     03C7                     u126_21:
  7180     03C7  2BD2               	goto	i1l777
  7181     03C8                     u126_20:
  7182     03C8                     i1l2652:
  7183                           
  7184                           ;bin2bcd.c: 30:     dataU.dat.d1 = dataU.dat.d1 + 3;
  7185     03C8  0E27               	swapf	bin2bcd@dataU+2,w
  7186     03C9  390F               	andlw	15
  7187     03CA  3E03               	addlw	3
  7188     03CB  00A0               	movwf	??_bin2bcd
  7189     03CC  0EA0               	swapf	??_bin2bcd,f
  7190     03CD  0827               	movf	bin2bcd@dataU+2,w
  7191     03CE  0620               	xorwf	??_bin2bcd,w
  7192     03CF  390F               	andlw	-241
  7193     03D0  0620               	xorwf	??_bin2bcd,w
  7194     03D1  00A7               	movwf	bin2bcd@dataU+2
  7195     03D2                     i1l777:	
  7196                           ;bin2bcd.c: 31:    }
  7197                           
  7198                           
  7199                           ;bin2bcd.c: 32:             if(dataU.dat.d2>=5){
  7200     03D2  0827               	movf	bin2bcd@dataU+2,w
  7201     03D3  390F               	andlw	15
  7202     03D4  00A0               	movwf	??_bin2bcd
  7203     03D5  3005               	movlw	5
  7204     03D6  0220               	subwf	??_bin2bcd,w
  7205     03D7  1C03               	skipc
  7206     03D8  2BDA               	goto	u127_21
  7207     03D9  2BDB               	goto	u127_20
  7208     03DA                     u127_21:
  7209     03DA  2BE4               	goto	i1l778
  7210     03DB                     u127_20:
  7211     03DB                     i1l2654:
  7212                           
  7213                           ;bin2bcd.c: 33:     dataU.dat.d2 = dataU.dat.d2 + 3;
  7214     03DB  0827               	movf	bin2bcd@dataU+2,w
  7215     03DC  390F               	andlw	15
  7216     03DD  3E03               	addlw	3
  7217     03DE  00A0               	movwf	??_bin2bcd
  7218     03DF  0827               	movf	bin2bcd@dataU+2,w
  7219     03E0  0620               	xorwf	??_bin2bcd,w
  7220     03E1  39F0               	andlw	-16
  7221     03E2  0620               	xorwf	??_bin2bcd,w
  7222     03E3  00A7               	movwf	bin2bcd@dataU+2
  7223     03E4                     i1l778:	
  7224                           ;bin2bcd.c: 34:    }
  7225                           
  7226                           
  7227                           ;bin2bcd.c: 35:             if(dataU.dat.d3>=5){
  7228     03E4  0E26               	swapf	bin2bcd@dataU+1,w
  7229     03E5  390F               	andlw	15
  7230     03E6  00A0               	movwf	??_bin2bcd
  7231     03E7  3005               	movlw	5
  7232     03E8  0220               	subwf	??_bin2bcd,w
  7233     03E9  1C03               	skipc
  7234     03EA  2BEC               	goto	u128_21
  7235     03EB  2BED               	goto	u128_20
  7236     03EC                     u128_21:
  7237     03EC  2BF7               	goto	i1l779
  7238     03ED                     u128_20:
  7239     03ED                     i1l2656:
  7240                           
  7241                           ;bin2bcd.c: 36:     dataU.dat.d3 = dataU.dat.d3 + 3;
  7242     03ED  0E26               	swapf	bin2bcd@dataU+1,w
  7243     03EE  390F               	andlw	15
  7244     03EF  3E03               	addlw	3
  7245     03F0  00A0               	movwf	??_bin2bcd
  7246     03F1  0EA0               	swapf	??_bin2bcd,f
  7247     03F2  0826               	movf	bin2bcd@dataU+1,w
  7248     03F3  0620               	xorwf	??_bin2bcd,w
  7249     03F4  390F               	andlw	-241
  7250     03F5  0620               	xorwf	??_bin2bcd,w
  7251     03F6  00A6               	movwf	bin2bcd@dataU+1
  7252     03F7                     i1l779:	
  7253                           ;bin2bcd.c: 37:    }
  7254                           
  7255                           
  7256                           ;bin2bcd.c: 38:    dataU.shift = dataU.shift<<1;
  7257     03F7  0825               	movf	bin2bcd@dataU,w
  7258     03F8  00A0               	movwf	??_bin2bcd
  7259     03F9  0826               	movf	bin2bcd@dataU+1,w
  7260     03FA  00A1               	movwf	??_bin2bcd+1
  7261     03FB  0827               	movf	bin2bcd@dataU+2,w
  7262     03FC  00A2               	movwf	??_bin2bcd+2
  7263     03FD  0828               	movf	bin2bcd@dataU+3,w
  7264     03FE  00A3               	movwf	??_bin2bcd+3
  7265     03FF  3001               	movlw	1
  7266     0400                     u129_25:
  7267     0400  35A0               	lslf	??_bin2bcd,f
  7268     0401  0DA1               	rlf	??_bin2bcd+1,f
  7269     0402  0DA2               	rlf	??_bin2bcd+2,f
  7270     0403  0DA3               	rlf	??_bin2bcd+3,f
  7271     0404                     u129_20:
  7272     0404  0B89               	decfsz	9,f
  7273     0405  2C00               	goto	u129_25
  7274     0406  0823               	movf	??_bin2bcd+3,w
  7275     0407  00A8               	movwf	bin2bcd@dataU+3
  7276     0408  0822               	movf	??_bin2bcd+2,w
  7277     0409  00A7               	movwf	bin2bcd@dataU+2
  7278     040A  0821               	movf	??_bin2bcd+1,w
  7279     040B  00A6               	movwf	bin2bcd@dataU+1
  7280     040C  0820               	movf	??_bin2bcd,w
  7281     040D  00A5               	movwf	bin2bcd@dataU
  7282                           
  7283                           ;bin2bcd.c: 39:     }
  7284     040E  3001               	movlw	1
  7285     040F  00A0               	movwf	??_bin2bcd
  7286     0410  0820               	movf	??_bin2bcd,w
  7287     0411  07A4               	addwf	bin2bcd@i,f
  7288     0412                     i1l2658:
  7289     0412  300C               	movlw	12
  7290     0413  0224               	subwf	bin2bcd@i,w
  7291     0414  1C03               	skipc
  7292     0415  2C17               	goto	u130_21
  7293     0416  2C18               	goto	u130_20
  7294     0417                     u130_21:
  7295     0417  2BAD               	goto	i1l2648
  7296     0418                     u130_20:
  7297     0418                     i1l2660:
  7298                           
  7299                           ;bin2bcd.c: 40:     return (uint16_t)(dataU.shift>>12);
  7300     0418  0825               	movf	bin2bcd@dataU,w
  7301     0419  00A0               	movwf	??_bin2bcd
  7302     041A  0826               	movf	bin2bcd@dataU+1,w
  7303     041B  00A1               	movwf	??_bin2bcd+1
  7304     041C  0827               	movf	bin2bcd@dataU+2,w
  7305     041D  00A2               	movwf	??_bin2bcd+2
  7306     041E  0828               	movf	bin2bcd@dataU+3,w
  7307     041F  00A3               	movwf	??_bin2bcd+3
  7308     0420  300C               	movlw	12
  7309     0421                     u131_25:
  7310     0421  36A3               	lsrf	??_bin2bcd+3,f
  7311     0422  0CA2               	rrf	??_bin2bcd+2,f
  7312     0423  0CA1               	rrf	??_bin2bcd+1,f
  7313     0424  0CA0               	rrf	??_bin2bcd,f
  7314     0425                     u131_20:
  7315     0425  0B89               	decfsz	9,f
  7316     0426  2C21               	goto	u131_25
  7317     0427  0821               	movf	??_bin2bcd+1,w
  7318     0428  00FB               	movwf	?_bin2bcd+1
  7319     0429  0820               	movf	??_bin2bcd,w
  7320     042A  00FA               	movwf	?_bin2bcd
  7321     042B                     i1l780:
  7322     042B  0008               	return
  7323     042C                     __end_of_bin2bcd:
  7324                           
  7325                           	psect	text41
  7326     042C                     __ptext41:	
  7327 ;; *************** function _memset *****************
  7328 ;; Defined at:
  7329 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  dest            1    wreg     PTR void 
  7332 ;;		 -> bin2bcd@dataU(4), 
  7333 ;;  c               2    0[COMMON] int 
  7334 ;;  n               2    2[COMMON] unsigned int 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  dest            1    8[COMMON] PTR void 
  7337 ;;		 -> bin2bcd@dataU(4), 
  7338 ;;  k               2    6[COMMON] unsigned int 
  7339 ;;  s               1    9[COMMON] PTR unsigned char 
  7340 ;;		 -> bin2bcd@dataU(4), 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      PTR void 
  7343 ;; Registers used:
  7344 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7350 ;;      Params:         4       0       0       0       0       0
  7351 ;;      Locals:         4       0       0       0       0       0
  7352 ;;      Temps:          2       0       0       0       0       0
  7353 ;;      Totals:        10       0       0       0       0       0
  7354 ;;Total ram usage:       10 bytes
  7355 ;; Hardware stack levels used: 1
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_bin2bcd
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363     042C                     _memset:	
  7364                           ;psect for function _memset
  7365                           
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7369                           ;memset@dest stored from wreg
  7370     042C  00F8               	movwf	memset@dest
  7371     042D                     i1l2558:
  7372     042D  0878               	movf	memset@dest,w
  7373     042E  00F9               	movwf	memset@s
  7374     042F                     i1l2560:
  7375     042F  0872               	movf	memset@n,w
  7376     0430  0473               	iorwf	memset@n+1,w
  7377     0431  1D03               	btfss	3,2
  7378     0432  2C34               	goto	u115_21
  7379     0433  2C35               	goto	u115_20
  7380     0434                     u115_21:
  7381     0434  2C36               	goto	i1l2564
  7382     0435                     u115_20:
  7383     0435  2CBB               	goto	i1l1470
  7384     0436                     i1l2564:
  7385     0436  0879               	movf	memset@s,w
  7386     0437  0086               	movwf	6
  7387     0438  0187               	clrf	7
  7388     0439  0870               	movf	memset@c,w
  7389     043A  0081               	movwf	1
  7390     043B                     i1l2566:
  7391     043B  0872               	movf	memset@n,w
  7392     043C  0779               	addwf	memset@s,w
  7393     043D  00F4               	movwf	??_memset
  7394     043E  0874               	movf	??_memset,w
  7395     043F  3EFF               	addlw	255
  7396     0440  0086               	movwf	6
  7397     0441  0187               	clrf	7
  7398     0442  0870               	movf	memset@c,w
  7399     0443  0081               	movwf	1
  7400     0444                     i1l2568:
  7401     0444  3000               	movlw	0
  7402     0445  0273               	subwf	memset@n+1,w
  7403     0446  3003               	movlw	3
  7404     0447  1903               	skipnz
  7405     0448  0272               	subwf	memset@n,w
  7406     0449  1803               	skipnc
  7407     044A  2C4C               	goto	u116_21
  7408     044B  2C4D               	goto	u116_20
  7409     044C                     u116_21:
  7410     044C  2C4E               	goto	i1l2572
  7411     044D                     u116_20:
  7412     044D  2CBB               	goto	i1l1470
  7413     044E                     i1l2572:
  7414     044E  0A79               	incf	memset@s,w
  7415     044F  0086               	movwf	6
  7416     0450  0187               	clrf	7
  7417     0451  0870               	movf	memset@c,w
  7418     0452  0081               	movwf	1
  7419     0453                     i1l2574:
  7420     0453  0879               	movf	memset@s,w
  7421     0454  3E02               	addlw	2
  7422     0455  0086               	movwf	6
  7423     0456  0187               	clrf	7
  7424     0457  0870               	movf	memset@c,w
  7425     0458  0081               	movwf	1
  7426     0459                     i1l2576:
  7427     0459  0872               	movf	memset@n,w
  7428     045A  0779               	addwf	memset@s,w
  7429     045B  00F4               	movwf	??_memset
  7430     045C  0874               	movf	??_memset,w
  7431     045D  3EFE               	addlw	254
  7432     045E  0086               	movwf	6
  7433     045F  0187               	clrf	7
  7434     0460  0870               	movf	memset@c,w
  7435     0461  0081               	movwf	1
  7436     0462                     i1l2578:
  7437     0462  0872               	movf	memset@n,w
  7438     0463  0779               	addwf	memset@s,w
  7439     0464  00F4               	movwf	??_memset
  7440     0465  0874               	movf	??_memset,w
  7441     0466  3EFD               	addlw	253
  7442     0467  0086               	movwf	6
  7443     0468  0187               	clrf	7
  7444     0469  0870               	movf	memset@c,w
  7445     046A  0081               	movwf	1
  7446     046B                     i1l2580:
  7447     046B  3000               	movlw	0
  7448     046C  0273               	subwf	memset@n+1,w
  7449     046D  3007               	movlw	7
  7450     046E  1903               	skipnz
  7451     046F  0272               	subwf	memset@n,w
  7452     0470  1803               	skipnc
  7453     0471  2C73               	goto	u117_21
  7454     0472  2C74               	goto	u117_20
  7455     0473                     u117_21:
  7456     0473  2C75               	goto	i1l2584
  7457     0474                     u117_20:
  7458     0474  2CBB               	goto	i1l1470
  7459     0475                     i1l2584:
  7460     0475  0879               	movf	memset@s,w
  7461     0476  3E03               	addlw	3
  7462     0477  0086               	movwf	6
  7463     0478  0187               	clrf	7
  7464     0479  0870               	movf	memset@c,w
  7465     047A  0081               	movwf	1
  7466     047B  0872               	movf	memset@n,w
  7467     047C  0779               	addwf	memset@s,w
  7468     047D  00F4               	movwf	??_memset
  7469     047E  0874               	movf	??_memset,w
  7470     047F  3EFC               	addlw	252
  7471     0480  0086               	movwf	6
  7472     0481  0187               	clrf	7
  7473     0482  0870               	movf	memset@c,w
  7474     0483  0081               	movwf	1
  7475     0484                     i1l2586:
  7476     0484  3000               	movlw	0
  7477     0485  0273               	subwf	memset@n+1,w
  7478     0486  3009               	movlw	9
  7479     0487  1903               	skipnz
  7480     0488  0272               	subwf	memset@n,w
  7481     0489  1803               	skipnc
  7482     048A  2C8C               	goto	u118_21
  7483     048B  2C8D               	goto	u118_20
  7484     048C                     u118_21:
  7485     048C  2C8E               	goto	i1l2590
  7486     048D                     u118_20:
  7487     048D  2CBB               	goto	i1l1470
  7488     048E                     i1l2590:
  7489     048E  0979               	comf	memset@s,w
  7490     048F  00F4               	movwf	??_memset
  7491     0490  097A               	comf	memset@s+1,w
  7492     0491  00F5               	movwf	??_memset+1
  7493     0492  0AF4               	incf	??_memset,f
  7494     0493  1903               	skipnz
  7495     0494  0AF5               	incf	??_memset+1,f
  7496     0495  3003               	movlw	3
  7497     0496  0574               	andwf	??_memset,w
  7498     0497  00F6               	movwf	memset@k
  7499     0498  3000               	movlw	0
  7500     0499  0575               	andwf	??_memset+1,w
  7501     049A  00F7               	movwf	memset@k+1
  7502     049B  0876               	movf	memset@k,w
  7503     049C  00F4               	movwf	??_memset
  7504     049D  0874               	movf	??_memset,w
  7505     049E  07F9               	addwf	memset@s,f
  7506     049F                     i1l2592:
  7507     049F  0876               	movf	memset@k,w
  7508     04A0  02F2               	subwf	memset@n,f
  7509     04A1  0877               	movf	memset@k+1,w
  7510     04A2  3BF3               	subwfb	memset@n+1,f
  7511     04A3                     i1l2594:
  7512     04A3  30FC               	movlw	252
  7513     04A4  05F2               	andwf	memset@n,f
  7514     04A5  30FF               	movlw	255
  7515     04A6  05F3               	andwf	memset@n+1,f
  7516     04A7  2CB5               	goto	i1l2602
  7517     04A8                     i1l2596:
  7518     04A8  0879               	movf	memset@s,w
  7519     04A9  0086               	movwf	6
  7520     04AA  0187               	clrf	7
  7521     04AB  0870               	movf	memset@c,w
  7522     04AC  0081               	movwf	1
  7523     04AD                     i1l2598:
  7524     04AD  3001               	movlw	1
  7525     04AE  02F2               	subwf	memset@n,f
  7526     04AF  3000               	movlw	0
  7527     04B0  3BF3               	subwfb	memset@n+1,f
  7528     04B1                     i1l2600:
  7529     04B1  3001               	movlw	1
  7530     04B2  00F4               	movwf	??_memset
  7531     04B3  0874               	movf	??_memset,w
  7532     04B4  07F9               	addwf	memset@s,f
  7533     04B5                     i1l2602:
  7534     04B5  0872               	movf	memset@n,w
  7535     04B6  0473               	iorwf	memset@n+1,w
  7536     04B7  1D03               	btfss	3,2
  7537     04B8  2CBA               	goto	u119_21
  7538     04B9  2CBB               	goto	u119_20
  7539     04BA                     u119_21:
  7540     04BA  2CA8               	goto	i1l2596
  7541     04BB                     u119_20:
  7542     04BB                     i1l1470:
  7543     04BB  0008               	return
  7544     04BC                     __end_of_memset:
  7545                           
  7546                           	psect	text42
  7547     07E0                     __ptext42:	
  7548 ;; *************** function ___wmul *****************
  7549 ;; Defined at:
  7550 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  multiplier      2    4[COMMON] unsigned int 
  7553 ;;  multiplicand    2    6[COMMON] unsigned int 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  product         2    8[COMMON] unsigned int 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  2    4[COMMON] unsigned int 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7565 ;;      Params:         4       0       0       0       0       0
  7566 ;;      Locals:         2       0       0       0       0       0
  7567 ;;      Temps:          0       0       0       0       0       0
  7568 ;;      Totals:         6       0       0       0       0       0
  7569 ;;Total ram usage:        6 bytes
  7570 ;; Hardware stack levels used: 1
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_sendInfo
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578     07E0                     ___wmul:	
  7579                           ;psect for function ___wmul
  7580                           
  7581     07E0                     i1l2698:	
  7582                           ;incstack = 0
  7583                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7584                           
  7585     07E0  01F8               	clrf	___wmul@product
  7586     07E1  01F9               	clrf	___wmul@product+1
  7587     07E2                     i1l2700:
  7588     07E2  1C74               	btfss	___wmul@multiplier,0
  7589     07E3  2FE5               	goto	u133_21
  7590     07E4  2FE6               	goto	u133_20
  7591     07E5                     u133_21:
  7592     07E5  2FEA               	goto	i1l1010
  7593     07E6                     u133_20:
  7594     07E6                     i1l2702:
  7595     07E6  0876               	movf	___wmul@multiplicand,w
  7596     07E7  07F8               	addwf	___wmul@product,f
  7597     07E8  0877               	movf	___wmul@multiplicand+1,w
  7598     07E9  3DF9               	addwfc	___wmul@product+1,f
  7599     07EA                     i1l1010:
  7600     07EA  3001               	movlw	1
  7601     07EB                     u134_25:
  7602     07EB  35F6               	lslf	___wmul@multiplicand,f
  7603     07EC  0DF7               	rlf	___wmul@multiplicand+1,f
  7604     07ED  0B89               	decfsz	9,f
  7605     07EE  2FEB               	goto	u134_25
  7606     07EF                     i1l2704:
  7607     07EF  3001               	movlw	1
  7608     07F0                     u135_25:
  7609     07F0  36F5               	lsrf	___wmul@multiplier+1,f
  7610     07F1  0CF4               	rrf	___wmul@multiplier,f
  7611     07F2  0B89               	decfsz	9,f
  7612     07F3  2FF0               	goto	u135_25
  7613     07F4                     i1l2706:
  7614     07F4  0874               	movf	___wmul@multiplier,w
  7615     07F5  0475               	iorwf	___wmul@multiplier+1,w
  7616     07F6  1D03               	btfss	3,2
  7617     07F7  2FF9               	goto	u136_21
  7618     07F8  2FFA               	goto	u136_20
  7619     07F9                     u136_21:
  7620     07F9  2FE2               	goto	i1l2700
  7621     07FA                     u136_20:
  7622     07FA                     i1l2708:
  7623     07FA  0879               	movf	___wmul@product+1,w
  7624     07FB  00F5               	movwf	?___wmul+1
  7625     07FC  0878               	movf	___wmul@product,w
  7626     07FD  00F4               	movwf	?___wmul
  7627     07FE                     i1l1012:
  7628     07FE  0008               	return
  7629     07FF                     __end_of___wmul:
  7630                           
  7631                           	psect	text43
  7632     0545                     __ptext43:	
  7633 ;; *************** function ___fltol *****************
  7634 ;; Defined at:
  7635 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  f1              4   21[BANK0 ] unsigned int 
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;  exp1            1   30[BANK0 ] unsigned char 
  7640 ;;  sign1           1   29[BANK0 ] unsigned char 
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  4   21[BANK0 ] long 
  7643 ;; Registers used:
  7644 ;;		wreg, status,2, status,0
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7650 ;;      Params:         0       4       0       0       0       0
  7651 ;;      Locals:         0       2       0       0       0       0
  7652 ;;      Temps:          0       4       0       0       0       0
  7653 ;;      Totals:         0      10       0       0       0       0
  7654 ;;Total ram usage:       10 bytes
  7655 ;; Hardware stack levels used: 1
  7656 ;; This function calls:
  7657 ;;		Nothing
  7658 ;; This function is called by:
  7659 ;;		_sendInfo
  7660 ;;		_interrupcaoCCP4
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664     0545                     ___fltol:	
  7665                           ;psect for function ___fltol
  7666                           
  7667     0545                     i1l2712:	
  7668                           ;incstack = 0
  7669                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7670                           
  7671     0545  1003               	clrc
  7672     0546  0020               	movlb	0	; select bank0
  7673     0547  0D37               	rlf	___fltol@f1+2,w
  7674     0548  0D38               	rlf	___fltol@f1+3,w
  7675     0549  00BE               	movwf	___fltol@exp1
  7676     054A  083E               	movf	___fltol@exp1,w
  7677     054B  1D03               	btfss	3,2
  7678     054C  2D4E               	goto	u137_21
  7679     054D  2D4F               	goto	u137_20
  7680     054E                     u137_21:
  7681     054E  2D58               	goto	i1l2718
  7682     054F                     u137_20:
  7683     054F                     i1l2714:
  7684     054F  3000               	movlw	0
  7685     0550  00B8               	movwf	?___fltol+3
  7686     0551  3000               	movlw	0
  7687     0552  00B7               	movwf	?___fltol+2
  7688     0553  3000               	movlw	0
  7689     0554  00B6               	movwf	?___fltol+1
  7690     0555  3000               	movlw	0
  7691     0556  00B5               	movwf	?___fltol
  7692     0557  2DB5               	goto	i1l1204
  7693     0558                     i1l2718:
  7694     0558  0835               	movf	___fltol@f1,w
  7695     0559  00B9               	movwf	??___fltol
  7696     055A  0836               	movf	___fltol@f1+1,w
  7697     055B  00BA               	movwf	??___fltol+1
  7698     055C  0837               	movf	___fltol@f1+2,w
  7699     055D  00BB               	movwf	??___fltol+2
  7700     055E  0838               	movf	___fltol@f1+3,w
  7701     055F  00BC               	movwf	??___fltol+3
  7702     0560  301F               	movlw	31
  7703     0561                     u138_25:
  7704     0561  36BC               	lsrf	??___fltol+3,f
  7705     0562  0CBB               	rrf	??___fltol+2,f
  7706     0563  0CBA               	rrf	??___fltol+1,f
  7707     0564  0CB9               	rrf	??___fltol,f
  7708     0565                     u138_20:
  7709     0565  0B89               	decfsz	9,f
  7710     0566  2D61               	goto	u138_25
  7711     0567  0839               	movf	??___fltol,w
  7712     0568  00BD               	movwf	___fltol@sign1
  7713     0569                     i1l2720:
  7714     0569  17B7               	bsf	___fltol@f1+2,7
  7715     056A                     i1l2722:
  7716     056A  30FF               	movlw	255
  7717     056B  05B5               	andwf	___fltol@f1,f
  7718     056C  30FF               	movlw	255
  7719     056D  05B6               	andwf	___fltol@f1+1,f
  7720     056E  30FF               	movlw	255
  7721     056F  05B7               	andwf	___fltol@f1+2,f
  7722     0570  3000               	movlw	0
  7723     0571  05B8               	andwf	___fltol@f1+3,f
  7724     0572                     i1l2724:
  7725     0572  3096               	movlw	150
  7726     0573  02BE               	subwf	___fltol@exp1,f
  7727     0574                     i1l2726:
  7728     0574  1FBE               	btfss	___fltol@exp1,7
  7729     0575  2D77               	goto	u139_21
  7730     0576  2D78               	goto	u139_20
  7731     0577                     u139_21:
  7732     0577  2D90               	goto	i1l2736
  7733     0578                     u139_20:
  7734     0578                     i1l2728:
  7735     0578  083E               	movf	___fltol@exp1,w
  7736     0579  3A80               	xorlw	128
  7737     057A  3E97               	addlw	151
  7738     057B  1803               	skipnc
  7739     057C  2D7E               	goto	u140_21
  7740     057D  2D7F               	goto	u140_20
  7741     057E                     u140_21:
  7742     057E  2D80               	goto	i1l2734
  7743     057F                     u140_20:
  7744     057F  2D4F               	goto	i1l2714
  7745     0580                     i1l2734:
  7746     0580  3001               	movlw	1
  7747     0581                     u141_25:
  7748     0581  36B8               	lsrf	___fltol@f1+3,f
  7749     0582  0CB7               	rrf	___fltol@f1+2,f
  7750     0583  0CB6               	rrf	___fltol@f1+1,f
  7751     0584  0CB5               	rrf	___fltol@f1,f
  7752     0585  0B89               	decfsz	9,f
  7753     0586  2D81               	goto	u141_25
  7754     0587  3001               	movlw	1
  7755     0588  00B9               	movwf	??___fltol
  7756     0589  0839               	movf	??___fltol,w
  7757     058A  07BE               	addwf	___fltol@exp1,f
  7758     058B  1D03               	btfss	3,2
  7759     058C  2D8E               	goto	u142_21
  7760     058D  2D8F               	goto	u142_20
  7761     058E                     u142_21:
  7762     058E  2D80               	goto	i1l2734
  7763     058F                     u142_20:
  7764     058F  2DA5               	goto	i1l2744
  7765     0590                     i1l2736:
  7766     0590  3020               	movlw	32
  7767     0591  023E               	subwf	___fltol@exp1,w
  7768     0592  1C03               	skipc
  7769     0593  2D95               	goto	u143_21
  7770     0594  2D96               	goto	u143_20
  7771     0595                     u143_21:
  7772     0595  2DA0               	goto	i1l1211
  7773     0596                     u143_20:
  7774     0596  2D4F               	goto	i1l2714
  7775     0597                     i1l2742:
  7776     0597  3001               	movlw	1
  7777     0598                     u144_25:
  7778     0598  35B5               	lslf	___fltol@f1,f
  7779     0599  0DB6               	rlf	___fltol@f1+1,f
  7780     059A  0DB7               	rlf	___fltol@f1+2,f
  7781     059B  0DB8               	rlf	___fltol@f1+3,f
  7782     059C  0B89               	decfsz	9,f
  7783     059D  2D98               	goto	u144_25
  7784     059E  3001               	movlw	1
  7785     059F  02BE               	subwf	___fltol@exp1,f
  7786     05A0                     i1l1211:
  7787     05A0  083E               	movf	___fltol@exp1,w
  7788     05A1  1D03               	btfss	3,2
  7789     05A2  2DA4               	goto	u145_21
  7790     05A3  2DA5               	goto	u145_20
  7791     05A4                     u145_21:
  7792     05A4  2D97               	goto	i1l2742
  7793     05A5                     u145_20:
  7794     05A5                     i1l2744:
  7795     05A5  083D               	movf	___fltol@sign1,w
  7796     05A6  1903               	btfsc	3,2
  7797     05A7  2DA9               	goto	u146_21
  7798     05A8  2DAA               	goto	u146_20
  7799     05A9                     u146_21:
  7800     05A9  2DB5               	goto	i1l1214
  7801     05AA                     u146_20:
  7802     05AA                     i1l2746:
  7803     05AA  09B5               	comf	___fltol@f1,f
  7804     05AB  09B6               	comf	___fltol@f1+1,f
  7805     05AC  09B7               	comf	___fltol@f1+2,f
  7806     05AD  09B8               	comf	___fltol@f1+3,f
  7807     05AE  0AB5               	incf	___fltol@f1,f
  7808     05AF  1903               	skipnz
  7809     05B0  0AB6               	incf	___fltol@f1+1,f
  7810     05B1  1903               	skipnz
  7811     05B2  0AB7               	incf	___fltol@f1+2,f
  7812     05B3  1903               	skipnz
  7813     05B4  0AB8               	incf	___fltol@f1+3,f
  7814     05B5                     i1l1214:
  7815     05B5                     i1l1204:
  7816     05B5  0008               	return
  7817     05B6                     __end_of___fltol:
  7818                           
  7819                           	psect	text44
  7820     0070                     __ptext44:	
  7821 ;; *************** function ___flmul *****************
  7822 ;; Defined at:
  7823 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;  b               4    0[BANK0 ] long 
  7826 ;;  a               4    4[BANK0 ] long 
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;  prod            4   15[BANK0 ] struct .
  7829 ;;  grs             4    9[BANK0 ] unsigned long 
  7830 ;;  temp            2   19[BANK0 ] struct .
  7831 ;;  bexp            1   14[BANK0 ] unsigned char 
  7832 ;;  aexp            1   13[BANK0 ] unsigned char 
  7833 ;;  sign            1    8[BANK0 ] unsigned char 
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  4    0[BANK0 ] unsigned char 
  7836 ;; Registers used:
  7837 ;;		wreg, status,2, status,0, pclath, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7843 ;;      Params:         0       8       0       0       0       0
  7844 ;;      Locals:         0      13       0       0       0       0
  7845 ;;      Temps:          5       0       0       0       0       0
  7846 ;;      Totals:         5      21       0       0       0       0
  7847 ;;Total ram usage:       26 bytes
  7848 ;; Hardware stack levels used: 1
  7849 ;; Hardware stack levels required when called: 1
  7850 ;; This function calls:
  7851 ;;		__Umul8_16
  7852 ;; This function is called by:
  7853 ;;		_sendInfo
  7854 ;;		_interrupcaoCCP4
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858     0070                     ___flmul:	
  7859                           ;psect for function ___flmul
  7860                           
  7861     0070                     i1l2748:	
  7862                           ;incstack = 0
  7863                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7864                           
  7865     0070  0020               	movlb	0	; select bank0
  7866     0071  0823               	movf	___flmul@b+3,w
  7867     0072  3980               	andlw	128
  7868     0073  00A8               	movwf	___flmul@sign
  7869     0074                     i1l2750:
  7870     0074  3523               	lslf	___flmul@b+3,w
  7871     0075  00AE               	movwf	___flmul@bexp
  7872     0076                     i1l2752:
  7873     0076  1FA2               	btfss	___flmul@b+2,7
  7874     0077  2879               	goto	u147_21
  7875     0078  287A               	goto	u147_20
  7876     0079                     u147_21:
  7877     0079  287B               	goto	i1l2756
  7878     007A                     u147_20:
  7879     007A                     i1l2754:
  7880     007A  142E               	bsf	___flmul@bexp,0
  7881     007B                     i1l2756:
  7882     007B  082E               	movf	___flmul@bexp,w
  7883     007C  1903               	btfsc	3,2
  7884     007D  287F               	goto	u148_21
  7885     007E  2880               	goto	u148_20
  7886     007F                     u148_21:
  7887     007F  288F               	goto	i1l2764
  7888     0080                     u148_20:
  7889     0080                     i1l2758:
  7890     0080  0A2E               	incf	___flmul@bexp,w
  7891     0081  1D03               	btfss	3,2
  7892     0082  2884               	goto	u149_21
  7893     0083  2885               	goto	u149_20
  7894     0084                     u149_21:
  7895     0084  288D               	goto	i1l2762
  7896     0085                     u149_20:
  7897     0085                     i1l2760:
  7898     0085  3000               	movlw	0
  7899     0086  00A3               	movwf	___flmul@b+3
  7900     0087  3000               	movlw	0
  7901     0088  00A2               	movwf	___flmul@b+2
  7902     0089  3000               	movlw	0
  7903     008A  00A1               	movwf	___flmul@b+1
  7904     008B  3000               	movlw	0
  7905     008C  00A0               	movwf	___flmul@b
  7906     008D                     i1l2762:
  7907     008D  17A2               	bsf	___flmul@b+2,7
  7908     008E  2897               	goto	i1l2766
  7909     008F                     i1l2764:
  7910     008F  3000               	movlw	0
  7911     0090  00A3               	movwf	___flmul@b+3
  7912     0091  3000               	movlw	0
  7913     0092  00A2               	movwf	___flmul@b+2
  7914     0093  3000               	movlw	0
  7915     0094  00A1               	movwf	___flmul@b+1
  7916     0095  3000               	movlw	0
  7917     0096  00A0               	movwf	___flmul@b
  7918     0097                     i1l2766:
  7919     0097  0827               	movf	___flmul@a+3,w
  7920     0098  3980               	andlw	128
  7921     0099  00F9               	movwf	??___flmul
  7922     009A  0879               	movf	??___flmul,w
  7923     009B  06A8               	xorwf	___flmul@sign,f
  7924     009C                     i1l2768:
  7925     009C  3527               	lslf	___flmul@a+3,w
  7926     009D  00AD               	movwf	___flmul@aexp
  7927     009E                     i1l2770:
  7928     009E  1FA6               	btfss	___flmul@a+2,7
  7929     009F  28A1               	goto	u150_21
  7930     00A0  28A2               	goto	u150_20
  7931     00A1                     u150_21:
  7932     00A1  28A3               	goto	i1l2774
  7933     00A2                     u150_20:
  7934     00A2                     i1l2772:
  7935     00A2  142D               	bsf	___flmul@aexp,0
  7936     00A3                     i1l2774:
  7937     00A3  082D               	movf	___flmul@aexp,w
  7938     00A4  1903               	btfsc	3,2
  7939     00A5  28A7               	goto	u151_21
  7940     00A6  28A8               	goto	u151_20
  7941     00A7                     u151_21:
  7942     00A7  28B7               	goto	i1l2782
  7943     00A8                     u151_20:
  7944     00A8                     i1l2776:
  7945     00A8  0A2D               	incf	___flmul@aexp,w
  7946     00A9  1D03               	btfss	3,2
  7947     00AA  28AC               	goto	u152_21
  7948     00AB  28AD               	goto	u152_20
  7949     00AC                     u152_21:
  7950     00AC  28B5               	goto	i1l2780
  7951     00AD                     u152_20:
  7952     00AD                     i1l2778:
  7953     00AD  3000               	movlw	0
  7954     00AE  00A7               	movwf	___flmul@a+3
  7955     00AF  3000               	movlw	0
  7956     00B0  00A6               	movwf	___flmul@a+2
  7957     00B1  3000               	movlw	0
  7958     00B2  00A5               	movwf	___flmul@a+1
  7959     00B3  3000               	movlw	0
  7960     00B4  00A4               	movwf	___flmul@a
  7961     00B5                     i1l2780:
  7962     00B5  17A6               	bsf	___flmul@a+2,7
  7963     00B6  28BF               	goto	i1l2784
  7964     00B7                     i1l2782:
  7965     00B7  3000               	movlw	0
  7966     00B8  00A7               	movwf	___flmul@a+3
  7967     00B9  3000               	movlw	0
  7968     00BA  00A6               	movwf	___flmul@a+2
  7969     00BB  3000               	movlw	0
  7970     00BC  00A5               	movwf	___flmul@a+1
  7971     00BD  3000               	movlw	0
  7972     00BE  00A4               	movwf	___flmul@a
  7973     00BF                     i1l2784:
  7974     00BF  082D               	movf	___flmul@aexp,w
  7975     00C0  1903               	btfsc	3,2
  7976     00C1  28C3               	goto	u153_21
  7977     00C2  28C4               	goto	u153_20
  7978     00C3                     u153_21:
  7979     00C3  28C9               	goto	i1l2788
  7980     00C4                     u153_20:
  7981     00C4                     i1l2786:
  7982     00C4  082E               	movf	___flmul@bexp,w
  7983     00C5  1D03               	btfss	3,2
  7984     00C6  28C8               	goto	u154_21
  7985     00C7  28C9               	goto	u154_20
  7986     00C8                     u154_21:
  7987     00C8  28D2               	goto	i1l2792
  7988     00C9                     u154_20:
  7989     00C9                     i1l2788:
  7990     00C9  3000               	movlw	0
  7991     00CA  00A3               	movwf	?___flmul+3
  7992     00CB  3000               	movlw	0
  7993     00CC  00A2               	movwf	?___flmul+2
  7994     00CD  3000               	movlw	0
  7995     00CE  00A1               	movwf	?___flmul+1
  7996     00CF  3000               	movlw	0
  7997     00D0  00A0               	movwf	?___flmul
  7998     00D1  2AAA               	goto	i1l1407
  7999     00D2                     i1l2792:
  8000     00D2  0820               	movf	___flmul@b,w
  8001     00D3  00F0               	movwf	__Umul8_16@multiplicand
  8002     00D4  0826               	movf	___flmul@a+2,w
  8003     00D5  318F  27B8  3180   	fcall	__Umul8_16
  8004     00D8  0871               	movf	?__Umul8_16+1,w
  8005     00D9  0020               	movlb	0	; select bank0
  8006     00DA  00B4               	movwf	___flmul@temp+1
  8007     00DB  0870               	movf	?__Umul8_16,w
  8008     00DC  00B3               	movwf	___flmul@temp
  8009     00DD                     i1l2794:
  8010     00DD  0833               	movf	___flmul@temp,w
  8011     00DE  00F9               	movwf	??___flmul
  8012     00DF  01FA               	clrf	??___flmul+1
  8013     00E0  01FB               	clrf	??___flmul+2
  8014     00E1  01FC               	clrf	??___flmul+3
  8015     00E2  087C               	movf	??___flmul+3,w
  8016     00E3  00AC               	movwf	___flmul@grs+3
  8017     00E4  087B               	movf	??___flmul+2,w
  8018     00E5  00AB               	movwf	___flmul@grs+2
  8019     00E6  087A               	movf	??___flmul+1,w
  8020     00E7  00AA               	movwf	___flmul@grs+1
  8021     00E8  0879               	movf	??___flmul,w
  8022     00E9  00A9               	movwf	___flmul@grs
  8023     00EA                     i1l2796:
  8024     00EA  0834               	movf	___flmul@temp+1,w
  8025     00EB  00F9               	movwf	??___flmul
  8026     00EC  01FA               	clrf	??___flmul+1
  8027     00ED  01FB               	clrf	??___flmul+2
  8028     00EE  01FC               	clrf	??___flmul+3
  8029     00EF  087C               	movf	??___flmul+3,w
  8030     00F0  00B2               	movwf	___flmul@prod+3
  8031     00F1  087B               	movf	??___flmul+2,w
  8032     00F2  00B1               	movwf	___flmul@prod+2
  8033     00F3  087A               	movf	??___flmul+1,w
  8034     00F4  00B0               	movwf	___flmul@prod+1
  8035     00F5  0879               	movf	??___flmul,w
  8036     00F6  00AF               	movwf	___flmul@prod
  8037     00F7  0821               	movf	___flmul@b+1,w
  8038     00F8  00F0               	movwf	__Umul8_16@multiplicand
  8039     00F9  0825               	movf	___flmul@a+1,w
  8040     00FA  318F  27B8  3180   	fcall	__Umul8_16
  8041     00FD  0871               	movf	?__Umul8_16+1,w
  8042     00FE  0020               	movlb	0	; select bank0
  8043     00FF  00B4               	movwf	___flmul@temp+1
  8044     0100  0870               	movf	?__Umul8_16,w
  8045     0101  00B3               	movwf	___flmul@temp
  8046     0102                     i1l2798:
  8047     0102  0833               	movf	___flmul@temp,w
  8048     0103  00F9               	movwf	??___flmul
  8049     0104  01FA               	clrf	??___flmul+1
  8050     0105  01FB               	clrf	??___flmul+2
  8051     0106  01FC               	clrf	??___flmul+3
  8052     0107  0879               	movf	??___flmul,w
  8053     0108  07A9               	addwf	___flmul@grs,f
  8054     0109  087A               	movf	??___flmul+1,w
  8055     010A  3DAA               	addwfc	___flmul@grs+1,f
  8056     010B  087B               	movf	??___flmul+2,w
  8057     010C  3DAB               	addwfc	___flmul@grs+2,f
  8058     010D  087C               	movf	??___flmul+3,w
  8059     010E  3DAC               	addwfc	___flmul@grs+3,f
  8060     010F                     i1l2800:
  8061     010F  0834               	movf	___flmul@temp+1,w
  8062     0110  00F9               	movwf	??___flmul
  8063     0111  01FA               	clrf	??___flmul+1
  8064     0112  01FB               	clrf	??___flmul+2
  8065     0113  01FC               	clrf	??___flmul+3
  8066     0114  0879               	movf	??___flmul,w
  8067     0115  07AF               	addwf	___flmul@prod,f
  8068     0116  087A               	movf	??___flmul+1,w
  8069     0117  3DB0               	addwfc	___flmul@prod+1,f
  8070     0118  087B               	movf	??___flmul+2,w
  8071     0119  3DB1               	addwfc	___flmul@prod+2,f
  8072     011A  087C               	movf	??___flmul+3,w
  8073     011B  3DB2               	addwfc	___flmul@prod+3,f
  8074     011C  0822               	movf	___flmul@b+2,w
  8075     011D  00F0               	movwf	__Umul8_16@multiplicand
  8076     011E  0824               	movf	___flmul@a,w
  8077     011F  318F  27B8  3180   	fcall	__Umul8_16
  8078     0122  0871               	movf	?__Umul8_16+1,w
  8079     0123  0020               	movlb	0	; select bank0
  8080     0124  00B4               	movwf	___flmul@temp+1
  8081     0125  0870               	movf	?__Umul8_16,w
  8082     0126  00B3               	movwf	___flmul@temp
  8083     0127                     i1l2802:
  8084     0127  0833               	movf	___flmul@temp,w
  8085     0128  00F9               	movwf	??___flmul
  8086     0129  01FA               	clrf	??___flmul+1
  8087     012A  01FB               	clrf	??___flmul+2
  8088     012B  01FC               	clrf	??___flmul+3
  8089     012C  0879               	movf	??___flmul,w
  8090     012D  07A9               	addwf	___flmul@grs,f
  8091     012E  087A               	movf	??___flmul+1,w
  8092     012F  3DAA               	addwfc	___flmul@grs+1,f
  8093     0130  087B               	movf	??___flmul+2,w
  8094     0131  3DAB               	addwfc	___flmul@grs+2,f
  8095     0132  087C               	movf	??___flmul+3,w
  8096     0133  3DAC               	addwfc	___flmul@grs+3,f
  8097     0134                     i1l2804:
  8098     0134  0834               	movf	___flmul@temp+1,w
  8099     0135  00F9               	movwf	??___flmul
  8100     0136  01FA               	clrf	??___flmul+1
  8101     0137  01FB               	clrf	??___flmul+2
  8102     0138  01FC               	clrf	??___flmul+3
  8103     0139  0879               	movf	??___flmul,w
  8104     013A  07AF               	addwf	___flmul@prod,f
  8105     013B  087A               	movf	??___flmul+1,w
  8106     013C  3DB0               	addwfc	___flmul@prod+1,f
  8107     013D  087B               	movf	??___flmul+2,w
  8108     013E  3DB1               	addwfc	___flmul@prod+2,f
  8109     013F  087C               	movf	??___flmul+3,w
  8110     0140  3DB2               	addwfc	___flmul@prod+3,f
  8111     0141                     i1l2806:
  8112     0141  3008               	movlw	8
  8113     0142                     u155_25:
  8114     0142  35A9               	lslf	___flmul@grs,f
  8115     0143  0DAA               	rlf	___flmul@grs+1,f
  8116     0144  0DAB               	rlf	___flmul@grs+2,f
  8117     0145  0DAC               	rlf	___flmul@grs+3,f
  8118     0146  0B89               	decfsz	9,f
  8119     0147  2942               	goto	u155_25
  8120     0148                     i1l2808:
  8121     0148  0821               	movf	___flmul@b+1,w
  8122     0149  00F0               	movwf	__Umul8_16@multiplicand
  8123     014A  0824               	movf	___flmul@a,w
  8124     014B  318F  27B8  3180   	fcall	__Umul8_16
  8125     014E  0871               	movf	?__Umul8_16+1,w
  8126     014F  0020               	movlb	0	; select bank0
  8127     0150  00B4               	movwf	___flmul@temp+1
  8128     0151  0870               	movf	?__Umul8_16,w
  8129     0152  00B3               	movwf	___flmul@temp
  8130     0153                     i1l2810:
  8131     0153  0833               	movf	___flmul@temp,w
  8132     0154  07A9               	addwf	___flmul@grs,f
  8133     0155  0834               	movf	___flmul@temp+1,w
  8134     0156  3DAA               	addwfc	___flmul@grs+1,f
  8135     0157  3000               	movlw	0
  8136     0158  3DAB               	addwfc	___flmul@grs+2,f
  8137     0159  3DAC               	addwfc	___flmul@grs+3,f
  8138     015A                     i1l2812:
  8139     015A  0820               	movf	___flmul@b,w
  8140     015B  00F0               	movwf	__Umul8_16@multiplicand
  8141     015C  0825               	movf	___flmul@a+1,w
  8142     015D  318F  27B8  3180   	fcall	__Umul8_16
  8143     0160  0871               	movf	?__Umul8_16+1,w
  8144     0161  0020               	movlb	0	; select bank0
  8145     0162  00B4               	movwf	___flmul@temp+1
  8146     0163  0870               	movf	?__Umul8_16,w
  8147     0164  00B3               	movwf	___flmul@temp
  8148     0165                     i1l2814:
  8149     0165  0833               	movf	___flmul@temp,w
  8150     0166  07A9               	addwf	___flmul@grs,f
  8151     0167  0834               	movf	___flmul@temp+1,w
  8152     0168  3DAA               	addwfc	___flmul@grs+1,f
  8153     0169  3000               	movlw	0
  8154     016A  3DAB               	addwfc	___flmul@grs+2,f
  8155     016B  3DAC               	addwfc	___flmul@grs+3,f
  8156     016C                     i1l2816:
  8157     016C  3008               	movlw	8
  8158     016D                     u156_25:
  8159     016D  35A9               	lslf	___flmul@grs,f
  8160     016E  0DAA               	rlf	___flmul@grs+1,f
  8161     016F  0DAB               	rlf	___flmul@grs+2,f
  8162     0170  0DAC               	rlf	___flmul@grs+3,f
  8163     0171  0B89               	decfsz	9,f
  8164     0172  296D               	goto	u156_25
  8165     0173  0820               	movf	___flmul@b,w
  8166     0174  00F0               	movwf	__Umul8_16@multiplicand
  8167     0175  0824               	movf	___flmul@a,w
  8168     0176  318F  27B8  3180   	fcall	__Umul8_16
  8169     0179  0871               	movf	?__Umul8_16+1,w
  8170     017A  0020               	movlb	0	; select bank0
  8171     017B  00B4               	movwf	___flmul@temp+1
  8172     017C  0870               	movf	?__Umul8_16,w
  8173     017D  00B3               	movwf	___flmul@temp
  8174     017E                     i1l2818:
  8175     017E  0833               	movf	___flmul@temp,w
  8176     017F  07A9               	addwf	___flmul@grs,f
  8177     0180  0834               	movf	___flmul@temp+1,w
  8178     0181  3DAA               	addwfc	___flmul@grs+1,f
  8179     0182  3000               	movlw	0
  8180     0183  3DAB               	addwfc	___flmul@grs+2,f
  8181     0184  3DAC               	addwfc	___flmul@grs+3,f
  8182     0185                     i1l2820:
  8183     0185  0821               	movf	___flmul@b+1,w
  8184     0186  00F0               	movwf	__Umul8_16@multiplicand
  8185     0187  0826               	movf	___flmul@a+2,w
  8186     0188  318F  27B8  3180   	fcall	__Umul8_16
  8187     018B  0871               	movf	?__Umul8_16+1,w
  8188     018C  0020               	movlb	0	; select bank0
  8189     018D  00B4               	movwf	___flmul@temp+1
  8190     018E  0870               	movf	?__Umul8_16,w
  8191     018F  00B3               	movwf	___flmul@temp
  8192     0190  0833               	movf	___flmul@temp,w
  8193     0191  07AF               	addwf	___flmul@prod,f
  8194     0192  0834               	movf	___flmul@temp+1,w
  8195     0193  3DB0               	addwfc	___flmul@prod+1,f
  8196     0194  3000               	movlw	0
  8197     0195  3DB1               	addwfc	___flmul@prod+2,f
  8198     0196  3DB2               	addwfc	___flmul@prod+3,f
  8199     0197                     i1l2822:
  8200     0197  0822               	movf	___flmul@b+2,w
  8201     0198  00F0               	movwf	__Umul8_16@multiplicand
  8202     0199  0825               	movf	___flmul@a+1,w
  8203     019A  318F  27B8  3180   	fcall	__Umul8_16
  8204     019D  0871               	movf	?__Umul8_16+1,w
  8205     019E  0020               	movlb	0	; select bank0
  8206     019F  00B4               	movwf	___flmul@temp+1
  8207     01A0  0870               	movf	?__Umul8_16,w
  8208     01A1  00B3               	movwf	___flmul@temp
  8209     01A2                     i1l2824:
  8210     01A2  0833               	movf	___flmul@temp,w
  8211     01A3  07AF               	addwf	___flmul@prod,f
  8212     01A4  0834               	movf	___flmul@temp+1,w
  8213     01A5  3DB0               	addwfc	___flmul@prod+1,f
  8214     01A6  3000               	movlw	0
  8215     01A7  3DB1               	addwfc	___flmul@prod+2,f
  8216     01A8  3DB2               	addwfc	___flmul@prod+3,f
  8217     01A9  0822               	movf	___flmul@b+2,w
  8218     01AA  00F0               	movwf	__Umul8_16@multiplicand
  8219     01AB  0826               	movf	___flmul@a+2,w
  8220     01AC  318F  27B8  3180   	fcall	__Umul8_16
  8221     01AF  0871               	movf	?__Umul8_16+1,w
  8222     01B0  0020               	movlb	0	; select bank0
  8223     01B1  00B4               	movwf	___flmul@temp+1
  8224     01B2  0870               	movf	?__Umul8_16,w
  8225     01B3  00B3               	movwf	___flmul@temp
  8226     01B4                     i1l2826:
  8227     01B4  0833               	movf	___flmul@temp,w
  8228     01B5  00F9               	movwf	??___flmul
  8229     01B6  0834               	movf	___flmul@temp+1,w
  8230     01B7  00FA               	movwf	??___flmul+1
  8231     01B8  01FB               	clrf	??___flmul+2
  8232     01B9  01FC               	clrf	??___flmul+3
  8233     01BA  3008               	movlw	8
  8234     01BB                     u157_25:
  8235     01BB  35F9               	lslf	??___flmul,f
  8236     01BC  0DFA               	rlf	??___flmul+1,f
  8237     01BD  0DFB               	rlf	??___flmul+2,f
  8238     01BE  0DFC               	rlf	??___flmul+3,f
  8239     01BF                     u157_20:
  8240     01BF  0B89               	decfsz	9,f
  8241     01C0  29BB               	goto	u157_25
  8242     01C1  0879               	movf	??___flmul,w
  8243     01C2  07AF               	addwf	___flmul@prod,f
  8244     01C3  087A               	movf	??___flmul+1,w
  8245     01C4  3DB0               	addwfc	___flmul@prod+1,f
  8246     01C5  087B               	movf	??___flmul+2,w
  8247     01C6  3DB1               	addwfc	___flmul@prod+2,f
  8248     01C7  087C               	movf	??___flmul+3,w
  8249     01C8  3DB2               	addwfc	___flmul@prod+3,f
  8250     01C9                     i1l2828:
  8251     01C9  0829               	movf	___flmul@grs,w
  8252     01CA  00F9               	movwf	??___flmul
  8253     01CB  082A               	movf	___flmul@grs+1,w
  8254     01CC  00FA               	movwf	??___flmul+1
  8255     01CD  082B               	movf	___flmul@grs+2,w
  8256     01CE  00FB               	movwf	??___flmul+2
  8257     01CF  082C               	movf	___flmul@grs+3,w
  8258     01D0  00FC               	movwf	??___flmul+3
  8259     01D1  3018               	movlw	24
  8260     01D2                     u158_25:
  8261     01D2  36FC               	lsrf	??___flmul+3,f
  8262     01D3  0CFB               	rrf	??___flmul+2,f
  8263     01D4  0CFA               	rrf	??___flmul+1,f
  8264     01D5  0CF9               	rrf	??___flmul,f
  8265     01D6                     u158_20:
  8266     01D6  0B89               	decfsz	9,f
  8267     01D7  29D2               	goto	u158_25
  8268     01D8  0879               	movf	??___flmul,w
  8269     01D9  07AF               	addwf	___flmul@prod,f
  8270     01DA  087A               	movf	??___flmul+1,w
  8271     01DB  3DB0               	addwfc	___flmul@prod+1,f
  8272     01DC  087B               	movf	??___flmul+2,w
  8273     01DD  3DB1               	addwfc	___flmul@prod+2,f
  8274     01DE  087C               	movf	??___flmul+3,w
  8275     01DF  3DB2               	addwfc	___flmul@prod+3,f
  8276     01E0                     i1l2830:
  8277     01E0  3008               	movlw	8
  8278     01E1                     u159_25:
  8279     01E1  35A9               	lslf	___flmul@grs,f
  8280     01E2  0DAA               	rlf	___flmul@grs+1,f
  8281     01E3  0DAB               	rlf	___flmul@grs+2,f
  8282     01E4  0DAC               	rlf	___flmul@grs+3,f
  8283     01E5  0B89               	decfsz	9,f
  8284     01E6  29E1               	goto	u159_25
  8285     01E7                     i1l2832:
  8286     01E7  082E               	movf	___flmul@bexp,w
  8287     01E8  072D               	addwf	___flmul@aexp,w
  8288     01E9  00F9               	movwf	??___flmul
  8289     01EA  01FA               	clrf	??___flmul+1
  8290     01EB  0DFA               	rlf	??___flmul+1,f
  8291     01EC  0879               	movf	??___flmul,w
  8292     01ED  3E82               	addlw	130
  8293     01EE  00B3               	movwf	___flmul@temp
  8294     01EF  30FF               	movlw	255
  8295     01F0  3D7A               	addwfc	??___flmul+1,w
  8296     01F1  00B4               	movwf	___flmul@temp+1
  8297     01F2  2A0A               	goto	i1l2844
  8298     01F3                     i1l2834:
  8299     01F3  3001               	movlw	1
  8300     01F4                     u160_25:
  8301     01F4  35AF               	lslf	___flmul@prod,f
  8302     01F5  0DB0               	rlf	___flmul@prod+1,f
  8303     01F6  0DB1               	rlf	___flmul@prod+2,f
  8304     01F7  0DB2               	rlf	___flmul@prod+3,f
  8305     01F8  0B89               	decfsz	9,f
  8306     01F9  29F4               	goto	u160_25
  8307     01FA                     i1l2836:
  8308     01FA  1FAC               	btfss	___flmul@grs+3,7
  8309     01FB  29FD               	goto	u161_21
  8310     01FC  29FE               	goto	u161_20
  8311     01FD                     u161_21:
  8312     01FD  29FF               	goto	i1l2840
  8313     01FE                     u161_20:
  8314     01FE                     i1l2838:
  8315     01FE  142F               	bsf	___flmul@prod,0
  8316     01FF                     i1l2840:
  8317     01FF  3001               	movlw	1
  8318     0200                     u162_25:
  8319     0200  35A9               	lslf	___flmul@grs,f
  8320     0201  0DAA               	rlf	___flmul@grs+1,f
  8321     0202  0DAB               	rlf	___flmul@grs+2,f
  8322     0203  0DAC               	rlf	___flmul@grs+3,f
  8323     0204  0B89               	decfsz	9,f
  8324     0205  2A00               	goto	u162_25
  8325     0206                     i1l2842:
  8326     0206  30FF               	movlw	255
  8327     0207  07B3               	addwf	___flmul@temp,f
  8328     0208  30FF               	movlw	255
  8329     0209  3DB4               	addwfc	___flmul@temp+1,f
  8330     020A                     i1l2844:
  8331     020A  1FB1               	btfss	___flmul@prod+2,7
  8332     020B  2A0D               	goto	u163_21
  8333     020C  2A0E               	goto	u163_20
  8334     020D                     u163_21:
  8335     020D  29F3               	goto	i1l2834
  8336     020E                     u163_20:
  8337     020E                     i1l2846:
  8338     020E  01AD               	clrf	___flmul@aexp
  8339     020F                     i1l2848:
  8340     020F  1FAC               	btfss	___flmul@grs+3,7
  8341     0210  2A12               	goto	u164_21
  8342     0211  2A13               	goto	u164_20
  8343     0212                     u164_21:
  8344     0212  2A2F               	goto	i1l2856
  8345     0213                     u164_20:
  8346     0213                     i1l2850:
  8347     0213  30FF               	movlw	255
  8348     0214  0529               	andwf	___flmul@grs,w
  8349     0215  00F9               	movwf	??___flmul
  8350     0216  30FF               	movlw	255
  8351     0217  052A               	andwf	___flmul@grs+1,w
  8352     0218  00FA               	movwf	??___flmul+1
  8353     0219  30FF               	movlw	255
  8354     021A  052B               	andwf	___flmul@grs+2,w
  8355     021B  00FB               	movwf	??___flmul+2
  8356     021C  307F               	movlw	127
  8357     021D  052C               	andwf	___flmul@grs+3,w
  8358     021E  00FC               	movwf	??___flmul+3
  8359     021F  087C               	movf	??___flmul+3,w
  8360     0220  047B               	iorwf	??___flmul+2,w
  8361     0221  047A               	iorwf	??___flmul+1,w
  8362     0222  0479               	iorwf	??___flmul,w
  8363     0223  1903               	skipnz
  8364     0224  2A26               	goto	u165_21
  8365     0225  2A27               	goto	u165_20
  8366     0226                     u165_21:
  8367     0226  2A2A               	goto	i1l1413
  8368     0227                     u165_20:
  8369     0227                     i1l2852:
  8370     0227  01AD               	clrf	___flmul@aexp
  8371     0228  0AAD               	incf	___flmul@aexp,f
  8372     0229  2A2F               	goto	i1l2856
  8373     022A                     i1l1413:
  8374     022A  1C2F               	btfss	___flmul@prod,0
  8375     022B  2A2D               	goto	u166_21
  8376     022C  2A2E               	goto	u166_20
  8377     022D                     u166_21:
  8378     022D  2A2F               	goto	i1l2856
  8379     022E                     u166_20:
  8380     022E  2A27               	goto	i1l2852
  8381     022F                     i1l2856:
  8382     022F  082D               	movf	___flmul@aexp,w
  8383     0230  1903               	btfsc	3,2
  8384     0231  2A33               	goto	u167_21
  8385     0232  2A34               	goto	u167_20
  8386     0233                     u167_21:
  8387     0233  2A5C               	goto	i1l2866
  8388     0234                     u167_20:
  8389     0234                     i1l2858:
  8390     0234  3001               	movlw	1
  8391     0235  07AF               	addwf	___flmul@prod,f
  8392     0236  3000               	movlw	0
  8393     0237  3DB0               	addwfc	___flmul@prod+1,f
  8394     0238  3000               	movlw	0
  8395     0239  3DB1               	addwfc	___flmul@prod+2,f
  8396     023A  3000               	movlw	0
  8397     023B  3DB2               	addwfc	___flmul@prod+3,f
  8398     023C                     i1l2860:
  8399     023C  1C32               	btfss	___flmul@prod+3,0
  8400     023D  2A3F               	goto	u168_21
  8401     023E  2A40               	goto	u168_20
  8402     023F                     u168_21:
  8403     023F  2A5C               	goto	i1l2866
  8404     0240                     u168_20:
  8405     0240                     i1l2862:
  8406     0240  082F               	movf	___flmul@prod,w
  8407     0241  00F9               	movwf	??___flmul
  8408     0242  0830               	movf	___flmul@prod+1,w
  8409     0243  00FA               	movwf	??___flmul+1
  8410     0244  0831               	movf	___flmul@prod+2,w
  8411     0245  00FB               	movwf	??___flmul+2
  8412     0246  0832               	movf	___flmul@prod+3,w
  8413     0247  00FC               	movwf	??___flmul+3
  8414     0248  3001               	movlw	1
  8415     0249  00FD               	movwf	??___flmul+4
  8416     024A                     u169_25:
  8417     024A  37FC               	asrf	??___flmul+3,f
  8418     024B  0CFB               	rrf	??___flmul+2,f
  8419     024C  0CFA               	rrf	??___flmul+1,f
  8420     024D  0CF9               	rrf	??___flmul,f
  8421     024E                     u169_20:
  8422     024E  0BFD               	decfsz	??___flmul+4,f
  8423     024F  2A4A               	goto	u169_25
  8424     0250  087C               	movf	??___flmul+3,w
  8425     0251  00B2               	movwf	___flmul@prod+3
  8426     0252  087B               	movf	??___flmul+2,w
  8427     0253  00B1               	movwf	___flmul@prod+2
  8428     0254  087A               	movf	??___flmul+1,w
  8429     0255  00B0               	movwf	___flmul@prod+1
  8430     0256  0879               	movf	??___flmul,w
  8431     0257  00AF               	movwf	___flmul@prod
  8432     0258                     i1l2864:
  8433     0258  3001               	movlw	1
  8434     0259  07B3               	addwf	___flmul@temp,f
  8435     025A  3000               	movlw	0
  8436     025B  3DB4               	addwfc	___flmul@temp+1,f
  8437     025C                     i1l2866:
  8438     025C  0834               	movf	___flmul@temp+1,w
  8439     025D  3A80               	xorlw	128
  8440     025E  00F9               	movwf	??___flmul
  8441     025F  3080               	movlw	128
  8442     0260  0279               	subwf	??___flmul,w
  8443     0261  1D03               	skipz
  8444     0262  2A65               	goto	u170_25
  8445     0263  30FF               	movlw	255
  8446     0264  0233               	subwf	___flmul@temp,w
  8447     0265                     u170_25:
  8448     0265  1C03               	skipc
  8449     0266  2A68               	goto	u170_21
  8450     0267  2A69               	goto	u170_20
  8451     0268                     u170_21:
  8452     0268  2A73               	goto	i1l2870
  8453     0269                     u170_20:
  8454     0269                     i1l2868:
  8455     0269  307F               	movlw	127
  8456     026A  0020               	movlb	0	; select bank0
  8457     026B  00B2               	movwf	___flmul@prod+3
  8458     026C  3080               	movlw	128
  8459     026D  00B1               	movwf	___flmul@prod+2
  8460     026E  3000               	movlw	0
  8461     026F  00B0               	movwf	___flmul@prod+1
  8462     0270  3000               	movlw	0
  8463     0271  00AF               	movwf	___flmul@prod
  8464     0272  2A9E               	goto	i1l1419
  8465     0273                     i1l2870:
  8466     0273  0020               	movlb	0	; select bank0
  8467     0274  0834               	movf	___flmul@temp+1,w
  8468     0275  3A80               	xorlw	128
  8469     0276  00F9               	movwf	??___flmul
  8470     0277  3080               	movlw	128
  8471     0278  0279               	subwf	??___flmul,w
  8472     0279  1D03               	skipz
  8473     027A  2A7D               	goto	u171_25
  8474     027B  3001               	movlw	1
  8475     027C  0233               	subwf	___flmul@temp,w
  8476     027D                     u171_25:
  8477     027D  1803               	skipnc
  8478     027E  2A80               	goto	u171_21
  8479     027F  2A81               	goto	u171_20
  8480     0280                     u171_21:
  8481     0280  2A8C               	goto	i1l2876
  8482     0281                     u171_20:
  8483     0281                     i1l2872:
  8484     0281  3000               	movlw	0
  8485     0282  0020               	movlb	0	; select bank0
  8486     0283  00B2               	movwf	___flmul@prod+3
  8487     0284  3000               	movlw	0
  8488     0285  00B1               	movwf	___flmul@prod+2
  8489     0286  3000               	movlw	0
  8490     0287  00B0               	movwf	___flmul@prod+1
  8491     0288  3000               	movlw	0
  8492     0289  00AF               	movwf	___flmul@prod
  8493     028A                     i1l2874:
  8494     028A  01A8               	clrf	___flmul@sign
  8495     028B  2A9E               	goto	i1l1419
  8496     028C                     i1l2876:
  8497     028C  0020               	movlb	0	; select bank0
  8498     028D  0833               	movf	___flmul@temp,w
  8499     028E  00AE               	movwf	___flmul@bexp
  8500     028F  30FF               	movlw	255
  8501     0290  05AF               	andwf	___flmul@prod,f
  8502     0291  30FF               	movlw	255
  8503     0292  05B0               	andwf	___flmul@prod+1,f
  8504     0293  307F               	movlw	127
  8505     0294  05B1               	andwf	___flmul@prod+2,f
  8506     0295  3000               	movlw	0
  8507     0296  05B2               	andwf	___flmul@prod+3,f
  8508     0297                     i1l2878:
  8509     0297  1C2E               	btfss	___flmul@bexp,0
  8510     0298  2A9A               	goto	u172_21
  8511     0299  2A9B               	goto	u172_20
  8512     029A                     u172_21:
  8513     029A  2A9C               	goto	i1l2882
  8514     029B                     u172_20:
  8515     029B                     i1l2880:
  8516     029B  17B1               	bsf	___flmul@prod+2,7
  8517     029C                     i1l2882:
  8518     029C  362E               	lsrf	___flmul@bexp,w
  8519     029D  00B2               	movwf	___flmul@prod+3
  8520     029E                     i1l1419:
  8521     029E  0828               	movf	___flmul@sign,w
  8522     029F  00F9               	movwf	??___flmul
  8523     02A0  0879               	movf	??___flmul,w
  8524     02A1  04B2               	iorwf	___flmul@prod+3,f
  8525     02A2                     i1l2884:
  8526     02A2  0832               	movf	___flmul@prod+3,w
  8527     02A3  00A3               	movwf	?___flmul+3
  8528     02A4  0831               	movf	___flmul@prod+2,w
  8529     02A5  00A2               	movwf	?___flmul+2
  8530     02A6  0830               	movf	___flmul@prod+1,w
  8531     02A7  00A1               	movwf	?___flmul+1
  8532     02A8  082F               	movf	___flmul@prod,w
  8533     02A9  00A0               	movwf	?___flmul
  8534     02AA                     i1l1407:
  8535     02AA  0008               	return
  8536     02AB                     __end_of___flmul:
  8537                           
  8538                           	psect	text45
  8539     0FB8                     __ptext45:	
  8540 ;; *************** function __Umul8_16 *****************
  8541 ;; Defined at:
  8542 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  multiplier      1    wreg     unsigned char 
  8545 ;;  multiplicand    1    0[COMMON] unsigned char 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;  multiplier      1    8[COMMON] unsigned char 
  8548 ;;  word_mpld       2    6[COMMON] unsigned int 
  8549 ;;  product         2    4[COMMON] unsigned int 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  2    0[COMMON] unsigned int 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8559 ;;      Params:         2       0       0       0       0       0
  8560 ;;      Locals:         5       0       0       0       0       0
  8561 ;;      Temps:          2       0       0       0       0       0
  8562 ;;      Totals:         9       0       0       0       0       0
  8563 ;;Total ram usage:        9 bytes
  8564 ;; Hardware stack levels used: 1
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		___flmul
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572     0FB8                     __Umul8_16:	
  8573                           ;psect for function __Umul8_16
  8574                           
  8575                           
  8576                           ;incstack = 0
  8577                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8578                           ;__Umul8_16@multiplier stored from wreg
  8579     0FB8  00F8               	movwf	__Umul8_16@multiplier
  8580     0FB9                     i1l2604:
  8581     0FB9  01F4               	clrf	__Umul8_16@product
  8582     0FBA  01F5               	clrf	__Umul8_16@product+1
  8583     0FBB                     i1l2606:
  8584     0FBB  0870               	movf	__Umul8_16@multiplicand,w
  8585     0FBC  00F2               	movwf	??__Umul8_16
  8586     0FBD  01F3               	clrf	??__Umul8_16+1
  8587     0FBE  0872               	movf	??__Umul8_16,w
  8588     0FBF  00F6               	movwf	__Umul8_16@word_mpld
  8589     0FC0  0873               	movf	??__Umul8_16+1,w
  8590     0FC1  00F7               	movwf	__Umul8_16@word_mpld+1
  8591     0FC2                     i1l2608:
  8592     0FC2  1C78               	btfss	__Umul8_16@multiplier,0
  8593     0FC3  2FC5               	goto	u120_21
  8594     0FC4  2FC6               	goto	u120_20
  8595     0FC5                     u120_21:
  8596     0FC5  2FCA               	goto	i1l1426
  8597     0FC6                     u120_20:
  8598     0FC6                     i1l2610:
  8599     0FC6  0876               	movf	__Umul8_16@word_mpld,w
  8600     0FC7  07F4               	addwf	__Umul8_16@product,f
  8601     0FC8  0877               	movf	__Umul8_16@word_mpld+1,w
  8602     0FC9  3DF5               	addwfc	__Umul8_16@product+1,f
  8603     0FCA                     i1l1426:
  8604     0FCA  3001               	movlw	1
  8605     0FCB                     u121_25:
  8606     0FCB  35F6               	lslf	__Umul8_16@word_mpld,f
  8607     0FCC  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8608     0FCD  0B89               	decfsz	9,f
  8609     0FCE  2FCB               	goto	u121_25
  8610     0FCF  1003               	clrc
  8611     0FD0  0CF8               	rrf	__Umul8_16@multiplier,f
  8612     0FD1                     i1l2612:
  8613     0FD1  0878               	movf	__Umul8_16@multiplier,w
  8614     0FD2  1D03               	btfss	3,2
  8615     0FD3  2FD5               	goto	u122_21
  8616     0FD4  2FD6               	goto	u122_20
  8617     0FD5                     u122_21:
  8618     0FD5  2FC2               	goto	i1l2608
  8619     0FD6                     u122_20:
  8620     0FD6                     i1l2614:
  8621     0FD6  0875               	movf	__Umul8_16@product+1,w
  8622     0FD7  00F1               	movwf	?__Umul8_16+1
  8623     0FD8  0874               	movf	__Umul8_16@product,w
  8624     0FD9  00F0               	movwf	?__Umul8_16
  8625     0FDA                     i1l1428:
  8626     0FDA  0008               	return
  8627     0FDB                     __end_of__Umul8_16:
  8628                           
  8629                           	psect	text46
  8630     0E46                     __ptext46:	
  8631 ;; *************** function _EUSART_Write *****************
  8632 ;; Defined at:
  8633 ;;		line 132 in file "mcc_generated_files/eusart.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  txData          1    wreg     unsigned char 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;  txData          1    0[COMMON] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      void 
  8640 ;; Registers used:
  8641 ;;		wreg
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8647 ;;      Params:         0       0       0       0       0       0
  8648 ;;      Locals:         1       0       0       0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0
  8650 ;;      Totals:         1       0       0       0       0       0
  8651 ;;Total ram usage:        1 bytes
  8652 ;; Hardware stack levels used: 1
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_sendInfo
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660     0E46                     _EUSART_Write:	
  8661                           ;psect for function _EUSART_Write
  8662                           
  8663                           
  8664                           ;incstack = 0
  8665                           ; Regs used in _EUSART_Write: [wreg]
  8666                           ;EUSART_Write@txData stored from wreg
  8667     0E46  00F0               	movwf	EUSART_Write@txData
  8668     0E47                     i1l2634:
  8669     0E47                     i1l376:	
  8670                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  8671                           
  8672                           
  8673                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  8674     0E47  0020               	movlb	0	; select bank0
  8675     0E48  1E11               	btfss	17,4	;volatile
  8676     0E49  2E4B               	goto	u124_21
  8677     0E4A  2E4C               	goto	u124_20
  8678     0E4B                     u124_21:
  8679     0E4B  2E47               	goto	i1l376
  8680     0E4C                     u124_20:
  8681     0E4C                     i1l2636:
  8682                           
  8683                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  8684     0E4C  0870               	movf	EUSART_Write@txData,w
  8685     0E4D  0023               	movlb	3	; select bank3
  8686     0E4E  009A               	movwf	26	;volatile
  8687     0E4F                     i1l379:
  8688     0E4F  0008               	return
  8689     0E50                     __end_of_EUSART_Write:
  8690                           
  8691                           	psect	text47
  8692     0F9E                     __ptext47:	
  8693 ;; *************** function _ADC_GetConversion *****************
  8694 ;; Defined at:
  8695 ;;		line 112 in file "mcc_generated_files/adc.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  channel         1    wreg     enum E2485
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  channel         1    3[COMMON] enum E2485
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  2    0[COMMON] unsigned short 
  8702 ;; Registers used:
  8703 ;;		wreg, status,2, status,0
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8709 ;;      Params:         2       0       0       0       0       0
  8710 ;;      Locals:         1       0       0       0       0       0
  8711 ;;      Temps:          1       0       0       0       0       0
  8712 ;;      Totals:         4       0       0       0       0       0
  8713 ;;Total ram usage:        4 bytes
  8714 ;; Hardware stack levels used: 1
  8715 ;; This function calls:
  8716 ;;		Nothing
  8717 ;; This function is called by:
  8718 ;;		_sendInfo
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722     0F9E                     _ADC_GetConversion:	
  8723                           ;psect for function _ADC_GetConversion
  8724                           
  8725                           
  8726                           ;incstack = 0
  8727                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  8728                           ;ADC_GetConversion@channel stored from wreg
  8729     0F9E  00F3               	movwf	ADC_GetConversion@channel
  8730     0F9F                     i1l2622:
  8731                           
  8732                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  8733     0F9F  0873               	movf	ADC_GetConversion@channel,w
  8734     0FA0  00F2               	movwf	??_ADC_GetConversion
  8735     0FA1  0DF2               	rlf	??_ADC_GetConversion,f
  8736     0FA2  0DF2               	rlf	??_ADC_GetConversion,f
  8737     0FA3  0021               	movlb	1	; select bank1
  8738     0FA4  081D               	movf	29,w	;volatile
  8739     0FA5  0672               	xorwf	??_ADC_GetConversion,w
  8740     0FA6  3983               	andlw	-125
  8741     0FA7  0672               	xorwf	??_ADC_GetConversion,w
  8742     0FA8  009D               	movwf	29	;volatile
  8743     0FA9                     i1l2624:
  8744                           
  8745                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  8746     0FA9  141D               	bsf	29,0	;volatile
  8747     0FAA                     i1l2626:
  8748                           
  8749                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8750     0FAA  3200               	nop2	;2 cycle nop
  8751     0FAB  3200               	nop2	;2 cycle nop
  8752     0FAC  0000               	nop
  8753     0FAD                     i1l2628:
  8754                           
  8755                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  8756     0FAD  0021               	movlb	1	; select bank1
  8757     0FAE  149D               	bsf	29,1	;volatile
  8758     0FAF                     i1l293:	
  8759                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  8760                           
  8761                           
  8762                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  8763     0FAF  189D               	btfsc	29,1	;volatile
  8764     0FB0  2FB2               	goto	u123_21
  8765     0FB1  2FB3               	goto	u123_20
  8766     0FB2                     u123_21:
  8767     0FB2  2FAF               	goto	i1l293
  8768     0FB3                     u123_20:
  8769     0FB3                     i1l2630:
  8770                           
  8771                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8772     0FB3  081C               	movf	28,w	;volatile
  8773     0FB4  00F1               	movwf	?_ADC_GetConversion+1
  8774     0FB5  081B               	movf	27,w	;volatile
  8775     0FB6  00F0               	movwf	?_ADC_GetConversion
  8776     0FB7                     i1l296:
  8777     0FB7  0008               	return
  8778     0FB8                     __end_of_ADC_GetConversion:
  8779                           
  8780                           	psect	text48
  8781     0EE6                     __ptext48:	
  8782 ;; *************** function _PIN_MANAGER_IOC *****************
  8783 ;; Defined at:
  8784 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;		None
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      void 
  8791 ;; Registers used:
  8792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8798 ;;      Params:         0       0       0       0       0       0
  8799 ;;      Locals:         0       0       0       0       0       0
  8800 ;;      Temps:          0       0       0       0       0       0
  8801 ;;      Totals:         0       0       0       0       0       0
  8802 ;;Total ram usage:        0 bytes
  8803 ;; Hardware stack levels used: 1
  8804 ;; Hardware stack levels required when called: 5
  8805 ;; This function calls:
  8806 ;;		_IOCBF0_ISR
  8807 ;;		_IOCBF3_ISR
  8808 ;; This function is called by:
  8809 ;;		_INTERRUPT_InterruptManager
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813     0EE6                     _PIN_MANAGER_IOC:	
  8814                           ;psect for function _PIN_MANAGER_IOC
  8815                           
  8816     0EE6                     i1l3212:	
  8817                           ;incstack = 0
  8818                           ; Regs used in _PIN_MANAGER_IOC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8819                           
  8820                           
  8821                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  8822     0EE6  0027               	movlb	7	; select bank7
  8823     0EE7  1C16               	btfss	22,0	;volatile
  8824     0EE8  2EEA               	goto	u184_21
  8825     0EE9  2EEB               	goto	u184_20
  8826     0EEA                     u184_21:
  8827     0EEA  2EEE               	goto	i1l3216
  8828     0EEB                     u184_20:
  8829     0EEB                     i1l3214:
  8830                           
  8831                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  8832     0EEB  318E  26A9  318E   	fcall	_IOCBF0_ISR
  8833     0EEE                     i1l3216:
  8834                           
  8835                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  8836     0EEE  0027               	movlb	7	; select bank7
  8837     0EEF  1D96               	btfss	22,3	;volatile
  8838     0EF0  2EF2               	goto	u185_21
  8839     0EF1  2EF3               	goto	u185_20
  8840     0EF2                     u185_21:
  8841     0EF2  2EF6               	goto	i1l194
  8842     0EF3                     u185_20:
  8843     0EF3                     i1l3218:
  8844                           
  8845                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  8846     0EF3  318E  26B8  318E   	fcall	_IOCBF3_ISR
  8847     0EF6                     i1l194:
  8848     0EF6  0008               	return
  8849     0EF7                     __end_of_PIN_MANAGER_IOC:
  8850                           
  8851                           	psect	text49
  8852     0EB8                     __ptext49:	
  8853 ;; *************** function _IOCBF3_ISR *****************
  8854 ;; Defined at:
  8855 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;		None
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;		None
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      void 
  8862 ;; Registers used:
  8863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8869 ;;      Params:         0       0       0       0       0       0
  8870 ;;      Locals:         0       0       0       0       0       0
  8871 ;;      Temps:          0       0       0       0       0       0
  8872 ;;      Totals:         0       0       0       0       0       0
  8873 ;;Total ram usage:        0 bytes
  8874 ;; Hardware stack levels used: 1
  8875 ;; Hardware stack levels required when called: 4
  8876 ;; This function calls:
  8877 ;;		NULL
  8878 ;;		_IOCBF3_DefaultInterruptHandler
  8879 ;;		_chegadaS1
  8880 ;;		_chegadaS2
  8881 ;; This function is called by:
  8882 ;;		_PIN_MANAGER_IOC
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886     0EB8                     _IOCBF3_ISR:	
  8887                           ;psect for function _IOCBF3_ISR
  8888                           
  8889     0EB8                     i1l3092:	
  8890                           ;incstack = 0
  8891                           ; Regs used in _IOCBF3_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8892                           
  8893                           
  8894                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  8895     0EB8  0021               	movlb	1	; select bank1
  8896     0EB9  083F               	movf	_IOCBF3_InterruptHandler^(0+128),w
  8897     0EBA  0440               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  8898     0EBB  1903               	btfsc	3,2
  8899     0EBC  2EBE               	goto	u181_21
  8900     0EBD  2EBF               	goto	u181_20
  8901     0EBE                     u181_21:
  8902     0EBE  2EC4               	goto	i1l3096
  8903     0EBF                     u181_20:
  8904     0EBF                     i1l3094:
  8905                           
  8906                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  8907     0EBF  0840               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  8908     0EC0  008A               	movwf	10
  8909     0EC1  083F               	movf	_IOCBF3_InterruptHandler^(0+128),w
  8910     0EC2  000A               	callw
  8911     0EC3  318E               	pagesel	$
  8912     0EC4                     i1l3096:
  8913                           
  8914                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  8915     0EC4  0027               	movlb	7	; select bank7
  8916     0EC5  1196               	bcf	22,3	;volatile
  8917     0EC6                     i1l208:
  8918     0EC6  0008               	return
  8919     0EC7                     __end_of_IOCBF3_ISR:
  8920                           
  8921                           	psect	text50
  8922     0790                     __ptext50:	
  8923 ;; *************** function _chegadaS1 *****************
  8924 ;; Defined at:
  8925 ;;		line 166 in file "main.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8939 ;;      Params:         0       0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0
  8942 ;;      Totals:         0       0       0       0       0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used: 1
  8945 ;; Hardware stack levels required when called: 3
  8946 ;; This function calls:
  8947 ;;		_matrixUpdate
  8948 ;; This function is called by:
  8949 ;;		_main
  8950 ;;		_IOCBF3_ISR
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954     0790                     _chegadaS1:	
  8955                           ;psect for function _chegadaS1
  8956                           
  8957     0790                     i1l2938:	
  8958                           ;incstack = 0
  8959                           ; Regs used in _chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8960                           
  8961                           
  8962                           ;main.c: 168:     andarAtual = 0;
  8963     0790  0020               	movlb	0	; select bank0
  8964     0791  01DC               	clrf	_andarAtual
  8965     0792                     i1l2940:
  8966                           
  8967                           ;main.c: 170:     MatrixLed[0] = 0b01111110;
  8968     0792  307E               	movlw	126
  8969     0793  0021               	movlb	1	; select bank1
  8970     0794  00C1               	movwf	_MatrixLed^(0+128)
  8971     0795                     i1l2942:
  8972                           
  8973                           ;main.c: 171:     MatrixLed[1] = 0b10000001;
  8974     0795  3081               	movlw	129
  8975     0796  00C2               	movwf	(_MatrixLed^(0+128)+1)
  8976     0797                     i1l2944:
  8977                           
  8978                           ;main.c: 172:     MatrixLed[2] = 0b10000001;
  8979     0797  3081               	movlw	129
  8980     0798  00C3               	movwf	(_MatrixLed^(0+128)+2)
  8981     0799                     i1l2946:
  8982                           
  8983                           ;main.c: 173:     MatrixLed[3] = 0b01111110;
  8984     0799  307E               	movlw	126
  8985     079A  00C4               	movwf	(_MatrixLed^(0+128)+3)
  8986                           
  8987                           ;main.c: 174:     MatrixLed[4] = 0;
  8988     079B  01C5               	clrf	(_MatrixLed^(0+128)+4)
  8989     079C                     i1l2948:
  8990                           
  8991                           ;main.c: 175:     if(subindo){
  8992     079C  0020               	movlb	0	; select bank0
  8993     079D  0869               	movf	_subindo,w
  8994     079E  1903               	btfsc	3,2
  8995     079F  2FA1               	goto	u176_21
  8996     07A0  2FA2               	goto	u176_20
  8997     07A1                     u176_21:
  8998     07A1  2FAA               	goto	i1l2952
  8999     07A2                     u176_20:
  9000     07A2                     i1l2950:
  9001                           
  9002                           ;main.c: 176:         MatrixLed[5] = 0b01100000;
  9003     07A2  3060               	movlw	96
  9004     07A3  0021               	movlb	1	; select bank1
  9005     07A4  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9006                           
  9007                           ;main.c: 177:         MatrixLed[6] = 0b11000000;
  9008     07A5  30C0               	movlw	192
  9009     07A6  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9010                           
  9011                           ;main.c: 178:         MatrixLed[7] = 0b01100000;
  9012     07A7  3060               	movlw	96
  9013     07A8  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9014                           
  9015                           ;main.c: 179:     }else{
  9016     07A9  2FB5               	goto	i1l2956
  9017     07AA                     i1l2952:
  9018                           
  9019                           ;main.c: 180:         MatrixLed[5] = 0b11000000;
  9020     07AA  30C0               	movlw	192
  9021     07AB  0021               	movlb	1	; select bank1
  9022     07AC  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9023                           
  9024                           ;main.c: 181:         MatrixLed[6] = 0b01100000;
  9025     07AD  3060               	movlw	96
  9026     07AE  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9027                           
  9028                           ;main.c: 182:         MatrixLed[7] = 0b11000000;
  9029     07AF  30C0               	movlw	192
  9030     07B0  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9031     07B1                     i1l2954:
  9032                           
  9033                           ;main.c: 183:         destinoDesc = destinoDesc & 0b11111110;
  9034     07B1  0020               	movlb	0	; select bank0
  9035     07B2  0859               	movf	_destinoDesc,w
  9036     07B3  39FE               	andlw	254
  9037     07B4  00D9               	movwf	_destinoDesc
  9038     07B5                     i1l2956:
  9039                           
  9040                           ;main.c: 185:     matrixUpdate();
  9041     07B5  318F  2784  3187   	fcall	_matrixUpdate
  9042     07B8                     i1l730:
  9043     07B8  0008               	return
  9044     07B9                     __end_of_chegadaS1:
  9045                           
  9046                           	psect	text51
  9047     0DD2                     __ptext51:	
  9048 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9049 ;; Defined at:
  9050 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;		None
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;		None
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1    wreg      void 
  9057 ;; Registers used:
  9058 ;;		None
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9064 ;;      Params:         0       0       0       0       0       0
  9065 ;;      Locals:         0       0       0       0       0       0
  9066 ;;      Temps:          0       0       0       0       0       0
  9067 ;;      Totals:         0       0       0       0       0       0
  9068 ;;Total ram usage:        0 bytes
  9069 ;; Hardware stack levels used: 1
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_PIN_MANAGER_Initialize
  9074 ;;		_IOCBF3_ISR
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078     0DD2                     _IOCBF3_DefaultInterruptHandler:	
  9079                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9080                           
  9081     0DD2                     i1l214:	
  9082                           ;incstack = 0
  9083                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9084                           
  9085     0DD2  0008               	return
  9086     0DD3                     __end_of_IOCBF3_DefaultInterruptHandler:
  9087                           
  9088                           	psect	text52
  9089     06CF                     __ptext52:	
  9090 ;; *************** function _chegadaS2 *****************
  9091 ;; Defined at:
  9092 ;;		line 188 in file "main.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;		None
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;		None
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  1    wreg      void 
  9099 ;; Registers used:
  9100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9106 ;;      Params:         0       0       0       0       0       0
  9107 ;;      Locals:         0       0       0       0       0       0
  9108 ;;      Temps:          0       0       0       0       0       0
  9109 ;;      Totals:         0       0       0       0       0       0
  9110 ;;Total ram usage:        0 bytes
  9111 ;; Hardware stack levels used: 1
  9112 ;; Hardware stack levels required when called: 3
  9113 ;; This function calls:
  9114 ;;		_matrixUpdate
  9115 ;; This function is called by:
  9116 ;;		_main
  9117 ;;		_IOCBF3_ISR
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121     06CF                     _chegadaS2:	
  9122                           ;psect for function _chegadaS2
  9123                           
  9124     06CF                     i1l2958:	
  9125                           ;incstack = 0
  9126                           ; Regs used in _chegadaS2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9127                           
  9128                           
  9129                           ;main.c: 190:     andarAtual = 1;
  9130     06CF  0020               	movlb	0	; select bank0
  9131     06D0  01DC               	clrf	_andarAtual
  9132     06D1  0ADC               	incf	_andarAtual,f
  9133     06D2                     i1l2960:
  9134                           
  9135                           ;main.c: 192:     MatrixLed[0] = 0b00000000;
  9136     06D2  0021               	movlb	1	; select bank1
  9137     06D3  01C1               	clrf	_MatrixLed^(0+128)
  9138     06D4                     i1l2962:
  9139                           
  9140                           ;main.c: 193:     MatrixLed[1] = 0b01000001;
  9141     06D4  3041               	movlw	65
  9142     06D5  00C2               	movwf	(_MatrixLed^(0+128)+1)
  9143     06D6                     i1l2964:
  9144                           
  9145                           ;main.c: 194:     MatrixLed[2] = 0b11111111;
  9146     06D6  30FF               	movlw	255
  9147     06D7  00C3               	movwf	(_MatrixLed^(0+128)+2)
  9148     06D8                     i1l2966:
  9149                           
  9150                           ;main.c: 195:     MatrixLed[3] = 0b00000001;
  9151     06D8  01C4               	clrf	(_MatrixLed^(0+128)+3)
  9152     06D9  0AC4               	incf	(_MatrixLed^(0+128)+3),f
  9153                           
  9154                           ;main.c: 196:     MatrixLed[4] = 0;
  9155     06DA  01C5               	clrf	(_MatrixLed^(0+128)+4)
  9156     06DB                     i1l2968:
  9157                           
  9158                           ;main.c: 197:     if(subindo){
  9159     06DB  0020               	movlb	0	; select bank0
  9160     06DC  0869               	movf	_subindo,w
  9161     06DD  1903               	btfsc	3,2
  9162     06DE  2EE0               	goto	u177_21
  9163     06DF  2EE1               	goto	u177_20
  9164     06E0                     u177_21:
  9165     06E0  2EED               	goto	i1l2974
  9166     06E1                     u177_20:
  9167     06E1                     i1l2970:
  9168                           
  9169                           ;main.c: 198:         MatrixLed[5] = 0b01100000;
  9170     06E1  3060               	movlw	96
  9171     06E2  0021               	movlb	1	; select bank1
  9172     06E3  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9173                           
  9174                           ;main.c: 199:         MatrixLed[6] = 0b11000000;
  9175     06E4  30C0               	movlw	192
  9176     06E5  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9177                           
  9178                           ;main.c: 200:         MatrixLed[7] = 0b01100000;
  9179     06E6  3060               	movlw	96
  9180     06E7  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9181     06E8                     i1l2972:
  9182                           
  9183                           ;main.c: 201:         destinoSub = destinoSub & 0b11111101;
  9184     06E8  0020               	movlb	0	; select bank0
  9185     06E9  085A               	movf	_destinoSub,w
  9186     06EA  39FD               	andlw	253
  9187     06EB  00DA               	movwf	_destinoSub
  9188                           
  9189                           ;main.c: 202:     }else{
  9190     06EC  2EF8               	goto	i1l2978
  9191     06ED                     i1l2974:
  9192                           
  9193                           ;main.c: 203:         MatrixLed[5] = 0b11000000;
  9194     06ED  30C0               	movlw	192
  9195     06EE  0021               	movlb	1	; select bank1
  9196     06EF  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9197                           
  9198                           ;main.c: 204:         MatrixLed[6] = 0b01100000;
  9199     06F0  3060               	movlw	96
  9200     06F1  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9201                           
  9202                           ;main.c: 205:         MatrixLed[7] = 0b11000000;
  9203     06F2  30C0               	movlw	192
  9204     06F3  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9205     06F4                     i1l2976:
  9206                           
  9207                           ;main.c: 206:         destinoDesc = destinoDesc & 0b11111101;
  9208     06F4  0020               	movlb	0	; select bank0
  9209     06F5  0859               	movf	_destinoDesc,w
  9210     06F6  39FD               	andlw	253
  9211     06F7  00D9               	movwf	_destinoDesc
  9212     06F8                     i1l2978:
  9213                           
  9214                           ;main.c: 208:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9215     06F8  0021               	movlb	1	; select bank1
  9216     06F9  0848               	movf	(_MatrixLed^(0+128)+7),w
  9217     06FA  0020               	movlb	0	; select bank0
  9218     06FB  045A               	iorwf	_destinoSub,w
  9219     06FC  0021               	movlb	1	; select bank1
  9220     06FD  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9221     06FE                     i1l2980:
  9222                           
  9223                           ;main.c: 209:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9224     06FE  0847               	movf	(_MatrixLed^(0+128)+6),w
  9225     06FF  0020               	movlb	0	; select bank0
  9226     0700  0459               	iorwf	_destinoDesc,w
  9227     0701  0021               	movlb	1	; select bank1
  9228     0702  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9229     0703                     i1l2982:
  9230                           
  9231                           ;main.c: 210:     matrixUpdate();
  9232     0703  318F  2784  3186   	fcall	_matrixUpdate
  9233     0706                     i1l735:
  9234     0706  0008               	return
  9235     0707                     __end_of_chegadaS2:
  9236                           
  9237                           	psect	text53
  9238     0EA9                     __ptext53:	
  9239 ;; *************** function _IOCBF0_ISR *****************
  9240 ;; Defined at:
  9241 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		wreg, status,2, status,0, pclath, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9255 ;;      Params:         0       0       0       0       0       0
  9256 ;;      Locals:         0       0       0       0       0       0
  9257 ;;      Temps:          0       0       0       0       0       0
  9258 ;;      Totals:         0       0       0       0       0       0
  9259 ;;Total ram usage:        0 bytes
  9260 ;; Hardware stack levels used: 1
  9261 ;; Hardware stack levels required when called: 1
  9262 ;; This function calls:
  9263 ;;		NULL
  9264 ;;		_IOCBF0_DefaultInterruptHandler
  9265 ;; This function is called by:
  9266 ;;		_PIN_MANAGER_IOC
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270     0EA9                     _IOCBF0_ISR:	
  9271                           ;psect for function _IOCBF0_ISR
  9272                           
  9273     0EA9                     i1l3086:	
  9274                           ;incstack = 0
  9275                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9276                           
  9277                           
  9278                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
  9279     0EA9  0020               	movlb	0	; select bank0
  9280     0EAA  0867               	movf	_IOCBF0_InterruptHandler,w
  9281     0EAB  0468               	iorwf	_IOCBF0_InterruptHandler+1,w
  9282     0EAC  1903               	btfsc	3,2
  9283     0EAD  2EAF               	goto	u180_21
  9284     0EAE  2EB0               	goto	u180_20
  9285     0EAF                     u180_21:
  9286     0EAF  2EB5               	goto	i1l3090
  9287     0EB0                     u180_20:
  9288     0EB0                     i1l3088:
  9289                           
  9290                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
  9291     0EB0  0868               	movf	_IOCBF0_InterruptHandler+1,w
  9292     0EB1  008A               	movwf	10
  9293     0EB2  0867               	movf	_IOCBF0_InterruptHandler,w
  9294     0EB3  000A               	callw
  9295     0EB4  318E               	pagesel	$
  9296     0EB5                     i1l3090:
  9297                           
  9298                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
  9299     0EB5  0027               	movlb	7	; select bank7
  9300     0EB6  1016               	bcf	22,0	;volatile
  9301     0EB7                     i1l198:
  9302     0EB7  0008               	return
  9303     0EB8                     __end_of_IOCBF0_ISR:
  9304                           
  9305                           	psect	text54
  9306     0DD1                     __ptext54:	
  9307 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  9308 ;; Defined at:
  9309 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;		None
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;		None
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  1    wreg      void 
  9316 ;; Registers used:
  9317 ;;		None
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9323 ;;      Params:         0       0       0       0       0       0
  9324 ;;      Locals:         0       0       0       0       0       0
  9325 ;;      Temps:          0       0       0       0       0       0
  9326 ;;      Totals:         0       0       0       0       0       0
  9327 ;;Total ram usage:        0 bytes
  9328 ;; Hardware stack levels used: 1
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_PIN_MANAGER_Initialize
  9333 ;;		_IOCBF0_ISR
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337     0DD1                     _IOCBF0_DefaultInterruptHandler:	
  9338                           ;psect for function _IOCBF0_DefaultInterruptHandler
  9339                           
  9340     0DD1                     i1l204:	
  9341                           ;incstack = 0
  9342                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  9343                           
  9344     0DD1  0008               	return
  9345     0DD2                     __end_of_IOCBF0_DefaultInterruptHandler:
  9346                           
  9347                           	psect	text55
  9348     0DE7                     __ptext55:	
  9349 ;; *************** function _CMP2_ISR *****************
  9350 ;; Defined at:
  9351 ;;		line 86 in file "mcc_generated_files/cmp2.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;		None
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;		None
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  1    wreg      void 
  9358 ;; Registers used:
  9359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9365 ;;      Params:         0       0       0       0       0       0
  9366 ;;      Locals:         0       0       0       0       0       0
  9367 ;;      Temps:          0       0       0       0       0       0
  9368 ;;      Totals:         0       0       0       0       0       0
  9369 ;;Total ram usage:        0 bytes
  9370 ;; Hardware stack levels used: 1
  9371 ;; Hardware stack levels required when called: 4
  9372 ;; This function calls:
  9373 ;;		_chegadaS4
  9374 ;; This function is called by:
  9375 ;;		_INTERRUPT_InterruptManager
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379     0DE7                     _CMP2_ISR:	
  9380                           ;psect for function _CMP2_ISR
  9381                           
  9382     0DE7                     i1l3204:	
  9383                           ;incstack = 0
  9384                           ; Regs used in _CMP2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9385                           
  9386                           
  9387                           ;mcc_generated_files/cmp2.c: 89:     PIR2bits.C2IF = 0;
  9388     0DE7  0020               	movlb	0	; select bank0
  9389     0DE8  1312               	bcf	18,6	;volatile
  9390     0DE9                     i1l3206:
  9391                           
  9392                           ;mcc_generated_files/cmp2.c: 90:     chegadaS4();
  9393     0DE9  3186  265D  318D   	fcall	_chegadaS4
  9394     0DEC                     i1l77:
  9395     0DEC  0008               	return
  9396     0DED                     __end_of_CMP2_ISR:
  9397                           
  9398                           	psect	text56
  9399     065D                     __ptext56:	
  9400 ;; *************** function _chegadaS4 *****************
  9401 ;; Defined at:
  9402 ;;		line 238 in file "main.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;		None
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;		None
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      void 
  9409 ;; Registers used:
  9410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9416 ;;      Params:         0       0       0       0       0       0
  9417 ;;      Locals:         0       0       0       0       0       0
  9418 ;;      Temps:          0       0       0       0       0       0
  9419 ;;      Totals:         0       0       0       0       0       0
  9420 ;;Total ram usage:        0 bytes
  9421 ;; Hardware stack levels used: 1
  9422 ;; Hardware stack levels required when called: 3
  9423 ;; This function calls:
  9424 ;;		_matrixUpdate
  9425 ;; This function is called by:
  9426 ;;		_CMP2_ISR
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430     065D                     _chegadaS4:	
  9431                           ;psect for function _chegadaS4
  9432                           
  9433     065D                     i1l3004:	
  9434                           ;incstack = 0
  9435                           ; Regs used in _chegadaS4: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9436                           
  9437                           
  9438                           ;main.c: 240:     andarAtual = 3;
  9439     065D  3003               	movlw	3
  9440     065E  0020               	movlb	0	; select bank0
  9441     065F  00DC               	movwf	_andarAtual
  9442                           
  9443                           ;main.c: 242:     MatrixLed[0] = 0b10000001;
  9444     0660  3081               	movlw	129
  9445     0661  0021               	movlb	1	; select bank1
  9446     0662  00C1               	movwf	_MatrixLed^(0+128)
  9447                           
  9448                           ;main.c: 243:     MatrixLed[1] = 0b10010001;
  9449     0663  3091               	movlw	145
  9450     0664  00C2               	movwf	(_MatrixLed^(0+128)+1)
  9451                           
  9452                           ;main.c: 244:     MatrixLed[2] = 0b10010001;
  9453     0665  3091               	movlw	145
  9454     0666  00C3               	movwf	(_MatrixLed^(0+128)+2)
  9455                           
  9456                           ;main.c: 245:     MatrixLed[3] = 0b01101110;
  9457     0667  306E               	movlw	110
  9458     0668  00C4               	movwf	(_MatrixLed^(0+128)+3)
  9459     0669                     i1l3006:
  9460                           
  9461                           ;main.c: 246:     MatrixLed[4] = 0;
  9462     0669  01C5               	clrf	(_MatrixLed^(0+128)+4)
  9463     066A                     i1l3008:
  9464                           
  9465                           ;main.c: 247:     if(subindo){
  9466     066A  0020               	movlb	0	; select bank0
  9467     066B  0869               	movf	_subindo,w
  9468     066C  1903               	btfsc	3,2
  9469     066D  2E6F               	goto	u178_21
  9470     066E  2E70               	goto	u178_20
  9471     066F                     u178_21:
  9472     066F  2E7C               	goto	i1l3014
  9473     0670                     u178_20:
  9474     0670                     i1l3010:
  9475                           
  9476                           ;main.c: 248:         MatrixLed[5] = 0b01100000;
  9477     0670  3060               	movlw	96
  9478     0671  0021               	movlb	1	; select bank1
  9479     0672  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9480                           
  9481                           ;main.c: 249:         MatrixLed[6] = 0b11000000;
  9482     0673  30C0               	movlw	192
  9483     0674  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9484                           
  9485                           ;main.c: 250:         MatrixLed[7] = 0b01100000;
  9486     0675  3060               	movlw	96
  9487     0676  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9488     0677                     i1l3012:
  9489                           
  9490                           ;main.c: 251:         destinoSub = destinoSub & 0b11110111;
  9491     0677  0020               	movlb	0	; select bank0
  9492     0678  085A               	movf	_destinoSub,w
  9493     0679  39F7               	andlw	247
  9494     067A  00DA               	movwf	_destinoSub
  9495                           
  9496                           ;main.c: 252:     }else{
  9497     067B  2E87               	goto	i1l3018
  9498     067C                     i1l3014:
  9499                           
  9500                           ;main.c: 253:         MatrixLed[5] = 0b11000000;
  9501     067C  30C0               	movlw	192
  9502     067D  0021               	movlb	1	; select bank1
  9503     067E  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9504                           
  9505                           ;main.c: 254:         MatrixLed[6] = 0b01100000;
  9506     067F  3060               	movlw	96
  9507     0680  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9508                           
  9509                           ;main.c: 255:         MatrixLed[7] = 0b11000000;
  9510     0681  30C0               	movlw	192
  9511     0682  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9512     0683                     i1l3016:
  9513                           
  9514                           ;main.c: 256:         destinoDesc = destinoDesc & 0b11110111;
  9515     0683  0020               	movlb	0	; select bank0
  9516     0684  0859               	movf	_destinoDesc,w
  9517     0685  39F7               	andlw	247
  9518     0686  00D9               	movwf	_destinoDesc
  9519     0687                     i1l3018:
  9520                           
  9521                           ;main.c: 258:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9522     0687  0021               	movlb	1	; select bank1
  9523     0688  0848               	movf	(_MatrixLed^(0+128)+7),w
  9524     0689  0020               	movlb	0	; select bank0
  9525     068A  045A               	iorwf	_destinoSub,w
  9526     068B  0021               	movlb	1	; select bank1
  9527     068C  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9528     068D                     i1l3020:
  9529                           
  9530                           ;main.c: 259:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9531     068D  0847               	movf	(_MatrixLed^(0+128)+6),w
  9532     068E  0020               	movlb	0	; select bank0
  9533     068F  0459               	iorwf	_destinoDesc,w
  9534     0690  0021               	movlb	1	; select bank1
  9535     0691  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9536     0692                     i1l3022:
  9537                           
  9538                           ;main.c: 260:     matrixUpdate();
  9539     0692  318F  2784  3186   	fcall	_matrixUpdate
  9540     0695                     i1l745:
  9541     0695  0008               	return
  9542     0696                     __end_of_chegadaS4:
  9543                           
  9544                           	psect	text57
  9545     0DE1                     __ptext57:	
  9546 ;; *************** function _CMP1_ISR *****************
  9547 ;; Defined at:
  9548 ;;		line 86 in file "mcc_generated_files/cmp1.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;		None
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      void 
  9555 ;; Registers used:
  9556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9562 ;;      Params:         0       0       0       0       0       0
  9563 ;;      Locals:         0       0       0       0       0       0
  9564 ;;      Temps:          0       0       0       0       0       0
  9565 ;;      Totals:         0       0       0       0       0       0
  9566 ;;Total ram usage:        0 bytes
  9567 ;; Hardware stack levels used: 1
  9568 ;; Hardware stack levels required when called: 4
  9569 ;; This function calls:
  9570 ;;		_chegadaS3
  9571 ;; This function is called by:
  9572 ;;		_INTERRUPT_InterruptManager
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576     0DE1                     _CMP1_ISR:	
  9577                           ;psect for function _CMP1_ISR
  9578                           
  9579     0DE1                     i1l3208:	
  9580                           ;incstack = 0
  9581                           ; Regs used in _CMP1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9582                           
  9583                           
  9584                           ;mcc_generated_files/cmp1.c: 89:     PIR2bits.C1IF = 0;
  9585     0DE1  0020               	movlb	0	; select bank0
  9586     0DE2  1292               	bcf	18,5	;volatile
  9587     0DE3                     i1l3210:
  9588                           
  9589                           ;mcc_generated_files/cmp1.c: 90:     chegadaS3();
  9590     0DE3  3186  2696  318D   	fcall	_chegadaS3
  9591     0DE6                     i1l140:
  9592     0DE6  0008               	return
  9593     0DE7                     __end_of_CMP1_ISR:
  9594                           
  9595                           	psect	text58
  9596     0696                     __ptext58:	
  9597 ;; *************** function _chegadaS3 *****************
  9598 ;; Defined at:
  9599 ;;		line 213 in file "main.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;		None
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;		None
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      void 
  9606 ;; Registers used:
  9607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9613 ;;      Params:         0       0       0       0       0       0
  9614 ;;      Locals:         0       0       0       0       0       0
  9615 ;;      Temps:          0       0       0       0       0       0
  9616 ;;      Totals:         0       0       0       0       0       0
  9617 ;;Total ram usage:        0 bytes
  9618 ;; Hardware stack levels used: 1
  9619 ;; Hardware stack levels required when called: 3
  9620 ;; This function calls:
  9621 ;;		_matrixUpdate
  9622 ;; This function is called by:
  9623 ;;		_CMP1_ISR
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627     0696                     _chegadaS3:	
  9628                           ;psect for function _chegadaS3
  9629                           
  9630     0696                     i1l3032:	
  9631                           ;incstack = 0
  9632                           ; Regs used in _chegadaS3: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9633                           
  9634                           
  9635                           ;main.c: 215:     andarAtual = 2;
  9636     0696  3002               	movlw	2
  9637     0697  0020               	movlb	0	; select bank0
  9638     0698  00DC               	movwf	_andarAtual
  9639                           
  9640                           ;main.c: 217:     MatrixLed[0] = 0b01000011;
  9641     0699  3043               	movlw	67
  9642     069A  0021               	movlb	1	; select bank1
  9643     069B  00C1               	movwf	_MatrixLed^(0+128)
  9644                           
  9645                           ;main.c: 218:     MatrixLed[1] = 0b10000101;
  9646     069C  3085               	movlw	133
  9647     069D  00C2               	movwf	(_MatrixLed^(0+128)+1)
  9648                           
  9649                           ;main.c: 219:     MatrixLed[2] = 0b10001001;
  9650     069E  3089               	movlw	137
  9651     069F  00C3               	movwf	(_MatrixLed^(0+128)+2)
  9652                           
  9653                           ;main.c: 220:     MatrixLed[3] = 0b01110001;
  9654     06A0  3071               	movlw	113
  9655     06A1  00C4               	movwf	(_MatrixLed^(0+128)+3)
  9656     06A2                     i1l3034:
  9657                           
  9658                           ;main.c: 221:     MatrixLed[4] = 0;
  9659     06A2  01C5               	clrf	(_MatrixLed^(0+128)+4)
  9660     06A3                     i1l3036:
  9661                           
  9662                           ;main.c: 222:     if(subindo){
  9663     06A3  0020               	movlb	0	; select bank0
  9664     06A4  0869               	movf	_subindo,w
  9665     06A5  1903               	btfsc	3,2
  9666     06A6  2EA8               	goto	u179_21
  9667     06A7  2EA9               	goto	u179_20
  9668     06A8                     u179_21:
  9669     06A8  2EB5               	goto	i1l3042
  9670     06A9                     u179_20:
  9671     06A9                     i1l3038:
  9672                           
  9673                           ;main.c: 223:         MatrixLed[5] = 0b01100000;
  9674     06A9  3060               	movlw	96
  9675     06AA  0021               	movlb	1	; select bank1
  9676     06AB  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9677                           
  9678                           ;main.c: 224:         MatrixLed[6] = 0b11000000;
  9679     06AC  30C0               	movlw	192
  9680     06AD  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9681                           
  9682                           ;main.c: 225:         MatrixLed[7] = 0b01100000;
  9683     06AE  3060               	movlw	96
  9684     06AF  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9685     06B0                     i1l3040:
  9686                           
  9687                           ;main.c: 226:         destinoSub = destinoSub & 0b11111011;
  9688     06B0  0020               	movlb	0	; select bank0
  9689     06B1  085A               	movf	_destinoSub,w
  9690     06B2  39FB               	andlw	251
  9691     06B3  00DA               	movwf	_destinoSub
  9692                           
  9693                           ;main.c: 227:     }else{
  9694     06B4  2EC0               	goto	i1l3046
  9695     06B5                     i1l3042:
  9696                           
  9697                           ;main.c: 228:         MatrixLed[5] = 0b11000000;
  9698     06B5  30C0               	movlw	192
  9699     06B6  0021               	movlb	1	; select bank1
  9700     06B7  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9701                           
  9702                           ;main.c: 229:         MatrixLed[6] = 0b01100000;
  9703     06B8  3060               	movlw	96
  9704     06B9  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9705                           
  9706                           ;main.c: 230:         MatrixLed[7] = 0b11000000;
  9707     06BA  30C0               	movlw	192
  9708     06BB  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9709     06BC                     i1l3044:
  9710                           
  9711                           ;main.c: 231:         destinoDesc = destinoDesc & 0b11111011;
  9712     06BC  0020               	movlb	0	; select bank0
  9713     06BD  0859               	movf	_destinoDesc,w
  9714     06BE  39FB               	andlw	251
  9715     06BF  00D9               	movwf	_destinoDesc
  9716     06C0                     i1l3046:
  9717                           
  9718                           ;main.c: 233:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9719     06C0  0021               	movlb	1	; select bank1
  9720     06C1  0848               	movf	(_MatrixLed^(0+128)+7),w
  9721     06C2  0020               	movlb	0	; select bank0
  9722     06C3  045A               	iorwf	_destinoSub,w
  9723     06C4  0021               	movlb	1	; select bank1
  9724     06C5  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9725     06C6                     i1l3048:
  9726                           
  9727                           ;main.c: 234:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9728     06C6  0847               	movf	(_MatrixLed^(0+128)+6),w
  9729     06C7  0020               	movlb	0	; select bank0
  9730     06C8  0459               	iorwf	_destinoDesc,w
  9731     06C9  0021               	movlb	1	; select bank1
  9732     06CA  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9733     06CB                     i1l3050:
  9734                           
  9735                           ;main.c: 235:     matrixUpdate();
  9736     06CB  318F  2784  3186   	fcall	_matrixUpdate
  9737     06CE                     i1l740:
  9738     06CE  0008               	return
  9739     06CF                     __end_of_chegadaS3:
  9740                           
  9741                           	psect	text59
  9742     0F84                     __ptext59:	
  9743 ;; *************** function _matrixUpdate *****************
  9744 ;; Defined at:
  9745 ;;		line 127 in file "main.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;		None
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;  i               1    0        unsigned char 
  9750 ;;  i               1   10[COMMON] unsigned char 
  9751 ;;  index           1    0        unsigned char 
  9752 ;;  data            2    8[COMMON] unsigned char [2]
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1    wreg      void 
  9755 ;; Registers used:
  9756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9762 ;;      Params:         0       0       0       0       0       0
  9763 ;;      Locals:         3       0       0       0       0       0
  9764 ;;      Temps:          0       0       0       0       0       0
  9765 ;;      Totals:         3       0       0       0       0       0
  9766 ;;Total ram usage:        3 bytes
  9767 ;; Hardware stack levels used: 1
  9768 ;; Hardware stack levels required when called: 2
  9769 ;; This function calls:
  9770 ;;		i1_txSpi
  9771 ;; This function is called by:
  9772 ;;		_chegadaS1
  9773 ;;		_chegadaS2
  9774 ;;		_chegadaS3
  9775 ;;		_chegadaS4
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779     0F84                     _matrixUpdate:	
  9780                           ;psect for function _matrixUpdate
  9781                           
  9782     0F84                     i1l2664:	
  9783                           ;incstack = 0
  9784                           ; Regs used in _matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9785                           
  9786                           
  9787                           ;main.c: 130:         for(uint8_t i=8;i>0;i--){
  9788     0F84  3008               	movlw	8
  9789     0F85  00FA               	movwf	matrixUpdate@i
  9790     0F86                     i1l2670:
  9791                           
  9792                           ;main.c: 131:             data[0] = i;
  9793     0F86  087A               	movf	matrixUpdate@i,w
  9794     0F87  00F8               	movwf	matrixUpdate@data
  9795     0F88                     i1l2672:
  9796                           
  9797                           ;main.c: 132:             data[1] = MatrixLed[i-1];
  9798     0F88  087A               	movf	matrixUpdate@i,w
  9799     0F89  3EC0               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
  9800     0F8A  0086               	movwf	6
  9801     0F8B  0187               	clrf	7
  9802     0F8C  0801               	movf	1,w
  9803     0F8D  00F9               	movwf	matrixUpdate@data+1
  9804     0F8E                     i1l2674:
  9805                           
  9806                           ;main.c: 133:             txSpi(data, 2);
  9807     0F8E  3002               	movlw	2
  9808     0F8F  00F5               	movwf	i1txSpi@dataSize
  9809     0F90  3000               	movlw	0
  9810     0F91  00F6               	movwf	i1txSpi@dataSize+1
  9811     0F92  3078               	movlw	(low (matrixUpdate@data| 0))& (0+255)
  9812     0F93  318E  268D  318F   	fcall	i1_txSpi
  9813     0F96                     i1l2676:
  9814                           
  9815                           ;main.c: 134:         }
  9816     0F96  3001               	movlw	1
  9817     0F97  02FA               	subwf	matrixUpdate@i,f
  9818     0F98                     i1l2678:
  9819     0F98  087A               	movf	matrixUpdate@i,w
  9820     0F99  1D03               	btfss	3,2
  9821     0F9A  2F9C               	goto	u132_21
  9822     0F9B  2F9D               	goto	u132_20
  9823     0F9C                     u132_21:
  9824     0F9C  2F86               	goto	i1l2670
  9825     0F9D                     u132_20:
  9826     0F9D                     i1l715:
  9827     0F9D  0008               	return
  9828     0F9E                     __end_of_matrixUpdate:
  9829                           
  9830                           	psect	text60
  9831     0E8D                     __ptext60:	
  9832 ;; *************** function i1_txSpi *****************
  9833 ;; Defined at:
  9834 ;;		line 119 in file "main.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;  data            1    wreg     PTR unsigned char 
  9837 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9838 ;;  dataSize        2    5[COMMON] unsigned int 
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  data            1    7[COMMON] PTR unsigned char 
  9841 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      void 
  9844 ;; Registers used:
  9845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9851 ;;      Params:         2       0       0       0       0       0
  9852 ;;      Locals:         1       0       0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0       0
  9854 ;;      Totals:         3       0       0       0       0       0
  9855 ;;Total ram usage:        3 bytes
  9856 ;; Hardware stack levels used: 1
  9857 ;; Hardware stack levels required when called: 1
  9858 ;; This function calls:
  9859 ;;		i1_SPI1_ExchangeBlock
  9860 ;; This function is called by:
  9861 ;;		_matrixUpdate
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865     0E8D                     i1_txSpi:	
  9866                           ;psect for function i1_txSpi
  9867                           
  9868                           
  9869                           ;incstack = 0
  9870                           ; Regs used in i1_txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9871                           ;i1txSpi@data stored from wreg
  9872     0E8D  00F7               	movwf	i1txSpi@data
  9873     0E8E                     i1l702:	
  9874                           ;main.c: 120:     do { LATBbits.LATB1 = 0; } while(0);
  9875                           
  9876     0E8E  0022               	movlb	2	; select bank2
  9877     0E8F  108D               	bcf	13,1	;volatile
  9878     0E90                     i1l2618:
  9879                           
  9880                           ;main.c: 121:     SPI1_ExchangeBlock(data,dataSize);
  9881     0E90  0876               	movf	i1txSpi@dataSize+1,w
  9882     0E91  00F1               	movwf	i1SPI1_ExchangeBlock@blockSize+1
  9883     0E92  0875               	movf	i1txSpi@dataSize,w
  9884     0E93  00F0               	movwf	i1SPI1_ExchangeBlock@blockSize
  9885     0E94  0877               	movf	i1txSpi@data,w
  9886     0E95  3187  27B9  318E   	fcall	i1_SPI1_ExchangeBlock
  9887     0E98                     i1l2620:
  9888     0E98  0022               	movlb	2	; select bank2
  9889     0E99  148D               	bsf	13,1	;volatile
  9890     0E9A                     i1l706:
  9891     0E9A  0008               	return
  9892     0E9B                     __end_ofi1_txSpi:
  9893                           
  9894                           	psect	text61
  9895     07B9                     __ptext61:	
  9896 ;; *************** function i1_SPI1_ExchangeBlock *****************
  9897 ;; Defined at:
  9898 ;;		line 100 in file "mcc_generated_files/spi1.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;  block           1    wreg     PTR void 
  9901 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9902 ;;  blockSize       2    0[COMMON] unsigned int 
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;  block           1    3[COMMON] PTR void 
  9905 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9906 ;;  data            1    4[COMMON] PTR unsigned char 
  9907 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9917 ;;      Params:         2       0       0       0       0       0
  9918 ;;      Locals:         2       0       0       0       0       0
  9919 ;;      Temps:          1       0       0       0       0       0
  9920 ;;      Totals:         5       0       0       0       0       0
  9921 ;;Total ram usage:        5 bytes
  9922 ;; Hardware stack levels used: 1
  9923 ;; This function calls:
  9924 ;;		Nothing
  9925 ;; This function is called by:
  9926 ;;		i1_txSpi
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930     07B9                     i1_SPI1_ExchangeBlock:	
  9931                           ;psect for function i1_SPI1_ExchangeBlock
  9932                           
  9933                           
  9934                           ;incstack = 0
  9935                           ; Regs used in i1_SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  9936                           ;i1SPI1_ExchangeBlock@block stored from wreg
  9937     07B9  00F3               	movwf	i1SPI1_ExchangeBlock@block
  9938     07BA                     i1l2548:
  9939                           
  9940                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  9941     07BA  0873               	movf	i1SPI1_ExchangeBlock@block,w
  9942     07BB  00F4               	movwf	i1SPI1_ExchangeBlock@data
  9943                           
  9944                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  9945     07BC  2FD3               	goto	i1l2556
  9946     07BD                     i1l2550:
  9947                           
  9948                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  9949     07BD  0874               	movf	i1SPI1_ExchangeBlock@data,w
  9950     07BE  0086               	movwf	6
  9951     07BF  0187               	clrf	7
  9952     07C0  0801               	movf	1,w
  9953     07C1  0024               	movlb	4	; select bank4
  9954     07C2  0091               	movwf	17	;volatile
  9955     07C3                     i1l436:	
  9956                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  9957                           
  9958     07C3  0020               	movlb	0	; select bank0
  9959     07C4  1D91               	btfss	17,3	;volatile
  9960     07C5  2FC7               	goto	u113_21
  9961     07C6  2FC8               	goto	u113_20
  9962     07C7                     u113_21:
  9963     07C7  2FC3               	goto	i1l436
  9964     07C8                     u113_20:
  9965     07C8                     i1l438:
  9966                           
  9967                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  9968     07C8  1191               	bcf	17,3	;volatile
  9969     07C9                     i1l2552:
  9970                           
  9971                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  9972     07C9  0874               	movf	i1SPI1_ExchangeBlock@data,w
  9973     07CA  0086               	movwf	6
  9974     07CB  0187               	clrf	7
  9975     07CC  0024               	movlb	4	; select bank4
  9976     07CD  0811               	movf	17,w	;volatile
  9977     07CE  0081               	movwf	1
  9978     07CF                     i1l2554:
  9979     07CF  3001               	movlw	1
  9980     07D0  00F2               	movwf	??i1_SPI1_ExchangeBlock
  9981     07D1  0872               	movf	??i1_SPI1_ExchangeBlock,w
  9982     07D2  07F4               	addwf	i1SPI1_ExchangeBlock@data,f
  9983     07D3                     i1l2556:
  9984                           
  9985                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  9986     07D3  3001               	movlw	1
  9987     07D4  02F0               	subwf	i1SPI1_ExchangeBlock@blockSize,f
  9988     07D5  3000               	movlw	0
  9989     07D6  3BF1               	subwfb	i1SPI1_ExchangeBlock@blockSize+1,f
  9990     07D7  0A70               	incf	i1SPI1_ExchangeBlock@blockSize,w
  9991     07D8  1D03               	skipz
  9992     07D9  2FDE               	goto	u114_21
  9993     07DA  0A71               	incf	i1SPI1_ExchangeBlock@blockSize+1,w
  9994     07DB  1D03               	btfss	3,2
  9995     07DC  2FDE               	goto	u114_21
  9996     07DD  2FDF               	goto	u114_20
  9997     07DE                     u114_21:
  9998     07DE  2FBD               	goto	i1l2550
  9999     07DF                     u114_20:
 10000     07DF                     i1l440:
 10001     07DF  0008               	return
 10002     07E0                     __end_ofi1_SPI1_ExchangeBlock:
 10003                           
 10004                           	psect	text62
 10005     0EF7                     __ptext62:	
 10006 ;; *************** function _CCP4_CaptureISR *****************
 10007 ;; Defined at:
 10008 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;		None
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  module          2    2[COMMON] struct CCPR4Reg_tag
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  1    wreg      void 
 10015 ;; Registers used:
 10016 ;;		wreg, status,2, status,0, pclath, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10022 ;;      Params:         0       0       0       0       0       0
 10023 ;;      Locals:         2       0       0       0       0       0
 10024 ;;      Temps:          0       0       0       0       0       0
 10025 ;;      Totals:         2       0       0       0       0       0
 10026 ;;Total ram usage:        2 bytes
 10027 ;; Hardware stack levels used: 1
 10028 ;; Hardware stack levels required when called: 1
 10029 ;; This function calls:
 10030 ;;		NULL
 10031 ;;		_CCP4_DefaultCallBack
 10032 ;; This function is called by:
 10033 ;;		_INTERRUPT_InterruptManager
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037     0EF7                     _CCP4_CaptureISR:	
 10038                           ;psect for function _CCP4_CaptureISR
 10039                           
 10040     0EF7                     i1l3260:	
 10041                           ;incstack = 0
 10042                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 10043                           
 10044                           
 10045                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 10046     0EF7  0020               	movlb	0	; select bank0
 10047     0EF8  1293               	bcf	19,5	;volatile
 10048     0EF9                     i1l3262:
 10049                           
 10050                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 10051     0EF9  0026               	movlb	6	; select bank6
 10052     0EFA  0818               	movf	24,w	;volatile
 10053     0EFB  00F2               	movwf	CCP4_CaptureISR@module
 10054                           
 10055                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 10056     0EFC  0819               	movf	25,w	;volatile
 10057     0EFD  00F3               	movwf	CCP4_CaptureISR@module+1
 10058     0EFE                     i1l3264:
 10059                           
 10060                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 10061     0EFE  0873               	movf	CCP4_CaptureISR@module+1,w
 10062     0EFF  00F1               	movwf	CCP4_DefaultCallBack@capturedValue+1
 10063     0F00  0872               	movf	CCP4_CaptureISR@module,w
 10064     0F01  00F0               	movwf	CCP4_DefaultCallBack@capturedValue
 10065     0F02  0021               	movlb	1	; select bank1
 10066     0F03  0836               	movf	(_CCP4_CallBack+1)^(0+128),w
 10067     0F04  008A               	movwf	10
 10068     0F05  0835               	movf	_CCP4_CallBack^(0+128),w
 10069     0F06  000A               	callw
 10070     0F07  318E               	pagesel	$
 10071     0F08                     i1l803:
 10072     0F08  0008               	return
 10073     0F09                     __end_of_CCP4_CaptureISR:
 10074                           
 10075                           	psect	text63
 10076     0DD0                     __ptext63:	
 10077 ;; *************** function _CCP4_DefaultCallBack *****************
 10078 ;; Defined at:
 10079 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;  capturedValu    2    0[COMMON] unsigned short 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;		None
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      void 
 10086 ;; Registers used:
 10087 ;;		None
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10093 ;;      Params:         2       0       0       0       0       0
 10094 ;;      Locals:         0       0       0       0       0       0
 10095 ;;      Temps:          0       0       0       0       0       0
 10096 ;;      Totals:         2       0       0       0       0       0
 10097 ;;Total ram usage:        2 bytes
 10098 ;; Hardware stack levels used: 1
 10099 ;; This function calls:
 10100 ;;		Nothing
 10101 ;; This function is called by:
 10102 ;;		_CCP4_Initialize
 10103 ;;		_CCP4_CaptureISR
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107     0DD0                     _CCP4_DefaultCallBack:	
 10108                           ;psect for function _CCP4_DefaultCallBack
 10109                           
 10110     0DD0                     i1l797:	
 10111                           ;incstack = 0
 10112                           ; Regs used in _CCP4_DefaultCallBack: []
 10113                           
 10114     0DD0  0008               	return
 10115     0DD1                     __end_of_CCP4_DefaultCallBack:
 10116     007E                     btemp	set	126	;btemp
 10117     007E                     int$flags	set	126
 10118     007E                     wtemp0	set	126
 10119                           
 10120                           	psect	idloc
 10121                           
 10122                           ;Config register IDLOC0 @ 0x8000
 10123                           ;	unspecified, using default values
 10124     8000                     	org	32768
 10125     8000  3FFF               	dw	16383
 10126                           
 10127                           ;Config register IDLOC1 @ 0x8001
 10128                           ;	unspecified, using default values
 10129     8001                     	org	32769
 10130     8001  3FFF               	dw	16383
 10131                           
 10132                           ;Config register IDLOC2 @ 0x8002
 10133                           ;	unspecified, using default values
 10134     8002                     	org	32770
 10135     8002  3FFF               	dw	16383
 10136                           
 10137                           ;Config register IDLOC3 @ 0x8003
 10138                           ;	unspecified, using default values
 10139     8003                     	org	32771
 10140     8003  3FFF               	dw	16383
 10141                           
 10142                           	psect	config
 10143                           
 10144                           ;Config register CONFIG1 @ 0x8007
 10145                           ;	Oscillator Selection
 10146                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 10147                           ;	Watchdog Timer Enable
 10148                           ;	WDTE = OFF, WDT disabled
 10149                           ;	Power-up Timer Enable
 10150                           ;	PWRTE = OFF, PWRT disabled
 10151                           ;	MCLR Pin Function Select
 10152                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 10153                           ;	Flash Program Memory Code Protection
 10154                           ;	CP = OFF, Program memory code protection is disabled
 10155                           ;	Data Memory Code Protection
 10156                           ;	CPD = OFF, Data memory code protection is disabled
 10157                           ;	Brown-out Reset Enable
 10158                           ;	BOREN = ON, Brown-out Reset enabled
 10159                           ;	Clock Out Enable
 10160                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 10161                           ;	Internal/External Switchover
 10162                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10163                           ;	Fail-Safe Clock Monitor Enable
 10164                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10165     8007                     	org	32775
 10166     8007  3FE4               	dw	16356
 10167                           
 10168                           ;Config register CONFIG2 @ 0x8008
 10169                           ;	Flash Memory Self-Write Protection
 10170                           ;	WRT = OFF, Write protection off
 10171                           ;	PLL Enable
 10172                           ;	PLLEN = OFF, 4x PLL disabled
 10173                           ;	Stack Overflow/Underflow Reset Enable
 10174                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 10175                           ;	Brown-out Reset Voltage Selection
 10176                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 10177                           ;	Low-Voltage Programming Enable
 10178                           ;	LVP = ON, Low-voltage programming enabled
 10179     8008                     	org	32776
 10180     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    16
    Data        1
    BSS         42
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      74
    BANK1            80     19      41
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    memset@s	PTR unsigned char  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), NULL(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), NULL(), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    txSpi@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), NULL(), 

    SPI1_ExchangeBlock@block	PTR void  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), chegadaS1(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), chegadaS1(), NULL(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), IOCBF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _sendInfo->___flmul
    _bin2bcd->_memset
    ___wmul->_ADC_GetConversion
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _chegadaS2->_matrixUpdate
    _chegadaS1->_matrixUpdate
    _chegadaS4->_matrixUpdate
    _chegadaS3->_matrixUpdate
    _matrixUpdate->i1_txSpi
    i1_txSpi->i1_SPI1_ExchangeBlock
    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->_sendInfo
    _sendInfo->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_initMatrix
    _initMatrix->_txSpi
    _txSpi->_SPI1_ExchangeBlock
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3180
                                             17 BANK1      2     2      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF3_SetInterruptHandler
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                         _initMatrix
                       _isValidFloor
 ---------------------------------------------------------------------------------
 (1) _isValidFloor                                         2     2      0      99
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initMatrix                                           9     9      0    1207
                                              8 BANK1      9     9      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (2) _txSpi                                                3     1      2     626
                                              5 BANK1      3     1      2
                 _SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeBlock                                   5     3      2     256
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1238
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     121
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     301
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     121
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0     124
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    7126
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0       0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR4_CallBack                                        0     0      0       0
                                NULL *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0    5050
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0    5050
                                NULL *
       _TMR0_DefaultInterruptHandler *
                           _sendInfo *
 ---------------------------------------------------------------------------------
 (7) _sendInfo                                             6     6      0    5050
                                             31 BANK0      6     6      0
                  _ADC_GetConversion
                       _EUSART_Write
                            ___flmul
                            ___fltol
                             ___wmul
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (8) _bin2bcd                                             11     9      2    1562
                                             10 COMMON     2     0      2
                                              0 BANK0      9     9      0
                             _memset
 ---------------------------------------------------------------------------------
 (9) _memset                                              10     6      4     904
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              4 COMMON     6     2      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     381
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0     988
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCBF3_ISR                                           0     0      0     988
                                NULL *
     _IOCBF3_DefaultInterruptHandler *
                          _chegadaS1 *
                          _chegadaS2 *
 ---------------------------------------------------------------------------------
 (7) _chegadaS2                                            0     0      0     494
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (7) _chegadaS1                                            0     0      0     494
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF0_ISR                                           0     0      0       0
                                NULL *
     _IOCBF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP2_ISR                                             0     0      0     494
                          _chegadaS4
 ---------------------------------------------------------------------------------
 (6) _chegadaS4                                            0     0      0     494
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (5) _CMP1_ISR                                             0     0      0     494
                          _chegadaS3
 ---------------------------------------------------------------------------------
 (6) _chegadaS3                                            0     0      0     494
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _matrixUpdate                                         5     5      0     494
                                              8 COMMON     3     3      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (9) i1_txSpi                                              3     1      2     212
                                              5 COMMON     3     1      2
               i1_SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (10) i1_SPI1_ExchangeBlock                                5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      2     2      0     100
                                              2 COMMON     2     2      0
                                NULL *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF3_SetInterruptHandler
   _SPI1_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _initMatrix
     _txSpi
       _SPI1_ExchangeBlock
   _isValidFloor

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     NULL(Fake) *
     _CCP4_DefaultCallBack *
   _CMP1_ISR
     _chegadaS3
       _matrixUpdate
         i1_txSpi
           i1_SPI1_ExchangeBlock
   _CMP2_ISR
     _chegadaS4
       _matrixUpdate
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       NULL(Fake) *
       _IOCBF0_DefaultInterruptHandler *
     _IOCBF3_ISR
       NULL(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _chegadaS1 *
         _matrixUpdate
       _chegadaS2 *
         _matrixUpdate
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _sendInfo *
         _ADC_GetConversion
         _EUSART_Write
         ___flmul
           __Umul8_16
         ___fltol
           ___flmul (ARG)
         ___wmul
           _ADC_GetConversion (ARG)
         _bin2bcd
           _memset
   _TMR4_ISR
     _TMR4_CallBack
       NULL(Fake) *
       _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      81       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     25      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     13      29       8       51.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      81      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 17 23:07:28 2023

                              _CCP4_Initialize 0F09               ??_IOCBF3_DefaultInterruptHandler 0070  
              ?_IOCBF3_DefaultInterruptHandler 0070                             _SPI1_ExchangeBlock 0766  
                                           l11 0E45                                             l71 0E72  
                            ??_CMP1_Initialize 00A0                                             _t1 0055  
                                           _t2 0053                         __end_of_FVR_Initialize 0DD8  
                          ___wmul@multiplicand 0076                                _timer0ReloadVal 0057  
                          __Umul8_16@word_mpld 0076                                            l201 0E3C  
                                          l211 0E0A                                            l134 0E66  
                                          l306 0DD7                                            l261 0DDB  
                                          l422 060D                                            l511 0EA8  
                                          l255 0765                                            l360 0DE0  
                                          l352 0FFF                                            l440 078F  
                                          l258 0E23                                            l418 0E5A  
                                          l610 0E10                                            l436 0771  
                                          l373 0ED5                                            l189 0737  
                                          l278 0E2B                                            l550 0E33  
                                          l438 0776                                            l702 0ED8  
                                          l391 0DFE                                            l800 0F1A  
                                          l369 0EC7                                            l394 0E04  
                                          l706 0EE5                                            l397 0DF8  
                                          l725 065C                                            l806 0DF2  
                                          l753 0542                                            l588 0F55  
                                          l829 0F2D                                            l688 0F40  
                                          l857 0E16                                            _PR2 001B  
                                          _PR4 0416                            ?_SPI1_ExchangeBlock 00A0  
                              _timer1ReloadVal 004D                                   _pulsoEncoder 0062  
               ?_EUSART_SetFramingErrorHandler 00A0                                _TMR2_Initialize 0E2C  
               CCP4_SetCallBack@customCallBack 00A0                                            wreg 0009  
                             _CCP4_SetCallBack 0DED                                   ___flmul@aexp 002D  
                                 ___flmul@bexp 002E                        SPI1_ExchangeBlock@block 00A3  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                        __end_of_CCP4_CaptureISR 0F09  
                                 ?_EUSART_Read 0070                                   ___fltol@exp1 003E  
                                         l3600 0E40                                           l3610 0E6E  
                                         l3602 0E41                                           l3620 0E64  
                                         l3612 0E70                                           l3604 0E42  
                                         l3700 0F49                                           l3710 0F0C  
                                         l3614 0E5B                                           l3606 0E67  
                                         l3630 0712                                           l3622 0707  
                                         l3702 0F4B                                           l3720 0E24  
                                         l3712 0F0D                                           l3616 0E5D  
                                         l3608 0E69                                           l3640 0721  
                                         l3632 0714                                           l3624 070A  
                                         l3704 0F4C                                           l3722 0E27  
                                         l3714 0F0E                                           l3618 0E62  
                                         l3650 0726                                           l3642 0722  
                                         l3634 0717                                           l3626 070D  
                                         l3706 0F4D                                           l3730 0E9F  
                                         l3810 0620                                           l3724 0E28  
                                         l3716 0F16                                           l3708 0F09  
                                         l3580 0DF3                                           l3740 0FE4  
                                         l3572 0E34                                           l3652 072E  
                                         l3644 0723                                           l3636 0718  
                                         l3628 070F                                           l3660 0E54  
                                         l3732 0EA1                                           l3804 0611  
                                         l3718 0F18                                           l3742 0FE5  
                                         l3670 0E21                                           l3574 0E05  
                                         l3654 0736                                           l3646 0724  
                                         l3638 071F                                           l3662 0E56  
                                         l3734 0EA2                                           l3726 0E9B  
                                         l3590 0783                                           l3582 0768  
                                         l3750 0EDA                                           l3830 0649  
                                         l3822 0622                                           l3806 0616  
                                         l3760 0EC7                                           l3576 0DF9  
                                         l3744 0FED                                           l3648 0725  
                                         l3664 0E58                                           l3656 0E50  
                                         l3592 0E0B                                           l3736 0EA6  
                                         l3728 0E9D                                           l3680 0F1F  
                                         l3672 0DD8                                           l3584 076B  
                                         l3752 0EE3                                           l3824 063D  
                                         l3816 0621                                           l3808 061A  
                                         l3920 0534                                           l3840 04D7  
                                         l3762 0ECC                                           l3594 0DED  
                                         l3578 0DFF                                           l3746 0FF5  
                                         l3738 0FDB                                           l3674 0DD4  
                                         l3666 0E1D                                           l3658 0E53  
                                         l3690 0E2F                                           l3682 0F21  
                                         l3754 0738                                           l3586 0777  
                                         l3834 0651                                           l3826 0640  
                                         l3850 04E2                                           l3842 04D9  
                                         l3764 0ECD                                           l3756 0DDC  
                                         l3780 05F4                                           l3772 05B8  
                                         l3748 0FFD                                           l3668 0E20  
                                         l3692 0E30                                           l3596 0E11  
                                         l3684 0F23                                           l3676 0F1B  
                                         l3588 077E                                           l3836 0656  
                                         l3828 0646                                           l3860 0504  
                                         l3852 04EA                                           l3844 04DD  
                                         l3766 0ED2                                           l3782 060B  
                                         l3774 05BD                                           l3598 0E3D  
                                         l3694 0E31                                           l3686 0F2A  
                                         l3678 0F1E                                           l3790 0F37  
                                         l3870 051C                                           l3862 0508  
                                         l3854 04F0                                           l3846 04E0  
                                         l3838 04BC                                           l3768 0ED4  
                                         l3776 05E1                                           l3696 0F41  
                                         l3688 0E2C                                           l3792 0F3D  
                                         l3864 050B                                           l3856 04F7  
                                         l3848 04E1                                           l3778 05E2  
                                         l3698 0F46                                           l3794 0F3F  
                                         l3786 0F30                                           l3874 051F  
                                         l3866 050E                                           l3858 04FA  
                                         l3882 052B                                           l3788 0F31  
                                         l3876 0526                                           l3868 0518  
                                         l3798 060E                                  ?_isValidFloor 0070  
                                         _LATA 010C                                           _LATB 010D  
                                         u2420 0776                                           u2500 0646  
                                         u2421 0775                                           u2501 0645  
                                         u2430 078F                                           u2510 065C  
                                         u2431 078E                                           u2511 065B  
                                         u2440 0ECC                                           u2520 04EA  
                                         u2441 0ECB                                           u2521 04E9  
                                         u2450 0ED2                                           u2530 04F7  
                                         u2451 0ED1                                           u2531 04F6  
                                         u2460 05BD                                           u2540 0504  
                                         u2461 05BC                                           u2541 0503  
                                         u2470 0F37                                           u2550 0518  
                                         u2471 0F36                                           u2551 0517  
                                         u2480 0F3D                                           u2560 0526  
                                         u2481 0F3C                                           u2561 0525  
                                         u2490 0620                              ??_CMP2_Initialize 00A0  
                                         u2491 061F                                           i1l77 0DEC  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _WPUA 020C  
                                         _WPUB 020D                                           _flag 0061  
                                         _main 04BC                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                         ??_SPI1_ExchangeBlock 00A2                      i1SPI1_ExchangeBlock@block 0073  
                                         start 0056                                __end_ofi1_txSpi 0E9B  
                             __end_of_CMP1_ISR 0DE7                               __end_of_CMP2_ISR 0DED  
                   ??_TMR4_SetInterruptHandler 00A2                        __end_of_TMR0_Initialize 0F56  
               ??_TMR0_DefaultInterruptHandler 0070                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0E24  
                            isValidFloor@floor 00A1                                  ___fltol@sign1 003D  
                                        ?_main 0070                         ??_CCP4_DefaultCallBack 0072  
                              __end_of___flmul 02AB               SPI1_Open@spi1UniqueConfiguration 00A3  
                              __end_of___fltol 05B6                                          _T1CON 0018  
                                        _T2CON 001C                                __end_of_bin2bcd 042C  
                                        _T4CON 0417                                          i1l140 0DE6  
                                        i1l204 0DD1                                          i1l214 0DD2  
                                        i1l208 0EC6                                          i1l440 07DF  
                                        i1l194 0EF6                                          i1l603 0F83  
                                        i1l436 07C3                                          i1l293 0FAF  
                                        i1l613 0DD3                                          i1l438 07C8  
                                        i1l702 0E8E                                          i1l198 0EB7  
                                        i1l607 0E7F                                          i1l296 0FB7  
                                        i1l376 0E47                                          i1l706 0E9A  
                                        i1l730 07B8                                          i1l803 0F08  
                                        i1l715 0F9D                                          i1l379 0E4F  
                                        i1l740 06CE                                          i1l492 0054  
                                        i1l735 0706                                          i1l745 0695  
                                        i1l850 0F6B                                          i1l691 0399  
                                        i1l780 042B                                          i1l860 0002  
                                        i1l854 0E8C                                          i1l776 03BF  
                                        i1l777 03D2                                          i1l778 03E4  
                                        i1l779 03F7                                          i1l797 0DD0  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                   _RXaccepted 0063                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0F1B  
                    ?_TMR0_SetInterruptHandler 00A0                               __end_of_TMR0_ISR 0F84  
                                        _dTemp 005D                               __end_of_TMR4_ISR 0F6C  
                                        _oTemp 005F                        __end_of_PIN_MANAGER_IOC 0EF7  
                               _WDT_Initialize 0DD8                                 ??_isValidFloor 00A0  
                                        _txSpi 0ED6                                          _state 0066  
                      __end_of_PWM3_Initialize 0E46                        __end_of_TMR1_Initialize 0EA9  
                                        pclath 000A                                          status 0003  
                      __end_of_CCP4_Initialize 0F1B                                          wtemp0 007E  
                                txSpi@dataSize 00A5                                __initialization 0058  
                                 __end_of_main 0545                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 0E34                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00B1                        _IOCBF0_InterruptHandler 0067  
                       __end_of_WDT_Initialize 0DDC                               ?_CCP4_CaptureISR 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00BB  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR3H 0312                                         _CCPR4H 0319  
                                       _CCPR3L 0311                                         _CCPR4L 0318  
                                       ?_txSpi 00A5                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0DE1  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1010 07EA                                         i1l1012 07FE  
                                       i1l1211 05A0                                         i1l1204 05B5  
                                       i1l1214 05B5                                         i1l3010 0670  
                                       i1l3020 068D                                         i1l3012 0677  
                                       i1l3004 065D                                         i1l1413 022A  
                                       i1l3022 0692                                         i1l3014 067C  
                                       i1l3006 0669                                         i1l1407 02AA  
                                       i1l3040 06B0                                         i1l3032 0696  
                                       i1l3016 0683                                         i1l3008 066A  
                                       u120_20 0FC6                                         i1l3200 0E80  
                                       u200_20 0019                                         u120_21 0FC5  
                                       u200_21 0018                                         i1l3050 06CB  
                                       i1l3042 06B5                                         i1l3034 06A2  
                                       i1l3210 0DE3                                         i1l3018 0687  
                                       i1l1426 0FCA                                         i1l3202 0E87  
                                       i1l1419 029E                                         i1l3044 06BC  
                                       i1l3036 06A3                                         i1l3204 0DE7  
                                       i1l3212 0EE6                                         i1l1428 0FDA  
                                       i1l3046 06C0                                         i1l3038 06A9  
                                       i1l3206 0DE9                                         i1l3214 0EEB  
                                       i1l1470 04BB                                         u113_20 07C8  
                                       i1l3048 06C6                                         i1l3208 0DE1  
                                       i1l3216 0EEE                                         i1l2600 04B1  
                                       u201_20 0020                                         u113_21 07C7  
                                       u201_21 001F                                         i1l3090 0EB5  
                                       i1l3218 0EF3                                         i1l2610 0FC6  
                                       i1l2602 04B5                                         i1l3260 0EF7  
                                       i1l2620 0E98                                         i1l3092 0EB8  
                                       i1l2612 0FD1                                         i1l2604 0FB9  
                                       i1l2700 07E2                                         i1l3252 0F6C  
                                       i1l3340 0006                                         u121_25 0FCB  
                                       i1l3262 0EF9                                         i1l2550 07BD  
                                       i1l3086 0EA9                                         i1l3094 0EBF  
                                       i1l2630 0FB3                                         i1l2622 0F9F  
                                       i1l2614 0FD6                                         i1l2606 0FBB  
                                       i1l2702 07E6                                         i1l3254 0F6D  
                                       i1l3270 0F65                                         i1l3350 0019  
                                       i1l3342 000A                                         i1l3264 0EFE  
                                       u114_20 07DF                                         i1l2552 07C9  
                                       i1l3088 0EB0                                         i1l3096 0EC4  
                                       i1l2624 0FA9                                         u122_20 0FD6  
                                       i1l2608 0FC2                                         i1l2800 010F  
                                       i1l2720 0569                                         i1l2712 0545  
                                       i1l2704 07EF                                         i1l2560 042F  
                                       u130_20 0418                                         i1l2640 03A5  
                                       i1l3192 0E73                                         i1l3256 0F7D  
                                       i1l3272 0F68                                         i1l3360 002D  
                                       u202_20 0025                                         i1l3352 001C  
                                       i1l3344 000E                                         u114_21 07DE  
                                       u122_21 0FD5                                         u130_21 0417  
                                       u202_21 0024                                         i1l2554 07CF  
                                       i1l2618 0E90                                         i1l2626 0FAA  
                                       i1l2634 0E47                                         i1l2810 0153  
                                       i1l2802 0127                                         i1l2722 056A  
                                       i1l2714 054F                                         i1l2706 07F4  
                                       i1l2650 03B6                                         i1l2642 03AC  
                                       i1l3194 0E7A                                         i1l3258 0F80  
                                       i1l3266 0F56                                         i1l3370 0044  
                                       i1l3362 0032                                         i1l3354 0020  
                                       i1l3346 0011                                         i1l2556 07D3  
                                       i1l2548 07BA                                         i1l2628 0FAD  
                                       i1l2636 0E4C                                         i1l2820 0185  
                                       i1l2812 015A                                         i1l2804 0134  
                                       i1l2724 0572                                         i1l2708 07FA  
                                       i1l2580 046B                                         i1l2572 044E  
                                       i1l2564 0436                                         i1l2660 0418  
                                       i1l2652 03C8                                         i1l3268 0F58  
                                       i1l3372 0047                                         i1l3364 0037  
                                       i1l3356 0025                                         i1l3348 0015  
                                       i1l2670 0F86                                         i1l2830 01E0  
                                       i1l2822 0197                                         i1l2814 0165  
                                       i1l2806 0141                                         i1l2750 0074  
                                       i1l2742 0597                                         i1l2734 0580  
                                       i1l2726 0574                                         i1l2718 0558  
                                       i1l2590 048E                                         i1l2574 0453  
                                       i1l2566 043B                                         i1l2558 042D  
                                       i1l2654 03DB                                         i1l2638 039A  
                                       i1l2910 02AB                                         i1l3374 004C  
                                       i1l3366 003A                                         i1l3358 002A  
                                       i1l2672 0F88                                         i1l2664 0F84  
                                       u123_20 0FB3                                         i1l2840 01FF  
                                       i1l2832 01E7                                         i1l2824 01A2  
                                       i1l2816 016C                                         i1l2808 0148  
                                       i1l2760 0085                                         i1l2752 0076  
                                       i1l2744 05A5                                         i1l2728 0578  
                                       i1l2736 0590                                         i1l2592 049F  
                                       i1l2584 0475                                         i1l2576 0459  
                                       i1l2568 0444                                         u115_20 0435  
                                       u131_20 0425                                         i1l2656 03ED  
                                       i1l2648 03AD                                         i1l2920 033C  
                                       i1l2912 0318                                         i1l3376 0051  
                                       i1l3368 003F                                         u203_20 002A  
                                       u123_21 0FB2                                         u115_21 0434  
                                       u203_21 0029                                         i1l2674 0F8E  
                                       i1l2850 0213                                         i1l2842 0206  
                                       i1l2834 01F3                                         i1l2826 01B4  
                                       i1l2818 017E                                         i1l2770 009E  
                                       i1l2762 008D                                         i1l2754 007A  
                                       i1l2746 05AA                                         i1l2594 04A3  
                                       i1l2586 0484                                         i1l2578 0462  
                                       i1l2658 0412                                         i1l2930 0383  
                                       i1l2922 0340                                         i1l2914 0328  
                                       i1l2676 0F96                                         i1l2940 0792  
                                       i1l2860 023C                                         i1l2852 0227  
                                       i1l2836 01FA                                         i1l2844 020A  
                                       i1l2828 01C9                                         i1l2780 00B5  
                                       i1l2772 00A2                                         i1l2764 008F  
                                       i1l2756 007B                                         i1l2748 0070  
                                       i1l2596 04A8                                         i1l2932 038A  
                                       i1l2924 0369                                         i1l2916 032E  
                                       u131_25 0421                                         i1l2678 0F98  
                                       i1l2950 07A2                                         i1l2942 0795  
                                       i1l2870 0273                                         i1l2862 0240  
                                       i1l2846 020E                                         i1l2838 01FE  
                                       i1l2782 00B7                                         i1l2774 00A3  
                                       i1l2766 0097                                         i1l2758 0080  
                                       i1l2598 04AD                                         i1l2934 038E  
                                       i1l2926 0376                                         i1l2918 0335  
                                       u132_20 0F9D                                         i1l2960 06D2  
                                       i1l2952 07AA                                         i1l2944 0797  
                                       u124_20 0E4C                                         i1l2880 029B  
                                       i1l2872 0281                                         i1l2864 0258  
                                       i1l2856 022F                                         i1l2848 020F  
                                       i1l2792 00D2                                         i1l2784 00BF  
                                       i1l2776 00A8                                         i1l2768 009C  
                                       u140_20 057F                                         u116_20 044D  
                                       i1l2936 0395                                         i1l2928 037C  
                                       u204_20 0032                                         u132_21 0F9C  
                                       u124_21 0E4B                                         u140_21 057E  
                                       u116_21 044C                                         u204_21 0031  
                                       i1l2970 06E1                                         i1l2962 06D4  
                                       i1l2954 07B1                                         i1l2946 0799  
                                       i1l2938 0790                                         i1l2882 029C  
                                       i1l2874 028A                                         i1l2858 0234  
                                       i1l2866 025C                                         i1l2794 00DD  
                                       i1l2786 00C4                                         i1l2778 00AD  
                                       i1l2698 07E0                                         i1l2980 06FE  
                                       i1l2972 06E8                                         i1l2964 06D6  
                                       i1l2956 07B5                                         i1l2948 079C  
                                       i1l2884 02A2                                         i1l2876 028C  
                                       i1l2868 0269                                         i1l2796 00EA  
                                       i1l2788 00C9                                         i1l2982 0703  
                                       i1l2974 06ED                                         i1l2966 06D8  
                                       i1l2958 06CF                                         i1l2878 0297  
                                       i1l2798 0102                                         i1l2976 06F4  
                                       i1l2968 06DB                                         u133_20 07E6  
                                       u117_20 0474                                         u125_20 03B6  
                                       u205_20 0037                                         u133_21 07E5  
                                       u117_21 0473                                         u125_21 03B5  
                                       u205_21 0036                                         i1l2978 06F8  
                                       u141_25 0581                                         u150_20 00A2  
                                       u142_20 058F                                         u118_20 048D  
                                       u126_20 03C8                                         u206_20 003F  
                                       u150_21 00A1                                         u142_21 058E  
                                       u118_21 048C                                         u126_21 03C7  
                                       u206_21 003E                                         u134_25 07EB  
                                       u151_20 00A8                                         u143_20 0596  
                                       u119_20 04BB                                         u127_20 03DB  
                                       u207_20 0044                                         u151_21 00A7  
                                       u143_21 0595                                         u119_21 04BA  
                                       u127_21 03DA                                         u207_21 0043  
                                       u135_25 07F0                                         u152_20 00AD  
                                       u136_20 07FA                                         u128_20 03ED  
                                       u208_20 004C                                         u152_21 00AC  
                                       u136_21 07F9                                         u128_21 03EC  
                                       u208_21 004B                                         u160_25 01F4  
                                       u144_25 0598                                    initMatrix@i 00AE  
                                  initMatrix@j 00B0                                         u161_20 01FE  
                                       u153_20 00C4                                         u145_20 05A5  
                                       u137_20 054F                                         u129_20 0404  
                                       u209_20 0051                                    initMatrix@k 00AD  
                                       u161_21 01FD                                         u153_21 00C3  
                                       u145_21 05A4                                         u137_21 054E  
                                       u209_21 0050                                         u129_25 0400  
                                       u170_20 0269                                         u154_20 00C9  
                                       u146_20 05AA                                         u138_20 0565  
                                       u170_21 0268                                         u154_21 00C8  
                                       u146_21 05A9                                         u170_25 0265  
                                       u162_25 0200                                         u138_25 0561  
                                       u171_20 0281                                         u163_20 020E  
                                       u147_20 007A                                         u139_20 0578  
                                       _FVRCON 0117                                         u171_21 0280  
                                       u163_21 020D                                         u147_21 0079  
                                       u139_21 0577                                         u171_25 027D  
                                       u155_25 0142                                         u180_20 0EB0  
                                       u172_20 029B                                         u164_20 0213  
                                       u148_20 0080                                         u180_21 0EAF  
                                       u172_21 029A                                         u164_21 0212  
                                       u148_21 007F                                         u156_25 016D  
                                       u181_20 0EBF                                         u165_20 0227  
                                       u157_20 01BF                                         u149_20 0085  
                                       u181_21 0EBE                                         u165_21 0226  
                                       u149_21 0084                                         u157_25 01BB  
                                       u166_20 022E                                         u158_20 01D6  
                                       u182_20 0E7A                                         u190_20 0F65  
                                       u166_21 022D                                         u182_21 0E79  
                                       u190_21 0F64                                         u158_25 01D2  
                                       u167_20 0234                                         u183_20 0E87  
                                       u167_21 0233                                         u183_21 0E86  
                                       u159_25 01E1                                         u175_25 02DA  
                                       u176_20 07A2                                         u184_20 0EEB  
                                       u168_20 0240                                         u176_21 07A1  
                                       u184_21 0EEA                                         u168_21 023F  
                                       u177_20 06E1                                         u185_20 0EF3  
                                       u169_20 024E                                         u177_21 06E0  
                                       u185_21 0EF2                                         u169_25 024A  
                                       u178_20 0670                                         u178_21 066F  
                                       u179_20 06A9                                         u179_21 06A8  
                                       u189_20 0F7D                                         u197_20 000A  
                                       u189_21 0F7C                                         u197_21 0009  
                                       u198_20 000E                                         u198_21 000D  
                                       u199_20 0015                                         u199_21 0014  
                                       _OSCCON 0099                                      ??i1_txSpi 0077  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                              __end_of_SPI1_Open 060E  
                                 _CCPTMRS0bits 029E                                         ___wmul 07E0  
                                    ??___flmul 0079                                      ??___fltol 0039  
                                    ??_bin2bcd 0020                                         _altura 005B  
                                ?_matrixUpdate 0070                               ?_TMR0_Initialize 0070  
                                       _memset 042C                        __end_of_TMR4_Initialize 0F2E  
                                       _waitRX 0064                                         _origem 0060  
                                _CCP4_CallBack 00B5                               __end_of_sendInfo 039A  
         __end_of_TMR4_DefaultInterruptHandler 0003                   _TMR4_DefaultInterruptHandler 0002  
                              ?_WDT_Initialize 0070                       i1SPI1_ExchangeBlock@data 0074  
                     ADC_GetConversion@channel 0073                                      ?_CMP1_ISR 0070  
                        __end_of_TMR0_CallBack 0E80                                      ?_CMP2_ISR 0070  
     TMR4_SetInterruptHandler@InterruptHandler 00A0       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCBF3_SetInterruptHandler@InterruptHandler 00A0     IOCBF0_SetInterruptHandler@InterruptHandler 00A0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCBF0_ISR 0070  
                                 ??_IOCBF3_ISR 007B                               ?_PWM3_Initialize 0070  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0738  
                      __end_of__initialization 006C                               ?_CCP4_Initialize 0070  
                              _CMP1_Initialize 0E5B                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0035                       __end_of_CCP4_SetCallBack 0DF3  
                                  i1txSpi@data 0077                                 __pcstackCOMMON 0070  
                        __end_of_TMR4_CallBack 0E8D                                   __pidataBANK0 0003  
                          ??_SYSTEM_Initialize 00A2                                      ?_TMR0_ISR 0070  
                              i1txSpi@dataSize 0075                                 ??_matrixUpdate 0078  
                                    ?_TMR4_ISR 0070                           __end_of_isValidFloor 0F41  
                            ??_SPI1_Initialize 00A0         __end_of_IOCBF0_DefaultInterruptHandler 0DD2  
               _IOCBF0_DefaultInterruptHandler 0DD1                                  __end_of_txSpi 0EE6  
                             ?_TMR2_Initialize 0070                             __end_of_IOCBF0_ISR 0EB8  
                           __end_of_IOCBF3_ISR 0EC7                                _CMP2_Initialize 0E67  
                           _spi1_configuration 080B                                   bin2bcd@dataU 0025  
                               _OPTION_REGbits 0095                          TMR0_ISR@CountCallBack 004B  
                ?_TMR4_DefaultInterruptHandler 0070                ??_EUSART_SetOverrunErrorHandler 00A2  
       __end_of_IOCBF3_DefaultInterruptHandler 0DD3                 _IOCBF3_DefaultInterruptHandler 0DD2  
                                   ??_CMP1_ISR 007B                                     ??_CMP2_ISR 007B  
                    __end_of_SYSTEM_Initialize 0766                                        ??_txSpi 00A7  
                                   __pbssBANK0 0045                                     __pbssBANK1 00C1  
                         __end_of_EUSART_Write 0E50                                     _andarAtual 005C  
                        _TMR4_InterruptHandler 00B3                              __end_of__Umul8_16 0FDB  
                             ??_FVR_Initialize 00A0                                    sendInfo@bcd 0043  
                                   __pmaintext 04BC               __end_of_TMR0_SetInterruptHandler 0E11  
                                      ?___wmul 0074                                     ??_TMR0_ISR 007E  
                                   ??_TMR4_ISR 0070                                     __pintentry 0004  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_memset 0070  
                             ?_TMR4_Initialize 0070                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _destinoSub 005A  
                            _isValidFloor$1351 00A0                                        _OSCTUNE 0098  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                      __end_of_CMP1_Initialize 0E67                       ??_EUSART_SetErrorHandler 00A2  
                            __end_of_chegadaS1 07B9                              __end_of_chegadaS2 0707  
                            __end_of_chegadaS3 06CF                              __end_of_chegadaS4 0696  
                                      i1_txSpi 0E8D                                      ?_sendInfo 0070  
                         _ADC_InterruptHandler 004F                                     _initMatrix 060E  
                      __end_of_CMP2_Initialize 0E73                                        ___flmul 0070  
                                      ___fltol 0545                                        _bin2bcd 039A  
                                      __ptext1 0F2E                                        __ptext2 060E  
                                      __ptext3 0ED6                                        __ptext4 0766  
                                      __ptext5 0738                                        __ptext6 0DD8  
                                      __ptext7 0F1B                                        __ptext8 0E11  
                                      __ptext9 0E2C                                        _destino 005E  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0E1D  
                                    _T2CONbits 001C                                      _CMOUTbits 0115  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 00A2  
                                    _IOCBFbits 0396                      ?_TMR4_SetInterruptHandler 00A0  
                                    _IOCBNbits 0395                                      _IOCBPbits 0394  
                                      _rxValue 0065                                        _subindo 0069  
                                      clrloop0 0E18                           end_of_initialization 006C  
                         __end_of_matrixUpdate 0F9E                                 initMatrix@data 00A9  
               ??_TMR4_DefaultInterruptHandler 0070          __end_of_EUSART_SetOverrunErrorHandler 0E05  
                _EUSART_SetOverrunErrorHandler 0DFF                                        memset@c 0070  
                                      memset@k 0076                                        memset@n 0072  
                                      memset@s 0079                              _EUSART_Initialize 0FDB  
                                   ??_sendInfo 003F                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0DDC  
                                    _SPI1_Open 05B6                            ??_EUSART_Initialize 00A2  
                             ??_WDT_Initialize 00A0                       _TMR0_SetInterruptHandler 0E0B  
                          ?_EUSART_is_rx_ready 0070                                      _TRISBbits 008D  
                 ??_IOCBF0_SetInterruptHandler 00A2                   ??_IOCBF3_SetInterruptHandler 00A2  
                             ?_CMP1_Initialize 0070                                   _isValidFloor 0F2E  
                       SPI1_ExchangeBlock@data 00A4                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 1000                           ??_EUSART_is_rx_ready 00A0  
                              _SPI1_Initialize 0E50                                      _TXSTAbits 019E  
            CCP4_DefaultCallBack@capturedValue 0070                              ?_CCP4_SetCallBack 00A0  
                                  ?_initMatrix 0070                               ?_CMP2_Initialize 0070  
                                   ?_SPI1_Open 0070                             ??_CCP4_SetCallBack 00A2  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 07FF  
                                 _EUSART_Write 0E46                                 _ADC_Initialize 0E24  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_memset 04BC  
                          start_initialization 0058                   __end_ofi1_SPI1_ExchangeBlock 07E0  
                              _velocidadeMotor 0045                                  ??_EUSART_Read 00A0  
                                    _MatrixLed 00C1                                  bin2bcd@binVal 007A  
               ?_EUSART_SetOverrunErrorHandler 00A0                     _EUSART_FramingErrorHandler 00BD  
                                     ??___wmul 0078                         _EUSART_SetErrorHandler 0DF3  
                       __end_of_ADC_Initialize 0E2C                                      __Umul8_16 0FB8  
                                  __pdataBANK0 0069                                       ??_memset 0074  
                                   memset@dest 0078                          CCP4_CaptureISR@module 0072  
                        TMR4_ISR@CountCallBack 0049                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                      __end_of_SPI1_Initialize 0E5B                                       ?i1_txSpi 0075  
                                    _chegadaS1 0790                                      _chegadaS2 06CF  
                                    _chegadaS3 0696                                      _chegadaS4 065D  
                          __end_of_EUSART_Read 0ED6                          _TMR0_InterruptHandler 00B7  
                                    __pnvBANK0 0067                                      __pnvBANK1 00B3  
                      _IOCBF3_InterruptHandler 00BF                         _PIN_MANAGER_Initialize 0707  
             __end_of_TMR4_SetInterruptHandler 0E17                              ??_CCP4_CaptureISR 0072  
                                     ?___flmul 0020                                       ?___fltol 0035  
                                     ?_bin2bcd 007A                                     ?__Umul8_16 0070  
                                  ??_SPI1_Open 00A0                                ?_ADC_Initialize 0070  
                                 _matrixUpdate 0F84                   ??_INTERRUPT_InterruptManager 007E  
           __end_of_IOCBF0_SetInterruptHandler 0E3D                     _IOCBF0_SetInterruptHandler 0E34  
           __end_of_IOCBF3_SetInterruptHandler 0E0B                     _IOCBF3_SetInterruptHandler 0E05  
                                     _CMP1_ISR 0DE1                                       _CMP2_ISR 0DE7  
                                _TMR0_CallBack 0E73                     __end_of_SPI1_ExchangeBlock 0790  
                            ??_TMR0_Initialize 00A2                                    _destinoDesc 0059  
                               ___wmul@product 0078         EUSART_SetErrorHandler@interruptHandler 00A0  
                                     _LATBbits 010D                                     ?_chegadaS1 0070  
                                   ?_chegadaS2 0070                                     ?_chegadaS3 0070  
                                   ?_chegadaS4 0070                            __end_of_matrix_conf 080B  
                                    clear_ram0 0E17                   __end_of_CCP4_DefaultCallBack 0DD1  
                                     _PIE2bits 0092                                       _PIE3bits 0093  
                            _eusartRxLastError 0058                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00A2  
                                     _PIR2bits 0012                                       _PIR3bits 0013  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
                         i1_SPI1_ExchangeBlock 07B9                                       _TMR0_ISR 0F6C  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 0F56  
                                _TMR4_CallBack 0E80                                       _SSP1STAT 0214  
                            ??_PIN_MANAGER_IOC 007B                              ??_PWM3_Initialize 00A0  
                            ??_TMR1_Initialize 00A0                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0074                              ??_CCP4_Initialize 00A2  
                               ?_TMR0_CallBack 0070                               initMatrix@i_1390 00AF  
                                  _EUSART_Read 0EC7                               ?_SPI1_Initialize 0070  
                            ??_TMR2_Initialize 00A0                              _ADC_GetConversion 0F9E  
                                 ??_initMatrix 00A8                          ?i1_SPI1_ExchangeBlock 0070  
                               ?_TMR4_CallBack 0070                        ??_OSCILLATOR_Initialize 00A0  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 00B9  
                           ?_ADC_GetConversion 0070                             sendInfo@velocidade 0041  
                     _TMR4_SetInterruptHandler 0E11                            ??_ADC_GetConversion 0072  
                                     bin2bcd@i 0024                                       __ptext10 0E9B  
                                     __ptext11 0F41                                       __ptext20 0FDB  
                                     __ptext12 0E0B                                       __ptext21 0DFF  
                                     __ptext13 0E50                                     _T1GCONbits 0019  
                                     __ptext30 0DDC                                       __ptext22 0DF9  
                                     __ptext14 0E3D                                       __ptext31 0EC7  
                                     __ptext23 0DF3                                       __ptext15 0707  
                                     __ptext40 039A                                       __ptext24 0E67  
                                     __ptext16 0E05                                       __ptext41 042C  
                                     __ptext33 0F56                                       __ptext25 0E5B  
                                     __ptext17 0E34                                       __ptext50 0790  
                                     __ptext42 07E0                                       __ptext34 0E80  
                                     __ptext26 0F09                                       __ptext18 0E1D  
                                     __ptext51 0DD2                                       __ptext43 0545  
                                     __ptext35 0002                                       __ptext27 0DED  
                                     __ptext19 0DD4                                       __ptext60 0E8D  
                                     __ptext52 06CF                                       __ptext44 0070  
                                     __ptext36 0F6C                                       __ptext28 0E24  
                                     __ptext61 07B9                                       __ptext53 0EA9  
                                     __ptext45 0FB8                                       __ptext37 0E73  
                                     __ptext29 05B6                                       __ptext62 0EF7  
                                     __ptext54 0DD1                                       __ptext46 0E46  
                                     __ptext38 0DD3                                       __ptext63 0DD0  
                                     __ptext55 0DE7                                       __ptext47 0F9E  
                                     __ptext39 02AB                                       __ptext56 065D  
                                     __ptext48 0EE6                                       __ptext57 0DE1  
                                     __ptext49 0EB8                                       __ptext58 0696  
                                     __ptext59 0F84                                   _SSP1CON1bits 0215  
                                  _matrix_conf 07FF                             __end_of_initMatrix 065D  
                                   _IOCBF0_ISR 0EA9                                     _IOCBF3_ISR 0EB8  
                            ??_TMR4_Initialize 00A2                                    ??_chegadaS1 007B  
                                  ??_chegadaS2 007B                                    ??_chegadaS3 007B  
                                  ??_chegadaS4 007B           __end_of_TMR0_DefaultInterruptHandler 0DD4  
                 _TMR0_DefaultInterruptHandler 0DD3                      __end_of_ADC_GetConversion 0FB8  
                                     _sendInfo 02AB                        ?_EUSART_SetErrorHandler 00A0  
                i1SPI1_ExchangeBlock@blockSize 0070  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0056  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0DFF  
                _EUSART_SetFramingErrorHandler 0DF9                                      txSpi@data 00A7  
                  SPI1_ExchangeBlock@blockSize 00A0                               matrixUpdate@data 0078  
                                   _INTCONbits 000B                           _CCP4_DefaultCallBack 0DD0  
                              ??_TMR0_CallBack 007E                                     _FVRCONbits 0117  
                                     intlevel1 0000                                _CCP4_CaptureISR 0EF7  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0DF9  
                             ??_ADC_Initialize 00A0                                ??_TMR4_CallBack 0070  
                       ??i1_SPI1_ExchangeBlock 0072                  ?_TMR0_DefaultInterruptHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                                  __pstringtext1 07FF  
                                __pstringtext2 080B                                 _FVR_Initialize 0DD4  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                                  _temperatura 0051                          ?_CCP4_DefaultCallBack 0070  
                              _TMR0_Initialize 0F41                    ?_IOCBF0_SetInterruptHandler 00A0  
                  ?_IOCBF3_SetInterruptHandler 00A0                                    ?_IOCBF0_ISR 0070  
                           EUSART_Write@txData 0070                                    ?_IOCBF3_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 0738               ??_IOCBF0_DefaultInterruptHandler 0070  
              ?_IOCBF0_DefaultInterruptHandler 0070                                  matrixUpdate@i 007A  
                              _PIN_MANAGER_IOC 0EE6                           __Umul8_16@multiplier 0078  
                              _TMR1_Initialize 0E9B                                _PWM3_Initialize 0E3D  
                   __end_of_spi1_configuration 080F                              __Umul8_16@product 0074  
