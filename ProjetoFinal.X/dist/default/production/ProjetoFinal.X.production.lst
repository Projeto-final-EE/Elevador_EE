

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jul 18 23:48:32 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    92                           	dabs	1,0x7E,2
    93  0000                     
    94                           ; Version 2.40
    95                           ; Generated 17/11/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F1827 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0097                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009A                     	;# 
   170  009B                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  0118                     	;# 
   185  0119                     	;# 
   186  011A                     	;# 
   187  011B                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  0191                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0193                     	;# 
   196  0193                     	;# 
   197  0193                     	;# 
   198  0194                     	;# 
   199  0195                     	;# 
   200  0196                     	;# 
   201  0199                     	;# 
   202  019A                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019C                     	;# 
   208  019C                     	;# 
   209  019D                     	;# 
   210  019E                     	;# 
   211  019F                     	;# 
   212  020C                     	;# 
   213  020D                     	;# 
   214  0211                     	;# 
   215  0211                     	;# 
   216  0212                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0213                     	;# 
   220  0214                     	;# 
   221  0214                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0216                     	;# 
   226  0216                     	;# 
   227  0217                     	;# 
   228  0217                     	;# 
   229  0219                     	;# 
   230  021A                     	;# 
   231  021B                     	;# 
   232  021C                     	;# 
   233  021D                     	;# 
   234  021E                     	;# 
   235  021F                     	;# 
   236  0291                     	;# 
   237  0291                     	;# 
   238  0292                     	;# 
   239  0293                     	;# 
   240  0294                     	;# 
   241  0295                     	;# 
   242  0295                     	;# 
   243  0296                     	;# 
   244  0298                     	;# 
   245  0298                     	;# 
   246  0299                     	;# 
   247  029A                     	;# 
   248  029B                     	;# 
   249  029C                     	;# 
   250  029C                     	;# 
   251  029D                     	;# 
   252  029E                     	;# 
   253  029E                     	;# 
   254  0311                     	;# 
   255  0311                     	;# 
   256  0312                     	;# 
   257  0313                     	;# 
   258  0318                     	;# 
   259  0318                     	;# 
   260  0319                     	;# 
   261  031A                     	;# 
   262  0394                     	;# 
   263  0395                     	;# 
   264  0396                     	;# 
   265  039A                     	;# 
   266  039C                     	;# 
   267  039D                     	;# 
   268  039E                     	;# 
   269  039F                     	;# 
   270  0415                     	;# 
   271  0416                     	;# 
   272  0417                     	;# 
   273  041C                     	;# 
   274  041D                     	;# 
   275  041E                     	;# 
   276  0FE4                     	;# 
   277  0FE5                     	;# 
   278  0FE6                     	;# 
   279  0FE7                     	;# 
   280  0FE8                     	;# 
   281  0FE9                     	;# 
   282  0FEA                     	;# 
   283  0FEB                     	;# 
   284  0FED                     	;# 
   285  0FEE                     	;# 
   286  0FEF                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  008C                     	;# 
   317  008D                     	;# 
   318  0091                     	;# 
   319  0092                     	;# 
   320  0093                     	;# 
   321  0094                     	;# 
   322  0095                     	;# 
   323  0096                     	;# 
   324  0097                     	;# 
   325  0098                     	;# 
   326  0099                     	;# 
   327  009A                     	;# 
   328  009B                     	;# 
   329  009B                     	;# 
   330  009C                     	;# 
   331  009D                     	;# 
   332  009E                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  0111                     	;# 
   336  0112                     	;# 
   337  0113                     	;# 
   338  0114                     	;# 
   339  0115                     	;# 
   340  0116                     	;# 
   341  0117                     	;# 
   342  0118                     	;# 
   343  0119                     	;# 
   344  011A                     	;# 
   345  011B                     	;# 
   346  011D                     	;# 
   347  011E                     	;# 
   348  018C                     	;# 
   349  018D                     	;# 
   350  0191                     	;# 
   351  0191                     	;# 
   352  0192                     	;# 
   353  0193                     	;# 
   354  0193                     	;# 
   355  0193                     	;# 
   356  0194                     	;# 
   357  0195                     	;# 
   358  0196                     	;# 
   359  0199                     	;# 
   360  019A                     	;# 
   361  019B                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019C                     	;# 
   366  019C                     	;# 
   367  019D                     	;# 
   368  019E                     	;# 
   369  019F                     	;# 
   370  020C                     	;# 
   371  020D                     	;# 
   372  0211                     	;# 
   373  0211                     	;# 
   374  0212                     	;# 
   375  0212                     	;# 
   376  0213                     	;# 
   377  0213                     	;# 
   378  0214                     	;# 
   379  0214                     	;# 
   380  0215                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0216                     	;# 
   384  0216                     	;# 
   385  0217                     	;# 
   386  0217                     	;# 
   387  0219                     	;# 
   388  021A                     	;# 
   389  021B                     	;# 
   390  021C                     	;# 
   391  021D                     	;# 
   392  021E                     	;# 
   393  021F                     	;# 
   394  0291                     	;# 
   395  0291                     	;# 
   396  0292                     	;# 
   397  0293                     	;# 
   398  0294                     	;# 
   399  0295                     	;# 
   400  0295                     	;# 
   401  0296                     	;# 
   402  0298                     	;# 
   403  0298                     	;# 
   404  0299                     	;# 
   405  029A                     	;# 
   406  029B                     	;# 
   407  029C                     	;# 
   408  029C                     	;# 
   409  029D                     	;# 
   410  029E                     	;# 
   411  029E                     	;# 
   412  0311                     	;# 
   413  0311                     	;# 
   414  0312                     	;# 
   415  0313                     	;# 
   416  0318                     	;# 
   417  0318                     	;# 
   418  0319                     	;# 
   419  031A                     	;# 
   420  0394                     	;# 
   421  0395                     	;# 
   422  0396                     	;# 
   423  039A                     	;# 
   424  039C                     	;# 
   425  039D                     	;# 
   426  039E                     	;# 
   427  039F                     	;# 
   428  0415                     	;# 
   429  0416                     	;# 
   430  0417                     	;# 
   431  041C                     	;# 
   432  041D                     	;# 
   433  041E                     	;# 
   434  0FE4                     	;# 
   435  0FE5                     	;# 
   436  0FE6                     	;# 
   437  0FE7                     	;# 
   438  0FE8                     	;# 
   439  0FE9                     	;# 
   440  0FEA                     	;# 
   441  0FEB                     	;# 
   442  0FED                     	;# 
   443  0FEE                     	;# 
   444  0FEF                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  0011                     	;# 
   460  0012                     	;# 
   461  0013                     	;# 
   462  0014                     	;# 
   463  0015                     	;# 
   464  0016                     	;# 
   465  0016                     	;# 
   466  0017                     	;# 
   467  0018                     	;# 
   468  0019                     	;# 
   469  001A                     	;# 
   470  001B                     	;# 
   471  001C                     	;# 
   472  001E                     	;# 
   473  001F                     	;# 
   474  008C                     	;# 
   475  008D                     	;# 
   476  0091                     	;# 
   477  0092                     	;# 
   478  0093                     	;# 
   479  0094                     	;# 
   480  0095                     	;# 
   481  0096                     	;# 
   482  0097                     	;# 
   483  0098                     	;# 
   484  0099                     	;# 
   485  009A                     	;# 
   486  009B                     	;# 
   487  009B                     	;# 
   488  009C                     	;# 
   489  009D                     	;# 
   490  009E                     	;# 
   491  010C                     	;# 
   492  010D                     	;# 
   493  0111                     	;# 
   494  0112                     	;# 
   495  0113                     	;# 
   496  0114                     	;# 
   497  0115                     	;# 
   498  0116                     	;# 
   499  0117                     	;# 
   500  0118                     	;# 
   501  0119                     	;# 
   502  011A                     	;# 
   503  011B                     	;# 
   504  011D                     	;# 
   505  011E                     	;# 
   506  018C                     	;# 
   507  018D                     	;# 
   508  0191                     	;# 
   509  0191                     	;# 
   510  0192                     	;# 
   511  0193                     	;# 
   512  0193                     	;# 
   513  0193                     	;# 
   514  0194                     	;# 
   515  0195                     	;# 
   516  0196                     	;# 
   517  0199                     	;# 
   518  019A                     	;# 
   519  019B                     	;# 
   520  019B                     	;# 
   521  019B                     	;# 
   522  019B                     	;# 
   523  019C                     	;# 
   524  019C                     	;# 
   525  019D                     	;# 
   526  019E                     	;# 
   527  019F                     	;# 
   528  020C                     	;# 
   529  020D                     	;# 
   530  0211                     	;# 
   531  0211                     	;# 
   532  0212                     	;# 
   533  0212                     	;# 
   534  0213                     	;# 
   535  0213                     	;# 
   536  0214                     	;# 
   537  0214                     	;# 
   538  0215                     	;# 
   539  0215                     	;# 
   540  0215                     	;# 
   541  0216                     	;# 
   542  0216                     	;# 
   543  0217                     	;# 
   544  0217                     	;# 
   545  0219                     	;# 
   546  021A                     	;# 
   547  021B                     	;# 
   548  021C                     	;# 
   549  021D                     	;# 
   550  021E                     	;# 
   551  021F                     	;# 
   552  0291                     	;# 
   553  0291                     	;# 
   554  0292                     	;# 
   555  0293                     	;# 
   556  0294                     	;# 
   557  0295                     	;# 
   558  0295                     	;# 
   559  0296                     	;# 
   560  0298                     	;# 
   561  0298                     	;# 
   562  0299                     	;# 
   563  029A                     	;# 
   564  029B                     	;# 
   565  029C                     	;# 
   566  029C                     	;# 
   567  029D                     	;# 
   568  029E                     	;# 
   569  029E                     	;# 
   570  0311                     	;# 
   571  0311                     	;# 
   572  0312                     	;# 
   573  0313                     	;# 
   574  0318                     	;# 
   575  0318                     	;# 
   576  0319                     	;# 
   577  031A                     	;# 
   578  0394                     	;# 
   579  0395                     	;# 
   580  0396                     	;# 
   581  039A                     	;# 
   582  039C                     	;# 
   583  039D                     	;# 
   584  039E                     	;# 
   585  039F                     	;# 
   586  0415                     	;# 
   587  0416                     	;# 
   588  0417                     	;# 
   589  041C                     	;# 
   590  041D                     	;# 
   591  041E                     	;# 
   592  0FE4                     	;# 
   593  0FE5                     	;# 
   594  0FE6                     	;# 
   595  0FE7                     	;# 
   596  0FE8                     	;# 
   597  0FE9                     	;# 
   598  0FEA                     	;# 
   599  0FEB                     	;# 
   600  0FED                     	;# 
   601  0FEE                     	;# 
   602  0FEF                     	;# 
   603  0000                     	;# 
   604  0001                     	;# 
   605  0002                     	;# 
   606  0003                     	;# 
   607  0004                     	;# 
   608  0005                     	;# 
   609  0006                     	;# 
   610  0007                     	;# 
   611  0008                     	;# 
   612  0009                     	;# 
   613  000A                     	;# 
   614  000B                     	;# 
   615  000C                     	;# 
   616  000D                     	;# 
   617  0011                     	;# 
   618  0012                     	;# 
   619  0013                     	;# 
   620  0014                     	;# 
   621  0015                     	;# 
   622  0016                     	;# 
   623  0016                     	;# 
   624  0017                     	;# 
   625  0018                     	;# 
   626  0019                     	;# 
   627  001A                     	;# 
   628  001B                     	;# 
   629  001C                     	;# 
   630  001E                     	;# 
   631  001F                     	;# 
   632  008C                     	;# 
   633  008D                     	;# 
   634  0091                     	;# 
   635  0092                     	;# 
   636  0093                     	;# 
   637  0094                     	;# 
   638  0095                     	;# 
   639  0096                     	;# 
   640  0097                     	;# 
   641  0098                     	;# 
   642  0099                     	;# 
   643  009A                     	;# 
   644  009B                     	;# 
   645  009B                     	;# 
   646  009C                     	;# 
   647  009D                     	;# 
   648  009E                     	;# 
   649  010C                     	;# 
   650  010D                     	;# 
   651  0111                     	;# 
   652  0112                     	;# 
   653  0113                     	;# 
   654  0114                     	;# 
   655  0115                     	;# 
   656  0116                     	;# 
   657  0117                     	;# 
   658  0118                     	;# 
   659  0119                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011D                     	;# 
   663  011E                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  0191                     	;# 
   667  0191                     	;# 
   668  0192                     	;# 
   669  0193                     	;# 
   670  0193                     	;# 
   671  0193                     	;# 
   672  0194                     	;# 
   673  0195                     	;# 
   674  0196                     	;# 
   675  0199                     	;# 
   676  019A                     	;# 
   677  019B                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019B                     	;# 
   681  019C                     	;# 
   682  019C                     	;# 
   683  019D                     	;# 
   684  019E                     	;# 
   685  019F                     	;# 
   686  020C                     	;# 
   687  020D                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0212                     	;# 
   692  0213                     	;# 
   693  0213                     	;# 
   694  0214                     	;# 
   695  0214                     	;# 
   696  0215                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0216                     	;# 
   700  0216                     	;# 
   701  0217                     	;# 
   702  0217                     	;# 
   703  0219                     	;# 
   704  021A                     	;# 
   705  021B                     	;# 
   706  021C                     	;# 
   707  021D                     	;# 
   708  021E                     	;# 
   709  021F                     	;# 
   710  0291                     	;# 
   711  0291                     	;# 
   712  0292                     	;# 
   713  0293                     	;# 
   714  0294                     	;# 
   715  0295                     	;# 
   716  0295                     	;# 
   717  0296                     	;# 
   718  0298                     	;# 
   719  0298                     	;# 
   720  0299                     	;# 
   721  029A                     	;# 
   722  029B                     	;# 
   723  029C                     	;# 
   724  029C                     	;# 
   725  029D                     	;# 
   726  029E                     	;# 
   727  029E                     	;# 
   728  0311                     	;# 
   729  0311                     	;# 
   730  0312                     	;# 
   731  0313                     	;# 
   732  0318                     	;# 
   733  0318                     	;# 
   734  0319                     	;# 
   735  031A                     	;# 
   736  0394                     	;# 
   737  0395                     	;# 
   738  0396                     	;# 
   739  039A                     	;# 
   740  039C                     	;# 
   741  039D                     	;# 
   742  039E                     	;# 
   743  039F                     	;# 
   744  0415                     	;# 
   745  0416                     	;# 
   746  0417                     	;# 
   747  041C                     	;# 
   748  041D                     	;# 
   749  041E                     	;# 
   750  0FE4                     	;# 
   751  0FE5                     	;# 
   752  0FE6                     	;# 
   753  0FE7                     	;# 
   754  0FE8                     	;# 
   755  0FE9                     	;# 
   756  0FEA                     	;# 
   757  0FEB                     	;# 
   758  0FED                     	;# 
   759  0FEE                     	;# 
   760  0FEF                     	;# 
   761  0000                     	;# 
   762  0001                     	;# 
   763  0002                     	;# 
   764  0003                     	;# 
   765  0004                     	;# 
   766  0005                     	;# 
   767  0006                     	;# 
   768  0007                     	;# 
   769  0008                     	;# 
   770  0009                     	;# 
   771  000A                     	;# 
   772  000B                     	;# 
   773  000C                     	;# 
   774  000D                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  001E                     	;# 
   789  001F                     	;# 
   790  008C                     	;# 
   791  008D                     	;# 
   792  0091                     	;# 
   793  0092                     	;# 
   794  0093                     	;# 
   795  0094                     	;# 
   796  0095                     	;# 
   797  0096                     	;# 
   798  0097                     	;# 
   799  0098                     	;# 
   800  0099                     	;# 
   801  009A                     	;# 
   802  009B                     	;# 
   803  009B                     	;# 
   804  009C                     	;# 
   805  009D                     	;# 
   806  009E                     	;# 
   807  010C                     	;# 
   808  010D                     	;# 
   809  0111                     	;# 
   810  0112                     	;# 
   811  0113                     	;# 
   812  0114                     	;# 
   813  0115                     	;# 
   814  0116                     	;# 
   815  0117                     	;# 
   816  0118                     	;# 
   817  0119                     	;# 
   818  011A                     	;# 
   819  011B                     	;# 
   820  011D                     	;# 
   821  011E                     	;# 
   822  018C                     	;# 
   823  018D                     	;# 
   824  0191                     	;# 
   825  0191                     	;# 
   826  0192                     	;# 
   827  0193                     	;# 
   828  0193                     	;# 
   829  0193                     	;# 
   830  0194                     	;# 
   831  0195                     	;# 
   832  0196                     	;# 
   833  0199                     	;# 
   834  019A                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019C                     	;# 
   840  019C                     	;# 
   841  019D                     	;# 
   842  019E                     	;# 
   843  019F                     	;# 
   844  020C                     	;# 
   845  020D                     	;# 
   846  0211                     	;# 
   847  0211                     	;# 
   848  0212                     	;# 
   849  0212                     	;# 
   850  0213                     	;# 
   851  0213                     	;# 
   852  0214                     	;# 
   853  0214                     	;# 
   854  0215                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0216                     	;# 
   858  0216                     	;# 
   859  0217                     	;# 
   860  0217                     	;# 
   861  0219                     	;# 
   862  021A                     	;# 
   863  021B                     	;# 
   864  021C                     	;# 
   865  021D                     	;# 
   866  021E                     	;# 
   867  021F                     	;# 
   868  0291                     	;# 
   869  0291                     	;# 
   870  0292                     	;# 
   871  0293                     	;# 
   872  0294                     	;# 
   873  0295                     	;# 
   874  0295                     	;# 
   875  0296                     	;# 
   876  0298                     	;# 
   877  0298                     	;# 
   878  0299                     	;# 
   879  029A                     	;# 
   880  029B                     	;# 
   881  029C                     	;# 
   882  029C                     	;# 
   883  029D                     	;# 
   884  029E                     	;# 
   885  029E                     	;# 
   886  0311                     	;# 
   887  0311                     	;# 
   888  0312                     	;# 
   889  0313                     	;# 
   890  0318                     	;# 
   891  0318                     	;# 
   892  0319                     	;# 
   893  031A                     	;# 
   894  0394                     	;# 
   895  0395                     	;# 
   896  0396                     	;# 
   897  039A                     	;# 
   898  039C                     	;# 
   899  039D                     	;# 
   900  039E                     	;# 
   901  039F                     	;# 
   902  0415                     	;# 
   903  0416                     	;# 
   904  0417                     	;# 
   905  041C                     	;# 
   906  041D                     	;# 
   907  041E                     	;# 
   908  0FE4                     	;# 
   909  0FE5                     	;# 
   910  0FE6                     	;# 
   911  0FE7                     	;# 
   912  0FE8                     	;# 
   913  0FE9                     	;# 
   914  0FEA                     	;# 
   915  0FEB                     	;# 
   916  0FED                     	;# 
   917  0FEE                     	;# 
   918  0FEF                     	;# 
   919  0000                     	;# 
   920  0001                     	;# 
   921  0002                     	;# 
   922  0003                     	;# 
   923  0004                     	;# 
   924  0005                     	;# 
   925  0006                     	;# 
   926  0007                     	;# 
   927  0008                     	;# 
   928  0009                     	;# 
   929  000A                     	;# 
   930  000B                     	;# 
   931  000C                     	;# 
   932  000D                     	;# 
   933  0011                     	;# 
   934  0012                     	;# 
   935  0013                     	;# 
   936  0014                     	;# 
   937  0015                     	;# 
   938  0016                     	;# 
   939  0016                     	;# 
   940  0017                     	;# 
   941  0018                     	;# 
   942  0019                     	;# 
   943  001A                     	;# 
   944  001B                     	;# 
   945  001C                     	;# 
   946  001E                     	;# 
   947  001F                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  0091                     	;# 
   951  0092                     	;# 
   952  0093                     	;# 
   953  0094                     	;# 
   954  0095                     	;# 
   955  0096                     	;# 
   956  0097                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009A                     	;# 
   960  009B                     	;# 
   961  009B                     	;# 
   962  009C                     	;# 
   963  009D                     	;# 
   964  009E                     	;# 
   965  010C                     	;# 
   966  010D                     	;# 
   967  0111                     	;# 
   968  0112                     	;# 
   969  0113                     	;# 
   970  0114                     	;# 
   971  0115                     	;# 
   972  0116                     	;# 
   973  0117                     	;# 
   974  0118                     	;# 
   975  0119                     	;# 
   976  011A                     	;# 
   977  011B                     	;# 
   978  011D                     	;# 
   979  011E                     	;# 
   980  018C                     	;# 
   981  018D                     	;# 
   982  0191                     	;# 
   983  0191                     	;# 
   984  0192                     	;# 
   985  0193                     	;# 
   986  0193                     	;# 
   987  0193                     	;# 
   988  0194                     	;# 
   989  0195                     	;# 
   990  0196                     	;# 
   991  0199                     	;# 
   992  019A                     	;# 
   993  019B                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019C                     	;# 
   998  019C                     	;# 
   999  019D                     	;# 
  1000  019E                     	;# 
  1001  019F                     	;# 
  1002  020C                     	;# 
  1003  020D                     	;# 
  1004  0211                     	;# 
  1005  0211                     	;# 
  1006  0212                     	;# 
  1007  0212                     	;# 
  1008  0213                     	;# 
  1009  0213                     	;# 
  1010  0214                     	;# 
  1011  0214                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0216                     	;# 
  1016  0216                     	;# 
  1017  0217                     	;# 
  1018  0217                     	;# 
  1019  0219                     	;# 
  1020  021A                     	;# 
  1021  021B                     	;# 
  1022  021C                     	;# 
  1023  021D                     	;# 
  1024  021E                     	;# 
  1025  021F                     	;# 
  1026  0291                     	;# 
  1027  0291                     	;# 
  1028  0292                     	;# 
  1029  0293                     	;# 
  1030  0294                     	;# 
  1031  0295                     	;# 
  1032  0295                     	;# 
  1033  0296                     	;# 
  1034  0298                     	;# 
  1035  0298                     	;# 
  1036  0299                     	;# 
  1037  029A                     	;# 
  1038  029B                     	;# 
  1039  029C                     	;# 
  1040  029C                     	;# 
  1041  029D                     	;# 
  1042  029E                     	;# 
  1043  029E                     	;# 
  1044  0311                     	;# 
  1045  0311                     	;# 
  1046  0312                     	;# 
  1047  0313                     	;# 
  1048  0318                     	;# 
  1049  0318                     	;# 
  1050  0319                     	;# 
  1051  031A                     	;# 
  1052  0394                     	;# 
  1053  0395                     	;# 
  1054  0396                     	;# 
  1055  039A                     	;# 
  1056  039C                     	;# 
  1057  039D                     	;# 
  1058  039E                     	;# 
  1059  039F                     	;# 
  1060  0415                     	;# 
  1061  0416                     	;# 
  1062  0417                     	;# 
  1063  041C                     	;# 
  1064  041D                     	;# 
  1065  041E                     	;# 
  1066  0FE4                     	;# 
  1067  0FE5                     	;# 
  1068  0FE6                     	;# 
  1069  0FE7                     	;# 
  1070  0FE8                     	;# 
  1071  0FE9                     	;# 
  1072  0FEA                     	;# 
  1073  0FEB                     	;# 
  1074  0FED                     	;# 
  1075  0FEE                     	;# 
  1076  0FEF                     	;# 
  1077  0000                     	;# 
  1078  0001                     	;# 
  1079  0002                     	;# 
  1080  0003                     	;# 
  1081  0004                     	;# 
  1082  0005                     	;# 
  1083  0006                     	;# 
  1084  0007                     	;# 
  1085  0008                     	;# 
  1086  0009                     	;# 
  1087  000A                     	;# 
  1088  000B                     	;# 
  1089  000C                     	;# 
  1090  000D                     	;# 
  1091  0011                     	;# 
  1092  0012                     	;# 
  1093  0013                     	;# 
  1094  0014                     	;# 
  1095  0015                     	;# 
  1096  0016                     	;# 
  1097  0016                     	;# 
  1098  0017                     	;# 
  1099  0018                     	;# 
  1100  0019                     	;# 
  1101  001A                     	;# 
  1102  001B                     	;# 
  1103  001C                     	;# 
  1104  001E                     	;# 
  1105  001F                     	;# 
  1106  008C                     	;# 
  1107  008D                     	;# 
  1108  0091                     	;# 
  1109  0092                     	;# 
  1110  0093                     	;# 
  1111  0094                     	;# 
  1112  0095                     	;# 
  1113  0096                     	;# 
  1114  0097                     	;# 
  1115  0098                     	;# 
  1116  0099                     	;# 
  1117  009A                     	;# 
  1118  009B                     	;# 
  1119  009B                     	;# 
  1120  009C                     	;# 
  1121  009D                     	;# 
  1122  009E                     	;# 
  1123  010C                     	;# 
  1124  010D                     	;# 
  1125  0111                     	;# 
  1126  0112                     	;# 
  1127  0113                     	;# 
  1128  0114                     	;# 
  1129  0115                     	;# 
  1130  0116                     	;# 
  1131  0117                     	;# 
  1132  0118                     	;# 
  1133  0119                     	;# 
  1134  011A                     	;# 
  1135  011B                     	;# 
  1136  011D                     	;# 
  1137  011E                     	;# 
  1138  018C                     	;# 
  1139  018D                     	;# 
  1140  0191                     	;# 
  1141  0191                     	;# 
  1142  0192                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0193                     	;# 
  1146  0194                     	;# 
  1147  0195                     	;# 
  1148  0196                     	;# 
  1149  0199                     	;# 
  1150  019A                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019C                     	;# 
  1156  019C                     	;# 
  1157  019D                     	;# 
  1158  019E                     	;# 
  1159  019F                     	;# 
  1160  020C                     	;# 
  1161  020D                     	;# 
  1162  0211                     	;# 
  1163  0211                     	;# 
  1164  0212                     	;# 
  1165  0212                     	;# 
  1166  0213                     	;# 
  1167  0213                     	;# 
  1168  0214                     	;# 
  1169  0214                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0215                     	;# 
  1173  0216                     	;# 
  1174  0216                     	;# 
  1175  0217                     	;# 
  1176  0217                     	;# 
  1177  0219                     	;# 
  1178  021A                     	;# 
  1179  021B                     	;# 
  1180  021C                     	;# 
  1181  021D                     	;# 
  1182  021E                     	;# 
  1183  021F                     	;# 
  1184  0291                     	;# 
  1185  0291                     	;# 
  1186  0292                     	;# 
  1187  0293                     	;# 
  1188  0294                     	;# 
  1189  0295                     	;# 
  1190  0295                     	;# 
  1191  0296                     	;# 
  1192  0298                     	;# 
  1193  0298                     	;# 
  1194  0299                     	;# 
  1195  029A                     	;# 
  1196  029B                     	;# 
  1197  029C                     	;# 
  1198  029C                     	;# 
  1199  029D                     	;# 
  1200  029E                     	;# 
  1201  029E                     	;# 
  1202  0311                     	;# 
  1203  0311                     	;# 
  1204  0312                     	;# 
  1205  0313                     	;# 
  1206  0318                     	;# 
  1207  0318                     	;# 
  1208  0319                     	;# 
  1209  031A                     	;# 
  1210  0394                     	;# 
  1211  0395                     	;# 
  1212  0396                     	;# 
  1213  039A                     	;# 
  1214  039C                     	;# 
  1215  039D                     	;# 
  1216  039E                     	;# 
  1217  039F                     	;# 
  1218  0415                     	;# 
  1219  0416                     	;# 
  1220  0417                     	;# 
  1221  041C                     	;# 
  1222  041D                     	;# 
  1223  041E                     	;# 
  1224  0FE4                     	;# 
  1225  0FE5                     	;# 
  1226  0FE6                     	;# 
  1227  0FE7                     	;# 
  1228  0FE8                     	;# 
  1229  0FE9                     	;# 
  1230  0FEA                     	;# 
  1231  0FEB                     	;# 
  1232  0FED                     	;# 
  1233  0FEE                     	;# 
  1234  0FEF                     	;# 
  1235  0000                     	;# 
  1236  0001                     	;# 
  1237  0002                     	;# 
  1238  0003                     	;# 
  1239  0004                     	;# 
  1240  0005                     	;# 
  1241  0006                     	;# 
  1242  0007                     	;# 
  1243  0008                     	;# 
  1244  0009                     	;# 
  1245  000A                     	;# 
  1246  000B                     	;# 
  1247  000C                     	;# 
  1248  000D                     	;# 
  1249  0011                     	;# 
  1250  0012                     	;# 
  1251  0013                     	;# 
  1252  0014                     	;# 
  1253  0015                     	;# 
  1254  0016                     	;# 
  1255  0016                     	;# 
  1256  0017                     	;# 
  1257  0018                     	;# 
  1258  0019                     	;# 
  1259  001A                     	;# 
  1260  001B                     	;# 
  1261  001C                     	;# 
  1262  001E                     	;# 
  1263  001F                     	;# 
  1264  008C                     	;# 
  1265  008D                     	;# 
  1266  0091                     	;# 
  1267  0092                     	;# 
  1268  0093                     	;# 
  1269  0094                     	;# 
  1270  0095                     	;# 
  1271  0096                     	;# 
  1272  0097                     	;# 
  1273  0098                     	;# 
  1274  0099                     	;# 
  1275  009A                     	;# 
  1276  009B                     	;# 
  1277  009B                     	;# 
  1278  009C                     	;# 
  1279  009D                     	;# 
  1280  009E                     	;# 
  1281  010C                     	;# 
  1282  010D                     	;# 
  1283  0111                     	;# 
  1284  0112                     	;# 
  1285  0113                     	;# 
  1286  0114                     	;# 
  1287  0115                     	;# 
  1288  0116                     	;# 
  1289  0117                     	;# 
  1290  0118                     	;# 
  1291  0119                     	;# 
  1292  011A                     	;# 
  1293  011B                     	;# 
  1294  011D                     	;# 
  1295  011E                     	;# 
  1296  018C                     	;# 
  1297  018D                     	;# 
  1298  0191                     	;# 
  1299  0191                     	;# 
  1300  0192                     	;# 
  1301  0193                     	;# 
  1302  0193                     	;# 
  1303  0193                     	;# 
  1304  0194                     	;# 
  1305  0195                     	;# 
  1306  0196                     	;# 
  1307  0199                     	;# 
  1308  019A                     	;# 
  1309  019B                     	;# 
  1310  019B                     	;# 
  1311  019B                     	;# 
  1312  019B                     	;# 
  1313  019C                     	;# 
  1314  019C                     	;# 
  1315  019D                     	;# 
  1316  019E                     	;# 
  1317  019F                     	;# 
  1318  020C                     	;# 
  1319  020D                     	;# 
  1320  0211                     	;# 
  1321  0211                     	;# 
  1322  0212                     	;# 
  1323  0212                     	;# 
  1324  0213                     	;# 
  1325  0213                     	;# 
  1326  0214                     	;# 
  1327  0214                     	;# 
  1328  0215                     	;# 
  1329  0215                     	;# 
  1330  0215                     	;# 
  1331  0216                     	;# 
  1332  0216                     	;# 
  1333  0217                     	;# 
  1334  0217                     	;# 
  1335  0219                     	;# 
  1336  021A                     	;# 
  1337  021B                     	;# 
  1338  021C                     	;# 
  1339  021D                     	;# 
  1340  021E                     	;# 
  1341  021F                     	;# 
  1342  0291                     	;# 
  1343  0291                     	;# 
  1344  0292                     	;# 
  1345  0293                     	;# 
  1346  0294                     	;# 
  1347  0295                     	;# 
  1348  0295                     	;# 
  1349  0296                     	;# 
  1350  0298                     	;# 
  1351  0298                     	;# 
  1352  0299                     	;# 
  1353  029A                     	;# 
  1354  029B                     	;# 
  1355  029C                     	;# 
  1356  029C                     	;# 
  1357  029D                     	;# 
  1358  029E                     	;# 
  1359  029E                     	;# 
  1360  0311                     	;# 
  1361  0311                     	;# 
  1362  0312                     	;# 
  1363  0313                     	;# 
  1364  0318                     	;# 
  1365  0318                     	;# 
  1366  0319                     	;# 
  1367  031A                     	;# 
  1368  0394                     	;# 
  1369  0395                     	;# 
  1370  0396                     	;# 
  1371  039A                     	;# 
  1372  039C                     	;# 
  1373  039D                     	;# 
  1374  039E                     	;# 
  1375  039F                     	;# 
  1376  0415                     	;# 
  1377  0416                     	;# 
  1378  0417                     	;# 
  1379  041C                     	;# 
  1380  041D                     	;# 
  1381  041E                     	;# 
  1382  0FE4                     	;# 
  1383  0FE5                     	;# 
  1384  0FE6                     	;# 
  1385  0FE7                     	;# 
  1386  0FE8                     	;# 
  1387  0FE9                     	;# 
  1388  0FEA                     	;# 
  1389  0FEB                     	;# 
  1390  0FED                     	;# 
  1391  0FEE                     	;# 
  1392  0FEF                     	;# 
  1393  0000                     	;# 
  1394  0001                     	;# 
  1395  0002                     	;# 
  1396  0003                     	;# 
  1397  0004                     	;# 
  1398  0005                     	;# 
  1399  0006                     	;# 
  1400  0007                     	;# 
  1401  0008                     	;# 
  1402  0009                     	;# 
  1403  000A                     	;# 
  1404  000B                     	;# 
  1405  000C                     	;# 
  1406  000D                     	;# 
  1407  0011                     	;# 
  1408  0012                     	;# 
  1409  0013                     	;# 
  1410  0014                     	;# 
  1411  0015                     	;# 
  1412  0016                     	;# 
  1413  0016                     	;# 
  1414  0017                     	;# 
  1415  0018                     	;# 
  1416  0019                     	;# 
  1417  001A                     	;# 
  1418  001B                     	;# 
  1419  001C                     	;# 
  1420  001E                     	;# 
  1421  001F                     	;# 
  1422  008C                     	;# 
  1423  008D                     	;# 
  1424  0091                     	;# 
  1425  0092                     	;# 
  1426  0093                     	;# 
  1427  0094                     	;# 
  1428  0095                     	;# 
  1429  0096                     	;# 
  1430  0097                     	;# 
  1431  0098                     	;# 
  1432  0099                     	;# 
  1433  009A                     	;# 
  1434  009B                     	;# 
  1435  009B                     	;# 
  1436  009C                     	;# 
  1437  009D                     	;# 
  1438  009E                     	;# 
  1439  010C                     	;# 
  1440  010D                     	;# 
  1441  0111                     	;# 
  1442  0112                     	;# 
  1443  0113                     	;# 
  1444  0114                     	;# 
  1445  0115                     	;# 
  1446  0116                     	;# 
  1447  0117                     	;# 
  1448  0118                     	;# 
  1449  0119                     	;# 
  1450  011A                     	;# 
  1451  011B                     	;# 
  1452  011D                     	;# 
  1453  011E                     	;# 
  1454  018C                     	;# 
  1455  018D                     	;# 
  1456  0191                     	;# 
  1457  0191                     	;# 
  1458  0192                     	;# 
  1459  0193                     	;# 
  1460  0193                     	;# 
  1461  0193                     	;# 
  1462  0194                     	;# 
  1463  0195                     	;# 
  1464  0196                     	;# 
  1465  0199                     	;# 
  1466  019A                     	;# 
  1467  019B                     	;# 
  1468  019B                     	;# 
  1469  019B                     	;# 
  1470  019B                     	;# 
  1471  019C                     	;# 
  1472  019C                     	;# 
  1473  019D                     	;# 
  1474  019E                     	;# 
  1475  019F                     	;# 
  1476  020C                     	;# 
  1477  020D                     	;# 
  1478  0211                     	;# 
  1479  0211                     	;# 
  1480  0212                     	;# 
  1481  0212                     	;# 
  1482  0213                     	;# 
  1483  0213                     	;# 
  1484  0214                     	;# 
  1485  0214                     	;# 
  1486  0215                     	;# 
  1487  0215                     	;# 
  1488  0215                     	;# 
  1489  0216                     	;# 
  1490  0216                     	;# 
  1491  0217                     	;# 
  1492  0217                     	;# 
  1493  0219                     	;# 
  1494  021A                     	;# 
  1495  021B                     	;# 
  1496  021C                     	;# 
  1497  021D                     	;# 
  1498  021E                     	;# 
  1499  021F                     	;# 
  1500  0291                     	;# 
  1501  0291                     	;# 
  1502  0292                     	;# 
  1503  0293                     	;# 
  1504  0294                     	;# 
  1505  0295                     	;# 
  1506  0295                     	;# 
  1507  0296                     	;# 
  1508  0298                     	;# 
  1509  0298                     	;# 
  1510  0299                     	;# 
  1511  029A                     	;# 
  1512  029B                     	;# 
  1513  029C                     	;# 
  1514  029C                     	;# 
  1515  029D                     	;# 
  1516  029E                     	;# 
  1517  029E                     	;# 
  1518  0311                     	;# 
  1519  0311                     	;# 
  1520  0312                     	;# 
  1521  0313                     	;# 
  1522  0318                     	;# 
  1523  0318                     	;# 
  1524  0319                     	;# 
  1525  031A                     	;# 
  1526  0394                     	;# 
  1527  0395                     	;# 
  1528  0396                     	;# 
  1529  039A                     	;# 
  1530  039C                     	;# 
  1531  039D                     	;# 
  1532  039E                     	;# 
  1533  039F                     	;# 
  1534  0415                     	;# 
  1535  0416                     	;# 
  1536  0417                     	;# 
  1537  041C                     	;# 
  1538  041D                     	;# 
  1539  041E                     	;# 
  1540  0FE4                     	;# 
  1541  0FE5                     	;# 
  1542  0FE6                     	;# 
  1543  0FE7                     	;# 
  1544  0FE8                     	;# 
  1545  0FE9                     	;# 
  1546  0FEA                     	;# 
  1547  0FEB                     	;# 
  1548  0FED                     	;# 
  1549  0FEE                     	;# 
  1550  0FEF                     	;# 
  1551  0000                     	;# 
  1552  0001                     	;# 
  1553  0002                     	;# 
  1554  0003                     	;# 
  1555  0004                     	;# 
  1556  0005                     	;# 
  1557  0006                     	;# 
  1558  0007                     	;# 
  1559  0008                     	;# 
  1560  0009                     	;# 
  1561  000A                     	;# 
  1562  000B                     	;# 
  1563  000C                     	;# 
  1564  000D                     	;# 
  1565  0011                     	;# 
  1566  0012                     	;# 
  1567  0013                     	;# 
  1568  0014                     	;# 
  1569  0015                     	;# 
  1570  0016                     	;# 
  1571  0016                     	;# 
  1572  0017                     	;# 
  1573  0018                     	;# 
  1574  0019                     	;# 
  1575  001A                     	;# 
  1576  001B                     	;# 
  1577  001C                     	;# 
  1578  001E                     	;# 
  1579  001F                     	;# 
  1580  008C                     	;# 
  1581  008D                     	;# 
  1582  0091                     	;# 
  1583  0092                     	;# 
  1584  0093                     	;# 
  1585  0094                     	;# 
  1586  0095                     	;# 
  1587  0096                     	;# 
  1588  0097                     	;# 
  1589  0098                     	;# 
  1590  0099                     	;# 
  1591  009A                     	;# 
  1592  009B                     	;# 
  1593  009B                     	;# 
  1594  009C                     	;# 
  1595  009D                     	;# 
  1596  009E                     	;# 
  1597  010C                     	;# 
  1598  010D                     	;# 
  1599  0111                     	;# 
  1600  0112                     	;# 
  1601  0113                     	;# 
  1602  0114                     	;# 
  1603  0115                     	;# 
  1604  0116                     	;# 
  1605  0117                     	;# 
  1606  0118                     	;# 
  1607  0119                     	;# 
  1608  011A                     	;# 
  1609  011B                     	;# 
  1610  011D                     	;# 
  1611  011E                     	;# 
  1612  018C                     	;# 
  1613  018D                     	;# 
  1614  0191                     	;# 
  1615  0191                     	;# 
  1616  0192                     	;# 
  1617  0193                     	;# 
  1618  0193                     	;# 
  1619  0193                     	;# 
  1620  0194                     	;# 
  1621  0195                     	;# 
  1622  0196                     	;# 
  1623  0199                     	;# 
  1624  019A                     	;# 
  1625  019B                     	;# 
  1626  019B                     	;# 
  1627  019B                     	;# 
  1628  019B                     	;# 
  1629  019C                     	;# 
  1630  019C                     	;# 
  1631  019D                     	;# 
  1632  019E                     	;# 
  1633  019F                     	;# 
  1634  020C                     	;# 
  1635  020D                     	;# 
  1636  0211                     	;# 
  1637  0211                     	;# 
  1638  0212                     	;# 
  1639  0212                     	;# 
  1640  0213                     	;# 
  1641  0213                     	;# 
  1642  0214                     	;# 
  1643  0214                     	;# 
  1644  0215                     	;# 
  1645  0215                     	;# 
  1646  0215                     	;# 
  1647  0216                     	;# 
  1648  0216                     	;# 
  1649  0217                     	;# 
  1650  0217                     	;# 
  1651  0219                     	;# 
  1652  021A                     	;# 
  1653  021B                     	;# 
  1654  021C                     	;# 
  1655  021D                     	;# 
  1656  021E                     	;# 
  1657  021F                     	;# 
  1658  0291                     	;# 
  1659  0291                     	;# 
  1660  0292                     	;# 
  1661  0293                     	;# 
  1662  0294                     	;# 
  1663  0295                     	;# 
  1664  0295                     	;# 
  1665  0296                     	;# 
  1666  0298                     	;# 
  1667  0298                     	;# 
  1668  0299                     	;# 
  1669  029A                     	;# 
  1670  029B                     	;# 
  1671  029C                     	;# 
  1672  029C                     	;# 
  1673  029D                     	;# 
  1674  029E                     	;# 
  1675  029E                     	;# 
  1676  0311                     	;# 
  1677  0311                     	;# 
  1678  0312                     	;# 
  1679  0313                     	;# 
  1680  0318                     	;# 
  1681  0318                     	;# 
  1682  0319                     	;# 
  1683  031A                     	;# 
  1684  0394                     	;# 
  1685  0395                     	;# 
  1686  0396                     	;# 
  1687  039A                     	;# 
  1688  039C                     	;# 
  1689  039D                     	;# 
  1690  039E                     	;# 
  1691  039F                     	;# 
  1692  0415                     	;# 
  1693  0416                     	;# 
  1694  0417                     	;# 
  1695  041C                     	;# 
  1696  041D                     	;# 
  1697  041E                     	;# 
  1698  0FE4                     	;# 
  1699  0FE5                     	;# 
  1700  0FE6                     	;# 
  1701  0FE7                     	;# 
  1702  0FE8                     	;# 
  1703  0FE9                     	;# 
  1704  0FEA                     	;# 
  1705  0FEB                     	;# 
  1706  0FED                     	;# 
  1707  0FEE                     	;# 
  1708  0FEF                     	;# 
  1709  0000                     	;# 
  1710  0001                     	;# 
  1711  0002                     	;# 
  1712  0003                     	;# 
  1713  0004                     	;# 
  1714  0005                     	;# 
  1715  0006                     	;# 
  1716  0007                     	;# 
  1717  0008                     	;# 
  1718  0009                     	;# 
  1719  000A                     	;# 
  1720  000B                     	;# 
  1721  000C                     	;# 
  1722  000D                     	;# 
  1723  0011                     	;# 
  1724  0012                     	;# 
  1725  0013                     	;# 
  1726  0014                     	;# 
  1727  0015                     	;# 
  1728  0016                     	;# 
  1729  0016                     	;# 
  1730  0017                     	;# 
  1731  0018                     	;# 
  1732  0019                     	;# 
  1733  001A                     	;# 
  1734  001B                     	;# 
  1735  001C                     	;# 
  1736  001E                     	;# 
  1737  001F                     	;# 
  1738  008C                     	;# 
  1739  008D                     	;# 
  1740  0091                     	;# 
  1741  0092                     	;# 
  1742  0093                     	;# 
  1743  0094                     	;# 
  1744  0095                     	;# 
  1745  0096                     	;# 
  1746  0097                     	;# 
  1747  0098                     	;# 
  1748  0099                     	;# 
  1749  009A                     	;# 
  1750  009B                     	;# 
  1751  009B                     	;# 
  1752  009C                     	;# 
  1753  009D                     	;# 
  1754  009E                     	;# 
  1755  010C                     	;# 
  1756  010D                     	;# 
  1757  0111                     	;# 
  1758  0112                     	;# 
  1759  0113                     	;# 
  1760  0114                     	;# 
  1761  0115                     	;# 
  1762  0116                     	;# 
  1763  0117                     	;# 
  1764  0118                     	;# 
  1765  0119                     	;# 
  1766  011A                     	;# 
  1767  011B                     	;# 
  1768  011D                     	;# 
  1769  011E                     	;# 
  1770  018C                     	;# 
  1771  018D                     	;# 
  1772  0191                     	;# 
  1773  0191                     	;# 
  1774  0192                     	;# 
  1775  0193                     	;# 
  1776  0193                     	;# 
  1777  0193                     	;# 
  1778  0194                     	;# 
  1779  0195                     	;# 
  1780  0196                     	;# 
  1781  0199                     	;# 
  1782  019A                     	;# 
  1783  019B                     	;# 
  1784  019B                     	;# 
  1785  019B                     	;# 
  1786  019B                     	;# 
  1787  019C                     	;# 
  1788  019C                     	;# 
  1789  019D                     	;# 
  1790  019E                     	;# 
  1791  019F                     	;# 
  1792  020C                     	;# 
  1793  020D                     	;# 
  1794  0211                     	;# 
  1795  0211                     	;# 
  1796  0212                     	;# 
  1797  0212                     	;# 
  1798  0213                     	;# 
  1799  0213                     	;# 
  1800  0214                     	;# 
  1801  0214                     	;# 
  1802  0215                     	;# 
  1803  0215                     	;# 
  1804  0215                     	;# 
  1805  0216                     	;# 
  1806  0216                     	;# 
  1807  0217                     	;# 
  1808  0217                     	;# 
  1809  0219                     	;# 
  1810  021A                     	;# 
  1811  021B                     	;# 
  1812  021C                     	;# 
  1813  021D                     	;# 
  1814  021E                     	;# 
  1815  021F                     	;# 
  1816  0291                     	;# 
  1817  0291                     	;# 
  1818  0292                     	;# 
  1819  0293                     	;# 
  1820  0294                     	;# 
  1821  0295                     	;# 
  1822  0295                     	;# 
  1823  0296                     	;# 
  1824  0298                     	;# 
  1825  0298                     	;# 
  1826  0299                     	;# 
  1827  029A                     	;# 
  1828  029B                     	;# 
  1829  029C                     	;# 
  1830  029C                     	;# 
  1831  029D                     	;# 
  1832  029E                     	;# 
  1833  029E                     	;# 
  1834  0311                     	;# 
  1835  0311                     	;# 
  1836  0312                     	;# 
  1837  0313                     	;# 
  1838  0318                     	;# 
  1839  0318                     	;# 
  1840  0319                     	;# 
  1841  031A                     	;# 
  1842  0394                     	;# 
  1843  0395                     	;# 
  1844  0396                     	;# 
  1845  039A                     	;# 
  1846  039C                     	;# 
  1847  039D                     	;# 
  1848  039E                     	;# 
  1849  039F                     	;# 
  1850  0415                     	;# 
  1851  0416                     	;# 
  1852  0417                     	;# 
  1853  041C                     	;# 
  1854  041D                     	;# 
  1855  041E                     	;# 
  1856  0FE4                     	;# 
  1857  0FE5                     	;# 
  1858  0FE6                     	;# 
  1859  0FE7                     	;# 
  1860  0FE8                     	;# 
  1861  0FE9                     	;# 
  1862  0FEA                     	;# 
  1863  0FEB                     	;# 
  1864  0FED                     	;# 
  1865  0FEE                     	;# 
  1866  0FEF                     	;# 
  1867  0000                     	;# 
  1868  0001                     	;# 
  1869  0002                     	;# 
  1870  0003                     	;# 
  1871  0004                     	;# 
  1872  0005                     	;# 
  1873  0006                     	;# 
  1874  0007                     	;# 
  1875  0008                     	;# 
  1876  0009                     	;# 
  1877  000A                     	;# 
  1878  000B                     	;# 
  1879  000C                     	;# 
  1880  000D                     	;# 
  1881  0011                     	;# 
  1882  0012                     	;# 
  1883  0013                     	;# 
  1884  0014                     	;# 
  1885  0015                     	;# 
  1886  0016                     	;# 
  1887  0016                     	;# 
  1888  0017                     	;# 
  1889  0018                     	;# 
  1890  0019                     	;# 
  1891  001A                     	;# 
  1892  001B                     	;# 
  1893  001C                     	;# 
  1894  001E                     	;# 
  1895  001F                     	;# 
  1896  008C                     	;# 
  1897  008D                     	;# 
  1898  0091                     	;# 
  1899  0092                     	;# 
  1900  0093                     	;# 
  1901  0094                     	;# 
  1902  0095                     	;# 
  1903  0096                     	;# 
  1904  0097                     	;# 
  1905  0098                     	;# 
  1906  0099                     	;# 
  1907  009A                     	;# 
  1908  009B                     	;# 
  1909  009B                     	;# 
  1910  009C                     	;# 
  1911  009D                     	;# 
  1912  009E                     	;# 
  1913  010C                     	;# 
  1914  010D                     	;# 
  1915  0111                     	;# 
  1916  0112                     	;# 
  1917  0113                     	;# 
  1918  0114                     	;# 
  1919  0115                     	;# 
  1920  0116                     	;# 
  1921  0117                     	;# 
  1922  0118                     	;# 
  1923  0119                     	;# 
  1924  011A                     	;# 
  1925  011B                     	;# 
  1926  011D                     	;# 
  1927  011E                     	;# 
  1928  018C                     	;# 
  1929  018D                     	;# 
  1930  0191                     	;# 
  1931  0191                     	;# 
  1932  0192                     	;# 
  1933  0193                     	;# 
  1934  0193                     	;# 
  1935  0193                     	;# 
  1936  0194                     	;# 
  1937  0195                     	;# 
  1938  0196                     	;# 
  1939  0199                     	;# 
  1940  019A                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019C                     	;# 
  1946  019C                     	;# 
  1947  019D                     	;# 
  1948  019E                     	;# 
  1949  019F                     	;# 
  1950  020C                     	;# 
  1951  020D                     	;# 
  1952  0211                     	;# 
  1953  0211                     	;# 
  1954  0212                     	;# 
  1955  0212                     	;# 
  1956  0213                     	;# 
  1957  0213                     	;# 
  1958  0214                     	;# 
  1959  0214                     	;# 
  1960  0215                     	;# 
  1961  0215                     	;# 
  1962  0215                     	;# 
  1963  0216                     	;# 
  1964  0216                     	;# 
  1965  0217                     	;# 
  1966  0217                     	;# 
  1967  0219                     	;# 
  1968  021A                     	;# 
  1969  021B                     	;# 
  1970  021C                     	;# 
  1971  021D                     	;# 
  1972  021E                     	;# 
  1973  021F                     	;# 
  1974  0291                     	;# 
  1975  0291                     	;# 
  1976  0292                     	;# 
  1977  0293                     	;# 
  1978  0294                     	;# 
  1979  0295                     	;# 
  1980  0295                     	;# 
  1981  0296                     	;# 
  1982  0298                     	;# 
  1983  0298                     	;# 
  1984  0299                     	;# 
  1985  029A                     	;# 
  1986  029B                     	;# 
  1987  029C                     	;# 
  1988  029C                     	;# 
  1989  029D                     	;# 
  1990  029E                     	;# 
  1991  029E                     	;# 
  1992  0311                     	;# 
  1993  0311                     	;# 
  1994  0312                     	;# 
  1995  0313                     	;# 
  1996  0318                     	;# 
  1997  0318                     	;# 
  1998  0319                     	;# 
  1999  031A                     	;# 
  2000  0394                     	;# 
  2001  0395                     	;# 
  2002  0396                     	;# 
  2003  039A                     	;# 
  2004  039C                     	;# 
  2005  039D                     	;# 
  2006  039E                     	;# 
  2007  039F                     	;# 
  2008  0415                     	;# 
  2009  0416                     	;# 
  2010  0417                     	;# 
  2011  041C                     	;# 
  2012  041D                     	;# 
  2013  041E                     	;# 
  2014  0FE4                     	;# 
  2015  0FE5                     	;# 
  2016  0FE6                     	;# 
  2017  0FE7                     	;# 
  2018  0FE8                     	;# 
  2019  0FE9                     	;# 
  2020  0FEA                     	;# 
  2021  0FEB                     	;# 
  2022  0FED                     	;# 
  2023  0FEE                     	;# 
  2024  0FEF                     	;# 
  2025  0000                     	;# 
  2026  0001                     	;# 
  2027  0002                     	;# 
  2028  0003                     	;# 
  2029  0004                     	;# 
  2030  0005                     	;# 
  2031  0006                     	;# 
  2032  0007                     	;# 
  2033  0008                     	;# 
  2034  0009                     	;# 
  2035  000A                     	;# 
  2036  000B                     	;# 
  2037  000C                     	;# 
  2038  000D                     	;# 
  2039  0011                     	;# 
  2040  0012                     	;# 
  2041  0013                     	;# 
  2042  0014                     	;# 
  2043  0015                     	;# 
  2044  0016                     	;# 
  2045  0016                     	;# 
  2046  0017                     	;# 
  2047  0018                     	;# 
  2048  0019                     	;# 
  2049  001A                     	;# 
  2050  001B                     	;# 
  2051  001C                     	;# 
  2052  001E                     	;# 
  2053  001F                     	;# 
  2054  008C                     	;# 
  2055  008D                     	;# 
  2056  0091                     	;# 
  2057  0092                     	;# 
  2058  0093                     	;# 
  2059  0094                     	;# 
  2060  0095                     	;# 
  2061  0096                     	;# 
  2062  0097                     	;# 
  2063  0098                     	;# 
  2064  0099                     	;# 
  2065  009A                     	;# 
  2066  009B                     	;# 
  2067  009B                     	;# 
  2068  009C                     	;# 
  2069  009D                     	;# 
  2070  009E                     	;# 
  2071  010C                     	;# 
  2072  010D                     	;# 
  2073  0111                     	;# 
  2074  0112                     	;# 
  2075  0113                     	;# 
  2076  0114                     	;# 
  2077  0115                     	;# 
  2078  0116                     	;# 
  2079  0117                     	;# 
  2080  0118                     	;# 
  2081  0119                     	;# 
  2082  011A                     	;# 
  2083  011B                     	;# 
  2084  011D                     	;# 
  2085  011E                     	;# 
  2086  018C                     	;# 
  2087  018D                     	;# 
  2088  0191                     	;# 
  2089  0191                     	;# 
  2090  0192                     	;# 
  2091  0193                     	;# 
  2092  0193                     	;# 
  2093  0193                     	;# 
  2094  0194                     	;# 
  2095  0195                     	;# 
  2096  0196                     	;# 
  2097  0199                     	;# 
  2098  019A                     	;# 
  2099  019B                     	;# 
  2100  019B                     	;# 
  2101  019B                     	;# 
  2102  019B                     	;# 
  2103  019C                     	;# 
  2104  019C                     	;# 
  2105  019D                     	;# 
  2106  019E                     	;# 
  2107  019F                     	;# 
  2108  020C                     	;# 
  2109  020D                     	;# 
  2110  0211                     	;# 
  2111  0211                     	;# 
  2112  0212                     	;# 
  2113  0212                     	;# 
  2114  0213                     	;# 
  2115  0213                     	;# 
  2116  0214                     	;# 
  2117  0214                     	;# 
  2118  0215                     	;# 
  2119  0215                     	;# 
  2120  0215                     	;# 
  2121  0216                     	;# 
  2122  0216                     	;# 
  2123  0217                     	;# 
  2124  0217                     	;# 
  2125  0219                     	;# 
  2126  021A                     	;# 
  2127  021B                     	;# 
  2128  021C                     	;# 
  2129  021D                     	;# 
  2130  021E                     	;# 
  2131  021F                     	;# 
  2132  0291                     	;# 
  2133  0291                     	;# 
  2134  0292                     	;# 
  2135  0293                     	;# 
  2136  0294                     	;# 
  2137  0295                     	;# 
  2138  0295                     	;# 
  2139  0296                     	;# 
  2140  0298                     	;# 
  2141  0298                     	;# 
  2142  0299                     	;# 
  2143  029A                     	;# 
  2144  029B                     	;# 
  2145  029C                     	;# 
  2146  029C                     	;# 
  2147  029D                     	;# 
  2148  029E                     	;# 
  2149  029E                     	;# 
  2150  0311                     	;# 
  2151  0311                     	;# 
  2152  0312                     	;# 
  2153  0313                     	;# 
  2154  0318                     	;# 
  2155  0318                     	;# 
  2156  0319                     	;# 
  2157  031A                     	;# 
  2158  0394                     	;# 
  2159  0395                     	;# 
  2160  0396                     	;# 
  2161  039A                     	;# 
  2162  039C                     	;# 
  2163  039D                     	;# 
  2164  039E                     	;# 
  2165  039F                     	;# 
  2166  0415                     	;# 
  2167  0416                     	;# 
  2168  0417                     	;# 
  2169  041C                     	;# 
  2170  041D                     	;# 
  2171  041E                     	;# 
  2172  0FE4                     	;# 
  2173  0FE5                     	;# 
  2174  0FE6                     	;# 
  2175  0FE7                     	;# 
  2176  0FE8                     	;# 
  2177  0FE9                     	;# 
  2178  0FEA                     	;# 
  2179  0FEB                     	;# 
  2180  0FED                     	;# 
  2181  0FEE                     	;# 
  2182  0FEF                     	;# 
  2183  0000                     	;# 
  2184  0001                     	;# 
  2185  0002                     	;# 
  2186  0003                     	;# 
  2187  0004                     	;# 
  2188  0005                     	;# 
  2189  0006                     	;# 
  2190  0007                     	;# 
  2191  0008                     	;# 
  2192  0009                     	;# 
  2193  000A                     	;# 
  2194  000B                     	;# 
  2195  000C                     	;# 
  2196  000D                     	;# 
  2197  0011                     	;# 
  2198  0012                     	;# 
  2199  0013                     	;# 
  2200  0014                     	;# 
  2201  0015                     	;# 
  2202  0016                     	;# 
  2203  0016                     	;# 
  2204  0017                     	;# 
  2205  0018                     	;# 
  2206  0019                     	;# 
  2207  001A                     	;# 
  2208  001B                     	;# 
  2209  001C                     	;# 
  2210  001E                     	;# 
  2211  001F                     	;# 
  2212  008C                     	;# 
  2213  008D                     	;# 
  2214  0091                     	;# 
  2215  0092                     	;# 
  2216  0093                     	;# 
  2217  0094                     	;# 
  2218  0095                     	;# 
  2219  0096                     	;# 
  2220  0097                     	;# 
  2221  0098                     	;# 
  2222  0099                     	;# 
  2223  009A                     	;# 
  2224  009B                     	;# 
  2225  009B                     	;# 
  2226  009C                     	;# 
  2227  009D                     	;# 
  2228  009E                     	;# 
  2229  010C                     	;# 
  2230  010D                     	;# 
  2231  0111                     	;# 
  2232  0112                     	;# 
  2233  0113                     	;# 
  2234  0114                     	;# 
  2235  0115                     	;# 
  2236  0116                     	;# 
  2237  0117                     	;# 
  2238  0118                     	;# 
  2239  0119                     	;# 
  2240  011A                     	;# 
  2241  011B                     	;# 
  2242  011D                     	;# 
  2243  011E                     	;# 
  2244  018C                     	;# 
  2245  018D                     	;# 
  2246  0191                     	;# 
  2247  0191                     	;# 
  2248  0192                     	;# 
  2249  0193                     	;# 
  2250  0193                     	;# 
  2251  0193                     	;# 
  2252  0194                     	;# 
  2253  0195                     	;# 
  2254  0196                     	;# 
  2255  0199                     	;# 
  2256  019A                     	;# 
  2257  019B                     	;# 
  2258  019B                     	;# 
  2259  019B                     	;# 
  2260  019B                     	;# 
  2261  019C                     	;# 
  2262  019C                     	;# 
  2263  019D                     	;# 
  2264  019E                     	;# 
  2265  019F                     	;# 
  2266  020C                     	;# 
  2267  020D                     	;# 
  2268  0211                     	;# 
  2269  0211                     	;# 
  2270  0212                     	;# 
  2271  0212                     	;# 
  2272  0213                     	;# 
  2273  0213                     	;# 
  2274  0214                     	;# 
  2275  0214                     	;# 
  2276  0215                     	;# 
  2277  0215                     	;# 
  2278  0215                     	;# 
  2279  0216                     	;# 
  2280  0216                     	;# 
  2281  0217                     	;# 
  2282  0217                     	;# 
  2283  0219                     	;# 
  2284  021A                     	;# 
  2285  021B                     	;# 
  2286  021C                     	;# 
  2287  021D                     	;# 
  2288  021E                     	;# 
  2289  021F                     	;# 
  2290  0291                     	;# 
  2291  0291                     	;# 
  2292  0292                     	;# 
  2293  0293                     	;# 
  2294  0294                     	;# 
  2295  0295                     	;# 
  2296  0295                     	;# 
  2297  0296                     	;# 
  2298  0298                     	;# 
  2299  0298                     	;# 
  2300  0299                     	;# 
  2301  029A                     	;# 
  2302  029B                     	;# 
  2303  029C                     	;# 
  2304  029C                     	;# 
  2305  029D                     	;# 
  2306  029E                     	;# 
  2307  029E                     	;# 
  2308  0311                     	;# 
  2309  0311                     	;# 
  2310  0312                     	;# 
  2311  0313                     	;# 
  2312  0318                     	;# 
  2313  0318                     	;# 
  2314  0319                     	;# 
  2315  031A                     	;# 
  2316  0394                     	;# 
  2317  0395                     	;# 
  2318  0396                     	;# 
  2319  039A                     	;# 
  2320  039C                     	;# 
  2321  039D                     	;# 
  2322  039E                     	;# 
  2323  039F                     	;# 
  2324  0415                     	;# 
  2325  0416                     	;# 
  2326  0417                     	;# 
  2327  041C                     	;# 
  2328  041D                     	;# 
  2329  041E                     	;# 
  2330  0FE4                     	;# 
  2331  0FE5                     	;# 
  2332  0FE6                     	;# 
  2333  0FE7                     	;# 
  2334  0FE8                     	;# 
  2335  0FE9                     	;# 
  2336  0FEA                     	;# 
  2337  0FEB                     	;# 
  2338  0FED                     	;# 
  2339  0FEE                     	;# 
  2340  0FEF                     	;# 
  2341  0000                     	;# 
  2342  0001                     	;# 
  2343  0002                     	;# 
  2344  0003                     	;# 
  2345  0004                     	;# 
  2346  0005                     	;# 
  2347  0006                     	;# 
  2348  0007                     	;# 
  2349  0008                     	;# 
  2350  0009                     	;# 
  2351  000A                     	;# 
  2352  000B                     	;# 
  2353  000C                     	;# 
  2354  000D                     	;# 
  2355  0011                     	;# 
  2356  0012                     	;# 
  2357  0013                     	;# 
  2358  0014                     	;# 
  2359  0015                     	;# 
  2360  0016                     	;# 
  2361  0016                     	;# 
  2362  0017                     	;# 
  2363  0018                     	;# 
  2364  0019                     	;# 
  2365  001A                     	;# 
  2366  001B                     	;# 
  2367  001C                     	;# 
  2368  001E                     	;# 
  2369  001F                     	;# 
  2370  008C                     	;# 
  2371  008D                     	;# 
  2372  0091                     	;# 
  2373  0092                     	;# 
  2374  0093                     	;# 
  2375  0094                     	;# 
  2376  0095                     	;# 
  2377  0096                     	;# 
  2378  0097                     	;# 
  2379  0098                     	;# 
  2380  0099                     	;# 
  2381  009A                     	;# 
  2382  009B                     	;# 
  2383  009B                     	;# 
  2384  009C                     	;# 
  2385  009D                     	;# 
  2386  009E                     	;# 
  2387  010C                     	;# 
  2388  010D                     	;# 
  2389  0111                     	;# 
  2390  0112                     	;# 
  2391  0113                     	;# 
  2392  0114                     	;# 
  2393  0115                     	;# 
  2394  0116                     	;# 
  2395  0117                     	;# 
  2396  0118                     	;# 
  2397  0119                     	;# 
  2398  011A                     	;# 
  2399  011B                     	;# 
  2400  011D                     	;# 
  2401  011E                     	;# 
  2402  018C                     	;# 
  2403  018D                     	;# 
  2404  0191                     	;# 
  2405  0191                     	;# 
  2406  0192                     	;# 
  2407  0193                     	;# 
  2408  0193                     	;# 
  2409  0193                     	;# 
  2410  0194                     	;# 
  2411  0195                     	;# 
  2412  0196                     	;# 
  2413  0199                     	;# 
  2414  019A                     	;# 
  2415  019B                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019C                     	;# 
  2420  019C                     	;# 
  2421  019D                     	;# 
  2422  019E                     	;# 
  2423  019F                     	;# 
  2424  020C                     	;# 
  2425  020D                     	;# 
  2426  0211                     	;# 
  2427  0211                     	;# 
  2428  0212                     	;# 
  2429  0212                     	;# 
  2430  0213                     	;# 
  2431  0213                     	;# 
  2432  0214                     	;# 
  2433  0214                     	;# 
  2434  0215                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0216                     	;# 
  2438  0216                     	;# 
  2439  0217                     	;# 
  2440  0217                     	;# 
  2441  0219                     	;# 
  2442  021A                     	;# 
  2443  021B                     	;# 
  2444  021C                     	;# 
  2445  021D                     	;# 
  2446  021E                     	;# 
  2447  021F                     	;# 
  2448  0291                     	;# 
  2449  0291                     	;# 
  2450  0292                     	;# 
  2451  0293                     	;# 
  2452  0294                     	;# 
  2453  0295                     	;# 
  2454  0295                     	;# 
  2455  0296                     	;# 
  2456  0298                     	;# 
  2457  0298                     	;# 
  2458  0299                     	;# 
  2459  029A                     	;# 
  2460  029B                     	;# 
  2461  029C                     	;# 
  2462  029C                     	;# 
  2463  029D                     	;# 
  2464  029E                     	;# 
  2465  029E                     	;# 
  2466  0311                     	;# 
  2467  0311                     	;# 
  2468  0312                     	;# 
  2469  0313                     	;# 
  2470  0318                     	;# 
  2471  0318                     	;# 
  2472  0319                     	;# 
  2473  031A                     	;# 
  2474  0394                     	;# 
  2475  0395                     	;# 
  2476  0396                     	;# 
  2477  039A                     	;# 
  2478  039C                     	;# 
  2479  039D                     	;# 
  2480  039E                     	;# 
  2481  039F                     	;# 
  2482  0415                     	;# 
  2483  0416                     	;# 
  2484  0417                     	;# 
  2485  041C                     	;# 
  2486  041D                     	;# 
  2487  041E                     	;# 
  2488  0FE4                     	;# 
  2489  0FE5                     	;# 
  2490  0FE6                     	;# 
  2491  0FE7                     	;# 
  2492  0FE8                     	;# 
  2493  0FE9                     	;# 
  2494  0FEA                     	;# 
  2495  0FEB                     	;# 
  2496  0FED                     	;# 
  2497  0FEE                     	;# 
  2498  0FEF                     	;# 
  2499  0000                     	;# 
  2500  0001                     	;# 
  2501  0002                     	;# 
  2502  0003                     	;# 
  2503  0004                     	;# 
  2504  0005                     	;# 
  2505  0006                     	;# 
  2506  0007                     	;# 
  2507  0008                     	;# 
  2508  0009                     	;# 
  2509  000A                     	;# 
  2510  000B                     	;# 
  2511  000C                     	;# 
  2512  000D                     	;# 
  2513  0011                     	;# 
  2514  0012                     	;# 
  2515  0013                     	;# 
  2516  0014                     	;# 
  2517  0015                     	;# 
  2518  0016                     	;# 
  2519  0016                     	;# 
  2520  0017                     	;# 
  2521  0018                     	;# 
  2522  0019                     	;# 
  2523  001A                     	;# 
  2524  001B                     	;# 
  2525  001C                     	;# 
  2526  001E                     	;# 
  2527  001F                     	;# 
  2528  008C                     	;# 
  2529  008D                     	;# 
  2530  0091                     	;# 
  2531  0092                     	;# 
  2532  0093                     	;# 
  2533  0094                     	;# 
  2534  0095                     	;# 
  2535  0096                     	;# 
  2536  0097                     	;# 
  2537  0098                     	;# 
  2538  0099                     	;# 
  2539  009A                     	;# 
  2540  009B                     	;# 
  2541  009B                     	;# 
  2542  009C                     	;# 
  2543  009D                     	;# 
  2544  009E                     	;# 
  2545  010C                     	;# 
  2546  010D                     	;# 
  2547  0111                     	;# 
  2548  0112                     	;# 
  2549  0113                     	;# 
  2550  0114                     	;# 
  2551  0115                     	;# 
  2552  0116                     	;# 
  2553  0117                     	;# 
  2554  0118                     	;# 
  2555  0119                     	;# 
  2556  011A                     	;# 
  2557  011B                     	;# 
  2558  011D                     	;# 
  2559  011E                     	;# 
  2560  018C                     	;# 
  2561  018D                     	;# 
  2562  0191                     	;# 
  2563  0191                     	;# 
  2564  0192                     	;# 
  2565  0193                     	;# 
  2566  0193                     	;# 
  2567  0193                     	;# 
  2568  0194                     	;# 
  2569  0195                     	;# 
  2570  0196                     	;# 
  2571  0199                     	;# 
  2572  019A                     	;# 
  2573  019B                     	;# 
  2574  019B                     	;# 
  2575  019B                     	;# 
  2576  019B                     	;# 
  2577  019C                     	;# 
  2578  019C                     	;# 
  2579  019D                     	;# 
  2580  019E                     	;# 
  2581  019F                     	;# 
  2582  020C                     	;# 
  2583  020D                     	;# 
  2584  0211                     	;# 
  2585  0211                     	;# 
  2586  0212                     	;# 
  2587  0212                     	;# 
  2588  0213                     	;# 
  2589  0213                     	;# 
  2590  0214                     	;# 
  2591  0214                     	;# 
  2592  0215                     	;# 
  2593  0215                     	;# 
  2594  0215                     	;# 
  2595  0216                     	;# 
  2596  0216                     	;# 
  2597  0217                     	;# 
  2598  0217                     	;# 
  2599  0219                     	;# 
  2600  021A                     	;# 
  2601  021B                     	;# 
  2602  021C                     	;# 
  2603  021D                     	;# 
  2604  021E                     	;# 
  2605  021F                     	;# 
  2606  0291                     	;# 
  2607  0291                     	;# 
  2608  0292                     	;# 
  2609  0293                     	;# 
  2610  0294                     	;# 
  2611  0295                     	;# 
  2612  0295                     	;# 
  2613  0296                     	;# 
  2614  0298                     	;# 
  2615  0298                     	;# 
  2616  0299                     	;# 
  2617  029A                     	;# 
  2618  029B                     	;# 
  2619  029C                     	;# 
  2620  029C                     	;# 
  2621  029D                     	;# 
  2622  029E                     	;# 
  2623  029E                     	;# 
  2624  0311                     	;# 
  2625  0311                     	;# 
  2626  0312                     	;# 
  2627  0313                     	;# 
  2628  0318                     	;# 
  2629  0318                     	;# 
  2630  0319                     	;# 
  2631  031A                     	;# 
  2632  0394                     	;# 
  2633  0395                     	;# 
  2634  0396                     	;# 
  2635  039A                     	;# 
  2636  039C                     	;# 
  2637  039D                     	;# 
  2638  039E                     	;# 
  2639  039F                     	;# 
  2640  0415                     	;# 
  2641  0416                     	;# 
  2642  0417                     	;# 
  2643  041C                     	;# 
  2644  041D                     	;# 
  2645  041E                     	;# 
  2646  0FE4                     	;# 
  2647  0FE5                     	;# 
  2648  0FE6                     	;# 
  2649  0FE7                     	;# 
  2650  0FE8                     	;# 
  2651  0FE9                     	;# 
  2652  0FEA                     	;# 
  2653  0FEB                     	;# 
  2654  0FED                     	;# 
  2655  0FEE                     	;# 
  2656  0FEF                     	;# 
  2657  0000                     	;# 
  2658  0001                     	;# 
  2659  0002                     	;# 
  2660  0003                     	;# 
  2661  0004                     	;# 
  2662  0005                     	;# 
  2663  0006                     	;# 
  2664  0007                     	;# 
  2665  0008                     	;# 
  2666  0009                     	;# 
  2667  000A                     	;# 
  2668  000B                     	;# 
  2669  000C                     	;# 
  2670  000D                     	;# 
  2671  0011                     	;# 
  2672  0012                     	;# 
  2673  0013                     	;# 
  2674  0014                     	;# 
  2675  0015                     	;# 
  2676  0016                     	;# 
  2677  0016                     	;# 
  2678  0017                     	;# 
  2679  0018                     	;# 
  2680  0019                     	;# 
  2681  001A                     	;# 
  2682  001B                     	;# 
  2683  001C                     	;# 
  2684  001E                     	;# 
  2685  001F                     	;# 
  2686  008C                     	;# 
  2687  008D                     	;# 
  2688  0091                     	;# 
  2689  0092                     	;# 
  2690  0093                     	;# 
  2691  0094                     	;# 
  2692  0095                     	;# 
  2693  0096                     	;# 
  2694  0097                     	;# 
  2695  0098                     	;# 
  2696  0099                     	;# 
  2697  009A                     	;# 
  2698  009B                     	;# 
  2699  009B                     	;# 
  2700  009C                     	;# 
  2701  009D                     	;# 
  2702  009E                     	;# 
  2703  010C                     	;# 
  2704  010D                     	;# 
  2705  0111                     	;# 
  2706  0112                     	;# 
  2707  0113                     	;# 
  2708  0114                     	;# 
  2709  0115                     	;# 
  2710  0116                     	;# 
  2711  0117                     	;# 
  2712  0118                     	;# 
  2713  0119                     	;# 
  2714  011A                     	;# 
  2715  011B                     	;# 
  2716  011D                     	;# 
  2717  011E                     	;# 
  2718  018C                     	;# 
  2719  018D                     	;# 
  2720  0191                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0193                     	;# 
  2724  0193                     	;# 
  2725  0193                     	;# 
  2726  0194                     	;# 
  2727  0195                     	;# 
  2728  0196                     	;# 
  2729  0199                     	;# 
  2730  019A                     	;# 
  2731  019B                     	;# 
  2732  019B                     	;# 
  2733  019B                     	;# 
  2734  019B                     	;# 
  2735  019C                     	;# 
  2736  019C                     	;# 
  2737  019D                     	;# 
  2738  019E                     	;# 
  2739  019F                     	;# 
  2740  020C                     	;# 
  2741  020D                     	;# 
  2742  0211                     	;# 
  2743  0211                     	;# 
  2744  0212                     	;# 
  2745  0212                     	;# 
  2746  0213                     	;# 
  2747  0213                     	;# 
  2748  0214                     	;# 
  2749  0214                     	;# 
  2750  0215                     	;# 
  2751  0215                     	;# 
  2752  0215                     	;# 
  2753  0216                     	;# 
  2754  0216                     	;# 
  2755  0217                     	;# 
  2756  0217                     	;# 
  2757  0219                     	;# 
  2758  021A                     	;# 
  2759  021B                     	;# 
  2760  021C                     	;# 
  2761  021D                     	;# 
  2762  021E                     	;# 
  2763  021F                     	;# 
  2764  0291                     	;# 
  2765  0291                     	;# 
  2766  0292                     	;# 
  2767  0293                     	;# 
  2768  0294                     	;# 
  2769  0295                     	;# 
  2770  0295                     	;# 
  2771  0296                     	;# 
  2772  0298                     	;# 
  2773  0298                     	;# 
  2774  0299                     	;# 
  2775  029A                     	;# 
  2776  029B                     	;# 
  2777  029C                     	;# 
  2778  029C                     	;# 
  2779  029D                     	;# 
  2780  029E                     	;# 
  2781  029E                     	;# 
  2782  0311                     	;# 
  2783  0311                     	;# 
  2784  0312                     	;# 
  2785  0313                     	;# 
  2786  0318                     	;# 
  2787  0318                     	;# 
  2788  0319                     	;# 
  2789  031A                     	;# 
  2790  0394                     	;# 
  2791  0395                     	;# 
  2792  0396                     	;# 
  2793  039A                     	;# 
  2794  039C                     	;# 
  2795  039D                     	;# 
  2796  039E                     	;# 
  2797  039F                     	;# 
  2798  0415                     	;# 
  2799  0416                     	;# 
  2800  0417                     	;# 
  2801  041C                     	;# 
  2802  041D                     	;# 
  2803  041E                     	;# 
  2804  0FE4                     	;# 
  2805  0FE5                     	;# 
  2806  0FE6                     	;# 
  2807  0FE7                     	;# 
  2808  0FE8                     	;# 
  2809  0FE9                     	;# 
  2810  0FEA                     	;# 
  2811  0FEB                     	;# 
  2812  0FED                     	;# 
  2813  0FEE                     	;# 
  2814  0FEF                     	;# 
  2815                           
  2816 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2817  0000                     
  2818 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2819  0000                     
  2820 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2821  0000                     
  2822                           	psect	idataBANK0
  2823  0003                     __pidataBANK0:
  2824                           
  2825                           ;initializer for _subindo
  2826  0003  3401               	retlw	1
  2827                           
  2828                           	psect	idataBANK1
  2829  0002                     __pidataBANK1:
  2830                           
  2831                           ;initializer for _mov
  2832  0002  3402               	retlw	2
  2833                           
  2834                           	psect	stringtext1
  2835  0800                     __pstringtext1:
  2836  0800                     _matrix_conf:
  2837  0800  3409               	retlw	9
  2838  0801  3400               	retlw	0
  2839  0802  340A               	retlw	10
  2840  0803  3400               	retlw	0
  2841  0804  340B               	retlw	11
  2842  0805  3407               	retlw	7
  2843  0806  340C               	retlw	12
  2844  0807  3401               	retlw	1
  2845  0808  340F               	retlw	15
  2846  0809  3401               	retlw	1
  2847  080A  340F               	retlw	15
  2848  080B  3400               	retlw	0
  2849  080C                     __end_of_matrix_conf:
  2850                           
  2851                           	psect	stringtext2
  2852  080C                     __pstringtext2:
  2853  080C                     _spi1_configuration:
  2854  080C  3400               	retlw	0
  2855  080D  3440               	retlw	64
  2856  080E  3401               	retlw	1
  2857  080F  3400               	retlw	0
  2858  0810                     __end_of_spi1_configuration:
  2859                           
  2860                           	psect	nvBANK0
  2861  005E                     __pnvBANK0:
  2862  005E                     _TMR4_InterruptHandler:
  2863  005E                     	ds	2
  2864  0060                     _CCP4_CallBack:
  2865  0060                     	ds	2
  2866  0062                     _TMR0_InterruptHandler:
  2867  0062                     	ds	2
  2868  0064                     _timer1ReloadVal:
  2869  0064                     	ds	2
  2870  0066                     _IOCBF3_InterruptHandler:
  2871  0066                     	ds	2
  2872  0068                     _IOCBF0_InterruptHandler:
  2873  0068                     	ds	2
  2874  006A                     _timer0ReloadVal:
  2875  006A                     	ds	1
  2876                           
  2877                           	psect	nvBANK1
  2878  00C4                     __pnvBANK1:
  2879  00C4                     _EUSART_ErrorHandler:
  2880  00C4                     	ds	2
  2881  00C6                     _EUSART_OverrunErrorHandler:
  2882  00C6                     	ds	2
  2883  00C8                     _EUSART_FramingErrorHandler:
  2884  00C8                     	ds	2
  2885  0015                     _TMR0	set	21
  2886  001C                     _T2CONbits	set	28
  2887  001C                     _T2CON	set	28
  2888  001A                     _TMR2	set	26
  2889  001B                     _PR2	set	27
  2890  0019                     _T1GCONbits	set	25
  2891  0018                     _T1CONbits	set	24
  2892  0018                     _T1CON	set	24
  2893  0016                     _TMR1L	set	22
  2894  0017                     _TMR1H	set	23
  2895  0019                     _T1GCON	set	25
  2896  0013                     _PIR3bits	set	19
  2897  0011                     _PIR1bits	set	17
  2898  000B                     _INTCONbits	set	11
  2899  0012                     _PIR2bits	set	18
  2900  0095                     _OPTION_REG	set	149
  2901  0093                     _PIE3bits	set	147
  2902  008D                     _TRISBbits	set	141
  2903  009D                     _ADCON0bits	set	157
  2904  009D                     _ADCON0	set	157
  2905  009C                     _ADRESH	set	156
  2906  009B                     _ADRESL	set	155
  2907  009E                     _ADCON1	set	158
  2908  0097                     _WDTCON	set	151
  2909  0098                     _OSCTUNE	set	152
  2910  0099                     _OSCCON	set	153
  2911  0095                     _OPTION_REGbits	set	149
  2912  008D                     _TRISB	set	141
  2913  008C                     _TRISA	set	140
  2914  0092                     _PIE2bits	set	146
  2915  010C                     _LATAbits	set	268
  2916  010D                     _LATBbits	set	269
  2917  0117                     _FVRCONbits	set	279
  2918  0117                     _FVRCON	set	279
  2919  0116                     _BORCON	set	278
  2920  011E                     _APFCON1	set	286
  2921  011D                     _APFCON0	set	285
  2922  010D                     _LATB	set	269
  2923  010C                     _LATA	set	268
  2924  0112                     _CM1CON1	set	274
  2925  0111                     _CM1CON0	set	273
  2926  0115                     _CMOUTbits	set	277
  2927  0114                     _CM2CON1	set	276
  2928  0113                     _CM2CON0	set	275
  2929  019A                     _TXREG	set	410
  2930  0199                     _RCREG	set	409
  2931  019D                     _RCSTAbits	set	413
  2932  019E                     _TXSTAbits	set	414
  2933  019C                     _SPBRGH	set	412
  2934  019B                     _SPBRGL	set	411
  2935  019E                     _TXSTA	set	414
  2936  019D                     _RCSTA	set	413
  2937  019F                     _BAUDCON	set	415
  2938  018C                     _ANSELA	set	396
  2939  018D                     _ANSELB	set	397
  2940  0211                     _SSP1BUF	set	529
  2941  0216                     _SSP1CON2	set	534
  2942  0215                     _SSP1CON1bits	set	533
  2943  0212                     _SSP1ADD	set	530
  2944  0215                     _SSP1CON1	set	533
  2945  0214                     _SSP1STAT	set	532
  2946  020C                     _WPUA	set	524
  2947  020D                     _WPUB	set	525
  2948  029E                     _CCPTMRS0bits	set	670
  2949  0319                     _CCPR4H	set	793
  2950  0318                     _CCPR4L	set	792
  2951  031A                     _CCP4CON	set	794
  2952  0312                     _CCPR3H	set	786
  2953  0311                     _CCPR3L	set	785
  2954  0313                     _CCP3CON	set	787
  2955  0394                     _IOCBPbits	set	916
  2956  0395                     _IOCBNbits	set	917
  2957  0396                     _IOCBFbits	set	918
  2958  0417                     _T4CONbits	set	1047
  2959  0417                     _T4CON	set	1047
  2960  0415                     _TMR4	set	1045
  2961  0416                     _PR4	set	1046
  2962                           
  2963                           	psect	cinit
  2964  0058                     start_initialization:	
  2965                           ; #config settings
  2966                           
  2967  0058                     __initialization:
  2968                           
  2969                           ; Initialize objects allocated to BANK0
  2970  0058  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  2971  005B  00EB               	movwf	__pdataBANK0& (0+127)
  2972                           
  2973                           ; Initialize objects allocated to BANK1
  2974  005C  0021               	movlb	1	; select bank1
  2975  005D  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  2976  0060  00CA               	movwf	__pdataBANK1& (0+127)
  2977                           
  2978                           ; Clear objects allocated to BANK0
  2979  0061  3046               	movlw	low __pbssBANK0
  2980  0062  0084               	movwf	4
  2981  0063  3000               	movlw	high __pbssBANK0
  2982  0064  0085               	movwf	5
  2983  0065  3018               	movlw	24
  2984  0066  318B  23C8  3180   	fcall	clear_ram0
  2985                           
  2986                           ; Clear objects allocated to BANK1
  2987  0069  30B3               	movlw	low __pbssBANK1
  2988  006A  0084               	movwf	4
  2989  006B  3000               	movlw	high __pbssBANK1
  2990  006C  0085               	movwf	5
  2991  006D  3011               	movlw	17
  2992  006E  318B  23C8  3180   	fcall	clear_ram0
  2993  0071                     end_of_initialization:	
  2994                           ;End of C runtime variable initialization code
  2995                           
  2996  0071                     __end_of__initialization:
  2997  0071  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2998  0072  0020               	movlb	0
  2999  0073  3183  2BBB         	ljmp	_main	;jump to C main() function
  3000                           
  3001                           	psect	bssBANK0
  3002  0046                     __pbssBANK0:
  3003  0046                     _velocidadeMotor:
  3004  0046                     	ds	4
  3005  004A                     TMR4_ISR@CountCallBack:
  3006  004A                     	ds	2
  3007  004C                     TMR0_ISR@CountCallBack:
  3008  004C                     	ds	2
  3009  004E                     _ADC_InterruptHandler:
  3010  004E                     	ds	2
  3011  0050                     _temperatura:
  3012  0050                     	ds	2
  3013  0052                     _t2:
  3014  0052                     	ds	2
  3015  0054                     _t1:
  3016  0054                     	ds	2
  3017  0056                     controleMovimento@cont:
  3018  0056                     	ds	1
  3019  0057                     _eusartRxLastError:
  3020  0057                     	ds	1
  3021  0058                     _altura:
  3022  0058                     	ds	1
  3023  0059                     _andarAtual:
  3024  0059                     	ds	1
  3025  005A                     _flag:
  3026  005A                     	ds	1
  3027  005B                     _pulsoEncoder:
  3028  005B                     	ds	1
  3029  005C                     _RXaccepted:
  3030  005C                     	ds	1
  3031  005D                     _waitRX:
  3032  005D                     	ds	1
  3033                           
  3034                           	psect	dataBANK0
  3035  006B                     __pdataBANK0:
  3036  006B                     _subindo:
  3037  006B                     	ds	1
  3038                           
  3039                           	psect	bssBANK1
  3040  00B3                     __pbssBANK1:
  3041  00B3                     _MatrixLed:
  3042  00B3                     	ds	8
  3043  00BB                     _destinoDesc:
  3044  00BB                     	ds	1
  3045  00BC                     _destinoSub:
  3046  00BC                     	ds	1
  3047  00BD                     _dTemp:
  3048  00BD                     	ds	1
  3049  00BE                     _oTemp:
  3050  00BE                     	ds	1
  3051  00BF                     _contComandos:
  3052  00BF                     	ds	1
  3053  00C0                     _rxValue:
  3054  00C0                     	ds	1
  3055  00C1                     _state:
  3056  00C1                     	ds	1
  3057  00C2                     _destino:
  3058  00C2                     	ds	1
  3059  00C3                     _origem:
  3060  00C3                     	ds	1
  3061                           
  3062                           	psect	dataBANK1
  3063  00CA                     __pdataBANK1:
  3064  00CA                     _mov:
  3065  00CA                     	ds	1
  3066                           
  3067                           	psect	clrtext
  3068  0BC8                     clear_ram0:	
  3069                           ;	Called with FSR0 containing the base address, and
  3070                           ;	WREG with the size to clear
  3071                           
  3072  0BC8  0064               	clrwdt	;clear the watchdog before getting into this loop
  3073  0BC9                     clrloop0:
  3074  0BC9  0180               	clrf	0	;clear RAM location pointed to by FSR
  3075  0BCA  3101               	addfsr 0,1
  3076  0BCB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3077  0BCC  2BC9               	goto	clrloop0	;have we reached the end yet?
  3078  0BCD  3400               	retlw	0	;all done for this memory range, return
  3079                           
  3080                           	psect	cstackBANK1
  3081  00A0                     __pcstackBANK1:
  3082  00A0                     ?_IOCBF0_SetInterruptHandler:
  3083  00A0                     ?_IOCBF3_SetInterruptHandler:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086  00A0                     ??_SPI1_Initialize:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089  00A0                     ??_OSCILLATOR_Initialize:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092  00A0                     ??_WDT_Initialize:	
  3093                           ; 1 bytes @ 0x0
  3094                           
  3095  00A0                     ??_FVR_Initialize:	
  3096                           ; 1 bytes @ 0x0
  3097                           
  3098  00A0                     ??_TMR2_Initialize:	
  3099                           ; 1 bytes @ 0x0
  3100                           
  3101  00A0                     ??_ADC_Initialize:	
  3102                           ; 1 bytes @ 0x0
  3103                           
  3104  00A0                     ??_TMR1_Initialize:	
  3105                           ; 1 bytes @ 0x0
  3106                           
  3107  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3108                           ; 1 bytes @ 0x0
  3109                           
  3110  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3111                           ; 1 bytes @ 0x0
  3112                           
  3113  00A0                     ?_EUSART_SetErrorHandler:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116  00A0                     ?_TMR0_SetInterruptHandler:	
  3117                           ; 1 bytes @ 0x0
  3118                           
  3119  00A0                     ?_CCP4_SetCallBack:	
  3120                           ; 1 bytes @ 0x0
  3121                           
  3122  00A0                     ?_TMR4_SetInterruptHandler:	
  3123                           ; 1 bytes @ 0x0
  3124                           
  3125  00A0                     ??_PWM3_Initialize:	
  3126                           ; 1 bytes @ 0x0
  3127                           
  3128  00A0                     ??_CMP2_Initialize:	
  3129                           ; 1 bytes @ 0x0
  3130                           
  3131  00A0                     ??_CMP1_Initialize:	
  3132                           ; 1 bytes @ 0x0
  3133                           
  3134  00A0                     ??_EUSART_is_rx_ready:	
  3135                           ; 1 bytes @ 0x0
  3136                           
  3137  00A0                     ??_EUSART_Read:	
  3138                           ; 1 bytes @ 0x0
  3139                           
  3140  00A0                     ??_SPI1_Open:	
  3141                           ; 1 bytes @ 0x0
  3142                           
  3143  00A0                     ?_SPI1_ExchangeBlock:	
  3144                           ; 1 bytes @ 0x0
  3145                           
  3146  00A0                     ??_TMR4_WriteTimer:	
  3147                           ; 1 bytes @ 0x0
  3148                           
  3149  00A0                     ??_isValidFloor:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152  00A0                     TMR4_WriteTimer@timerVal:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155  00A0                     _isValidFloor$1563:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158  00A0                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161  00A0                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3162                           ; 2 bytes @ 0x0
  3163                           
  3164  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3165                           ; 2 bytes @ 0x0
  3166                           
  3167  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3168                           ; 2 bytes @ 0x0
  3169                           
  3170  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3171                           ; 2 bytes @ 0x0
  3172                           
  3173  00A0                     SPI1_ExchangeBlock@blockSize:	
  3174                           ; 2 bytes @ 0x0
  3175                           
  3176  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3177                           ; 2 bytes @ 0x0
  3178                           
  3179  00A0                     CCP4_SetCallBack@customCallBack:	
  3180                           ; 2 bytes @ 0x0
  3181                           
  3182  00A0                     TMR4_SetInterruptHandler@InterruptHandler:	
  3183                           ; 2 bytes @ 0x0
  3184                           
  3185                           
  3186                           ; 2 bytes @ 0x0
  3187  00A0                     	ds	1
  3188  00A1                     ??_organizaTrajeto:
  3189  00A1                     isValidFloor@floor:	
  3190                           ; 1 bytes @ 0x1
  3191                           
  3192                           
  3193                           ; 1 bytes @ 0x1
  3194  00A1                     	ds	1
  3195  00A2                     ??_IOCBF0_SetInterruptHandler:
  3196  00A2                     ??_IOCBF3_SetInterruptHandler:	
  3197                           ; 1 bytes @ 0x2
  3198                           
  3199  00A2                     ??_TMR4_Initialize:	
  3200                           ; 1 bytes @ 0x2
  3201                           
  3202  00A2                     ??_TMR0_Initialize:	
  3203                           ; 1 bytes @ 0x2
  3204                           
  3205  00A2                     ??_CCP4_Initialize:	
  3206                           ; 1 bytes @ 0x2
  3207                           
  3208  00A2                     ??_EUSART_Initialize:	
  3209                           ; 1 bytes @ 0x2
  3210                           
  3211  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3212                           ; 1 bytes @ 0x2
  3213                           
  3214  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3215                           ; 1 bytes @ 0x2
  3216                           
  3217  00A2                     ??_EUSART_SetErrorHandler:	
  3218                           ; 1 bytes @ 0x2
  3219                           
  3220  00A2                     ??_TMR0_SetInterruptHandler:	
  3221                           ; 1 bytes @ 0x2
  3222                           
  3223  00A2                     ??_CCP4_SetCallBack:	
  3224                           ; 1 bytes @ 0x2
  3225                           
  3226  00A2                     ??_TMR4_SetInterruptHandler:	
  3227                           ; 1 bytes @ 0x2
  3228                           
  3229  00A2                     ??_PIN_MANAGER_Initialize:	
  3230                           ; 1 bytes @ 0x2
  3231                           
  3232  00A2                     ??_SPI1_ExchangeBlock:	
  3233                           ; 1 bytes @ 0x2
  3234                           
  3235                           
  3236                           ; 1 bytes @ 0x2
  3237  00A2                     	ds	1
  3238  00A3                     ??_SYSTEM_Initialize:
  3239  00A3                     SPI1_Open@spi1UniqueConfiguration:	
  3240                           ; 1 bytes @ 0x3
  3241                           
  3242  00A3                     SPI1_ExchangeBlock@block:	
  3243                           ; 1 bytes @ 0x3
  3244                           
  3245  00A3                     organizaTrajeto@mascaraOrigem:	
  3246                           ; 1 bytes @ 0x3
  3247                           
  3248                           
  3249                           ; 1 bytes @ 0x3
  3250  00A3                     	ds	1
  3251  00A4                     SPI1_ExchangeBlock@data:
  3252  00A4                     organizaTrajeto@mascaraDestino:	
  3253                           ; 1 bytes @ 0x4
  3254                           
  3255                           
  3256                           ; 1 bytes @ 0x4
  3257  00A4                     	ds	1
  3258  00A5                     ?_txSpi:
  3259  00A5                     txSpi@dataSize:	
  3260                           ; 1 bytes @ 0x5
  3261                           
  3262                           
  3263                           ; 2 bytes @ 0x5
  3264  00A5                     	ds	2
  3265  00A7                     ??_txSpi:
  3266  00A7                     txSpi@data:	
  3267                           ; 1 bytes @ 0x7
  3268                           
  3269                           
  3270                           ; 1 bytes @ 0x7
  3271  00A7                     	ds	1
  3272  00A8                     ??_initMatrix:
  3273                           
  3274                           ; 1 bytes @ 0x8
  3275  00A8                     	ds	1
  3276  00A9                     initMatrix@data:
  3277                           
  3278                           ; 4 bytes @ 0x9
  3279  00A9                     	ds	4
  3280  00AD                     initMatrix@k:
  3281                           
  3282                           ; 1 bytes @ 0xD
  3283  00AD                     	ds	1
  3284  00AE                     initMatrix@i:
  3285                           
  3286                           ; 1 bytes @ 0xE
  3287  00AE                     	ds	1
  3288  00AF                     initMatrix@i_1602:
  3289                           
  3290                           ; 1 bytes @ 0xF
  3291  00AF                     	ds	1
  3292  00B0                     initMatrix@j:
  3293                           
  3294                           ; 1 bytes @ 0x10
  3295  00B0                     	ds	1
  3296  00B1                     ??_main:
  3297                           
  3298                           ; 1 bytes @ 0x11
  3299  00B1                     	ds	2
  3300                           
  3301                           	psect	cstackCOMMON
  3302  0070                     __pcstackCOMMON:
  3303  0070                     ?_chegadaS4:
  3304  0070                     ?_chegadaS3:	
  3305                           ; 1 bytes @ 0x0
  3306                           
  3307  0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3308                           ; 1 bytes @ 0x0
  3309                           
  3310  0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3311                           ; 1 bytes @ 0x0
  3312                           
  3313  0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316  0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3317                           ; 1 bytes @ 0x0
  3318                           
  3319  0070                     ?_IOCBF0_ISR:	
  3320                           ; 1 bytes @ 0x0
  3321                           
  3322  0070                     ?_IOCBF3_ISR:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325  0070                     ?_SPI1_Initialize:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328  0070                     ?_OSCILLATOR_Initialize:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331  0070                     ?_WDT_Initialize:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334  0070                     ?_FVR_Initialize:	
  3335                           ; 1 bytes @ 0x0
  3336                           
  3337  0070                     ?_TMR4_Initialize:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340  0070                     ?_TMR2_Initialize:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343  0070                     ?_TMR0_Initialize:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346  0070                     ?_ADC_Initialize:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349  0070                     ?_CCP4_Initialize:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352  0070                     ?_TMR1_Initialize:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355  0070                     ?_EUSART_Initialize:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358  0070                     ?_TMR0_ISR:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361  0070                     ?_CCP4_CaptureISR:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364  0070                     ?_TMR4_ISR:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367  0070                     ?_TMR0_DefaultInterruptHandler:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370  0070                     ??_TMR0_DefaultInterruptHandler:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373  0070                     ?_TMR0_CallBack:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376  0070                     ?_TMR4_DefaultInterruptHandler:	
  3377                           ; 1 bytes @ 0x0
  3378                           
  3379  0070                     ??_TMR4_DefaultInterruptHandler:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382  0070                     ?_TMR4_CallBack:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385  0070                     ?_memset:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388  0070                     ?_PWM3_Initialize:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391  0070                     ?_PWM3_LoadDutyValue:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394  0070                     ?_CMP2_Initialize:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397  0070                     ?_CMP2_ISR:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400  0070                     ?_CMP1_Initialize:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403  0070                     ?_CMP1_ISR:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406  0070                     ?_PIN_MANAGER_Initialize:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409  0070                     ?_PIN_MANAGER_IOC:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412  0070                     ?_SYSTEM_Initialize:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415  0070                     ?_EUSART_is_rx_ready:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418  0070                     ?_EUSART_Read:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421  0070                     ?_EUSART_Write:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424  0070                     ??_EUSART_Write:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427  0070                     ?_SPI1_Open:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430  0070                     ?_INTERRUPT_InterruptManager:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433  0070                     ?_CCP4_DefaultCallBack:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436  0070                     ?_TMR4_StartTimer:	
  3437                           ; 1 bytes @ 0x0
  3438                           
  3439  0070                     ??_TMR4_StartTimer:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442  0070                     ?_TMR4_StopTimer:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445  0070                     ??_TMR4_StopTimer:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448  0070                     ?_TMR4_WriteTimer:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451  0070                     ?_organizaTrajeto:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454  0070                     ?_isValidFloor:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457  0070                     ?_sendInfo:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460  0070                     ?_matrixUpdate:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463  0070                     ?_initMatrix:	
  3464                           ; 1 bytes @ 0x0
  3465                           
  3466  0070                     ?_controleMovimento:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469  0070                     ?_chegadaS1:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472  0070                     ?_chegadaS2:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475  0070                     ?_main:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478  0070                     ?i1_SPI1_ExchangeBlock:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481  0070                     ?i1_TMR4_WriteTimer:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484  0070                     ??i1_TMR4_WriteTimer:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487  0070                     ?__Umul8_16:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490  0070                     ?_ADC_GetConversion:	
  3491                           ; 2 bytes @ 0x0
  3492                           
  3493  0070                     EUSART_Write@txData:	
  3494                           ; 2 bytes @ 0x0
  3495                           
  3496  0070                     __Umul8_16@multiplicand:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499  0070                     i1TMR4_WriteTimer@timerVal:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502  0070                     PWM3_LoadDutyValue@dutyValue:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505  0070                     CCP4_DefaultCallBack@capturedValue:	
  3506                           ; 2 bytes @ 0x0
  3507                           
  3508  0070                     memset@c:	
  3509                           ; 2 bytes @ 0x0
  3510                           
  3511  0070                     i1SPI1_ExchangeBlock@blockSize:	
  3512                           ; 2 bytes @ 0x0
  3513                           
  3514                           
  3515                           ; 2 bytes @ 0x0
  3516  0070                     	ds	2
  3517  0072                     ??_CCP4_CaptureISR:
  3518  0072                     ??__Umul8_16:	
  3519                           ; 1 bytes @ 0x2
  3520                           
  3521  0072                     ??_PWM3_LoadDutyValue:	
  3522                           ; 1 bytes @ 0x2
  3523                           
  3524  0072                     ??_ADC_GetConversion:	
  3525                           ; 1 bytes @ 0x2
  3526                           
  3527  0072                     ??_CCP4_DefaultCallBack:	
  3528                           ; 1 bytes @ 0x2
  3529                           
  3530  0072                     ??i1_SPI1_ExchangeBlock:	
  3531                           ; 1 bytes @ 0x2
  3532                           
  3533  0072                     memset@n:	
  3534                           ; 1 bytes @ 0x2
  3535                           
  3536                           
  3537                           ; 2 bytes @ 0x2
  3538  0072                     	ds	1
  3539  0073                     ADC_GetConversion@channel:
  3540  0073                     i1SPI1_ExchangeBlock@block:	
  3541                           ; 1 bytes @ 0x3
  3542                           
  3543  0073                     CCP4_CaptureISR@module:	
  3544                           ; 1 bytes @ 0x3
  3545                           
  3546                           
  3547                           ; 2 bytes @ 0x3
  3548  0073                     	ds	1
  3549  0074                     ??_memset:
  3550  0074                     ??_controleMovimento:	
  3551                           ; 1 bytes @ 0x4
  3552                           
  3553  0074                     ?___wmul:	
  3554                           ; 1 bytes @ 0x4
  3555                           
  3556  0074                     i1SPI1_ExchangeBlock@data:	
  3557                           ; 2 bytes @ 0x4
  3558                           
  3559  0074                     ___wmul@multiplier:	
  3560                           ; 1 bytes @ 0x4
  3561                           
  3562  0074                     __Umul8_16@product:	
  3563                           ; 2 bytes @ 0x4
  3564                           
  3565                           
  3566                           ; 2 bytes @ 0x4
  3567  0074                     	ds	1
  3568  0075                     ?i1_txSpi:
  3569  0075                     i1txSpi@dataSize:	
  3570                           ; 1 bytes @ 0x5
  3571                           
  3572                           
  3573                           ; 2 bytes @ 0x5
  3574  0075                     	ds	1
  3575  0076                     ??_TMR4_ISR:
  3576  0076                     ??_TMR4_CallBack:	
  3577                           ; 1 bytes @ 0x6
  3578                           
  3579  0076                     ___wmul@multiplicand:	
  3580                           ; 1 bytes @ 0x6
  3581                           
  3582  0076                     __Umul8_16@word_mpld:	
  3583                           ; 2 bytes @ 0x6
  3584                           
  3585  0076                     memset@k:	
  3586                           ; 2 bytes @ 0x6
  3587                           
  3588                           
  3589                           ; 2 bytes @ 0x6
  3590  0076                     	ds	1
  3591  0077                     ??i1_txSpi:
  3592  0077                     i1txSpi@data:	
  3593                           ; 1 bytes @ 0x7
  3594                           
  3595                           
  3596                           ; 1 bytes @ 0x7
  3597  0077                     	ds	1
  3598  0078                     ??_matrixUpdate:
  3599  0078                     ??___wmul:	
  3600                           ; 1 bytes @ 0x8
  3601                           
  3602  0078                     __Umul8_16@multiplier:	
  3603                           ; 1 bytes @ 0x8
  3604                           
  3605  0078                     memset@dest:	
  3606                           ; 1 bytes @ 0x8
  3607                           
  3608  0078                     ___wmul@product:	
  3609                           ; 1 bytes @ 0x8
  3610                           
  3611                           
  3612                           ; 2 bytes @ 0x8
  3613  0078                     	ds	1
  3614  0079                     ??___flmul:
  3615  0079                     memset@s:	
  3616                           ; 1 bytes @ 0x9
  3617                           
  3618  0079                     matrixUpdate@data:	
  3619                           ; 1 bytes @ 0x9
  3620                           
  3621                           
  3622                           ; 2 bytes @ 0x9
  3623  0079                     	ds	1
  3624  007A                     ?_bin2bcd:
  3625  007A                     bin2bcd@binVal:	
  3626                           ; 2 bytes @ 0xA
  3627                           
  3628                           
  3629                           ; 2 bytes @ 0xA
  3630  007A                     	ds	1
  3631  007B                     matrixUpdate@i:
  3632                           
  3633                           ; 1 bytes @ 0xB
  3634  007B                     	ds	1
  3635  007C                     ??_chegadaS4:
  3636  007C                     ??_chegadaS3:	
  3637                           ; 1 bytes @ 0xC
  3638                           
  3639  007C                     ??_chegadaS1:	
  3640                           ; 1 bytes @ 0xC
  3641                           
  3642  007C                     ??_chegadaS2:	
  3643                           ; 1 bytes @ 0xC
  3644                           
  3645                           
  3646                           ; 1 bytes @ 0xC
  3647  007C                     	ds	1
  3648  007D                     ??_IOCBF0_ISR:
  3649  007D                     ??_IOCBF3_ISR:	
  3650                           ; 1 bytes @ 0xD
  3651                           
  3652  007D                     ??_CMP2_ISR:	
  3653                           ; 1 bytes @ 0xD
  3654                           
  3655  007D                     ??_CMP1_ISR:	
  3656                           ; 1 bytes @ 0xD
  3657                           
  3658  007D                     ??_PIN_MANAGER_IOC:	
  3659                           ; 1 bytes @ 0xD
  3660                           
  3661                           
  3662                           ; 1 bytes @ 0xD
  3663  007D                     	ds	1
  3664  007E                     ??_TMR0_ISR:
  3665  007E                     ??_TMR0_CallBack:	
  3666                           ; 1 bytes @ 0xE
  3667                           
  3668  007E                     ??_INTERRUPT_InterruptManager:	
  3669                           ; 1 bytes @ 0xE
  3670                           
  3671                           
  3672                           	psect	cstackBANK0
  3673  0020                     __pcstackBANK0:	
  3674                           ; 1 bytes @ 0xE
  3675                           
  3676  0020                     ??_bin2bcd:
  3677  0020                     ?___flmul:	
  3678                           ; 1 bytes @ 0x0
  3679                           
  3680  0020                     ___flmul@b:	
  3681                           ; 4 bytes @ 0x0
  3682                           
  3683                           
  3684                           ; 4 bytes @ 0x0
  3685  0020                     	ds	4
  3686  0024                     bin2bcd@i:
  3687  0024                     ___flmul@a:	
  3688                           ; 1 bytes @ 0x4
  3689                           
  3690                           
  3691                           ; 4 bytes @ 0x4
  3692  0024                     	ds	1
  3693  0025                     bin2bcd@dataU:
  3694                           
  3695                           ; 4 bytes @ 0x5
  3696  0025                     	ds	3
  3697  0028                     ___flmul@sign:
  3698                           
  3699                           ; 1 bytes @ 0x8
  3700  0028                     	ds	1
  3701  0029                     ___flmul@grs:
  3702                           
  3703                           ; 4 bytes @ 0x9
  3704  0029                     	ds	4
  3705  002D                     ___flmul@aexp:
  3706                           
  3707                           ; 1 bytes @ 0xD
  3708  002D                     	ds	1
  3709  002E                     ___flmul@bexp:
  3710                           
  3711                           ; 1 bytes @ 0xE
  3712  002E                     	ds	1
  3713  002F                     ___flmul@prod:
  3714                           
  3715                           ; 4 bytes @ 0xF
  3716  002F                     	ds	4
  3717  0033                     ___flmul@temp:
  3718                           
  3719                           ; 2 bytes @ 0x13
  3720  0033                     	ds	2
  3721  0035                     ?___fltol:
  3722  0035                     ___fltol@f1:	
  3723                           ; 4 bytes @ 0x15
  3724                           
  3725                           
  3726                           ; 4 bytes @ 0x15
  3727  0035                     	ds	4
  3728  0039                     ??___fltol:
  3729                           
  3730                           ; 1 bytes @ 0x19
  3731  0039                     	ds	5
  3732  003E                     ___fltol@sign1:
  3733                           
  3734                           ; 1 bytes @ 0x1E
  3735  003E                     	ds	1
  3736  003F                     ___fltol@exp1:
  3737                           
  3738                           ; 1 bytes @ 0x1F
  3739  003F                     	ds	1
  3740  0040                     ??_sendInfo:
  3741                           
  3742                           ; 1 bytes @ 0x20
  3743  0040                     	ds	2
  3744  0042                     sendInfo@velocidade:
  3745                           
  3746                           ; 2 bytes @ 0x22
  3747  0042                     	ds	2
  3748  0044                     sendInfo@bcd:
  3749                           
  3750                           ; 2 bytes @ 0x24
  3751  0044                     	ds	2
  3752                           
  3753                           	psect	maintext
  3754  03BB                     __pmaintext:	
  3755 ;;
  3756 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3757 ;;
  3758 ;; *************** function _main *****************
  3759 ;; Defined at:
  3760 ;;		line 381 in file "main.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : B1F/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3774 ;;      Params:         0       0       0       0       0       0
  3775 ;;      Locals:         0       0       0       0       0       0
  3776 ;;      Temps:          0       0       2       0       0       0
  3777 ;;      Totals:         0       0       2       0       0       0
  3778 ;;Total ram usage:        2 bytes
  3779 ;; Hardware stack levels required when called: 10
  3780 ;; This function calls:
  3781 ;;		_EUSART_Read
  3782 ;;		_EUSART_is_rx_ready
  3783 ;;		_IOCBF0_SetInterruptHandler
  3784 ;;		_IOCBF3_SetInterruptHandler
  3785 ;;		_SPI1_Open
  3786 ;;		_SYSTEM_Initialize
  3787 ;;		_TMR0_SetInterruptHandler
  3788 ;;		_TMR4_SetInterruptHandler
  3789 ;;		_initMatrix
  3790 ;;		_isValidFloor
  3791 ;;		_organizaTrajeto
  3792 ;; This function is called by:
  3793 ;;		Startup code after reset
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797  03BB                     _main:	
  3798                           ;psect for function _main
  3799                           
  3800  03BB                     l4243:	
  3801                           ;incstack = 0
  3802                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3803                           
  3804                           
  3805                           ;main.c: 384:     SYSTEM_Initialize();
  3806  03BB  318E  265F  3183   	fcall	_SYSTEM_Initialize
  3807                           
  3808                           ;main.c: 393:     IOCBF0_SetInterruptHandler(chegadaS1);
  3809  03BE  3006               	movlw	low _chegadaS1
  3810  03BF  0021               	movlb	1	; select bank1
  3811  03C0  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  3812  03C1  300F               	movlw	high _chegadaS1
  3813  03C2  00A1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3814  03C3  318B  23EE  3183   	fcall	_IOCBF0_SetInterruptHandler
  3815                           
  3816                           ;main.c: 394:     IOCBF3_SetInterruptHandler(chegadaS2);
  3817  03C6  309E               	movlw	low _chegadaS2
  3818  03C7  0021               	movlb	1	; select bank1
  3819  03C8  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3820  03C9  3006               	movlw	high _chegadaS2
  3821  03CA  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3822  03CB  318B  23F7  3183   	fcall	_IOCBF3_SetInterruptHandler
  3823                           
  3824                           ;main.c: 395:     TMR4_SetInterruptHandler(controleMovimento);
  3825  03CE  308C               	movlw	low _controleMovimento
  3826  03CF  0021               	movlb	1	; select bank1
  3827  03D0  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  3828  03D1  3007               	movlw	high _controleMovimento
  3829  03D2  00A1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3830  03D3  318C  2412  3183   	fcall	_TMR4_SetInterruptHandler
  3831                           
  3832                           ;main.c: 396:     TMR0_SetInterruptHandler(sendInfo);
  3833  03D6  30CC               	movlw	low _sendInfo
  3834  03D7  0021               	movlb	1	; select bank1
  3835  03D8  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3836  03D9  3002               	movlw	high _sendInfo
  3837  03DA  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3838  03DB  318C  2409  3183   	fcall	_TMR0_SetInterruptHandler
  3839  03DE                     l4245:
  3840  03DE  0022               	movlb	2	; select bank2
  3841  03DF  148D               	bsf	13,1	;volatile
  3842  03E0                     l4247:
  3843                           
  3844                           ;main.c: 400:     SPI1_Open(SPI1_DEFAULT);
  3845  03E0  3000               	movlw	0
  3846  03E1  318F  2755  3183   	fcall	_SPI1_Open
  3847  03E4                     l4249:
  3848                           
  3849                           ;main.c: 401:     initMatrix();
  3850  03E4  318F  27A9  3183   	fcall	_initMatrix
  3851  03E7                     l4251:
  3852                           
  3853                           ;main.c: 404:     (INTCONbits.GIE = 1);
  3854  03E7  178B               	bsf	11,7	;volatile
  3855  03E8                     l4253:
  3856                           
  3857                           ;main.c: 407:     (INTCONbits.PEIE = 1);
  3858  03E8  170B               	bsf	11,6	;volatile
  3859  03E9                     l4255:
  3860                           
  3861                           ;main.c: 416:     {;main.c: 418:         if(EUSART_is_rx_ready()&& contComandos<5){
  3862  03E9  318B  239F  3183   	fcall	_EUSART_is_rx_ready
  3863  03EC  3A00               	xorlw	0
  3864  03ED  1903               	skipnz
  3865  03EE  2BF0               	goto	u3101
  3866  03EF  2BF1               	goto	u3100
  3867  03F0                     u3101:
  3868  03F0  2BE9               	goto	l4255
  3869  03F1                     u3100:
  3870  03F1                     l4257:
  3871  03F1  3005               	movlw	5
  3872  03F2  0021               	movlb	1	; select bank1
  3873  03F3  023F               	subwf	_contComandos^(0+128),w
  3874  03F4  1803               	skipnc
  3875  03F5  2BF7               	goto	u3111
  3876  03F6  2BF8               	goto	u3110
  3877  03F7                     u3111:
  3878  03F7  2BE9               	goto	l4255
  3879  03F8                     u3110:
  3880  03F8                     l4259:
  3881                           
  3882                           ;main.c: 419:             rxValue = EUSART_Read();
  3883  03F8  318C  249C  3183   	fcall	_EUSART_Read
  3884  03FB  0021               	movlb	1	; select bank1
  3885  03FC  00B1               	movwf	??_main^(0+128)
  3886  03FD  0831               	movf	??_main^(0+128),w
  3887  03FE  00C0               	movwf	_rxValue^(0+128)
  3888                           
  3889                           ;main.c: 420:             switch(state){
  3890  03FF  2C4B               	goto	l4293
  3891  0400                     l4261:
  3892                           
  3893                           ;main.c: 422:                     if(rxValue == '$'){
  3894  0400  3024               	movlw	36
  3895  0401  0640               	xorwf	_rxValue^(0+128),w
  3896  0402  1D03               	btfss	3,2
  3897  0403  2C05               	goto	u3121
  3898  0404  2C06               	goto	u3120
  3899  0405                     u3121:
  3900  0405  2C61               	goto	l904
  3901  0406                     u3120:
  3902  0406                     l4263:
  3903                           
  3904                           ;main.c: 423:                         state = FIRST_NUM;
  3905  0406  01C1               	clrf	_state^(0+128)
  3906  0407  0AC1               	incf	_state^(0+128),f
  3907  0408  2BE9               	goto	l4255
  3908  0409                     l4265:
  3909                           
  3910                           ;main.c: 427:                     if(isValidFloor(rxValue)){
  3911  0409  0840               	movf	_rxValue^(0+128),w
  3912  040A  318C  24DF  3183   	fcall	_isValidFloor
  3913  040D  3A00               	xorlw	0
  3914  040E  1903               	skipnz
  3915  040F  2C11               	goto	u3131
  3916  0410  2C12               	goto	u3130
  3917  0411                     u3131:
  3918  0411  2C1D               	goto	l4271
  3919  0412                     u3130:
  3920  0412                     l4267:
  3921                           
  3922                           ;main.c: 428:                         oTemp = rxValue - 0x30;
  3923  0412  0021               	movlb	1	; select bank1
  3924  0413  0840               	movf	_rxValue^(0+128),w
  3925  0414  3ED0               	addlw	208
  3926  0415  00B1               	movwf	??_main^(0+128)
  3927  0416  0831               	movf	??_main^(0+128),w
  3928  0417  00BE               	movwf	_oTemp^(0+128)
  3929  0418                     l4269:
  3930                           
  3931                           ;main.c: 429:                         state = SECOND_NUM;
  3932  0418  3002               	movlw	2
  3933  0419  00B1               	movwf	??_main^(0+128)
  3934  041A  0831               	movf	??_main^(0+128),w
  3935  041B  00C1               	movwf	_state^(0+128)
  3936                           
  3937                           ;main.c: 430:                     }else{
  3938  041C  2BE9               	goto	l4255
  3939  041D                     l4271:
  3940                           
  3941                           ;main.c: 431:                         state = START;
  3942  041D  0021               	movlb	1	; select bank1
  3943  041E  01C1               	clrf	_state^(0+128)
  3944  041F  2BE9               	goto	l4255
  3945  0420                     l4273:
  3946                           
  3947                           ;main.c: 435:                     if(isValidFloor(rxValue)){
  3948  0420  0840               	movf	_rxValue^(0+128),w
  3949  0421  318C  24DF  3183   	fcall	_isValidFloor
  3950  0424  3A00               	xorlw	0
  3951  0425  1903               	skipnz
  3952  0426  2C28               	goto	u3141
  3953  0427  2C29               	goto	u3140
  3954  0428                     u3141:
  3955  0428  2C1D               	goto	l4271
  3956  0429                     u3140:
  3957  0429                     l4275:
  3958                           
  3959                           ;main.c: 436:                         dTemp = rxValue - 0x30;
  3960  0429  0021               	movlb	1	; select bank1
  3961  042A  0840               	movf	_rxValue^(0+128),w
  3962  042B  3ED0               	addlw	208
  3963  042C  00B1               	movwf	??_main^(0+128)
  3964  042D  0831               	movf	??_main^(0+128),w
  3965  042E  00BD               	movwf	_dTemp^(0+128)
  3966  042F                     l4277:
  3967                           
  3968                           ;main.c: 437:                         state = CR;
  3969  042F  3003               	movlw	3
  3970  0430  00B1               	movwf	??_main^(0+128)
  3971  0431  0831               	movf	??_main^(0+128),w
  3972  0432  00C1               	movwf	_state^(0+128)
  3973                           
  3974                           ;main.c: 438:                     }else{
  3975  0433  2BE9               	goto	l4255
  3976  0434                     l4281:
  3977                           
  3978                           ;main.c: 443:                     if(rxValue == 0x0D){
  3979  0434  300D               	movlw	13
  3980  0435  0640               	xorwf	_rxValue^(0+128),w
  3981  0436  1D03               	btfss	3,2
  3982  0437  2C39               	goto	u3151
  3983  0438  2C3A               	goto	u3150
  3984  0439                     u3151:
  3985  0439  2C1D               	goto	l4271
  3986  043A                     u3150:
  3987  043A                     l4283:
  3988                           
  3989                           ;main.c: 444:                         origem = oTemp;
  3990  043A  083E               	movf	_oTemp^(0+128),w
  3991  043B  00B1               	movwf	??_main^(0+128)
  3992  043C  0831               	movf	??_main^(0+128),w
  3993  043D  00C3               	movwf	_origem^(0+128)
  3994                           
  3995                           ;main.c: 445:                         destino = dTemp;
  3996  043E  083D               	movf	_dTemp^(0+128),w
  3997  043F  00B1               	movwf	??_main^(0+128)
  3998  0440  0831               	movf	??_main^(0+128),w
  3999  0441  00C2               	movwf	_destino^(0+128)
  4000  0442                     l4285:
  4001                           
  4002                           ;main.c: 447:                         organizaTrajeto();
  4003  0442  318E  26BE  3183   	fcall	_organizaTrajeto
  4004  0445                     l4287:
  4005                           
  4006                           ;main.c: 448:                         contComandos++;
  4007  0445  3001               	movlw	1
  4008  0446  0021               	movlb	1	; select bank1
  4009  0447  00B1               	movwf	??_main^(0+128)
  4010  0448  0831               	movf	??_main^(0+128),w
  4011  0449  07BF               	addwf	_contComandos^(0+128),f
  4012  044A  2C1D               	goto	l4271
  4013  044B                     l4293:
  4014  044B  0841               	movf	_state^(0+128),w
  4015  044C  00B1               	movwf	??_main^(0+128)
  4016  044D  01B2               	clrf	(??_main^(0+128)+1)
  4017                           
  4018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4019                           ; Switch size 1, requested type "simple"
  4020                           ; Number of cases is 1, Range of values is 0 to 0
  4021                           ; switch strategies available:
  4022                           ; Name         Instructions Cycles
  4023                           ; simple_byte            4     3 (average)
  4024                           ; direct_byte            8     6 (fixed)
  4025                           ; jumptable            260     6 (fixed)
  4026                           ;	Chosen strategy is simple_byte
  4027  044E  0832               	movf	(??_main+1)^(0+128),w
  4028  044F  3A00               	xorlw	0	; case 0
  4029  0450  1903               	skipnz
  4030  0451  2C53               	goto	l4361
  4031  0452  2C1D               	goto	l4271
  4032  0453                     l4361:
  4033                           
  4034                           ; Switch size 1, requested type "simple"
  4035                           ; Number of cases is 4, Range of values is 0 to 3
  4036                           ; switch strategies available:
  4037                           ; Name         Instructions Cycles
  4038                           ; simple_byte           13     7 (average)
  4039                           ; direct_byte           14     6 (fixed)
  4040                           ; jumptable            260     6 (fixed)
  4041                           ;	Chosen strategy is simple_byte
  4042  0453  0831               	movf	??_main^(0+128),w
  4043  0454  3A00               	xorlw	0	; case 0
  4044  0455  1903               	skipnz
  4045  0456  2C00               	goto	l4261
  4046  0457  3A01               	xorlw	1	; case 1
  4047  0458  1903               	skipnz
  4048  0459  2C09               	goto	l4265
  4049  045A  3A03               	xorlw	3	; case 2
  4050  045B  1903               	skipnz
  4051  045C  2C20               	goto	l4273
  4052  045D  3A01               	xorlw	1	; case 3
  4053  045E  1903               	skipnz
  4054  045F  2C34               	goto	l4281
  4055  0460  2C1D               	goto	l4271
  4056  0461                     l904:	
  4057                           ;main.c: 455:         }
  4058                           
  4059  0461  2BE9               	goto	l4255
  4060  0462  3180  2856         	ljmp	start
  4061  0464                     __end_of_main:
  4062                           
  4063                           	psect	text1
  4064  0EBE                     __ptext1:	
  4065 ;; *************** function _organizaTrajeto *****************
  4066 ;; Defined at:
  4067 ;;		line 52 in file "main.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  mascaraDesti    1    4[BANK1 ] unsigned char 
  4072 ;;  mascaraOrige    1    3[BANK1 ] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0, pclath, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4082 ;;      Params:         0       0       0       0       0       0
  4083 ;;      Locals:         0       0       2       0       0       0
  4084 ;;      Temps:          0       0       2       0       0       0
  4085 ;;      Totals:         0       0       4       0       0       0
  4086 ;;Total ram usage:        4 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 8
  4089 ;; This function calls:
  4090 ;;		_TMR4_WriteTimer
  4091 ;; This function is called by:
  4092 ;;		_main
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096  0EBE                     _organizaTrajeto:	
  4097                           ;psect for function _organizaTrajeto
  4098                           
  4099  0EBE                     l4175:	
  4100                           ;incstack = 0
  4101                           ; Regs used in _organizaTrajeto: [wreg+status,2+status,0+pclath+cstack]
  4102                           
  4103                           
  4104                           ;main.c: 53:     uint8_t mascaraOrigem = 1<<origem;
  4105  0EBE  3001               	movlw	1
  4106  0EBF  0021               	movlb	1	; select bank1
  4107  0EC0  00A1               	movwf	??_organizaTrajeto^(0+128)
  4108  0EC1  0A43               	incf	_origem^(0+128),w
  4109  0EC2  2EC4               	goto	u3004
  4110  0EC3                     u3005:
  4111  0EC3  35A1               	lslf	??_organizaTrajeto^(0+128),f
  4112  0EC4                     u3004:
  4113  0EC4  0B89               	decfsz	9,f
  4114  0EC5  2EC3               	goto	u3005
  4115  0EC6  0821               	movf	??_organizaTrajeto^(0+128),w
  4116  0EC7  00A2               	movwf	(??_organizaTrajeto+1)^(0+128)
  4117  0EC8  0822               	movf	(??_organizaTrajeto+1)^(0+128),w
  4118  0EC9  00A3               	movwf	organizaTrajeto@mascaraOrigem^(0+128)
  4119                           
  4120                           ;main.c: 54:     uint8_t mascaraDestino = 1<<destino;
  4121  0ECA  3001               	movlw	1
  4122  0ECB  00A1               	movwf	??_organizaTrajeto^(0+128)
  4123  0ECC  0A42               	incf	_destino^(0+128),w
  4124  0ECD  2ECF               	goto	u3014
  4125  0ECE                     u3015:
  4126  0ECE  35A1               	lslf	??_organizaTrajeto^(0+128),f
  4127  0ECF                     u3014:
  4128  0ECF  0B89               	decfsz	9,f
  4129  0ED0  2ECE               	goto	u3015
  4130  0ED1  0821               	movf	??_organizaTrajeto^(0+128),w
  4131  0ED2  00A2               	movwf	(??_organizaTrajeto+1)^(0+128)
  4132  0ED3  0822               	movf	(??_organizaTrajeto+1)^(0+128),w
  4133  0ED4  00A4               	movwf	organizaTrajeto@mascaraDestino^(0+128)
  4134  0ED5                     l4177:
  4135                           
  4136                           ;main.c: 57:     if (origem < destino)
  4137  0ED5  0842               	movf	_destino^(0+128),w
  4138  0ED6  0243               	subwf	_origem^(0+128),w
  4139  0ED7  1803               	skipnc
  4140  0ED8  2EDA               	goto	u3021
  4141  0ED9  2EDB               	goto	u3020
  4142  0EDA                     u3021:
  4143  0EDA  2EE2               	goto	l4181
  4144  0EDB                     u3020:
  4145  0EDB                     l4179:
  4146                           
  4147                           ;main.c: 58:     {;main.c: 59:         destinoSub =destinoSub | mascaraOrigem | mascaraD
      +                          estino;
  4148  0EDB  083C               	movf	_destinoSub^(0+128),w
  4149  0EDC  0423               	iorwf	organizaTrajeto@mascaraOrigem^(0+128),w
  4150  0EDD  0424               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4151  0EDE  00A1               	movwf	??_organizaTrajeto^(0+128)
  4152  0EDF  0821               	movf	??_organizaTrajeto^(0+128),w
  4153  0EE0  00BC               	movwf	_destinoSub^(0+128)
  4154                           
  4155                           ;main.c: 60:     }else if(origem > destino){
  4156  0EE1  2EF2               	goto	l793
  4157  0EE2                     l4181:
  4158  0EE2  0843               	movf	_origem^(0+128),w
  4159  0EE3  0242               	subwf	_destino^(0+128),w
  4160  0EE4  1803               	skipnc
  4161  0EE5  2EE7               	goto	u3031
  4162  0EE6  2EE8               	goto	u3030
  4163  0EE7                     u3031:
  4164  0EE7  2EF2               	goto	l793
  4165  0EE8                     u3030:
  4166  0EE8                     l4183:
  4167                           
  4168                           ;main.c: 63:         destinoSub = destinoSub| mascaraOrigem;
  4169  0EE8  083C               	movf	_destinoSub^(0+128),w
  4170  0EE9  0423               	iorwf	organizaTrajeto@mascaraOrigem^(0+128),w
  4171  0EEA  00A1               	movwf	??_organizaTrajeto^(0+128)
  4172  0EEB  0821               	movf	??_organizaTrajeto^(0+128),w
  4173  0EEC  00BC               	movwf	_destinoSub^(0+128)
  4174                           
  4175                           ;main.c: 64:         destinoDesc = destinoDesc| mascaraDestino;
  4176  0EED  083B               	movf	_destinoDesc^(0+128),w
  4177  0EEE  0424               	iorwf	organizaTrajeto@mascaraDestino^(0+128),w
  4178  0EEF  00A1               	movwf	??_organizaTrajeto^(0+128)
  4179  0EF0  0821               	movf	??_organizaTrajeto^(0+128),w
  4180  0EF1  00BB               	movwf	_destinoDesc^(0+128)
  4181  0EF2                     l793:
  4182                           
  4183                           ;main.c: 67:     if (mov == RetornaS0)
  4184  0EF2  3003               	movlw	3
  4185  0EF3  064A               	xorwf	_mov^(0+128),w
  4186  0EF4  1D03               	btfss	3,2
  4187  0EF5  2EF7               	goto	u3041
  4188  0EF6  2EF8               	goto	u3040
  4189  0EF7                     u3041:
  4190  0EF7  2F01               	goto	l4189
  4191  0EF8                     u3040:
  4192  0EF8                     l4185:
  4193                           
  4194                           ;main.c: 68:     {;main.c: 69:         mov = EmTrajeto;
  4195  0EF8  3002               	movlw	2
  4196  0EF9  00A1               	movwf	??_organizaTrajeto^(0+128)
  4197  0EFA  0821               	movf	??_organizaTrajeto^(0+128),w
  4198  0EFB  00CA               	movwf	_mov^(0+128)
  4199  0EFC                     l4187:
  4200                           
  4201                           ;main.c: 71:         TMR4_WriteTimer(0);
  4202  0EFC  3000               	movlw	0
  4203  0EFD  318B  23C2  318E   	fcall	_TMR4_WriteTimer
  4204                           
  4205                           ;main.c: 73:     }else{
  4206  0F00  2F05               	goto	l797
  4207  0F01                     l4189:
  4208                           
  4209                           ;main.c: 74:         mov = EmTrajeto;
  4210  0F01  3002               	movlw	2
  4211  0F02  00A1               	movwf	??_organizaTrajeto^(0+128)
  4212  0F03  0821               	movf	??_organizaTrajeto^(0+128),w
  4213  0F04  00CA               	movwf	_mov^(0+128)
  4214  0F05                     l797:
  4215  0F05  0008               	return
  4216  0F06                     __end_of_organizaTrajeto:
  4217                           
  4218                           	psect	text2
  4219  0BC2                     __ptext2:	
  4220 ;; *************** function _TMR4_WriteTimer *****************
  4221 ;; Defined at:
  4222 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  timerVal        1    wreg     unsigned char 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  timerVal        1    0[BANK1 ] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4236 ;;      Params:         0       0       0       0       0       0
  4237 ;;      Locals:         0       0       1       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0
  4239 ;;      Totals:         0       0       1       0       0       0
  4240 ;;Total ram usage:        1 bytes
  4241 ;; Hardware stack levels used: 1
  4242 ;; Hardware stack levels required when called: 7
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_organizaTrajeto
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250  0BC2                     _TMR4_WriteTimer:	
  4251                           ;psect for function _TMR4_WriteTimer
  4252                           
  4253                           
  4254                           ;incstack = 0
  4255                           ; Regs used in _TMR4_WriteTimer: [wreg]
  4256                           ;TMR4_WriteTimer@timerVal stored from wreg
  4257  0BC2  0021               	movlb	1	; select bank1
  4258  0BC3  00A0               	movwf	TMR4_WriteTimer@timerVal^(0+128)
  4259  0BC4                     l4137:
  4260                           
  4261                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  4262  0BC4  0820               	movf	TMR4_WriteTimer@timerVal^(0+128),w
  4263  0BC5  0028               	movlb	8	; select bank8
  4264  0BC6  0095               	movwf	21	;volatile
  4265  0BC7                     l682:
  4266  0BC7  0008               	return
  4267  0BC8                     __end_of_TMR4_WriteTimer:
  4268                           
  4269                           	psect	text3
  4270  0CDF                     __ptext3:	
  4271 ;; *************** function _isValidFloor *****************
  4272 ;; Defined at:
  4273 ;;		line 80 in file "main.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  floor           1    wreg     unsigned char 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  floor           1    1[BANK1 ] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      _Bool 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4287 ;;      Params:         0       0       0       0       0       0
  4288 ;;      Locals:         0       0       2       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0
  4290 ;;      Totals:         0       0       2       0       0       0
  4291 ;;Total ram usage:        2 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; Hardware stack levels required when called: 7
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301  0CDF                     _isValidFloor:	
  4302                           ;psect for function _isValidFloor
  4303                           
  4304                           
  4305                           ;incstack = 0
  4306                           ; Regs used in _isValidFloor: [wreg+status,2]
  4307                           ;isValidFloor@floor stored from wreg
  4308  0CDF  0021               	movlb	1	; select bank1
  4309  0CE0  00A1               	movwf	isValidFloor@floor^(0+128)
  4310  0CE1                     l4191:
  4311                           
  4312                           ;main.c: 81:     return floor >= '0' && floor <= '3';
  4313  0CE1  01A0               	clrf	_isValidFloor$1563^(0+128)
  4314  0CE2                     l4193:
  4315  0CE2  3030               	movlw	48
  4316  0CE3  0221               	subwf	isValidFloor@floor^(0+128),w
  4317  0CE4  1C03               	skipc
  4318  0CE5  2CE7               	goto	u3051
  4319  0CE6  2CE8               	goto	u3050
  4320  0CE7                     u3051:
  4321  0CE7  2CF0               	goto	l4199
  4322  0CE8                     u3050:
  4323  0CE8                     l4195:
  4324  0CE8  3034               	movlw	52
  4325  0CE9  0221               	subwf	isValidFloor@floor^(0+128),w
  4326  0CEA  1803               	skipnc
  4327  0CEB  2CED               	goto	u3061
  4328  0CEC  2CEE               	goto	u3060
  4329  0CED                     u3061:
  4330  0CED  2CF0               	goto	l4199
  4331  0CEE                     u3060:
  4332  0CEE                     l4197:
  4333  0CEE  01A0               	clrf	_isValidFloor$1563^(0+128)
  4334  0CEF  0AA0               	incf	_isValidFloor$1563^(0+128),f
  4335  0CF0                     l4199:
  4336  0CF0  0820               	movf	_isValidFloor$1563^(0+128),w
  4337  0CF1                     l802:
  4338  0CF1  0008               	return
  4339  0CF2                     __end_of_isValidFloor:
  4340                           
  4341                           	psect	text4
  4342  0FA9                     __ptext4:	
  4343 ;; *************** function _initMatrix *****************
  4344 ;; Defined at:
  4345 ;;		line 175 in file "main.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  j               1   16[BANK1 ] unsigned char 
  4350 ;;  i               1   15[BANK1 ] unsigned char 
  4351 ;;  i               1   14[BANK1 ] unsigned char 
  4352 ;;  data            4    9[BANK1 ] unsigned char [4]
  4353 ;;  k               1   13[BANK1 ] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4363 ;;      Params:         0       0       0       0       0       0
  4364 ;;      Locals:         0       0       8       0       0       0
  4365 ;;      Temps:          0       0       1       0       0       0
  4366 ;;      Totals:         0       0       9       0       0       0
  4367 ;;Total ram usage:        9 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 9
  4370 ;; This function calls:
  4371 ;;		_txSpi
  4372 ;; This function is called by:
  4373 ;;		_main
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377  0FA9                     _initMatrix:	
  4378                           ;psect for function _initMatrix
  4379                           
  4380  0FA9                     l4203:	
  4381                           ;incstack = 0
  4382                           ; Regs used in _initMatrix: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4383                           
  4384                           
  4385                           ;main.c: 176:     uint8_t data[4];;main.c: 177:     uint8_t k=0;
  4386  0FA9  0021               	movlb	1	; select bank1
  4387  0FAA  01AD               	clrf	initMatrix@k^(0+128)
  4388                           
  4389                           ;main.c: 178:    for(uint8_t i =0; i<8; i++){
  4390  0FAB  01AE               	clrf	initMatrix@i^(0+128)
  4391  0FAC                     l4209:
  4392                           
  4393                           ;main.c: 179:             MatrixLed[i] = 0;
  4394  0FAC  082E               	movf	initMatrix@i^(0+128),w
  4395  0FAD  3EB3               	addlw	(low (_MatrixLed| 0))& (0+255)
  4396  0FAE  0086               	movwf	6
  4397  0FAF  0187               	clrf	7
  4398  0FB0  0181               	clrf	1
  4399  0FB1                     l4211:
  4400                           
  4401                           ;main.c: 180:         }
  4402  0FB1  3001               	movlw	1
  4403  0FB2  00A8               	movwf	??_initMatrix^(0+128)
  4404  0FB3  0828               	movf	??_initMatrix^(0+128),w
  4405  0FB4  07AE               	addwf	initMatrix@i^(0+128),f
  4406  0FB5                     l4213:
  4407  0FB5  3008               	movlw	8
  4408  0FB6  022E               	subwf	initMatrix@i^(0+128),w
  4409  0FB7  1C03               	skipc
  4410  0FB8  2FBA               	goto	u3071
  4411  0FB9  2FBB               	goto	u3070
  4412  0FBA                     u3071:
  4413  0FBA  2FAC               	goto	l4209
  4414  0FBB                     u3070:
  4415  0FBB                     l4215:
  4416                           
  4417                           ;main.c: 181:     for(uint8_t i=0;i<6;i++){
  4418  0FBB  01AF               	clrf	initMatrix@i_1602^(0+128)
  4419  0FBC                     l4221:
  4420                           
  4421                           ;main.c: 182:         for(uint8_t j=0;j<4;j=j+2){
  4422  0FBC  01B0               	clrf	initMatrix@j^(0+128)
  4423  0FBD                     l4227:
  4424                           
  4425                           ;main.c: 183:             data[j]= matrix_conf[k];
  4426  0FBD  082D               	movf	initMatrix@k^(0+128),w
  4427  0FBE  3E00               	addlw	low (_matrix_conf| (0+32768))
  4428  0FBF  0084               	movwf	4
  4429  0FC0  3088               	movlw	high (_matrix_conf| (0+32768))
  4430  0FC1  1803               	skipnc
  4431  0FC2  3E01               	addlw	1
  4432  0FC3  0085               	movwf	5
  4433  0FC4  0800               	movf	0,w	;code access
  4434  0FC5  00A8               	movwf	??_initMatrix^(0+128)
  4435  0FC6  0830               	movf	initMatrix@j^(0+128),w
  4436  0FC7  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4437  0FC8  0086               	movwf	6
  4438  0FC9  0187               	clrf	7
  4439  0FCA  0828               	movf	??_initMatrix^(0+128),w
  4440  0FCB  0081               	movwf	1
  4441                           
  4442                           ;main.c: 184:             data[j+1]= matrix_conf[k+1];
  4443  0FCC  082D               	movf	initMatrix@k^(0+128),w
  4444  0FCD  3E01               	addlw	low ((_matrix_conf+1)| (0+32768))
  4445  0FCE  0084               	movwf	4
  4446  0FCF  3088               	movlw	high ((_matrix_conf+1)| (0+32768))
  4447  0FD0  1803               	skipnc
  4448  0FD1  3E01               	addlw	1
  4449  0FD2  0085               	movwf	5
  4450  0FD3  0800               	movf	0,w	;code access
  4451  0FD4  00A8               	movwf	??_initMatrix^(0+128)
  4452  0FD5  0830               	movf	initMatrix@j^(0+128),w
  4453  0FD6  3E01               	addlw	1
  4454  0FD7  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4455  0FD8  0086               	movwf	6
  4456  0FD9  0187               	clrf	7
  4457  0FDA  0828               	movf	??_initMatrix^(0+128),w
  4458  0FDB  0081               	movwf	1
  4459  0FDC                     l4229:
  4460                           
  4461                           ;main.c: 185:         }
  4462  0FDC  0830               	movf	initMatrix@j^(0+128),w
  4463  0FDD  3E02               	addlw	2
  4464  0FDE  00A8               	movwf	??_initMatrix^(0+128)
  4465  0FDF  0828               	movf	??_initMatrix^(0+128),w
  4466  0FE0  00B0               	movwf	initMatrix@j^(0+128)
  4467  0FE1                     l4231:
  4468  0FE1  3004               	movlw	4
  4469  0FE2  0230               	subwf	initMatrix@j^(0+128),w
  4470  0FE3  1C03               	skipc
  4471  0FE4  2FE6               	goto	u3081
  4472  0FE5  2FE7               	goto	u3080
  4473  0FE6                     u3081:
  4474  0FE6  2FBD               	goto	l4227
  4475  0FE7                     u3080:
  4476  0FE7                     l4233:
  4477                           
  4478                           ;main.c: 186:         k=k+2;
  4479  0FE7  082D               	movf	initMatrix@k^(0+128),w
  4480  0FE8  3E02               	addlw	2
  4481  0FE9  00A8               	movwf	??_initMatrix^(0+128)
  4482  0FEA  0828               	movf	??_initMatrix^(0+128),w
  4483  0FEB  00AD               	movwf	initMatrix@k^(0+128)
  4484  0FEC                     l4235:
  4485                           
  4486                           ;main.c: 187:         txSpi( data, 4);
  4487  0FEC  3004               	movlw	4
  4488  0FED  00A5               	movwf	txSpi@dataSize^(0+128)
  4489  0FEE  3000               	movlw	0
  4490  0FEF  00A6               	movwf	(txSpi@dataSize^(0+128)+1)
  4491  0FF0  30A9               	movlw	(low (initMatrix@data| 0))& (0+255)
  4492  0FF1  318C  24AB  318F   	fcall	_txSpi
  4493  0FF4                     l4239:
  4494                           
  4495                           ;main.c: 191:     }
  4496  0FF4  3001               	movlw	1
  4497  0FF5  0021               	movlb	1	; select bank1
  4498  0FF6  00A8               	movwf	??_initMatrix^(0+128)
  4499  0FF7  0828               	movf	??_initMatrix^(0+128),w
  4500  0FF8  07AF               	addwf	initMatrix@i_1602^(0+128),f
  4501  0FF9                     l4241:
  4502  0FF9  3006               	movlw	6
  4503  0FFA  022F               	subwf	initMatrix@i_1602^(0+128),w
  4504  0FFB  1C03               	skipc
  4505  0FFC  2FFE               	goto	u3091
  4506  0FFD  2FFF               	goto	u3090
  4507  0FFE                     u3091:
  4508  0FFE  2FBC               	goto	l4221
  4509  0FFF                     u3090:
  4510  0FFF                     l839:
  4511  0FFF  0008               	return
  4512  1000                     __end_of_initMatrix:
  4513                           
  4514                           	psect	text5
  4515  0CAB                     __ptext5:	
  4516 ;; *************** function _txSpi *****************
  4517 ;; Defined at:
  4518 ;;		line 147 in file "main.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  data            1    wreg     PTR unsigned char 
  4521 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4522 ;;  dataSize        2    5[BANK1 ] unsigned int 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  data            1    7[BANK1 ] PTR unsigned char 
  4525 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      void 
  4528 ;; Registers used:
  4529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4535 ;;      Params:         0       0       2       0       0       0
  4536 ;;      Locals:         0       0       1       0       0       0
  4537 ;;      Temps:          0       0       0       0       0       0
  4538 ;;      Totals:         0       0       3       0       0       0
  4539 ;;Total ram usage:        3 bytes
  4540 ;; Hardware stack levels used: 1
  4541 ;; Hardware stack levels required when called: 8
  4542 ;; This function calls:
  4543 ;;		_SPI1_ExchangeBlock
  4544 ;; This function is called by:
  4545 ;;		_initMatrix
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549  0CAB                     _txSpi:	
  4550                           ;psect for function _txSpi
  4551                           
  4552                           
  4553                           ;incstack = 0
  4554                           ; Regs used in _txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4555                           ;txSpi@data stored from wreg
  4556  0CAB  0021               	movlb	1	; select bank1
  4557  0CAC  00A7               	movwf	txSpi@data^(0+128)
  4558  0CAD                     l816:	
  4559                           ;main.c: 148:     do { LATBbits.LATB1 = 0; } while(0);
  4560                           
  4561  0CAD  0022               	movlb	2	; select bank2
  4562  0CAE  108D               	bcf	13,1	;volatile
  4563  0CAF                     l4139:
  4564                           
  4565                           ;main.c: 149:     SPI1_ExchangeBlock(data,dataSize);
  4566  0CAF  0021               	movlb	1	; select bank1
  4567  0CB0  0826               	movf	(txSpi@dataSize+1)^(0+128),w
  4568  0CB1  00A1               	movwf	(SPI1_ExchangeBlock@blockSize+1)^(0+128)
  4569  0CB2  0825               	movf	txSpi@dataSize^(0+128),w
  4570  0CB3  00A0               	movwf	SPI1_ExchangeBlock@blockSize^(0+128)
  4571  0CB4  0827               	movf	txSpi@data^(0+128),w
  4572  0CB5  318E  2632  318C   	fcall	_SPI1_ExchangeBlock
  4573  0CB8                     l4141:
  4574  0CB8  0022               	movlb	2	; select bank2
  4575  0CB9  148D               	bsf	13,1	;volatile
  4576  0CBA                     l820:
  4577  0CBA  0008               	return
  4578  0CBB                     __end_of_txSpi:
  4579                           
  4580                           	psect	text6
  4581  0E32                     __ptext6:	
  4582 ;; *************** function _SPI1_ExchangeBlock *****************
  4583 ;; Defined at:
  4584 ;;		line 100 in file "mcc_generated_files/spi1.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  block           1    wreg     PTR void 
  4587 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4588 ;;  blockSize       2    0[BANK1 ] unsigned int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  block           1    3[BANK1 ] PTR void 
  4591 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4592 ;;  data            1    4[BANK1 ] PTR unsigned char 
  4593 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4603 ;;      Params:         0       0       2       0       0       0
  4604 ;;      Locals:         0       0       2       0       0       0
  4605 ;;      Temps:          0       0       1       0       0       0
  4606 ;;      Totals:         0       0       5       0       0       0
  4607 ;;Total ram usage:        5 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 7
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_txSpi
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617  0E32                     _SPI1_ExchangeBlock:	
  4618                           ;psect for function _SPI1_ExchangeBlock
  4619                           
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4623                           ;SPI1_ExchangeBlock@block stored from wreg
  4624  0E32  0021               	movlb	1	; select bank1
  4625  0E33  00A3               	movwf	SPI1_ExchangeBlock@block^(0+128)
  4626  0E34                     l3969:
  4627                           
  4628                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  4629  0E34  0823               	movf	SPI1_ExchangeBlock@block^(0+128),w
  4630  0E35  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4631  0E36  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4632  0E37  00A4               	movwf	SPI1_ExchangeBlock@data^(0+128)
  4633                           
  4634                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4635  0E38  2E52               	goto	l3977
  4636  0E39                     l3971:
  4637                           
  4638                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  4639  0E39  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4640  0E3A  0086               	movwf	6
  4641  0E3B  0187               	clrf	7
  4642  0E3C  0801               	movf	1,w
  4643  0E3D  0024               	movlb	4	; select bank4
  4644  0E3E  0091               	movwf	17	;volatile
  4645  0E3F                     l444:	
  4646                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  4647                           
  4648  0E3F  0020               	movlb	0	; select bank0
  4649  0E40  1D91               	btfss	17,3	;volatile
  4650  0E41  2E43               	goto	u2951
  4651  0E42  2E44               	goto	u2950
  4652  0E43                     u2951:
  4653  0E43  2E3F               	goto	l444
  4654  0E44                     u2950:
  4655  0E44                     l446:
  4656                           
  4657                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  4658  0E44  1191               	bcf	17,3	;volatile
  4659  0E45                     l3973:
  4660                           
  4661                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  4662  0E45  0024               	movlb	4	; select bank4
  4663  0E46  0811               	movf	17,w	;volatile
  4664  0E47  0021               	movlb	1	; select bank1
  4665  0E48  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4666  0E49  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4667  0E4A  0086               	movwf	6
  4668  0E4B  0187               	clrf	7
  4669  0E4C  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4670  0E4D  0081               	movwf	1
  4671  0E4E                     l3975:
  4672  0E4E  3001               	movlw	1
  4673  0E4F  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4674  0E50  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4675  0E51  07A4               	addwf	SPI1_ExchangeBlock@data^(0+128),f
  4676  0E52                     l3977:
  4677                           
  4678                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4679  0E52  3001               	movlw	1
  4680  0E53  02A0               	subwf	SPI1_ExchangeBlock@blockSize^(0+128),f
  4681  0E54  3000               	movlw	0
  4682  0E55  3BA1               	subwfb	(SPI1_ExchangeBlock@blockSize+1)^(0+128),f
  4683  0E56  0A20               	incf	SPI1_ExchangeBlock@blockSize^(0+128),w
  4684  0E57  1D03               	skipz
  4685  0E58  2E5D               	goto	u2961
  4686  0E59  0A21               	incf	(SPI1_ExchangeBlock@blockSize+1)^(0+128),w
  4687  0E5A  1D03               	btfss	3,2
  4688  0E5B  2E5D               	goto	u2961
  4689  0E5C  2E5E               	goto	u2960
  4690  0E5D                     u2961:
  4691  0E5D  2E39               	goto	l3971
  4692  0E5E                     u2960:
  4693  0E5E                     l448:
  4694  0E5E  0008               	return
  4695  0E5F                     __end_of_SPI1_ExchangeBlock:
  4696                           
  4697                           	psect	text7
  4698  0E5F                     __ptext7:	
  4699 ;; *************** function _SYSTEM_Initialize *****************
  4700 ;; Defined at:
  4701 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4715 ;;      Params:         0       0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0
  4718 ;;      Totals:         0       0       0       0       0       0
  4719 ;;Total ram usage:        0 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 9
  4722 ;; This function calls:
  4723 ;;		_ADC_Initialize
  4724 ;;		_CCP4_Initialize
  4725 ;;		_CMP1_Initialize
  4726 ;;		_CMP2_Initialize
  4727 ;;		_EUSART_Initialize
  4728 ;;		_FVR_Initialize
  4729 ;;		_OSCILLATOR_Initialize
  4730 ;;		_PIN_MANAGER_Initialize
  4731 ;;		_PWM3_Initialize
  4732 ;;		_SPI1_Initialize
  4733 ;;		_TMR0_Initialize
  4734 ;;		_TMR1_Initialize
  4735 ;;		_TMR2_Initialize
  4736 ;;		_TMR4_Initialize
  4737 ;;		_WDT_Initialize
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743  0E5F                     _SYSTEM_Initialize:	
  4744                           ;psect for function _SYSTEM_Initialize
  4745                           
  4746  0E5F                     l4143:	
  4747                           ;incstack = 0
  4748                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4749                           
  4750                           
  4751                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  4752  0E5F  318C  2425  318E   	fcall	_SPI1_Initialize
  4753                           
  4754                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4755  0E62  318E  268D  318E   	fcall	_PIN_MANAGER_Initialize
  4756                           
  4757                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4758  0E65  318B  23CE  318E   	fcall	_OSCILLATOR_Initialize
  4759                           
  4760                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4761  0E68  318B  2396  318E   	fcall	_WDT_Initialize
  4762                           
  4763                           ;mcc_generated_files/mcc.c: 57:     CMP2_Initialize();
  4764  0E6B  318C  243C  318E   	fcall	_CMP2_Initialize
  4765                           
  4766                           ;mcc_generated_files/mcc.c: 58:     FVR_Initialize();
  4767  0E6E  318B  2392  318E   	fcall	_FVR_Initialize
  4768                           
  4769                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  4770  0E71  318C  24CC  318E   	fcall	_TMR4_Initialize
  4771                           
  4772                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  4773  0E74  318B  23DD  318E   	fcall	_TMR2_Initialize
  4774                           
  4775                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  4776  0E77  318D  254D  318E   	fcall	_TMR0_Initialize
  4777                           
  4778                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  4779  0E7A  318C  2430  318E   	fcall	_CMP1_Initialize
  4780                           
  4781                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  4782  0E7D  318B  23D5  318E   	fcall	_ADC_Initialize
  4783                           
  4784                           ;mcc_generated_files/mcc.c: 64:     CCP4_Initialize();
  4785  0E80  3187  27EE  318E   	fcall	_CCP4_Initialize
  4786                           
  4787                           ;mcc_generated_files/mcc.c: 65:     PWM3_Initialize();
  4788  0E83  318C  2400  318E   	fcall	_PWM3_Initialize
  4789                           
  4790                           ;mcc_generated_files/mcc.c: 66:     TMR1_Initialize();
  4791  0E86  318C  2470  318E   	fcall	_TMR1_Initialize
  4792                           
  4793                           ;mcc_generated_files/mcc.c: 67:     EUSART_Initialize();
  4794  0E89  318D  25E2  318E   	fcall	_EUSART_Initialize
  4795  0E8C                     l263:
  4796  0E8C  0008               	return
  4797  0E8D                     __end_of_SYSTEM_Initialize:
  4798                           
  4799                           	psect	text8
  4800  0B96                     __ptext8:	
  4801 ;; *************** function _WDT_Initialize *****************
  4802 ;; Defined at:
  4803 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4817 ;;      Params:         0       0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0
  4820 ;;      Totals:         0       0       0       0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used: 1
  4823 ;; Hardware stack levels required when called: 7
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_SYSTEM_Initialize
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831  0B96                     _WDT_Initialize:	
  4832                           ;psect for function _WDT_Initialize
  4833                           
  4834  0B96                     l4059:	
  4835                           ;incstack = 0
  4836                           ; Regs used in _WDT_Initialize: [wreg]
  4837                           
  4838                           
  4839                           ;mcc_generated_files/mcc.c: 83:     WDTCON = 0x16;
  4840  0B96  3016               	movlw	22
  4841  0B97  0021               	movlb	1	; select bank1
  4842  0B98  0097               	movwf	23	;volatile
  4843  0B99                     l269:
  4844  0B99  0008               	return
  4845  0B9A                     __end_of_WDT_Initialize:
  4846                           
  4847                           	psect	text9
  4848  0CCC                     __ptext9:	
  4849 ;; *************** function _TMR4_Initialize *****************
  4850 ;; Defined at:
  4851 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0, pclath, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4865 ;;      Params:         0       0       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0
  4867 ;;      Temps:          0       0       0       0       0       0
  4868 ;;      Totals:         0       0       0       0       0       0
  4869 ;;Total ram usage:        0 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; Hardware stack levels required when called: 8
  4872 ;; This function calls:
  4873 ;;		_TMR4_SetInterruptHandler
  4874 ;; This function is called by:
  4875 ;;		_SYSTEM_Initialize
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879  0CCC                     _TMR4_Initialize:	
  4880                           ;psect for function _TMR4_Initialize
  4881                           
  4882  0CCC                     l4063:	
  4883                           ;incstack = 0
  4884                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4885                           
  4886                           
  4887                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF3;
  4888  0CCC  30F3               	movlw	243
  4889  0CCD  0028               	movlb	8	; select bank8
  4890  0CCE  0096               	movwf	22	;volatile
  4891  0CCF                     l4065:
  4892                           
  4893                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  4894  0CCF  0195               	clrf	21	;volatile
  4895  0CD0                     l4067:
  4896                           
  4897                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  4898  0CD0  0020               	movlb	0	; select bank0
  4899  0CD1  1093               	bcf	19,1	;volatile
  4900  0CD2                     l4069:
  4901                           
  4902                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  4903  0CD2  0021               	movlb	1	; select bank1
  4904  0CD3  1493               	bsf	19,1	;volatile
  4905  0CD4                     l4071:
  4906                           
  4907                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  4908  0CD4  308B               	movlw	low _TMR4_DefaultInterruptHandler
  4909  0CD5  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4910  0CD6  300B               	movlw	high _TMR4_DefaultInterruptHandler
  4911  0CD7  00A1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4912  0CD8  318C  2412  318C   	fcall	_TMR4_SetInterruptHandler
  4913  0CDB                     l4073:
  4914                           
  4915                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x7F;
  4916  0CDB  307F               	movlw	127
  4917  0CDC  0028               	movlb	8	; select bank8
  4918  0CDD  0097               	movwf	23	;volatile
  4919  0CDE                     l670:
  4920  0CDE  0008               	return
  4921  0CDF                     __end_of_TMR4_Initialize:
  4922                           
  4923                           	psect	text10
  4924  0C12                     __ptext10:	
  4925 ;; *************** function _TMR4_SetInterruptHandler *****************
  4926 ;; Defined at:
  4927 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4930 ;;		 -> controleMovimento(1), TMR4_DefaultInterruptHandler(1), 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		wreg
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4942 ;;      Params:         0       0       2       0       0       0
  4943 ;;      Locals:         0       0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0
  4945 ;;      Totals:         0       0       2       0       0       0
  4946 ;;Total ram usage:        2 bytes
  4947 ;; Hardware stack levels used: 1
  4948 ;; Hardware stack levels required when called: 7
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_TMR4_Initialize
  4953 ;;		_main
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957  0C12                     _TMR4_SetInterruptHandler:	
  4958                           ;psect for function _TMR4_SetInterruptHandler
  4959                           
  4960  0C12                     l3983:	
  4961                           ;incstack = 0
  4962                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  4963                           
  4964                           
  4965                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  4966  0C12  0021               	movlb	1	; select bank1
  4967  0C13  0821               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4968  0C14  0020               	movlb	0	; select bank0
  4969  0C15  00DF               	movwf	_TMR4_InterruptHandler+1
  4970  0C16  0021               	movlb	1	; select bank1
  4971  0C17  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  4972  0C18  0020               	movlb	0	; select bank0
  4973  0C19  00DE               	movwf	_TMR4_InterruptHandler
  4974  0C1A                     l698:
  4975  0C1A  0008               	return
  4976  0C1B                     __end_of_TMR4_SetInterruptHandler:
  4977                           
  4978                           	psect	text11
  4979  0BDD                     __ptext11:	
  4980 ;; *************** function _TMR2_Initialize *****************
  4981 ;; Defined at:
  4982 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4996 ;;      Params:         0       0       0       0       0       0
  4997 ;;      Locals:         0       0       0       0       0       0
  4998 ;;      Temps:          0       0       0       0       0       0
  4999 ;;      Totals:         0       0       0       0       0       0
  5000 ;;Total ram usage:        0 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; Hardware stack levels required when called: 7
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_SYSTEM_Initialize
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010  0BDD                     _TMR2_Initialize:	
  5011                           ;psect for function _TMR2_Initialize
  5012                           
  5013  0BDD                     l4075:	
  5014                           ;incstack = 0
  5015                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5016                           
  5017                           
  5018                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  5019  0BDD  30FF               	movlw	255
  5020  0BDE  0020               	movlb	0	; select bank0
  5021  0BDF  009B               	movwf	27	;volatile
  5022  0BE0                     l4077:
  5023                           
  5024                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5025  0BE0  019A               	clrf	26	;volatile
  5026  0BE1                     l4079:
  5027                           
  5028                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5029  0BE1  1091               	bcf	17,1	;volatile
  5030  0BE2                     l4081:
  5031                           
  5032                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  5033  0BE2  3004               	movlw	4
  5034  0BE3  009C               	movwf	28	;volatile
  5035  0BE4                     l558:
  5036  0BE4  0008               	return
  5037  0BE5                     __end_of_TMR2_Initialize:
  5038                           
  5039                           	psect	text12
  5040  0C70                     __ptext12:	
  5041 ;; *************** function _TMR1_Initialize *****************
  5042 ;; Defined at:
  5043 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5057 ;;      Params:         0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used: 1
  5063 ;; Hardware stack levels required when called: 7
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_SYSTEM_Initialize
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071  0C70                     _TMR1_Initialize:	
  5072                           ;psect for function _TMR1_Initialize
  5073                           
  5074  0C70                     l4113:	
  5075                           ;incstack = 0
  5076                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  5077                           
  5078                           
  5079                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5080  0C70  0020               	movlb	0	; select bank0
  5081  0C71  0199               	clrf	25	;volatile
  5082  0C72                     l4115:
  5083                           
  5084                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  5085  0C72  300B               	movlw	11
  5086  0C73  0097               	movwf	23	;volatile
  5087  0C74                     l4117:
  5088                           
  5089                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  5090  0C74  30DC               	movlw	220
  5091  0C75  0096               	movwf	22	;volatile
  5092  0C76                     l4119:
  5093                           
  5094                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  5095  0C76  1011               	bcf	17,0	;volatile
  5096  0C77                     l4121:
  5097                           
  5098                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5099  0C77  0817               	movf	23,w	;volatile
  5100  0C78  00E5               	movwf	_timer1ReloadVal+1	;volatile
  5101  0C79  0816               	movf	22,w	;volatile
  5102  0C7A  00E4               	movwf	_timer1ReloadVal	;volatile
  5103  0C7B                     l4123:
  5104                           
  5105                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  5106  0C7B  3031               	movlw	49
  5107  0C7C  0098               	movwf	24	;volatile
  5108  0C7D                     l519:
  5109  0C7D  0008               	return
  5110  0C7E                     __end_of_TMR1_Initialize:
  5111                           
  5112                           	psect	text13
  5113  0D4D                     __ptext13:	
  5114 ;; *************** function _TMR0_Initialize *****************
  5115 ;; Defined at:
  5116 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg, status,2, status,0, pclath, cstack
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5130 ;;      Params:         0       0       0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0
  5132 ;;      Temps:          0       0       1       0       0       0
  5133 ;;      Totals:         0       0       1       0       0       0
  5134 ;;Total ram usage:        1 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; Hardware stack levels required when called: 8
  5137 ;; This function calls:
  5138 ;;		_TMR0_SetInterruptHandler
  5139 ;; This function is called by:
  5140 ;;		_SYSTEM_Initialize
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144  0D4D                     _TMR0_Initialize:	
  5145                           ;psect for function _TMR0_Initialize
  5146                           
  5147  0D4D                     l4083:	
  5148                           ;incstack = 0
  5149                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5150                           
  5151                           
  5152                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  5153  0D4D  0021               	movlb	1	; select bank1
  5154  0D4E  0815               	movf	21,w	;volatile
  5155  0D4F  39C0               	andlw	192
  5156  0D50  3817               	iorlw	23
  5157  0D51  0095               	movwf	21	;volatile
  5158  0D52                     l4085:
  5159                           
  5160                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  5161  0D52  3016               	movlw	22
  5162  0D53  0020               	movlb	0	; select bank0
  5163  0D54  0095               	movwf	21	;volatile
  5164  0D55                     l4087:
  5165                           
  5166                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  5167  0D55  3016               	movlw	22
  5168  0D56  0021               	movlb	1	; select bank1
  5169  0D57  00A2               	movwf	??_TMR0_Initialize^(0+128)
  5170  0D58  0822               	movf	??_TMR0_Initialize^(0+128),w
  5171  0D59  0020               	movlb	0	; select bank0
  5172  0D5A  00EA               	movwf	_timer0ReloadVal	;volatile
  5173  0D5B                     l4089:
  5174                           
  5175                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  5176  0D5B  110B               	bcf	11,2	;volatile
  5177  0D5C                     l4091:
  5178                           
  5179                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  5180  0D5C  168B               	bsf	11,5	;volatile
  5181  0D5D                     l4093:
  5182                           
  5183                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5184  0D5D  308A               	movlw	low _TMR0_DefaultInterruptHandler
  5185  0D5E  0021               	movlb	1	; select bank1
  5186  0D5F  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  5187  0D60  300B               	movlw	high _TMR0_DefaultInterruptHandler
  5188  0D61  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5189  0D62  318C  2409  318D   	fcall	_TMR0_SetInterruptHandler
  5190  0D65                     l596:
  5191  0D65  0008               	return
  5192  0D66                     __end_of_TMR0_Initialize:
  5193                           
  5194                           	psect	text14
  5195  0C09                     __ptext14:	
  5196 ;; *************** function _TMR0_SetInterruptHandler *****************
  5197 ;; Defined at:
  5198 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5201 ;;		 -> sendInfo(1), TMR0_DefaultInterruptHandler(1), 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5213 ;;      Params:         0       0       2       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0
  5216 ;;      Totals:         0       0       2       0       0       0
  5217 ;;Total ram usage:        2 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; Hardware stack levels required when called: 7
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_TMR0_Initialize
  5224 ;;		_main
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228  0C09                     _TMR0_SetInterruptHandler:	
  5229                           ;psect for function _TMR0_SetInterruptHandler
  5230                           
  5231  0C09                     l3979:	
  5232                           ;incstack = 0
  5233                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5234                           
  5235                           
  5236                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  5237  0C09  0021               	movlb	1	; select bank1
  5238  0C0A  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5239  0C0B  0020               	movlb	0	; select bank0
  5240  0C0C  00E3               	movwf	_TMR0_InterruptHandler+1
  5241  0C0D  0021               	movlb	1	; select bank1
  5242  0C0E  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  5243  0C0F  0020               	movlb	0	; select bank0
  5244  0C10  00E2               	movwf	_TMR0_InterruptHandler
  5245  0C11                     l618:
  5246  0C11  0008               	return
  5247  0C12                     __end_of_TMR0_SetInterruptHandler:
  5248                           
  5249                           	psect	text15
  5250  0C25                     __ptext15:	
  5251 ;; *************** function _SPI1_Initialize *****************
  5252 ;; Defined at:
  5253 ;;		line 62 in file "mcc_generated_files/spi1.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5267 ;;      Params:         0       0       0       0       0       0
  5268 ;;      Locals:         0       0       0       0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0
  5270 ;;      Totals:         0       0       0       0       0       0
  5271 ;;Total ram usage:        0 bytes
  5272 ;; Hardware stack levels used: 1
  5273 ;; Hardware stack levels required when called: 7
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_SYSTEM_Initialize
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281  0C25                     _SPI1_Initialize:	
  5282                           ;psect for function _SPI1_Initialize
  5283                           
  5284  0C25                     l4043:	
  5285                           ;incstack = 0
  5286                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  5287                           
  5288                           
  5289                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  5290  0C25  3040               	movlw	64
  5291  0C26  0024               	movlb	4	; select bank4
  5292  0C27  0094               	movwf	20	;volatile
  5293  0C28                     l4045:
  5294                           
  5295                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  5296  0C28  0195               	clrf	21	;volatile
  5297  0C29                     l4047:
  5298                           
  5299                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  5300  0C29  3001               	movlw	1
  5301  0C2A  0092               	movwf	18	;volatile
  5302  0C2B                     l4049:
  5303                           
  5304                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  5305  0C2B  0021               	movlb	1	; select bank1
  5306  0C2C  120D               	bcf	13,4	;volatile
  5307  0C2D                     l4051:
  5308                           
  5309                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  5310  0C2D  0024               	movlb	4	; select bank4
  5311  0C2E  1295               	bcf	21,5	;volatile
  5312  0C2F                     l426:
  5313  0C2F  0008               	return
  5314  0C30                     __end_of_SPI1_Initialize:
  5315                           
  5316                           	psect	text16
  5317  0C00                     __ptext16:	
  5318 ;; *************** function _PWM3_Initialize *****************
  5319 ;; Defined at:
  5320 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;		None
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;		None
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      void 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5334 ;;      Params:         0       0       0       0       0       0
  5335 ;;      Locals:         0       0       0       0       0       0
  5336 ;;      Temps:          0       0       0       0       0       0
  5337 ;;      Totals:         0       0       0       0       0       0
  5338 ;;Total ram usage:        0 bytes
  5339 ;; Hardware stack levels used: 1
  5340 ;; Hardware stack levels required when called: 7
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_SYSTEM_Initialize
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348  0C00                     _PWM3_Initialize:	
  5349                           ;psect for function _PWM3_Initialize
  5350                           
  5351  0C00                     l3985:	
  5352                           ;incstack = 0
  5353                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  5354                           
  5355                           
  5356                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  5357  0C00  300C               	movlw	12
  5358  0C01  0026               	movlb	6	; select bank6
  5359  0C02  0093               	movwf	19	;volatile
  5360  0C03                     l3987:
  5361                           
  5362                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  5363  0C03  0191               	clrf	17	;volatile
  5364  0C04                     l3989:
  5365                           
  5366                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  5367  0C04  0192               	clrf	18	;volatile
  5368  0C05                     l3991:
  5369                           
  5370                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  5371  0C05  30CF               	movlw	-49
  5372  0C06  0025               	movlb	5	; select bank5
  5373  0C07  059E               	andwf	30,f	;volatile
  5374  0C08                     l11:
  5375  0C08  0008               	return
  5376  0C09                     __end_of_PWM3_Initialize:
  5377                           
  5378                           	psect	text17
  5379  0E8D                     __ptext17:	
  5380 ;; *************** function _PIN_MANAGER_Initialize *****************
  5381 ;; Defined at:
  5382 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;		None
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, status,2, status,0, pclath, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5396 ;;      Params:         0       0       0       0       0       0
  5397 ;;      Locals:         0       0       0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0
  5399 ;;      Totals:         0       0       0       0       0       0
  5400 ;;Total ram usage:        0 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; Hardware stack levels required when called: 8
  5403 ;; This function calls:
  5404 ;;		_IOCBF0_SetInterruptHandler
  5405 ;;		_IOCBF3_SetInterruptHandler
  5406 ;; This function is called by:
  5407 ;;		_SYSTEM_Initialize
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411  0E8D                     _PIN_MANAGER_Initialize:	
  5412                           ;psect for function _PIN_MANAGER_Initialize
  5413                           
  5414  0E8D                     l4009:	
  5415                           ;incstack = 0
  5416                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5417                           
  5418                           
  5419                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  5420  0E8D  0022               	movlb	2	; select bank2
  5421  0E8E  018C               	clrf	12	;volatile
  5422                           
  5423                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  5424  0E8F  018D               	clrf	13	;volatile
  5425  0E90                     l4011:
  5426                           
  5427                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  5428  0E90  3037               	movlw	55
  5429  0E91  0021               	movlb	1	; select bank1
  5430  0E92  008C               	movwf	12	;volatile
  5431  0E93                     l4013:
  5432                           
  5433                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xED;
  5434  0E93  30ED               	movlw	237
  5435  0E94  008D               	movwf	13	;volatile
  5436  0E95                     l4015:
  5437                           
  5438                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5439  0E95  30C0               	movlw	192
  5440  0E96  0023               	movlb	3	; select bank3
  5441  0E97  008D               	movwf	13	;volatile
  5442  0E98                     l4017:
  5443                           
  5444                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0F;
  5445  0E98  300F               	movlw	15
  5446  0E99  008C               	movwf	12	;volatile
  5447  0E9A                     l4019:
  5448                           
  5449                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x09;
  5450  0E9A  3009               	movlw	9
  5451  0E9B  0024               	movlb	4	; select bank4
  5452  0E9C  008D               	movwf	13	;volatile
  5453  0E9D                     l4021:
  5454                           
  5455                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5456  0E9D  018C               	clrf	12	;volatile
  5457  0E9E                     l4023:
  5458                           
  5459                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 0;
  5460  0E9E  0021               	movlb	1	; select bank1
  5461  0E9F  1395               	bcf	21,7	;volatile
  5462                           
  5463                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  5464  0EA0  30C0               	movlw	192
  5465  0EA1  0022               	movlb	2	; select bank2
  5466  0EA2  009D               	movwf	29	;volatile
  5467                           
  5468                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  5469  0EA3  3001               	movlw	1
  5470  0EA4  009E               	movwf	30	;volatile
  5471  0EA5                     l4025:
  5472                           
  5473                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  5474  0EA5  0027               	movlb	7	; select bank7
  5475  0EA6  1016               	bcf	22,0	;volatile
  5476  0EA7                     l4027:
  5477                           
  5478                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  5479  0EA7  1196               	bcf	22,3	;volatile
  5480  0EA8                     l4029:
  5481                           
  5482                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  5483  0EA8  1415               	bsf	21,0	;volatile
  5484  0EA9                     l4031:
  5485                           
  5486                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  5487  0EA9  1595               	bsf	21,3	;volatile
  5488  0EAA                     l4033:
  5489                           
  5490                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 0;
  5491  0EAA  1014               	bcf	20,0	;volatile
  5492  0EAB                     l4035:
  5493                           
  5494                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 0;
  5495  0EAB  1194               	bcf	20,3	;volatile
  5496  0EAC                     l4037:
  5497                           
  5498                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  5499  0EAC  3088               	movlw	low _IOCBF0_DefaultInterruptHandler
  5500  0EAD  0021               	movlb	1	; select bank1
  5501  0EAE  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  5502  0EAF  300B               	movlw	high _IOCBF0_DefaultInterruptHandler
  5503  0EB0  00A1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5504  0EB1  318B  23EE  318E   	fcall	_IOCBF0_SetInterruptHandler
  5505  0EB4                     l4039:
  5506                           
  5507                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  5508  0EB4  3089               	movlw	low _IOCBF3_DefaultInterruptHandler
  5509  0EB5  0021               	movlb	1	; select bank1
  5510  0EB6  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  5511  0EB7  300B               	movlw	high _IOCBF3_DefaultInterruptHandler
  5512  0EB8  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5513  0EB9  318B  23F7  318E   	fcall	_IOCBF3_SetInterruptHandler
  5514  0EBC                     l4041:
  5515                           
  5516                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  5517  0EBC  158B               	bsf	11,3	;volatile
  5518  0EBD                     l197:
  5519  0EBD  0008               	return
  5520  0EBE                     __end_of_PIN_MANAGER_Initialize:
  5521                           
  5522                           	psect	text18
  5523  0BF7                     __ptext18:	
  5524 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  5525 ;; Defined at:
  5526 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5529 ;;		 -> chegadaS2(1), IOCBF3_DefaultInterruptHandler(1), 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5541 ;;      Params:         0       0       2       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0
  5544 ;;      Totals:         0       0       2       0       0       0
  5545 ;;Total ram usage:        2 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 7
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_PIN_MANAGER_Initialize
  5552 ;;		_main
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556  0BF7                     _IOCBF3_SetInterruptHandler:	
  5557                           ;psect for function _IOCBF3_SetInterruptHandler
  5558                           
  5559  0BF7                     l3961:	
  5560                           ;incstack = 0
  5561                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  5562                           
  5563                           
  5564                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  5565  0BF7  0021               	movlb	1	; select bank1
  5566  0BF8  0821               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5567  0BF9  0020               	movlb	0	; select bank0
  5568  0BFA  00E7               	movwf	_IOCBF3_InterruptHandler+1
  5569  0BFB  0021               	movlb	1	; select bank1
  5570  0BFC  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  5571  0BFD  0020               	movlb	0	; select bank0
  5572  0BFE  00E6               	movwf	_IOCBF3_InterruptHandler
  5573  0BFF                     l219:
  5574  0BFF  0008               	return
  5575  0C00                     __end_of_IOCBF3_SetInterruptHandler:
  5576                           
  5577                           	psect	text19
  5578  0BEE                     __ptext19:	
  5579 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  5580 ;; Defined at:
  5581 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5584 ;;		 -> chegadaS1(1), IOCBF0_DefaultInterruptHandler(1), 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5596 ;;      Params:         0       0       2       0       0       0
  5597 ;;      Locals:         0       0       0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0       0
  5599 ;;      Totals:         0       0       2       0       0       0
  5600 ;;Total ram usage:        2 bytes
  5601 ;; Hardware stack levels used: 1
  5602 ;; Hardware stack levels required when called: 7
  5603 ;; This function calls:
  5604 ;;		Nothing
  5605 ;; This function is called by:
  5606 ;;		_PIN_MANAGER_Initialize
  5607 ;;		_main
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611  0BEE                     _IOCBF0_SetInterruptHandler:	
  5612                           ;psect for function _IOCBF0_SetInterruptHandler
  5613                           
  5614  0BEE                     l3959:	
  5615                           ;incstack = 0
  5616                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  5617                           
  5618                           
  5619                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  5620  0BEE  0021               	movlb	1	; select bank1
  5621  0BEF  0821               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5622  0BF0  0020               	movlb	0	; select bank0
  5623  0BF1  00E9               	movwf	_IOCBF0_InterruptHandler+1
  5624  0BF2  0021               	movlb	1	; select bank1
  5625  0BF3  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  5626  0BF4  0020               	movlb	0	; select bank0
  5627  0BF5  00E8               	movwf	_IOCBF0_InterruptHandler
  5628  0BF6                     l209:
  5629  0BF6  0008               	return
  5630  0BF7                     __end_of_IOCBF0_SetInterruptHandler:
  5631                           
  5632                           	psect	text20
  5633  0BCE                     __ptext20:	
  5634 ;; *************** function _OSCILLATOR_Initialize *****************
  5635 ;; Defined at:
  5636 ;;		line 70 in file "mcc_generated_files/mcc.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;		None
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5650 ;;      Params:         0       0       0       0       0       0
  5651 ;;      Locals:         0       0       0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0
  5653 ;;      Totals:         0       0       0       0       0       0
  5654 ;;Total ram usage:        0 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; Hardware stack levels required when called: 7
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_SYSTEM_Initialize
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664  0BCE                     _OSCILLATOR_Initialize:	
  5665                           ;psect for function _OSCILLATOR_Initialize
  5666                           
  5667  0BCE                     l4053:	
  5668                           ;incstack = 0
  5669                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5670                           
  5671                           
  5672                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x68;
  5673  0BCE  3068               	movlw	104
  5674  0BCF  0021               	movlb	1	; select bank1
  5675  0BD0  0099               	movwf	25	;volatile
  5676  0BD1                     l4055:
  5677                           
  5678                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  5679  0BD1  0198               	clrf	24	;volatile
  5680  0BD2                     l4057:
  5681                           
  5682                           ;mcc_generated_files/mcc.c: 77:     BORCON = 0x00;
  5683  0BD2  0022               	movlb	2	; select bank2
  5684  0BD3  0196               	clrf	22	;volatile
  5685  0BD4                     l266:
  5686  0BD4  0008               	return
  5687  0BD5                     __end_of_OSCILLATOR_Initialize:
  5688                           
  5689                           	psect	text21
  5690  0B92                     __ptext21:	
  5691 ;; *************** function _FVR_Initialize *****************
  5692 ;; Defined at:
  5693 ;;		line 58 in file "mcc_generated_files/fvr.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;		None
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5707 ;;      Params:         0       0       0       0       0       0
  5708 ;;      Locals:         0       0       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0
  5710 ;;      Totals:         0       0       0       0       0       0
  5711 ;;Total ram usage:        0 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; Hardware stack levels required when called: 7
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_SYSTEM_Initialize
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721  0B92                     _FVR_Initialize:	
  5722                           ;psect for function _FVR_Initialize
  5723                           
  5724  0B92                     l4061:	
  5725                           ;incstack = 0
  5726                           ; Regs used in _FVR_Initialize: [wreg]
  5727                           
  5728                           
  5729                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x89;
  5730  0B92  3089               	movlw	137
  5731  0B93  0022               	movlb	2	; select bank2
  5732  0B94  0097               	movwf	23	;volatile
  5733  0B95                     l314:
  5734  0B95  0008               	return
  5735  0B96                     __end_of_FVR_Initialize:
  5736                           
  5737                           	psect	text22
  5738  0DE2                     __ptext22:	
  5739 ;; *************** function _EUSART_Initialize *****************
  5740 ;; Defined at:
  5741 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;		None
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      void 
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0, pclath, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5755 ;;      Params:         0       0       0       0       0       0
  5756 ;;      Locals:         0       0       0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0
  5758 ;;      Totals:         0       0       0       0       0       0
  5759 ;;Total ram usage:        0 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; Hardware stack levels required when called: 8
  5762 ;; This function calls:
  5763 ;;		_EUSART_SetErrorHandler
  5764 ;;		_EUSART_SetFramingErrorHandler
  5765 ;;		_EUSART_SetOverrunErrorHandler
  5766 ;; This function is called by:
  5767 ;;		_SYSTEM_Initialize
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771  0DE2                     _EUSART_Initialize:	
  5772                           ;psect for function _EUSART_Initialize
  5773                           
  5774  0DE2                     l4125:	
  5775                           ;incstack = 0
  5776                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5777                           
  5778                           
  5779                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5780  0DE2  3008               	movlw	8
  5781  0DE3  0023               	movlb	3	; select bank3
  5782  0DE4  009F               	movwf	31	;volatile
  5783                           
  5784                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  5785  0DE5  3090               	movlw	144
  5786  0DE6  009D               	movwf	29	;volatile
  5787                           
  5788                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  5789  0DE7  3024               	movlw	36
  5790  0DE8  009E               	movwf	30	;volatile
  5791                           
  5792                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x33;
  5793  0DE9  3033               	movlw	51
  5794  0DEA  009B               	movwf	27	;volatile
  5795  0DEB                     l4127:
  5796                           
  5797                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5798  0DEB  019C               	clrf	28	;volatile
  5799  0DEC                     l4129:
  5800                           
  5801                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5802  0DEC  3000               	movlw	0
  5803  0DED  0021               	movlb	1	; select bank1
  5804  0DEE  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  5805  0DEF  3000               	movlw	0
  5806  0DF0  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  5807  0DF1  318B  23B6  318D   	fcall	_EUSART_SetFramingErrorHandler
  5808  0DF4                     l4131:
  5809                           
  5810                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5811  0DF4  3000               	movlw	0
  5812  0DF5  0021               	movlb	1	; select bank1
  5813  0DF6  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  5814  0DF7  3000               	movlw	0
  5815  0DF8  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  5816  0DF9  318B  23BC  318D   	fcall	_EUSART_SetOverrunErrorHandler
  5817  0DFC                     l4133:
  5818                           
  5819                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5820  0DFC  3000               	movlw	0
  5821  0DFD  0021               	movlb	1	; select bank1
  5822  0DFE  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  5823  0DFF  3000               	movlw	0
  5824  0E00  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  5825  0E01  318B  23B0  318D   	fcall	_EUSART_SetErrorHandler
  5826  0E04                     l4135:
  5827                           
  5828                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5829  0E04  0020               	movlb	0	; select bank0
  5830  0E05  01D7               	clrf	_eusartRxLastError	;volatile
  5831  0E06                     l360:
  5832  0E06  0008               	return
  5833  0E07                     __end_of_EUSART_Initialize:
  5834                           
  5835                           	psect	text23
  5836  0BBC                     __ptext23:	
  5837 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5838 ;; Defined at:
  5839 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5842 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		wreg
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5854 ;;      Params:         0       0       2       0       0       0
  5855 ;;      Locals:         0       0       0       0       0       0
  5856 ;;      Temps:          0       0       0       0       0       0
  5857 ;;      Totals:         0       0       2       0       0       0
  5858 ;;Total ram usage:        2 bytes
  5859 ;; Hardware stack levels used: 1
  5860 ;; Hardware stack levels required when called: 7
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_EUSART_Initialize
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868  0BBC                     _EUSART_SetOverrunErrorHandler:	
  5869                           ;psect for function _EUSART_SetOverrunErrorHandler
  5870                           
  5871  0BBC                     l3965:	
  5872                           ;incstack = 0
  5873                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5874                           
  5875                           
  5876                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5877  0BBC  0021               	movlb	1	; select bank1
  5878  0BBD  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  5879  0BBE  00C7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5880  0BBF  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  5881  0BC0  00C6               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5882  0BC1                     l402:
  5883  0BC1  0008               	return
  5884  0BC2                     __end_of_EUSART_SetOverrunErrorHandler:
  5885                           
  5886                           	psect	text24
  5887  0BB6                     __ptext24:	
  5888 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5889 ;; Defined at:
  5890 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5893 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5905 ;;      Params:         0       0       2       0       0       0
  5906 ;;      Locals:         0       0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0
  5908 ;;      Totals:         0       0       2       0       0       0
  5909 ;;Total ram usage:        2 bytes
  5910 ;; Hardware stack levels used: 1
  5911 ;; Hardware stack levels required when called: 7
  5912 ;; This function calls:
  5913 ;;		Nothing
  5914 ;; This function is called by:
  5915 ;;		_EUSART_Initialize
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919  0BB6                     _EUSART_SetFramingErrorHandler:	
  5920                           ;psect for function _EUSART_SetFramingErrorHandler
  5921                           
  5922  0BB6                     l3963:	
  5923                           ;incstack = 0
  5924                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5925                           
  5926                           
  5927                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5928  0BB6  0021               	movlb	1	; select bank1
  5929  0BB7  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  5930  0BB8  00C9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5931  0BB9  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  5932  0BBA  00C8               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5933  0BBB                     l399:
  5934  0BBB  0008               	return
  5935  0BBC                     __end_of_EUSART_SetFramingErrorHandler:
  5936                           
  5937                           	psect	text25
  5938  0BB0                     __ptext25:	
  5939 ;; *************** function _EUSART_SetErrorHandler *****************
  5940 ;; Defined at:
  5941 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5944 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;		None
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      void 
  5949 ;; Registers used:
  5950 ;;		wreg
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5956 ;;      Params:         0       0       2       0       0       0
  5957 ;;      Locals:         0       0       0       0       0       0
  5958 ;;      Temps:          0       0       0       0       0       0
  5959 ;;      Totals:         0       0       2       0       0       0
  5960 ;;Total ram usage:        2 bytes
  5961 ;; Hardware stack levels used: 1
  5962 ;; Hardware stack levels required when called: 7
  5963 ;; This function calls:
  5964 ;;		Nothing
  5965 ;; This function is called by:
  5966 ;;		_EUSART_Initialize
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970  0BB0                     _EUSART_SetErrorHandler:	
  5971                           ;psect for function _EUSART_SetErrorHandler
  5972                           
  5973  0BB0                     l3967:	
  5974                           ;incstack = 0
  5975                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5976                           
  5977                           
  5978                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  5979  0BB0  0021               	movlb	1	; select bank1
  5980  0BB1  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  5981  0BB2  00C5               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5982  0BB3  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  5983  0BB4  00C4               	movwf	_EUSART_ErrorHandler^(0+128)
  5984  0BB5                     l405:
  5985  0BB5  0008               	return
  5986  0BB6                     __end_of_EUSART_SetErrorHandler:
  5987                           
  5988                           	psect	text26
  5989  0C3C                     __ptext26:	
  5990 ;; *************** function _CMP2_Initialize *****************
  5991 ;; Defined at:
  5992 ;;		line 59 in file "mcc_generated_files/cmp2.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;		None
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6006 ;;      Params:         0       0       0       0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0
  6008 ;;      Temps:          0       0       0       0       0       0
  6009 ;;      Totals:         0       0       0       0       0       0
  6010 ;;Total ram usage:        0 bytes
  6011 ;; Hardware stack levels used: 1
  6012 ;; Hardware stack levels required when called: 7
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_SYSTEM_Initialize
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020  0C3C                     _CMP2_Initialize:	
  6021                           ;psect for function _CMP2_Initialize
  6022                           
  6023  0C3C                     l3993:	
  6024                           ;incstack = 0
  6025                           ; Regs used in _CMP2_Initialize: [wreg]
  6026                           
  6027                           
  6028                           ;mcc_generated_files/cmp2.c: 66:     PIE2bits.C2IE = 0;
  6029  0C3C  0021               	movlb	1	; select bank1
  6030  0C3D  1312               	bcf	18,6	;volatile
  6031  0C3E                     l3995:
  6032                           
  6033                           ;mcc_generated_files/cmp2.c: 69:     CM2CON0 = 0x84;
  6034  0C3E  3084               	movlw	132
  6035  0C3F  0022               	movlb	2	; select bank2
  6036  0C40  0093               	movwf	19	;volatile
  6037                           
  6038                           ;mcc_generated_files/cmp2.c: 72:     CM2CON1 = 0x61;
  6039  0C41  3061               	movlw	97
  6040  0C42  0094               	movwf	20	;volatile
  6041  0C43                     l3997:
  6042                           
  6043                           ;mcc_generated_files/cmp2.c: 75:     PIR2bits.C2IF = 0;
  6044  0C43  0020               	movlb	0	; select bank0
  6045  0C44  1312               	bcf	18,6	;volatile
  6046  0C45                     l3999:
  6047                           
  6048                           ;mcc_generated_files/cmp2.c: 78:     PIE2bits.C2IE = 1;
  6049  0C45  0021               	movlb	1	; select bank1
  6050  0C46  1712               	bsf	18,6	;volatile
  6051  0C47                     l75:
  6052  0C47  0008               	return
  6053  0C48                     __end_of_CMP2_Initialize:
  6054                           
  6055                           	psect	text27
  6056  0C30                     __ptext27:	
  6057 ;; *************** function _CMP1_Initialize *****************
  6058 ;; Defined at:
  6059 ;;		line 59 in file "mcc_generated_files/cmp1.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;		None
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6073 ;;      Params:         0       0       0       0       0       0
  6074 ;;      Locals:         0       0       0       0       0       0
  6075 ;;      Temps:          0       0       0       0       0       0
  6076 ;;      Totals:         0       0       0       0       0       0
  6077 ;;Total ram usage:        0 bytes
  6078 ;; Hardware stack levels used: 1
  6079 ;; Hardware stack levels required when called: 7
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_SYSTEM_Initialize
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087  0C30                     _CMP1_Initialize:	
  6088                           ;psect for function _CMP1_Initialize
  6089                           
  6090  0C30                     l4001:	
  6091                           ;incstack = 0
  6092                           ; Regs used in _CMP1_Initialize: [wreg]
  6093                           
  6094                           
  6095                           ;mcc_generated_files/cmp1.c: 66:     PIE2bits.C1IE = 0;
  6096  0C30  0021               	movlb	1	; select bank1
  6097  0C31  1292               	bcf	18,5	;volatile
  6098  0C32                     l4003:
  6099                           
  6100                           ;mcc_generated_files/cmp1.c: 69:     CM1CON0 = 0x84;
  6101  0C32  3084               	movlw	132
  6102  0C33  0022               	movlb	2	; select bank2
  6103  0C34  0091               	movwf	17	;volatile
  6104                           
  6105                           ;mcc_generated_files/cmp1.c: 72:     CM1CON1 = 0x60;
  6106  0C35  3060               	movlw	96
  6107  0C36  0092               	movwf	18	;volatile
  6108  0C37                     l4005:
  6109                           
  6110                           ;mcc_generated_files/cmp1.c: 75:     PIR2bits.C1IF = 0;
  6111  0C37  0020               	movlb	0	; select bank0
  6112  0C38  1292               	bcf	18,5	;volatile
  6113  0C39                     l4007:
  6114                           
  6115                           ;mcc_generated_files/cmp1.c: 78:     PIE2bits.C1IE = 1;
  6116  0C39  0021               	movlb	1	; select bank1
  6117  0C3A  1692               	bsf	18,5	;volatile
  6118  0C3B                     l142:
  6119  0C3B  0008               	return
  6120  0C3C                     __end_of_CMP1_Initialize:
  6121                           
  6122                           	psect	text28
  6123  07EE                     __ptext28:	
  6124 ;; *************** function _CCP4_Initialize *****************
  6125 ;; Defined at:
  6126 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;		None
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;		None
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0, pclath, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6140 ;;      Params:         0       0       0       0       0       0
  6141 ;;      Locals:         0       0       0       0       0       0
  6142 ;;      Temps:          0       0       0       0       0       0
  6143 ;;      Totals:         0       0       0       0       0       0
  6144 ;;Total ram usage:        0 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 8
  6147 ;; This function calls:
  6148 ;;		_CCP4_SetCallBack
  6149 ;; This function is called by:
  6150 ;;		_SYSTEM_Initialize
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154  07EE                     _CCP4_Initialize:	
  6155                           ;psect for function _CCP4_Initialize
  6156                           
  6157  07EE                     l4101:	
  6158                           ;incstack = 0
  6159                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6160                           
  6161                           
  6162                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  6163  07EE  3004               	movlw	4
  6164  07EF  0026               	movlb	6	; select bank6
  6165  07F0  009A               	movwf	26	;volatile
  6166  07F1                     l4103:
  6167                           
  6168                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  6169  07F1  0198               	clrf	24	;volatile
  6170  07F2                     l4105:
  6171                           
  6172                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  6173  07F2  0199               	clrf	25	;volatile
  6174  07F3                     l4107:
  6175                           
  6176                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  6177  07F3  3087               	movlw	low _CCP4_DefaultCallBack
  6178  07F4  0021               	movlb	1	; select bank1
  6179  07F5  00A0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  6180  07F6  300B               	movlw	high _CCP4_DefaultCallBack
  6181  07F7  00A1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  6182  07F8  318B  23E5  3187   	fcall	_CCP4_SetCallBack
  6183  07FB                     l4109:
  6184                           
  6185                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  6186  07FB  0020               	movlb	0	; select bank0
  6187  07FC  1293               	bcf	19,5	;volatile
  6188  07FD                     l4111:
  6189                           
  6190                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  6191  07FD  0021               	movlb	1	; select bank1
  6192  07FE  1693               	bsf	19,5	;volatile
  6193  07FF                     l641:
  6194  07FF  0008               	return
  6195  0800                     __end_of_CCP4_Initialize:
  6196                           
  6197                           	psect	text29
  6198  0BE5                     __ptext29:	
  6199 ;; *************** function _CCP4_SetCallBack *****************
  6200 ;; Defined at:
  6201 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  6204 ;;		 -> CCP4_DefaultCallBack(1), 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      void 
  6209 ;; Registers used:
  6210 ;;		wreg
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6216 ;;      Params:         0       0       2       0       0       0
  6217 ;;      Locals:         0       0       0       0       0       0
  6218 ;;      Temps:          0       0       0       0       0       0
  6219 ;;      Totals:         0       0       2       0       0       0
  6220 ;;Total ram usage:        2 bytes
  6221 ;; Hardware stack levels used: 1
  6222 ;; Hardware stack levels required when called: 7
  6223 ;; This function calls:
  6224 ;;		Nothing
  6225 ;; This function is called by:
  6226 ;;		_CCP4_Initialize
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230  0BE5                     _CCP4_SetCallBack:	
  6231                           ;psect for function _CCP4_SetCallBack
  6232                           
  6233  0BE5                     l3981:	
  6234                           ;incstack = 0
  6235                           ; Regs used in _CCP4_SetCallBack: [wreg]
  6236                           
  6237                           
  6238                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  6239  0BE5  0021               	movlb	1	; select bank1
  6240  0BE6  0821               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  6241  0BE7  0020               	movlb	0	; select bank0
  6242  0BE8  00E1               	movwf	_CCP4_CallBack+1
  6243  0BE9  0021               	movlb	1	; select bank1
  6244  0BEA  0820               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  6245  0BEB  0020               	movlb	0	; select bank0
  6246  0BEC  00E0               	movwf	_CCP4_CallBack
  6247  0BED                     l647:
  6248  0BED  0008               	return
  6249  0BEE                     __end_of_CCP4_SetCallBack:
  6250                           
  6251                           	psect	text30
  6252  0BD5                     __ptext30:	
  6253 ;; *************** function _ADC_Initialize *****************
  6254 ;; Defined at:
  6255 ;;		line 67 in file "mcc_generated_files/adc.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;		None
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6269 ;;      Params:         0       0       0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0
  6272 ;;      Totals:         0       0       0       0       0       0
  6273 ;;Total ram usage:        0 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; Hardware stack levels required when called: 7
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		_SYSTEM_Initialize
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283  0BD5                     _ADC_Initialize:	
  6284                           ;psect for function _ADC_Initialize
  6285                           
  6286  0BD5                     l4095:	
  6287                           ;incstack = 0
  6288                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6289                           
  6290                           
  6291                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC3;
  6292  0BD5  30C3               	movlw	195
  6293  0BD6  0021               	movlb	1	; select bank1
  6294  0BD7  009E               	movwf	30	;volatile
  6295  0BD8                     l4097:
  6296                           
  6297                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  6298  0BD8  019B               	clrf	27	;volatile
  6299  0BD9                     l4099:
  6300                           
  6301                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  6302  0BD9  019C               	clrf	28	;volatile
  6303                           
  6304                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  6305  0BDA  3001               	movlw	1
  6306  0BDB  009D               	movwf	29	;volatile
  6307  0BDC                     l286:
  6308  0BDC  0008               	return
  6309  0BDD                     __end_of_ADC_Initialize:
  6310                           
  6311                           	psect	text31
  6312  0F55                     __ptext31:	
  6313 ;; *************** function _SPI1_Open *****************
  6314 ;; Defined at:
  6315 ;;		line 72 in file "mcc_generated_files/spi1.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  spi1UniqueCo    1    wreg     enum E355
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  spi1UniqueCo    1    3[BANK1 ] enum E355
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      _Bool 
  6322 ;; Registers used:
  6323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6329 ;;      Params:         0       0       0       0       0       0
  6330 ;;      Locals:         0       0       1       0       0       0
  6331 ;;      Temps:          0       0       3       0       0       0
  6332 ;;      Totals:         0       0       4       0       0       0
  6333 ;;Total ram usage:        4 bytes
  6334 ;; Hardware stack levels used: 1
  6335 ;; Hardware stack levels required when called: 7
  6336 ;; This function calls:
  6337 ;;		Nothing
  6338 ;; This function is called by:
  6339 ;;		_main
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343  0F55                     _SPI1_Open:	
  6344                           ;psect for function _SPI1_Open
  6345                           
  6346                           
  6347                           ;incstack = 0
  6348                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
  6349                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  6350  0F55  0021               	movlb	1	; select bank1
  6351  0F56  00A3               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+128)
  6352  0F57                     l4161:
  6353                           
  6354                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  6355  0F57  0024               	movlb	4	; select bank4
  6356  0F58  1A95               	btfsc	21,5	;volatile
  6357  0F59  2F5B               	goto	u2991
  6358  0F5A  2F5C               	goto	u2990
  6359  0F5B                     u2991:
  6360  0F5B  2FA8               	goto	l430
  6361  0F5C                     u2990:
  6362  0F5C                     l4163:
  6363                           
  6364                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  6365  0F5C  0021               	movlb	1	; select bank1
  6366  0F5D  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6367  0F5E  00A0               	movwf	??_SPI1_Open^(0+128)
  6368  0F5F  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6369  0F60  35A0               	lslf	??_SPI1_Open^(0+128),f
  6370  0F61  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6371  0F62  35A0               	lslf	??_SPI1_Open^(0+128),f
  6372  0F63  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6373  0F64  300D               	movlw	low ((_spi1_configuration+1)| (0+32768))
  6374  0F65  0720               	addwf	??_SPI1_Open^(0+128),w
  6375  0F66  0084               	movwf	4
  6376  0F67  3088               	movlw	high ((_spi1_configuration+1)| (0+32768))
  6377  0F68  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6378  0F69  0085               	movwf	5
  6379  0F6A  0800               	movf	0,w	;code access
  6380  0F6B  0024               	movlb	4	; select bank4
  6381  0F6C  0094               	movwf	20	;volatile
  6382                           
  6383                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  6384  0F6D  0021               	movlb	1	; select bank1
  6385  0F6E  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6386  0F6F  00A0               	movwf	??_SPI1_Open^(0+128)
  6387  0F70  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6388  0F71  35A0               	lslf	??_SPI1_Open^(0+128),f
  6389  0F72  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6390  0F73  35A0               	lslf	??_SPI1_Open^(0+128),f
  6391  0F74  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6392  0F75  300C               	movlw	low (_spi1_configuration| (0+32768))
  6393  0F76  0720               	addwf	??_SPI1_Open^(0+128),w
  6394  0F77  0084               	movwf	4
  6395  0F78  3088               	movlw	high (_spi1_configuration| (0+32768))
  6396  0F79  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6397  0F7A  0085               	movwf	5
  6398  0F7B  0800               	movf	0,w	;code access
  6399  0F7C  0024               	movlb	4	; select bank4
  6400  0F7D  0095               	movwf	21	;volatile
  6401  0F7E                     l4165:
  6402                           
  6403                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  6404  0F7E  0196               	clrf	22	;volatile
  6405  0F7F                     l4167:
  6406                           
  6407                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  6408  0F7F  0021               	movlb	1	; select bank1
  6409  0F80  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6410  0F81  00A0               	movwf	??_SPI1_Open^(0+128)
  6411  0F82  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6412  0F83  35A0               	lslf	??_SPI1_Open^(0+128),f
  6413  0F84  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6414  0F85  35A0               	lslf	??_SPI1_Open^(0+128),f
  6415  0F86  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6416  0F87  300E               	movlw	low ((_spi1_configuration+2)| (0+32768))
  6417  0F88  0720               	addwf	??_SPI1_Open^(0+128),w
  6418  0F89  0084               	movwf	4
  6419  0F8A  3088               	movlw	high ((_spi1_configuration+2)| (0+32768))
  6420  0F8B  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6421  0F8C  0085               	movwf	5
  6422  0F8D  0800               	movf	0,w	;code access
  6423  0F8E  0024               	movlb	4	; select bank4
  6424  0F8F  0092               	movwf	18	;volatile
  6425  0F90                     l4169:
  6426                           
  6427                           ;mcc_generated_files/spi1.c: 80:         TRISBbits.TRISB4 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  6428  0F90  0021               	movlb	1	; select bank1
  6429  0F91  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6430  0F92  00A0               	movwf	??_SPI1_Open^(0+128)
  6431  0F93  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6432  0F94  35A0               	lslf	??_SPI1_Open^(0+128),f
  6433  0F95  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6434  0F96  35A0               	lslf	??_SPI1_Open^(0+128),f
  6435  0F97  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6436  0F98  300F               	movlw	low ((_spi1_configuration+3)| (0+32768))
  6437  0F99  0720               	addwf	??_SPI1_Open^(0+128),w
  6438  0F9A  0084               	movwf	4
  6439  0F9B  3088               	movlw	high ((_spi1_configuration+3)| (0+32768))
  6440  0F9C  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6441  0F9D  0085               	movwf	5
  6442  0F9E  0800               	movf	0,w	;code access
  6443  0F9F  00A2               	movwf	(??_SPI1_Open+2)^(0+128)
  6444  0FA0  0EA2               	swapf	(??_SPI1_Open+2)^(0+128),f
  6445  0FA1  080D               	movf	13,w	;volatile
  6446  0FA2  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6447  0FA3  39EF               	andlw	-17
  6448  0FA4  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6449  0FA5  008D               	movwf	13	;volatile
  6450  0FA6                     l4171:
  6451                           
  6452                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  6453  0FA6  0024               	movlb	4	; select bank4
  6454  0FA7  1695               	bsf	21,5	;volatile
  6455  0FA8                     l430:
  6456  0FA8  0008               	return
  6457  0FA9                     __end_of_SPI1_Open:
  6458                           
  6459                           	psect	text32
  6460  0B9F                     __ptext32:	
  6461 ;; *************** function _EUSART_is_rx_ready *****************
  6462 ;; Defined at:
  6463 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;		None
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      _Bool 
  6470 ;; Registers used:
  6471 ;;		wreg, status,2, status,0
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6477 ;;      Params:         0       0       0       0       0       0
  6478 ;;      Locals:         0       0       0       0       0       0
  6479 ;;      Temps:          0       0       0       0       0       0
  6480 ;;      Totals:         0       0       0       0       0       0
  6481 ;;Total ram usage:        0 bytes
  6482 ;; Hardware stack levels used: 1
  6483 ;; Hardware stack levels required when called: 7
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_main
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491  0B9F                     _EUSART_is_rx_ready:	
  6492                           ;psect for function _EUSART_is_rx_ready
  6493                           
  6494  0B9F                     l4145:	
  6495                           ;incstack = 0
  6496                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6497                           
  6498                           
  6499                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  6500  0B9F  0020               	movlb	0	; select bank0
  6501  0BA0  0E11               	swapf	17,w	;volatile
  6502  0BA1  0C89               	rrf	9,f
  6503  0BA2  3901               	andlw	1
  6504  0BA3                     l368:
  6505  0BA3  0008               	return
  6506  0BA4                     __end_of_EUSART_is_rx_ready:
  6507                           
  6508                           	psect	text33
  6509  0C9C                     __ptext33:	
  6510 ;; *************** function _EUSART_Read *****************
  6511 ;; Defined at:
  6512 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;		None
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  1    wreg      unsigned char 
  6519 ;; Registers used:
  6520 ;;		wreg, status,2
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6526 ;;      Params:         0       0       0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0
  6529 ;;      Totals:         0       0       0       0       0       0
  6530 ;;Total ram usage:        0 bytes
  6531 ;; Hardware stack levels used: 1
  6532 ;; Hardware stack levels required when called: 7
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_main
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540  0C9C                     _EUSART_Read:	
  6541                           ;psect for function _EUSART_Read
  6542                           
  6543  0C9C                     l4149:	
  6544                           ;incstack = 0
  6545                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6546                           
  6547  0C9C                     l377:	
  6548                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6549                           
  6550                           
  6551                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  6552  0C9C  0020               	movlb	0	; select bank0
  6553  0C9D  1E91               	btfss	17,5	;volatile
  6554  0C9E  2CA0               	goto	u2971
  6555  0C9F  2CA1               	goto	u2970
  6556  0CA0                     u2971:
  6557  0CA0  2C9C               	goto	l377
  6558  0CA1                     u2970:
  6559  0CA1                     l4151:
  6560                           
  6561                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6562  0CA1  01D7               	clrf	_eusartRxLastError	;volatile
  6563  0CA2                     l4153:
  6564                           
  6565                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  6566  0CA2  0023               	movlb	3	; select bank3
  6567  0CA3  1C9D               	btfss	29,1	;volatile
  6568  0CA4  2CA6               	goto	u2981
  6569  0CA5  2CA7               	goto	u2980
  6570  0CA6                     u2981:
  6571  0CA6  2CA9               	goto	l4157
  6572  0CA7                     u2980:
  6573  0CA7                     l4155:
  6574                           
  6575                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  6576  0CA7  121D               	bcf	29,4	;volatile
  6577                           
  6578                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  6579  0CA8  161D               	bsf	29,4	;volatile
  6580  0CA9                     l4157:
  6581                           
  6582                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  6583  0CA9  0819               	movf	25,w	;volatile
  6584  0CAA                     l381:
  6585  0CAA  0008               	return
  6586  0CAB                     __end_of_EUSART_Read:
  6587                           
  6588                           	psect	intentry
  6589  0004                     __pintentry:	
  6590 ;; *************** function _INTERRUPT_InterruptManager *****************
  6591 ;; Defined at:
  6592 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;		None
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6606 ;;      Params:         0       0       0       0       0       0
  6607 ;;      Locals:         0       0       0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0
  6609 ;;      Totals:         0       0       0       0       0       0
  6610 ;;Total ram usage:        0 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 6
  6613 ;; This function calls:
  6614 ;;		_CCP4_CaptureISR
  6615 ;;		_CMP1_ISR
  6616 ;;		_CMP2_ISR
  6617 ;;		_PIN_MANAGER_IOC
  6618 ;;		_TMR0_ISR
  6619 ;;		_TMR4_ISR
  6620 ;; This function is called by:
  6621 ;;		Interrupt level 1
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625  0004                     _INTERRUPT_InterruptManager:
  6626                           
  6627                           ;incstack = 0
  6628  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6629                           
  6630                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6631  0005  3180               	pagesel	$
  6632  0006                     i1l3691:
  6633                           
  6634                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  6635  0006  1D8B               	btfss	11,3	;volatile
  6636  0007  2809               	goto	u249_21
  6637  0008  280A               	goto	u249_20
  6638  0009                     u249_21:
  6639  0009  2811               	goto	i1l3697
  6640  000A                     u249_20:
  6641  000A                     i1l3693:
  6642  000A  1C0B               	btfss	11,0	;volatile
  6643  000B  280D               	goto	u250_21
  6644  000C  280E               	goto	u250_20
  6645  000D                     u250_21:
  6646  000D  2811               	goto	i1l3697
  6647  000E                     u250_20:
  6648  000E                     i1l3695:
  6649                           
  6650                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6651  000E  318C  24BB  3180   	fcall	_PIN_MANAGER_IOC
  6652  0011                     i1l3697:
  6653                           
  6654                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6655  0011  1E8B               	btfss	11,5	;volatile
  6656  0012  2814               	goto	u251_21
  6657  0013  2815               	goto	u251_20
  6658  0014                     u251_21:
  6659  0014  281C               	goto	i1l3703
  6660  0015                     u251_20:
  6661  0015                     i1l3699:
  6662  0015  1D0B               	btfss	11,2	;volatile
  6663  0016  2818               	goto	u252_21
  6664  0017  2819               	goto	u252_20
  6665  0018                     u252_21:
  6666  0018  281C               	goto	i1l3703
  6667  0019                     u252_20:
  6668  0019                     i1l3701:
  6669                           
  6670                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  6671  0019  318D  2535  3180   	fcall	_TMR0_ISR
  6672  001C                     i1l3703:
  6673                           
  6674                           ;mcc_generated_files/interrupt_manager.c: 63:     if(INTCONbits.PEIE == 1)
  6675  001C  1F0B               	btfss	11,6	;volatile
  6676  001D  281F               	goto	u253_21
  6677  001E  2820               	goto	u253_20
  6678  001F                     u253_21:
  6679  001F  2854               	goto	i1l500
  6680  0020                     u253_20:
  6681  0020                     i1l3705:
  6682                           
  6683                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE2bits.C2IE == 1 && PIR2bits.C2IF == 1)
  6684  0020  0021               	movlb	1	; select bank1
  6685  0021  1F12               	btfss	18,6	;volatile
  6686  0022  2824               	goto	u254_21
  6687  0023  2825               	goto	u254_20
  6688  0024                     u254_21:
  6689  0024  282D               	goto	i1l3711
  6690  0025                     u254_20:
  6691  0025                     i1l3707:
  6692  0025  0020               	movlb	0	; select bank0
  6693  0026  1F12               	btfss	18,6	;volatile
  6694  0027  2829               	goto	u255_21
  6695  0028  282A               	goto	u255_20
  6696  0029                     u255_21:
  6697  0029  282D               	goto	i1l3711
  6698  002A                     u255_20:
  6699  002A                     i1l3709:
  6700                           
  6701                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             CMP2_ISR();
  6702  002A  318B  23AA  3180   	fcall	_CMP2_ISR
  6703  002D                     i1l3711:
  6704                           
  6705                           ;mcc_generated_files/interrupt_manager.c: 69:         if(PIE2bits.C1IE == 1 && PIR2bits.
      +                          C1IF == 1)
  6706  002D  0021               	movlb	1	; select bank1
  6707  002E  1E92               	btfss	18,5	;volatile
  6708  002F  2831               	goto	u256_21
  6709  0030  2832               	goto	u256_20
  6710  0031                     u256_21:
  6711  0031  283A               	goto	i1l3717
  6712  0032                     u256_20:
  6713  0032                     i1l3713:
  6714  0032  0020               	movlb	0	; select bank0
  6715  0033  1E92               	btfss	18,5	;volatile
  6716  0034  2836               	goto	u257_21
  6717  0035  2837               	goto	u257_20
  6718  0036                     u257_21:
  6719  0036  283A               	goto	i1l3717
  6720  0037                     u257_20:
  6721  0037                     i1l3715:
  6722                           
  6723                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP1_ISR();
  6724  0037  318B  23A4  3180   	fcall	_CMP1_ISR
  6725  003A                     i1l3717:
  6726                           
  6727                           ;mcc_generated_files/interrupt_manager.c: 73:         if(PIE3bits.CCP4IE == 1 && PIR3bit
      +                          s.CCP4IF == 1)
  6728  003A  0021               	movlb	1	; select bank1
  6729  003B  1E93               	btfss	19,5	;volatile
  6730  003C  283E               	goto	u258_21
  6731  003D  283F               	goto	u258_20
  6732  003E                     u258_21:
  6733  003E  2847               	goto	i1l3723
  6734  003F                     u258_20:
  6735  003F                     i1l3719:
  6736  003F  0020               	movlb	0	; select bank0
  6737  0040  1E93               	btfss	19,5	;volatile
  6738  0041  2843               	goto	u259_21
  6739  0042  2844               	goto	u259_20
  6740  0043                     u259_21:
  6741  0043  2847               	goto	i1l3723
  6742  0044                     u259_20:
  6743  0044                     i1l3721:
  6744                           
  6745                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CCP4_CaptureISR();
  6746  0044  318C  24F2  3180   	fcall	_CCP4_CaptureISR
  6747  0047                     i1l3723:
  6748                           
  6749                           ;mcc_generated_files/interrupt_manager.c: 77:         if(PIE3bits.TMR4IE == 1 && PIR3bit
      +                          s.TMR4IF == 1)
  6750  0047  0021               	movlb	1	; select bank1
  6751  0048  1C93               	btfss	19,1	;volatile
  6752  0049  284B               	goto	u260_21
  6753  004A  284C               	goto	u260_20
  6754  004B                     u260_21:
  6755  004B  2854               	goto	i1l500
  6756  004C                     u260_20:
  6757  004C                     i1l3725:
  6758  004C  0020               	movlb	0	; select bank0
  6759  004D  1C93               	btfss	19,1	;volatile
  6760  004E  2850               	goto	u261_21
  6761  004F  2851               	goto	u261_20
  6762  0050                     u261_21:
  6763  0050  2854               	goto	i1l500
  6764  0051                     u261_20:
  6765  0051                     i1l3727:
  6766                           
  6767                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR4_ISR();
  6768  0051  318D  2508  3180   	fcall	_TMR4_ISR
  6769  0054                     i1l500:
  6770  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6771  0055  0009               	retfie
  6772  0056                     __end_of_INTERRUPT_InterruptManager:
  6773                           
  6774                           	psect	text35
  6775  0D08                     __ptext35:	
  6776 ;; *************** function _TMR4_ISR *****************
  6777 ;; Defined at:
  6778 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;		None
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      void 
  6785 ;; Registers used:
  6786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6792 ;;      Params:         0       0       0       0       0       0
  6793 ;;      Locals:         0       0       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0       0
  6795 ;;      Totals:         0       0       0       0       0       0
  6796 ;;Total ram usage:        0 bytes
  6797 ;; Hardware stack levels used: 1
  6798 ;; Hardware stack levels required when called: 3
  6799 ;; This function calls:
  6800 ;;		_TMR4_CallBack
  6801 ;; This function is called by:
  6802 ;;		_INTERRUPT_InterruptManager
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806  0D08                     _TMR4_ISR:	
  6807                           ;psect for function _TMR4_ISR
  6808                           
  6809  0D08                     i1l3601:	
  6810                           ;incstack = 0
  6811                           ; Regs used in _TMR4_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6812                           
  6813                           
  6814                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  6815  0D08  0020               	movlb	0	; select bank0
  6816  0D09  1093               	bcf	19,1	;volatile
  6817  0D0A                     i1l3603:
  6818                           
  6819                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 2)
  6820  0D0A  3001               	movlw	1
  6821  0D0B  07CA               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  6822  0D0C  3000               	movlw	0
  6823  0D0D  3DCB               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  6824  0D0E  3000               	movlw	0
  6825  0D0F  024B               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  6826  0D10  3002               	movlw	2
  6827  0D11  1903               	skipnz
  6828  0D12  024A               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  6829  0D13  1C03               	skipc
  6830  0D14  2D16               	goto	u237_21
  6831  0D15  2D17               	goto	u237_20
  6832  0D16                     u237_21:
  6833  0D16  2D1D               	goto	i1l691
  6834  0D17                     u237_20:
  6835  0D17                     i1l3605:
  6836                           
  6837                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  6838  0D17  318C  2455  318D   	fcall	_TMR4_CallBack
  6839  0D1A                     i1l3607:
  6840                           
  6841                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  6842  0D1A  0020               	movlb	0	; select bank0
  6843  0D1B  01CA               	clrf	TMR4_ISR@CountCallBack	;volatile
  6844  0D1C  01CB               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  6845  0D1D                     i1l691:
  6846  0D1D  0008               	return
  6847  0D1E                     __end_of_TMR4_ISR:
  6848                           
  6849                           	psect	text36
  6850  0C55                     __ptext36:	
  6851 ;; *************** function _TMR4_CallBack *****************
  6852 ;; Defined at:
  6853 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6867 ;;      Params:         0       0       0       0       0       0
  6868 ;;      Locals:         0       0       0       0       0       0
  6869 ;;      Temps:          0       0       0       0       0       0
  6870 ;;      Totals:         0       0       0       0       0       0
  6871 ;;Total ram usage:        0 bytes
  6872 ;; Hardware stack levels used: 1
  6873 ;; Hardware stack levels required when called: 2
  6874 ;; This function calls:
  6875 ;;		Absolute function
  6876 ;;		_TMR4_DefaultInterruptHandler
  6877 ;;		_controleMovimento
  6878 ;; This function is called by:
  6879 ;;		_TMR4_ISR
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883  0C55                     _TMR4_CallBack:	
  6884                           ;psect for function _TMR4_CallBack
  6885                           
  6886  0C55                     i1l3531:	
  6887                           ;incstack = 0
  6888                           ; Regs used in _TMR4_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6889                           
  6890                           
  6891                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  6892  0C55  0020               	movlb	0	; select bank0
  6893  0C56  085E               	movf	_TMR4_InterruptHandler,w
  6894  0C57  045F               	iorwf	_TMR4_InterruptHandler+1,w
  6895  0C58  1903               	btfsc	3,2
  6896  0C59  2C5B               	goto	u230_21
  6897  0C5A  2C5C               	goto	u230_20
  6898  0C5B                     u230_21:
  6899  0C5B  2C61               	goto	i1l695
  6900  0C5C                     u230_20:
  6901  0C5C                     i1l3533:
  6902                           
  6903                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  6904  0C5C  085F               	movf	_TMR4_InterruptHandler+1,w
  6905  0C5D  008A               	movwf	10
  6906  0C5E  085E               	movf	_TMR4_InterruptHandler,w
  6907  0C5F  000A               	callw
  6908  0C60  318C               	pagesel	$
  6909  0C61                     i1l695:
  6910  0C61  0008               	return
  6911  0C62                     __end_of_TMR4_CallBack:
  6912                           
  6913                           	psect	text37
  6914  0B8B                     __ptext37:	
  6915 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  6916 ;; Defined at:
  6917 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		None
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6931 ;;      Params:         0       0       0       0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0
  6934 ;;      Totals:         0       0       0       0       0       0
  6935 ;;Total ram usage:        0 bytes
  6936 ;; Hardware stack levels used: 1
  6937 ;; This function calls:
  6938 ;;		Nothing
  6939 ;; This function is called by:
  6940 ;;		_TMR4_Initialize
  6941 ;;		_TMR4_CallBack
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945  0B8B                     _TMR4_DefaultInterruptHandler:	
  6946                           ;psect for function _TMR4_DefaultInterruptHandler
  6947                           
  6948  0B8B                     i1l701:	
  6949                           ;incstack = 0
  6950                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  6951                           
  6952  0B8B  0008               	return
  6953  0B8C                     __end_of_TMR4_DefaultInterruptHandler:
  6954                           
  6955                           	psect	text38
  6956  078C                     __ptext38:	
  6957 ;; *************** function _controleMovimento *****************
  6958 ;; Defined at:
  6959 ;;		line 194 in file "main.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6973 ;;      Params:         0       0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0
  6975 ;;      Temps:          2       0       0       0       0       0
  6976 ;;      Totals:         2       0       0       0       0       0
  6977 ;;Total ram usage:        2 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; Hardware stack levels required when called: 1
  6980 ;; This function calls:
  6981 ;;		_PWM3_LoadDutyValue
  6982 ;;		_TMR4_StopTimer
  6983 ;; This function is called by:
  6984 ;;		_main
  6985 ;;		_TMR4_CallBack
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989  078C                     _controleMovimento:	
  6990                           ;psect for function _controleMovimento
  6991                           
  6992  078C                     i1l3169:	
  6993                           ;incstack = 0
  6994                           ; Regs used in _controleMovimento: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6995                           
  6996                           
  6997                           ;main.c: 195:     static uint8_t cont = 0;;main.c: 196:     switch(mov){
  6998  078C  2FC0               	goto	i1l3197
  6999  078D                     i1l3171:
  7000                           
  7001                           ;main.c: 198:             PWM3_LoadDutyValue(0);
  7002  078D  3000               	movlw	0
  7003  078E  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7004  078F  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7005  0790  318D  251E  3187   	fcall	_PWM3_LoadDutyValue
  7006  0793                     i1l3173:
  7007                           
  7008                           ;main.c: 199:             cont = 0;
  7009  0793  0020               	movlb	0	; select bank0
  7010  0794  01D6               	clrf	controleMovimento@cont
  7011                           
  7012                           ;main.c: 200:             break;
  7013  0795  2FD7               	goto	i1l3199
  7014  0796                     i1l3175:
  7015                           
  7016                           ;main.c: 202:             if (cont >=4){
  7017  0796  3004               	movlw	4
  7018  0797  0020               	movlb	0	; select bank0
  7019  0798  0256               	subwf	controleMovimento@cont,w
  7020  0799  1C03               	skipc
  7021  079A  2F9C               	goto	u203_21
  7022  079B  2F9D               	goto	u203_20
  7023  079C                     u203_21:
  7024  079C  2FA3               	goto	i1l3181
  7025  079D                     u203_20:
  7026  079D                     i1l3177:
  7027                           
  7028                           ;main.c: 204:                 mov = RetornaS0;
  7029  079D  3003               	movlw	3
  7030  079E  00F4               	movwf	??_controleMovimento
  7031  079F  0874               	movf	??_controleMovimento,w
  7032  07A0  0021               	movlb	1	; select bank1
  7033  07A1  00CA               	movwf	_mov^(0+128)
  7034  07A2  2F93               	goto	i1l3173
  7035  07A3                     i1l3181:
  7036                           
  7037                           ;main.c: 207:                 cont++;
  7038  07A3  3001               	movlw	1
  7039  07A4  00F4               	movwf	??_controleMovimento
  7040  07A5  0874               	movf	??_controleMovimento,w
  7041  07A6  07D6               	addwf	controleMovimento@cont,f
  7042  07A7  2FD7               	goto	i1l3199
  7043  07A8                     i1l3183:
  7044                           
  7045                           ;main.c: 211:             PWM3_LoadDutyValue(300);
  7046  07A8  302C               	movlw	44
  7047  07A9  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7048  07AA  3001               	movlw	1
  7049  07AB  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7050  07AC  318D  251E  3187   	fcall	_PWM3_LoadDutyValue
  7051  07AF                     i1l3185:
  7052                           
  7053                           ;main.c: 212:             TMR4_StopTimer();
  7054  07AF  318B  238F  3187   	fcall	_TMR4_StopTimer
  7055  07B2  2F93               	goto	i1l3173
  7056  07B3                     i1l3189:
  7057                           
  7058                           ;main.c: 216:             PWM3_LoadDutyValue(300);
  7059  07B3  302C               	movlw	44
  7060  07B4  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  7061  07B5  3001               	movlw	1
  7062  07B6  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  7063  07B7  318D  251E  3187   	fcall	_PWM3_LoadDutyValue
  7064  07BA                     i1l3191:
  7065                           
  7066                           ;main.c: 217:             cont = 0;
  7067  07BA  0020               	movlb	0	; select bank0
  7068  07BB  01D6               	clrf	controleMovimento@cont
  7069  07BC                     i1l3193:
  7070                           
  7071                           ;main.c: 218:             TMR4_StopTimer();
  7072  07BC  318B  238F  3187   	fcall	_TMR4_StopTimer
  7073                           
  7074                           ;main.c: 219:             break;
  7075  07BF  2FD7               	goto	i1l3199
  7076  07C0                     i1l3197:
  7077  07C0  0021               	movlb	1	; select bank1
  7078  07C1  084A               	movf	_mov^(0+128),w
  7079  07C2  00F4               	movwf	??_controleMovimento
  7080  07C3  01F5               	clrf	??_controleMovimento+1
  7081                           
  7082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7083                           ; Switch size 1, requested type "simple"
  7084                           ; Number of cases is 1, Range of values is 0 to 0
  7085                           ; switch strategies available:
  7086                           ; Name         Instructions Cycles
  7087                           ; simple_byte            4     3 (average)
  7088                           ; direct_byte            8     6 (fixed)
  7089                           ; jumptable            260     6 (fixed)
  7090                           ;	Chosen strategy is simple_byte
  7091  07C4  0875               	movf	??_controleMovimento+1,w
  7092  07C5  3A00               	xorlw	0	; case 0
  7093  07C6  1903               	skipnz
  7094  07C7  2FC9               	goto	i1l4363
  7095  07C8  2FD7               	goto	i1l3199
  7096  07C9                     i1l4363:
  7097                           
  7098                           ; Switch size 1, requested type "simple"
  7099                           ; Number of cases is 4, Range of values is 0 to 3
  7100                           ; switch strategies available:
  7101                           ; Name         Instructions Cycles
  7102                           ; simple_byte           13     7 (average)
  7103                           ; direct_byte           14     6 (fixed)
  7104                           ; jumptable            260     6 (fixed)
  7105                           ;	Chosen strategy is simple_byte
  7106  07C9  0874               	movf	??_controleMovimento,w
  7107  07CA  3A00               	xorlw	0	; case 0
  7108  07CB  1903               	skipnz
  7109  07CC  2F8D               	goto	i1l3171
  7110  07CD  3A01               	xorlw	1	; case 1
  7111  07CE  1903               	skipnz
  7112  07CF  2F96               	goto	i1l3175
  7113  07D0  3A03               	xorlw	3	; case 2
  7114  07D1  1903               	skipnz
  7115  07D2  2FA8               	goto	i1l3183
  7116  07D3  3A01               	xorlw	1	; case 3
  7117  07D4  1903               	skipnz
  7118  07D5  2FB3               	goto	i1l3189
  7119  07D6  2FD7               	goto	i1l3199
  7120  07D7                     i1l3199:
  7121                           
  7122                           ;main.c: 222:     if(destinoSub != 0 && mov != RetornaS0 ){
  7123  07D7  0021               	movlb	1	; select bank1
  7124  07D8  083C               	movf	_destinoSub^(0+128),w
  7125  07D9  1903               	btfsc	3,2
  7126  07DA  2FDC               	goto	u204_21
  7127  07DB  2FDD               	goto	u204_20
  7128  07DC                     u204_21:
  7129  07DC  2FE9               	goto	i1l3205
  7130  07DD                     u204_20:
  7131  07DD                     i1l3201:
  7132  07DD  3003               	movlw	3
  7133  07DE  064A               	xorwf	_mov^(0+128),w
  7134  07DF  1903               	btfsc	3,2
  7135  07E0  2FE2               	goto	u205_21
  7136  07E1  2FE3               	goto	u205_20
  7137  07E2                     u205_21:
  7138  07E2  2FE9               	goto	i1l3205
  7139  07E3                     u205_20:
  7140  07E3                     i1l3203:
  7141                           
  7142                           ;main.c: 224:         subindo = 1;
  7143  07E3  0020               	movlb	0	; select bank0
  7144  07E4  01EB               	clrf	_subindo
  7145  07E5  0AEB               	incf	_subindo,f
  7146  07E6                     i1l853:	
  7147                           ;main.c: 225:         do { LATAbits.LATA7 = 1; } while(0);
  7148                           
  7149  07E6  0022               	movlb	2	; select bank2
  7150  07E7  178C               	bsf	12,7	;volatile
  7151  07E8  2FED               	goto	i1l858
  7152  07E9                     i1l3205:
  7153                           
  7154                           ;main.c: 228:         subindo = 0;
  7155  07E9  0020               	movlb	0	; select bank0
  7156  07EA  01EB               	clrf	_subindo
  7157  07EB                     i1l3207:
  7158  07EB  0022               	movlb	2	; select bank2
  7159  07EC  138C               	bcf	12,7	;volatile
  7160  07ED                     i1l858:
  7161  07ED  0008               	return
  7162  07EE                     __end_of_controleMovimento:
  7163                           
  7164                           	psect	text39
  7165  0B8F                     __ptext39:	
  7166 ;; *************** function _TMR4_StopTimer *****************
  7167 ;; Defined at:
  7168 ;;		line 93 in file "mcc_generated_files/tmr4.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;		None
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;		None
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  1    wreg      void 
  7175 ;; Registers used:
  7176 ;;		None
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7182 ;;      Params:         0       0       0       0       0       0
  7183 ;;      Locals:         0       0       0       0       0       0
  7184 ;;      Temps:          0       0       0       0       0       0
  7185 ;;      Totals:         0       0       0       0       0       0
  7186 ;;Total ram usage:        0 bytes
  7187 ;; Hardware stack levels used: 1
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_controleMovimento
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195  0B8F                     _TMR4_StopTimer:	
  7196                           ;psect for function _TMR4_StopTimer
  7197                           
  7198  0B8F                     i1l2861:	
  7199                           ;incstack = 0
  7200                           ; Regs used in _TMR4_StopTimer: []
  7201                           
  7202                           
  7203                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
  7204  0B8F  0028               	movlb	8	; select bank8
  7205  0B90  1117               	bcf	23,2	;volatile
  7206  0B91                     i1l676:
  7207  0B91  0008               	return
  7208  0B92                     __end_of_TMR4_StopTimer:
  7209                           
  7210                           	psect	text40
  7211  0D35                     __ptext40:	
  7212 ;; *************** function _TMR0_ISR *****************
  7213 ;; Defined at:
  7214 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7228 ;;      Params:         0       0       0       0       0       0
  7229 ;;      Locals:         0       0       0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0
  7231 ;;      Totals:         0       0       0       0       0       0
  7232 ;;Total ram usage:        0 bytes
  7233 ;; Hardware stack levels used: 1
  7234 ;; Hardware stack levels required when called: 4
  7235 ;; This function calls:
  7236 ;;		_TMR0_CallBack
  7237 ;; This function is called by:
  7238 ;;		_INTERRUPT_InterruptManager
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242  0D35                     _TMR0_ISR:	
  7243                           ;psect for function _TMR0_ISR
  7244                           
  7245  0D35                     i1l3587:	
  7246                           ;incstack = 0
  7247                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7248                           
  7249                           
  7250                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  7251  0D35  110B               	bcf	11,2	;volatile
  7252  0D36                     i1l3589:
  7253                           
  7254                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  7255  0D36  0020               	movlb	0	; select bank0
  7256  0D37  086A               	movf	_timer0ReloadVal,w	;volatile
  7257  0D38  0095               	movwf	21	;volatile
  7258                           
  7259                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 5)
  7260  0D39  3001               	movlw	1
  7261  0D3A  07CC               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  7262  0D3B  3000               	movlw	0
  7263  0D3C  3DCD               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  7264  0D3D  3000               	movlw	0
  7265  0D3E  024D               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  7266  0D3F  3005               	movlw	5
  7267  0D40  1903               	skipnz
  7268  0D41  024C               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  7269  0D42  1C03               	skipc
  7270  0D43  2D45               	goto	u236_21
  7271  0D44  2D46               	goto	u236_20
  7272  0D45                     u236_21:
  7273  0D45  2D4C               	goto	i1l611
  7274  0D46                     u236_20:
  7275  0D46                     i1l3591:
  7276                           
  7277                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  7278  0D46  318C  2448  318D   	fcall	_TMR0_CallBack
  7279  0D49                     i1l3593:
  7280                           
  7281                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  7282  0D49  0020               	movlb	0	; select bank0
  7283  0D4A  01CC               	clrf	TMR0_ISR@CountCallBack	;volatile
  7284  0D4B  01CD               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  7285  0D4C                     i1l611:
  7286  0D4C  0008               	return
  7287  0D4D                     __end_of_TMR0_ISR:
  7288                           
  7289                           	psect	text41
  7290  0C48                     __ptext41:	
  7291 ;; *************** function _TMR0_CallBack *****************
  7292 ;; Defined at:
  7293 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;		None
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7307 ;;      Params:         0       0       0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0
  7310 ;;      Totals:         0       0       0       0       0       0
  7311 ;;Total ram usage:        0 bytes
  7312 ;; Hardware stack levels used: 1
  7313 ;; Hardware stack levels required when called: 3
  7314 ;; This function calls:
  7315 ;;		Absolute function
  7316 ;;		_TMR0_DefaultInterruptHandler
  7317 ;;		_sendInfo
  7318 ;; This function is called by:
  7319 ;;		_TMR0_ISR
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323  0C48                     _TMR0_CallBack:	
  7324                           ;psect for function _TMR0_CallBack
  7325                           
  7326  0C48                     i1l3525:	
  7327                           ;incstack = 0
  7328                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7329                           
  7330                           
  7331                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  7332  0C48  0020               	movlb	0	; select bank0
  7333  0C49  0862               	movf	_TMR0_InterruptHandler,w
  7334  0C4A  0463               	iorwf	_TMR0_InterruptHandler+1,w
  7335  0C4B  1903               	btfsc	3,2
  7336  0C4C  2C4E               	goto	u229_21
  7337  0C4D  2C4F               	goto	u229_20
  7338  0C4E                     u229_21:
  7339  0C4E  2C54               	goto	i1l615
  7340  0C4F                     u229_20:
  7341  0C4F                     i1l3527:
  7342                           
  7343                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  7344  0C4F  0863               	movf	_TMR0_InterruptHandler+1,w
  7345  0C50  008A               	movwf	10
  7346  0C51  0862               	movf	_TMR0_InterruptHandler,w
  7347  0C52  000A               	callw
  7348  0C53  318C               	pagesel	$
  7349  0C54                     i1l615:
  7350  0C54  0008               	return
  7351  0C55                     __end_of_TMR0_CallBack:
  7352                           
  7353                           	psect	text42
  7354  0B8A                     __ptext42:	
  7355 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7356 ;; Defined at:
  7357 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;		None
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		None
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7371 ;;      Params:         0       0       0       0       0       0
  7372 ;;      Locals:         0       0       0       0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0
  7374 ;;      Totals:         0       0       0       0       0       0
  7375 ;;Total ram usage:        0 bytes
  7376 ;; Hardware stack levels used: 1
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_TMR0_Initialize
  7381 ;;		_TMR0_CallBack
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385  0B8A                     _TMR0_DefaultInterruptHandler:	
  7386                           ;psect for function _TMR0_DefaultInterruptHandler
  7387                           
  7388  0B8A                     i1l621:	
  7389                           ;incstack = 0
  7390                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7391                           
  7392  0B8A  0008               	return
  7393  0B8B                     __end_of_TMR0_DefaultInterruptHandler:
  7394                           
  7395                           	psect	text43
  7396  02CC                     __ptext43:	
  7397 ;; *************** function _sendInfo *****************
  7398 ;; Defined at:
  7399 ;;		line 84 in file "main.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;		None
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  bcd             2   36[BANK0 ] struct .
  7404 ;;  velocidade      2   34[BANK0 ] unsigned short 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7414 ;;      Params:         0       0       0       0       0       0
  7415 ;;      Locals:         0       4       0       0       0       0
  7416 ;;      Temps:          0       2       0       0       0       0
  7417 ;;      Totals:         0       6       0       0       0       0
  7418 ;;Total ram usage:        6 bytes
  7419 ;; Hardware stack levels used: 1
  7420 ;; Hardware stack levels required when called: 2
  7421 ;; This function calls:
  7422 ;;		_ADC_GetConversion
  7423 ;;		_EUSART_Write
  7424 ;;		___flmul
  7425 ;;		___fltol
  7426 ;;		___wmul
  7427 ;;		_bin2bcd
  7428 ;; This function is called by:
  7429 ;;		_main
  7430 ;;		_TMR0_CallBack
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434  02CC                     _sendInfo:	
  7435                           ;psect for function _sendInfo
  7436                           
  7437  02CC                     i1l3141:	
  7438                           ;incstack = 0
  7439                           ; Regs used in _sendInfo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7440                           
  7441                           
  7442                           ;main.c: 86:     bcd16_t bcd;;main.c: 87:     uint16_t velocidade;;main.c: 89:     veloc
      +                          idade = (uint16_t)(velocidadeMotor * 10);
  7443  02CC  0020               	movlb	0	; select bank0
  7444  02CD  0849               	movf	_velocidadeMotor+3,w
  7445  02CE  00A7               	movwf	___flmul@a+3
  7446  02CF  0848               	movf	_velocidadeMotor+2,w
  7447  02D0  00A6               	movwf	___flmul@a+2
  7448  02D1  0847               	movf	_velocidadeMotor+1,w
  7449  02D2  00A5               	movwf	___flmul@a+1
  7450  02D3  0846               	movf	_velocidadeMotor,w
  7451  02D4  00A4               	movwf	___flmul@a
  7452  02D5  3041               	movlw	65
  7453  02D6  00A3               	movwf	___flmul@b+3
  7454  02D7  3020               	movlw	32
  7455  02D8  00A2               	movwf	___flmul@b+2
  7456  02D9  3000               	movlw	0
  7457  02DA  00A1               	movwf	___flmul@b+1
  7458  02DB  3000               	movlw	0
  7459  02DC  00A0               	movwf	___flmul@b
  7460  02DD  3180  2075  3182   	fcall	___flmul
  7461  02E0  0020               	movlb	0	; select bank0
  7462  02E1  0823               	movf	?___flmul+3,w
  7463  02E2  00B8               	movwf	___fltol@f1+3
  7464  02E3  0822               	movf	?___flmul+2,w
  7465  02E4  00B7               	movwf	___fltol@f1+2
  7466  02E5  0821               	movf	?___flmul+1,w
  7467  02E6  00B6               	movwf	___fltol@f1+1
  7468  02E7  0820               	movf	?___flmul,w
  7469  02E8  00B5               	movwf	___fltol@f1
  7470  02E9  3187  2717  3182   	fcall	___fltol
  7471  02EC  0020               	movlb	0	; select bank0
  7472  02ED  0836               	movf	?___fltol+1,w
  7473  02EE  00C3               	movwf	sendInfo@velocidade+1
  7474  02EF  0835               	movf	?___fltol,w
  7475  02F0  00C2               	movwf	sendInfo@velocidade
  7476                           
  7477                           ;main.c: 90:     temperatura = (ADC_GetConversion(2) / 1024) * 999;
  7478  02F1  3002               	movlw	2
  7479  02F2  318D  2566  3182   	fcall	_ADC_GetConversion
  7480  02F5  0870               	movf	?_ADC_GetConversion,w
  7481  02F6  0020               	movlb	0	; select bank0
  7482  02F7  00C0               	movwf	??_sendInfo
  7483  02F8  0871               	movf	?_ADC_GetConversion+1,w
  7484  02F9  00C1               	movwf	??_sendInfo+1
  7485  02FA  300A               	movlw	10
  7486  02FB                     u202_25:
  7487  02FB  36C1               	lsrf	??_sendInfo+1,f
  7488  02FC  0CC0               	rrf	??_sendInfo,f
  7489  02FD  0B89               	decfsz	9,f
  7490  02FE  2AFB               	goto	u202_25
  7491  02FF  0840               	movf	??_sendInfo,w
  7492  0300  00F4               	movwf	___wmul@multiplier
  7493  0301  0841               	movf	??_sendInfo+1,w
  7494  0302  00F5               	movwf	___wmul@multiplier+1
  7495  0303  30E7               	movlw	231
  7496  0304  00F6               	movwf	___wmul@multiplicand
  7497  0305  3003               	movlw	3
  7498  0306  00F7               	movwf	___wmul@multiplicand+1
  7499  0307  318D  2580  3182   	fcall	___wmul
  7500  030A  0875               	movf	?___wmul+1,w
  7501  030B  0020               	movlb	0	; select bank0
  7502  030C  00D1               	movwf	_temperatura+1
  7503  030D  0874               	movf	?___wmul,w
  7504  030E  00D0               	movwf	_temperatura
  7505                           
  7506                           ;main.c: 92:     EUSART_Write('$');
  7507  030F  3024               	movlw	36
  7508  0310  318C  241B  3182   	fcall	_EUSART_Write
  7509                           
  7510                           ;main.c: 93:     EUSART_Write(0x30 + origem);
  7511  0313  0021               	movlb	1	; select bank1
  7512  0314  0843               	movf	_origem^(0+128),w
  7513  0315  3E30               	addlw	48
  7514  0316  318C  241B  3182   	fcall	_EUSART_Write
  7515                           
  7516                           ;main.c: 94:     EUSART_Write(0x2C);
  7517  0319  302C               	movlw	44
  7518  031A  318C  241B  3182   	fcall	_EUSART_Write
  7519                           
  7520                           ;main.c: 95:     EUSART_Write(0x30 + destino);
  7521  031D  0021               	movlb	1	; select bank1
  7522  031E  0842               	movf	_destino^(0+128),w
  7523  031F  3E30               	addlw	48
  7524  0320  318C  241B  3182   	fcall	_EUSART_Write
  7525                           
  7526                           ;main.c: 96:     EUSART_Write(0x2C);
  7527  0323  302C               	movlw	44
  7528  0324  318C  241B  3182   	fcall	_EUSART_Write
  7529                           
  7530                           ;main.c: 97:     EUSART_Write(0x30 + andarAtual);
  7531  0327  0020               	movlb	0	; select bank0
  7532  0328  0859               	movf	_andarAtual,w
  7533  0329  3E30               	addlw	48
  7534  032A  318C  241B  3182   	fcall	_EUSART_Write
  7535                           
  7536                           ;main.c: 98:     EUSART_Write(0x2C);
  7537  032D  302C               	movlw	44
  7538  032E  318C  241B  3182   	fcall	_EUSART_Write
  7539                           
  7540                           ;main.c: 99:     EUSART_Write(0);
  7541  0331  3000               	movlw	0
  7542  0332  318C  241B  3182   	fcall	_EUSART_Write
  7543                           
  7544                           ;main.c: 100:     EUSART_Write(0x2C);
  7545  0335  302C               	movlw	44
  7546  0336  318C  241B  3182   	fcall	_EUSART_Write
  7547  0339                     i1l3143:
  7548                           
  7549                           ;main.c: 102:     bcd.v = bin2bcd(altura);
  7550  0339  0020               	movlb	0	; select bank0
  7551  033A  0858               	movf	_altura,w
  7552  033B  00C0               	movwf	??_sendInfo
  7553  033C  01C1               	clrf	??_sendInfo+1
  7554  033D  0840               	movf	??_sendInfo,w
  7555  033E  00FA               	movwf	bin2bcd@binVal
  7556  033F  0841               	movf	??_sendInfo+1,w
  7557  0340  00FB               	movwf	bin2bcd@binVal+1
  7558  0341  3185  2508  3182   	fcall	_bin2bcd
  7559  0344  087B               	movf	?_bin2bcd+1,w
  7560  0345  0020               	movlb	0	; select bank0
  7561  0346  00C5               	movwf	sendInfo@bcd+1
  7562  0347  087A               	movf	?_bin2bcd,w
  7563  0348  00C4               	movwf	sendInfo@bcd
  7564  0349                     i1l3145:
  7565                           
  7566                           ;main.c: 103:     EUSART_Write(bcd.num2 + 0x30);
  7567  0349  0845               	movf	sendInfo@bcd+1,w
  7568  034A  390F               	andlw	15
  7569  034B  3E30               	addlw	48
  7570  034C  318C  241B  3182   	fcall	_EUSART_Write
  7571  034F                     i1l3147:
  7572                           
  7573                           ;main.c: 104:     EUSART_Write(bcd.num3 + 0x30);
  7574  034F  0020               	movlb	0	; select bank0
  7575  0350  0E44               	swapf	sendInfo@bcd,w
  7576  0351  390F               	andlw	15
  7577  0352  3E30               	addlw	48
  7578  0353  318C  241B  3182   	fcall	_EUSART_Write
  7579  0356                     i1l3149:
  7580                           
  7581                           ;main.c: 105:     EUSART_Write(bcd.num4 + 0x30);
  7582  0356  0020               	movlb	0	; select bank0
  7583  0357  0844               	movf	sendInfo@bcd,w
  7584  0358  390F               	andlw	15
  7585  0359  3E30               	addlw	48
  7586  035A  318C  241B  3182   	fcall	_EUSART_Write
  7587  035D                     i1l3151:
  7588                           
  7589                           ;main.c: 106:     EUSART_Write(0x2C);
  7590  035D  302C               	movlw	44
  7591  035E  318C  241B  3182   	fcall	_EUSART_Write
  7592  0361                     i1l3153:
  7593                           
  7594                           ;main.c: 108:     bcd.v = bin2bcd(velocidade);
  7595  0361  0020               	movlb	0	; select bank0
  7596  0362  0843               	movf	sendInfo@velocidade+1,w
  7597  0363  00FB               	movwf	bin2bcd@binVal+1
  7598  0364  0842               	movf	sendInfo@velocidade,w
  7599  0365  00FA               	movwf	bin2bcd@binVal
  7600  0366  3185  2508  3182   	fcall	_bin2bcd
  7601  0369  087B               	movf	?_bin2bcd+1,w
  7602  036A  0020               	movlb	0	; select bank0
  7603  036B  00C5               	movwf	sendInfo@bcd+1
  7604  036C  087A               	movf	?_bin2bcd,w
  7605  036D  00C4               	movwf	sendInfo@bcd
  7606                           
  7607                           ;main.c: 109:     EUSART_Write(bcd.num2 + 0x30);
  7608  036E  0845               	movf	sendInfo@bcd+1,w
  7609  036F  390F               	andlw	15
  7610  0370  3E30               	addlw	48
  7611  0371  318C  241B  3182   	fcall	_EUSART_Write
  7612                           
  7613                           ;main.c: 110:     EUSART_Write(bcd.num3 + 0x30);
  7614  0374  0020               	movlb	0	; select bank0
  7615  0375  0E44               	swapf	sendInfo@bcd,w
  7616  0376  390F               	andlw	15
  7617  0377  3E30               	addlw	48
  7618  0378  318C  241B  3182   	fcall	_EUSART_Write
  7619                           
  7620                           ;main.c: 111:     EUSART_Write(0x2E);
  7621  037B  302E               	movlw	46
  7622  037C  318C  241B  3182   	fcall	_EUSART_Write
  7623                           
  7624                           ;main.c: 112:     EUSART_Write(bcd.num4 + 0x30);
  7625  037F  0020               	movlb	0	; select bank0
  7626  0380  0844               	movf	sendInfo@bcd,w
  7627  0381  390F               	andlw	15
  7628  0382  3E30               	addlw	48
  7629  0383  318C  241B  3182   	fcall	_EUSART_Write
  7630                           
  7631                           ;main.c: 113:     EUSART_Write(0x2C);
  7632  0386  302C               	movlw	44
  7633  0387  318C  241B  3182   	fcall	_EUSART_Write
  7634  038A                     i1l3155:
  7635                           
  7636                           ;main.c: 115:     bcd.v = bin2bcd(temperatura);
  7637  038A  0020               	movlb	0	; select bank0
  7638  038B  0851               	movf	_temperatura+1,w
  7639  038C  00FB               	movwf	bin2bcd@binVal+1
  7640  038D  0850               	movf	_temperatura,w
  7641  038E  00FA               	movwf	bin2bcd@binVal
  7642  038F  3185  2508  3182   	fcall	_bin2bcd
  7643  0392  087B               	movf	?_bin2bcd+1,w
  7644  0393  0020               	movlb	0	; select bank0
  7645  0394  00C5               	movwf	sendInfo@bcd+1
  7646  0395  087A               	movf	?_bin2bcd,w
  7647  0396  00C4               	movwf	sendInfo@bcd
  7648  0397                     i1l3157:
  7649                           
  7650                           ;main.c: 116:     EUSART_Write(bcd.num1 + 0x30);
  7651  0397  0E45               	swapf	sendInfo@bcd+1,w
  7652  0398  390F               	andlw	15
  7653  0399  3E30               	addlw	48
  7654  039A  318C  241B  3182   	fcall	_EUSART_Write
  7655  039D                     i1l3159:
  7656                           
  7657                           ;main.c: 117:     EUSART_Write(bcd.num2 + 0x30);
  7658  039D  0020               	movlb	0	; select bank0
  7659  039E  0845               	movf	sendInfo@bcd+1,w
  7660  039F  390F               	andlw	15
  7661  03A0  3E30               	addlw	48
  7662  03A1  318C  241B  3182   	fcall	_EUSART_Write
  7663  03A4                     i1l3161:
  7664                           
  7665                           ;main.c: 118:     EUSART_Write(bcd.num3 + 0x30);
  7666  03A4  0020               	movlb	0	; select bank0
  7667  03A5  0E44               	swapf	sendInfo@bcd,w
  7668  03A6  390F               	andlw	15
  7669  03A7  3E30               	addlw	48
  7670  03A8  318C  241B  3182   	fcall	_EUSART_Write
  7671  03AB                     i1l3163:
  7672                           
  7673                           ;main.c: 119:     EUSART_Write(0x2E);
  7674  03AB  302E               	movlw	46
  7675  03AC  318C  241B  3182   	fcall	_EUSART_Write
  7676  03AF                     i1l3165:
  7677                           
  7678                           ;main.c: 120:     EUSART_Write(bcd.num4 + 0x30);
  7679  03AF  0020               	movlb	0	; select bank0
  7680  03B0  0844               	movf	sendInfo@bcd,w
  7681  03B1  390F               	andlw	15
  7682  03B2  3E30               	addlw	48
  7683  03B3  318C  241B  3182   	fcall	_EUSART_Write
  7684  03B6                     i1l3167:
  7685                           
  7686                           ;main.c: 121:     EUSART_Write(0x0D);
  7687  03B6  300D               	movlw	13
  7688  03B7  318C  241B  3182   	fcall	_EUSART_Write
  7689  03BA                     i1l805:
  7690  03BA  0008               	return
  7691  03BB                     __end_of_sendInfo:
  7692                           
  7693                           	psect	text44
  7694  0508                     __ptext44:	
  7695 ;; *************** function _bin2bcd *****************
  7696 ;; Defined at:
  7697 ;;		line 10 in file "bin2bcd.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  binVal          2   10[COMMON] unsigned short 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  i               1    4[BANK0 ] unsigned char 
  7702 ;;  dataU           4    5[BANK0 ] struct .
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  2   10[COMMON] unsigned short 
  7705 ;; Registers used:
  7706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7712 ;;      Params:         2       0       0       0       0       0
  7713 ;;      Locals:         0       5       0       0       0       0
  7714 ;;      Temps:          0       4       0       0       0       0
  7715 ;;      Totals:         2       9       0       0       0       0
  7716 ;;Total ram usage:       11 bytes
  7717 ;; Hardware stack levels used: 1
  7718 ;; Hardware stack levels required when called: 1
  7719 ;; This function calls:
  7720 ;;		_memset
  7721 ;; This function is called by:
  7722 ;;		_sendInfo
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726  0508                     _bin2bcd:	
  7727                           ;psect for function _bin2bcd
  7728                           
  7729  0508                     i1l2863:	
  7730                           ;incstack = 0
  7731                           ; Regs used in _bin2bcd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7732                           
  7733                           
  7734                           ;bin2bcd.c: 22:     }dataU;;bin2bcd.c: 23:     memset(&dataU,0,4);
  7735  0508  3000               	movlw	0
  7736  0509  00F0               	movwf	memset@c
  7737  050A  00F1               	movwf	memset@c+1
  7738  050B  3004               	movlw	4
  7739  050C  00F2               	movwf	memset@n
  7740  050D  3000               	movlw	0
  7741  050E  00F3               	movwf	memset@n+1
  7742  050F  3025               	movlw	(low (bin2bcd@dataU| 0))& (0+255)
  7743  0510  3184  2464  3185   	fcall	_memset
  7744  0513                     i1l2865:
  7745                           
  7746                           ;bin2bcd.c: 24:     dataU.shift = (uint32_t)binVal;
  7747  0513  087A               	movf	bin2bcd@binVal,w
  7748  0514  0020               	movlb	0	; select bank0
  7749  0515  00A5               	movwf	bin2bcd@dataU
  7750  0516  087B               	movf	bin2bcd@binVal+1,w
  7751  0517  00A6               	movwf	bin2bcd@dataU+1
  7752  0518  01A7               	clrf	bin2bcd@dataU+2
  7753  0519  01A8               	clrf	bin2bcd@dataU+3
  7754  051A                     i1l2867:
  7755                           
  7756                           ;bin2bcd.c: 25:     for(uint8_t i=0;i<12;i++){
  7757  051A  01A4               	clrf	bin2bcd@i
  7758  051B                     i1l2873:
  7759                           
  7760                           ;bin2bcd.c: 26:    if(dataU.dat.d0>=5){
  7761  051B  0828               	movf	bin2bcd@dataU+3,w
  7762  051C  390F               	andlw	15
  7763  051D  00A0               	movwf	??_bin2bcd
  7764  051E  3005               	movlw	5
  7765  051F  0220               	subwf	??_bin2bcd,w
  7766  0520  1C03               	skipc
  7767  0521  2D23               	goto	u152_21
  7768  0522  2D24               	goto	u152_20
  7769  0523                     u152_21:
  7770  0523  2D2D               	goto	i1l927
  7771  0524                     u152_20:
  7772  0524                     i1l2875:
  7773                           
  7774                           ;bin2bcd.c: 27:     dataU.dat.d0 = dataU.dat.d0 + 3;
  7775  0524  0828               	movf	bin2bcd@dataU+3,w
  7776  0525  390F               	andlw	15
  7777  0526  3E03               	addlw	3
  7778  0527  00A0               	movwf	??_bin2bcd
  7779  0528  0828               	movf	bin2bcd@dataU+3,w
  7780  0529  0620               	xorwf	??_bin2bcd,w
  7781  052A  39F0               	andlw	-16
  7782  052B  0620               	xorwf	??_bin2bcd,w
  7783  052C  00A8               	movwf	bin2bcd@dataU+3
  7784  052D                     i1l927:	
  7785                           ;bin2bcd.c: 28:    }
  7786                           
  7787                           
  7788                           ;bin2bcd.c: 29:    if(dataU.dat.d1>=5){
  7789  052D  0E27               	swapf	bin2bcd@dataU+2,w
  7790  052E  390F               	andlw	15
  7791  052F  00A0               	movwf	??_bin2bcd
  7792  0530  3005               	movlw	5
  7793  0531  0220               	subwf	??_bin2bcd,w
  7794  0532  1C03               	skipc
  7795  0533  2D35               	goto	u153_21
  7796  0534  2D36               	goto	u153_20
  7797  0535                     u153_21:
  7798  0535  2D40               	goto	i1l928
  7799  0536                     u153_20:
  7800  0536                     i1l2877:
  7801                           
  7802                           ;bin2bcd.c: 30:     dataU.dat.d1 = dataU.dat.d1 + 3;
  7803  0536  0E27               	swapf	bin2bcd@dataU+2,w
  7804  0537  390F               	andlw	15
  7805  0538  3E03               	addlw	3
  7806  0539  00A0               	movwf	??_bin2bcd
  7807  053A  0EA0               	swapf	??_bin2bcd,f
  7808  053B  0827               	movf	bin2bcd@dataU+2,w
  7809  053C  0620               	xorwf	??_bin2bcd,w
  7810  053D  390F               	andlw	-241
  7811  053E  0620               	xorwf	??_bin2bcd,w
  7812  053F  00A7               	movwf	bin2bcd@dataU+2
  7813  0540                     i1l928:	
  7814                           ;bin2bcd.c: 31:    }
  7815                           
  7816                           
  7817                           ;bin2bcd.c: 32:             if(dataU.dat.d2>=5){
  7818  0540  0827               	movf	bin2bcd@dataU+2,w
  7819  0541  390F               	andlw	15
  7820  0542  00A0               	movwf	??_bin2bcd
  7821  0543  3005               	movlw	5
  7822  0544  0220               	subwf	??_bin2bcd,w
  7823  0545  1C03               	skipc
  7824  0546  2D48               	goto	u154_21
  7825  0547  2D49               	goto	u154_20
  7826  0548                     u154_21:
  7827  0548  2D52               	goto	i1l929
  7828  0549                     u154_20:
  7829  0549                     i1l2879:
  7830                           
  7831                           ;bin2bcd.c: 33:     dataU.dat.d2 = dataU.dat.d2 + 3;
  7832  0549  0827               	movf	bin2bcd@dataU+2,w
  7833  054A  390F               	andlw	15
  7834  054B  3E03               	addlw	3
  7835  054C  00A0               	movwf	??_bin2bcd
  7836  054D  0827               	movf	bin2bcd@dataU+2,w
  7837  054E  0620               	xorwf	??_bin2bcd,w
  7838  054F  39F0               	andlw	-16
  7839  0550  0620               	xorwf	??_bin2bcd,w
  7840  0551  00A7               	movwf	bin2bcd@dataU+2
  7841  0552                     i1l929:	
  7842                           ;bin2bcd.c: 34:    }
  7843                           
  7844                           
  7845                           ;bin2bcd.c: 35:             if(dataU.dat.d3>=5){
  7846  0552  0E26               	swapf	bin2bcd@dataU+1,w
  7847  0553  390F               	andlw	15
  7848  0554  00A0               	movwf	??_bin2bcd
  7849  0555  3005               	movlw	5
  7850  0556  0220               	subwf	??_bin2bcd,w
  7851  0557  1C03               	skipc
  7852  0558  2D5A               	goto	u155_21
  7853  0559  2D5B               	goto	u155_20
  7854  055A                     u155_21:
  7855  055A  2D65               	goto	i1l930
  7856  055B                     u155_20:
  7857  055B                     i1l2881:
  7858                           
  7859                           ;bin2bcd.c: 36:     dataU.dat.d3 = dataU.dat.d3 + 3;
  7860  055B  0E26               	swapf	bin2bcd@dataU+1,w
  7861  055C  390F               	andlw	15
  7862  055D  3E03               	addlw	3
  7863  055E  00A0               	movwf	??_bin2bcd
  7864  055F  0EA0               	swapf	??_bin2bcd,f
  7865  0560  0826               	movf	bin2bcd@dataU+1,w
  7866  0561  0620               	xorwf	??_bin2bcd,w
  7867  0562  390F               	andlw	-241
  7868  0563  0620               	xorwf	??_bin2bcd,w
  7869  0564  00A6               	movwf	bin2bcd@dataU+1
  7870  0565                     i1l930:	
  7871                           ;bin2bcd.c: 37:    }
  7872                           
  7873                           
  7874                           ;bin2bcd.c: 38:    dataU.shift = dataU.shift<<1;
  7875  0565  0825               	movf	bin2bcd@dataU,w
  7876  0566  00A0               	movwf	??_bin2bcd
  7877  0567  0826               	movf	bin2bcd@dataU+1,w
  7878  0568  00A1               	movwf	??_bin2bcd+1
  7879  0569  0827               	movf	bin2bcd@dataU+2,w
  7880  056A  00A2               	movwf	??_bin2bcd+2
  7881  056B  0828               	movf	bin2bcd@dataU+3,w
  7882  056C  00A3               	movwf	??_bin2bcd+3
  7883  056D  3001               	movlw	1
  7884  056E                     u156_25:
  7885  056E  35A0               	lslf	??_bin2bcd,f
  7886  056F  0DA1               	rlf	??_bin2bcd+1,f
  7887  0570  0DA2               	rlf	??_bin2bcd+2,f
  7888  0571  0DA3               	rlf	??_bin2bcd+3,f
  7889  0572                     u156_20:
  7890  0572  0B89               	decfsz	9,f
  7891  0573  2D6E               	goto	u156_25
  7892  0574  0823               	movf	??_bin2bcd+3,w
  7893  0575  00A8               	movwf	bin2bcd@dataU+3
  7894  0576  0822               	movf	??_bin2bcd+2,w
  7895  0577  00A7               	movwf	bin2bcd@dataU+2
  7896  0578  0821               	movf	??_bin2bcd+1,w
  7897  0579  00A6               	movwf	bin2bcd@dataU+1
  7898  057A  0820               	movf	??_bin2bcd,w
  7899  057B  00A5               	movwf	bin2bcd@dataU
  7900                           
  7901                           ;bin2bcd.c: 39:     }
  7902  057C  3001               	movlw	1
  7903  057D  00A0               	movwf	??_bin2bcd
  7904  057E  0820               	movf	??_bin2bcd,w
  7905  057F  07A4               	addwf	bin2bcd@i,f
  7906  0580                     i1l2883:
  7907  0580  300C               	movlw	12
  7908  0581  0224               	subwf	bin2bcd@i,w
  7909  0582  1C03               	skipc
  7910  0583  2D85               	goto	u157_21
  7911  0584  2D86               	goto	u157_20
  7912  0585                     u157_21:
  7913  0585  2D1B               	goto	i1l2873
  7914  0586                     u157_20:
  7915  0586                     i1l2885:
  7916                           
  7917                           ;bin2bcd.c: 40:     return (uint16_t)(dataU.shift>>12);
  7918  0586  0825               	movf	bin2bcd@dataU,w
  7919  0587  00A0               	movwf	??_bin2bcd
  7920  0588  0826               	movf	bin2bcd@dataU+1,w
  7921  0589  00A1               	movwf	??_bin2bcd+1
  7922  058A  0827               	movf	bin2bcd@dataU+2,w
  7923  058B  00A2               	movwf	??_bin2bcd+2
  7924  058C  0828               	movf	bin2bcd@dataU+3,w
  7925  058D  00A3               	movwf	??_bin2bcd+3
  7926  058E  300C               	movlw	12
  7927  058F                     u158_25:
  7928  058F  36A3               	lsrf	??_bin2bcd+3,f
  7929  0590  0CA2               	rrf	??_bin2bcd+2,f
  7930  0591  0CA1               	rrf	??_bin2bcd+1,f
  7931  0592  0CA0               	rrf	??_bin2bcd,f
  7932  0593                     u158_20:
  7933  0593  0B89               	decfsz	9,f
  7934  0594  2D8F               	goto	u158_25
  7935  0595  0821               	movf	??_bin2bcd+1,w
  7936  0596  00FB               	movwf	?_bin2bcd+1
  7937  0597  0820               	movf	??_bin2bcd,w
  7938  0598  00FA               	movwf	?_bin2bcd
  7939  0599                     i1l931:
  7940  0599  0008               	return
  7941  059A                     __end_of_bin2bcd:
  7942                           
  7943                           	psect	text45
  7944  0464                     __ptext45:	
  7945 ;; *************** function _memset *****************
  7946 ;; Defined at:
  7947 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  dest            1    wreg     PTR void 
  7950 ;;		 -> bin2bcd@dataU(4), 
  7951 ;;  c               2    0[COMMON] int 
  7952 ;;  n               2    2[COMMON] unsigned int 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  dest            1    8[COMMON] PTR void 
  7955 ;;		 -> bin2bcd@dataU(4), 
  7956 ;;  k               2    6[COMMON] unsigned int 
  7957 ;;  s               1    9[COMMON] PTR unsigned char 
  7958 ;;		 -> bin2bcd@dataU(4), 
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      PTR void 
  7961 ;; Registers used:
  7962 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7968 ;;      Params:         4       0       0       0       0       0
  7969 ;;      Locals:         4       0       0       0       0       0
  7970 ;;      Temps:          2       0       0       0       0       0
  7971 ;;      Totals:        10       0       0       0       0       0
  7972 ;;Total ram usage:       10 bytes
  7973 ;; Hardware stack levels used: 1
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_bin2bcd
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981  0464                     _memset:	
  7982                           ;psect for function _memset
  7983                           
  7984                           
  7985                           ;incstack = 0
  7986                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7987                           ;memset@dest stored from wreg
  7988  0464  00F8               	movwf	memset@dest
  7989  0465                     i1l2777:
  7990  0465  0878               	movf	memset@dest,w
  7991  0466  00F4               	movwf	??_memset
  7992  0467  0874               	movf	??_memset,w
  7993  0468  00F9               	movwf	memset@s
  7994  0469                     i1l2779:
  7995  0469  0872               	movf	memset@n,w
  7996  046A  0473               	iorwf	memset@n+1,w
  7997  046B  1D03               	btfss	3,2
  7998  046C  2C6E               	goto	u141_21
  7999  046D  2C6F               	goto	u141_20
  8000  046E                     u141_21:
  8001  046E  2C70               	goto	i1l2783
  8002  046F                     u141_20:
  8003  046F  2D07               	goto	i1l1541
  8004  0470                     i1l2783:
  8005  0470  0870               	movf	memset@c,w
  8006  0471  00F4               	movwf	??_memset
  8007  0472  0879               	movf	memset@s,w
  8008  0473  0086               	movwf	6
  8009  0474  0187               	clrf	7
  8010  0475  0874               	movf	??_memset,w
  8011  0476  0081               	movwf	1
  8012  0477                     i1l2785:
  8013  0477  0870               	movf	memset@c,w
  8014  0478  00F4               	movwf	??_memset
  8015  0479  0872               	movf	memset@n,w
  8016  047A  0779               	addwf	memset@s,w
  8017  047B  00F5               	movwf	??_memset+1
  8018  047C  0875               	movf	??_memset+1,w
  8019  047D  3EFF               	addlw	255
  8020  047E  0086               	movwf	6
  8021  047F  0187               	clrf	7
  8022  0480  0874               	movf	??_memset,w
  8023  0481  0081               	movwf	1
  8024  0482                     i1l2787:
  8025  0482  3000               	movlw	0
  8026  0483  0273               	subwf	memset@n+1,w
  8027  0484  3003               	movlw	3
  8028  0485  1903               	skipnz
  8029  0486  0272               	subwf	memset@n,w
  8030  0487  1803               	skipnc
  8031  0488  2C8A               	goto	u142_21
  8032  0489  2C8B               	goto	u142_20
  8033  048A                     u142_21:
  8034  048A  2C8C               	goto	i1l2791
  8035  048B                     u142_20:
  8036  048B  2D07               	goto	i1l1541
  8037  048C                     i1l2791:
  8038  048C  0870               	movf	memset@c,w
  8039  048D  00F4               	movwf	??_memset
  8040  048E  0A79               	incf	memset@s,w
  8041  048F  0086               	movwf	6
  8042  0490  0187               	clrf	7
  8043  0491  0874               	movf	??_memset,w
  8044  0492  0081               	movwf	1
  8045  0493                     i1l2793:
  8046  0493  0870               	movf	memset@c,w
  8047  0494  00F4               	movwf	??_memset
  8048  0495  0879               	movf	memset@s,w
  8049  0496  3E02               	addlw	2
  8050  0497  0086               	movwf	6
  8051  0498  0187               	clrf	7
  8052  0499  0874               	movf	??_memset,w
  8053  049A  0081               	movwf	1
  8054  049B                     i1l2795:
  8055  049B  0870               	movf	memset@c,w
  8056  049C  00F4               	movwf	??_memset
  8057  049D  0872               	movf	memset@n,w
  8058  049E  0779               	addwf	memset@s,w
  8059  049F  00F5               	movwf	??_memset+1
  8060  04A0  0875               	movf	??_memset+1,w
  8061  04A1  3EFE               	addlw	254
  8062  04A2  0086               	movwf	6
  8063  04A3  0187               	clrf	7
  8064  04A4  0874               	movf	??_memset,w
  8065  04A5  0081               	movwf	1
  8066  04A6                     i1l2797:
  8067  04A6  0870               	movf	memset@c,w
  8068  04A7  00F4               	movwf	??_memset
  8069  04A8  0872               	movf	memset@n,w
  8070  04A9  0779               	addwf	memset@s,w
  8071  04AA  00F5               	movwf	??_memset+1
  8072  04AB  0875               	movf	??_memset+1,w
  8073  04AC  3EFD               	addlw	253
  8074  04AD  0086               	movwf	6
  8075  04AE  0187               	clrf	7
  8076  04AF  0874               	movf	??_memset,w
  8077  04B0  0081               	movwf	1
  8078  04B1                     i1l2799:
  8079  04B1  3000               	movlw	0
  8080  04B2  0273               	subwf	memset@n+1,w
  8081  04B3  3007               	movlw	7
  8082  04B4  1903               	skipnz
  8083  04B5  0272               	subwf	memset@n,w
  8084  04B6  1803               	skipnc
  8085  04B7  2CB9               	goto	u143_21
  8086  04B8  2CBA               	goto	u143_20
  8087  04B9                     u143_21:
  8088  04B9  2CBB               	goto	i1l2803
  8089  04BA                     u143_20:
  8090  04BA  2D07               	goto	i1l1541
  8091  04BB                     i1l2803:
  8092  04BB  0870               	movf	memset@c,w
  8093  04BC  00F4               	movwf	??_memset
  8094  04BD  0879               	movf	memset@s,w
  8095  04BE  3E03               	addlw	3
  8096  04BF  0086               	movwf	6
  8097  04C0  0187               	clrf	7
  8098  04C1  0874               	movf	??_memset,w
  8099  04C2  0081               	movwf	1
  8100  04C3  0870               	movf	memset@c,w
  8101  04C4  00F4               	movwf	??_memset
  8102  04C5  0872               	movf	memset@n,w
  8103  04C6  0779               	addwf	memset@s,w
  8104  04C7  00F5               	movwf	??_memset+1
  8105  04C8  0875               	movf	??_memset+1,w
  8106  04C9  3EFC               	addlw	252
  8107  04CA  0086               	movwf	6
  8108  04CB  0187               	clrf	7
  8109  04CC  0874               	movf	??_memset,w
  8110  04CD  0081               	movwf	1
  8111  04CE                     i1l2805:
  8112  04CE  3000               	movlw	0
  8113  04CF  0273               	subwf	memset@n+1,w
  8114  04D0  3009               	movlw	9
  8115  04D1  1903               	skipnz
  8116  04D2  0272               	subwf	memset@n,w
  8117  04D3  1803               	skipnc
  8118  04D4  2CD6               	goto	u144_21
  8119  04D5  2CD7               	goto	u144_20
  8120  04D6                     u144_21:
  8121  04D6  2CD8               	goto	i1l2809
  8122  04D7                     u144_20:
  8123  04D7  2D07               	goto	i1l1541
  8124  04D8                     i1l2809:
  8125  04D8  0979               	comf	memset@s,w
  8126  04D9  00F4               	movwf	??_memset
  8127  04DA  097A               	comf	memset@s+1,w
  8128  04DB  00F5               	movwf	??_memset+1
  8129  04DC  0AF4               	incf	??_memset,f
  8130  04DD  1903               	skipnz
  8131  04DE  0AF5               	incf	??_memset+1,f
  8132  04DF  3003               	movlw	3
  8133  04E0  0574               	andwf	??_memset,w
  8134  04E1  00F6               	movwf	memset@k
  8135  04E2  3000               	movlw	0
  8136  04E3  0575               	andwf	??_memset+1,w
  8137  04E4  00F7               	movwf	memset@k+1
  8138  04E5  0876               	movf	memset@k,w
  8139  04E6  00F4               	movwf	??_memset
  8140  04E7  0874               	movf	??_memset,w
  8141  04E8  07F9               	addwf	memset@s,f
  8142  04E9                     i1l2811:
  8143  04E9  0876               	movf	memset@k,w
  8144  04EA  02F2               	subwf	memset@n,f
  8145  04EB  0877               	movf	memset@k+1,w
  8146  04EC  3BF3               	subwfb	memset@n+1,f
  8147  04ED                     i1l2813:
  8148  04ED  30FC               	movlw	252
  8149  04EE  05F2               	andwf	memset@n,f
  8150  04EF  30FF               	movlw	255
  8151  04F0  05F3               	andwf	memset@n+1,f
  8152  04F1  2D01               	goto	i1l2821
  8153  04F2                     i1l2815:
  8154  04F2  0870               	movf	memset@c,w
  8155  04F3  00F4               	movwf	??_memset
  8156  04F4  0879               	movf	memset@s,w
  8157  04F5  0086               	movwf	6
  8158  04F6  0187               	clrf	7
  8159  04F7  0874               	movf	??_memset,w
  8160  04F8  0081               	movwf	1
  8161  04F9                     i1l2817:
  8162  04F9  3001               	movlw	1
  8163  04FA  02F2               	subwf	memset@n,f
  8164  04FB  3000               	movlw	0
  8165  04FC  3BF3               	subwfb	memset@n+1,f
  8166  04FD                     i1l2819:
  8167  04FD  3001               	movlw	1
  8168  04FE  00F4               	movwf	??_memset
  8169  04FF  0874               	movf	??_memset,w
  8170  0500  07F9               	addwf	memset@s,f
  8171  0501                     i1l2821:
  8172  0501  0872               	movf	memset@n,w
  8173  0502  0473               	iorwf	memset@n+1,w
  8174  0503  1D03               	btfss	3,2
  8175  0504  2D06               	goto	u145_21
  8176  0505  2D07               	goto	u145_20
  8177  0506                     u145_21:
  8178  0506  2CF2               	goto	i1l2815
  8179  0507                     u145_20:
  8180  0507                     i1l1541:
  8181  0507  0008               	return
  8182  0508                     __end_of_memset:
  8183                           
  8184                           	psect	text46
  8185  0D80                     __ptext46:	
  8186 ;; *************** function ___wmul *****************
  8187 ;; Defined at:
  8188 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  multiplier      2    4[COMMON] unsigned int 
  8191 ;;  multiplicand    2    6[COMMON] unsigned int 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;  product         2    8[COMMON] unsigned int 
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  2    4[COMMON] unsigned int 
  8196 ;; Registers used:
  8197 ;;		wreg, status,2, status,0
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8203 ;;      Params:         4       0       0       0       0       0
  8204 ;;      Locals:         2       0       0       0       0       0
  8205 ;;      Temps:          0       0       0       0       0       0
  8206 ;;      Totals:         6       0       0       0       0       0
  8207 ;;Total ram usage:        6 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; This function calls:
  8210 ;;		Nothing
  8211 ;; This function is called by:
  8212 ;;		_sendInfo
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216  0D80                     ___wmul:	
  8217                           ;psect for function ___wmul
  8218                           
  8219  0D80                     i1l2923:	
  8220                           ;incstack = 0
  8221                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8222                           
  8223  0D80  01F8               	clrf	___wmul@product
  8224  0D81  01F9               	clrf	___wmul@product+1
  8225  0D82                     i1l2925:
  8226  0D82  1C74               	btfss	___wmul@multiplier,0
  8227  0D83  2D85               	goto	u160_21
  8228  0D84  2D86               	goto	u160_20
  8229  0D85                     u160_21:
  8230  0D85  2D8A               	goto	i1l1081
  8231  0D86                     u160_20:
  8232  0D86                     i1l2927:
  8233  0D86  0876               	movf	___wmul@multiplicand,w
  8234  0D87  07F8               	addwf	___wmul@product,f
  8235  0D88  0877               	movf	___wmul@multiplicand+1,w
  8236  0D89  3DF9               	addwfc	___wmul@product+1,f
  8237  0D8A                     i1l1081:
  8238  0D8A  3001               	movlw	1
  8239  0D8B                     u161_25:
  8240  0D8B  35F6               	lslf	___wmul@multiplicand,f
  8241  0D8C  0DF7               	rlf	___wmul@multiplicand+1,f
  8242  0D8D  0B89               	decfsz	9,f
  8243  0D8E  2D8B               	goto	u161_25
  8244  0D8F                     i1l2929:
  8245  0D8F  3001               	movlw	1
  8246  0D90                     u162_25:
  8247  0D90  36F5               	lsrf	___wmul@multiplier+1,f
  8248  0D91  0CF4               	rrf	___wmul@multiplier,f
  8249  0D92  0B89               	decfsz	9,f
  8250  0D93  2D90               	goto	u162_25
  8251  0D94                     i1l2931:
  8252  0D94  0874               	movf	___wmul@multiplier,w
  8253  0D95  0475               	iorwf	___wmul@multiplier+1,w
  8254  0D96  1D03               	btfss	3,2
  8255  0D97  2D99               	goto	u163_21
  8256  0D98  2D9A               	goto	u163_20
  8257  0D99                     u163_21:
  8258  0D99  2D82               	goto	i1l2925
  8259  0D9A                     u163_20:
  8260  0D9A                     i1l2933:
  8261  0D9A  0879               	movf	___wmul@product+1,w
  8262  0D9B  00F5               	movwf	?___wmul+1
  8263  0D9C  0878               	movf	___wmul@product,w
  8264  0D9D  00F4               	movwf	?___wmul
  8265  0D9E                     i1l1083:
  8266  0D9E  0008               	return
  8267  0D9F                     __end_of___wmul:
  8268                           
  8269                           	psect	text47
  8270  0717                     __ptext47:	
  8271 ;; *************** function ___fltol *****************
  8272 ;; Defined at:
  8273 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  f1              4   21[BANK0 ] unsigned int 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  exp1            1   31[BANK0 ] unsigned char 
  8278 ;;  sign1           1   30[BANK0 ] unsigned char 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  4   21[BANK0 ] long 
  8281 ;; Registers used:
  8282 ;;		wreg, status,2, status,0
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8288 ;;      Params:         0       4       0       0       0       0
  8289 ;;      Locals:         0       2       0       0       0       0
  8290 ;;      Temps:          0       5       0       0       0       0
  8291 ;;      Totals:         0      11       0       0       0       0
  8292 ;;Total ram usage:       11 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_sendInfo
  8298 ;;		_interrupcaoCCP4
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302  0717                     ___fltol:	
  8303                           ;psect for function ___fltol
  8304                           
  8305  0717                     i1l2937:	
  8306                           ;incstack = 0
  8307                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8308                           
  8309  0717  1003               	clrc
  8310  0718  0020               	movlb	0	; select bank0
  8311  0719  0D37               	rlf	___fltol@f1+2,w
  8312  071A  0D38               	rlf	___fltol@f1+3,w
  8313  071B  00B9               	movwf	??___fltol
  8314  071C  0839               	movf	??___fltol,w
  8315  071D  00BF               	movwf	___fltol@exp1
  8316  071E  083F               	movf	___fltol@exp1,w
  8317  071F  1D03               	btfss	3,2
  8318  0720  2F22               	goto	u164_21
  8319  0721  2F23               	goto	u164_20
  8320  0722                     u164_21:
  8321  0722  2F2C               	goto	i1l2943
  8322  0723                     u164_20:
  8323  0723                     i1l2939:
  8324  0723  3000               	movlw	0
  8325  0724  00B8               	movwf	?___fltol+3
  8326  0725  3000               	movlw	0
  8327  0726  00B7               	movwf	?___fltol+2
  8328  0727  3000               	movlw	0
  8329  0728  00B6               	movwf	?___fltol+1
  8330  0729  3000               	movlw	0
  8331  072A  00B5               	movwf	?___fltol
  8332  072B  2F8B               	goto	i1l1275
  8333  072C                     i1l2943:
  8334  072C  0835               	movf	___fltol@f1,w
  8335  072D  00B9               	movwf	??___fltol
  8336  072E  0836               	movf	___fltol@f1+1,w
  8337  072F  00BA               	movwf	??___fltol+1
  8338  0730  0837               	movf	___fltol@f1+2,w
  8339  0731  00BB               	movwf	??___fltol+2
  8340  0732  0838               	movf	___fltol@f1+3,w
  8341  0733  00BC               	movwf	??___fltol+3
  8342  0734  301F               	movlw	31
  8343  0735                     u165_25:
  8344  0735  36BC               	lsrf	??___fltol+3,f
  8345  0736  0CBB               	rrf	??___fltol+2,f
  8346  0737  0CBA               	rrf	??___fltol+1,f
  8347  0738  0CB9               	rrf	??___fltol,f
  8348  0739                     u165_20:
  8349  0739  0B89               	decfsz	9,f
  8350  073A  2F35               	goto	u165_25
  8351  073B  0839               	movf	??___fltol,w
  8352  073C  00BD               	movwf	??___fltol+4
  8353  073D  083D               	movf	??___fltol+4,w
  8354  073E  00BE               	movwf	___fltol@sign1
  8355  073F                     i1l2945:
  8356  073F  17B7               	bsf	___fltol@f1+2,7
  8357  0740                     i1l2947:
  8358  0740  30FF               	movlw	255
  8359  0741  05B5               	andwf	___fltol@f1,f
  8360  0742  30FF               	movlw	255
  8361  0743  05B6               	andwf	___fltol@f1+1,f
  8362  0744  30FF               	movlw	255
  8363  0745  05B7               	andwf	___fltol@f1+2,f
  8364  0746  3000               	movlw	0
  8365  0747  05B8               	andwf	___fltol@f1+3,f
  8366  0748                     i1l2949:
  8367  0748  3096               	movlw	150
  8368  0749  02BF               	subwf	___fltol@exp1,f
  8369  074A                     i1l2951:
  8370  074A  1FBF               	btfss	___fltol@exp1,7
  8371  074B  2F4D               	goto	u166_21
  8372  074C  2F4E               	goto	u166_20
  8373  074D                     u166_21:
  8374  074D  2F66               	goto	i1l2961
  8375  074E                     u166_20:
  8376  074E                     i1l2953:
  8377  074E  083F               	movf	___fltol@exp1,w
  8378  074F  3A80               	xorlw	128
  8379  0750  3E97               	addlw	151
  8380  0751  1803               	skipnc
  8381  0752  2F54               	goto	u167_21
  8382  0753  2F55               	goto	u167_20
  8383  0754                     u167_21:
  8384  0754  2F56               	goto	i1l2959
  8385  0755                     u167_20:
  8386  0755  2F23               	goto	i1l2939
  8387  0756                     i1l2959:
  8388  0756  3001               	movlw	1
  8389  0757                     u168_25:
  8390  0757  36B8               	lsrf	___fltol@f1+3,f
  8391  0758  0CB7               	rrf	___fltol@f1+2,f
  8392  0759  0CB6               	rrf	___fltol@f1+1,f
  8393  075A  0CB5               	rrf	___fltol@f1,f
  8394  075B  0B89               	decfsz	9,f
  8395  075C  2F57               	goto	u168_25
  8396  075D  3001               	movlw	1
  8397  075E  00B9               	movwf	??___fltol
  8398  075F  0839               	movf	??___fltol,w
  8399  0760  07BF               	addwf	___fltol@exp1,f
  8400  0761  1D03               	btfss	3,2
  8401  0762  2F64               	goto	u169_21
  8402  0763  2F65               	goto	u169_20
  8403  0764                     u169_21:
  8404  0764  2F56               	goto	i1l2959
  8405  0765                     u169_20:
  8406  0765  2F7B               	goto	i1l2969
  8407  0766                     i1l2961:
  8408  0766  3020               	movlw	32
  8409  0767  023F               	subwf	___fltol@exp1,w
  8410  0768  1C03               	skipc
  8411  0769  2F6B               	goto	u170_21
  8412  076A  2F6C               	goto	u170_20
  8413  076B                     u170_21:
  8414  076B  2F76               	goto	i1l1282
  8415  076C                     u170_20:
  8416  076C  2F23               	goto	i1l2939
  8417  076D                     i1l2967:
  8418  076D  3001               	movlw	1
  8419  076E                     u171_25:
  8420  076E  35B5               	lslf	___fltol@f1,f
  8421  076F  0DB6               	rlf	___fltol@f1+1,f
  8422  0770  0DB7               	rlf	___fltol@f1+2,f
  8423  0771  0DB8               	rlf	___fltol@f1+3,f
  8424  0772  0B89               	decfsz	9,f
  8425  0773  2F6E               	goto	u171_25
  8426  0774  3001               	movlw	1
  8427  0775  02BF               	subwf	___fltol@exp1,f
  8428  0776                     i1l1282:
  8429  0776  083F               	movf	___fltol@exp1,w
  8430  0777  1D03               	btfss	3,2
  8431  0778  2F7A               	goto	u172_21
  8432  0779  2F7B               	goto	u172_20
  8433  077A                     u172_21:
  8434  077A  2F6D               	goto	i1l2967
  8435  077B                     u172_20:
  8436  077B                     i1l2969:
  8437  077B  083E               	movf	___fltol@sign1,w
  8438  077C  1903               	btfsc	3,2
  8439  077D  2F7F               	goto	u173_21
  8440  077E  2F80               	goto	u173_20
  8441  077F                     u173_21:
  8442  077F  2F8B               	goto	i1l1285
  8443  0780                     u173_20:
  8444  0780                     i1l2971:
  8445  0780  09B5               	comf	___fltol@f1,f
  8446  0781  09B6               	comf	___fltol@f1+1,f
  8447  0782  09B7               	comf	___fltol@f1+2,f
  8448  0783  09B8               	comf	___fltol@f1+3,f
  8449  0784  0AB5               	incf	___fltol@f1,f
  8450  0785  1903               	skipnz
  8451  0786  0AB6               	incf	___fltol@f1+1,f
  8452  0787  1903               	skipnz
  8453  0788  0AB7               	incf	___fltol@f1+2,f
  8454  0789  1903               	skipnz
  8455  078A  0AB8               	incf	___fltol@f1+3,f
  8456  078B                     i1l1285:
  8457  078B                     i1l1275:
  8458  078B  0008               	return
  8459  078C                     __end_of___fltol:
  8460                           
  8461                           	psect	text48
  8462  0075                     __ptext48:	
  8463 ;; *************** function ___flmul *****************
  8464 ;; Defined at:
  8465 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  b               4    0[BANK0 ] long 
  8468 ;;  a               4    4[BANK0 ] long 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  prod            4   15[BANK0 ] struct .
  8471 ;;  grs             4    9[BANK0 ] unsigned long 
  8472 ;;  temp            2   19[BANK0 ] struct .
  8473 ;;  bexp            1   14[BANK0 ] unsigned char 
  8474 ;;  aexp            1   13[BANK0 ] unsigned char 
  8475 ;;  sign            1    8[BANK0 ] unsigned char 
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  4    0[BANK0 ] unsigned char 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2, status,0, pclath, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8485 ;;      Params:         0       8       0       0       0       0
  8486 ;;      Locals:         0      13       0       0       0       0
  8487 ;;      Temps:          5       0       0       0       0       0
  8488 ;;      Totals:         5      21       0       0       0       0
  8489 ;;Total ram usage:       26 bytes
  8490 ;; Hardware stack levels used: 1
  8491 ;; Hardware stack levels required when called: 1
  8492 ;; This function calls:
  8493 ;;		__Umul8_16
  8494 ;; This function is called by:
  8495 ;;		_sendInfo
  8496 ;;		_interrupcaoCCP4
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500  0075                     ___flmul:	
  8501                           ;psect for function ___flmul
  8502                           
  8503  0075                     i1l2973:	
  8504                           ;incstack = 0
  8505                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8506                           
  8507  0075  0020               	movlb	0	; select bank0
  8508  0076  0823               	movf	___flmul@b+3,w
  8509  0077  3980               	andlw	128
  8510  0078  00F9               	movwf	??___flmul
  8511  0079  0879               	movf	??___flmul,w
  8512  007A  00A8               	movwf	___flmul@sign
  8513  007B                     i1l2975:
  8514  007B  3523               	lslf	___flmul@b+3,w
  8515  007C  00F9               	movwf	??___flmul
  8516  007D  0879               	movf	??___flmul,w
  8517  007E  00AE               	movwf	___flmul@bexp
  8518  007F                     i1l2977:
  8519  007F  1FA2               	btfss	___flmul@b+2,7
  8520  0080  2882               	goto	u174_21
  8521  0081  2883               	goto	u174_20
  8522  0082                     u174_21:
  8523  0082  2884               	goto	i1l2981
  8524  0083                     u174_20:
  8525  0083                     i1l2979:
  8526  0083  142E               	bsf	___flmul@bexp,0
  8527  0084                     i1l2981:
  8528  0084  082E               	movf	___flmul@bexp,w
  8529  0085  1903               	btfsc	3,2
  8530  0086  2888               	goto	u175_21
  8531  0087  2889               	goto	u175_20
  8532  0088                     u175_21:
  8533  0088  2898               	goto	i1l2989
  8534  0089                     u175_20:
  8535  0089                     i1l2983:
  8536  0089  0A2E               	incf	___flmul@bexp,w
  8537  008A  1D03               	btfss	3,2
  8538  008B  288D               	goto	u176_21
  8539  008C  288E               	goto	u176_20
  8540  008D                     u176_21:
  8541  008D  2896               	goto	i1l2987
  8542  008E                     u176_20:
  8543  008E                     i1l2985:
  8544  008E  3000               	movlw	0
  8545  008F  00A3               	movwf	___flmul@b+3
  8546  0090  3000               	movlw	0
  8547  0091  00A2               	movwf	___flmul@b+2
  8548  0092  3000               	movlw	0
  8549  0093  00A1               	movwf	___flmul@b+1
  8550  0094  3000               	movlw	0
  8551  0095  00A0               	movwf	___flmul@b
  8552  0096                     i1l2987:
  8553  0096  17A2               	bsf	___flmul@b+2,7
  8554  0097  28A0               	goto	i1l2991
  8555  0098                     i1l2989:
  8556  0098  3000               	movlw	0
  8557  0099  00A3               	movwf	___flmul@b+3
  8558  009A  3000               	movlw	0
  8559  009B  00A2               	movwf	___flmul@b+2
  8560  009C  3000               	movlw	0
  8561  009D  00A1               	movwf	___flmul@b+1
  8562  009E  3000               	movlw	0
  8563  009F  00A0               	movwf	___flmul@b
  8564  00A0                     i1l2991:
  8565  00A0  0827               	movf	___flmul@a+3,w
  8566  00A1  3980               	andlw	128
  8567  00A2  00F9               	movwf	??___flmul
  8568  00A3  0879               	movf	??___flmul,w
  8569  00A4  06A8               	xorwf	___flmul@sign,f
  8570  00A5                     i1l2993:
  8571  00A5  3527               	lslf	___flmul@a+3,w
  8572  00A6  00F9               	movwf	??___flmul
  8573  00A7  0879               	movf	??___flmul,w
  8574  00A8  00AD               	movwf	___flmul@aexp
  8575  00A9                     i1l2995:
  8576  00A9  1FA6               	btfss	___flmul@a+2,7
  8577  00AA  28AC               	goto	u177_21
  8578  00AB  28AD               	goto	u177_20
  8579  00AC                     u177_21:
  8580  00AC  28AE               	goto	i1l2999
  8581  00AD                     u177_20:
  8582  00AD                     i1l2997:
  8583  00AD  142D               	bsf	___flmul@aexp,0
  8584  00AE                     i1l2999:
  8585  00AE  082D               	movf	___flmul@aexp,w
  8586  00AF  1903               	btfsc	3,2
  8587  00B0  28B2               	goto	u178_21
  8588  00B1  28B3               	goto	u178_20
  8589  00B2                     u178_21:
  8590  00B2  28C2               	goto	i1l3007
  8591  00B3                     u178_20:
  8592  00B3                     i1l3001:
  8593  00B3  0A2D               	incf	___flmul@aexp,w
  8594  00B4  1D03               	btfss	3,2
  8595  00B5  28B7               	goto	u179_21
  8596  00B6  28B8               	goto	u179_20
  8597  00B7                     u179_21:
  8598  00B7  28C0               	goto	i1l3005
  8599  00B8                     u179_20:
  8600  00B8                     i1l3003:
  8601  00B8  3000               	movlw	0
  8602  00B9  00A7               	movwf	___flmul@a+3
  8603  00BA  3000               	movlw	0
  8604  00BB  00A6               	movwf	___flmul@a+2
  8605  00BC  3000               	movlw	0
  8606  00BD  00A5               	movwf	___flmul@a+1
  8607  00BE  3000               	movlw	0
  8608  00BF  00A4               	movwf	___flmul@a
  8609  00C0                     i1l3005:
  8610  00C0  17A6               	bsf	___flmul@a+2,7
  8611  00C1  28CA               	goto	i1l3009
  8612  00C2                     i1l3007:
  8613  00C2  3000               	movlw	0
  8614  00C3  00A7               	movwf	___flmul@a+3
  8615  00C4  3000               	movlw	0
  8616  00C5  00A6               	movwf	___flmul@a+2
  8617  00C6  3000               	movlw	0
  8618  00C7  00A5               	movwf	___flmul@a+1
  8619  00C8  3000               	movlw	0
  8620  00C9  00A4               	movwf	___flmul@a
  8621  00CA                     i1l3009:
  8622  00CA  082D               	movf	___flmul@aexp,w
  8623  00CB  1903               	btfsc	3,2
  8624  00CC  28CE               	goto	u180_21
  8625  00CD  28CF               	goto	u180_20
  8626  00CE                     u180_21:
  8627  00CE  28D4               	goto	i1l3013
  8628  00CF                     u180_20:
  8629  00CF                     i1l3011:
  8630  00CF  082E               	movf	___flmul@bexp,w
  8631  00D0  1D03               	btfss	3,2
  8632  00D1  28D3               	goto	u181_21
  8633  00D2  28D4               	goto	u181_20
  8634  00D3                     u181_21:
  8635  00D3  28DD               	goto	i1l3017
  8636  00D4                     u181_20:
  8637  00D4                     i1l3013:
  8638  00D4  3000               	movlw	0
  8639  00D5  00A3               	movwf	?___flmul+3
  8640  00D6  3000               	movlw	0
  8641  00D7  00A2               	movwf	?___flmul+2
  8642  00D8  3000               	movlw	0
  8643  00D9  00A1               	movwf	?___flmul+1
  8644  00DA  3000               	movlw	0
  8645  00DB  00A0               	movwf	?___flmul
  8646  00DC  2ACB               	goto	i1l1478
  8647  00DD                     i1l3017:
  8648  00DD  0820               	movf	___flmul@b,w
  8649  00DE  00F9               	movwf	??___flmul
  8650  00DF  0879               	movf	??___flmul,w
  8651  00E0  00F0               	movwf	__Umul8_16@multiplicand
  8652  00E1  0826               	movf	___flmul@a+2,w
  8653  00E2  318D  25BF  3180   	fcall	__Umul8_16
  8654  00E5  0871               	movf	?__Umul8_16+1,w
  8655  00E6  0020               	movlb	0	; select bank0
  8656  00E7  00B4               	movwf	___flmul@temp+1
  8657  00E8  0870               	movf	?__Umul8_16,w
  8658  00E9  00B3               	movwf	___flmul@temp
  8659  00EA                     i1l3019:
  8660  00EA  0833               	movf	___flmul@temp,w
  8661  00EB  00F9               	movwf	??___flmul
  8662  00EC  01FA               	clrf	??___flmul+1
  8663  00ED  01FB               	clrf	??___flmul+2
  8664  00EE  01FC               	clrf	??___flmul+3
  8665  00EF  087C               	movf	??___flmul+3,w
  8666  00F0  00AC               	movwf	___flmul@grs+3
  8667  00F1  087B               	movf	??___flmul+2,w
  8668  00F2  00AB               	movwf	___flmul@grs+2
  8669  00F3  087A               	movf	??___flmul+1,w
  8670  00F4  00AA               	movwf	___flmul@grs+1
  8671  00F5  0879               	movf	??___flmul,w
  8672  00F6  00A9               	movwf	___flmul@grs
  8673  00F7                     i1l3021:
  8674  00F7  0834               	movf	___flmul@temp+1,w
  8675  00F8  00F9               	movwf	??___flmul
  8676  00F9  01FA               	clrf	??___flmul+1
  8677  00FA  01FB               	clrf	??___flmul+2
  8678  00FB  01FC               	clrf	??___flmul+3
  8679  00FC  087C               	movf	??___flmul+3,w
  8680  00FD  00B2               	movwf	___flmul@prod+3
  8681  00FE  087B               	movf	??___flmul+2,w
  8682  00FF  00B1               	movwf	___flmul@prod+2
  8683  0100  087A               	movf	??___flmul+1,w
  8684  0101  00B0               	movwf	___flmul@prod+1
  8685  0102  0879               	movf	??___flmul,w
  8686  0103  00AF               	movwf	___flmul@prod
  8687  0104  0821               	movf	___flmul@b+1,w
  8688  0105  00F9               	movwf	??___flmul
  8689  0106  0879               	movf	??___flmul,w
  8690  0107  00F0               	movwf	__Umul8_16@multiplicand
  8691  0108  0825               	movf	___flmul@a+1,w
  8692  0109  318D  25BF  3180   	fcall	__Umul8_16
  8693  010C  0871               	movf	?__Umul8_16+1,w
  8694  010D  0020               	movlb	0	; select bank0
  8695  010E  00B4               	movwf	___flmul@temp+1
  8696  010F  0870               	movf	?__Umul8_16,w
  8697  0110  00B3               	movwf	___flmul@temp
  8698  0111                     i1l3023:
  8699  0111  0833               	movf	___flmul@temp,w
  8700  0112  00F9               	movwf	??___flmul
  8701  0113  01FA               	clrf	??___flmul+1
  8702  0114  01FB               	clrf	??___flmul+2
  8703  0115  01FC               	clrf	??___flmul+3
  8704  0116  0879               	movf	??___flmul,w
  8705  0117  07A9               	addwf	___flmul@grs,f
  8706  0118  087A               	movf	??___flmul+1,w
  8707  0119  3DAA               	addwfc	___flmul@grs+1,f
  8708  011A  087B               	movf	??___flmul+2,w
  8709  011B  3DAB               	addwfc	___flmul@grs+2,f
  8710  011C  087C               	movf	??___flmul+3,w
  8711  011D  3DAC               	addwfc	___flmul@grs+3,f
  8712  011E                     i1l3025:
  8713  011E  0834               	movf	___flmul@temp+1,w
  8714  011F  00F9               	movwf	??___flmul
  8715  0120  01FA               	clrf	??___flmul+1
  8716  0121  01FB               	clrf	??___flmul+2
  8717  0122  01FC               	clrf	??___flmul+3
  8718  0123  0879               	movf	??___flmul,w
  8719  0124  07AF               	addwf	___flmul@prod,f
  8720  0125  087A               	movf	??___flmul+1,w
  8721  0126  3DB0               	addwfc	___flmul@prod+1,f
  8722  0127  087B               	movf	??___flmul+2,w
  8723  0128  3DB1               	addwfc	___flmul@prod+2,f
  8724  0129  087C               	movf	??___flmul+3,w
  8725  012A  3DB2               	addwfc	___flmul@prod+3,f
  8726  012B  0822               	movf	___flmul@b+2,w
  8727  012C  00F9               	movwf	??___flmul
  8728  012D  0879               	movf	??___flmul,w
  8729  012E  00F0               	movwf	__Umul8_16@multiplicand
  8730  012F  0824               	movf	___flmul@a,w
  8731  0130  318D  25BF  3180   	fcall	__Umul8_16
  8732  0133  0871               	movf	?__Umul8_16+1,w
  8733  0134  0020               	movlb	0	; select bank0
  8734  0135  00B4               	movwf	___flmul@temp+1
  8735  0136  0870               	movf	?__Umul8_16,w
  8736  0137  00B3               	movwf	___flmul@temp
  8737  0138                     i1l3027:
  8738  0138  0833               	movf	___flmul@temp,w
  8739  0139  00F9               	movwf	??___flmul
  8740  013A  01FA               	clrf	??___flmul+1
  8741  013B  01FB               	clrf	??___flmul+2
  8742  013C  01FC               	clrf	??___flmul+3
  8743  013D  0879               	movf	??___flmul,w
  8744  013E  07A9               	addwf	___flmul@grs,f
  8745  013F  087A               	movf	??___flmul+1,w
  8746  0140  3DAA               	addwfc	___flmul@grs+1,f
  8747  0141  087B               	movf	??___flmul+2,w
  8748  0142  3DAB               	addwfc	___flmul@grs+2,f
  8749  0143  087C               	movf	??___flmul+3,w
  8750  0144  3DAC               	addwfc	___flmul@grs+3,f
  8751  0145                     i1l3029:
  8752  0145  0834               	movf	___flmul@temp+1,w
  8753  0146  00F9               	movwf	??___flmul
  8754  0147  01FA               	clrf	??___flmul+1
  8755  0148  01FB               	clrf	??___flmul+2
  8756  0149  01FC               	clrf	??___flmul+3
  8757  014A  0879               	movf	??___flmul,w
  8758  014B  07AF               	addwf	___flmul@prod,f
  8759  014C  087A               	movf	??___flmul+1,w
  8760  014D  3DB0               	addwfc	___flmul@prod+1,f
  8761  014E  087B               	movf	??___flmul+2,w
  8762  014F  3DB1               	addwfc	___flmul@prod+2,f
  8763  0150  087C               	movf	??___flmul+3,w
  8764  0151  3DB2               	addwfc	___flmul@prod+3,f
  8765  0152                     i1l3031:
  8766  0152  3008               	movlw	8
  8767  0153                     u182_25:
  8768  0153  35A9               	lslf	___flmul@grs,f
  8769  0154  0DAA               	rlf	___flmul@grs+1,f
  8770  0155  0DAB               	rlf	___flmul@grs+2,f
  8771  0156  0DAC               	rlf	___flmul@grs+3,f
  8772  0157  0B89               	decfsz	9,f
  8773  0158  2953               	goto	u182_25
  8774  0159                     i1l3033:
  8775  0159  0821               	movf	___flmul@b+1,w
  8776  015A  00F9               	movwf	??___flmul
  8777  015B  0879               	movf	??___flmul,w
  8778  015C  00F0               	movwf	__Umul8_16@multiplicand
  8779  015D  0824               	movf	___flmul@a,w
  8780  015E  318D  25BF  3180   	fcall	__Umul8_16
  8781  0161  0871               	movf	?__Umul8_16+1,w
  8782  0162  0020               	movlb	0	; select bank0
  8783  0163  00B4               	movwf	___flmul@temp+1
  8784  0164  0870               	movf	?__Umul8_16,w
  8785  0165  00B3               	movwf	___flmul@temp
  8786  0166                     i1l3035:
  8787  0166  0833               	movf	___flmul@temp,w
  8788  0167  07A9               	addwf	___flmul@grs,f
  8789  0168  0834               	movf	___flmul@temp+1,w
  8790  0169  3DAA               	addwfc	___flmul@grs+1,f
  8791  016A  3000               	movlw	0
  8792  016B  3DAB               	addwfc	___flmul@grs+2,f
  8793  016C  3DAC               	addwfc	___flmul@grs+3,f
  8794  016D                     i1l3037:
  8795  016D  0820               	movf	___flmul@b,w
  8796  016E  00F9               	movwf	??___flmul
  8797  016F  0879               	movf	??___flmul,w
  8798  0170  00F0               	movwf	__Umul8_16@multiplicand
  8799  0171  0825               	movf	___flmul@a+1,w
  8800  0172  318D  25BF  3180   	fcall	__Umul8_16
  8801  0175  0871               	movf	?__Umul8_16+1,w
  8802  0176  0020               	movlb	0	; select bank0
  8803  0177  00B4               	movwf	___flmul@temp+1
  8804  0178  0870               	movf	?__Umul8_16,w
  8805  0179  00B3               	movwf	___flmul@temp
  8806  017A                     i1l3039:
  8807  017A  0833               	movf	___flmul@temp,w
  8808  017B  07A9               	addwf	___flmul@grs,f
  8809  017C  0834               	movf	___flmul@temp+1,w
  8810  017D  3DAA               	addwfc	___flmul@grs+1,f
  8811  017E  3000               	movlw	0
  8812  017F  3DAB               	addwfc	___flmul@grs+2,f
  8813  0180  3DAC               	addwfc	___flmul@grs+3,f
  8814  0181                     i1l3041:
  8815  0181  3008               	movlw	8
  8816  0182                     u183_25:
  8817  0182  35A9               	lslf	___flmul@grs,f
  8818  0183  0DAA               	rlf	___flmul@grs+1,f
  8819  0184  0DAB               	rlf	___flmul@grs+2,f
  8820  0185  0DAC               	rlf	___flmul@grs+3,f
  8821  0186  0B89               	decfsz	9,f
  8822  0187  2982               	goto	u183_25
  8823  0188  0820               	movf	___flmul@b,w
  8824  0189  00F9               	movwf	??___flmul
  8825  018A  0879               	movf	??___flmul,w
  8826  018B  00F0               	movwf	__Umul8_16@multiplicand
  8827  018C  0824               	movf	___flmul@a,w
  8828  018D  318D  25BF  3180   	fcall	__Umul8_16
  8829  0190  0871               	movf	?__Umul8_16+1,w
  8830  0191  0020               	movlb	0	; select bank0
  8831  0192  00B4               	movwf	___flmul@temp+1
  8832  0193  0870               	movf	?__Umul8_16,w
  8833  0194  00B3               	movwf	___flmul@temp
  8834  0195                     i1l3043:
  8835  0195  0833               	movf	___flmul@temp,w
  8836  0196  07A9               	addwf	___flmul@grs,f
  8837  0197  0834               	movf	___flmul@temp+1,w
  8838  0198  3DAA               	addwfc	___flmul@grs+1,f
  8839  0199  3000               	movlw	0
  8840  019A  3DAB               	addwfc	___flmul@grs+2,f
  8841  019B  3DAC               	addwfc	___flmul@grs+3,f
  8842  019C                     i1l3045:
  8843  019C  0821               	movf	___flmul@b+1,w
  8844  019D  00F9               	movwf	??___flmul
  8845  019E  0879               	movf	??___flmul,w
  8846  019F  00F0               	movwf	__Umul8_16@multiplicand
  8847  01A0  0826               	movf	___flmul@a+2,w
  8848  01A1  318D  25BF  3180   	fcall	__Umul8_16
  8849  01A4  0871               	movf	?__Umul8_16+1,w
  8850  01A5  0020               	movlb	0	; select bank0
  8851  01A6  00B4               	movwf	___flmul@temp+1
  8852  01A7  0870               	movf	?__Umul8_16,w
  8853  01A8  00B3               	movwf	___flmul@temp
  8854  01A9  0833               	movf	___flmul@temp,w
  8855  01AA  07AF               	addwf	___flmul@prod,f
  8856  01AB  0834               	movf	___flmul@temp+1,w
  8857  01AC  3DB0               	addwfc	___flmul@prod+1,f
  8858  01AD  3000               	movlw	0
  8859  01AE  3DB1               	addwfc	___flmul@prod+2,f
  8860  01AF  3DB2               	addwfc	___flmul@prod+3,f
  8861  01B0                     i1l3047:
  8862  01B0  0822               	movf	___flmul@b+2,w
  8863  01B1  00F9               	movwf	??___flmul
  8864  01B2  0879               	movf	??___flmul,w
  8865  01B3  00F0               	movwf	__Umul8_16@multiplicand
  8866  01B4  0825               	movf	___flmul@a+1,w
  8867  01B5  318D  25BF  3180   	fcall	__Umul8_16
  8868  01B8  0871               	movf	?__Umul8_16+1,w
  8869  01B9  0020               	movlb	0	; select bank0
  8870  01BA  00B4               	movwf	___flmul@temp+1
  8871  01BB  0870               	movf	?__Umul8_16,w
  8872  01BC  00B3               	movwf	___flmul@temp
  8873  01BD                     i1l3049:
  8874  01BD  0833               	movf	___flmul@temp,w
  8875  01BE  07AF               	addwf	___flmul@prod,f
  8876  01BF  0834               	movf	___flmul@temp+1,w
  8877  01C0  3DB0               	addwfc	___flmul@prod+1,f
  8878  01C1  3000               	movlw	0
  8879  01C2  3DB1               	addwfc	___flmul@prod+2,f
  8880  01C3  3DB2               	addwfc	___flmul@prod+3,f
  8881  01C4  0822               	movf	___flmul@b+2,w
  8882  01C5  00F9               	movwf	??___flmul
  8883  01C6  0879               	movf	??___flmul,w
  8884  01C7  00F0               	movwf	__Umul8_16@multiplicand
  8885  01C8  0826               	movf	___flmul@a+2,w
  8886  01C9  318D  25BF  3180   	fcall	__Umul8_16
  8887  01CC  0871               	movf	?__Umul8_16+1,w
  8888  01CD  0020               	movlb	0	; select bank0
  8889  01CE  00B4               	movwf	___flmul@temp+1
  8890  01CF  0870               	movf	?__Umul8_16,w
  8891  01D0  00B3               	movwf	___flmul@temp
  8892  01D1                     i1l3051:
  8893  01D1  0833               	movf	___flmul@temp,w
  8894  01D2  00F9               	movwf	??___flmul
  8895  01D3  0834               	movf	___flmul@temp+1,w
  8896  01D4  00FA               	movwf	??___flmul+1
  8897  01D5  01FB               	clrf	??___flmul+2
  8898  01D6  01FC               	clrf	??___flmul+3
  8899  01D7  3008               	movlw	8
  8900  01D8                     u184_25:
  8901  01D8  35F9               	lslf	??___flmul,f
  8902  01D9  0DFA               	rlf	??___flmul+1,f
  8903  01DA  0DFB               	rlf	??___flmul+2,f
  8904  01DB  0DFC               	rlf	??___flmul+3,f
  8905  01DC                     u184_20:
  8906  01DC  0B89               	decfsz	9,f
  8907  01DD  29D8               	goto	u184_25
  8908  01DE  0879               	movf	??___flmul,w
  8909  01DF  07AF               	addwf	___flmul@prod,f
  8910  01E0  087A               	movf	??___flmul+1,w
  8911  01E1  3DB0               	addwfc	___flmul@prod+1,f
  8912  01E2  087B               	movf	??___flmul+2,w
  8913  01E3  3DB1               	addwfc	___flmul@prod+2,f
  8914  01E4  087C               	movf	??___flmul+3,w
  8915  01E5  3DB2               	addwfc	___flmul@prod+3,f
  8916  01E6                     i1l3053:
  8917  01E6  0829               	movf	___flmul@grs,w
  8918  01E7  00F9               	movwf	??___flmul
  8919  01E8  082A               	movf	___flmul@grs+1,w
  8920  01E9  00FA               	movwf	??___flmul+1
  8921  01EA  082B               	movf	___flmul@grs+2,w
  8922  01EB  00FB               	movwf	??___flmul+2
  8923  01EC  082C               	movf	___flmul@grs+3,w
  8924  01ED  00FC               	movwf	??___flmul+3
  8925  01EE  3018               	movlw	24
  8926  01EF                     u185_25:
  8927  01EF  36FC               	lsrf	??___flmul+3,f
  8928  01F0  0CFB               	rrf	??___flmul+2,f
  8929  01F1  0CFA               	rrf	??___flmul+1,f
  8930  01F2  0CF9               	rrf	??___flmul,f
  8931  01F3                     u185_20:
  8932  01F3  0B89               	decfsz	9,f
  8933  01F4  29EF               	goto	u185_25
  8934  01F5  0879               	movf	??___flmul,w
  8935  01F6  07AF               	addwf	___flmul@prod,f
  8936  01F7  087A               	movf	??___flmul+1,w
  8937  01F8  3DB0               	addwfc	___flmul@prod+1,f
  8938  01F9  087B               	movf	??___flmul+2,w
  8939  01FA  3DB1               	addwfc	___flmul@prod+2,f
  8940  01FB  087C               	movf	??___flmul+3,w
  8941  01FC  3DB2               	addwfc	___flmul@prod+3,f
  8942  01FD                     i1l3055:
  8943  01FD  3008               	movlw	8
  8944  01FE                     u186_25:
  8945  01FE  35A9               	lslf	___flmul@grs,f
  8946  01FF  0DAA               	rlf	___flmul@grs+1,f
  8947  0200  0DAB               	rlf	___flmul@grs+2,f
  8948  0201  0DAC               	rlf	___flmul@grs+3,f
  8949  0202  0B89               	decfsz	9,f
  8950  0203  29FE               	goto	u186_25
  8951  0204                     i1l3057:
  8952  0204  082E               	movf	___flmul@bexp,w
  8953  0205  072D               	addwf	___flmul@aexp,w
  8954  0206  00F9               	movwf	??___flmul
  8955  0207  01FA               	clrf	??___flmul+1
  8956  0208  0DFA               	rlf	??___flmul+1,f
  8957  0209  0879               	movf	??___flmul,w
  8958  020A  3E82               	addlw	130
  8959  020B  00B3               	movwf	___flmul@temp
  8960  020C  30FF               	movlw	255
  8961  020D  3D7A               	addwfc	??___flmul+1,w
  8962  020E  00B4               	movwf	___flmul@temp+1
  8963  020F  2A27               	goto	i1l3069
  8964  0210                     i1l3059:
  8965  0210  3001               	movlw	1
  8966  0211                     u187_25:
  8967  0211  35AF               	lslf	___flmul@prod,f
  8968  0212  0DB0               	rlf	___flmul@prod+1,f
  8969  0213  0DB1               	rlf	___flmul@prod+2,f
  8970  0214  0DB2               	rlf	___flmul@prod+3,f
  8971  0215  0B89               	decfsz	9,f
  8972  0216  2A11               	goto	u187_25
  8973  0217                     i1l3061:
  8974  0217  1FAC               	btfss	___flmul@grs+3,7
  8975  0218  2A1A               	goto	u188_21
  8976  0219  2A1B               	goto	u188_20
  8977  021A                     u188_21:
  8978  021A  2A1C               	goto	i1l3065
  8979  021B                     u188_20:
  8980  021B                     i1l3063:
  8981  021B  142F               	bsf	___flmul@prod,0
  8982  021C                     i1l3065:
  8983  021C  3001               	movlw	1
  8984  021D                     u189_25:
  8985  021D  35A9               	lslf	___flmul@grs,f
  8986  021E  0DAA               	rlf	___flmul@grs+1,f
  8987  021F  0DAB               	rlf	___flmul@grs+2,f
  8988  0220  0DAC               	rlf	___flmul@grs+3,f
  8989  0221  0B89               	decfsz	9,f
  8990  0222  2A1D               	goto	u189_25
  8991  0223                     i1l3067:
  8992  0223  30FF               	movlw	255
  8993  0224  07B3               	addwf	___flmul@temp,f
  8994  0225  30FF               	movlw	255
  8995  0226  3DB4               	addwfc	___flmul@temp+1,f
  8996  0227                     i1l3069:
  8997  0227  1FB1               	btfss	___flmul@prod+2,7
  8998  0228  2A2A               	goto	u190_21
  8999  0229  2A2B               	goto	u190_20
  9000  022A                     u190_21:
  9001  022A  2A10               	goto	i1l3059
  9002  022B                     u190_20:
  9003  022B                     i1l3071:
  9004  022B  01AD               	clrf	___flmul@aexp
  9005  022C                     i1l3073:
  9006  022C  1FAC               	btfss	___flmul@grs+3,7
  9007  022D  2A2F               	goto	u191_21
  9008  022E  2A30               	goto	u191_20
  9009  022F                     u191_21:
  9010  022F  2A4C               	goto	i1l3081
  9011  0230                     u191_20:
  9012  0230                     i1l3075:
  9013  0230  30FF               	movlw	255
  9014  0231  0529               	andwf	___flmul@grs,w
  9015  0232  00F9               	movwf	??___flmul
  9016  0233  30FF               	movlw	255
  9017  0234  052A               	andwf	___flmul@grs+1,w
  9018  0235  00FA               	movwf	??___flmul+1
  9019  0236  30FF               	movlw	255
  9020  0237  052B               	andwf	___flmul@grs+2,w
  9021  0238  00FB               	movwf	??___flmul+2
  9022  0239  307F               	movlw	127
  9023  023A  052C               	andwf	___flmul@grs+3,w
  9024  023B  00FC               	movwf	??___flmul+3
  9025  023C  087C               	movf	??___flmul+3,w
  9026  023D  047B               	iorwf	??___flmul+2,w
  9027  023E  047A               	iorwf	??___flmul+1,w
  9028  023F  0479               	iorwf	??___flmul,w
  9029  0240  1903               	skipnz
  9030  0241  2A43               	goto	u192_21
  9031  0242  2A44               	goto	u192_20
  9032  0243                     u192_21:
  9033  0243  2A47               	goto	i1l1484
  9034  0244                     u192_20:
  9035  0244                     i1l3077:
  9036  0244  01AD               	clrf	___flmul@aexp
  9037  0245  0AAD               	incf	___flmul@aexp,f
  9038  0246  2A4C               	goto	i1l3081
  9039  0247                     i1l1484:
  9040  0247  1C2F               	btfss	___flmul@prod,0
  9041  0248  2A4A               	goto	u193_21
  9042  0249  2A4B               	goto	u193_20
  9043  024A                     u193_21:
  9044  024A  2A4C               	goto	i1l3081
  9045  024B                     u193_20:
  9046  024B  2A44               	goto	i1l3077
  9047  024C                     i1l3081:
  9048  024C  082D               	movf	___flmul@aexp,w
  9049  024D  1903               	btfsc	3,2
  9050  024E  2A50               	goto	u194_21
  9051  024F  2A51               	goto	u194_20
  9052  0250                     u194_21:
  9053  0250  2A79               	goto	i1l3091
  9054  0251                     u194_20:
  9055  0251                     i1l3083:
  9056  0251  3001               	movlw	1
  9057  0252  07AF               	addwf	___flmul@prod,f
  9058  0253  3000               	movlw	0
  9059  0254  3DB0               	addwfc	___flmul@prod+1,f
  9060  0255  3000               	movlw	0
  9061  0256  3DB1               	addwfc	___flmul@prod+2,f
  9062  0257  3000               	movlw	0
  9063  0258  3DB2               	addwfc	___flmul@prod+3,f
  9064  0259                     i1l3085:
  9065  0259  1C32               	btfss	___flmul@prod+3,0
  9066  025A  2A5C               	goto	u195_21
  9067  025B  2A5D               	goto	u195_20
  9068  025C                     u195_21:
  9069  025C  2A79               	goto	i1l3091
  9070  025D                     u195_20:
  9071  025D                     i1l3087:
  9072  025D  082F               	movf	___flmul@prod,w
  9073  025E  00F9               	movwf	??___flmul
  9074  025F  0830               	movf	___flmul@prod+1,w
  9075  0260  00FA               	movwf	??___flmul+1
  9076  0261  0831               	movf	___flmul@prod+2,w
  9077  0262  00FB               	movwf	??___flmul+2
  9078  0263  0832               	movf	___flmul@prod+3,w
  9079  0264  00FC               	movwf	??___flmul+3
  9080  0265  3001               	movlw	1
  9081  0266  00FD               	movwf	??___flmul+4
  9082  0267                     u196_25:
  9083  0267  37FC               	asrf	??___flmul+3,f
  9084  0268  0CFB               	rrf	??___flmul+2,f
  9085  0269  0CFA               	rrf	??___flmul+1,f
  9086  026A  0CF9               	rrf	??___flmul,f
  9087  026B                     u196_20:
  9088  026B  0BFD               	decfsz	??___flmul+4,f
  9089  026C  2A67               	goto	u196_25
  9090  026D  087C               	movf	??___flmul+3,w
  9091  026E  00B2               	movwf	___flmul@prod+3
  9092  026F  087B               	movf	??___flmul+2,w
  9093  0270  00B1               	movwf	___flmul@prod+2
  9094  0271  087A               	movf	??___flmul+1,w
  9095  0272  00B0               	movwf	___flmul@prod+1
  9096  0273  0879               	movf	??___flmul,w
  9097  0274  00AF               	movwf	___flmul@prod
  9098  0275                     i1l3089:
  9099  0275  3001               	movlw	1
  9100  0276  07B3               	addwf	___flmul@temp,f
  9101  0277  3000               	movlw	0
  9102  0278  3DB4               	addwfc	___flmul@temp+1,f
  9103  0279                     i1l3091:
  9104  0279  0834               	movf	___flmul@temp+1,w
  9105  027A  3A80               	xorlw	128
  9106  027B  00F9               	movwf	??___flmul
  9107  027C  3080               	movlw	128
  9108  027D  0279               	subwf	??___flmul,w
  9109  027E  1D03               	skipz
  9110  027F  2A82               	goto	u197_25
  9111  0280  30FF               	movlw	255
  9112  0281  0233               	subwf	___flmul@temp,w
  9113  0282                     u197_25:
  9114  0282  1C03               	skipc
  9115  0283  2A85               	goto	u197_21
  9116  0284  2A86               	goto	u197_20
  9117  0285                     u197_21:
  9118  0285  2A90               	goto	i1l3095
  9119  0286                     u197_20:
  9120  0286                     i1l3093:
  9121  0286  307F               	movlw	127
  9122  0287  0020               	movlb	0	; select bank0
  9123  0288  00B2               	movwf	___flmul@prod+3
  9124  0289  3080               	movlw	128
  9125  028A  00B1               	movwf	___flmul@prod+2
  9126  028B  3000               	movlw	0
  9127  028C  00B0               	movwf	___flmul@prod+1
  9128  028D  3000               	movlw	0
  9129  028E  00AF               	movwf	___flmul@prod
  9130  028F  2ABF               	goto	i1l1490
  9131  0290                     i1l3095:
  9132  0290  0020               	movlb	0	; select bank0
  9133  0291  0834               	movf	___flmul@temp+1,w
  9134  0292  3A80               	xorlw	128
  9135  0293  00F9               	movwf	??___flmul
  9136  0294  3080               	movlw	128
  9137  0295  0279               	subwf	??___flmul,w
  9138  0296  1D03               	skipz
  9139  0297  2A9A               	goto	u198_25
  9140  0298  3001               	movlw	1
  9141  0299  0233               	subwf	___flmul@temp,w
  9142  029A                     u198_25:
  9143  029A  1803               	skipnc
  9144  029B  2A9D               	goto	u198_21
  9145  029C  2A9E               	goto	u198_20
  9146  029D                     u198_21:
  9147  029D  2AA9               	goto	i1l3101
  9148  029E                     u198_20:
  9149  029E                     i1l3097:
  9150  029E  3000               	movlw	0
  9151  029F  0020               	movlb	0	; select bank0
  9152  02A0  00B2               	movwf	___flmul@prod+3
  9153  02A1  3000               	movlw	0
  9154  02A2  00B1               	movwf	___flmul@prod+2
  9155  02A3  3000               	movlw	0
  9156  02A4  00B0               	movwf	___flmul@prod+1
  9157  02A5  3000               	movlw	0
  9158  02A6  00AF               	movwf	___flmul@prod
  9159  02A7                     i1l3099:
  9160  02A7  01A8               	clrf	___flmul@sign
  9161  02A8  2ABF               	goto	i1l1490
  9162  02A9                     i1l3101:
  9163  02A9  0020               	movlb	0	; select bank0
  9164  02AA  0833               	movf	___flmul@temp,w
  9165  02AB  00F9               	movwf	??___flmul
  9166  02AC  0879               	movf	??___flmul,w
  9167  02AD  00AE               	movwf	___flmul@bexp
  9168  02AE  30FF               	movlw	255
  9169  02AF  05AF               	andwf	___flmul@prod,f
  9170  02B0  30FF               	movlw	255
  9171  02B1  05B0               	andwf	___flmul@prod+1,f
  9172  02B2  307F               	movlw	127
  9173  02B3  05B1               	andwf	___flmul@prod+2,f
  9174  02B4  3000               	movlw	0
  9175  02B5  05B2               	andwf	___flmul@prod+3,f
  9176  02B6                     i1l3103:
  9177  02B6  1C2E               	btfss	___flmul@bexp,0
  9178  02B7  2AB9               	goto	u199_21
  9179  02B8  2ABA               	goto	u199_20
  9180  02B9                     u199_21:
  9181  02B9  2ABB               	goto	i1l3107
  9182  02BA                     u199_20:
  9183  02BA                     i1l3105:
  9184  02BA  17B1               	bsf	___flmul@prod+2,7
  9185  02BB                     i1l3107:
  9186  02BB  362E               	lsrf	___flmul@bexp,w
  9187  02BC  00F9               	movwf	??___flmul
  9188  02BD  0879               	movf	??___flmul,w
  9189  02BE  00B2               	movwf	___flmul@prod+3
  9190  02BF                     i1l1490:
  9191  02BF  0828               	movf	___flmul@sign,w
  9192  02C0  00F9               	movwf	??___flmul
  9193  02C1  0879               	movf	??___flmul,w
  9194  02C2  04B2               	iorwf	___flmul@prod+3,f
  9195  02C3                     i1l3109:
  9196  02C3  0832               	movf	___flmul@prod+3,w
  9197  02C4  00A3               	movwf	?___flmul+3
  9198  02C5  0831               	movf	___flmul@prod+2,w
  9199  02C6  00A2               	movwf	?___flmul+2
  9200  02C7  0830               	movf	___flmul@prod+1,w
  9201  02C8  00A1               	movwf	?___flmul+1
  9202  02C9  082F               	movf	___flmul@prod,w
  9203  02CA  00A0               	movwf	?___flmul
  9204  02CB                     i1l1478:
  9205  02CB  0008               	return
  9206  02CC                     __end_of___flmul:
  9207                           
  9208                           	psect	text49
  9209  0DBF                     __ptext49:	
  9210 ;; *************** function __Umul8_16 *****************
  9211 ;; Defined at:
  9212 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;  multiplier      1    wreg     unsigned char 
  9215 ;;  multiplicand    1    0[COMMON] unsigned char 
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;  multiplier      1    8[COMMON] unsigned char 
  9218 ;;  word_mpld       2    6[COMMON] unsigned int 
  9219 ;;  product         2    4[COMMON] unsigned int 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  2    0[COMMON] unsigned int 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9229 ;;      Params:         2       0       0       0       0       0
  9230 ;;      Locals:         5       0       0       0       0       0
  9231 ;;      Temps:          2       0       0       0       0       0
  9232 ;;      Totals:         9       0       0       0       0       0
  9233 ;;Total ram usage:        9 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		___flmul
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242  0DBF                     __Umul8_16:	
  9243                           ;psect for function __Umul8_16
  9244                           
  9245                           
  9246                           ;incstack = 0
  9247                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9248                           ;__Umul8_16@multiplier stored from wreg
  9249  0DBF  00F8               	movwf	__Umul8_16@multiplier
  9250  0DC0                     i1l2823:
  9251  0DC0  01F4               	clrf	__Umul8_16@product
  9252  0DC1  01F5               	clrf	__Umul8_16@product+1
  9253  0DC2                     i1l2825:
  9254  0DC2  0870               	movf	__Umul8_16@multiplicand,w
  9255  0DC3  00F2               	movwf	??__Umul8_16
  9256  0DC4  01F3               	clrf	??__Umul8_16+1
  9257  0DC5  0872               	movf	??__Umul8_16,w
  9258  0DC6  00F6               	movwf	__Umul8_16@word_mpld
  9259  0DC7  0873               	movf	??__Umul8_16+1,w
  9260  0DC8  00F7               	movwf	__Umul8_16@word_mpld+1
  9261  0DC9                     i1l2827:
  9262  0DC9  1C78               	btfss	__Umul8_16@multiplier,0
  9263  0DCA  2DCC               	goto	u146_21
  9264  0DCB  2DCD               	goto	u146_20
  9265  0DCC                     u146_21:
  9266  0DCC  2DD1               	goto	i1l1497
  9267  0DCD                     u146_20:
  9268  0DCD                     i1l2829:
  9269  0DCD  0876               	movf	__Umul8_16@word_mpld,w
  9270  0DCE  07F4               	addwf	__Umul8_16@product,f
  9271  0DCF  0877               	movf	__Umul8_16@word_mpld+1,w
  9272  0DD0  3DF5               	addwfc	__Umul8_16@product+1,f
  9273  0DD1                     i1l1497:
  9274  0DD1  3001               	movlw	1
  9275  0DD2                     u147_25:
  9276  0DD2  35F6               	lslf	__Umul8_16@word_mpld,f
  9277  0DD3  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9278  0DD4  0B89               	decfsz	9,f
  9279  0DD5  2DD2               	goto	u147_25
  9280  0DD6  1003               	clrc
  9281  0DD7  0CF8               	rrf	__Umul8_16@multiplier,f
  9282  0DD8                     i1l2831:
  9283  0DD8  0878               	movf	__Umul8_16@multiplier,w
  9284  0DD9  1D03               	btfss	3,2
  9285  0DDA  2DDC               	goto	u148_21
  9286  0DDB  2DDD               	goto	u148_20
  9287  0DDC                     u148_21:
  9288  0DDC  2DC9               	goto	i1l2827
  9289  0DDD                     u148_20:
  9290  0DDD                     i1l2833:
  9291  0DDD  0875               	movf	__Umul8_16@product+1,w
  9292  0DDE  00F1               	movwf	?__Umul8_16+1
  9293  0DDF  0874               	movf	__Umul8_16@product,w
  9294  0DE0  00F0               	movwf	?__Umul8_16
  9295  0DE1                     i1l1499:
  9296  0DE1  0008               	return
  9297  0DE2                     __end_of__Umul8_16:
  9298                           
  9299                           	psect	text50
  9300  0C1B                     __ptext50:	
  9301 ;; *************** function _EUSART_Write *****************
  9302 ;; Defined at:
  9303 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;  txData          1    wreg     unsigned char 
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;  txData          1    0[COMMON] unsigned char 
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9317 ;;      Params:         0       0       0       0       0       0
  9318 ;;      Locals:         1       0       0       0       0       0
  9319 ;;      Temps:          0       0       0       0       0       0
  9320 ;;      Totals:         1       0       0       0       0       0
  9321 ;;Total ram usage:        1 bytes
  9322 ;; Hardware stack levels used: 1
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_sendInfo
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330  0C1B                     _EUSART_Write:	
  9331                           ;psect for function _EUSART_Write
  9332                           
  9333                           
  9334                           ;incstack = 0
  9335                           ; Regs used in _EUSART_Write: [wreg]
  9336                           ;EUSART_Write@txData stored from wreg
  9337  0C1B  00F0               	movwf	EUSART_Write@txData
  9338  0C1C                     i1l2855:
  9339  0C1C                     i1l384:	
  9340                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  9341                           
  9342                           
  9343                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  9344  0C1C  0020               	movlb	0	; select bank0
  9345  0C1D  1E11               	btfss	17,4	;volatile
  9346  0C1E  2C20               	goto	u151_21
  9347  0C1F  2C21               	goto	u151_20
  9348  0C20                     u151_21:
  9349  0C20  2C1C               	goto	i1l384
  9350  0C21                     u151_20:
  9351  0C21                     i1l2857:
  9352                           
  9353                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  9354  0C21  0870               	movf	EUSART_Write@txData,w
  9355  0C22  0023               	movlb	3	; select bank3
  9356  0C23  009A               	movwf	26	;volatile
  9357  0C24                     i1l387:
  9358  0C24  0008               	return
  9359  0C25                     __end_of_EUSART_Write:
  9360                           
  9361                           	psect	text51
  9362  0D66                     __ptext51:	
  9363 ;; *************** function _ADC_GetConversion *****************
  9364 ;; Defined at:
  9365 ;;		line 112 in file "mcc_generated_files/adc.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;  channel         1    wreg     enum E2485
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;  channel         1    3[COMMON] enum E2485
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  2    0[COMMON] unsigned short 
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9379 ;;      Params:         2       0       0       0       0       0
  9380 ;;      Locals:         1       0       0       0       0       0
  9381 ;;      Temps:          1       0       0       0       0       0
  9382 ;;      Totals:         4       0       0       0       0       0
  9383 ;;Total ram usage:        4 bytes
  9384 ;; Hardware stack levels used: 1
  9385 ;; This function calls:
  9386 ;;		Nothing
  9387 ;; This function is called by:
  9388 ;;		_sendInfo
  9389 ;; This function uses a non-reentrant model
  9390 ;;
  9391                           
  9392  0D66                     _ADC_GetConversion:	
  9393                           ;psect for function _ADC_GetConversion
  9394                           
  9395                           
  9396                           ;incstack = 0
  9397                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  9398                           ;ADC_GetConversion@channel stored from wreg
  9399  0D66  00F3               	movwf	ADC_GetConversion@channel
  9400  0D67                     i1l2843:
  9401                           
  9402                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  9403  0D67  0873               	movf	ADC_GetConversion@channel,w
  9404  0D68  00F2               	movwf	??_ADC_GetConversion
  9405  0D69  0DF2               	rlf	??_ADC_GetConversion,f
  9406  0D6A  0DF2               	rlf	??_ADC_GetConversion,f
  9407  0D6B  0021               	movlb	1	; select bank1
  9408  0D6C  081D               	movf	29,w	;volatile
  9409  0D6D  0672               	xorwf	??_ADC_GetConversion,w
  9410  0D6E  3983               	andlw	-125
  9411  0D6F  0672               	xorwf	??_ADC_GetConversion,w
  9412  0D70  009D               	movwf	29	;volatile
  9413  0D71                     i1l2845:
  9414                           
  9415                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  9416  0D71  141D               	bsf	29,0	;volatile
  9417  0D72                     i1l2847:
  9418                           
  9419                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9420  0D72  3200               	nop2	;2 cycle nop
  9421  0D73  3200               	nop2	;2 cycle nop
  9422  0D74  0000               	nop
  9423  0D75                     i1l2849:
  9424                           
  9425                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  9426  0D75  0021               	movlb	1	; select bank1
  9427  0D76  149D               	bsf	29,1	;volatile
  9428  0D77                     i1l301:	
  9429                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  9430                           
  9431                           
  9432                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  9433  0D77  189D               	btfsc	29,1	;volatile
  9434  0D78  2D7A               	goto	u150_21
  9435  0D79  2D7B               	goto	u150_20
  9436  0D7A                     u150_21:
  9437  0D7A  2D77               	goto	i1l301
  9438  0D7B                     u150_20:
  9439  0D7B                     i1l2851:
  9440                           
  9441                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9442  0D7B  081C               	movf	28,w	;volatile
  9443  0D7C  00F1               	movwf	?_ADC_GetConversion+1
  9444  0D7D  081B               	movf	27,w	;volatile
  9445  0D7E  00F0               	movwf	?_ADC_GetConversion
  9446  0D7F                     i1l304:
  9447  0D7F  0008               	return
  9448  0D80                     __end_of_ADC_GetConversion:
  9449                           
  9450                           	psect	text52
  9451  0CBB                     __ptext52:	
  9452 ;; *************** function _PIN_MANAGER_IOC *****************
  9453 ;; Defined at:
  9454 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;		None
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;		None
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9468 ;;      Params:         0       0       0       0       0       0
  9469 ;;      Locals:         0       0       0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0       0
  9471 ;;      Totals:         0       0       0       0       0       0
  9472 ;;Total ram usage:        0 bytes
  9473 ;; Hardware stack levels used: 1
  9474 ;; Hardware stack levels required when called: 5
  9475 ;; This function calls:
  9476 ;;		_IOCBF0_ISR
  9477 ;;		_IOCBF3_ISR
  9478 ;; This function is called by:
  9479 ;;		_INTERRUPT_InterruptManager
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483  0CBB                     _PIN_MANAGER_IOC:	
  9484                           ;psect for function _PIN_MANAGER_IOC
  9485                           
  9486  0CBB                     i1l3547:	
  9487                           ;incstack = 0
  9488                           ; Regs used in _PIN_MANAGER_IOC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9489                           
  9490                           
  9491                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  9492  0CBB  0027               	movlb	7	; select bank7
  9493  0CBC  1C16               	btfss	22,0	;volatile
  9494  0CBD  2CBF               	goto	u231_21
  9495  0CBE  2CC0               	goto	u231_20
  9496  0CBF                     u231_21:
  9497  0CBF  2CC3               	goto	i1l3551
  9498  0CC0                     u231_20:
  9499  0CC0                     i1l3549:
  9500                           
  9501                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  9502  0CC0  318C  247E  318C   	fcall	_IOCBF0_ISR
  9503  0CC3                     i1l3551:
  9504                           
  9505                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  9506  0CC3  0027               	movlb	7	; select bank7
  9507  0CC4  1D96               	btfss	22,3	;volatile
  9508  0CC5  2CC7               	goto	u232_21
  9509  0CC6  2CC8               	goto	u232_20
  9510  0CC7                     u232_21:
  9511  0CC7  2CCB               	goto	i1l202
  9512  0CC8                     u232_20:
  9513  0CC8                     i1l3553:
  9514                           
  9515                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  9516  0CC8  318C  248D  318C   	fcall	_IOCBF3_ISR
  9517  0CCB                     i1l202:
  9518  0CCB  0008               	return
  9519  0CCC                     __end_of_PIN_MANAGER_IOC:
  9520                           
  9521                           	psect	text53
  9522  0C8D                     __ptext53:	
  9523 ;; *************** function _IOCBF3_ISR *****************
  9524 ;; Defined at:
  9525 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;		None
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;		None
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9539 ;;      Params:         0       0       0       0       0       0
  9540 ;;      Locals:         0       0       0       0       0       0
  9541 ;;      Temps:          0       0       0       0       0       0
  9542 ;;      Totals:         0       0       0       0       0       0
  9543 ;;Total ram usage:        0 bytes
  9544 ;; Hardware stack levels used: 1
  9545 ;; Hardware stack levels required when called: 4
  9546 ;; This function calls:
  9547 ;;		Absolute function
  9548 ;;		_IOCBF3_DefaultInterruptHandler
  9549 ;;		_chegadaS2
  9550 ;; This function is called by:
  9551 ;;		_PIN_MANAGER_IOC
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555  0C8D                     _IOCBF3_ISR:	
  9556                           ;psect for function _IOCBF3_ISR
  9557                           
  9558  0C8D                     i1l3425:	
  9559                           ;incstack = 0
  9560                           ; Regs used in _IOCBF3_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9561                           
  9562                           
  9563                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  9564  0C8D  0020               	movlb	0	; select bank0
  9565  0C8E  0866               	movf	_IOCBF3_InterruptHandler,w
  9566  0C8F  0467               	iorwf	_IOCBF3_InterruptHandler+1,w
  9567  0C90  1903               	btfsc	3,2
  9568  0C91  2C93               	goto	u228_21
  9569  0C92  2C94               	goto	u228_20
  9570  0C93                     u228_21:
  9571  0C93  2C99               	goto	i1l3429
  9572  0C94                     u228_20:
  9573  0C94                     i1l3427:
  9574                           
  9575                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  9576  0C94  0867               	movf	_IOCBF3_InterruptHandler+1,w
  9577  0C95  008A               	movwf	10
  9578  0C96  0866               	movf	_IOCBF3_InterruptHandler,w
  9579  0C97  000A               	callw
  9580  0C98  318C               	pagesel	$
  9581  0C99                     i1l3429:
  9582                           
  9583                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  9584  0C99  0027               	movlb	7	; select bank7
  9585  0C9A  1196               	bcf	22,3	;volatile
  9586  0C9B                     i1l216:
  9587  0C9B  0008               	return
  9588  0C9C                     __end_of_IOCBF3_ISR:
  9589                           
  9590                           	psect	text54
  9591  0B89                     __ptext54:	
  9592 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9593 ;; Defined at:
  9594 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;		None
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		None
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9608 ;;      Params:         0       0       0       0       0       0
  9609 ;;      Locals:         0       0       0       0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0
  9611 ;;      Totals:         0       0       0       0       0       0
  9612 ;;Total ram usage:        0 bytes
  9613 ;; Hardware stack levels used: 1
  9614 ;; This function calls:
  9615 ;;		Nothing
  9616 ;; This function is called by:
  9617 ;;		_PIN_MANAGER_Initialize
  9618 ;;		_IOCBF3_ISR
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622  0B89                     _IOCBF3_DefaultInterruptHandler:	
  9623                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9624                           
  9625  0B89                     i1l222:	
  9626                           ;incstack = 0
  9627                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9628                           
  9629  0B89  0008               	return
  9630  0B8A                     __end_of_IOCBF3_DefaultInterruptHandler:
  9631                           
  9632                           	psect	text55
  9633  069E                     __ptext55:	
  9634 ;; *************** function _chegadaS2 *****************
  9635 ;; Defined at:
  9636 ;;		line 263 in file "main.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;		None
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;		None
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  1    wreg      void 
  9643 ;; Registers used:
  9644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9650 ;;      Params:         0       0       0       0       0       0
  9651 ;;      Locals:         0       0       0       0       0       0
  9652 ;;      Temps:          1       0       0       0       0       0
  9653 ;;      Totals:         1       0       0       0       0       0
  9654 ;;Total ram usage:        1 bytes
  9655 ;; Hardware stack levels used: 1
  9656 ;; Hardware stack levels required when called: 3
  9657 ;; This function calls:
  9658 ;;		_PWM3_LoadDutyValue
  9659 ;;		_TMR4_StartTimer
  9660 ;;		_matrixUpdate
  9661 ;;		i1_TMR4_WriteTimer
  9662 ;; This function is called by:
  9663 ;;		_main
  9664 ;;		_IOCBF3_ISR
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668  069E                     _chegadaS2:	
  9669                           ;psect for function _chegadaS2
  9670                           
  9671  069E                     i1l3241:	
  9672                           ;incstack = 0
  9673                           ; Regs used in _chegadaS2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9674                           
  9675                           
  9676                           ;main.c: 265:     andarAtual = 1;
  9677  069E  0020               	movlb	0	; select bank0
  9678  069F  01D9               	clrf	_andarAtual
  9679  06A0  0AD9               	incf	_andarAtual,f
  9680                           
  9681                           ;main.c: 268:     if((((destinoSub & 0b00000010) == 2 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00000010) == 2) ) ){
  9682  06A1  0021               	movlb	1	; select bank1
  9683  06A2  1CBC               	btfss	_destinoSub^(0+128),1
  9684  06A3  2EA5               	goto	u207_21
  9685  06A4  2EA6               	goto	u207_20
  9686  06A5                     u207_21:
  9687  06A5  2EAC               	goto	i1l3245
  9688  06A6                     u207_20:
  9689  06A6                     i1l3243:
  9690  06A6  0020               	movlb	0	; select bank0
  9691  06A7  086B               	movf	_subindo,w
  9692  06A8  1D03               	btfss	3,2
  9693  06A9  2EAB               	goto	u208_21
  9694  06AA  2EAC               	goto	u208_20
  9695  06AB                     u208_21:
  9696  06AB  2EB7               	goto	i1l3249
  9697  06AC                     u208_20:
  9698  06AC                     i1l3245:
  9699  06AC  0020               	movlb	0	; select bank0
  9700  06AD  086B               	movf	_subindo,w
  9701  06AE  1D03               	btfss	3,2
  9702  06AF  2EB1               	goto	u209_21
  9703  06B0  2EB2               	goto	u209_20
  9704  06B1                     u209_21:
  9705  06B1  2EC4               	goto	i1l3253
  9706  06B2                     u209_20:
  9707  06B2                     i1l3247:
  9708  06B2  0021               	movlb	1	; select bank1
  9709  06B3  1CBB               	btfss	_destinoDesc^(0+128),1
  9710  06B4  2EB6               	goto	u210_21
  9711  06B5  2EB7               	goto	u210_20
  9712  06B6                     u210_21:
  9713  06B6  2EC4               	goto	i1l3253
  9714  06B7                     u210_20:
  9715  06B7                     i1l3249:
  9716                           
  9717                           ;main.c: 269:         PWM3_LoadDutyValue(0);
  9718  06B7  3000               	movlw	0
  9719  06B8  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  9720  06B9  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  9721  06BA  318D  251E  3186   	fcall	_PWM3_LoadDutyValue
  9722                           
  9723                           ;main.c: 270:         TMR4_WriteTimer(0);
  9724  06BD  3000               	movlw	0
  9725  06BE  318B  239A  3186   	fcall	i1_TMR4_WriteTimer
  9726  06C1                     i1l3251:
  9727                           
  9728                           ;main.c: 271:         TMR4_StartTimer();
  9729  06C1  318B  238C  3186   	fcall	_TMR4_StartTimer
  9730  06C4                     i1l3253:
  9731                           
  9732                           ;main.c: 276:     MatrixLed[0] = 0b00000000;
  9733  06C4  0021               	movlb	1	; select bank1
  9734  06C5  01B3               	clrf	_MatrixLed^(0+128)
  9735  06C6                     i1l3255:
  9736                           
  9737                           ;main.c: 277:     MatrixLed[1] = 0b01000001;
  9738  06C6  3041               	movlw	65
  9739  06C7  00FC               	movwf	??_chegadaS2
  9740  06C8  087C               	movf	??_chegadaS2,w
  9741  06C9  00B4               	movwf	(_MatrixLed^(0+128)+1)
  9742  06CA                     i1l3257:
  9743                           
  9744                           ;main.c: 278:     MatrixLed[2] = 0b11111111;
  9745  06CA  30FF               	movlw	255
  9746  06CB  00FC               	movwf	??_chegadaS2
  9747  06CC  087C               	movf	??_chegadaS2,w
  9748  06CD  00B5               	movwf	(_MatrixLed^(0+128)+2)
  9749  06CE                     i1l3259:
  9750                           
  9751                           ;main.c: 279:     MatrixLed[3] = 0b00000001;
  9752  06CE  01B6               	clrf	(_MatrixLed^(0+128)+3)
  9753  06CF  0AB6               	incf	(_MatrixLed^(0+128)+3),f
  9754  06D0                     i1l3261:
  9755                           
  9756                           ;main.c: 280:     MatrixLed[4] = 0;
  9757  06D0  01B7               	clrf	(_MatrixLed^(0+128)+4)
  9758  06D1                     i1l3263:
  9759                           
  9760                           ;main.c: 281:     if(subindo){
  9761  06D1  0020               	movlb	0	; select bank0
  9762  06D2  086B               	movf	_subindo,w
  9763  06D3  1903               	btfsc	3,2
  9764  06D4  2ED6               	goto	u211_21
  9765  06D5  2ED7               	goto	u211_20
  9766  06D6                     u211_21:
  9767  06D6  2EEE               	goto	i1l3271
  9768  06D7                     u211_20:
  9769  06D7                     i1l3265:
  9770                           
  9771                           ;main.c: 282:         MatrixLed[5] = 0b01100000;
  9772  06D7  3060               	movlw	96
  9773  06D8  00FC               	movwf	??_chegadaS2
  9774  06D9  087C               	movf	??_chegadaS2,w
  9775  06DA  0021               	movlb	1	; select bank1
  9776  06DB  00B8               	movwf	(_MatrixLed^(0+128)+5)
  9777                           
  9778                           ;main.c: 283:         MatrixLed[6] = 0b11000000;
  9779  06DC  30C0               	movlw	192
  9780  06DD  00FC               	movwf	??_chegadaS2
  9781  06DE  087C               	movf	??_chegadaS2,w
  9782  06DF  00B9               	movwf	(_MatrixLed^(0+128)+6)
  9783                           
  9784                           ;main.c: 284:         MatrixLed[7] = 0b01100000;
  9785  06E0  3060               	movlw	96
  9786  06E1  00FC               	movwf	??_chegadaS2
  9787  06E2  087C               	movf	??_chegadaS2,w
  9788  06E3  00BA               	movwf	(_MatrixLed^(0+128)+7)
  9789  06E4                     i1l3267:
  9790                           
  9791                           ;main.c: 285:         destinoSub = destinoSub & 0b11111101;
  9792  06E4  083C               	movf	_destinoSub^(0+128),w
  9793  06E5  39FD               	andlw	253
  9794  06E6  00FC               	movwf	??_chegadaS2
  9795  06E7  087C               	movf	??_chegadaS2,w
  9796  06E8  00BC               	movwf	_destinoSub^(0+128)
  9797  06E9                     i1l3269:
  9798                           
  9799                           ;main.c: 287:         mov = EmTrajeto;
  9800  06E9  3002               	movlw	2
  9801  06EA  00FC               	movwf	??_chegadaS2
  9802  06EB  087C               	movf	??_chegadaS2,w
  9803  06EC  00CA               	movwf	_mov^(0+128)
  9804                           
  9805                           ;main.c: 288:     }else{
  9806  06ED  2F09               	goto	i1l3279
  9807  06EE                     i1l3271:
  9808                           
  9809                           ;main.c: 289:         MatrixLed[5] = 0b11000000;
  9810  06EE  30C0               	movlw	192
  9811  06EF  00FC               	movwf	??_chegadaS2
  9812  06F0  087C               	movf	??_chegadaS2,w
  9813  06F1  0021               	movlb	1	; select bank1
  9814  06F2  00B8               	movwf	(_MatrixLed^(0+128)+5)
  9815                           
  9816                           ;main.c: 290:         MatrixLed[6] = 0b01100000;
  9817  06F3  3060               	movlw	96
  9818  06F4  00FC               	movwf	??_chegadaS2
  9819  06F5  087C               	movf	??_chegadaS2,w
  9820  06F6  00B9               	movwf	(_MatrixLed^(0+128)+6)
  9821                           
  9822                           ;main.c: 291:         MatrixLed[7] = 0b11000000;
  9823  06F7  30C0               	movlw	192
  9824  06F8  00FC               	movwf	??_chegadaS2
  9825  06F9  087C               	movf	??_chegadaS2,w
  9826  06FA  00BA               	movwf	(_MatrixLed^(0+128)+7)
  9827  06FB                     i1l3273:
  9828                           
  9829                           ;main.c: 292:         destinoDesc = destinoDesc & 0b11111101;
  9830  06FB  083B               	movf	_destinoDesc^(0+128),w
  9831  06FC  39FD               	andlw	253
  9832  06FD  00FC               	movwf	??_chegadaS2
  9833  06FE  087C               	movf	??_chegadaS2,w
  9834  06FF  00BB               	movwf	_destinoDesc^(0+128)
  9835  0700                     i1l3275:
  9836                           
  9837                           ;main.c: 295:         if(destinoDesc == 0){
  9838  0700  083B               	movf	_destinoDesc^(0+128),w
  9839  0701  1D03               	btfss	3,2
  9840  0702  2F04               	goto	u212_21
  9841  0703  2F05               	goto	u212_20
  9842  0704                     u212_21:
  9843  0704  2F09               	goto	i1l3279
  9844  0705                     u212_20:
  9845  0705                     i1l3277:
  9846                           
  9847                           ;main.c: 296:             mov = RetornaS0;
  9848  0705  3003               	movlw	3
  9849  0706  00FC               	movwf	??_chegadaS2
  9850  0707  087C               	movf	??_chegadaS2,w
  9851  0708  00CA               	movwf	_mov^(0+128)
  9852  0709                     i1l3279:
  9853                           
  9854                           ;main.c: 299:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9855  0709  083A               	movf	(_MatrixLed^(0+128)+7),w
  9856  070A  043C               	iorwf	_destinoSub^(0+128),w
  9857  070B  00FC               	movwf	??_chegadaS2
  9858  070C  087C               	movf	??_chegadaS2,w
  9859  070D  00BA               	movwf	(_MatrixLed^(0+128)+7)
  9860  070E                     i1l3281:
  9861                           
  9862                           ;main.c: 300:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9863  070E  0839               	movf	(_MatrixLed^(0+128)+6),w
  9864  070F  043B               	iorwf	_destinoDesc^(0+128),w
  9865  0710  00FC               	movwf	??_chegadaS2
  9866  0711  087C               	movf	??_chegadaS2,w
  9867  0712  00B9               	movwf	(_MatrixLed^(0+128)+6)
  9868  0713                     i1l3283:
  9869                           
  9870                           ;main.c: 301:     matrixUpdate();
  9871  0713  318D  259F  3186   	fcall	_matrixUpdate
  9872  0716                     i1l874:
  9873  0716  0008               	return
  9874  0717                     __end_of_chegadaS2:
  9875                           
  9876                           	psect	text56
  9877  0C7E                     __ptext56:	
  9878 ;; *************** function _IOCBF0_ISR *****************
  9879 ;; Defined at:
  9880 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;		None
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;		None
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  1    wreg      void 
  9887 ;; Registers used:
  9888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9894 ;;      Params:         0       0       0       0       0       0
  9895 ;;      Locals:         0       0       0       0       0       0
  9896 ;;      Temps:          0       0       0       0       0       0
  9897 ;;      Totals:         0       0       0       0       0       0
  9898 ;;Total ram usage:        0 bytes
  9899 ;; Hardware stack levels used: 1
  9900 ;; Hardware stack levels required when called: 4
  9901 ;; This function calls:
  9902 ;;		Absolute function
  9903 ;;		_IOCBF0_DefaultInterruptHandler
  9904 ;;		_chegadaS1
  9905 ;; This function is called by:
  9906 ;;		_PIN_MANAGER_IOC
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910  0C7E                     _IOCBF0_ISR:	
  9911                           ;psect for function _IOCBF0_ISR
  9912                           
  9913  0C7E                     i1l3419:	
  9914                           ;incstack = 0
  9915                           ; Regs used in _IOCBF0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9916                           
  9917                           
  9918                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
  9919  0C7E  0020               	movlb	0	; select bank0
  9920  0C7F  0868               	movf	_IOCBF0_InterruptHandler,w
  9921  0C80  0469               	iorwf	_IOCBF0_InterruptHandler+1,w
  9922  0C81  1903               	btfsc	3,2
  9923  0C82  2C84               	goto	u227_21
  9924  0C83  2C85               	goto	u227_20
  9925  0C84                     u227_21:
  9926  0C84  2C8A               	goto	i1l3423
  9927  0C85                     u227_20:
  9928  0C85                     i1l3421:
  9929                           
  9930                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
  9931  0C85  0869               	movf	_IOCBF0_InterruptHandler+1,w
  9932  0C86  008A               	movwf	10
  9933  0C87  0868               	movf	_IOCBF0_InterruptHandler,w
  9934  0C88  000A               	callw
  9935  0C89  318C               	pagesel	$
  9936  0C8A                     i1l3423:
  9937                           
  9938                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
  9939  0C8A  0027               	movlb	7	; select bank7
  9940  0C8B  1016               	bcf	22,0	;volatile
  9941  0C8C                     i1l206:
  9942  0C8C  0008               	return
  9943  0C8D                     __end_of_IOCBF0_ISR:
  9944                           
  9945                           	psect	text57
  9946  0B88                     __ptext57:	
  9947 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  9948 ;; Defined at:
  9949 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;		None
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;		None
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  1    wreg      void 
  9956 ;; Registers used:
  9957 ;;		None
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9963 ;;      Params:         0       0       0       0       0       0
  9964 ;;      Locals:         0       0       0       0       0       0
  9965 ;;      Temps:          0       0       0       0       0       0
  9966 ;;      Totals:         0       0       0       0       0       0
  9967 ;;Total ram usage:        0 bytes
  9968 ;; Hardware stack levels used: 1
  9969 ;; This function calls:
  9970 ;;		Nothing
  9971 ;; This function is called by:
  9972 ;;		_PIN_MANAGER_Initialize
  9973 ;;		_IOCBF0_ISR
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977  0B88                     _IOCBF0_DefaultInterruptHandler:	
  9978                           ;psect for function _IOCBF0_DefaultInterruptHandler
  9979                           
  9980  0B88                     i1l212:	
  9981                           ;incstack = 0
  9982                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  9983                           
  9984  0B88  0008               	return
  9985  0B89                     __end_of_IOCBF0_DefaultInterruptHandler:
  9986                           
  9987                           	psect	text58
  9988  0F06                     __ptext58:	
  9989 ;; *************** function _chegadaS1 *****************
  9990 ;; Defined at:
  9991 ;;		line 234 in file "main.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;		None
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10005 ;;      Params:         0       0       0       0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0
 10007 ;;      Temps:          1       0       0       0       0       0
 10008 ;;      Totals:         1       0       0       0       0       0
 10009 ;;Total ram usage:        1 bytes
 10010 ;; Hardware stack levels used: 1
 10011 ;; Hardware stack levels required when called: 3
 10012 ;; This function calls:
 10013 ;;		_matrixUpdate
 10014 ;; This function is called by:
 10015 ;;		_main
 10016 ;;		_IOCBF0_ISR
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020  0F06                     _chegadaS1:	
 10021                           ;psect for function _chegadaS1
 10022                           
 10023  0F06                     i1l3215:	
 10024                           ;incstack = 0
 10025                           ; Regs used in _chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10026                           
 10027                           
 10028                           ;main.c: 236:     andarAtual = 0;
 10029  0F06  0020               	movlb	0	; select bank0
 10030  0F07  01D9               	clrf	_andarAtual
 10031  0F08                     i1l3217:
 10032                           
 10033                           ;main.c: 240:     MatrixLed[0] = 0b01111110;
 10034  0F08  307E               	movlw	126
 10035  0F09  00FC               	movwf	??_chegadaS1
 10036  0F0A  087C               	movf	??_chegadaS1,w
 10037  0F0B  0021               	movlb	1	; select bank1
 10038  0F0C  00B3               	movwf	_MatrixLed^(0+128)
 10039  0F0D                     i1l3219:
 10040                           
 10041                           ;main.c: 241:     MatrixLed[1] = 0b10000001;
 10042  0F0D  3081               	movlw	129
 10043  0F0E  00FC               	movwf	??_chegadaS1
 10044  0F0F  087C               	movf	??_chegadaS1,w
 10045  0F10  00B4               	movwf	(_MatrixLed^(0+128)+1)
 10046  0F11                     i1l3221:
 10047                           
 10048                           ;main.c: 242:     MatrixLed[2] = 0b10000001;
 10049  0F11  3081               	movlw	129
 10050  0F12  00FC               	movwf	??_chegadaS1
 10051  0F13  087C               	movf	??_chegadaS1,w
 10052  0F14  00B5               	movwf	(_MatrixLed^(0+128)+2)
 10053  0F15                     i1l3223:
 10054                           
 10055                           ;main.c: 243:     MatrixLed[3] = 0b01111110;
 10056  0F15  307E               	movlw	126
 10057  0F16  00FC               	movwf	??_chegadaS1
 10058  0F17  087C               	movf	??_chegadaS1,w
 10059  0F18  00B6               	movwf	(_MatrixLed^(0+128)+3)
 10060                           
 10061                           ;main.c: 244:     MatrixLed[4] = 0;
 10062  0F19  01B7               	clrf	(_MatrixLed^(0+128)+4)
 10063  0F1A                     i1l3225:
 10064                           
 10065                           ;main.c: 245:     if(subindo){
 10066  0F1A  0020               	movlb	0	; select bank0
 10067  0F1B  086B               	movf	_subindo,w
 10068  0F1C  1903               	btfsc	3,2
 10069  0F1D  2F1F               	goto	u206_21
 10070  0F1E  2F20               	goto	u206_20
 10071  0F1F                     u206_21:
 10072  0F1F  2F33               	goto	i1l3231
 10073  0F20                     u206_20:
 10074  0F20                     i1l3227:
 10075                           
 10076                           ;main.c: 246:         MatrixLed[5] = 0b01100000;
 10077  0F20  3060               	movlw	96
 10078  0F21  00FC               	movwf	??_chegadaS1
 10079  0F22  087C               	movf	??_chegadaS1,w
 10080  0F23  0021               	movlb	1	; select bank1
 10081  0F24  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10082                           
 10083                           ;main.c: 247:         MatrixLed[6] = 0b11000000;
 10084  0F25  30C0               	movlw	192
 10085  0F26  00FC               	movwf	??_chegadaS1
 10086  0F27  087C               	movf	??_chegadaS1,w
 10087  0F28  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10088                           
 10089                           ;main.c: 248:         MatrixLed[7] = 0b01100000;
 10090  0F29  3060               	movlw	96
 10091  0F2A  00FC               	movwf	??_chegadaS1
 10092  0F2B  087C               	movf	??_chegadaS1,w
 10093  0F2C  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10094  0F2D                     i1l3229:
 10095                           
 10096                           ;main.c: 249:         destinoSub = destinoSub & 0b11111110;
 10097  0F2D  083C               	movf	_destinoSub^(0+128),w
 10098  0F2E  39FE               	andlw	254
 10099  0F2F  00FC               	movwf	??_chegadaS1
 10100  0F30  087C               	movf	??_chegadaS1,w
 10101  0F31  00BC               	movwf	_destinoSub^(0+128)
 10102                           
 10103                           ;main.c: 250:     }else{
 10104  0F32  2F46               	goto	i1l3235
 10105  0F33                     i1l3231:
 10106                           
 10107                           ;main.c: 251:         MatrixLed[5] = 0b11000000;
 10108  0F33  30C0               	movlw	192
 10109  0F34  00FC               	movwf	??_chegadaS1
 10110  0F35  087C               	movf	??_chegadaS1,w
 10111  0F36  0021               	movlb	1	; select bank1
 10112  0F37  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10113                           
 10114                           ;main.c: 252:         MatrixLed[6] = 0b01100000;
 10115  0F38  3060               	movlw	96
 10116  0F39  00FC               	movwf	??_chegadaS1
 10117  0F3A  087C               	movf	??_chegadaS1,w
 10118  0F3B  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10119                           
 10120                           ;main.c: 253:         MatrixLed[7] = 0b11000000;
 10121  0F3C  30C0               	movlw	192
 10122  0F3D  00FC               	movwf	??_chegadaS1
 10123  0F3E  087C               	movf	??_chegadaS1,w
 10124  0F3F  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10125  0F40                     i1l3233:
 10126                           
 10127                           ;main.c: 254:         destinoDesc = destinoDesc & 0b11111110;
 10128  0F40  083B               	movf	_destinoDesc^(0+128),w
 10129  0F41  39FE               	andlw	254
 10130  0F42  00FC               	movwf	??_chegadaS1
 10131  0F43  087C               	movf	??_chegadaS1,w
 10132  0F44  00BB               	movwf	_destinoDesc^(0+128)
 10133                           
 10134                           ;main.c: 255:         mov = Repouso;
 10135  0F45  01CA               	clrf	_mov^(0+128)
 10136  0F46                     i1l3235:
 10137                           
 10138                           ;main.c: 257:     matrixUpdate();
 10139  0F46  318D  259F  318F   	fcall	_matrixUpdate
 10140  0F49                     i1l3237:
 10141                           
 10142                           ;main.c: 259:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 10143  0F49  0021               	movlb	1	; select bank1
 10144  0F4A  083A               	movf	(_MatrixLed^(0+128)+7),w
 10145  0F4B  043C               	iorwf	_destinoSub^(0+128),w
 10146  0F4C  00FC               	movwf	??_chegadaS1
 10147  0F4D  087C               	movf	??_chegadaS1,w
 10148  0F4E  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10149  0F4F                     i1l3239:
 10150                           
 10151                           ;main.c: 260:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 10152  0F4F  0839               	movf	(_MatrixLed^(0+128)+6),w
 10153  0F50  043B               	iorwf	_destinoDesc^(0+128),w
 10154  0F51  00FC               	movwf	??_chegadaS1
 10155  0F52  087C               	movf	??_chegadaS1,w
 10156  0F53  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10157  0F54                     i1l863:
 10158  0F54  0008               	return
 10159  0F55                     __end_of_chegadaS1:
 10160                           
 10161                           	psect	text59
 10162  0BAA                     __ptext59:	
 10163 ;; *************** function _CMP2_ISR *****************
 10164 ;; Defined at:
 10165 ;;		line 86 in file "mcc_generated_files/cmp2.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;		None
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;		None
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      void 
 10172 ;; Registers used:
 10173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10179 ;;      Params:         0       0       0       0       0       0
 10180 ;;      Locals:         0       0       0       0       0       0
 10181 ;;      Temps:          0       0       0       0       0       0
 10182 ;;      Totals:         0       0       0       0       0       0
 10183 ;;Total ram usage:        0 bytes
 10184 ;; Hardware stack levels used: 1
 10185 ;; Hardware stack levels required when called: 4
 10186 ;; This function calls:
 10187 ;;		_chegadaS4
 10188 ;; This function is called by:
 10189 ;;		_INTERRUPT_InterruptManager
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193  0BAA                     _CMP2_ISR:	
 10194                           ;psect for function _CMP2_ISR
 10195                           
 10196  0BAA                     i1l3539:	
 10197                           ;incstack = 0
 10198                           ; Regs used in _CMP2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10199                           
 10200                           
 10201                           ;mcc_generated_files/cmp2.c: 89:     PIR2bits.C2IF = 0;
 10202  0BAA  0020               	movlb	0	; select bank0
 10203  0BAB  1312               	bcf	18,6	;volatile
 10204  0BAC                     i1l3541:
 10205                           
 10206                           ;mcc_generated_files/cmp2.c: 90:     chegadaS4();
 10207  0BAC  3185  259A  318B   	fcall	_chegadaS4
 10208  0BAF                     i1l81:
 10209  0BAF  0008               	return
 10210  0BB0                     __end_of_CMP2_ISR:
 10211                           
 10212                           	psect	text60
 10213  059A                     __ptext60:	
 10214 ;; *************** function _chegadaS4 *****************
 10215 ;; Defined at:
 10216 ;;		line 343 in file "main.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;		None
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;		None
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      void 
 10223 ;; Registers used:
 10224 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10230 ;;      Params:         0       0       0       0       0       0
 10231 ;;      Locals:         0       0       0       0       0       0
 10232 ;;      Temps:          1       0       0       0       0       0
 10233 ;;      Totals:         1       0       0       0       0       0
 10234 ;;Total ram usage:        1 bytes
 10235 ;; Hardware stack levels used: 1
 10236 ;; Hardware stack levels required when called: 3
 10237 ;; This function calls:
 10238 ;;		_PWM3_LoadDutyValue
 10239 ;;		_TMR4_StartTimer
 10240 ;;		_matrixUpdate
 10241 ;;		i1_TMR4_WriteTimer
 10242 ;; This function is called by:
 10243 ;;		_CMP2_ISR
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247  059A                     _chegadaS4:	
 10248                           ;psect for function _chegadaS4
 10249                           
 10250  059A                     i1l3301:	
 10251                           ;incstack = 0
 10252                           ; Regs used in _chegadaS4: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10253                           
 10254                           
 10255                           ;main.c: 345:     andarAtual = 3;
 10256  059A  3003               	movlw	3
 10257  059B  00FC               	movwf	??_chegadaS4
 10258  059C  087C               	movf	??_chegadaS4,w
 10259  059D  0020               	movlb	0	; select bank0
 10260  059E  00D9               	movwf	_andarAtual
 10261  059F                     i1l3303:
 10262                           
 10263                           ;main.c: 348:     if((((destinoSub & 0b00001000) == 8 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00001000) == 8 )) ){
 10264  059F  0021               	movlb	1	; select bank1
 10265  05A0  1DBC               	btfss	_destinoSub^(0+128),3
 10266  05A1  2DA3               	goto	u213_21
 10267  05A2  2DA4               	goto	u213_20
 10268  05A3                     u213_21:
 10269  05A3  2DAA               	goto	i1l3307
 10270  05A4                     u213_20:
 10271  05A4                     i1l3305:
 10272  05A4  0020               	movlb	0	; select bank0
 10273  05A5  086B               	movf	_subindo,w
 10274  05A6  1D03               	btfss	3,2
 10275  05A7  2DA9               	goto	u214_21
 10276  05A8  2DAA               	goto	u214_20
 10277  05A9                     u214_21:
 10278  05A9  2DB5               	goto	i1l3311
 10279  05AA                     u214_20:
 10280  05AA                     i1l3307:
 10281  05AA  0020               	movlb	0	; select bank0
 10282  05AB  086B               	movf	_subindo,w
 10283  05AC  1D03               	btfss	3,2
 10284  05AD  2DAF               	goto	u215_21
 10285  05AE  2DB0               	goto	u215_20
 10286  05AF                     u215_21:
 10287  05AF  2DC2               	goto	i1l888
 10288  05B0                     u215_20:
 10289  05B0                     i1l3309:
 10290  05B0  0021               	movlb	1	; select bank1
 10291  05B1  1DBB               	btfss	_destinoDesc^(0+128),3
 10292  05B2  2DB4               	goto	u216_21
 10293  05B3  2DB5               	goto	u216_20
 10294  05B4                     u216_21:
 10295  05B4  2DC2               	goto	i1l888
 10296  05B5                     u216_20:
 10297  05B5                     i1l3311:
 10298                           
 10299                           ;main.c: 349:         PWM3_LoadDutyValue(0);
 10300  05B5  3000               	movlw	0
 10301  05B6  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 10302  05B7  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 10303  05B8  318D  251E  3185   	fcall	_PWM3_LoadDutyValue
 10304                           
 10305                           ;main.c: 350:         TMR4_WriteTimer(0);
 10306  05BB  3000               	movlw	0
 10307  05BC  318B  239A  3185   	fcall	i1_TMR4_WriteTimer
 10308  05BF                     i1l3313:
 10309                           
 10310                           ;main.c: 351:         TMR4_StartTimer();
 10311  05BF  318B  238C  3185   	fcall	_TMR4_StartTimer
 10312  05C2                     i1l888:	
 10313                           ;main.c: 352:     }
 10314                           
 10315                           
 10316                           ;main.c: 355:     MatrixLed[0] = 0b10000001;
 10317  05C2  3081               	movlw	129
 10318  05C3  00FC               	movwf	??_chegadaS4
 10319  05C4  087C               	movf	??_chegadaS4,w
 10320  05C5  0021               	movlb	1	; select bank1
 10321  05C6  00B3               	movwf	_MatrixLed^(0+128)
 10322                           
 10323                           ;main.c: 356:     MatrixLed[1] = 0b10010001;
 10324  05C7  3091               	movlw	145
 10325  05C8  00FC               	movwf	??_chegadaS4
 10326  05C9  087C               	movf	??_chegadaS4,w
 10327  05CA  00B4               	movwf	(_MatrixLed^(0+128)+1)
 10328                           
 10329                           ;main.c: 357:     MatrixLed[2] = 0b10010001;
 10330  05CB  3091               	movlw	145
 10331  05CC  00FC               	movwf	??_chegadaS4
 10332  05CD  087C               	movf	??_chegadaS4,w
 10333  05CE  00B5               	movwf	(_MatrixLed^(0+128)+2)
 10334                           
 10335                           ;main.c: 358:     MatrixLed[3] = 0b01101110;
 10336  05CF  306E               	movlw	110
 10337  05D0  00FC               	movwf	??_chegadaS4
 10338  05D1  087C               	movf	??_chegadaS4,w
 10339  05D2  00B6               	movwf	(_MatrixLed^(0+128)+3)
 10340  05D3                     i1l3315:
 10341                           
 10342                           ;main.c: 359:     MatrixLed[4] = 0;
 10343  05D3  01B7               	clrf	(_MatrixLed^(0+128)+4)
 10344  05D4                     i1l3317:
 10345                           
 10346                           ;main.c: 360:     if(subindo){
 10347  05D4  0020               	movlb	0	; select bank0
 10348  05D5  086B               	movf	_subindo,w
 10349  05D6  1903               	btfsc	3,2
 10350  05D7  2DD9               	goto	u217_21
 10351  05D8  2DDA               	goto	u217_20
 10352  05D9                     u217_21:
 10353  05D9  2DED               	goto	i1l3323
 10354  05DA                     u217_20:
 10355  05DA                     i1l3319:
 10356                           
 10357                           ;main.c: 361:         MatrixLed[5] = 0b01100000;
 10358  05DA  3060               	movlw	96
 10359  05DB  00FC               	movwf	??_chegadaS4
 10360  05DC  087C               	movf	??_chegadaS4,w
 10361  05DD  0021               	movlb	1	; select bank1
 10362  05DE  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10363                           
 10364                           ;main.c: 362:         MatrixLed[6] = 0b11000000;
 10365  05DF  30C0               	movlw	192
 10366  05E0  00FC               	movwf	??_chegadaS4
 10367  05E1  087C               	movf	??_chegadaS4,w
 10368  05E2  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10369                           
 10370                           ;main.c: 363:         MatrixLed[7] = 0b01100000;
 10371  05E3  3060               	movlw	96
 10372  05E4  00FC               	movwf	??_chegadaS4
 10373  05E5  087C               	movf	??_chegadaS4,w
 10374  05E6  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10375  05E7                     i1l3321:
 10376                           
 10377                           ;main.c: 364:         destinoSub = destinoSub & 0b11110111;
 10378  05E7  083C               	movf	_destinoSub^(0+128),w
 10379  05E8  39F7               	andlw	247
 10380  05E9  00FC               	movwf	??_chegadaS4
 10381  05EA  087C               	movf	??_chegadaS4,w
 10382  05EB  00BC               	movwf	_destinoSub^(0+128)
 10383                           
 10384                           ;main.c: 365:     }else{
 10385  05EC  2DFF               	goto	i1l3327
 10386  05ED                     i1l3323:
 10387                           
 10388                           ;main.c: 366:         MatrixLed[5] = 0b11000000;
 10389  05ED  30C0               	movlw	192
 10390  05EE  00FC               	movwf	??_chegadaS4
 10391  05EF  087C               	movf	??_chegadaS4,w
 10392  05F0  0021               	movlb	1	; select bank1
 10393  05F1  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10394                           
 10395                           ;main.c: 367:         MatrixLed[6] = 0b01100000;
 10396  05F2  3060               	movlw	96
 10397  05F3  00FC               	movwf	??_chegadaS4
 10398  05F4  087C               	movf	??_chegadaS4,w
 10399  05F5  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10400                           
 10401                           ;main.c: 368:         MatrixLed[7] = 0b11000000;
 10402  05F6  30C0               	movlw	192
 10403  05F7  00FC               	movwf	??_chegadaS4
 10404  05F8  087C               	movf	??_chegadaS4,w
 10405  05F9  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10406  05FA                     i1l3325:
 10407                           
 10408                           ;main.c: 369:         destinoDesc = destinoDesc & 0b11110111;
 10409  05FA  083B               	movf	_destinoDesc^(0+128),w
 10410  05FB  39F7               	andlw	247
 10411  05FC  00FC               	movwf	??_chegadaS4
 10412  05FD  087C               	movf	??_chegadaS4,w
 10413  05FE  00BB               	movwf	_destinoDesc^(0+128)
 10414  05FF                     i1l3327:
 10415                           
 10416                           ;main.c: 371:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 10417  05FF  083A               	movf	(_MatrixLed^(0+128)+7),w
 10418  0600  043C               	iorwf	_destinoSub^(0+128),w
 10419  0601  00FC               	movwf	??_chegadaS4
 10420  0602  087C               	movf	??_chegadaS4,w
 10421  0603  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10422  0604                     i1l3329:
 10423                           
 10424                           ;main.c: 372:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 10425  0604  0839               	movf	(_MatrixLed^(0+128)+6),w
 10426  0605  043B               	iorwf	_destinoDesc^(0+128),w
 10427  0606  00FC               	movwf	??_chegadaS4
 10428  0607  087C               	movf	??_chegadaS4,w
 10429  0608  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10430  0609                     i1l3331:
 10431                           
 10432                           ;main.c: 373:     matrixUpdate();
 10433  0609  318D  259F  3185   	fcall	_matrixUpdate
 10434  060C                     i1l3333:
 10435                           
 10436                           ;main.c: 376:     if(destinoDesc ==0 && destinoSub == 0){
 10437  060C  0021               	movlb	1	; select bank1
 10438  060D  083B               	movf	_destinoDesc^(0+128),w
 10439  060E  1D03               	btfss	3,2
 10440  060F  2E11               	goto	u218_21
 10441  0610  2E12               	goto	u218_20
 10442  0611                     u218_21:
 10443  0611  2E1B               	goto	i1l896
 10444  0612                     u218_20:
 10445  0612                     i1l3335:
 10446  0612  083C               	movf	_destinoSub^(0+128),w
 10447  0613  1D03               	btfss	3,2
 10448  0614  2E16               	goto	u219_21
 10449  0615  2E17               	goto	u219_20
 10450  0616                     u219_21:
 10451  0616  2E1B               	goto	i1l896
 10452  0617                     u219_20:
 10453  0617                     i1l3337:
 10454                           
 10455                           ;main.c: 377:         mov = RetornaS0;
 10456  0617  3003               	movlw	3
 10457  0618  00FC               	movwf	??_chegadaS4
 10458  0619  087C               	movf	??_chegadaS4,w
 10459  061A  00CA               	movwf	_mov^(0+128)
 10460  061B                     i1l896:
 10461  061B  0008               	return
 10462  061C                     __end_of_chegadaS4:
 10463                           
 10464                           	psect	text61
 10465  0BA4                     __ptext61:	
 10466 ;; *************** function _CMP1_ISR *****************
 10467 ;; Defined at:
 10468 ;;		line 86 in file "mcc_generated_files/cmp1.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;		None
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;		None
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  1    wreg      void 
 10475 ;; Registers used:
 10476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10482 ;;      Params:         0       0       0       0       0       0
 10483 ;;      Locals:         0       0       0       0       0       0
 10484 ;;      Temps:          0       0       0       0       0       0
 10485 ;;      Totals:         0       0       0       0       0       0
 10486 ;;Total ram usage:        0 bytes
 10487 ;; Hardware stack levels used: 1
 10488 ;; Hardware stack levels required when called: 4
 10489 ;; This function calls:
 10490 ;;		_chegadaS3
 10491 ;; This function is called by:
 10492 ;;		_INTERRUPT_InterruptManager
 10493 ;; This function uses a non-reentrant model
 10494 ;;
 10495                           
 10496  0BA4                     _CMP1_ISR:	
 10497                           ;psect for function _CMP1_ISR
 10498                           
 10499  0BA4                     i1l3543:	
 10500                           ;incstack = 0
 10501                           ; Regs used in _CMP1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10502                           
 10503                           
 10504                           ;mcc_generated_files/cmp1.c: 89:     PIR2bits.C1IF = 0;
 10505  0BA4  0020               	movlb	0	; select bank0
 10506  0BA5  1292               	bcf	18,5	;volatile
 10507  0BA6                     i1l3545:
 10508                           
 10509                           ;mcc_generated_files/cmp1.c: 90:     chegadaS3();
 10510  0BA6  3186  261C  318B   	fcall	_chegadaS3
 10511  0BA9                     i1l148:
 10512  0BA9  0008               	return
 10513  0BAA                     __end_of_CMP1_ISR:
 10514                           
 10515                           	psect	text62
 10516  061C                     __ptext62:	
 10517 ;; *************** function _chegadaS3 *****************
 10518 ;; Defined at:
 10519 ;;		line 304 in file "main.c"
 10520 ;; Parameters:    Size  Location     Type
 10521 ;;		None
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;		None
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  1    wreg      void 
 10526 ;; Registers used:
 10527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10533 ;;      Params:         0       0       0       0       0       0
 10534 ;;      Locals:         0       0       0       0       0       0
 10535 ;;      Temps:          1       0       0       0       0       0
 10536 ;;      Totals:         1       0       0       0       0       0
 10537 ;;Total ram usage:        1 bytes
 10538 ;; Hardware stack levels used: 1
 10539 ;; Hardware stack levels required when called: 3
 10540 ;; This function calls:
 10541 ;;		_PWM3_LoadDutyValue
 10542 ;;		_TMR4_StartTimer
 10543 ;;		_matrixUpdate
 10544 ;;		i1_TMR4_WriteTimer
 10545 ;; This function is called by:
 10546 ;;		_CMP1_ISR
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550  061C                     _chegadaS3:	
 10551                           ;psect for function _chegadaS3
 10552                           
 10553  061C                     i1l3347:	
 10554                           ;incstack = 0
 10555                           ; Regs used in _chegadaS3: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10556                           
 10557                           
 10558                           ;main.c: 306:     andarAtual = 2;
 10559  061C  3002               	movlw	2
 10560  061D  00FC               	movwf	??_chegadaS3
 10561  061E  087C               	movf	??_chegadaS3,w
 10562  061F  0020               	movlb	0	; select bank0
 10563  0620  00D9               	movwf	_andarAtual
 10564  0621                     i1l3349:
 10565                           
 10566                           ;main.c: 309:     if((((destinoSub & 0b00000100) == 4 )&& subindo)||(!subindo &&((destin
      +                          oDesc & 0b00000100) == 4 )) ){
 10567  0621  0021               	movlb	1	; select bank1
 10568  0622  1D3C               	btfss	_destinoSub^(0+128),2
 10569  0623  2E25               	goto	u220_21
 10570  0624  2E26               	goto	u220_20
 10571  0625                     u220_21:
 10572  0625  2E2C               	goto	i1l3353
 10573  0626                     u220_20:
 10574  0626                     i1l3351:
 10575  0626  0020               	movlb	0	; select bank0
 10576  0627  086B               	movf	_subindo,w
 10577  0628  1D03               	btfss	3,2
 10578  0629  2E2B               	goto	u221_21
 10579  062A  2E2C               	goto	u221_20
 10580  062B                     u221_21:
 10581  062B  2E37               	goto	i1l3357
 10582  062C                     u221_20:
 10583  062C                     i1l3353:
 10584  062C  0020               	movlb	0	; select bank0
 10585  062D  086B               	movf	_subindo,w
 10586  062E  1D03               	btfss	3,2
 10587  062F  2E31               	goto	u222_21
 10588  0630  2E32               	goto	u222_20
 10589  0631                     u222_21:
 10590  0631  2E44               	goto	i1l877
 10591  0632                     u222_20:
 10592  0632                     i1l3355:
 10593  0632  0021               	movlb	1	; select bank1
 10594  0633  1D3B               	btfss	_destinoDesc^(0+128),2
 10595  0634  2E36               	goto	u223_21
 10596  0635  2E37               	goto	u223_20
 10597  0636                     u223_21:
 10598  0636  2E44               	goto	i1l877
 10599  0637                     u223_20:
 10600  0637                     i1l3357:
 10601                           
 10602                           ;main.c: 310:         PWM3_LoadDutyValue(0);
 10603  0637  3000               	movlw	0
 10604  0638  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 10605  0639  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 10606  063A  318D  251E  3186   	fcall	_PWM3_LoadDutyValue
 10607                           
 10608                           ;main.c: 311:         TMR4_WriteTimer(0);
 10609  063D  3000               	movlw	0
 10610  063E  318B  239A  3186   	fcall	i1_TMR4_WriteTimer
 10611  0641                     i1l3359:
 10612                           
 10613                           ;main.c: 312:         TMR4_StartTimer();
 10614  0641  318B  238C  3186   	fcall	_TMR4_StartTimer
 10615  0644                     i1l877:	
 10616                           ;main.c: 313:     }
 10617                           
 10618                           
 10619                           ;main.c: 316:     MatrixLed[0] = 0b01000011;
 10620  0644  3043               	movlw	67
 10621  0645  00FC               	movwf	??_chegadaS3
 10622  0646  087C               	movf	??_chegadaS3,w
 10623  0647  0021               	movlb	1	; select bank1
 10624  0648  00B3               	movwf	_MatrixLed^(0+128)
 10625                           
 10626                           ;main.c: 317:     MatrixLed[1] = 0b10000101;
 10627  0649  3085               	movlw	133
 10628  064A  00FC               	movwf	??_chegadaS3
 10629  064B  087C               	movf	??_chegadaS3,w
 10630  064C  00B4               	movwf	(_MatrixLed^(0+128)+1)
 10631                           
 10632                           ;main.c: 318:     MatrixLed[2] = 0b10001001;
 10633  064D  3089               	movlw	137
 10634  064E  00FC               	movwf	??_chegadaS3
 10635  064F  087C               	movf	??_chegadaS3,w
 10636  0650  00B5               	movwf	(_MatrixLed^(0+128)+2)
 10637                           
 10638                           ;main.c: 319:     MatrixLed[3] = 0b01110001;
 10639  0651  3071               	movlw	113
 10640  0652  00FC               	movwf	??_chegadaS3
 10641  0653  087C               	movf	??_chegadaS3,w
 10642  0654  00B6               	movwf	(_MatrixLed^(0+128)+3)
 10643  0655                     i1l3361:
 10644                           
 10645                           ;main.c: 320:     MatrixLed[4] = 0;
 10646  0655  01B7               	clrf	(_MatrixLed^(0+128)+4)
 10647  0656                     i1l3363:
 10648                           
 10649                           ;main.c: 321:     if(subindo){
 10650  0656  0020               	movlb	0	; select bank0
 10651  0657  086B               	movf	_subindo,w
 10652  0658  1903               	btfsc	3,2
 10653  0659  2E5B               	goto	u224_21
 10654  065A  2E5C               	goto	u224_20
 10655  065B                     u224_21:
 10656  065B  2E6F               	goto	i1l3369
 10657  065C                     u224_20:
 10658  065C                     i1l3365:
 10659                           
 10660                           ;main.c: 322:         MatrixLed[5] = 0b01100000;
 10661  065C  3060               	movlw	96
 10662  065D  00FC               	movwf	??_chegadaS3
 10663  065E  087C               	movf	??_chegadaS3,w
 10664  065F  0021               	movlb	1	; select bank1
 10665  0660  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10666                           
 10667                           ;main.c: 323:         MatrixLed[6] = 0b11000000;
 10668  0661  30C0               	movlw	192
 10669  0662  00FC               	movwf	??_chegadaS3
 10670  0663  087C               	movf	??_chegadaS3,w
 10671  0664  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10672                           
 10673                           ;main.c: 324:         MatrixLed[7] = 0b01100000;
 10674  0665  3060               	movlw	96
 10675  0666  00FC               	movwf	??_chegadaS3
 10676  0667  087C               	movf	??_chegadaS3,w
 10677  0668  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10678  0669                     i1l3367:
 10679                           
 10680                           ;main.c: 325:         destinoSub = destinoSub & 0b11111011;
 10681  0669  083C               	movf	_destinoSub^(0+128),w
 10682  066A  39FB               	andlw	251
 10683  066B  00FC               	movwf	??_chegadaS3
 10684  066C  087C               	movf	??_chegadaS3,w
 10685  066D  00BC               	movwf	_destinoSub^(0+128)
 10686                           
 10687                           ;main.c: 326:     }else{
 10688  066E  2E81               	goto	i1l3373
 10689  066F                     i1l3369:
 10690                           
 10691                           ;main.c: 327:         MatrixLed[5] = 0b11000000;
 10692  066F  30C0               	movlw	192
 10693  0670  00FC               	movwf	??_chegadaS3
 10694  0671  087C               	movf	??_chegadaS3,w
 10695  0672  0021               	movlb	1	; select bank1
 10696  0673  00B8               	movwf	(_MatrixLed^(0+128)+5)
 10697                           
 10698                           ;main.c: 328:         MatrixLed[6] = 0b01100000;
 10699  0674  3060               	movlw	96
 10700  0675  00FC               	movwf	??_chegadaS3
 10701  0676  087C               	movf	??_chegadaS3,w
 10702  0677  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10703                           
 10704                           ;main.c: 329:         MatrixLed[7] = 0b11000000;
 10705  0678  30C0               	movlw	192
 10706  0679  00FC               	movwf	??_chegadaS3
 10707  067A  087C               	movf	??_chegadaS3,w
 10708  067B  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10709  067C                     i1l3371:
 10710                           
 10711                           ;main.c: 330:         destinoDesc = destinoDesc & 0b11111011;
 10712  067C  083B               	movf	_destinoDesc^(0+128),w
 10713  067D  39FB               	andlw	251
 10714  067E  00FC               	movwf	??_chegadaS3
 10715  067F  087C               	movf	??_chegadaS3,w
 10716  0680  00BB               	movwf	_destinoDesc^(0+128)
 10717  0681                     i1l3373:
 10718                           
 10719                           ;main.c: 332:     MatrixLed[7] = MatrixLed[7] | destinoSub;
 10720  0681  083A               	movf	(_MatrixLed^(0+128)+7),w
 10721  0682  043C               	iorwf	_destinoSub^(0+128),w
 10722  0683  00FC               	movwf	??_chegadaS3
 10723  0684  087C               	movf	??_chegadaS3,w
 10724  0685  00BA               	movwf	(_MatrixLed^(0+128)+7)
 10725  0686                     i1l3375:
 10726                           
 10727                           ;main.c: 333:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
 10728  0686  0839               	movf	(_MatrixLed^(0+128)+6),w
 10729  0687  043B               	iorwf	_destinoDesc^(0+128),w
 10730  0688  00FC               	movwf	??_chegadaS3
 10731  0689  087C               	movf	??_chegadaS3,w
 10732  068A  00B9               	movwf	(_MatrixLed^(0+128)+6)
 10733  068B                     i1l3377:
 10734                           
 10735                           ;main.c: 334:     matrixUpdate();
 10736  068B  318D  259F  3186   	fcall	_matrixUpdate
 10737  068E                     i1l3379:
 10738                           
 10739                           ;main.c: 337:     if(destinoDesc ==0 && destinoSub == 0){
 10740  068E  0021               	movlb	1	; select bank1
 10741  068F  083B               	movf	_destinoDesc^(0+128),w
 10742  0690  1D03               	btfss	3,2
 10743  0691  2E93               	goto	u225_21
 10744  0692  2E94               	goto	u225_20
 10745  0693                     u225_21:
 10746  0693  2E9D               	goto	i1l885
 10747  0694                     u225_20:
 10748  0694                     i1l3381:
 10749  0694  083C               	movf	_destinoSub^(0+128),w
 10750  0695  1D03               	btfss	3,2
 10751  0696  2E98               	goto	u226_21
 10752  0697  2E99               	goto	u226_20
 10753  0698                     u226_21:
 10754  0698  2E9D               	goto	i1l885
 10755  0699                     u226_20:
 10756  0699                     i1l3383:
 10757                           
 10758                           ;main.c: 338:         mov = RetornaS0;
 10759  0699  3003               	movlw	3
 10760  069A  00FC               	movwf	??_chegadaS3
 10761  069B  087C               	movf	??_chegadaS3,w
 10762  069C  00CA               	movwf	_mov^(0+128)
 10763  069D                     i1l885:
 10764  069D  0008               	return
 10765  069E                     __end_of_chegadaS3:
 10766                           
 10767                           	psect	text63
 10768  0B9A                     __ptext63:	
 10769 ;; *************** function i1_TMR4_WriteTimer *****************
 10770 ;; Defined at:
 10771 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;  timerVal        1    wreg     unsigned char 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;  timerVal        1    0[COMMON] unsigned char 
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      void 
 10778 ;; Registers used:
 10779 ;;		wreg
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10785 ;;      Params:         0       0       0       0       0       0
 10786 ;;      Locals:         1       0       0       0       0       0
 10787 ;;      Temps:          0       0       0       0       0       0
 10788 ;;      Totals:         1       0       0       0       0       0
 10789 ;;Total ram usage:        1 bytes
 10790 ;; Hardware stack levels used: 1
 10791 ;; This function calls:
 10792 ;;		Nothing
 10793 ;; This function is called by:
 10794 ;;		_chegadaS2
 10795 ;;		_chegadaS3
 10796 ;;		_chegadaS4
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800  0B9A                     i1_TMR4_WriteTimer:	
 10801                           ;psect for function i1_TMR4_WriteTimer
 10802                           
 10803                           
 10804                           ;incstack = 0
 10805                           ; Regs used in i1_TMR4_WriteTimer: [wreg]
 10806                           ;i1TMR4_WriteTimer@timerVal stored from wreg
 10807  0B9A  00F0               	movwf	i1TMR4_WriteTimer@timerVal
 10808  0B9B                     i1l3113:
 10809                           
 10810                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
 10811  0B9B  0870               	movf	i1TMR4_WriteTimer@timerVal,w
 10812  0B9C  0028               	movlb	8	; select bank8
 10813  0B9D  0095               	movwf	21	;volatile
 10814  0B9E                     i1l682:
 10815  0B9E  0008               	return
 10816  0B9F                     __end_ofi1_TMR4_WriteTimer:
 10817                           
 10818                           	psect	text64
 10819  0D9F                     __ptext64:	
 10820 ;; *************** function _matrixUpdate *****************
 10821 ;; Defined at:
 10822 ;;		line 155 in file "main.c"
 10823 ;; Parameters:    Size  Location     Type
 10824 ;;		None
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;  i               1    0        unsigned char 
 10827 ;;  i               1   11[COMMON] unsigned char 
 10828 ;;  index           1    0        unsigned char 
 10829 ;;  data            2    9[COMMON] unsigned char [2]
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10839 ;;      Params:         0       0       0       0       0       0
 10840 ;;      Locals:         3       0       0       0       0       0
 10841 ;;      Temps:          1       0       0       0       0       0
 10842 ;;      Totals:         4       0       0       0       0       0
 10843 ;;Total ram usage:        4 bytes
 10844 ;; Hardware stack levels used: 1
 10845 ;; Hardware stack levels required when called: 2
 10846 ;; This function calls:
 10847 ;;		i1_txSpi
 10848 ;; This function is called by:
 10849 ;;		_chegadaS1
 10850 ;;		_chegadaS2
 10851 ;;		_chegadaS3
 10852 ;;		_chegadaS4
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856  0D9F                     _matrixUpdate:	
 10857                           ;psect for function _matrixUpdate
 10858                           
 10859  0D9F                     i1l2889:	
 10860                           ;incstack = 0
 10861                           ; Regs used in _matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10862                           
 10863                           
 10864                           ;main.c: 158:         for(uint8_t i=8;i>0;i--){
 10865  0D9F  3008               	movlw	8
 10866  0DA0  00F8               	movwf	??_matrixUpdate
 10867  0DA1  0878               	movf	??_matrixUpdate,w
 10868  0DA2  00FB               	movwf	matrixUpdate@i
 10869  0DA3                     i1l2895:
 10870                           
 10871                           ;main.c: 159:             data[0] = i;
 10872  0DA3  087B               	movf	matrixUpdate@i,w
 10873  0DA4  00F8               	movwf	??_matrixUpdate
 10874  0DA5  0878               	movf	??_matrixUpdate,w
 10875  0DA6  00F9               	movwf	matrixUpdate@data
 10876  0DA7                     i1l2897:
 10877                           
 10878                           ;main.c: 160:             data[1] = MatrixLed[i-1];
 10879  0DA7  087B               	movf	matrixUpdate@i,w
 10880  0DA8  3EB2               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
 10881  0DA9  0086               	movwf	6
 10882  0DAA  0187               	clrf	7
 10883  0DAB  0801               	movf	1,w
 10884  0DAC  00F8               	movwf	??_matrixUpdate
 10885  0DAD  0878               	movf	??_matrixUpdate,w
 10886  0DAE  00FA               	movwf	matrixUpdate@data+1
 10887  0DAF                     i1l2899:
 10888                           
 10889                           ;main.c: 161:             txSpi(data, 2);
 10890  0DAF  3002               	movlw	2
 10891  0DB0  00F5               	movwf	i1txSpi@dataSize
 10892  0DB1  3000               	movlw	0
 10893  0DB2  00F6               	movwf	i1txSpi@dataSize+1
 10894  0DB3  3079               	movlw	(low (matrixUpdate@data| 0))& (0+255)
 10895  0DB4  318C  2462  318D   	fcall	i1_txSpi
 10896  0DB7                     i1l2901:
 10897                           
 10898                           ;main.c: 162:         }
 10899  0DB7  3001               	movlw	1
 10900  0DB8  02FB               	subwf	matrixUpdate@i,f
 10901  0DB9                     i1l2903:
 10902  0DB9  087B               	movf	matrixUpdate@i,w
 10903  0DBA  1D03               	btfss	3,2
 10904  0DBB  2DBD               	goto	u159_21
 10905  0DBC  2DBE               	goto	u159_20
 10906  0DBD                     u159_21:
 10907  0DBD  2DA3               	goto	i1l2895
 10908  0DBE                     u159_20:
 10909  0DBE                     i1l829:
 10910  0DBE  0008               	return
 10911  0DBF                     __end_of_matrixUpdate:
 10912                           
 10913                           	psect	text65
 10914  0C62                     __ptext65:	
 10915 ;; *************** function i1_txSpi *****************
 10916 ;; Defined at:
 10917 ;;		line 147 in file "main.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;  data            1    wreg     PTR unsigned char 
 10920 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10921 ;;  dataSize        2    5[COMMON] unsigned int 
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;  data            1    7[COMMON] PTR unsigned char 
 10924 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10925 ;; Return value:  Size  Location     Type
 10926 ;;                  1    wreg      void 
 10927 ;; Registers used:
 10928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10929 ;; Tracked objects:
 10930 ;;		On entry : 0/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10934 ;;      Params:         2       0       0       0       0       0
 10935 ;;      Locals:         1       0       0       0       0       0
 10936 ;;      Temps:          0       0       0       0       0       0
 10937 ;;      Totals:         3       0       0       0       0       0
 10938 ;;Total ram usage:        3 bytes
 10939 ;; Hardware stack levels used: 1
 10940 ;; Hardware stack levels required when called: 1
 10941 ;; This function calls:
 10942 ;;		i1_SPI1_ExchangeBlock
 10943 ;; This function is called by:
 10944 ;;		_matrixUpdate
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948  0C62                     i1_txSpi:	
 10949                           ;psect for function i1_txSpi
 10950                           
 10951                           
 10952                           ;incstack = 0
 10953                           ; Regs used in i1_txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10954                           ;i1txSpi@data stored from wreg
 10955  0C62  00F7               	movwf	i1txSpi@data
 10956  0C63                     i1l816:	
 10957                           ;main.c: 148:     do { LATBbits.LATB1 = 0; } while(0);
 10958                           
 10959  0C63  0022               	movlb	2	; select bank2
 10960  0C64  108D               	bcf	13,1	;volatile
 10961  0C65                     i1l2837:
 10962                           
 10963                           ;main.c: 149:     SPI1_ExchangeBlock(data,dataSize);
 10964  0C65  0876               	movf	i1txSpi@dataSize+1,w
 10965  0C66  00F1               	movwf	i1SPI1_ExchangeBlock@blockSize+1
 10966  0C67  0875               	movf	i1txSpi@dataSize,w
 10967  0C68  00F0               	movwf	i1SPI1_ExchangeBlock@blockSize
 10968  0C69  0877               	movf	i1txSpi@data,w
 10969  0C6A  318E  2607  318C   	fcall	i1_SPI1_ExchangeBlock
 10970  0C6D                     i1l2839:
 10971  0C6D  0022               	movlb	2	; select bank2
 10972  0C6E  148D               	bsf	13,1	;volatile
 10973  0C6F                     i1l820:
 10974  0C6F  0008               	return
 10975  0C70                     __end_ofi1_txSpi:
 10976                           
 10977                           	psect	text66
 10978  0E07                     __ptext66:	
 10979 ;; *************** function i1_SPI1_ExchangeBlock *****************
 10980 ;; Defined at:
 10981 ;;		line 100 in file "mcc_generated_files/spi1.c"
 10982 ;; Parameters:    Size  Location     Type
 10983 ;;  block           1    wreg     PTR void 
 10984 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10985 ;;  blockSize       2    0[COMMON] unsigned int 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;  block           1    3[COMMON] PTR void 
 10988 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10989 ;;  data            1    4[COMMON] PTR unsigned char 
 10990 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  1    wreg      void 
 10993 ;; Registers used:
 10994 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11000 ;;      Params:         2       0       0       0       0       0
 11001 ;;      Locals:         2       0       0       0       0       0
 11002 ;;      Temps:          1       0       0       0       0       0
 11003 ;;      Totals:         5       0       0       0       0       0
 11004 ;;Total ram usage:        5 bytes
 11005 ;; Hardware stack levels used: 1
 11006 ;; This function calls:
 11007 ;;		Nothing
 11008 ;; This function is called by:
 11009 ;;		i1_txSpi
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013  0E07                     i1_SPI1_ExchangeBlock:	
 11014                           ;psect for function i1_SPI1_ExchangeBlock
 11015                           
 11016                           
 11017                           ;incstack = 0
 11018                           ; Regs used in i1_SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
 11019                           ;i1SPI1_ExchangeBlock@block stored from wreg
 11020  0E07  00F3               	movwf	i1SPI1_ExchangeBlock@block
 11021  0E08                     i1l2767:
 11022                           
 11023                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
 11024  0E08  0873               	movf	i1SPI1_ExchangeBlock@block,w
 11025  0E09  00F2               	movwf	??i1_SPI1_ExchangeBlock
 11026  0E0A  0872               	movf	??i1_SPI1_ExchangeBlock,w
 11027  0E0B  00F4               	movwf	i1SPI1_ExchangeBlock@data
 11028                           
 11029                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 11030  0E0C  2E25               	goto	i1l2775
 11031  0E0D                     i1l2769:
 11032                           
 11033                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
 11034  0E0D  0874               	movf	i1SPI1_ExchangeBlock@data,w
 11035  0E0E  0086               	movwf	6
 11036  0E0F  0187               	clrf	7
 11037  0E10  0801               	movf	1,w
 11038  0E11  0024               	movlb	4	; select bank4
 11039  0E12  0091               	movwf	17	;volatile
 11040  0E13                     i1l444:	
 11041                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
 11042                           
 11043  0E13  0020               	movlb	0	; select bank0
 11044  0E14  1D91               	btfss	17,3	;volatile
 11045  0E15  2E17               	goto	u139_21
 11046  0E16  2E18               	goto	u139_20
 11047  0E17                     u139_21:
 11048  0E17  2E13               	goto	i1l444
 11049  0E18                     u139_20:
 11050  0E18                     i1l446:
 11051                           
 11052                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
 11053  0E18  1191               	bcf	17,3	;volatile
 11054  0E19                     i1l2771:
 11055                           
 11056                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
 11057  0E19  0024               	movlb	4	; select bank4
 11058  0E1A  0811               	movf	17,w	;volatile
 11059  0E1B  00F2               	movwf	??i1_SPI1_ExchangeBlock
 11060  0E1C  0874               	movf	i1SPI1_ExchangeBlock@data,w
 11061  0E1D  0086               	movwf	6
 11062  0E1E  0187               	clrf	7
 11063  0E1F  0872               	movf	??i1_SPI1_ExchangeBlock,w
 11064  0E20  0081               	movwf	1
 11065  0E21                     i1l2773:
 11066  0E21  3001               	movlw	1
 11067  0E22  00F2               	movwf	??i1_SPI1_ExchangeBlock
 11068  0E23  0872               	movf	??i1_SPI1_ExchangeBlock,w
 11069  0E24  07F4               	addwf	i1SPI1_ExchangeBlock@data,f
 11070  0E25                     i1l2775:
 11071                           
 11072                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 11073  0E25  3001               	movlw	1
 11074  0E26  02F0               	subwf	i1SPI1_ExchangeBlock@blockSize,f
 11075  0E27  3000               	movlw	0
 11076  0E28  3BF1               	subwfb	i1SPI1_ExchangeBlock@blockSize+1,f
 11077  0E29  0A70               	incf	i1SPI1_ExchangeBlock@blockSize,w
 11078  0E2A  1D03               	skipz
 11079  0E2B  2E30               	goto	u140_21
 11080  0E2C  0A71               	incf	i1SPI1_ExchangeBlock@blockSize+1,w
 11081  0E2D  1D03               	btfss	3,2
 11082  0E2E  2E30               	goto	u140_21
 11083  0E2F  2E31               	goto	u140_20
 11084  0E30                     u140_21:
 11085  0E30  2E0D               	goto	i1l2769
 11086  0E31                     u140_20:
 11087  0E31                     i1l448:
 11088  0E31  0008               	return
 11089  0E32                     __end_ofi1_SPI1_ExchangeBlock:
 11090                           
 11091                           	psect	text67
 11092  0B8C                     __ptext67:	
 11093 ;; *************** function _TMR4_StartTimer *****************
 11094 ;; Defined at:
 11095 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;		None
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;		None
 11100 ;; Return value:  Size  Location     Type
 11101 ;;                  1    wreg      void 
 11102 ;; Registers used:
 11103 ;;		None
 11104 ;; Tracked objects:
 11105 ;;		On entry : 0/0
 11106 ;;		On exit  : 0/0
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11109 ;;      Params:         0       0       0       0       0       0
 11110 ;;      Locals:         0       0       0       0       0       0
 11111 ;;      Temps:          0       0       0       0       0       0
 11112 ;;      Totals:         0       0       0       0       0       0
 11113 ;;Total ram usage:        0 bytes
 11114 ;; Hardware stack levels used: 1
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_chegadaS2
 11119 ;;		_chegadaS3
 11120 ;;		_chegadaS4
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124  0B8C                     _TMR4_StartTimer:	
 11125                           ;psect for function _TMR4_StartTimer
 11126                           
 11127  0B8C                     i1l2859:	
 11128                           ;incstack = 0
 11129                           ; Regs used in _TMR4_StartTimer: []
 11130                           
 11131                           
 11132                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 11133  0B8C  0028               	movlb	8	; select bank8
 11134  0B8D  1517               	bsf	23,2	;volatile
 11135  0B8E                     i1l673:
 11136  0B8E  0008               	return
 11137  0B8F                     __end_of_TMR4_StartTimer:
 11138                           
 11139                           	psect	text68
 11140  0D1E                     __ptext68:	
 11141 ;; *************** function _PWM3_LoadDutyValue *****************
 11142 ;; Defined at:
 11143 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;  dutyValue       2    0[COMMON] unsigned short 
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;		None
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1    wreg      void 
 11150 ;; Registers used:
 11151 ;;		wreg, status,2, status,0
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11157 ;;      Params:         2       0       0       0       0       0
 11158 ;;      Locals:         0       0       0       0       0       0
 11159 ;;      Temps:          2       0       0       0       0       0
 11160 ;;      Totals:         4       0       0       0       0       0
 11161 ;;Total ram usage:        4 bytes
 11162 ;; Hardware stack levels used: 1
 11163 ;; This function calls:
 11164 ;;		Nothing
 11165 ;; This function is called by:
 11166 ;;		_controleMovimento
 11167 ;;		_chegadaS2
 11168 ;;		_chegadaS3
 11169 ;;		_chegadaS4
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173  0D1E                     _PWM3_LoadDutyValue:	
 11174                           ;psect for function _PWM3_LoadDutyValue
 11175                           
 11176  0D1E                     i1l2841:	
 11177                           ;incstack = 0
 11178                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 11179                           
 11180                           
 11181                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
 11182  0D1E  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 11183  0D1F  00F3               	movwf	??_PWM3_LoadDutyValue+1
 11184  0D20  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 11185  0D21  00F2               	movwf	??_PWM3_LoadDutyValue
 11186  0D22  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 11187  0D23  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 11188  0D24  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 11189  0D25  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 11190  0D26  0872               	movf	??_PWM3_LoadDutyValue,w
 11191  0D27  0026               	movlb	6	; select bank6
 11192  0D28  0091               	movwf	17	;volatile
 11193                           
 11194                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
 11195  0D29  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 11196  0D2A  3903               	andlw	3
 11197  0D2B  00F2               	movwf	??_PWM3_LoadDutyValue
 11198  0D2C  3004               	movlw	4
 11199  0D2D                     u149_25:
 11200  0D2D  35F2               	lslf	??_PWM3_LoadDutyValue,f
 11201  0D2E  0B89               	decfsz	9,f
 11202  0D2F  2D2D               	goto	u149_25
 11203  0D30  0813               	movf	19,w	;volatile
 11204  0D31  39CF               	andlw	207
 11205  0D32  0472               	iorwf	??_PWM3_LoadDutyValue,w
 11206  0D33  0093               	movwf	19	;volatile
 11207  0D34                     i1l14:
 11208  0D34  0008               	return
 11209  0D35                     __end_of_PWM3_LoadDutyValue:
 11210                           
 11211                           	psect	text69
 11212  0CF2                     __ptext69:	
 11213 ;; *************** function _CCP4_CaptureISR *****************
 11214 ;; Defined at:
 11215 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;		None
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;  module          2    3[COMMON] struct CCPR4Reg_tag
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  1    wreg      void 
 11222 ;; Registers used:
 11223 ;;		wreg, status,2, status,0, pclath, cstack
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11229 ;;      Params:         0       0       0       0       0       0
 11230 ;;      Locals:         2       0       0       0       0       0
 11231 ;;      Temps:          1       0       0       0       0       0
 11232 ;;      Totals:         3       0       0       0       0       0
 11233 ;;Total ram usage:        3 bytes
 11234 ;; Hardware stack levels used: 1
 11235 ;; Hardware stack levels required when called: 1
 11236 ;; This function calls:
 11237 ;;		Absolute function
 11238 ;;		_CCP4_DefaultCallBack
 11239 ;; This function is called by:
 11240 ;;		_INTERRUPT_InterruptManager
 11241 ;; This function uses a non-reentrant model
 11242 ;;
 11243                           
 11244  0CF2                     _CCP4_CaptureISR:	
 11245                           ;psect for function _CCP4_CaptureISR
 11246                           
 11247  0CF2                     i1l3595:	
 11248                           ;incstack = 0
 11249                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 11250                           
 11251                           
 11252                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 11253  0CF2  0020               	movlb	0	; select bank0
 11254  0CF3  1293               	bcf	19,5	;volatile
 11255  0CF4                     i1l3597:
 11256                           
 11257                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 11258  0CF4  0026               	movlb	6	; select bank6
 11259  0CF5  0818               	movf	24,w	;volatile
 11260  0CF6  00F2               	movwf	??_CCP4_CaptureISR
 11261  0CF7  0872               	movf	??_CCP4_CaptureISR,w
 11262  0CF8  00F3               	movwf	CCP4_CaptureISR@module
 11263                           
 11264                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 11265  0CF9  0819               	movf	25,w	;volatile
 11266  0CFA  00F2               	movwf	??_CCP4_CaptureISR
 11267  0CFB  0872               	movf	??_CCP4_CaptureISR,w
 11268  0CFC  00F4               	movwf	CCP4_CaptureISR@module+1
 11269  0CFD                     i1l3599:
 11270                           
 11271                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 11272  0CFD  0874               	movf	CCP4_CaptureISR@module+1,w
 11273  0CFE  00F1               	movwf	CCP4_DefaultCallBack@capturedValue+1
 11274  0CFF  0873               	movf	CCP4_CaptureISR@module,w
 11275  0D00  00F0               	movwf	CCP4_DefaultCallBack@capturedValue
 11276  0D01  0020               	movlb	0	; select bank0
 11277  0D02  0861               	movf	_CCP4_CallBack+1,w
 11278  0D03  008A               	movwf	10
 11279  0D04  0860               	movf	_CCP4_CallBack,w
 11280  0D05  000A               	callw
 11281  0D06  318C               	pagesel	$
 11282  0D07                     i1l644:
 11283  0D07  0008               	return
 11284  0D08                     __end_of_CCP4_CaptureISR:
 11285                           
 11286                           	psect	text70
 11287  0B87                     __ptext70:	
 11288 ;; *************** function _CCP4_DefaultCallBack *****************
 11289 ;; Defined at:
 11290 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 11291 ;; Parameters:    Size  Location     Type
 11292 ;;  capturedValu    2    0[COMMON] unsigned short 
 11293 ;; Auto vars:     Size  Location     Type
 11294 ;;		None
 11295 ;; Return value:  Size  Location     Type
 11296 ;;                  1    wreg      void 
 11297 ;; Registers used:
 11298 ;;		None
 11299 ;; Tracked objects:
 11300 ;;		On entry : 0/0
 11301 ;;		On exit  : 0/0
 11302 ;;		Unchanged: 0/0
 11303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11304 ;;      Params:         2       0       0       0       0       0
 11305 ;;      Locals:         0       0       0       0       0       0
 11306 ;;      Temps:          0       0       0       0       0       0
 11307 ;;      Totals:         2       0       0       0       0       0
 11308 ;;Total ram usage:        2 bytes
 11309 ;; Hardware stack levels used: 1
 11310 ;; This function calls:
 11311 ;;		Nothing
 11312 ;; This function is called by:
 11313 ;;		_CCP4_Initialize
 11314 ;;		_CCP4_CaptureISR
 11315 ;; This function uses a non-reentrant model
 11316 ;;
 11317                           
 11318  0B87                     _CCP4_DefaultCallBack:	
 11319                           ;psect for function _CCP4_DefaultCallBack
 11320                           
 11321  0B87                     i1l638:	
 11322                           ;incstack = 0
 11323                           ; Regs used in _CCP4_DefaultCallBack: []
 11324                           
 11325  0B87  0008               	return
 11326  0B88                     __end_of_CCP4_DefaultCallBack:
 11327  007E                     btemp	set	126	;btemp
 11328  007E                     int$flags	set	126
 11329  007E                     wtemp0	set	126
 11330                           
 11331                           	psect	idloc
 11332                           
 11333                           ;Config register IDLOC0 @ 0x8000
 11334                           ;	unspecified, using default values
 11335  8000                     	org	32768
 11336  8000  3FFF               	dw	16383
 11337                           
 11338                           ;Config register IDLOC1 @ 0x8001
 11339                           ;	unspecified, using default values
 11340  8001                     	org	32769
 11341  8001  3FFF               	dw	16383
 11342                           
 11343                           ;Config register IDLOC2 @ 0x8002
 11344                           ;	unspecified, using default values
 11345  8002                     	org	32770
 11346  8002  3FFF               	dw	16383
 11347                           
 11348                           ;Config register IDLOC3 @ 0x8003
 11349                           ;	unspecified, using default values
 11350  8003                     	org	32771
 11351  8003  3FFF               	dw	16383
 11352                           
 11353                           	psect	config
 11354                           
 11355                           ;Config register CONFIG1 @ 0x8007
 11356                           ;	Oscillator Selection
 11357                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11358                           ;	Watchdog Timer Enable
 11359                           ;	WDTE = OFF, WDT disabled
 11360                           ;	Power-up Timer Enable
 11361                           ;	PWRTE = OFF, PWRT disabled
 11362                           ;	MCLR Pin Function Select
 11363                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11364                           ;	Flash Program Memory Code Protection
 11365                           ;	CP = OFF, Program memory code protection is disabled
 11366                           ;	Data Memory Code Protection
 11367                           ;	CPD = OFF, Data memory code protection is disabled
 11368                           ;	Brown-out Reset Enable
 11369                           ;	BOREN = ON, Brown-out Reset enabled
 11370                           ;	Clock Out Enable
 11371                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11372                           ;	Internal/External Switchover
 11373                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11374                           ;	Fail-Safe Clock Monitor Enable
 11375                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11376  8007                     	org	32775
 11377  8007  3FE4               	dw	16356
 11378                           
 11379                           ;Config register CONFIG2 @ 0x8008
 11380                           ;	Flash Memory Self-Write Protection
 11381                           ;	WRT = OFF, Write protection off
 11382                           ;	PLL Enable
 11383                           ;	PLLEN = OFF, 4x PLL disabled
 11384                           ;	Stack Overflow/Underflow Reset Enable
 11385                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11386                           ;	Brown-out Reset Voltage Selection
 11387                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11388                           ;	Low-Voltage Programming Enable
 11389                           ;	LVP = ON, Low-voltage programming enabled
 11390  8008                     	org	32776
 11391  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    16
    Data        2
    BSS         41
    Persistent  51
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      76
    BANK1            80     19      43
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    memset@s	PTR unsigned char  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    txSpi@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controleMovimento(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controleMovimento(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    SPI1_ExchangeBlock@block	PTR void  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), Absolute function(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS1(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS1(), Absolute function(), IOCBF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR4_CallBack->_controleMovimento
    _controleMovimento->_PWM3_LoadDutyValue
    _sendInfo->___flmul
    _bin2bcd->_memset
    ___wmul->_ADC_GetConversion
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _IOCBF3_ISR->_chegadaS2
    _chegadaS2->_matrixUpdate
    _IOCBF0_ISR->_chegadaS1
    _chegadaS1->_matrixUpdate
    _CMP2_ISR->_chegadaS4
    _chegadaS4->_matrixUpdate
    _CMP1_ISR->_chegadaS3
    _chegadaS3->_matrixUpdate
    _matrixUpdate->i1_txSpi
    i1_txSpi->i1_SPI1_ExchangeBlock
    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->_sendInfo
    _sendInfo->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_initMatrix
    _organizaTrajeto->_TMR4_WriteTimer
    _initMatrix->_txSpi
    _txSpi->_SPI1_ExchangeBlock
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3763
                                             17 BANK1      2     2      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR4_SetInterruptHandler
                         _initMatrix
                       _isValidFloor
                    _organizaTrajeto
 ---------------------------------------------------------------------------------
 (1) _organizaTrajeto                                      4     4      0     161
                                              1 BANK1      4     4      0
                    _TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR4_WriteTimer                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _isValidFloor                                         2     2      0      99
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initMatrix                                           9     9      0    1207
                                              8 BANK1      9     9      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (2) _txSpi                                                3     1      2     626
                                              5 BANK1      3     1      2
                 _SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeBlock                                   5     3      2     256
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1328
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     121
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0     124
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    9192
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0     500
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR4_CallBack                                        0     0      0     500
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                  _controleMovimento *
 ---------------------------------------------------------------------------------
 (7) _controleMovimento                                    2     2      0     500
                                              4 COMMON     2     2      0
                 _PWM3_LoadDutyValue
                     _TMR4_StopTimer
 ---------------------------------------------------------------------------------
 (8) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0    5050
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0    5050
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _sendInfo *
 ---------------------------------------------------------------------------------
 (7) _sendInfo                                             6     6      0    5050
                                             32 BANK0      6     6      0
                  _ADC_GetConversion
                       _EUSART_Write
                            ___flmul
                            ___fltol
                             ___wmul
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (8) _bin2bcd                                             11     9      2    1562
                                             10 COMMON     2     0      2
                                              0 BANK0      9     9      0
                             _memset
 ---------------------------------------------------------------------------------
 (9) _memset                                              10     6      4     904
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              4 COMMON     6     2      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             11     7      4     381
                                             21 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0    1510
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCBF3_ISR                                           0     0      0    1016
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                          _chegadaS2 *
 ---------------------------------------------------------------------------------
 (7) _chegadaS2                                            1     1      0    1016
                                             12 COMMON     1     1      0
                 _PWM3_LoadDutyValue
                    _TMR4_StartTimer
                       _matrixUpdate
                  i1_TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF0_ISR                                           0     0      0     494
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                          _chegadaS1 *
 ---------------------------------------------------------------------------------
 (7) _chegadaS1                                            1     1      0     494
                                             12 COMMON     1     1      0
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP2_ISR                                             0     0      0    1016
                          _chegadaS4
 ---------------------------------------------------------------------------------
 (6) _chegadaS4                                            1     1      0    1016
                                             12 COMMON     1     1      0
                 _PWM3_LoadDutyValue
                    _TMR4_StartTimer
                       _matrixUpdate
                  i1_TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (5) _CMP1_ISR                                             0     0      0    1016
                          _chegadaS3
 ---------------------------------------------------------------------------------
 (6) _chegadaS3                                            1     1      0    1016
                                             12 COMMON     1     1      0
                 _PWM3_LoadDutyValue
                    _TMR4_StartTimer
                       _matrixUpdate
                  i1_TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (8) i1_TMR4_WriteTimer                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _matrixUpdate                                         6     6      0     494
                                              8 COMMON     4     4      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (9) i1_txSpi                                              3     1      2     212
                                              5 COMMON     3     1      2
               i1_SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (10) i1_SPI1_ExchangeBlock                                5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (8) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _PWM3_LoadDutyValue                                   4     2      2     500
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _SPI1_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _initMatrix
     _txSpi
       _SPI1_ExchangeBlock
   _isValidFloor
   _organizaTrajeto
     _TMR4_WriteTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
   _CMP1_ISR
     _chegadaS3
       _PWM3_LoadDutyValue
       _TMR4_StartTimer
       _matrixUpdate
         i1_txSpi
           i1_SPI1_ExchangeBlock
       i1_TMR4_WriteTimer
   _CMP2_ISR
     _chegadaS4
       _PWM3_LoadDutyValue
       _TMR4_StartTimer
       _matrixUpdate
       i1_TMR4_WriteTimer
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _chegadaS1 *
         _matrixUpdate
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _chegadaS2 *
         _PWM3_LoadDutyValue
         _TMR4_StartTimer
         _matrixUpdate
         i1_TMR4_WriteTimer
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _sendInfo *
         _ADC_GetConversion
         _EUSART_Write
         ___flmul
           __Umul8_16
         ___fltol
           ___flmul (ARG)
         ___wmul
           _ADC_GetConversion (ARG)
         _bin2bcd
           _memset
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _controleMovimento *
         _PWM3_LoadDutyValue
         _TMR4_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      85       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     26      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     13      2B       8       53.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      85      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jul 18 23:48:32 2023

                              _CCP4_Initialize 07EE               ??_IOCBF3_DefaultInterruptHandler 0070  
              ?_IOCBF3_DefaultInterruptHandler 0070                             _SPI1_ExchangeBlock 0E32  
                                           l11 0C08                        __end_of_organizaTrajeto 0F06  
                            ??_CMP1_Initialize 00A0                                             l75 0C47  
                                           _t1 0054                                             _t2 0052  
                       __end_of_FVR_Initialize 0B96                            ___wmul@multiplicand 0076  
                              _timer0ReloadVal 006A                            __Umul8_16@word_mpld 0076  
                                          l142 0C3B                                            l209 0BF6  
                                          l402 0BC1                                            l314 0B95  
                                          l219 0BFF                                            l405 0BB5  
                                          l430 0FA8                                            l263 0E8C  
                                          l360 0E06                                            l266 0BD4  
                                          l426 0C2F                                            l444 0E3F  
                                          l381 0CAA                                            l197 0EBD  
                                          l269 0B99                                            l286 0BDC  
                                          l446 0E44                                            l519 0C7D  
                                          l368 0BA3                                            l448 0E5E  
                                          l377 0C9C                                            l641 07FF  
                                          l618 0C11                                            l802 0CF1  
                                          l820 0CBA                                            l558 0BE4  
                                          l670 0CDE                                            l647 0BED  
                                          l399 0BBB                                            l816 0CAD  
                                          l904 0461                                            l682 0BC7  
                                          l596 0D65                                            l839 0FFF  
                                          l793 0EF2                                            l698 0C1A  
                                          l797 0F05                                            _PR2 001B  
                                          _PR4 0416                            ?_SPI1_ExchangeBlock 00A0  
                              _timer1ReloadVal 0064                                   _pulsoEncoder 005B  
                                          _mov 00CA                 ?_EUSART_SetFramingErrorHandler 00A0  
                              _TMR2_Initialize 0BDD                 CCP4_SetCallBack@customCallBack 00A0  
                                          wreg 0009                               _CCP4_SetCallBack 0BE5  
                                 ___flmul@aexp 002D                                   ___flmul@bexp 002E  
                      SPI1_ExchangeBlock@block 00A3                                   ___flmul@sign 0028  
                                 ___flmul@temp 0033                                   ___flmul@prod 002F  
                      __end_of_CCP4_CaptureISR 0D08                                   ?_EUSART_Read 0070  
                                 ___fltol@exp1 003F                                           l4001 0C30  
                                         l4003 0C32                                           l4011 0E90  
                                         l4101 07EE                                           l4005 0C37  
                                         l4021 0E9D                                           l4013 0E93  
                                         l4111 07FD                                           l4103 07F1  
                                         l4007 0C39                                           l4031 0EA9  
                                         l4023 0E9E                                           l4015 0E95  
                                         l4105 07F2                                           l4041 0EBC  
                                         l4033 0EAA                                           l4025 0EA5  
                                         l4017 0E98                                           l4009 0E8D  
                                         l4121 0C77                                           l4113 0C70  
                                         l4107 07F3                                           l4131 0DF4  
                                         l4035 0EAB                                           l4027 0EA7  
                                         l4019 0E9A                                           l4051 0C2D  
                                         l4043 0C25                                           l4123 0C7B  
                                         l4115 0C72                                           l4211 0FB1  
                                         l4203 0FA9                                           l4109 07FB  
                                         l4133 0DFC                                           l4125 0DE2  
                                         l4061 0B92                                           l4053 0BCE  
                                         l4037 0EAC                                           l4029 0EA8  
                                         l4045 0C28                                           l4117 0C74  
                                         l4141 0CB8                                           l4221 0FBC  
                                         l4213 0FB5                                           l4151 0CA1  
                                         l4135 0E04                                           l4127 0DEB  
                                         l4055 0BD1                                           l4039 0EB4  
                                         l4047 0C29                                           l4119 0C76  
                                         l4071 0CD4                                           l4063 0CCC  
                                         l4143 0E5F                                           l4231 0FE1  
                                         l4215 0FBB                                           l4153 0CA2  
                                         l4145 0B9F                                           l4161 0F57  
                                         l4129 0DEC                                           l4057 0BD2  
                                         l4049 0C2B                                           l4081 0BE2  
                                         l4073 0CDB                                           l4065 0CCF  
                                         l4241 0FF9                                           l4233 0FE7  
                                         l4209 0FAC                                           l4137 0BC4  
                                         l4155 0CA7                                           l4171 0FA6  
                                         l4163 0F5C                                           l4091 0D5C  
                                         l4083 0D4D                                           l4075 0BDD  
                                         l4067 0CD0                                           l4059 0B96  
                                         l4139 0CAF                                           l4235 0FEC  
                                         l4227 0FBD                                           l4251 03E7  
                                         l4243 03BB                                           l4157 0CA9  
                                         l4149 0C9C                                           l4165 0F7E  
                                         l4093 0D5D                                           l4085 0D52  
                                         l4077 0BE0                                           l4069 0CD2  
                                         l4229 0FDC                                           l4181 0EE2  
                                         l4261 0400                                           l4253 03E8  
                                         l4245 03DE                                           l4167 0F7F  
                                         l4095 0BD5                                           l4087 0D55  
                                         l4079 0BE1                                           l4239 0FF4  
                                         l4191 0CE1                                           l4183 0EE8  
                                         l4175 0EBE                                           l4271 041D  
                                         l4263 0406                                           l4255 03E9  
                                         l4247 03E0                                           l4169 0F90  
                                         l4097 0BD8                                           l4089 0D5B  
                                         l4193 0CE2                                           l4185 0EF8  
                                         l4177 0ED5                                           l4361 0453  
                                         l4281 0434                                           l4273 0420  
                                         l4265 0409                                           l4257 03F1  
                                         l4249 03E4                                           l4099 0BD9  
                                         l4195 0CE8                                           l4187 0EFC  
                                         l4179 0EDB                                           l4283 043A  
                                         l4275 0429                                           l4267 0412  
                                         l4259 03F8                                           l4197 0CEE  
                                         l4189 0F01                                           l4285 0442  
                                         l4277 042F                                           l4269 0418  
                                         l4293 044B                                           l4199 0CF0  
                                         l4287 0445                                           l3961 0BF7  
                                         l3963 0BB6                                           l3971 0E39  
                                         l3981 0BE5                                           l3965 0BBC  
                                         l3973 0E45                                           l3967 0BB0  
                                         l3959 0BEE                                           l3991 0C05  
                                         l3983 0C12                                           l3975 0E4E  
                                         l3993 0C3C                                           l3985 0C00  
                                         l3977 0E52                                           l3969 0E34  
                                         l3995 0C3E                                           l3987 0C03  
                                         l3979 0C09                                           l3997 0C43  
                                         l3989 0C04                                           l3999 0C45  
                                ?_isValidFloor 0070                                           u3020 0EDB  
                                         u3004 0EC4                                           u3100 03F1  
                                         u3021 0EDA                                           u3005 0EC3  
                                         u3101 03F0                                           _LATA 010C  
                                         u3030 0EE8                                           u3014 0ECF  
                                         u3110 03F8                                           _LATB 010D  
                                         u3031 0EE7                                           u3015 0ECE  
                                         u3111 03F7                                           u3040 0EF8  
                                         u3120 0406                                           u3041 0EF7  
                                         u3121 0405                                           u3050 0CE8  
                                         u3130 0412                                           u3051 0CE7  
                                         u3131 0411                                           u3060 0CEE  
                                         u3140 0429                                           u3061 0CED  
                                         u3141 0428                                           u3070 0FBB  
                                         u3150 043A                                           u3071 0FBA  
                                         u3151 0439                                           u3080 0FE7  
                                         u3081 0FE6                                           u3090 0FFF  
                                         u3091 0FFE                              ??_CMP2_Initialize 00A0  
                                         i1l14 0D34                                           u2950 0E44  
                                         u2951 0E43                                           u2960 0E5E  
                                         u2961 0E5D                                           u2970 0CA1  
                                         u2971 0CA0                                           u2980 0CA7  
                                         u2981 0CA6                                           u2990 0F5C  
                                         u2991 0F5B                                           i1l81 0BAF  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _WPUA 020C  
                                         _WPUB 020D                                           _flag 005A  
                                         _main 03BB                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                         ??_SPI1_ExchangeBlock 00A2                      i1SPI1_ExchangeBlock@block 0073  
                                         start 0056                                __end_ofi1_txSpi 0C70  
                             __end_of_CMP1_ISR 0BAA                               __end_of_CMP2_ISR 0BB0  
                   ??_TMR4_SetInterruptHandler 00A2                        __end_of_TMR0_Initialize 0D66  
               ??_TMR0_DefaultInterruptHandler 0070                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0BD5  
                            isValidFloor@floor 00A1                                  ___fltol@sign1 003E  
                                        ?_main 0070                         ??_CCP4_DefaultCallBack 0072  
                              __end_of___flmul 02CC               SPI1_Open@spi1UniqueConfiguration 00A3  
                              __end_of___fltol 078C                                          _T1CON 0018  
                                        _T2CON 001C                                __end_of_bin2bcd 059A  
                                        _T4CON 0417                                          i1l202 0CCB  
                                        i1l212 0B88                                          i1l301 0D77  
                                        i1l206 0C8C                                          i1l222 0B89  
                                        i1l216 0C9B                                          i1l304 0D7F  
                                        i1l148 0BA9                                          i1l500 0054  
                                        i1l611 0D4C                                          i1l444 0E13  
                                        i1l621 0B8A                                          i1l701 0B8B  
                                        i1l446 0E18                                          i1l615 0C54  
                                        i1l448 0E31                                          i1l384 0C1C  
                                        i1l387 0C24                                          i1l644 0D07  
                                        i1l820 0C6F                                          i1l805 03BA  
                                        i1l638 0B87                                          i1l816 0C63  
                                        i1l673 0B8E                                          i1l682 0B9E  
                                        i1l930 0565                                          i1l931 0599  
                                        i1l691 0D1D                                          i1l676 0B91  
                                        i1l829 0DBE                                          i1l853 07E6  
                                        i1l863 0F54                                          i1l927 052D  
                                        i1l695 0C61                                          i1l928 0540  
                                        i1l929 0552                                          i1l874 0716  
                                        i1l858 07ED                                          i1l885 069D  
                                        i1l877 0644                                          i1l896 061B  
                                        i1l888 05C2                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                     _RXaccepted 005C  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 0CCC                      ?_TMR0_SetInterruptHandler 00A0  
                             __end_of_TMR0_ISR 0D4D                                          _dTemp 00BD  
                             __end_of_TMR4_ISR 0D1E                                          _oTemp 00BE  
                      __end_of_PIN_MANAGER_IOC 0CCC                                 _WDT_Initialize 0B96  
                               ??_isValidFloor 00A0                                          _txSpi 0CAB  
                                        _state 00C1                        __end_of_PWM3_Initialize 0C09  
                      __end_of_TMR1_Initialize 0C7E                                          pclath 000A  
                                        status 0003                        __end_of_CCP4_Initialize 0800  
                                        wtemp0 007E                                  txSpi@dataSize 00A5  
                              __initialization 0058                                   __end_of_main 0464  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 0BE5  
                             ?_organizaTrajeto 0070                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00B1                        _IOCBF0_InterruptHandler 0068  
                       __end_of_WDT_Initialize 0B9A                               ?_CCP4_CaptureISR 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00C6  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR3H 0312                                         _CCPR4H 0319  
                                       _CCPR3L 0311                                         _CCPR4L 0318  
                                       ?_txSpi 00A5                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0BA4  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l3001 00B3                                         i1l1081 0D8A  
                                       i1l3011 00CF                                         i1l3003 00B8  
                                       i1l1083 0D9E                                         i1l3101 02A9  
                                       i1l3021 00F7                                         i1l3013 00D4  
                                       i1l3005 00C0                                         i1l3103 02B6  
                                       i1l3031 0152                                         i1l3023 0111  
                                       i1l3007 00C2                                         i1l3113 0B9B  
                                       i1l3105 02BA                                         i1l3041 0181  
                                       i1l3033 0159                                         i1l3025 011E  
                                       i1l3017 00DD                                         i1l3009 00CA  
                                       i1l3201 07DD                                         i1l1282 0776  
                                       i1l3107 02BB                                         i1l3051 01D1  
                                       i1l3043 0195                                         i1l3035 0166  
                                       i1l3027 0138                                         i1l3019 00EA  
                                       i1l1275 078B                                         i1l3203 07E3  
                                       i1l3301 059A                                         i1l3221 0F11  
                                       i1l3109 02C3                                         i1l3061 0217  
                                       i1l3053 01E6                                         i1l3045 019C  
                                       i1l3037 016D                                         i1l3029 0145  
                                       i1l1285 078B                                         i1l1541 0507  
                                       i1l3141 02CC                                         i1l3205 07E9  
                                       i1l3311 05B5                                         i1l3303 059F  
                                       i1l3231 0F33                                         i1l3223 0F15  
                                       i1l3215 0F06                                         i1l3071 022B  
                                       i1l3063 021B                                         i1l3055 01FD  
                                       i1l3047 01B0                                         i1l3039 017A  
                                       i1l3151 035D                                         i1l3143 0339  
                                       i1l3207 07EB                                         i1l3321 05E7  
                                       i1l3313 05BF                                         i1l3305 05A4  
                                       i1l3233 0F40                                         i1l3225 0F1A  
                                       i1l3217 0F08                                         i1l3241 069E  
                                       i1l3081 024C                                         i1l3073 022C  
                                       i1l3065 021C                                         i1l3057 0204  
                                       i1l3049 01BD                                         i1l3161 03A4  
                                       i1l3153 0361                                         i1l3145 0349  
                                       i1l1490 02BF                                         i1l3331 0609  
                                       i1l3323 05ED                                         i1l3315 05D3  
                                       i1l3307 05AA                                         i1l3235 0F46  
                                       i1l3227 0F20                                         i1l3219 0F0D  
                                       i1l3251 06C1                                         i1l3243 06A6  
                                       i1l3083 0251                                         i1l3091 0279  
                                       i1l3075 0230                                         i1l3067 0223  
                                       i1l3059 0210                                         i1l3163 03AB  
                                       i1l3155 038A                                         i1l3147 034F  
                                       i1l3171 078D                                         i1l1484 0247  
                                       i1l3333 060C                                         i1l3325 05FA  
                                       i1l3317 05D4                                         i1l3309 05B0  
                                       i1l3237 0F49                                         i1l3229 0F2D  
                                       i1l3421 0C85                                         i1l3261 06D0  
                                       i1l3253 06C4                                         i1l3245 06AC  
                                       i1l3093 0286                                         i1l3085 0259  
                                       i1l3077 0244                                         i1l3069 0227  
                                       i1l3165 03AF                                         i1l3157 0397  
                                       i1l3149 0356                                         i1l3181 07A3  
                                       i1l3173 0793                                         i1l1478 02CB  
                                       i1l3351 0626                                         i1l3335 0612  
                                       i1l3327 05FF                                         i1l3319 05DA  
                                       i1l3239 0F4F                                         i1l3423 0C8A  
                                       i1l3271 06EE                                         i1l3263 06D1  
                                       i1l3255 06C6                                         i1l3247 06B2  
                                       i1l3095 0290                                         i1l3087 025D  
                                       i1l3167 03B6                                         i1l3159 039D  
                                       i1l3191 07BA                                         i1l3183 07A8  
                                       i1l3175 0796                                         u210_20 06B7  
                                       i1l3361 0655                                         i1l3353 062C  
                                       i1l3337 0617                                         i1l3329 0604  
                                       i1l3281 070E                                         i1l3273 06FB  
                                       i1l3265 06D7                                         i1l3257 06CA  
                                       u210_21 06B6                                         i1l3249 06B7  
                                       i1l3425 0C8D                                         i1l1497 0DD1  
                                       i1l3097 029E                                         i1l3089 0275  
                                       i1l3193 07BC                                         i1l3185 07AF  
                                       i1l3177 079D                                         i1l3169 078C  
                                       i1l3601 0D08                                         i1l3371 067C  
                                       i1l3363 0656                                         i1l3355 0632  
                                       i1l3347 061C                                         i1l3419 0C7E  
                                       i1l3283 0713                                         i1l3275 0700  
                                       i1l3267 06E4                                         i1l3259 06CE  
                                       i1l3427 0C94                                         i1l1499 0DE1  
                                       i1l3099 02A7                                         i1l2811 04E9  
                                       i1l2803 04BB                                         i1l3531 0C55  
                                       i1l3603 0D0A                                         i1l2901 0DB7  
                                       i1l3381 0694                                         i1l3373 0681  
                                       i1l3365 065C                                         i1l3357 0637  
                                       i1l3349 0621                                         i1l3541 0BAC  
                                       i1l3277 0705                                         i1l3269 06E9  
                                       i1l3429 0C99                                         i1l2821 0501  
                                       i1l2813 04ED                                         i1l2805 04CE  
                                       u202_25 02FB                                         i1l3525 0C48  
                                       i1l3189 07B3                                         i1l3197 07C0  
                                       i1l3533 0C5C                                         i1l3605 0D17  
                                       i1l3701 0019                                         i1l2903 0DB9  
                                       i1l3383 0699                                         i1l3375 0686  
                                       i1l3367 0669                                         i1l3359 0641  
                                       i1l3543 0BA4                                         i1l3279 0709  
                                       i1l3551 0CC3                                         i1l2831 0DD8  
                                       i1l2823 0DC0                                         i1l2815 04F2  
                                       i1l3527 0C4F                                         i1l3199 07D7  
                                       i1l3607 0D1A                                         i1l3711 002D  
                                       i1l3703 001C                                         u211_20 06D7  
                                       u203_20 079D                                         i1l2841 0D1E  
                                       i1l3377 068B                                         i1l3369 066F  
                                       i1l3545 0BA6                                         u211_21 06D6  
                                       i1l3553 0CC8                                         i1l2833 0DDD  
                                       i1l2825 0DC2                                         i1l2817 04F9  
                                       i1l2809 04D8                                         u203_21 079C  
                                       i1l3721 0044                                         i1l3713 0032  
                                       i1l3705 0020                                         i1l2771 0E19  
                                       i1l3379 068E                                         i1l3539 0BAA  
                                       i1l3547 0CBB                                         i1l2851 0D7B  
                                       i1l2843 0D67                                         i1l2827 0DC9  
                                       i1l2931 0D94                                         i1l2923 0D80  
                                       i1l2819 04FD                                         i1l4363 07C9  
                                       i1l3723 0047                                         i1l3715 0037  
                                       i1l3707 0025                                         i1l2773 0E21  
                                       i1l2837 0C65                                         i1l3549 0CC0  
                                       i1l2845 0D71                                         i1l2829 0DCD  
                                       i1l2933 0D9A                                         i1l2925 0D82  
                                       i1l2861 0B8F                                         i1l3725 004C  
                                       i1l3717 003A                                         i1l3709 002A  
                                       i1l2775 0E25                                         i1l2767 0E08  
                                       i1l2839 0C6D                                         i1l2847 0D72  
                                       i1l2855 0C1C                                         i1l2951 074A  
                                       i1l2943 072C                                         i1l2927 0D86  
                                       i1l2791 048C                                         i1l2783 0470  
                                       i1l2863 0508                                         i1l3591 0D46  
                                       i1l3727 0051                                         i1l3719 003F  
                                       u140_20 0E31                                         u220_20 0626  
                                       u212_20 0705                                         u204_20 07DD  
                                       u140_21 0E30                                         i1l2769 0E0D  
                                       u220_21 0625                                         u212_21 0704  
                                       i1l2849 0D75                                         i1l2857 0C21  
                                       i1l2953 074E                                         i1l2961 0766  
                                       i1l2945 073F                                         i1l2937 0717  
                                       i1l2929 0D8F                                         i1l2793 0493  
                                       i1l2785 0477                                         i1l2777 0465  
                                       i1l2881 055B                                         i1l2873 051B  
                                       i1l2865 0513                                         i1l3593 0D49  
                                       u204_21 07DC                                         i1l3595 0CF2  
                                       i1l2859 0B8C                                         i1l2971 0780  
                                       i1l2947 0740                                         i1l2939 0723  
                                       i1l2795 049B                                         i1l2787 0482  
                                       i1l2779 0469                                         i1l2883 0580  
                                       i1l2875 0524                                         i1l2867 051A  
                                       i1l3587 0D35                                         i1l3691 0006  
                                       i1l3597 0CF4                                         i1l2981 0084  
                                       i1l2973 0075                                         i1l2949 0748  
                                       i1l2797 04A6                                         i1l2885 0586  
                                       i1l2877 0536                                         i1l3589 0D36  
                                       i1l3693 000A                                         i1l3599 0CFD  
                                       i1l2895 0DA3                                         i1l2991 00A0  
                                       i1l2983 0089                                         i1l2975 007B  
                                       i1l2967 076D                                         i1l2959 0756  
                                       i1l2799 04B1                                         i1l2879 0549  
                                       i1l3695 000E                                         u221_20 062C  
                                       u213_20 05A4                                         u141_20 046F  
                                       u205_20 07E3                                         i1l2897 0DA7  
                                       i1l2889 0D9F                                         u221_21 062B  
                                       u213_21 05A3                                         i1l2993 00A5  
                                       i1l2985 008E                                         i1l2977 007F  
                                       i1l2969 077B                                         u141_21 046E  
                                       u205_21 07E2                                         i1l3697 0011  
                                       i1l2899 0DAF                                         i1l2995 00A9  
                                       i1l2987 0096                                         i1l2979 0083  
                                       i1l3699 0015                                         i1l2997 00AD  
                                       i1l2989 0098                                         i1l2999 00AE  
                                       u222_20 0632                                         u214_20 05AA  
                                       u206_20 0F20                                         u150_20 0D7B  
                                       u142_20 048B                                         u230_20 0C5C  
                                       u222_21 0631                                         u214_21 05A9  
                                       u206_21 0F1F                                         u150_21 0D7A  
                                       u142_21 048A                                         u230_21 0C5B  
                                       u223_20 0637                                         u215_20 05B0  
                                       u207_20 06A6                                         u231_20 0CC0  
                                       u151_20 0C21                                         u143_20 04BA  
                                       u223_21 0636                                         u215_21 05AF  
                                       u207_21 06A5                                         u231_21 0CBF  
                                       u151_21 0C20                                         u143_21 04B9  
                                       u224_20 065C                                         u216_20 05B5  
                                       u208_20 06AC                                         u232_20 0CC8  
                                       u160_20 0D86                                         u144_20 04D7  
                                       u152_20 0524                                         u224_21 065B  
                                       u216_21 05B4                                         u208_21 06AB  
                                       u232_21 0CC7                                         u160_21 0D85  
                                       u144_21 04D6                                         u152_21 0523  
                                  initMatrix@i 00AE                                    initMatrix@j 00B0  
                                       u225_20 0694                                         u217_20 05DA  
                                       u209_20 06B2                                         u145_20 0507  
                                       u153_20 0536                                    initMatrix@k 00AD  
                                       u225_21 0693                                         u217_21 05D9  
                                       u209_21 06B1                                         u145_21 0506  
                                       u153_21 0535                                         u161_25 0D8B  
                      TMR4_WriteTimer@timerVal 00A0                                         u226_20 0699  
                                       u218_20 0612                                         u146_20 0DCD  
                                       u170_20 076C                                         u154_20 0549  
                                       u250_20 000E                                         u226_21 0698  
                                       u218_21 0611                                         u146_21 0DCC  
                                       u170_21 076B                                         u154_21 0548  
                                       u250_21 000D                                         u162_25 0D90  
                                       u139_20 0E18                                         u219_20 0617  
                                       u227_20 0C85                                         u163_20 0D9A  
                                       u155_20 055B                                         u251_20 0015  
                                       _FVRCON 0117                                         u139_21 0E17  
                                       u219_21 0616                                         u227_21 0C84  
                                       u163_21 0D99                                         u155_21 055A  
                                       u251_21 0014                                         u147_25 0DD2  
                                       u171_25 076E                                         u228_20 0C94  
                                       u148_20 0DDD                                         u180_20 00CF  
                                       u172_20 077B                                         u164_20 0723  
                                       u156_20 0572                                         u236_20 0D46  
                                       u260_20 004C                                         u252_20 0019  
                                       u228_21 0C93                                         u148_21 0DDC  
                                       u180_21 00CE                                         u172_21 077A  
                                       u164_21 0722                                         u236_21 0D45  
                                       u260_21 004B                                         u252_21 0018  
                                       u156_25 056E                                         u181_20 00D4  
                                       u173_20 0780                                         u165_20 0739  
                                       u157_20 0586                                         u229_20 0C4F  
                                       u237_20 0D17                                         u261_20 0051  
                                       u253_20 0020                                         u181_21 00D3  
                                       u173_21 077F                                         u157_21 0585  
                                       u229_21 0C4E                                         u237_21 0D16  
                                       u261_21 0050                                         u253_21 001F  
                                       u149_25 0D2D                                         u165_25 0735  
                                       u190_20 022B                                         u174_20 0083  
                                       u166_20 074E                                         u158_20 0593  
                                       u254_20 0025                                         u190_21 022A  
                                       u174_21 0082                                         u166_21 074D  
                                       u254_21 0024                                         u182_25 0153  
                                       u158_25 058F                                         u159_20 0DBE  
                                       u191_20 0230                                         u175_20 0089  
                                       u167_20 0755                                         u255_20 002A  
                                       u159_21 0DBD                                         u191_21 022F  
                                       u175_21 0088                                         u167_21 0754  
                                       u255_21 0029                                         u183_25 0182  
                                       u192_20 0244                                         u184_20 01DC  
                                       u176_20 008E                                         u256_20 0032  
                                       u192_21 0243                                         u176_21 008D  
                                       u256_21 0031                                         u184_25 01D8  
                                       u168_25 0757                                         u193_20 024B  
                                       u185_20 01F3                                         u177_20 00AD  
                                       u169_20 0765                                         u257_20 0037  
                                       u249_20 000A                                         u193_21 024A  
                                       u177_21 00AC                                         u169_21 0764  
                                       u257_21 0036                                         u249_21 0009  
                                       u185_25 01EF                                         u194_20 0251  
                                       u178_20 00B3                                         u258_20 003F  
                                       u194_21 0250                                         u178_21 00B2  
                                       u258_21 003E                                         u186_25 01FE  
                                       u195_20 025D                                         u179_20 00B8  
                                       u259_20 0044                                         u195_21 025C  
                                       u179_21 00B7                                         u259_21 0043  
                                       u187_25 0211                                         u196_20 026B  
                                       u188_20 021B                                         u188_21 021A  
                                       u196_25 0267                                         u197_20 0286  
                                       u197_21 0285                                         u197_25 0282  
                                       u189_25 021D                                         u198_20 029E  
                                       u198_21 029D                                         u198_25 029A  
                                       u199_20 02BA                                         u199_21 02B9  
                                       _OSCCON 0099                                      ??i1_txSpi 0077  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                _TMR4_StartTimer 0B8C  
                            __end_of_SPI1_Open 0FA9                                   _CCPTMRS0bits 029E  
                    i1TMR4_WriteTimer@timerVal 0070                                         ___wmul 0D80  
                                    ??___flmul 0079                                      ??___fltol 0039  
                                    ??_bin2bcd 0020                                         _altura 0058  
                                ?_matrixUpdate 0070                               ?_TMR0_Initialize 0070  
                                       _memset 0464                        __end_of_TMR4_Initialize 0CDF  
                                       _waitRX 005D                                         _origem 00C3  
                                _CCP4_CallBack 0060                               __end_of_sendInfo 03BB  
         __end_of_TMR4_DefaultInterruptHandler 0B8C                   _TMR4_DefaultInterruptHandler 0B8B  
                              _TMR4_WriteTimer 0BC2                                ?_WDT_Initialize 0070  
                     i1SPI1_ExchangeBlock@data 0074                       ADC_GetConversion@channel 0073  
                                    ?_CMP1_ISR 0070                          __end_of_TMR0_CallBack 0C55  
                                    ?_CMP2_ISR 0070       TMR4_SetInterruptHandler@InterruptHandler 00A0  
     TMR0_SetInterruptHandler@InterruptHandler 00A0     IOCBF3_SetInterruptHandler@InterruptHandler 00A0  
   IOCBF0_SetInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCBF0_ISR 007D                                   ??_IOCBF3_ISR 007D  
                             ?_PWM3_Initialize 0070                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0E5F                        __end_of__initialization 0071  
                             ?_CCP4_Initialize 0070                                _CMP1_Initialize 0C30  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0035  
                     __end_of_CCP4_SetCallBack 0BEE                                    i1txSpi@data 0077  
                               __pcstackCOMMON 0070                          __end_of_TMR4_CallBack 0C62  
                                 __pidataBANK0 0003                                   __pidataBANK1 0002  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                              i1txSpi@dataSize 0075                                 ??_matrixUpdate 0078  
                                    ?_TMR4_ISR 0070                           __end_of_isValidFloor 0CF2  
                            ??_SPI1_Initialize 00A0         __end_of_IOCBF0_DefaultInterruptHandler 0B89  
               _IOCBF0_DefaultInterruptHandler 0B88                                  __end_of_txSpi 0CBB  
                             ?_TMR2_Initialize 0070                             __end_of_IOCBF0_ISR 0C8D  
                           __end_of_IOCBF3_ISR 0C9C                                _CMP2_Initialize 0C3C  
                           _spi1_configuration 080C                                   bin2bcd@dataU 0025  
                               _OPTION_REGbits 0095                          TMR0_ISR@CountCallBack 004C  
                ?_TMR4_DefaultInterruptHandler 0070                ??_EUSART_SetOverrunErrorHandler 00A2  
       __end_of_IOCBF3_DefaultInterruptHandler 0B8A                 _IOCBF3_DefaultInterruptHandler 0B89  
                                   ??_CMP1_ISR 007D                                     ??_CMP2_ISR 007D  
                      __end_of_TMR4_StartTimer 0B8F                      __end_of_SYSTEM_Initialize 0E8D  
                                      ??_txSpi 00A7                                     __pbssBANK0 0046  
                                   __pbssBANK1 00B3                           __end_of_EUSART_Write 0C25  
                                   _andarAtual 0059                          _TMR4_InterruptHandler 005E  
                            __end_of__Umul8_16 0DE2                               ??_FVR_Initialize 00A0  
                                  sendInfo@bcd 0044                                     __pmaintext 03BB  
             __end_of_TMR0_SetInterruptHandler 0C12                                        ?___wmul 0074  
                                   ??_TMR0_ISR 007E                                     ??_TMR4_ISR 0076  
                                   __pintentry 0004                        __end_of_TMR4_WriteTimer 0BC8  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_memset 0070  
                             ?_TMR4_Initialize 0070                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _destinoSub 00BC  
                            _isValidFloor$1563 00A0                                        _OSCTUNE 0098  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                      __end_of_CMP1_Initialize 0C3C                       ??_EUSART_SetErrorHandler 00A2  
                            __end_of_chegadaS1 0F55                              __end_of_chegadaS2 0717  
                            __end_of_chegadaS3 069E                              __end_of_chegadaS4 061C  
                                      i1_txSpi 0C62                                      ?_sendInfo 0070  
                         _ADC_InterruptHandler 004E                                     _initMatrix 0FA9  
                      __end_of_CMP2_Initialize 0C48                                        ___flmul 0075  
                                      ___fltol 0717                                        _bin2bcd 0508  
                                      __ptext1 0EBE                                        __ptext2 0BC2  
                                      __ptext3 0CDF                                        __ptext4 0FA9  
                                      __ptext5 0CAB                                        __ptext6 0E32  
                                      __ptext7 0E5F                                        __ptext8 0B96  
                                      __ptext9 0CCC                                        _destino 00C2  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0BCE  
                                    _T2CONbits 001C                                      _CMOUTbits 0115  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 00A2  
                                    _IOCBFbits 0396                      ?_TMR4_SetInterruptHandler 00A0  
                 organizaTrajeto@mascaraOrigem 00A3                                      _IOCBNbits 0395  
                                    _IOCBPbits 0394                                        _rxValue 00C0  
                                      _subindo 006B                                        clrloop0 0BC9  
                             ?_TMR4_StartTimer 0070                  organizaTrajeto@mascaraDestino 00A4  
                         end_of_initialization 0071                           __end_of_matrixUpdate 0DBF  
                               initMatrix@data 00A9                 ??_TMR4_DefaultInterruptHandler 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0BC2                  _EUSART_SetOverrunErrorHandler 0BBC  
                                      memset@c 0070                                        memset@k 0076  
                                      memset@n 0072                                        memset@s 0079  
                                 _contComandos 00BF                              _EUSART_Initialize 0DE2  
                                   ??_sendInfo 0040                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0B9F  
                                    _SPI1_Open 0F55                               ?_TMR4_WriteTimer 0070  
                          ??_EUSART_Initialize 00A2                               ??_WDT_Initialize 00A0  
                     _TMR0_SetInterruptHandler 0C09                            ?_EUSART_is_rx_ready 0070  
                                    _TRISBbits 008D                   ??_IOCBF0_SetInterruptHandler 00A2  
                 ??_IOCBF3_SetInterruptHandler 00A2                               ?_CMP1_Initialize 0070  
                                 _isValidFloor 0CDF                         SPI1_ExchangeBlock@data 00A4  
                                  ___flmul@grs 0029                      __end_of_EUSART_Initialize 0E07  
                         ??_EUSART_is_rx_ready 00A0                                _SPI1_Initialize 0C25  
                                    _TXSTAbits 019E              CCP4_DefaultCallBack@capturedValue 0070  
                   __end_of_PWM3_LoadDutyValue 0D35                              ?_CCP4_SetCallBack 00A0  
                                  ?_initMatrix 0070                               ?_CMP2_Initialize 0070  
                                   ?_SPI1_Open 0070                             ??_CCP4_SetCallBack 00A2  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0D9F  
                                 _EUSART_Write 0C1B                                 _ADC_Initialize 0BD5  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_memset 0508  
                          start_initialization 0058                   __end_ofi1_SPI1_ExchangeBlock 0E32  
                              _velocidadeMotor 0046                                  ??_EUSART_Read 00A0  
                                    _MatrixLed 00B3                                  bin2bcd@binVal 007A  
               ?_EUSART_SetOverrunErrorHandler 00A0                                 _TMR4_StopTimer 0B8F  
                   _EUSART_FramingErrorHandler 00C8                                       ??___wmul 0078  
                       _EUSART_SetErrorHandler 0BB0                         __end_of_ADC_Initialize 0BDD  
                                    __Umul8_16 0DBF                                    __pdataBANK0 006B  
                                  __pdataBANK1 00CA                                       ??_memset 0074  
                                   memset@dest 0078                          CCP4_CaptureISR@module 0073  
                        TMR4_ISR@CountCallBack 004A                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                      __end_of_SPI1_Initialize 0C30                                       ?i1_txSpi 0075  
                            ??_organizaTrajeto 00A1                                      _chegadaS1 0F06  
                                    _chegadaS2 069E                                      _chegadaS3 061C  
                                    _chegadaS4 059A                            __end_of_EUSART_Read 0CAB  
                        _TMR0_InterruptHandler 0062                                      __pnvBANK0 005E  
                                    __pnvBANK1 00C4                         __end_of_TMR4_StopTimer 0B92  
                      _IOCBF3_InterruptHandler 0066                         _PIN_MANAGER_Initialize 0E8D  
             __end_of_TMR4_SetInterruptHandler 0C1B                              ??_CCP4_CaptureISR 0072  
                                     ?___flmul 0020                                       ?___fltol 0035  
                                     ?_bin2bcd 007A                                     ?__Umul8_16 0070  
                                  ??_SPI1_Open 00A0                                ?_ADC_Initialize 0070  
                            _controleMovimento 078C                                   _matrixUpdate 0D9F  
                 ??_INTERRUPT_InterruptManager 007E                             ?_controleMovimento 0070  
           __end_of_IOCBF0_SetInterruptHandler 0BF7                     _IOCBF0_SetInterruptHandler 0BEE  
           __end_of_IOCBF3_SetInterruptHandler 0C00                     _IOCBF3_SetInterruptHandler 0BF7  
                          ??_controleMovimento 0074                                       _CMP1_ISR 0BA4  
                                     _CMP2_ISR 0BAA                                  _TMR0_CallBack 0C48  
                   __end_of_SPI1_ExchangeBlock 0E5F                              ??_TMR0_Initialize 00A2  
                                  _destinoDesc 00BB                                 ___wmul@product 0078  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00A0  
                                     _LATBbits 010D                                     ?_chegadaS1 0070  
                                   ?_chegadaS2 0070                                     ?_chegadaS3 0070  
                                   ?_chegadaS4 0070                            __end_of_matrix_conf 080C  
                                    clear_ram0 0BC8                   __end_of_CCP4_DefaultCallBack 0B88  
                                     _PIE2bits 0092                                       _PIE3bits 0093  
                            _eusartRxLastError 0057                                ?_TMR4_StopTimer 0070  
                   ??_TMR0_SetInterruptHandler 00A2                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00A2                                       _PIR2bits 0012  
                                     _PIR3bits 0013                      __end_of_controleMovimento 07EE  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
                         i1_SPI1_ExchangeBlock 0E07                                       _TMR0_ISR 0D35  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 0D08  
                                _TMR4_CallBack 0C55                                       _SSP1STAT 0214  
                            ??_PIN_MANAGER_IOC 007D                              ??_PWM3_Initialize 00A0  
                            ??_TMR1_Initialize 00A0                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0074                              ??_CCP4_Initialize 00A2  
                               ?_TMR0_CallBack 0070                               initMatrix@i_1602 00AF  
                                  _EUSART_Read 0C9C                               ?_SPI1_Initialize 0070  
                            ??_TMR2_Initialize 00A0                              _ADC_GetConversion 0D66  
                                 ??_initMatrix 00A8                          ?i1_SPI1_ExchangeBlock 0070  
                               ?_TMR4_CallBack 0070                        ??_OSCILLATOR_Initialize 00A0  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 00C4  
                           ?_ADC_GetConversion 0070                              i1_TMR4_WriteTimer 0B9A  
                           sendInfo@velocidade 0042                       _TMR4_SetInterruptHandler 0C12  
                           _PWM3_LoadDutyValue 0D1E                            ??_ADC_GetConversion 0072  
                           ?i1_TMR4_WriteTimer 0070                                       bin2bcd@i 0024  
                                     __ptext10 0C12                                       __ptext11 0BDD  
                                     __ptext20 0BCE                                       __ptext12 0C70  
                                     __ptext21 0B92                                       __ptext13 0D4D  
                                   _T1GCONbits 0019                                       __ptext30 0BD5  
                                     __ptext22 0DE2                                       __ptext14 0C09  
                                     __ptext31 0F55                                       __ptext23 0BBC  
                                     __ptext15 0C25                                       __ptext40 0D35  
                                     __ptext32 0B9F                                       __ptext24 0BB6  
                                     __ptext16 0C00                                       __ptext41 0C48  
                                     __ptext33 0C9C                                       __ptext25 0BB0  
                                     __ptext17 0E8D                                       __ptext50 0C1B  
                                     __ptext42 0B8A                                       __ptext26 0C3C  
                                     __ptext18 0BF7                                       __ptext51 0D66  
                                     __ptext43 02CC                                       __ptext35 0D08  
                                     __ptext27 0C30                                       __ptext19 0BEE  
                                     __ptext60 059A                                       __ptext52 0CBB  
                                     __ptext44 0508                                       __ptext36 0C55  
                                     __ptext28 07EE                                       __ptext61 0BA4  
                                     __ptext53 0C8D                                       __ptext45 0464  
                                     __ptext37 0B8B                                       __ptext29 0BE5  
                                     __ptext70 0B87                                       __ptext62 061C  
                                     __ptext54 0B89                                       __ptext46 0D80  
                                     __ptext38 078C                                       __ptext63 0B9A  
                                     __ptext55 069E                                       __ptext47 0717  
                                     __ptext39 0B8F                                       __ptext64 0D9F  
                                     __ptext56 0C7E                                       __ptext48 0075  
                                     __ptext65 0C62                                       __ptext57 0B88  
                                     __ptext49 0DBF                                       __ptext66 0E07  
                                     __ptext58 0F06                            ?_PWM3_LoadDutyValue 0070  
                                     __ptext67 0B8C                                       __ptext59 0BAA  
                                     __ptext68 0D1E                                       __ptext69 0CF2  
                                 _SSP1CON1bits 0215                          controleMovimento@cont 0056  
                          ??i1_TMR4_WriteTimer 0070                                    _matrix_conf 0800  
                           __end_of_initMatrix 1000                                     _IOCBF0_ISR 0C7E  
                                   _IOCBF3_ISR 0C8D                              ??_TMR4_Initialize 00A2  
                                  ??_chegadaS1 007C                                    ??_chegadaS2 007C  
                                  ??_chegadaS3 007C                                    ??_chegadaS4 007C  
         __end_of_TMR0_DefaultInterruptHandler 0B8B                   _TMR0_DefaultInterruptHandler 0B8A  
                    __end_of_ADC_GetConversion 0D80                                       _sendInfo 02CC  
                      ?_EUSART_SetErrorHandler 00A0                  i1SPI1_ExchangeBlock@blockSize 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                           ??_PWM3_LoadDutyValue 0072  
                                     int$flags 007E                      __end_ofi1_TMR4_WriteTimer 0B9F  
           __end_of_INTERRUPT_InterruptManager 0056                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0BBC                  _EUSART_SetFramingErrorHandler 0BB6  
                                    txSpi@data 00A7                    SPI1_ExchangeBlock@blockSize 00A0  
                             matrixUpdate@data 0079                                     _INTCONbits 000B  
                              _organizaTrajeto 0EBE                           _CCP4_DefaultCallBack 0B87  
                              ??_TMR0_CallBack 007E                                     _FVRCONbits 0117  
                                     intlevel1 0000                                _CCP4_CaptureISR 0CF2  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0BB6  
                             ??_ADC_Initialize 00A0                                ??_TMR4_CallBack 0076  
                       ??i1_SPI1_ExchangeBlock 0072                  ?_TMR0_DefaultInterruptHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                    PWM3_LoadDutyValue@dutyValue 0070  
                            ??_TMR4_StartTimer 0070                                  __pstringtext1 0800  
                                __pstringtext2 080C                                 _FVR_Initialize 0B92  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                                  _temperatura 0050                          ?_CCP4_DefaultCallBack 0070  
                              _TMR0_Initialize 0D4D                    ?_IOCBF0_SetInterruptHandler 00A0  
                  ?_IOCBF3_SetInterruptHandler 00A0                                    ?_IOCBF0_ISR 0070  
                           EUSART_Write@txData 0070                                    ?_IOCBF3_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 0EBE                               ??_TMR4_StopTimer 0070  
                            ??_TMR4_WriteTimer 00A0               ??_IOCBF0_DefaultInterruptHandler 0070  
              ?_IOCBF0_DefaultInterruptHandler 0070                                  matrixUpdate@i 007B  
                              _PIN_MANAGER_IOC 0CBB                           __Umul8_16@multiplier 0078  
                              _TMR1_Initialize 0C70                                _PWM3_Initialize 0C00  
                   __end_of_spi1_configuration 0810                              __Umul8_16@product 0074  
