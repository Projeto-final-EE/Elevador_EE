

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jul 18 13:49:04 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x7E,2
    84  0000                     
    85                           ; Version 2.40
    86                           ; Generated 17/11/2021 GMT
    87                           ; 
    88                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F1827 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0095                     	;# 
   156  0096                     	;# 
   157  0097                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009A                     	;# 
   161  009B                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  0111                     	;# 
   169  0112                     	;# 
   170  0113                     	;# 
   171  0114                     	;# 
   172  0115                     	;# 
   173  0116                     	;# 
   174  0117                     	;# 
   175  0118                     	;# 
   176  0119                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011D                     	;# 
   180  011E                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0191                     	;# 
   184  0191                     	;# 
   185  0192                     	;# 
   186  0193                     	;# 
   187  0193                     	;# 
   188  0193                     	;# 
   189  0194                     	;# 
   190  0195                     	;# 
   191  0196                     	;# 
   192  0199                     	;# 
   193  019A                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019C                     	;# 
   199  019C                     	;# 
   200  019D                     	;# 
   201  019E                     	;# 
   202  019F                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  0211                     	;# 
   206  0211                     	;# 
   207  0212                     	;# 
   208  0212                     	;# 
   209  0213                     	;# 
   210  0213                     	;# 
   211  0214                     	;# 
   212  0214                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0216                     	;# 
   217  0216                     	;# 
   218  0217                     	;# 
   219  0217                     	;# 
   220  0219                     	;# 
   221  021A                     	;# 
   222  021B                     	;# 
   223  021C                     	;# 
   224  021D                     	;# 
   225  021E                     	;# 
   226  021F                     	;# 
   227  0291                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0294                     	;# 
   232  0295                     	;# 
   233  0295                     	;# 
   234  0296                     	;# 
   235  0298                     	;# 
   236  0298                     	;# 
   237  0299                     	;# 
   238  029A                     	;# 
   239  029B                     	;# 
   240  029C                     	;# 
   241  029C                     	;# 
   242  029D                     	;# 
   243  029E                     	;# 
   244  029E                     	;# 
   245  0311                     	;# 
   246  0311                     	;# 
   247  0312                     	;# 
   248  0313                     	;# 
   249  0318                     	;# 
   250  0318                     	;# 
   251  0319                     	;# 
   252  031A                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  039A                     	;# 
   257  039C                     	;# 
   258  039D                     	;# 
   259  039E                     	;# 
   260  039F                     	;# 
   261  0415                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  0FE4                     	;# 
   268  0FE5                     	;# 
   269  0FE6                     	;# 
   270  0FE7                     	;# 
   271  0FE8                     	;# 
   272  0FE9                     	;# 
   273  0FEA                     	;# 
   274  0FEB                     	;# 
   275  0FED                     	;# 
   276  0FEE                     	;# 
   277  0FEF                     	;# 
   278  0000                     	;# 
   279  0001                     	;# 
   280  0002                     	;# 
   281  0003                     	;# 
   282  0004                     	;# 
   283  0005                     	;# 
   284  0006                     	;# 
   285  0007                     	;# 
   286  0008                     	;# 
   287  0009                     	;# 
   288  000A                     	;# 
   289  000B                     	;# 
   290  000C                     	;# 
   291  000D                     	;# 
   292  0011                     	;# 
   293  0012                     	;# 
   294  0013                     	;# 
   295  0014                     	;# 
   296  0015                     	;# 
   297  0016                     	;# 
   298  0016                     	;# 
   299  0017                     	;# 
   300  0018                     	;# 
   301  0019                     	;# 
   302  001A                     	;# 
   303  001B                     	;# 
   304  001C                     	;# 
   305  001E                     	;# 
   306  001F                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009B                     	;# 
   321  009C                     	;# 
   322  009D                     	;# 
   323  009E                     	;# 
   324  010C                     	;# 
   325  010D                     	;# 
   326  0111                     	;# 
   327  0112                     	;# 
   328  0113                     	;# 
   329  0114                     	;# 
   330  0115                     	;# 
   331  0116                     	;# 
   332  0117                     	;# 
   333  0118                     	;# 
   334  0119                     	;# 
   335  011A                     	;# 
   336  011B                     	;# 
   337  011D                     	;# 
   338  011E                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0191                     	;# 
   342  0191                     	;# 
   343  0192                     	;# 
   344  0193                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0194                     	;# 
   348  0195                     	;# 
   349  0196                     	;# 
   350  0199                     	;# 
   351  019A                     	;# 
   352  019B                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019C                     	;# 
   357  019C                     	;# 
   358  019D                     	;# 
   359  019E                     	;# 
   360  019F                     	;# 
   361  020C                     	;# 
   362  020D                     	;# 
   363  0211                     	;# 
   364  0211                     	;# 
   365  0212                     	;# 
   366  0212                     	;# 
   367  0213                     	;# 
   368  0213                     	;# 
   369  0214                     	;# 
   370  0214                     	;# 
   371  0215                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0216                     	;# 
   375  0216                     	;# 
   376  0217                     	;# 
   377  0217                     	;# 
   378  0219                     	;# 
   379  021A                     	;# 
   380  021B                     	;# 
   381  021C                     	;# 
   382  021D                     	;# 
   383  021E                     	;# 
   384  021F                     	;# 
   385  0291                     	;# 
   386  0291                     	;# 
   387  0292                     	;# 
   388  0293                     	;# 
   389  0294                     	;# 
   390  0295                     	;# 
   391  0295                     	;# 
   392  0296                     	;# 
   393  0298                     	;# 
   394  0298                     	;# 
   395  0299                     	;# 
   396  029A                     	;# 
   397  029B                     	;# 
   398  029C                     	;# 
   399  029C                     	;# 
   400  029D                     	;# 
   401  029E                     	;# 
   402  029E                     	;# 
   403  0311                     	;# 
   404  0311                     	;# 
   405  0312                     	;# 
   406  0313                     	;# 
   407  0318                     	;# 
   408  0318                     	;# 
   409  0319                     	;# 
   410  031A                     	;# 
   411  0394                     	;# 
   412  0395                     	;# 
   413  0396                     	;# 
   414  039A                     	;# 
   415  039C                     	;# 
   416  039D                     	;# 
   417  039E                     	;# 
   418  039F                     	;# 
   419  0415                     	;# 
   420  0416                     	;# 
   421  0417                     	;# 
   422  041C                     	;# 
   423  041D                     	;# 
   424  041E                     	;# 
   425  0FE4                     	;# 
   426  0FE5                     	;# 
   427  0FE6                     	;# 
   428  0FE7                     	;# 
   429  0FE8                     	;# 
   430  0FE9                     	;# 
   431  0FEA                     	;# 
   432  0FEB                     	;# 
   433  0FED                     	;# 
   434  0FEE                     	;# 
   435  0FEF                     	;# 
   436  0000                     	;# 
   437  0001                     	;# 
   438  0002                     	;# 
   439  0003                     	;# 
   440  0004                     	;# 
   441  0005                     	;# 
   442  0006                     	;# 
   443  0007                     	;# 
   444  0008                     	;# 
   445  0009                     	;# 
   446  000A                     	;# 
   447  000B                     	;# 
   448  000C                     	;# 
   449  000D                     	;# 
   450  0011                     	;# 
   451  0012                     	;# 
   452  0013                     	;# 
   453  0014                     	;# 
   454  0015                     	;# 
   455  0016                     	;# 
   456  0016                     	;# 
   457  0017                     	;# 
   458  0018                     	;# 
   459  0019                     	;# 
   460  001A                     	;# 
   461  001B                     	;# 
   462  001C                     	;# 
   463  001E                     	;# 
   464  001F                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  0091                     	;# 
   468  0092                     	;# 
   469  0093                     	;# 
   470  0094                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0097                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009A                     	;# 
   477  009B                     	;# 
   478  009B                     	;# 
   479  009C                     	;# 
   480  009D                     	;# 
   481  009E                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  0111                     	;# 
   485  0112                     	;# 
   486  0113                     	;# 
   487  0114                     	;# 
   488  0115                     	;# 
   489  0116                     	;# 
   490  0117                     	;# 
   491  0118                     	;# 
   492  0119                     	;# 
   493  011A                     	;# 
   494  011B                     	;# 
   495  011D                     	;# 
   496  011E                     	;# 
   497  018C                     	;# 
   498  018D                     	;# 
   499  0191                     	;# 
   500  0191                     	;# 
   501  0192                     	;# 
   502  0193                     	;# 
   503  0193                     	;# 
   504  0193                     	;# 
   505  0194                     	;# 
   506  0195                     	;# 
   507  0196                     	;# 
   508  0199                     	;# 
   509  019A                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019B                     	;# 
   514  019C                     	;# 
   515  019C                     	;# 
   516  019D                     	;# 
   517  019E                     	;# 
   518  019F                     	;# 
   519  020C                     	;# 
   520  020D                     	;# 
   521  0211                     	;# 
   522  0211                     	;# 
   523  0212                     	;# 
   524  0212                     	;# 
   525  0213                     	;# 
   526  0213                     	;# 
   527  0214                     	;# 
   528  0214                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0216                     	;# 
   533  0216                     	;# 
   534  0217                     	;# 
   535  0217                     	;# 
   536  0219                     	;# 
   537  021A                     	;# 
   538  021B                     	;# 
   539  021C                     	;# 
   540  021D                     	;# 
   541  021E                     	;# 
   542  021F                     	;# 
   543  0291                     	;# 
   544  0291                     	;# 
   545  0292                     	;# 
   546  0293                     	;# 
   547  0294                     	;# 
   548  0295                     	;# 
   549  0295                     	;# 
   550  0296                     	;# 
   551  0298                     	;# 
   552  0298                     	;# 
   553  0299                     	;# 
   554  029A                     	;# 
   555  029B                     	;# 
   556  029C                     	;# 
   557  029C                     	;# 
   558  029D                     	;# 
   559  029E                     	;# 
   560  029E                     	;# 
   561  0311                     	;# 
   562  0311                     	;# 
   563  0312                     	;# 
   564  0313                     	;# 
   565  0318                     	;# 
   566  0318                     	;# 
   567  0319                     	;# 
   568  031A                     	;# 
   569  0394                     	;# 
   570  0395                     	;# 
   571  0396                     	;# 
   572  039A                     	;# 
   573  039C                     	;# 
   574  039D                     	;# 
   575  039E                     	;# 
   576  039F                     	;# 
   577  0415                     	;# 
   578  0416                     	;# 
   579  0417                     	;# 
   580  041C                     	;# 
   581  041D                     	;# 
   582  041E                     	;# 
   583  0FE4                     	;# 
   584  0FE5                     	;# 
   585  0FE6                     	;# 
   586  0FE7                     	;# 
   587  0FE8                     	;# 
   588  0FE9                     	;# 
   589  0FEA                     	;# 
   590  0FEB                     	;# 
   591  0FED                     	;# 
   592  0FEE                     	;# 
   593  0FEF                     	;# 
   594  0000                     	;# 
   595  0001                     	;# 
   596  0002                     	;# 
   597  0003                     	;# 
   598  0004                     	;# 
   599  0005                     	;# 
   600  0006                     	;# 
   601  0007                     	;# 
   602  0008                     	;# 
   603  0009                     	;# 
   604  000A                     	;# 
   605  000B                     	;# 
   606  000C                     	;# 
   607  000D                     	;# 
   608  0011                     	;# 
   609  0012                     	;# 
   610  0013                     	;# 
   611  0014                     	;# 
   612  0015                     	;# 
   613  0016                     	;# 
   614  0016                     	;# 
   615  0017                     	;# 
   616  0018                     	;# 
   617  0019                     	;# 
   618  001A                     	;# 
   619  001B                     	;# 
   620  001C                     	;# 
   621  001E                     	;# 
   622  001F                     	;# 
   623  008C                     	;# 
   624  008D                     	;# 
   625  0091                     	;# 
   626  0092                     	;# 
   627  0093                     	;# 
   628  0094                     	;# 
   629  0095                     	;# 
   630  0096                     	;# 
   631  0097                     	;# 
   632  0098                     	;# 
   633  0099                     	;# 
   634  009A                     	;# 
   635  009B                     	;# 
   636  009B                     	;# 
   637  009C                     	;# 
   638  009D                     	;# 
   639  009E                     	;# 
   640  010C                     	;# 
   641  010D                     	;# 
   642  0111                     	;# 
   643  0112                     	;# 
   644  0113                     	;# 
   645  0114                     	;# 
   646  0115                     	;# 
   647  0116                     	;# 
   648  0117                     	;# 
   649  0118                     	;# 
   650  0119                     	;# 
   651  011A                     	;# 
   652  011B                     	;# 
   653  011D                     	;# 
   654  011E                     	;# 
   655  018C                     	;# 
   656  018D                     	;# 
   657  0191                     	;# 
   658  0191                     	;# 
   659  0192                     	;# 
   660  0193                     	;# 
   661  0193                     	;# 
   662  0193                     	;# 
   663  0194                     	;# 
   664  0195                     	;# 
   665  0196                     	;# 
   666  0199                     	;# 
   667  019A                     	;# 
   668  019B                     	;# 
   669  019B                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019C                     	;# 
   673  019C                     	;# 
   674  019D                     	;# 
   675  019E                     	;# 
   676  019F                     	;# 
   677  020C                     	;# 
   678  020D                     	;# 
   679  0211                     	;# 
   680  0211                     	;# 
   681  0212                     	;# 
   682  0212                     	;# 
   683  0213                     	;# 
   684  0213                     	;# 
   685  0214                     	;# 
   686  0214                     	;# 
   687  0215                     	;# 
   688  0215                     	;# 
   689  0215                     	;# 
   690  0216                     	;# 
   691  0216                     	;# 
   692  0217                     	;# 
   693  0217                     	;# 
   694  0219                     	;# 
   695  021A                     	;# 
   696  021B                     	;# 
   697  021C                     	;# 
   698  021D                     	;# 
   699  021E                     	;# 
   700  021F                     	;# 
   701  0291                     	;# 
   702  0291                     	;# 
   703  0292                     	;# 
   704  0293                     	;# 
   705  0294                     	;# 
   706  0295                     	;# 
   707  0295                     	;# 
   708  0296                     	;# 
   709  0298                     	;# 
   710  0298                     	;# 
   711  0299                     	;# 
   712  029A                     	;# 
   713  029B                     	;# 
   714  029C                     	;# 
   715  029C                     	;# 
   716  029D                     	;# 
   717  029E                     	;# 
   718  029E                     	;# 
   719  0311                     	;# 
   720  0311                     	;# 
   721  0312                     	;# 
   722  0313                     	;# 
   723  0318                     	;# 
   724  0318                     	;# 
   725  0319                     	;# 
   726  031A                     	;# 
   727  0394                     	;# 
   728  0395                     	;# 
   729  0396                     	;# 
   730  039A                     	;# 
   731  039C                     	;# 
   732  039D                     	;# 
   733  039E                     	;# 
   734  039F                     	;# 
   735  0415                     	;# 
   736  0416                     	;# 
   737  0417                     	;# 
   738  041C                     	;# 
   739  041D                     	;# 
   740  041E                     	;# 
   741  0FE4                     	;# 
   742  0FE5                     	;# 
   743  0FE6                     	;# 
   744  0FE7                     	;# 
   745  0FE8                     	;# 
   746  0FE9                     	;# 
   747  0FEA                     	;# 
   748  0FEB                     	;# 
   749  0FED                     	;# 
   750  0FEE                     	;# 
   751  0FEF                     	;# 
   752  0000                     	;# 
   753  0001                     	;# 
   754  0002                     	;# 
   755  0003                     	;# 
   756  0004                     	;# 
   757  0005                     	;# 
   758  0006                     	;# 
   759  0007                     	;# 
   760  0008                     	;# 
   761  0009                     	;# 
   762  000A                     	;# 
   763  000B                     	;# 
   764  000C                     	;# 
   765  000D                     	;# 
   766  0011                     	;# 
   767  0012                     	;# 
   768  0013                     	;# 
   769  0014                     	;# 
   770  0015                     	;# 
   771  0016                     	;# 
   772  0016                     	;# 
   773  0017                     	;# 
   774  0018                     	;# 
   775  0019                     	;# 
   776  001A                     	;# 
   777  001B                     	;# 
   778  001C                     	;# 
   779  001E                     	;# 
   780  001F                     	;# 
   781  008C                     	;# 
   782  008D                     	;# 
   783  0091                     	;# 
   784  0092                     	;# 
   785  0093                     	;# 
   786  0094                     	;# 
   787  0095                     	;# 
   788  0096                     	;# 
   789  0097                     	;# 
   790  0098                     	;# 
   791  0099                     	;# 
   792  009A                     	;# 
   793  009B                     	;# 
   794  009B                     	;# 
   795  009C                     	;# 
   796  009D                     	;# 
   797  009E                     	;# 
   798  010C                     	;# 
   799  010D                     	;# 
   800  0111                     	;# 
   801  0112                     	;# 
   802  0113                     	;# 
   803  0114                     	;# 
   804  0115                     	;# 
   805  0116                     	;# 
   806  0117                     	;# 
   807  0118                     	;# 
   808  0119                     	;# 
   809  011A                     	;# 
   810  011B                     	;# 
   811  011D                     	;# 
   812  011E                     	;# 
   813  018C                     	;# 
   814  018D                     	;# 
   815  0191                     	;# 
   816  0191                     	;# 
   817  0192                     	;# 
   818  0193                     	;# 
   819  0193                     	;# 
   820  0193                     	;# 
   821  0194                     	;# 
   822  0195                     	;# 
   823  0196                     	;# 
   824  0199                     	;# 
   825  019A                     	;# 
   826  019B                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019C                     	;# 
   831  019C                     	;# 
   832  019D                     	;# 
   833  019E                     	;# 
   834  019F                     	;# 
   835  020C                     	;# 
   836  020D                     	;# 
   837  0211                     	;# 
   838  0211                     	;# 
   839  0212                     	;# 
   840  0212                     	;# 
   841  0213                     	;# 
   842  0213                     	;# 
   843  0214                     	;# 
   844  0214                     	;# 
   845  0215                     	;# 
   846  0215                     	;# 
   847  0215                     	;# 
   848  0216                     	;# 
   849  0216                     	;# 
   850  0217                     	;# 
   851  0217                     	;# 
   852  0219                     	;# 
   853  021A                     	;# 
   854  021B                     	;# 
   855  021C                     	;# 
   856  021D                     	;# 
   857  021E                     	;# 
   858  021F                     	;# 
   859  0291                     	;# 
   860  0291                     	;# 
   861  0292                     	;# 
   862  0293                     	;# 
   863  0294                     	;# 
   864  0295                     	;# 
   865  0295                     	;# 
   866  0296                     	;# 
   867  0298                     	;# 
   868  0298                     	;# 
   869  0299                     	;# 
   870  029A                     	;# 
   871  029B                     	;# 
   872  029C                     	;# 
   873  029C                     	;# 
   874  029D                     	;# 
   875  029E                     	;# 
   876  029E                     	;# 
   877  0311                     	;# 
   878  0311                     	;# 
   879  0312                     	;# 
   880  0313                     	;# 
   881  0318                     	;# 
   882  0318                     	;# 
   883  0319                     	;# 
   884  031A                     	;# 
   885  0394                     	;# 
   886  0395                     	;# 
   887  0396                     	;# 
   888  039A                     	;# 
   889  039C                     	;# 
   890  039D                     	;# 
   891  039E                     	;# 
   892  039F                     	;# 
   893  0415                     	;# 
   894  0416                     	;# 
   895  0417                     	;# 
   896  041C                     	;# 
   897  041D                     	;# 
   898  041E                     	;# 
   899  0FE4                     	;# 
   900  0FE5                     	;# 
   901  0FE6                     	;# 
   902  0FE7                     	;# 
   903  0FE8                     	;# 
   904  0FE9                     	;# 
   905  0FEA                     	;# 
   906  0FEB                     	;# 
   907  0FED                     	;# 
   908  0FEE                     	;# 
   909  0FEF                     	;# 
   910  0000                     	;# 
   911  0001                     	;# 
   912  0002                     	;# 
   913  0003                     	;# 
   914  0004                     	;# 
   915  0005                     	;# 
   916  0006                     	;# 
   917  0007                     	;# 
   918  0008                     	;# 
   919  0009                     	;# 
   920  000A                     	;# 
   921  000B                     	;# 
   922  000C                     	;# 
   923  000D                     	;# 
   924  0011                     	;# 
   925  0012                     	;# 
   926  0013                     	;# 
   927  0014                     	;# 
   928  0015                     	;# 
   929  0016                     	;# 
   930  0016                     	;# 
   931  0017                     	;# 
   932  0018                     	;# 
   933  0019                     	;# 
   934  001A                     	;# 
   935  001B                     	;# 
   936  001C                     	;# 
   937  001E                     	;# 
   938  001F                     	;# 
   939  008C                     	;# 
   940  008D                     	;# 
   941  0091                     	;# 
   942  0092                     	;# 
   943  0093                     	;# 
   944  0094                     	;# 
   945  0095                     	;# 
   946  0096                     	;# 
   947  0097                     	;# 
   948  0098                     	;# 
   949  0099                     	;# 
   950  009A                     	;# 
   951  009B                     	;# 
   952  009B                     	;# 
   953  009C                     	;# 
   954  009D                     	;# 
   955  009E                     	;# 
   956  010C                     	;# 
   957  010D                     	;# 
   958  0111                     	;# 
   959  0112                     	;# 
   960  0113                     	;# 
   961  0114                     	;# 
   962  0115                     	;# 
   963  0116                     	;# 
   964  0117                     	;# 
   965  0118                     	;# 
   966  0119                     	;# 
   967  011A                     	;# 
   968  011B                     	;# 
   969  011D                     	;# 
   970  011E                     	;# 
   971  018C                     	;# 
   972  018D                     	;# 
   973  0191                     	;# 
   974  0191                     	;# 
   975  0192                     	;# 
   976  0193                     	;# 
   977  0193                     	;# 
   978  0193                     	;# 
   979  0194                     	;# 
   980  0195                     	;# 
   981  0196                     	;# 
   982  0199                     	;# 
   983  019A                     	;# 
   984  019B                     	;# 
   985  019B                     	;# 
   986  019B                     	;# 
   987  019B                     	;# 
   988  019C                     	;# 
   989  019C                     	;# 
   990  019D                     	;# 
   991  019E                     	;# 
   992  019F                     	;# 
   993  020C                     	;# 
   994  020D                     	;# 
   995  0211                     	;# 
   996  0211                     	;# 
   997  0212                     	;# 
   998  0212                     	;# 
   999  0213                     	;# 
  1000  0213                     	;# 
  1001  0214                     	;# 
  1002  0214                     	;# 
  1003  0215                     	;# 
  1004  0215                     	;# 
  1005  0215                     	;# 
  1006  0216                     	;# 
  1007  0216                     	;# 
  1008  0217                     	;# 
  1009  0217                     	;# 
  1010  0219                     	;# 
  1011  021A                     	;# 
  1012  021B                     	;# 
  1013  021C                     	;# 
  1014  021D                     	;# 
  1015  021E                     	;# 
  1016  021F                     	;# 
  1017  0291                     	;# 
  1018  0291                     	;# 
  1019  0292                     	;# 
  1020  0293                     	;# 
  1021  0294                     	;# 
  1022  0295                     	;# 
  1023  0295                     	;# 
  1024  0296                     	;# 
  1025  0298                     	;# 
  1026  0298                     	;# 
  1027  0299                     	;# 
  1028  029A                     	;# 
  1029  029B                     	;# 
  1030  029C                     	;# 
  1031  029C                     	;# 
  1032  029D                     	;# 
  1033  029E                     	;# 
  1034  029E                     	;# 
  1035  0311                     	;# 
  1036  0311                     	;# 
  1037  0312                     	;# 
  1038  0313                     	;# 
  1039  0318                     	;# 
  1040  0318                     	;# 
  1041  0319                     	;# 
  1042  031A                     	;# 
  1043  0394                     	;# 
  1044  0395                     	;# 
  1045  0396                     	;# 
  1046  039A                     	;# 
  1047  039C                     	;# 
  1048  039D                     	;# 
  1049  039E                     	;# 
  1050  039F                     	;# 
  1051  0415                     	;# 
  1052  0416                     	;# 
  1053  0417                     	;# 
  1054  041C                     	;# 
  1055  041D                     	;# 
  1056  041E                     	;# 
  1057  0FE4                     	;# 
  1058  0FE5                     	;# 
  1059  0FE6                     	;# 
  1060  0FE7                     	;# 
  1061  0FE8                     	;# 
  1062  0FE9                     	;# 
  1063  0FEA                     	;# 
  1064  0FEB                     	;# 
  1065  0FED                     	;# 
  1066  0FEE                     	;# 
  1067  0FEF                     	;# 
  1068  0000                     	;# 
  1069  0001                     	;# 
  1070  0002                     	;# 
  1071  0003                     	;# 
  1072  0004                     	;# 
  1073  0005                     	;# 
  1074  0006                     	;# 
  1075  0007                     	;# 
  1076  0008                     	;# 
  1077  0009                     	;# 
  1078  000A                     	;# 
  1079  000B                     	;# 
  1080  000C                     	;# 
  1081  000D                     	;# 
  1082  0011                     	;# 
  1083  0012                     	;# 
  1084  0013                     	;# 
  1085  0014                     	;# 
  1086  0015                     	;# 
  1087  0016                     	;# 
  1088  0016                     	;# 
  1089  0017                     	;# 
  1090  0018                     	;# 
  1091  0019                     	;# 
  1092  001A                     	;# 
  1093  001B                     	;# 
  1094  001C                     	;# 
  1095  001E                     	;# 
  1096  001F                     	;# 
  1097  008C                     	;# 
  1098  008D                     	;# 
  1099  0091                     	;# 
  1100  0092                     	;# 
  1101  0093                     	;# 
  1102  0094                     	;# 
  1103  0095                     	;# 
  1104  0096                     	;# 
  1105  0097                     	;# 
  1106  0098                     	;# 
  1107  0099                     	;# 
  1108  009A                     	;# 
  1109  009B                     	;# 
  1110  009B                     	;# 
  1111  009C                     	;# 
  1112  009D                     	;# 
  1113  009E                     	;# 
  1114  010C                     	;# 
  1115  010D                     	;# 
  1116  0111                     	;# 
  1117  0112                     	;# 
  1118  0113                     	;# 
  1119  0114                     	;# 
  1120  0115                     	;# 
  1121  0116                     	;# 
  1122  0117                     	;# 
  1123  0118                     	;# 
  1124  0119                     	;# 
  1125  011A                     	;# 
  1126  011B                     	;# 
  1127  011D                     	;# 
  1128  011E                     	;# 
  1129  018C                     	;# 
  1130  018D                     	;# 
  1131  0191                     	;# 
  1132  0191                     	;# 
  1133  0192                     	;# 
  1134  0193                     	;# 
  1135  0193                     	;# 
  1136  0193                     	;# 
  1137  0194                     	;# 
  1138  0195                     	;# 
  1139  0196                     	;# 
  1140  0199                     	;# 
  1141  019A                     	;# 
  1142  019B                     	;# 
  1143  019B                     	;# 
  1144  019B                     	;# 
  1145  019B                     	;# 
  1146  019C                     	;# 
  1147  019C                     	;# 
  1148  019D                     	;# 
  1149  019E                     	;# 
  1150  019F                     	;# 
  1151  020C                     	;# 
  1152  020D                     	;# 
  1153  0211                     	;# 
  1154  0211                     	;# 
  1155  0212                     	;# 
  1156  0212                     	;# 
  1157  0213                     	;# 
  1158  0213                     	;# 
  1159  0214                     	;# 
  1160  0214                     	;# 
  1161  0215                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0216                     	;# 
  1165  0216                     	;# 
  1166  0217                     	;# 
  1167  0217                     	;# 
  1168  0219                     	;# 
  1169  021A                     	;# 
  1170  021B                     	;# 
  1171  021C                     	;# 
  1172  021D                     	;# 
  1173  021E                     	;# 
  1174  021F                     	;# 
  1175  0291                     	;# 
  1176  0291                     	;# 
  1177  0292                     	;# 
  1178  0293                     	;# 
  1179  0294                     	;# 
  1180  0295                     	;# 
  1181  0295                     	;# 
  1182  0296                     	;# 
  1183  0298                     	;# 
  1184  0298                     	;# 
  1185  0299                     	;# 
  1186  029A                     	;# 
  1187  029B                     	;# 
  1188  029C                     	;# 
  1189  029C                     	;# 
  1190  029D                     	;# 
  1191  029E                     	;# 
  1192  029E                     	;# 
  1193  0311                     	;# 
  1194  0311                     	;# 
  1195  0312                     	;# 
  1196  0313                     	;# 
  1197  0318                     	;# 
  1198  0318                     	;# 
  1199  0319                     	;# 
  1200  031A                     	;# 
  1201  0394                     	;# 
  1202  0395                     	;# 
  1203  0396                     	;# 
  1204  039A                     	;# 
  1205  039C                     	;# 
  1206  039D                     	;# 
  1207  039E                     	;# 
  1208  039F                     	;# 
  1209  0415                     	;# 
  1210  0416                     	;# 
  1211  0417                     	;# 
  1212  041C                     	;# 
  1213  041D                     	;# 
  1214  041E                     	;# 
  1215  0FE4                     	;# 
  1216  0FE5                     	;# 
  1217  0FE6                     	;# 
  1218  0FE7                     	;# 
  1219  0FE8                     	;# 
  1220  0FE9                     	;# 
  1221  0FEA                     	;# 
  1222  0FEB                     	;# 
  1223  0FED                     	;# 
  1224  0FEE                     	;# 
  1225  0FEF                     	;# 
  1226  0000                     	;# 
  1227  0001                     	;# 
  1228  0002                     	;# 
  1229  0003                     	;# 
  1230  0004                     	;# 
  1231  0005                     	;# 
  1232  0006                     	;# 
  1233  0007                     	;# 
  1234  0008                     	;# 
  1235  0009                     	;# 
  1236  000A                     	;# 
  1237  000B                     	;# 
  1238  000C                     	;# 
  1239  000D                     	;# 
  1240  0011                     	;# 
  1241  0012                     	;# 
  1242  0013                     	;# 
  1243  0014                     	;# 
  1244  0015                     	;# 
  1245  0016                     	;# 
  1246  0016                     	;# 
  1247  0017                     	;# 
  1248  0018                     	;# 
  1249  0019                     	;# 
  1250  001A                     	;# 
  1251  001B                     	;# 
  1252  001C                     	;# 
  1253  001E                     	;# 
  1254  001F                     	;# 
  1255  008C                     	;# 
  1256  008D                     	;# 
  1257  0091                     	;# 
  1258  0092                     	;# 
  1259  0093                     	;# 
  1260  0094                     	;# 
  1261  0095                     	;# 
  1262  0096                     	;# 
  1263  0097                     	;# 
  1264  0098                     	;# 
  1265  0099                     	;# 
  1266  009A                     	;# 
  1267  009B                     	;# 
  1268  009B                     	;# 
  1269  009C                     	;# 
  1270  009D                     	;# 
  1271  009E                     	;# 
  1272  010C                     	;# 
  1273  010D                     	;# 
  1274  0111                     	;# 
  1275  0112                     	;# 
  1276  0113                     	;# 
  1277  0114                     	;# 
  1278  0115                     	;# 
  1279  0116                     	;# 
  1280  0117                     	;# 
  1281  0118                     	;# 
  1282  0119                     	;# 
  1283  011A                     	;# 
  1284  011B                     	;# 
  1285  011D                     	;# 
  1286  011E                     	;# 
  1287  018C                     	;# 
  1288  018D                     	;# 
  1289  0191                     	;# 
  1290  0191                     	;# 
  1291  0192                     	;# 
  1292  0193                     	;# 
  1293  0193                     	;# 
  1294  0193                     	;# 
  1295  0194                     	;# 
  1296  0195                     	;# 
  1297  0196                     	;# 
  1298  0199                     	;# 
  1299  019A                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019B                     	;# 
  1304  019C                     	;# 
  1305  019C                     	;# 
  1306  019D                     	;# 
  1307  019E                     	;# 
  1308  019F                     	;# 
  1309  020C                     	;# 
  1310  020D                     	;# 
  1311  0211                     	;# 
  1312  0211                     	;# 
  1313  0212                     	;# 
  1314  0212                     	;# 
  1315  0213                     	;# 
  1316  0213                     	;# 
  1317  0214                     	;# 
  1318  0214                     	;# 
  1319  0215                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0216                     	;# 
  1323  0216                     	;# 
  1324  0217                     	;# 
  1325  0217                     	;# 
  1326  0219                     	;# 
  1327  021A                     	;# 
  1328  021B                     	;# 
  1329  021C                     	;# 
  1330  021D                     	;# 
  1331  021E                     	;# 
  1332  021F                     	;# 
  1333  0291                     	;# 
  1334  0291                     	;# 
  1335  0292                     	;# 
  1336  0293                     	;# 
  1337  0294                     	;# 
  1338  0295                     	;# 
  1339  0295                     	;# 
  1340  0296                     	;# 
  1341  0298                     	;# 
  1342  0298                     	;# 
  1343  0299                     	;# 
  1344  029A                     	;# 
  1345  029B                     	;# 
  1346  029C                     	;# 
  1347  029C                     	;# 
  1348  029D                     	;# 
  1349  029E                     	;# 
  1350  029E                     	;# 
  1351  0311                     	;# 
  1352  0311                     	;# 
  1353  0312                     	;# 
  1354  0313                     	;# 
  1355  0318                     	;# 
  1356  0318                     	;# 
  1357  0319                     	;# 
  1358  031A                     	;# 
  1359  0394                     	;# 
  1360  0395                     	;# 
  1361  0396                     	;# 
  1362  039A                     	;# 
  1363  039C                     	;# 
  1364  039D                     	;# 
  1365  039E                     	;# 
  1366  039F                     	;# 
  1367  0415                     	;# 
  1368  0416                     	;# 
  1369  0417                     	;# 
  1370  041C                     	;# 
  1371  041D                     	;# 
  1372  041E                     	;# 
  1373  0FE4                     	;# 
  1374  0FE5                     	;# 
  1375  0FE6                     	;# 
  1376  0FE7                     	;# 
  1377  0FE8                     	;# 
  1378  0FE9                     	;# 
  1379  0FEA                     	;# 
  1380  0FEB                     	;# 
  1381  0FED                     	;# 
  1382  0FEE                     	;# 
  1383  0FEF                     	;# 
  1384  0000                     	;# 
  1385  0001                     	;# 
  1386  0002                     	;# 
  1387  0003                     	;# 
  1388  0004                     	;# 
  1389  0005                     	;# 
  1390  0006                     	;# 
  1391  0007                     	;# 
  1392  0008                     	;# 
  1393  0009                     	;# 
  1394  000A                     	;# 
  1395  000B                     	;# 
  1396  000C                     	;# 
  1397  000D                     	;# 
  1398  0011                     	;# 
  1399  0012                     	;# 
  1400  0013                     	;# 
  1401  0014                     	;# 
  1402  0015                     	;# 
  1403  0016                     	;# 
  1404  0016                     	;# 
  1405  0017                     	;# 
  1406  0018                     	;# 
  1407  0019                     	;# 
  1408  001A                     	;# 
  1409  001B                     	;# 
  1410  001C                     	;# 
  1411  001E                     	;# 
  1412  001F                     	;# 
  1413  008C                     	;# 
  1414  008D                     	;# 
  1415  0091                     	;# 
  1416  0092                     	;# 
  1417  0093                     	;# 
  1418  0094                     	;# 
  1419  0095                     	;# 
  1420  0096                     	;# 
  1421  0097                     	;# 
  1422  0098                     	;# 
  1423  0099                     	;# 
  1424  009A                     	;# 
  1425  009B                     	;# 
  1426  009B                     	;# 
  1427  009C                     	;# 
  1428  009D                     	;# 
  1429  009E                     	;# 
  1430  010C                     	;# 
  1431  010D                     	;# 
  1432  0111                     	;# 
  1433  0112                     	;# 
  1434  0113                     	;# 
  1435  0114                     	;# 
  1436  0115                     	;# 
  1437  0116                     	;# 
  1438  0117                     	;# 
  1439  0118                     	;# 
  1440  0119                     	;# 
  1441  011A                     	;# 
  1442  011B                     	;# 
  1443  011D                     	;# 
  1444  011E                     	;# 
  1445  018C                     	;# 
  1446  018D                     	;# 
  1447  0191                     	;# 
  1448  0191                     	;# 
  1449  0192                     	;# 
  1450  0193                     	;# 
  1451  0193                     	;# 
  1452  0193                     	;# 
  1453  0194                     	;# 
  1454  0195                     	;# 
  1455  0196                     	;# 
  1456  0199                     	;# 
  1457  019A                     	;# 
  1458  019B                     	;# 
  1459  019B                     	;# 
  1460  019B                     	;# 
  1461  019B                     	;# 
  1462  019C                     	;# 
  1463  019C                     	;# 
  1464  019D                     	;# 
  1465  019E                     	;# 
  1466  019F                     	;# 
  1467  020C                     	;# 
  1468  020D                     	;# 
  1469  0211                     	;# 
  1470  0211                     	;# 
  1471  0212                     	;# 
  1472  0212                     	;# 
  1473  0213                     	;# 
  1474  0213                     	;# 
  1475  0214                     	;# 
  1476  0214                     	;# 
  1477  0215                     	;# 
  1478  0215                     	;# 
  1479  0215                     	;# 
  1480  0216                     	;# 
  1481  0216                     	;# 
  1482  0217                     	;# 
  1483  0217                     	;# 
  1484  0219                     	;# 
  1485  021A                     	;# 
  1486  021B                     	;# 
  1487  021C                     	;# 
  1488  021D                     	;# 
  1489  021E                     	;# 
  1490  021F                     	;# 
  1491  0291                     	;# 
  1492  0291                     	;# 
  1493  0292                     	;# 
  1494  0293                     	;# 
  1495  0294                     	;# 
  1496  0295                     	;# 
  1497  0295                     	;# 
  1498  0296                     	;# 
  1499  0298                     	;# 
  1500  0298                     	;# 
  1501  0299                     	;# 
  1502  029A                     	;# 
  1503  029B                     	;# 
  1504  029C                     	;# 
  1505  029C                     	;# 
  1506  029D                     	;# 
  1507  029E                     	;# 
  1508  029E                     	;# 
  1509  0311                     	;# 
  1510  0311                     	;# 
  1511  0312                     	;# 
  1512  0313                     	;# 
  1513  0318                     	;# 
  1514  0318                     	;# 
  1515  0319                     	;# 
  1516  031A                     	;# 
  1517  0394                     	;# 
  1518  0395                     	;# 
  1519  0396                     	;# 
  1520  039A                     	;# 
  1521  039C                     	;# 
  1522  039D                     	;# 
  1523  039E                     	;# 
  1524  039F                     	;# 
  1525  0415                     	;# 
  1526  0416                     	;# 
  1527  0417                     	;# 
  1528  041C                     	;# 
  1529  041D                     	;# 
  1530  041E                     	;# 
  1531  0FE4                     	;# 
  1532  0FE5                     	;# 
  1533  0FE6                     	;# 
  1534  0FE7                     	;# 
  1535  0FE8                     	;# 
  1536  0FE9                     	;# 
  1537  0FEA                     	;# 
  1538  0FEB                     	;# 
  1539  0FED                     	;# 
  1540  0FEE                     	;# 
  1541  0FEF                     	;# 
  1542  0000                     	;# 
  1543  0001                     	;# 
  1544  0002                     	;# 
  1545  0003                     	;# 
  1546  0004                     	;# 
  1547  0005                     	;# 
  1548  0006                     	;# 
  1549  0007                     	;# 
  1550  0008                     	;# 
  1551  0009                     	;# 
  1552  000A                     	;# 
  1553  000B                     	;# 
  1554  000C                     	;# 
  1555  000D                     	;# 
  1556  0011                     	;# 
  1557  0012                     	;# 
  1558  0013                     	;# 
  1559  0014                     	;# 
  1560  0015                     	;# 
  1561  0016                     	;# 
  1562  0016                     	;# 
  1563  0017                     	;# 
  1564  0018                     	;# 
  1565  0019                     	;# 
  1566  001A                     	;# 
  1567  001B                     	;# 
  1568  001C                     	;# 
  1569  001E                     	;# 
  1570  001F                     	;# 
  1571  008C                     	;# 
  1572  008D                     	;# 
  1573  0091                     	;# 
  1574  0092                     	;# 
  1575  0093                     	;# 
  1576  0094                     	;# 
  1577  0095                     	;# 
  1578  0096                     	;# 
  1579  0097                     	;# 
  1580  0098                     	;# 
  1581  0099                     	;# 
  1582  009A                     	;# 
  1583  009B                     	;# 
  1584  009B                     	;# 
  1585  009C                     	;# 
  1586  009D                     	;# 
  1587  009E                     	;# 
  1588  010C                     	;# 
  1589  010D                     	;# 
  1590  0111                     	;# 
  1591  0112                     	;# 
  1592  0113                     	;# 
  1593  0114                     	;# 
  1594  0115                     	;# 
  1595  0116                     	;# 
  1596  0117                     	;# 
  1597  0118                     	;# 
  1598  0119                     	;# 
  1599  011A                     	;# 
  1600  011B                     	;# 
  1601  011D                     	;# 
  1602  011E                     	;# 
  1603  018C                     	;# 
  1604  018D                     	;# 
  1605  0191                     	;# 
  1606  0191                     	;# 
  1607  0192                     	;# 
  1608  0193                     	;# 
  1609  0193                     	;# 
  1610  0193                     	;# 
  1611  0194                     	;# 
  1612  0195                     	;# 
  1613  0196                     	;# 
  1614  0199                     	;# 
  1615  019A                     	;# 
  1616  019B                     	;# 
  1617  019B                     	;# 
  1618  019B                     	;# 
  1619  019B                     	;# 
  1620  019C                     	;# 
  1621  019C                     	;# 
  1622  019D                     	;# 
  1623  019E                     	;# 
  1624  019F                     	;# 
  1625  020C                     	;# 
  1626  020D                     	;# 
  1627  0211                     	;# 
  1628  0211                     	;# 
  1629  0212                     	;# 
  1630  0212                     	;# 
  1631  0213                     	;# 
  1632  0213                     	;# 
  1633  0214                     	;# 
  1634  0214                     	;# 
  1635  0215                     	;# 
  1636  0215                     	;# 
  1637  0215                     	;# 
  1638  0216                     	;# 
  1639  0216                     	;# 
  1640  0217                     	;# 
  1641  0217                     	;# 
  1642  0219                     	;# 
  1643  021A                     	;# 
  1644  021B                     	;# 
  1645  021C                     	;# 
  1646  021D                     	;# 
  1647  021E                     	;# 
  1648  021F                     	;# 
  1649  0291                     	;# 
  1650  0291                     	;# 
  1651  0292                     	;# 
  1652  0293                     	;# 
  1653  0294                     	;# 
  1654  0295                     	;# 
  1655  0295                     	;# 
  1656  0296                     	;# 
  1657  0298                     	;# 
  1658  0298                     	;# 
  1659  0299                     	;# 
  1660  029A                     	;# 
  1661  029B                     	;# 
  1662  029C                     	;# 
  1663  029C                     	;# 
  1664  029D                     	;# 
  1665  029E                     	;# 
  1666  029E                     	;# 
  1667  0311                     	;# 
  1668  0311                     	;# 
  1669  0312                     	;# 
  1670  0313                     	;# 
  1671  0318                     	;# 
  1672  0318                     	;# 
  1673  0319                     	;# 
  1674  031A                     	;# 
  1675  0394                     	;# 
  1676  0395                     	;# 
  1677  0396                     	;# 
  1678  039A                     	;# 
  1679  039C                     	;# 
  1680  039D                     	;# 
  1681  039E                     	;# 
  1682  039F                     	;# 
  1683  0415                     	;# 
  1684  0416                     	;# 
  1685  0417                     	;# 
  1686  041C                     	;# 
  1687  041D                     	;# 
  1688  041E                     	;# 
  1689  0FE4                     	;# 
  1690  0FE5                     	;# 
  1691  0FE6                     	;# 
  1692  0FE7                     	;# 
  1693  0FE8                     	;# 
  1694  0FE9                     	;# 
  1695  0FEA                     	;# 
  1696  0FEB                     	;# 
  1697  0FED                     	;# 
  1698  0FEE                     	;# 
  1699  0FEF                     	;# 
  1700  0000                     	;# 
  1701  0001                     	;# 
  1702  0002                     	;# 
  1703  0003                     	;# 
  1704  0004                     	;# 
  1705  0005                     	;# 
  1706  0006                     	;# 
  1707  0007                     	;# 
  1708  0008                     	;# 
  1709  0009                     	;# 
  1710  000A                     	;# 
  1711  000B                     	;# 
  1712  000C                     	;# 
  1713  000D                     	;# 
  1714  0011                     	;# 
  1715  0012                     	;# 
  1716  0013                     	;# 
  1717  0014                     	;# 
  1718  0015                     	;# 
  1719  0016                     	;# 
  1720  0016                     	;# 
  1721  0017                     	;# 
  1722  0018                     	;# 
  1723  0019                     	;# 
  1724  001A                     	;# 
  1725  001B                     	;# 
  1726  001C                     	;# 
  1727  001E                     	;# 
  1728  001F                     	;# 
  1729  008C                     	;# 
  1730  008D                     	;# 
  1731  0091                     	;# 
  1732  0092                     	;# 
  1733  0093                     	;# 
  1734  0094                     	;# 
  1735  0095                     	;# 
  1736  0096                     	;# 
  1737  0097                     	;# 
  1738  0098                     	;# 
  1739  0099                     	;# 
  1740  009A                     	;# 
  1741  009B                     	;# 
  1742  009B                     	;# 
  1743  009C                     	;# 
  1744  009D                     	;# 
  1745  009E                     	;# 
  1746  010C                     	;# 
  1747  010D                     	;# 
  1748  0111                     	;# 
  1749  0112                     	;# 
  1750  0113                     	;# 
  1751  0114                     	;# 
  1752  0115                     	;# 
  1753  0116                     	;# 
  1754  0117                     	;# 
  1755  0118                     	;# 
  1756  0119                     	;# 
  1757  011A                     	;# 
  1758  011B                     	;# 
  1759  011D                     	;# 
  1760  011E                     	;# 
  1761  018C                     	;# 
  1762  018D                     	;# 
  1763  0191                     	;# 
  1764  0191                     	;# 
  1765  0192                     	;# 
  1766  0193                     	;# 
  1767  0193                     	;# 
  1768  0193                     	;# 
  1769  0194                     	;# 
  1770  0195                     	;# 
  1771  0196                     	;# 
  1772  0199                     	;# 
  1773  019A                     	;# 
  1774  019B                     	;# 
  1775  019B                     	;# 
  1776  019B                     	;# 
  1777  019B                     	;# 
  1778  019C                     	;# 
  1779  019C                     	;# 
  1780  019D                     	;# 
  1781  019E                     	;# 
  1782  019F                     	;# 
  1783  020C                     	;# 
  1784  020D                     	;# 
  1785  0211                     	;# 
  1786  0211                     	;# 
  1787  0212                     	;# 
  1788  0212                     	;# 
  1789  0213                     	;# 
  1790  0213                     	;# 
  1791  0214                     	;# 
  1792  0214                     	;# 
  1793  0215                     	;# 
  1794  0215                     	;# 
  1795  0215                     	;# 
  1796  0216                     	;# 
  1797  0216                     	;# 
  1798  0217                     	;# 
  1799  0217                     	;# 
  1800  0219                     	;# 
  1801  021A                     	;# 
  1802  021B                     	;# 
  1803  021C                     	;# 
  1804  021D                     	;# 
  1805  021E                     	;# 
  1806  021F                     	;# 
  1807  0291                     	;# 
  1808  0291                     	;# 
  1809  0292                     	;# 
  1810  0293                     	;# 
  1811  0294                     	;# 
  1812  0295                     	;# 
  1813  0295                     	;# 
  1814  0296                     	;# 
  1815  0298                     	;# 
  1816  0298                     	;# 
  1817  0299                     	;# 
  1818  029A                     	;# 
  1819  029B                     	;# 
  1820  029C                     	;# 
  1821  029C                     	;# 
  1822  029D                     	;# 
  1823  029E                     	;# 
  1824  029E                     	;# 
  1825  0311                     	;# 
  1826  0311                     	;# 
  1827  0312                     	;# 
  1828  0313                     	;# 
  1829  0318                     	;# 
  1830  0318                     	;# 
  1831  0319                     	;# 
  1832  031A                     	;# 
  1833  0394                     	;# 
  1834  0395                     	;# 
  1835  0396                     	;# 
  1836  039A                     	;# 
  1837  039C                     	;# 
  1838  039D                     	;# 
  1839  039E                     	;# 
  1840  039F                     	;# 
  1841  0415                     	;# 
  1842  0416                     	;# 
  1843  0417                     	;# 
  1844  041C                     	;# 
  1845  041D                     	;# 
  1846  041E                     	;# 
  1847  0FE4                     	;# 
  1848  0FE5                     	;# 
  1849  0FE6                     	;# 
  1850  0FE7                     	;# 
  1851  0FE8                     	;# 
  1852  0FE9                     	;# 
  1853  0FEA                     	;# 
  1854  0FEB                     	;# 
  1855  0FED                     	;# 
  1856  0FEE                     	;# 
  1857  0FEF                     	;# 
  1858  0000                     	;# 
  1859  0001                     	;# 
  1860  0002                     	;# 
  1861  0003                     	;# 
  1862  0004                     	;# 
  1863  0005                     	;# 
  1864  0006                     	;# 
  1865  0007                     	;# 
  1866  0008                     	;# 
  1867  0009                     	;# 
  1868  000A                     	;# 
  1869  000B                     	;# 
  1870  000C                     	;# 
  1871  000D                     	;# 
  1872  0011                     	;# 
  1873  0012                     	;# 
  1874  0013                     	;# 
  1875  0014                     	;# 
  1876  0015                     	;# 
  1877  0016                     	;# 
  1878  0016                     	;# 
  1879  0017                     	;# 
  1880  0018                     	;# 
  1881  0019                     	;# 
  1882  001A                     	;# 
  1883  001B                     	;# 
  1884  001C                     	;# 
  1885  001E                     	;# 
  1886  001F                     	;# 
  1887  008C                     	;# 
  1888  008D                     	;# 
  1889  0091                     	;# 
  1890  0092                     	;# 
  1891  0093                     	;# 
  1892  0094                     	;# 
  1893  0095                     	;# 
  1894  0096                     	;# 
  1895  0097                     	;# 
  1896  0098                     	;# 
  1897  0099                     	;# 
  1898  009A                     	;# 
  1899  009B                     	;# 
  1900  009B                     	;# 
  1901  009C                     	;# 
  1902  009D                     	;# 
  1903  009E                     	;# 
  1904  010C                     	;# 
  1905  010D                     	;# 
  1906  0111                     	;# 
  1907  0112                     	;# 
  1908  0113                     	;# 
  1909  0114                     	;# 
  1910  0115                     	;# 
  1911  0116                     	;# 
  1912  0117                     	;# 
  1913  0118                     	;# 
  1914  0119                     	;# 
  1915  011A                     	;# 
  1916  011B                     	;# 
  1917  011D                     	;# 
  1918  011E                     	;# 
  1919  018C                     	;# 
  1920  018D                     	;# 
  1921  0191                     	;# 
  1922  0191                     	;# 
  1923  0192                     	;# 
  1924  0193                     	;# 
  1925  0193                     	;# 
  1926  0193                     	;# 
  1927  0194                     	;# 
  1928  0195                     	;# 
  1929  0196                     	;# 
  1930  0199                     	;# 
  1931  019A                     	;# 
  1932  019B                     	;# 
  1933  019B                     	;# 
  1934  019B                     	;# 
  1935  019B                     	;# 
  1936  019C                     	;# 
  1937  019C                     	;# 
  1938  019D                     	;# 
  1939  019E                     	;# 
  1940  019F                     	;# 
  1941  020C                     	;# 
  1942  020D                     	;# 
  1943  0211                     	;# 
  1944  0211                     	;# 
  1945  0212                     	;# 
  1946  0212                     	;# 
  1947  0213                     	;# 
  1948  0213                     	;# 
  1949  0214                     	;# 
  1950  0214                     	;# 
  1951  0215                     	;# 
  1952  0215                     	;# 
  1953  0215                     	;# 
  1954  0216                     	;# 
  1955  0216                     	;# 
  1956  0217                     	;# 
  1957  0217                     	;# 
  1958  0219                     	;# 
  1959  021A                     	;# 
  1960  021B                     	;# 
  1961  021C                     	;# 
  1962  021D                     	;# 
  1963  021E                     	;# 
  1964  021F                     	;# 
  1965  0291                     	;# 
  1966  0291                     	;# 
  1967  0292                     	;# 
  1968  0293                     	;# 
  1969  0294                     	;# 
  1970  0295                     	;# 
  1971  0295                     	;# 
  1972  0296                     	;# 
  1973  0298                     	;# 
  1974  0298                     	;# 
  1975  0299                     	;# 
  1976  029A                     	;# 
  1977  029B                     	;# 
  1978  029C                     	;# 
  1979  029C                     	;# 
  1980  029D                     	;# 
  1981  029E                     	;# 
  1982  029E                     	;# 
  1983  0311                     	;# 
  1984  0311                     	;# 
  1985  0312                     	;# 
  1986  0313                     	;# 
  1987  0318                     	;# 
  1988  0318                     	;# 
  1989  0319                     	;# 
  1990  031A                     	;# 
  1991  0394                     	;# 
  1992  0395                     	;# 
  1993  0396                     	;# 
  1994  039A                     	;# 
  1995  039C                     	;# 
  1996  039D                     	;# 
  1997  039E                     	;# 
  1998  039F                     	;# 
  1999  0415                     	;# 
  2000  0416                     	;# 
  2001  0417                     	;# 
  2002  041C                     	;# 
  2003  041D                     	;# 
  2004  041E                     	;# 
  2005  0FE4                     	;# 
  2006  0FE5                     	;# 
  2007  0FE6                     	;# 
  2008  0FE7                     	;# 
  2009  0FE8                     	;# 
  2010  0FE9                     	;# 
  2011  0FEA                     	;# 
  2012  0FEB                     	;# 
  2013  0FED                     	;# 
  2014  0FEE                     	;# 
  2015  0FEF                     	;# 
  2016  0000                     	;# 
  2017  0001                     	;# 
  2018  0002                     	;# 
  2019  0003                     	;# 
  2020  0004                     	;# 
  2021  0005                     	;# 
  2022  0006                     	;# 
  2023  0007                     	;# 
  2024  0008                     	;# 
  2025  0009                     	;# 
  2026  000A                     	;# 
  2027  000B                     	;# 
  2028  000C                     	;# 
  2029  000D                     	;# 
  2030  0011                     	;# 
  2031  0012                     	;# 
  2032  0013                     	;# 
  2033  0014                     	;# 
  2034  0015                     	;# 
  2035  0016                     	;# 
  2036  0016                     	;# 
  2037  0017                     	;# 
  2038  0018                     	;# 
  2039  0019                     	;# 
  2040  001A                     	;# 
  2041  001B                     	;# 
  2042  001C                     	;# 
  2043  001E                     	;# 
  2044  001F                     	;# 
  2045  008C                     	;# 
  2046  008D                     	;# 
  2047  0091                     	;# 
  2048  0092                     	;# 
  2049  0093                     	;# 
  2050  0094                     	;# 
  2051  0095                     	;# 
  2052  0096                     	;# 
  2053  0097                     	;# 
  2054  0098                     	;# 
  2055  0099                     	;# 
  2056  009A                     	;# 
  2057  009B                     	;# 
  2058  009B                     	;# 
  2059  009C                     	;# 
  2060  009D                     	;# 
  2061  009E                     	;# 
  2062  010C                     	;# 
  2063  010D                     	;# 
  2064  0111                     	;# 
  2065  0112                     	;# 
  2066  0113                     	;# 
  2067  0114                     	;# 
  2068  0115                     	;# 
  2069  0116                     	;# 
  2070  0117                     	;# 
  2071  0118                     	;# 
  2072  0119                     	;# 
  2073  011A                     	;# 
  2074  011B                     	;# 
  2075  011D                     	;# 
  2076  011E                     	;# 
  2077  018C                     	;# 
  2078  018D                     	;# 
  2079  0191                     	;# 
  2080  0191                     	;# 
  2081  0192                     	;# 
  2082  0193                     	;# 
  2083  0193                     	;# 
  2084  0193                     	;# 
  2085  0194                     	;# 
  2086  0195                     	;# 
  2087  0196                     	;# 
  2088  0199                     	;# 
  2089  019A                     	;# 
  2090  019B                     	;# 
  2091  019B                     	;# 
  2092  019B                     	;# 
  2093  019B                     	;# 
  2094  019C                     	;# 
  2095  019C                     	;# 
  2096  019D                     	;# 
  2097  019E                     	;# 
  2098  019F                     	;# 
  2099  020C                     	;# 
  2100  020D                     	;# 
  2101  0211                     	;# 
  2102  0211                     	;# 
  2103  0212                     	;# 
  2104  0212                     	;# 
  2105  0213                     	;# 
  2106  0213                     	;# 
  2107  0214                     	;# 
  2108  0214                     	;# 
  2109  0215                     	;# 
  2110  0215                     	;# 
  2111  0215                     	;# 
  2112  0216                     	;# 
  2113  0216                     	;# 
  2114  0217                     	;# 
  2115  0217                     	;# 
  2116  0219                     	;# 
  2117  021A                     	;# 
  2118  021B                     	;# 
  2119  021C                     	;# 
  2120  021D                     	;# 
  2121  021E                     	;# 
  2122  021F                     	;# 
  2123  0291                     	;# 
  2124  0291                     	;# 
  2125  0292                     	;# 
  2126  0293                     	;# 
  2127  0294                     	;# 
  2128  0295                     	;# 
  2129  0295                     	;# 
  2130  0296                     	;# 
  2131  0298                     	;# 
  2132  0298                     	;# 
  2133  0299                     	;# 
  2134  029A                     	;# 
  2135  029B                     	;# 
  2136  029C                     	;# 
  2137  029C                     	;# 
  2138  029D                     	;# 
  2139  029E                     	;# 
  2140  029E                     	;# 
  2141  0311                     	;# 
  2142  0311                     	;# 
  2143  0312                     	;# 
  2144  0313                     	;# 
  2145  0318                     	;# 
  2146  0318                     	;# 
  2147  0319                     	;# 
  2148  031A                     	;# 
  2149  0394                     	;# 
  2150  0395                     	;# 
  2151  0396                     	;# 
  2152  039A                     	;# 
  2153  039C                     	;# 
  2154  039D                     	;# 
  2155  039E                     	;# 
  2156  039F                     	;# 
  2157  0415                     	;# 
  2158  0416                     	;# 
  2159  0417                     	;# 
  2160  041C                     	;# 
  2161  041D                     	;# 
  2162  041E                     	;# 
  2163  0FE4                     	;# 
  2164  0FE5                     	;# 
  2165  0FE6                     	;# 
  2166  0FE7                     	;# 
  2167  0FE8                     	;# 
  2168  0FE9                     	;# 
  2169  0FEA                     	;# 
  2170  0FEB                     	;# 
  2171  0FED                     	;# 
  2172  0FEE                     	;# 
  2173  0FEF                     	;# 
  2174  0000                     	;# 
  2175  0001                     	;# 
  2176  0002                     	;# 
  2177  0003                     	;# 
  2178  0004                     	;# 
  2179  0005                     	;# 
  2180  0006                     	;# 
  2181  0007                     	;# 
  2182  0008                     	;# 
  2183  0009                     	;# 
  2184  000A                     	;# 
  2185  000B                     	;# 
  2186  000C                     	;# 
  2187  000D                     	;# 
  2188  0011                     	;# 
  2189  0012                     	;# 
  2190  0013                     	;# 
  2191  0014                     	;# 
  2192  0015                     	;# 
  2193  0016                     	;# 
  2194  0016                     	;# 
  2195  0017                     	;# 
  2196  0018                     	;# 
  2197  0019                     	;# 
  2198  001A                     	;# 
  2199  001B                     	;# 
  2200  001C                     	;# 
  2201  001E                     	;# 
  2202  001F                     	;# 
  2203  008C                     	;# 
  2204  008D                     	;# 
  2205  0091                     	;# 
  2206  0092                     	;# 
  2207  0093                     	;# 
  2208  0094                     	;# 
  2209  0095                     	;# 
  2210  0096                     	;# 
  2211  0097                     	;# 
  2212  0098                     	;# 
  2213  0099                     	;# 
  2214  009A                     	;# 
  2215  009B                     	;# 
  2216  009B                     	;# 
  2217  009C                     	;# 
  2218  009D                     	;# 
  2219  009E                     	;# 
  2220  010C                     	;# 
  2221  010D                     	;# 
  2222  0111                     	;# 
  2223  0112                     	;# 
  2224  0113                     	;# 
  2225  0114                     	;# 
  2226  0115                     	;# 
  2227  0116                     	;# 
  2228  0117                     	;# 
  2229  0118                     	;# 
  2230  0119                     	;# 
  2231  011A                     	;# 
  2232  011B                     	;# 
  2233  011D                     	;# 
  2234  011E                     	;# 
  2235  018C                     	;# 
  2236  018D                     	;# 
  2237  0191                     	;# 
  2238  0191                     	;# 
  2239  0192                     	;# 
  2240  0193                     	;# 
  2241  0193                     	;# 
  2242  0193                     	;# 
  2243  0194                     	;# 
  2244  0195                     	;# 
  2245  0196                     	;# 
  2246  0199                     	;# 
  2247  019A                     	;# 
  2248  019B                     	;# 
  2249  019B                     	;# 
  2250  019B                     	;# 
  2251  019B                     	;# 
  2252  019C                     	;# 
  2253  019C                     	;# 
  2254  019D                     	;# 
  2255  019E                     	;# 
  2256  019F                     	;# 
  2257  020C                     	;# 
  2258  020D                     	;# 
  2259  0211                     	;# 
  2260  0211                     	;# 
  2261  0212                     	;# 
  2262  0212                     	;# 
  2263  0213                     	;# 
  2264  0213                     	;# 
  2265  0214                     	;# 
  2266  0214                     	;# 
  2267  0215                     	;# 
  2268  0215                     	;# 
  2269  0215                     	;# 
  2270  0216                     	;# 
  2271  0216                     	;# 
  2272  0217                     	;# 
  2273  0217                     	;# 
  2274  0219                     	;# 
  2275  021A                     	;# 
  2276  021B                     	;# 
  2277  021C                     	;# 
  2278  021D                     	;# 
  2279  021E                     	;# 
  2280  021F                     	;# 
  2281  0291                     	;# 
  2282  0291                     	;# 
  2283  0292                     	;# 
  2284  0293                     	;# 
  2285  0294                     	;# 
  2286  0295                     	;# 
  2287  0295                     	;# 
  2288  0296                     	;# 
  2289  0298                     	;# 
  2290  0298                     	;# 
  2291  0299                     	;# 
  2292  029A                     	;# 
  2293  029B                     	;# 
  2294  029C                     	;# 
  2295  029C                     	;# 
  2296  029D                     	;# 
  2297  029E                     	;# 
  2298  029E                     	;# 
  2299  0311                     	;# 
  2300  0311                     	;# 
  2301  0312                     	;# 
  2302  0313                     	;# 
  2303  0318                     	;# 
  2304  0318                     	;# 
  2305  0319                     	;# 
  2306  031A                     	;# 
  2307  0394                     	;# 
  2308  0395                     	;# 
  2309  0396                     	;# 
  2310  039A                     	;# 
  2311  039C                     	;# 
  2312  039D                     	;# 
  2313  039E                     	;# 
  2314  039F                     	;# 
  2315  0415                     	;# 
  2316  0416                     	;# 
  2317  0417                     	;# 
  2318  041C                     	;# 
  2319  041D                     	;# 
  2320  041E                     	;# 
  2321  0FE4                     	;# 
  2322  0FE5                     	;# 
  2323  0FE6                     	;# 
  2324  0FE7                     	;# 
  2325  0FE8                     	;# 
  2326  0FE9                     	;# 
  2327  0FEA                     	;# 
  2328  0FEB                     	;# 
  2329  0FED                     	;# 
  2330  0FEE                     	;# 
  2331  0FEF                     	;# 
  2332  0000                     	;# 
  2333  0001                     	;# 
  2334  0002                     	;# 
  2335  0003                     	;# 
  2336  0004                     	;# 
  2337  0005                     	;# 
  2338  0006                     	;# 
  2339  0007                     	;# 
  2340  0008                     	;# 
  2341  0009                     	;# 
  2342  000A                     	;# 
  2343  000B                     	;# 
  2344  000C                     	;# 
  2345  000D                     	;# 
  2346  0011                     	;# 
  2347  0012                     	;# 
  2348  0013                     	;# 
  2349  0014                     	;# 
  2350  0015                     	;# 
  2351  0016                     	;# 
  2352  0016                     	;# 
  2353  0017                     	;# 
  2354  0018                     	;# 
  2355  0019                     	;# 
  2356  001A                     	;# 
  2357  001B                     	;# 
  2358  001C                     	;# 
  2359  001E                     	;# 
  2360  001F                     	;# 
  2361  008C                     	;# 
  2362  008D                     	;# 
  2363  0091                     	;# 
  2364  0092                     	;# 
  2365  0093                     	;# 
  2366  0094                     	;# 
  2367  0095                     	;# 
  2368  0096                     	;# 
  2369  0097                     	;# 
  2370  0098                     	;# 
  2371  0099                     	;# 
  2372  009A                     	;# 
  2373  009B                     	;# 
  2374  009B                     	;# 
  2375  009C                     	;# 
  2376  009D                     	;# 
  2377  009E                     	;# 
  2378  010C                     	;# 
  2379  010D                     	;# 
  2380  0111                     	;# 
  2381  0112                     	;# 
  2382  0113                     	;# 
  2383  0114                     	;# 
  2384  0115                     	;# 
  2385  0116                     	;# 
  2386  0117                     	;# 
  2387  0118                     	;# 
  2388  0119                     	;# 
  2389  011A                     	;# 
  2390  011B                     	;# 
  2391  011D                     	;# 
  2392  011E                     	;# 
  2393  018C                     	;# 
  2394  018D                     	;# 
  2395  0191                     	;# 
  2396  0191                     	;# 
  2397  0192                     	;# 
  2398  0193                     	;# 
  2399  0193                     	;# 
  2400  0193                     	;# 
  2401  0194                     	;# 
  2402  0195                     	;# 
  2403  0196                     	;# 
  2404  0199                     	;# 
  2405  019A                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019B                     	;# 
  2410  019C                     	;# 
  2411  019C                     	;# 
  2412  019D                     	;# 
  2413  019E                     	;# 
  2414  019F                     	;# 
  2415  020C                     	;# 
  2416  020D                     	;# 
  2417  0211                     	;# 
  2418  0211                     	;# 
  2419  0212                     	;# 
  2420  0212                     	;# 
  2421  0213                     	;# 
  2422  0213                     	;# 
  2423  0214                     	;# 
  2424  0214                     	;# 
  2425  0215                     	;# 
  2426  0215                     	;# 
  2427  0215                     	;# 
  2428  0216                     	;# 
  2429  0216                     	;# 
  2430  0217                     	;# 
  2431  0217                     	;# 
  2432  0219                     	;# 
  2433  021A                     	;# 
  2434  021B                     	;# 
  2435  021C                     	;# 
  2436  021D                     	;# 
  2437  021E                     	;# 
  2438  021F                     	;# 
  2439  0291                     	;# 
  2440  0291                     	;# 
  2441  0292                     	;# 
  2442  0293                     	;# 
  2443  0294                     	;# 
  2444  0295                     	;# 
  2445  0295                     	;# 
  2446  0296                     	;# 
  2447  0298                     	;# 
  2448  0298                     	;# 
  2449  0299                     	;# 
  2450  029A                     	;# 
  2451  029B                     	;# 
  2452  029C                     	;# 
  2453  029C                     	;# 
  2454  029D                     	;# 
  2455  029E                     	;# 
  2456  029E                     	;# 
  2457  0311                     	;# 
  2458  0311                     	;# 
  2459  0312                     	;# 
  2460  0313                     	;# 
  2461  0318                     	;# 
  2462  0318                     	;# 
  2463  0319                     	;# 
  2464  031A                     	;# 
  2465  0394                     	;# 
  2466  0395                     	;# 
  2467  0396                     	;# 
  2468  039A                     	;# 
  2469  039C                     	;# 
  2470  039D                     	;# 
  2471  039E                     	;# 
  2472  039F                     	;# 
  2473  0415                     	;# 
  2474  0416                     	;# 
  2475  0417                     	;# 
  2476  041C                     	;# 
  2477  041D                     	;# 
  2478  041E                     	;# 
  2479  0FE4                     	;# 
  2480  0FE5                     	;# 
  2481  0FE6                     	;# 
  2482  0FE7                     	;# 
  2483  0FE8                     	;# 
  2484  0FE9                     	;# 
  2485  0FEA                     	;# 
  2486  0FEB                     	;# 
  2487  0FED                     	;# 
  2488  0FEE                     	;# 
  2489  0FEF                     	;# 
  2490  0000                     	;# 
  2491  0001                     	;# 
  2492  0002                     	;# 
  2493  0003                     	;# 
  2494  0004                     	;# 
  2495  0005                     	;# 
  2496  0006                     	;# 
  2497  0007                     	;# 
  2498  0008                     	;# 
  2499  0009                     	;# 
  2500  000A                     	;# 
  2501  000B                     	;# 
  2502  000C                     	;# 
  2503  000D                     	;# 
  2504  0011                     	;# 
  2505  0012                     	;# 
  2506  0013                     	;# 
  2507  0014                     	;# 
  2508  0015                     	;# 
  2509  0016                     	;# 
  2510  0016                     	;# 
  2511  0017                     	;# 
  2512  0018                     	;# 
  2513  0019                     	;# 
  2514  001A                     	;# 
  2515  001B                     	;# 
  2516  001C                     	;# 
  2517  001E                     	;# 
  2518  001F                     	;# 
  2519  008C                     	;# 
  2520  008D                     	;# 
  2521  0091                     	;# 
  2522  0092                     	;# 
  2523  0093                     	;# 
  2524  0094                     	;# 
  2525  0095                     	;# 
  2526  0096                     	;# 
  2527  0097                     	;# 
  2528  0098                     	;# 
  2529  0099                     	;# 
  2530  009A                     	;# 
  2531  009B                     	;# 
  2532  009B                     	;# 
  2533  009C                     	;# 
  2534  009D                     	;# 
  2535  009E                     	;# 
  2536  010C                     	;# 
  2537  010D                     	;# 
  2538  0111                     	;# 
  2539  0112                     	;# 
  2540  0113                     	;# 
  2541  0114                     	;# 
  2542  0115                     	;# 
  2543  0116                     	;# 
  2544  0117                     	;# 
  2545  0118                     	;# 
  2546  0119                     	;# 
  2547  011A                     	;# 
  2548  011B                     	;# 
  2549  011D                     	;# 
  2550  011E                     	;# 
  2551  018C                     	;# 
  2552  018D                     	;# 
  2553  0191                     	;# 
  2554  0191                     	;# 
  2555  0192                     	;# 
  2556  0193                     	;# 
  2557  0193                     	;# 
  2558  0193                     	;# 
  2559  0194                     	;# 
  2560  0195                     	;# 
  2561  0196                     	;# 
  2562  0199                     	;# 
  2563  019A                     	;# 
  2564  019B                     	;# 
  2565  019B                     	;# 
  2566  019B                     	;# 
  2567  019B                     	;# 
  2568  019C                     	;# 
  2569  019C                     	;# 
  2570  019D                     	;# 
  2571  019E                     	;# 
  2572  019F                     	;# 
  2573  020C                     	;# 
  2574  020D                     	;# 
  2575  0211                     	;# 
  2576  0211                     	;# 
  2577  0212                     	;# 
  2578  0212                     	;# 
  2579  0213                     	;# 
  2580  0213                     	;# 
  2581  0214                     	;# 
  2582  0214                     	;# 
  2583  0215                     	;# 
  2584  0215                     	;# 
  2585  0215                     	;# 
  2586  0216                     	;# 
  2587  0216                     	;# 
  2588  0217                     	;# 
  2589  0217                     	;# 
  2590  0219                     	;# 
  2591  021A                     	;# 
  2592  021B                     	;# 
  2593  021C                     	;# 
  2594  021D                     	;# 
  2595  021E                     	;# 
  2596  021F                     	;# 
  2597  0291                     	;# 
  2598  0291                     	;# 
  2599  0292                     	;# 
  2600  0293                     	;# 
  2601  0294                     	;# 
  2602  0295                     	;# 
  2603  0295                     	;# 
  2604  0296                     	;# 
  2605  0298                     	;# 
  2606  0298                     	;# 
  2607  0299                     	;# 
  2608  029A                     	;# 
  2609  029B                     	;# 
  2610  029C                     	;# 
  2611  029C                     	;# 
  2612  029D                     	;# 
  2613  029E                     	;# 
  2614  029E                     	;# 
  2615  0311                     	;# 
  2616  0311                     	;# 
  2617  0312                     	;# 
  2618  0313                     	;# 
  2619  0318                     	;# 
  2620  0318                     	;# 
  2621  0319                     	;# 
  2622  031A                     	;# 
  2623  0394                     	;# 
  2624  0395                     	;# 
  2625  0396                     	;# 
  2626  039A                     	;# 
  2627  039C                     	;# 
  2628  039D                     	;# 
  2629  039E                     	;# 
  2630  039F                     	;# 
  2631  0415                     	;# 
  2632  0416                     	;# 
  2633  0417                     	;# 
  2634  041C                     	;# 
  2635  041D                     	;# 
  2636  041E                     	;# 
  2637  0FE4                     	;# 
  2638  0FE5                     	;# 
  2639  0FE6                     	;# 
  2640  0FE7                     	;# 
  2641  0FE8                     	;# 
  2642  0FE9                     	;# 
  2643  0FEA                     	;# 
  2644  0FEB                     	;# 
  2645  0FED                     	;# 
  2646  0FEE                     	;# 
  2647  0FEF                     	;# 
  2648  0000                     	;# 
  2649  0001                     	;# 
  2650  0002                     	;# 
  2651  0003                     	;# 
  2652  0004                     	;# 
  2653  0005                     	;# 
  2654  0006                     	;# 
  2655  0007                     	;# 
  2656  0008                     	;# 
  2657  0009                     	;# 
  2658  000A                     	;# 
  2659  000B                     	;# 
  2660  000C                     	;# 
  2661  000D                     	;# 
  2662  0011                     	;# 
  2663  0012                     	;# 
  2664  0013                     	;# 
  2665  0014                     	;# 
  2666  0015                     	;# 
  2667  0016                     	;# 
  2668  0016                     	;# 
  2669  0017                     	;# 
  2670  0018                     	;# 
  2671  0019                     	;# 
  2672  001A                     	;# 
  2673  001B                     	;# 
  2674  001C                     	;# 
  2675  001E                     	;# 
  2676  001F                     	;# 
  2677  008C                     	;# 
  2678  008D                     	;# 
  2679  0091                     	;# 
  2680  0092                     	;# 
  2681  0093                     	;# 
  2682  0094                     	;# 
  2683  0095                     	;# 
  2684  0096                     	;# 
  2685  0097                     	;# 
  2686  0098                     	;# 
  2687  0099                     	;# 
  2688  009A                     	;# 
  2689  009B                     	;# 
  2690  009B                     	;# 
  2691  009C                     	;# 
  2692  009D                     	;# 
  2693  009E                     	;# 
  2694  010C                     	;# 
  2695  010D                     	;# 
  2696  0111                     	;# 
  2697  0112                     	;# 
  2698  0113                     	;# 
  2699  0114                     	;# 
  2700  0115                     	;# 
  2701  0116                     	;# 
  2702  0117                     	;# 
  2703  0118                     	;# 
  2704  0119                     	;# 
  2705  011A                     	;# 
  2706  011B                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  018C                     	;# 
  2710  018D                     	;# 
  2711  0191                     	;# 
  2712  0191                     	;# 
  2713  0192                     	;# 
  2714  0193                     	;# 
  2715  0193                     	;# 
  2716  0193                     	;# 
  2717  0194                     	;# 
  2718  0195                     	;# 
  2719  0196                     	;# 
  2720  0199                     	;# 
  2721  019A                     	;# 
  2722  019B                     	;# 
  2723  019B                     	;# 
  2724  019B                     	;# 
  2725  019B                     	;# 
  2726  019C                     	;# 
  2727  019C                     	;# 
  2728  019D                     	;# 
  2729  019E                     	;# 
  2730  019F                     	;# 
  2731  020C                     	;# 
  2732  020D                     	;# 
  2733  0211                     	;# 
  2734  0211                     	;# 
  2735  0212                     	;# 
  2736  0212                     	;# 
  2737  0213                     	;# 
  2738  0213                     	;# 
  2739  0214                     	;# 
  2740  0214                     	;# 
  2741  0215                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0219                     	;# 
  2749  021A                     	;# 
  2750  021B                     	;# 
  2751  021C                     	;# 
  2752  021D                     	;# 
  2753  021E                     	;# 
  2754  021F                     	;# 
  2755  0291                     	;# 
  2756  0291                     	;# 
  2757  0292                     	;# 
  2758  0293                     	;# 
  2759  0294                     	;# 
  2760  0295                     	;# 
  2761  0295                     	;# 
  2762  0296                     	;# 
  2763  0298                     	;# 
  2764  0298                     	;# 
  2765  0299                     	;# 
  2766  029A                     	;# 
  2767  029B                     	;# 
  2768  029C                     	;# 
  2769  029C                     	;# 
  2770  029D                     	;# 
  2771  029E                     	;# 
  2772  029E                     	;# 
  2773  0311                     	;# 
  2774  0311                     	;# 
  2775  0312                     	;# 
  2776  0313                     	;# 
  2777  0318                     	;# 
  2778  0318                     	;# 
  2779  0319                     	;# 
  2780  031A                     	;# 
  2781  0394                     	;# 
  2782  0395                     	;# 
  2783  0396                     	;# 
  2784  039A                     	;# 
  2785  039C                     	;# 
  2786  039D                     	;# 
  2787  039E                     	;# 
  2788  039F                     	;# 
  2789  0415                     	;# 
  2790  0416                     	;# 
  2791  0417                     	;# 
  2792  041C                     	;# 
  2793  041D                     	;# 
  2794  041E                     	;# 
  2795  0FE4                     	;# 
  2796  0FE5                     	;# 
  2797  0FE6                     	;# 
  2798  0FE7                     	;# 
  2799  0FE8                     	;# 
  2800  0FE9                     	;# 
  2801  0FEA                     	;# 
  2802  0FEB                     	;# 
  2803  0FED                     	;# 
  2804  0FEE                     	;# 
  2805  0FEF                     	;# 
  2806                           
  2807 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2808  0000                     
  2809 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2810  0000                     
  2811 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2812  0000                     
  2813                           	psect	idataBANK0
  2814  0003                     __pidataBANK0:
  2815                           
  2816                           ;initializer for _subindo
  2817  0003  3401               	retlw	1
  2818                           
  2819                           	psect	stringtext1
  2820  0800                     __pstringtext1:
  2821  0800                     _matrix_conf:
  2822  0800  3409               	retlw	9
  2823  0801  3400               	retlw	0
  2824  0802  340A               	retlw	10
  2825  0803  3400               	retlw	0
  2826  0804  340B               	retlw	11
  2827  0805  3407               	retlw	7
  2828  0806  340C               	retlw	12
  2829  0807  3401               	retlw	1
  2830  0808  340F               	retlw	15
  2831  0809  3401               	retlw	1
  2832  080A  340F               	retlw	15
  2833  080B  3400               	retlw	0
  2834  080C                     __end_of_matrix_conf:
  2835                           
  2836                           	psect	stringtext2
  2837  080C                     __pstringtext2:
  2838  080C                     _spi1_configuration:
  2839  080C  3400               	retlw	0
  2840  080D  3440               	retlw	64
  2841  080E  3401               	retlw	1
  2842  080F  3400               	retlw	0
  2843  0810                     __end_of_spi1_configuration:
  2844                           
  2845                           	psect	nvBANK0
  2846  0065                     __pnvBANK0:
  2847  0065                     _IOCBF3_InterruptHandler:
  2848  0065                     	ds	2
  2849  0067                     _IOCBF0_InterruptHandler:
  2850  0067                     	ds	2
  2851  0069                     _timer0ReloadVal:
  2852  0069                     	ds	1
  2853                           
  2854                           	psect	nvBANK1
  2855  00B3                     __pnvBANK1:
  2856  00B3                     _TMR4_InterruptHandler:
  2857  00B3                     	ds	2
  2858  00B5                     _CCP4_CallBack:
  2859  00B5                     	ds	2
  2860  00B7                     _TMR0_InterruptHandler:
  2861  00B7                     	ds	2
  2862  00B9                     _timer1ReloadVal:
  2863  00B9                     	ds	2
  2864  00BB                     _EUSART_ErrorHandler:
  2865  00BB                     	ds	2
  2866  00BD                     _EUSART_OverrunErrorHandler:
  2867  00BD                     	ds	2
  2868  00BF                     _EUSART_FramingErrorHandler:
  2869  00BF                     	ds	2
  2870  0015                     _TMR0	set	21
  2871  001C                     _T2CONbits	set	28
  2872  001C                     _T2CON	set	28
  2873  001A                     _TMR2	set	26
  2874  001B                     _PR2	set	27
  2875  0019                     _T1GCONbits	set	25
  2876  0018                     _T1CONbits	set	24
  2877  0018                     _T1CON	set	24
  2878  0016                     _TMR1L	set	22
  2879  0017                     _TMR1H	set	23
  2880  0019                     _T1GCON	set	25
  2881  0013                     _PIR3bits	set	19
  2882  0011                     _PIR1bits	set	17
  2883  000B                     _INTCONbits	set	11
  2884  0012                     _PIR2bits	set	18
  2885  0095                     _OPTION_REG	set	149
  2886  0093                     _PIE3bits	set	147
  2887  008D                     _TRISBbits	set	141
  2888  009D                     _ADCON0bits	set	157
  2889  009D                     _ADCON0	set	157
  2890  009C                     _ADRESH	set	156
  2891  009B                     _ADRESL	set	155
  2892  009E                     _ADCON1	set	158
  2893  0097                     _WDTCON	set	151
  2894  0098                     _OSCTUNE	set	152
  2895  0099                     _OSCCON	set	153
  2896  0095                     _OPTION_REGbits	set	149
  2897  008D                     _TRISB	set	141
  2898  008C                     _TRISA	set	140
  2899  0092                     _PIE2bits	set	146
  2900  010D                     _LATBbits	set	269
  2901  0117                     _FVRCONbits	set	279
  2902  0117                     _FVRCON	set	279
  2903  0116                     _BORCON	set	278
  2904  011E                     _APFCON1	set	286
  2905  011D                     _APFCON0	set	285
  2906  010D                     _LATB	set	269
  2907  010C                     _LATA	set	268
  2908  0112                     _CM1CON1	set	274
  2909  0111                     _CM1CON0	set	273
  2910  0115                     _CMOUTbits	set	277
  2911  0114                     _CM2CON1	set	276
  2912  0113                     _CM2CON0	set	275
  2913  019A                     _TXREG	set	410
  2914  0199                     _RCREG	set	409
  2915  019D                     _RCSTAbits	set	413
  2916  019E                     _TXSTAbits	set	414
  2917  019C                     _SPBRGH	set	412
  2918  019B                     _SPBRGL	set	411
  2919  019E                     _TXSTA	set	414
  2920  019D                     _RCSTA	set	413
  2921  019F                     _BAUDCON	set	415
  2922  018C                     _ANSELA	set	396
  2923  018D                     _ANSELB	set	397
  2924  0211                     _SSP1BUF	set	529
  2925  0216                     _SSP1CON2	set	534
  2926  0215                     _SSP1CON1bits	set	533
  2927  0212                     _SSP1ADD	set	530
  2928  0215                     _SSP1CON1	set	533
  2929  0214                     _SSP1STAT	set	532
  2930  020C                     _WPUA	set	524
  2931  020D                     _WPUB	set	525
  2932  029E                     _CCPTMRS0bits	set	670
  2933  0319                     _CCPR4H	set	793
  2934  0318                     _CCPR4L	set	792
  2935  031A                     _CCP4CON	set	794
  2936  0312                     _CCPR3H	set	786
  2937  0311                     _CCPR3L	set	785
  2938  0313                     _CCP3CON	set	787
  2939  0394                     _IOCBPbits	set	916
  2940  0395                     _IOCBNbits	set	917
  2941  0396                     _IOCBFbits	set	918
  2942  0417                     _T4CONbits	set	1047
  2943  0417                     _T4CON	set	1047
  2944  0415                     _TMR4	set	1045
  2945  0416                     _PR4	set	1046
  2946                           
  2947                           	psect	cinit
  2948  0058                     start_initialization:	
  2949                           ; #config settings
  2950                           
  2951  0058                     __initialization:
  2952                           
  2953                           ; Initialize objects allocated to BANK0
  2954  0058  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  2955  005B  00EA               	movwf	__pdataBANK0& (0+127)
  2956                           
  2957                           ; Clear objects allocated to BANK0
  2958  005C  3046               	movlw	low __pbssBANK0
  2959  005D  0084               	movwf	4
  2960  005E  3000               	movlw	high __pbssBANK0
  2961  005F  0085               	movwf	5
  2962  0060  301F               	movlw	31
  2963  0061  318D  2539  3180   	fcall	clear_ram0
  2964                           
  2965                           ; Clear objects allocated to BANK1
  2966  0064  30C1               	movlw	low __pbssBANK1
  2967  0065  0084               	movwf	4
  2968  0066  3000               	movlw	high __pbssBANK1
  2969  0067  0085               	movwf	5
  2970  0068  3008               	movlw	8
  2971  0069  318D  2539  3180   	fcall	clear_ram0
  2972  006C                     end_of_initialization:	
  2973                           ;End of C runtime variable initialization code
  2974                           
  2975  006C                     __end_of__initialization:
  2976  006C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2977  006D  0020               	movlb	0
  2978  006E  3183  2BB6         	ljmp	_main	;jump to C main() function
  2979                           
  2980                           	psect	bssBANK0
  2981  0046                     __pbssBANK0:
  2982  0046                     _velocidadeMotor:
  2983  0046                     	ds	4
  2984  004A                     TMR4_ISR@CountCallBack:
  2985  004A                     	ds	2
  2986  004C                     TMR0_ISR@CountCallBack:
  2987  004C                     	ds	2
  2988  004E                     _ADC_InterruptHandler:
  2989  004E                     	ds	2
  2990  0050                     _temperatura:
  2991  0050                     	ds	2
  2992  0052                     _t2:
  2993  0052                     	ds	2
  2994  0054                     _t1:
  2995  0054                     	ds	2
  2996  0056                     _eusartRxLastError:
  2997  0056                     	ds	1
  2998  0057                     _destinoDesc:
  2999  0057                     	ds	1
  3000  0058                     _destinoSub:
  3001  0058                     	ds	1
  3002  0059                     _altura:
  3003  0059                     	ds	1
  3004  005A                     _andarAtual:
  3005  005A                     	ds	1
  3006  005B                     _dTemp:
  3007  005B                     	ds	1
  3008  005C                     _destino:
  3009  005C                     	ds	1
  3010  005D                     _oTemp:
  3011  005D                     	ds	1
  3012  005E                     _origem:
  3013  005E                     	ds	1
  3014  005F                     _flag:
  3015  005F                     	ds	1
  3016  0060                     _pulsoEncoder:
  3017  0060                     	ds	1
  3018  0061                     _RXaccepted:
  3019  0061                     	ds	1
  3020  0062                     _waitRX:
  3021  0062                     	ds	1
  3022  0063                     _rxValue:
  3023  0063                     	ds	1
  3024  0064                     _state:
  3025  0064                     	ds	1
  3026                           
  3027                           	psect	dataBANK0
  3028  006A                     __pdataBANK0:
  3029  006A                     _subindo:
  3030  006A                     	ds	1
  3031                           
  3032                           	psect	bssBANK1
  3033  00C1                     __pbssBANK1:
  3034  00C1                     _MatrixLed:
  3035  00C1                     	ds	8
  3036                           
  3037                           	psect	clrtext
  3038  0D39                     clear_ram0:	
  3039                           ;	Called with FSR0 containing the base address, and
  3040                           ;	WREG with the size to clear
  3041                           
  3042  0D39  0064               	clrwdt	;clear the watchdog before getting into this loop
  3043  0D3A                     clrloop0:
  3044  0D3A  0180               	clrf	0	;clear RAM location pointed to by FSR
  3045  0D3B  3101               	addfsr 0,1
  3046  0D3C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3047  0D3D  2D3A               	goto	clrloop0	;have we reached the end yet?
  3048  0D3E  3400               	retlw	0	;all done for this memory range, return
  3049                           
  3050                           	psect	cstackBANK1
  3051  00A0                     __pcstackBANK1:
  3052  00A0                     ?_IOCBF0_SetInterruptHandler:
  3053  00A0                     ?_IOCBF3_SetInterruptHandler:	
  3054                           ; 1 bytes @ 0x0
  3055                           
  3056  00A0                     ??_SPI1_Initialize:	
  3057                           ; 1 bytes @ 0x0
  3058                           
  3059  00A0                     ??_OSCILLATOR_Initialize:	
  3060                           ; 1 bytes @ 0x0
  3061                           
  3062  00A0                     ??_WDT_Initialize:	
  3063                           ; 1 bytes @ 0x0
  3064                           
  3065  00A0                     ??_FVR_Initialize:	
  3066                           ; 1 bytes @ 0x0
  3067                           
  3068  00A0                     ??_TMR2_Initialize:	
  3069                           ; 1 bytes @ 0x0
  3070                           
  3071  00A0                     ??_ADC_Initialize:	
  3072                           ; 1 bytes @ 0x0
  3073                           
  3074  00A0                     ??_TMR1_Initialize:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083  00A0                     ?_EUSART_SetErrorHandler:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086  00A0                     ?_TMR0_SetInterruptHandler:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089  00A0                     ?_CCP4_SetCallBack:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092  00A0                     ?_TMR4_SetInterruptHandler:	
  3093                           ; 1 bytes @ 0x0
  3094                           
  3095  00A0                     ??_PWM3_Initialize:	
  3096                           ; 1 bytes @ 0x0
  3097                           
  3098  00A0                     ??_CMP2_Initialize:	
  3099                           ; 1 bytes @ 0x0
  3100                           
  3101  00A0                     ??_CMP1_Initialize:	
  3102                           ; 1 bytes @ 0x0
  3103                           
  3104  00A0                     ??_EUSART_is_rx_ready:	
  3105                           ; 1 bytes @ 0x0
  3106                           
  3107  00A0                     ??_EUSART_Read:	
  3108                           ; 1 bytes @ 0x0
  3109                           
  3110  00A0                     ??_SPI1_Open:	
  3111                           ; 1 bytes @ 0x0
  3112                           
  3113  00A0                     ?_SPI1_ExchangeBlock:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116  00A0                     ??_isValidFloor:	
  3117                           ; 1 bytes @ 0x0
  3118                           
  3119  00A0                     _isValidFloor$1508:	
  3120                           ; 1 bytes @ 0x0
  3121                           
  3122  00A0                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3123                           ; 1 bytes @ 0x0
  3124                           
  3125  00A0                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3126                           ; 2 bytes @ 0x0
  3127                           
  3128  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3129                           ; 2 bytes @ 0x0
  3130                           
  3131  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3132                           ; 2 bytes @ 0x0
  3133                           
  3134  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3135                           ; 2 bytes @ 0x0
  3136                           
  3137  00A0                     SPI1_ExchangeBlock@blockSize:	
  3138                           ; 2 bytes @ 0x0
  3139                           
  3140  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3141                           ; 2 bytes @ 0x0
  3142                           
  3143  00A0                     CCP4_SetCallBack@customCallBack:	
  3144                           ; 2 bytes @ 0x0
  3145                           
  3146  00A0                     TMR4_SetInterruptHandler@InterruptHandler:	
  3147                           ; 2 bytes @ 0x0
  3148                           
  3149                           
  3150                           ; 2 bytes @ 0x0
  3151  00A0                     	ds	1
  3152  00A1                     isValidFloor@floor:
  3153                           
  3154                           ; 1 bytes @ 0x1
  3155  00A1                     	ds	1
  3156  00A2                     ??_IOCBF0_SetInterruptHandler:
  3157  00A2                     ??_IOCBF3_SetInterruptHandler:	
  3158                           ; 1 bytes @ 0x2
  3159                           
  3160  00A2                     ??_TMR4_Initialize:	
  3161                           ; 1 bytes @ 0x2
  3162                           
  3163  00A2                     ??_TMR0_Initialize:	
  3164                           ; 1 bytes @ 0x2
  3165                           
  3166  00A2                     ??_CCP4_Initialize:	
  3167                           ; 1 bytes @ 0x2
  3168                           
  3169  00A2                     ??_EUSART_Initialize:	
  3170                           ; 1 bytes @ 0x2
  3171                           
  3172  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3173                           ; 1 bytes @ 0x2
  3174                           
  3175  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3176                           ; 1 bytes @ 0x2
  3177                           
  3178  00A2                     ??_EUSART_SetErrorHandler:	
  3179                           ; 1 bytes @ 0x2
  3180                           
  3181  00A2                     ??_TMR0_SetInterruptHandler:	
  3182                           ; 1 bytes @ 0x2
  3183                           
  3184  00A2                     ??_CCP4_SetCallBack:	
  3185                           ; 1 bytes @ 0x2
  3186                           
  3187  00A2                     ??_TMR4_SetInterruptHandler:	
  3188                           ; 1 bytes @ 0x2
  3189                           
  3190  00A2                     ??_PIN_MANAGER_Initialize:	
  3191                           ; 1 bytes @ 0x2
  3192                           
  3193  00A2                     ??_SPI1_ExchangeBlock:	
  3194                           ; 1 bytes @ 0x2
  3195                           
  3196                           
  3197                           ; 1 bytes @ 0x2
  3198  00A2                     	ds	1
  3199  00A3                     ??_SYSTEM_Initialize:
  3200  00A3                     SPI1_Open@spi1UniqueConfiguration:	
  3201                           ; 1 bytes @ 0x3
  3202                           
  3203  00A3                     SPI1_ExchangeBlock@block:	
  3204                           ; 1 bytes @ 0x3
  3205                           
  3206                           
  3207                           ; 1 bytes @ 0x3
  3208  00A3                     	ds	1
  3209  00A4                     SPI1_ExchangeBlock@data:
  3210                           
  3211                           ; 1 bytes @ 0x4
  3212  00A4                     	ds	1
  3213  00A5                     ?_txSpi:
  3214  00A5                     txSpi@dataSize:	
  3215                           ; 1 bytes @ 0x5
  3216                           
  3217                           
  3218                           ; 2 bytes @ 0x5
  3219  00A5                     	ds	2
  3220  00A7                     ??_txSpi:
  3221  00A7                     txSpi@data:	
  3222                           ; 1 bytes @ 0x7
  3223                           
  3224                           
  3225                           ; 1 bytes @ 0x7
  3226  00A7                     	ds	1
  3227  00A8                     ??_initMatrix:
  3228                           
  3229                           ; 1 bytes @ 0x8
  3230  00A8                     	ds	1
  3231  00A9                     initMatrix@data:
  3232                           
  3233                           ; 4 bytes @ 0x9
  3234  00A9                     	ds	4
  3235  00AD                     initMatrix@k:
  3236                           
  3237                           ; 1 bytes @ 0xD
  3238  00AD                     	ds	1
  3239  00AE                     initMatrix@i:
  3240                           
  3241                           ; 1 bytes @ 0xE
  3242  00AE                     	ds	1
  3243  00AF                     initMatrix@i_1547:
  3244                           
  3245                           ; 1 bytes @ 0xF
  3246  00AF                     	ds	1
  3247  00B0                     initMatrix@j:
  3248                           
  3249                           ; 1 bytes @ 0x10
  3250  00B0                     	ds	1
  3251  00B1                     ??_main:
  3252                           
  3253                           ; 1 bytes @ 0x11
  3254  00B1                     	ds	2
  3255                           
  3256                           	psect	cstackCOMMON
  3257  0070                     __pcstackCOMMON:
  3258  0070                     ?_chegadaS4:
  3259  0070                     ?_chegadaS3:	
  3260                           ; 1 bytes @ 0x0
  3261                           
  3262  0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3263                           ; 1 bytes @ 0x0
  3264                           
  3265  0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3266                           ; 1 bytes @ 0x0
  3267                           
  3268  0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3269                           ; 1 bytes @ 0x0
  3270                           
  3271  0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3272                           ; 1 bytes @ 0x0
  3273                           
  3274  0070                     ?_IOCBF0_ISR:	
  3275                           ; 1 bytes @ 0x0
  3276                           
  3277  0070                     ??_IOCBF0_ISR:	
  3278                           ; 1 bytes @ 0x0
  3279                           
  3280  0070                     ?_IOCBF3_ISR:	
  3281                           ; 1 bytes @ 0x0
  3282                           
  3283  0070                     ?_SPI1_Initialize:	
  3284                           ; 1 bytes @ 0x0
  3285                           
  3286  0070                     ?_OSCILLATOR_Initialize:	
  3287                           ; 1 bytes @ 0x0
  3288                           
  3289  0070                     ?_WDT_Initialize:	
  3290                           ; 1 bytes @ 0x0
  3291                           
  3292  0070                     ?_FVR_Initialize:	
  3293                           ; 1 bytes @ 0x0
  3294                           
  3295  0070                     ?_TMR4_Initialize:	
  3296                           ; 1 bytes @ 0x0
  3297                           
  3298  0070                     ?_TMR2_Initialize:	
  3299                           ; 1 bytes @ 0x0
  3300                           
  3301  0070                     ?_TMR0_Initialize:	
  3302                           ; 1 bytes @ 0x0
  3303                           
  3304  0070                     ?_ADC_Initialize:	
  3305                           ; 1 bytes @ 0x0
  3306                           
  3307  0070                     ?_CCP4_Initialize:	
  3308                           ; 1 bytes @ 0x0
  3309                           
  3310  0070                     ?_TMR1_Initialize:	
  3311                           ; 1 bytes @ 0x0
  3312                           
  3313  0070                     ?_EUSART_Initialize:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316  0070                     ?_TMR0_ISR:	
  3317                           ; 1 bytes @ 0x0
  3318                           
  3319  0070                     ?_CCP4_CaptureISR:	
  3320                           ; 1 bytes @ 0x0
  3321                           
  3322  0070                     ?_TMR4_ISR:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325  0070                     ??_TMR4_ISR:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328  0070                     ?_TMR0_DefaultInterruptHandler:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331  0070                     ??_TMR0_DefaultInterruptHandler:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334  0070                     ?_TMR0_CallBack:	
  3335                           ; 1 bytes @ 0x0
  3336                           
  3337  0070                     ?_TMR4_DefaultInterruptHandler:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340  0070                     ??_TMR4_DefaultInterruptHandler:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343  0070                     ?_TMR4_CallBack:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346  0070                     ??_TMR4_CallBack:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349  0070                     ?_memset:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352  0070                     ?_PWM3_Initialize:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355  0070                     ?_CMP2_Initialize:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358  0070                     ?_CMP2_ISR:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361  0070                     ?_CMP1_Initialize:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364  0070                     ?_CMP1_ISR:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367  0070                     ?_PIN_MANAGER_Initialize:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370  0070                     ?_PIN_MANAGER_IOC:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373  0070                     ?_SYSTEM_Initialize:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376  0070                     ?_EUSART_is_rx_ready:	
  3377                           ; 1 bytes @ 0x0
  3378                           
  3379  0070                     ?_EUSART_Read:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382  0070                     ?_EUSART_Write:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385  0070                     ??_EUSART_Write:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388  0070                     ?_SPI1_Open:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391  0070                     ?_INTERRUPT_InterruptManager:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394  0070                     ?_CCP4_DefaultCallBack:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397  0070                     ?_isValidFloor:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400  0070                     ?_sendInfo:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403  0070                     ?_matrixUpdate:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406  0070                     ?_initMatrix:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409  0070                     ?_chegadaS1:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412  0070                     ?_chegadaS2:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415  0070                     ?_main:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418  0070                     ?i1_SPI1_ExchangeBlock:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421  0070                     ?__Umul8_16:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424  0070                     ?_ADC_GetConversion:	
  3425                           ; 2 bytes @ 0x0
  3426                           
  3427  0070                     EUSART_Write@txData:	
  3428                           ; 2 bytes @ 0x0
  3429                           
  3430  0070                     __Umul8_16@multiplicand:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433  0070                     CCP4_DefaultCallBack@capturedValue:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436  0070                     memset@c:	
  3437                           ; 2 bytes @ 0x0
  3438                           
  3439  0070                     i1SPI1_ExchangeBlock@blockSize:	
  3440                           ; 2 bytes @ 0x0
  3441                           
  3442                           
  3443                           ; 2 bytes @ 0x0
  3444  0070                     	ds	2
  3445  0072                     ??_CCP4_CaptureISR:
  3446  0072                     ??__Umul8_16:	
  3447                           ; 1 bytes @ 0x2
  3448                           
  3449  0072                     ??_ADC_GetConversion:	
  3450                           ; 1 bytes @ 0x2
  3451                           
  3452  0072                     ??_CCP4_DefaultCallBack:	
  3453                           ; 1 bytes @ 0x2
  3454                           
  3455  0072                     ??i1_SPI1_ExchangeBlock:	
  3456                           ; 1 bytes @ 0x2
  3457                           
  3458  0072                     memset@n:	
  3459                           ; 1 bytes @ 0x2
  3460                           
  3461                           
  3462                           ; 2 bytes @ 0x2
  3463  0072                     	ds	1
  3464  0073                     ADC_GetConversion@channel:
  3465  0073                     i1SPI1_ExchangeBlock@block:	
  3466                           ; 1 bytes @ 0x3
  3467                           
  3468  0073                     CCP4_CaptureISR@module:	
  3469                           ; 1 bytes @ 0x3
  3470                           
  3471                           
  3472                           ; 2 bytes @ 0x3
  3473  0073                     	ds	1
  3474  0074                     ??_memset:
  3475  0074                     ?___wmul:	
  3476                           ; 1 bytes @ 0x4
  3477                           
  3478  0074                     i1SPI1_ExchangeBlock@data:	
  3479                           ; 2 bytes @ 0x4
  3480                           
  3481  0074                     ___wmul@multiplier:	
  3482                           ; 1 bytes @ 0x4
  3483                           
  3484  0074                     __Umul8_16@product:	
  3485                           ; 2 bytes @ 0x4
  3486                           
  3487                           
  3488                           ; 2 bytes @ 0x4
  3489  0074                     	ds	1
  3490  0075                     ?i1_txSpi:
  3491  0075                     i1txSpi@dataSize:	
  3492                           ; 1 bytes @ 0x5
  3493                           
  3494                           
  3495                           ; 2 bytes @ 0x5
  3496  0075                     	ds	1
  3497  0076                     ___wmul@multiplicand:
  3498  0076                     __Umul8_16@word_mpld:	
  3499                           ; 2 bytes @ 0x6
  3500                           
  3501  0076                     memset@k:	
  3502                           ; 2 bytes @ 0x6
  3503                           
  3504                           
  3505                           ; 2 bytes @ 0x6
  3506  0076                     	ds	1
  3507  0077                     ??i1_txSpi:
  3508  0077                     i1txSpi@data:	
  3509                           ; 1 bytes @ 0x7
  3510                           
  3511                           
  3512                           ; 1 bytes @ 0x7
  3513  0077                     	ds	1
  3514  0078                     ??_matrixUpdate:
  3515  0078                     ??___wmul:	
  3516                           ; 1 bytes @ 0x8
  3517                           
  3518  0078                     __Umul8_16@multiplier:	
  3519                           ; 1 bytes @ 0x8
  3520                           
  3521  0078                     memset@dest:	
  3522                           ; 1 bytes @ 0x8
  3523                           
  3524  0078                     ___wmul@product:	
  3525                           ; 1 bytes @ 0x8
  3526                           
  3527                           
  3528                           ; 2 bytes @ 0x8
  3529  0078                     	ds	1
  3530  0079                     ??___flmul:
  3531  0079                     memset@s:	
  3532                           ; 1 bytes @ 0x9
  3533                           
  3534  0079                     matrixUpdate@data:	
  3535                           ; 1 bytes @ 0x9
  3536                           
  3537                           
  3538                           ; 2 bytes @ 0x9
  3539  0079                     	ds	1
  3540  007A                     ?_bin2bcd:
  3541  007A                     bin2bcd@binVal:	
  3542                           ; 2 bytes @ 0xA
  3543                           
  3544                           
  3545                           ; 2 bytes @ 0xA
  3546  007A                     	ds	1
  3547  007B                     matrixUpdate@i:
  3548                           
  3549                           ; 1 bytes @ 0xB
  3550  007B                     	ds	1
  3551  007C                     ??_chegadaS4:
  3552  007C                     ??_chegadaS3:	
  3553                           ; 1 bytes @ 0xC
  3554                           
  3555  007C                     ??_chegadaS1:	
  3556                           ; 1 bytes @ 0xC
  3557                           
  3558  007C                     ??_chegadaS2:	
  3559                           ; 1 bytes @ 0xC
  3560                           
  3561                           
  3562                           ; 1 bytes @ 0xC
  3563  007C                     	ds	1
  3564  007D                     ??_IOCBF3_ISR:
  3565  007D                     ??_CMP2_ISR:	
  3566                           ; 1 bytes @ 0xD
  3567                           
  3568  007D                     ??_CMP1_ISR:	
  3569                           ; 1 bytes @ 0xD
  3570                           
  3571  007D                     ??_PIN_MANAGER_IOC:	
  3572                           ; 1 bytes @ 0xD
  3573                           
  3574                           
  3575                           ; 1 bytes @ 0xD
  3576  007D                     	ds	1
  3577  007E                     ??_TMR0_ISR:
  3578  007E                     ??_TMR0_CallBack:	
  3579                           ; 1 bytes @ 0xE
  3580                           
  3581  007E                     ??_INTERRUPT_InterruptManager:	
  3582                           ; 1 bytes @ 0xE
  3583                           
  3584                           
  3585                           	psect	cstackBANK0
  3586  0020                     __pcstackBANK0:	
  3587                           ; 1 bytes @ 0xE
  3588                           
  3589  0020                     ??_bin2bcd:
  3590  0020                     ?___flmul:	
  3591                           ; 1 bytes @ 0x0
  3592                           
  3593  0020                     ___flmul@b:	
  3594                           ; 4 bytes @ 0x0
  3595                           
  3596                           
  3597                           ; 4 bytes @ 0x0
  3598  0020                     	ds	4
  3599  0024                     bin2bcd@i:
  3600  0024                     ___flmul@a:	
  3601                           ; 1 bytes @ 0x4
  3602                           
  3603                           
  3604                           ; 4 bytes @ 0x4
  3605  0024                     	ds	1
  3606  0025                     bin2bcd@dataU:
  3607                           
  3608                           ; 4 bytes @ 0x5
  3609  0025                     	ds	3
  3610  0028                     ___flmul@sign:
  3611                           
  3612                           ; 1 bytes @ 0x8
  3613  0028                     	ds	1
  3614  0029                     ___flmul@grs:
  3615                           
  3616                           ; 4 bytes @ 0x9
  3617  0029                     	ds	4
  3618  002D                     ___flmul@aexp:
  3619                           
  3620                           ; 1 bytes @ 0xD
  3621  002D                     	ds	1
  3622  002E                     ___flmul@bexp:
  3623                           
  3624                           ; 1 bytes @ 0xE
  3625  002E                     	ds	1
  3626  002F                     ___flmul@prod:
  3627                           
  3628                           ; 4 bytes @ 0xF
  3629  002F                     	ds	4
  3630  0033                     ___flmul@temp:
  3631                           
  3632                           ; 2 bytes @ 0x13
  3633  0033                     	ds	2
  3634  0035                     ?___fltol:
  3635  0035                     ___fltol@f1:	
  3636                           ; 4 bytes @ 0x15
  3637                           
  3638                           
  3639                           ; 4 bytes @ 0x15
  3640  0035                     	ds	4
  3641  0039                     ??___fltol:
  3642                           
  3643                           ; 1 bytes @ 0x19
  3644  0039                     	ds	5
  3645  003E                     ___fltol@sign1:
  3646                           
  3647                           ; 1 bytes @ 0x1E
  3648  003E                     	ds	1
  3649  003F                     ___fltol@exp1:
  3650                           
  3651                           ; 1 bytes @ 0x1F
  3652  003F                     	ds	1
  3653  0040                     ??_sendInfo:
  3654                           
  3655                           ; 1 bytes @ 0x20
  3656  0040                     	ds	2
  3657  0042                     sendInfo@velocidade:
  3658                           
  3659                           ; 2 bytes @ 0x22
  3660  0042                     	ds	2
  3661  0044                     sendInfo@bcd:
  3662                           
  3663                           ; 2 bytes @ 0x24
  3664  0044                     	ds	2
  3665                           
  3666                           	psect	maintext
  3667  03B6                     __pmaintext:	
  3668 ;;
  3669 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3670 ;;
  3671 ;; *************** function _main *****************
  3672 ;; Defined at:
  3673 ;;		line 263 in file "main.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : B1F/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3687 ;;      Params:         0       0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0
  3689 ;;      Temps:          0       0       2       0       0       0
  3690 ;;      Totals:         0       0       2       0       0       0
  3691 ;;Total ram usage:        2 bytes
  3692 ;; Hardware stack levels required when called: 10
  3693 ;; This function calls:
  3694 ;;		_EUSART_Read
  3695 ;;		_EUSART_is_rx_ready
  3696 ;;		_IOCBF3_SetInterruptHandler
  3697 ;;		_SPI1_Open
  3698 ;;		_SYSTEM_Initialize
  3699 ;;		_TMR0_SetInterruptHandler
  3700 ;;		_initMatrix
  3701 ;;		_isValidFloor
  3702 ;; This function is called by:
  3703 ;;		Startup code after reset
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707  03B6                     _main:	
  3708                           ;psect for function _main
  3709                           
  3710  03B6                     l3838:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3713                           
  3714                           
  3715                           ;main.c: 266:     SYSTEM_Initialize();
  3716  03B6  318F  27A1  3183   	fcall	_SYSTEM_Initialize
  3717                           
  3718                           ;main.c: 275:     IOCBF3_SetInterruptHandler(chegadaS1);
  3719  03B9  30AE               	movlw	low _chegadaS1
  3720  03BA  0021               	movlb	1	; select bank1
  3721  03BB  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3722  03BC  3007               	movlw	high _chegadaS1
  3723  03BD  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3724  03BE  318D  255F  3183   	fcall	_IOCBF3_SetInterruptHandler
  3725                           
  3726                           ;main.c: 276:     IOCBF3_SetInterruptHandler(chegadaS2);
  3727  03C1  305E               	movlw	low _chegadaS2
  3728  03C2  0021               	movlb	1	; select bank1
  3729  03C3  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3730  03C4  3007               	movlw	high _chegadaS2
  3731  03C5  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3732  03C6  318D  255F  3183   	fcall	_IOCBF3_SetInterruptHandler
  3733                           
  3734                           ;main.c: 277:     TMR0_SetInterruptHandler(sendInfo);
  3735  03C9  30C7               	movlw	low _sendInfo
  3736  03CA  0021               	movlb	1	; select bank1
  3737  03CB  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3738  03CC  3002               	movlw	high _sendInfo
  3739  03CD  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3740  03CE  318D  252D  3183   	fcall	_TMR0_SetInterruptHandler
  3741  03D1                     l3840:
  3742  03D1  0022               	movlb	2	; select bank2
  3743  03D2  148D               	bsf	13,1	;volatile
  3744  03D3                     l3842:
  3745                           
  3746                           ;main.c: 281:     SPI1_Open(SPI1_DEFAULT);
  3747  03D3  3000               	movlw	0
  3748  03D4  3187  270A  3183   	fcall	_SPI1_Open
  3749  03D7                     l3844:
  3750                           
  3751                           ;main.c: 282:     initMatrix();
  3752  03D7  3186  2605  3183   	fcall	_initMatrix
  3753  03DA                     l3846:
  3754                           
  3755                           ;main.c: 285:     (INTCONbits.GIE = 1);
  3756  03DA  178B               	bsf	11,7	;volatile
  3757  03DB                     l3848:
  3758                           
  3759                           ;main.c: 288:     (INTCONbits.PEIE = 1);
  3760  03DB  170B               	bsf	11,6	;volatile
  3761  03DC                     l3850:
  3762                           
  3763                           ;main.c: 297:     {;main.c: 299:         if(EUSART_is_rx_ready()){
  3764  03DC  318D  2504  3183   	fcall	_EUSART_is_rx_ready
  3765  03DF  3A00               	xorlw	0
  3766  03E0  1903               	skipnz
  3767  03E1  2BE3               	goto	u2521
  3768  03E2  2BE4               	goto	u2520
  3769  03E3                     u2521:
  3770  03E3  2BDC               	goto	l3850
  3771  03E4                     u2520:
  3772  03E4                     l3852:
  3773                           
  3774                           ;main.c: 300:             rxValue = EUSART_Read();
  3775  03E4  318D  25E4  3183   	fcall	_EUSART_Read
  3776  03E7  0021               	movlb	1	; select bank1
  3777  03E8  00B1               	movwf	??_main^(0+128)
  3778  03E9  0831               	movf	??_main^(0+128),w
  3779  03EA  0020               	movlb	0	; select bank0
  3780  03EB  00E3               	movwf	_rxValue
  3781                           
  3782                           ;main.c: 301:             switch(state){
  3783  03EC  2C40               	goto	l3882
  3784  03ED                     l3854:
  3785                           
  3786                           ;main.c: 303:                     if(rxValue == '$'){
  3787  03ED  3024               	movlw	36
  3788  03EE  0020               	movlb	0	; select bank0
  3789  03EF  0663               	xorwf	_rxValue,w
  3790  03F0  1D03               	btfss	3,2
  3791  03F1  2BF3               	goto	u2531
  3792  03F2  2BF4               	goto	u2530
  3793  03F3                     u2531:
  3794  03F3  2C57               	goto	l833
  3795  03F4                     u2530:
  3796  03F4                     l3856:
  3797                           
  3798                           ;main.c: 304:                         state = FIRST_NUM;
  3799  03F4  01E4               	clrf	_state
  3800  03F5  0AE4               	incf	_state,f
  3801  03F6  2BDC               	goto	l3850
  3802  03F7                     l3858:
  3803                           
  3804                           ;main.c: 308:                     if(isValidFloor(rxValue)){
  3805  03F7  0020               	movlb	0	; select bank0
  3806  03F8  0863               	movf	_rxValue,w
  3807  03F9  3187  27ED  3183   	fcall	_isValidFloor
  3808  03FC  3A00               	xorlw	0
  3809  03FD  1903               	skipnz
  3810  03FE  2C00               	goto	u2541
  3811  03FF  2C01               	goto	u2540
  3812  0400                     u2541:
  3813  0400  2C10               	goto	l3864
  3814  0401                     u2540:
  3815  0401                     l3860:
  3816                           
  3817                           ;main.c: 309:                         oTemp = rxValue - 0x30;
  3818  0401  0020               	movlb	0	; select bank0
  3819  0402  0863               	movf	_rxValue,w
  3820  0403  3ED0               	addlw	208
  3821  0404  0021               	movlb	1	; select bank1
  3822  0405  00B1               	movwf	??_main^(0+128)
  3823  0406  0831               	movf	??_main^(0+128),w
  3824  0407  0020               	movlb	0	; select bank0
  3825  0408  00DD               	movwf	_oTemp
  3826  0409                     l3862:
  3827                           
  3828                           ;main.c: 310:                         state = SECOND_NUM;
  3829  0409  3002               	movlw	2
  3830  040A  0021               	movlb	1	; select bank1
  3831  040B  00B1               	movwf	??_main^(0+128)
  3832  040C  0831               	movf	??_main^(0+128),w
  3833  040D  0020               	movlb	0	; select bank0
  3834  040E  00E4               	movwf	_state
  3835                           
  3836                           ;main.c: 311:                     }else{
  3837  040F  2BDC               	goto	l3850
  3838  0410                     l3864:
  3839                           
  3840                           ;main.c: 312:                         state = START;
  3841  0410  0020               	movlb	0	; select bank0
  3842  0411  01E4               	clrf	_state
  3843  0412  2BDC               	goto	l3850
  3844  0413                     l3866:
  3845                           
  3846                           ;main.c: 316:                     if(isValidFloor(rxValue)){
  3847  0413  0020               	movlb	0	; select bank0
  3848  0414  0863               	movf	_rxValue,w
  3849  0415  3187  27ED  3183   	fcall	_isValidFloor
  3850  0418  3A00               	xorlw	0
  3851  0419  1903               	skipnz
  3852  041A  2C1C               	goto	u2551
  3853  041B  2C1D               	goto	u2550
  3854  041C                     u2551:
  3855  041C  2C10               	goto	l3864
  3856  041D                     u2550:
  3857  041D                     l3868:
  3858                           
  3859                           ;main.c: 317:                         dTemp = rxValue - 0x30;
  3860  041D  0020               	movlb	0	; select bank0
  3861  041E  0863               	movf	_rxValue,w
  3862  041F  3ED0               	addlw	208
  3863  0420  0021               	movlb	1	; select bank1
  3864  0421  00B1               	movwf	??_main^(0+128)
  3865  0422  0831               	movf	??_main^(0+128),w
  3866  0423  0020               	movlb	0	; select bank0
  3867  0424  00DB               	movwf	_dTemp
  3868  0425                     l3870:
  3869                           
  3870                           ;main.c: 318:                         state = CR;
  3871  0425  3003               	movlw	3
  3872  0426  0021               	movlb	1	; select bank1
  3873  0427  00B1               	movwf	??_main^(0+128)
  3874  0428  0831               	movf	??_main^(0+128),w
  3875  0429  0020               	movlb	0	; select bank0
  3876  042A  00E4               	movwf	_state
  3877                           
  3878                           ;main.c: 319:                     }else{
  3879  042B  2BDC               	goto	l3850
  3880  042C                     l3874:
  3881                           
  3882                           ;main.c: 324:                     if(rxValue == 0x0D){
  3883  042C  300D               	movlw	13
  3884  042D  0020               	movlb	0	; select bank0
  3885  042E  0663               	xorwf	_rxValue,w
  3886  042F  1D03               	btfss	3,2
  3887  0430  2C32               	goto	u2561
  3888  0431  2C33               	goto	u2560
  3889  0432                     u2561:
  3890  0432  2C10               	goto	l3864
  3891  0433                     u2560:
  3892  0433                     l3876:
  3893                           
  3894                           ;main.c: 325:                         origem = oTemp;
  3895  0433  085D               	movf	_oTemp,w
  3896  0434  0021               	movlb	1	; select bank1
  3897  0435  00B1               	movwf	??_main^(0+128)
  3898  0436  0831               	movf	??_main^(0+128),w
  3899  0437  0020               	movlb	0	; select bank0
  3900  0438  00DE               	movwf	_origem
  3901                           
  3902                           ;main.c: 326:                         destino = dTemp;
  3903  0439  085B               	movf	_dTemp,w
  3904  043A  0021               	movlb	1	; select bank1
  3905  043B  00B1               	movwf	??_main^(0+128)
  3906  043C  0831               	movf	??_main^(0+128),w
  3907  043D  0020               	movlb	0	; select bank0
  3908  043E  00DC               	movwf	_destino
  3909  043F  2C10               	goto	l3864
  3910  0440                     l3882:
  3911  0440  0864               	movf	_state,w
  3912  0441  0021               	movlb	1	; select bank1
  3913  0442  00B1               	movwf	??_main^(0+128)
  3914  0443  01B2               	clrf	(??_main^(0+128)+1)
  3915                           
  3916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3917                           ; Switch size 1, requested type "simple"
  3918                           ; Number of cases is 1, Range of values is 0 to 0
  3919                           ; switch strategies available:
  3920                           ; Name         Instructions Cycles
  3921                           ; simple_byte            4     3 (average)
  3922                           ; direct_byte            8     6 (fixed)
  3923                           ; jumptable            260     6 (fixed)
  3924                           ;	Chosen strategy is simple_byte
  3925  0444  0832               	movf	(??_main+1)^(0+128),w
  3926  0445  3A00               	xorlw	0	; case 0
  3927  0446  1903               	skipnz
  3928  0447  2C49               	goto	l3920
  3929  0448  2C10               	goto	l3864
  3930  0449                     l3920:
  3931                           
  3932                           ; Switch size 1, requested type "simple"
  3933                           ; Number of cases is 4, Range of values is 0 to 3
  3934                           ; switch strategies available:
  3935                           ; Name         Instructions Cycles
  3936                           ; simple_byte           13     7 (average)
  3937                           ; direct_byte           14     6 (fixed)
  3938                           ; jumptable            260     6 (fixed)
  3939                           ;	Chosen strategy is simple_byte
  3940  0449  0831               	movf	??_main^(0+128),w
  3941  044A  3A00               	xorlw	0	; case 0
  3942  044B  1903               	skipnz
  3943  044C  2BED               	goto	l3854
  3944  044D  3A01               	xorlw	1	; case 1
  3945  044E  1903               	skipnz
  3946  044F  2BF7               	goto	l3858
  3947  0450  3A03               	xorlw	3	; case 2
  3948  0451  1903               	skipnz
  3949  0452  2C13               	goto	l3866
  3950  0453  3A01               	xorlw	1	; case 3
  3951  0454  1903               	skipnz
  3952  0455  2C2C               	goto	l3874
  3953  0456  2C10               	goto	l3864
  3954  0457                     l833:	
  3955                           ;main.c: 334:         }
  3956                           
  3957  0457  2BDC               	goto	l3850
  3958  0458  3180  2856         	ljmp	start
  3959  045A                     __end_of_main:
  3960                           
  3961                           	psect	text1
  3962  07ED                     __ptext1:	
  3963 ;; *************** function _isValidFloor *****************
  3964 ;; Defined at:
  3965 ;;		line 52 in file "main.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  floor           1    wreg     unsigned char 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  floor           1    1[BANK1 ] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  1    wreg      _Bool 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3979 ;;      Params:         0       0       0       0       0       0
  3980 ;;      Locals:         0       0       2       0       0       0
  3981 ;;      Temps:          0       0       0       0       0       0
  3982 ;;      Totals:         0       0       2       0       0       0
  3983 ;;Total ram usage:        2 bytes
  3984 ;; Hardware stack levels used: 1
  3985 ;; Hardware stack levels required when called: 7
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_main
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993  07ED                     _isValidFloor:	
  3994                           ;psect for function _isValidFloor
  3995                           
  3996                           
  3997                           ;incstack = 0
  3998                           ; Regs used in _isValidFloor: [wreg+status,2]
  3999                           ;isValidFloor@floor stored from wreg
  4000  07ED  0021               	movlb	1	; select bank1
  4001  07EE  00A1               	movwf	isValidFloor@floor^(0+128)
  4002  07EF                     l3786:
  4003                           
  4004                           ;main.c: 53:     return floor >= '0' && floor <= '3';
  4005  07EF  01A0               	clrf	_isValidFloor$1508^(0+128)
  4006  07F0                     l3788:
  4007  07F0  3030               	movlw	48
  4008  07F1  0221               	subwf	isValidFloor@floor^(0+128),w
  4009  07F2  1C03               	skipc
  4010  07F3  2FF5               	goto	u2471
  4011  07F4  2FF6               	goto	u2470
  4012  07F5                     u2471:
  4013  07F5  2FFE               	goto	l3794
  4014  07F6                     u2470:
  4015  07F6                     l3790:
  4016  07F6  3034               	movlw	52
  4017  07F7  0221               	subwf	isValidFloor@floor^(0+128),w
  4018  07F8  1803               	skipnc
  4019  07F9  2FFB               	goto	u2481
  4020  07FA  2FFC               	goto	u2480
  4021  07FB                     u2481:
  4022  07FB  2FFE               	goto	l3794
  4023  07FC                     u2480:
  4024  07FC                     l3792:
  4025  07FC  01A0               	clrf	_isValidFloor$1508^(0+128)
  4026  07FD  0AA0               	incf	_isValidFloor$1508^(0+128),f
  4027  07FE                     l3794:
  4028  07FE  0820               	movf	_isValidFloor$1508^(0+128),w
  4029  07FF                     l768:
  4030  07FF  0008               	return
  4031  0800                     __end_of_isValidFloor:
  4032                           
  4033                           	psect	text2
  4034  0605                     __ptext2:	
  4035 ;; *************** function _initMatrix *****************
  4036 ;; Defined at:
  4037 ;;		line 147 in file "main.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  j               1   16[BANK1 ] unsigned char 
  4042 ;;  i               1   15[BANK1 ] unsigned char 
  4043 ;;  i               1   14[BANK1 ] unsigned char 
  4044 ;;  data            4    9[BANK1 ] unsigned char [4]
  4045 ;;  k               1   13[BANK1 ] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4055 ;;      Params:         0       0       0       0       0       0
  4056 ;;      Locals:         0       0       8       0       0       0
  4057 ;;      Temps:          0       0       1       0       0       0
  4058 ;;      Totals:         0       0       9       0       0       0
  4059 ;;Total ram usage:        9 bytes
  4060 ;; Hardware stack levels used: 1
  4061 ;; Hardware stack levels required when called: 9
  4062 ;; This function calls:
  4063 ;;		_txSpi
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069  0605                     _initMatrix:	
  4070                           ;psect for function _initMatrix
  4071                           
  4072  0605                     l3798:	
  4073                           ;incstack = 0
  4074                           ; Regs used in _initMatrix: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4075                           
  4076                           
  4077                           ;main.c: 148:     uint8_t data[4];;main.c: 149:     uint8_t k=0;
  4078  0605  0021               	movlb	1	; select bank1
  4079  0606  01AD               	clrf	initMatrix@k^(0+128)
  4080                           
  4081                           ;main.c: 150:    for(uint8_t i =0; i<8; i++){
  4082  0607  01AE               	clrf	initMatrix@i^(0+128)
  4083  0608                     l3804:
  4084                           
  4085                           ;main.c: 151:             MatrixLed[i] = 0;
  4086  0608  082E               	movf	initMatrix@i^(0+128),w
  4087  0609  3EC1               	addlw	(low (_MatrixLed| 0))& (0+255)
  4088  060A  0086               	movwf	6
  4089  060B  0187               	clrf	7
  4090  060C  0181               	clrf	1
  4091  060D                     l3806:
  4092                           
  4093                           ;main.c: 152:         }
  4094  060D  3001               	movlw	1
  4095  060E  00A8               	movwf	??_initMatrix^(0+128)
  4096  060F  0828               	movf	??_initMatrix^(0+128),w
  4097  0610  07AE               	addwf	initMatrix@i^(0+128),f
  4098  0611                     l3808:
  4099  0611  3008               	movlw	8
  4100  0612  022E               	subwf	initMatrix@i^(0+128),w
  4101  0613  1C03               	skipc
  4102  0614  2E16               	goto	u2491
  4103  0615  2E17               	goto	u2490
  4104  0616                     u2491:
  4105  0616  2E08               	goto	l3804
  4106  0617                     u2490:
  4107  0617                     l3810:
  4108                           
  4109                           ;main.c: 153:     for(uint8_t i=0;i<6;i++){
  4110  0617  01AF               	clrf	initMatrix@i_1547^(0+128)
  4111  0618                     l3816:
  4112                           
  4113                           ;main.c: 154:         for(uint8_t j=0;j<4;j=j+2){
  4114  0618  01B0               	clrf	initMatrix@j^(0+128)
  4115  0619                     l3822:
  4116                           
  4117                           ;main.c: 155:             data[j]= matrix_conf[k];
  4118  0619  082D               	movf	initMatrix@k^(0+128),w
  4119  061A  3E00               	addlw	low (_matrix_conf| (0+32768))
  4120  061B  0084               	movwf	4
  4121  061C  3088               	movlw	high (_matrix_conf| (0+32768))
  4122  061D  1803               	skipnc
  4123  061E  3E01               	addlw	1
  4124  061F  0085               	movwf	5
  4125  0620  0800               	movf	0,w	;code access
  4126  0621  00A8               	movwf	??_initMatrix^(0+128)
  4127  0622  0830               	movf	initMatrix@j^(0+128),w
  4128  0623  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4129  0624  0086               	movwf	6
  4130  0625  0187               	clrf	7
  4131  0626  0828               	movf	??_initMatrix^(0+128),w
  4132  0627  0081               	movwf	1
  4133                           
  4134                           ;main.c: 156:             data[j+1]= matrix_conf[k+1];
  4135  0628  082D               	movf	initMatrix@k^(0+128),w
  4136  0629  3E01               	addlw	low ((_matrix_conf+1)| (0+32768))
  4137  062A  0084               	movwf	4
  4138  062B  3088               	movlw	high ((_matrix_conf+1)| (0+32768))
  4139  062C  1803               	skipnc
  4140  062D  3E01               	addlw	1
  4141  062E  0085               	movwf	5
  4142  062F  0800               	movf	0,w	;code access
  4143  0630  00A8               	movwf	??_initMatrix^(0+128)
  4144  0631  0830               	movf	initMatrix@j^(0+128),w
  4145  0632  3E01               	addlw	1
  4146  0633  3EA9               	addlw	(low (initMatrix@data| 0))& (0+255)
  4147  0634  0086               	movwf	6
  4148  0635  0187               	clrf	7
  4149  0636  0828               	movf	??_initMatrix^(0+128),w
  4150  0637  0081               	movwf	1
  4151  0638                     l3824:
  4152                           
  4153                           ;main.c: 157:         }
  4154  0638  0830               	movf	initMatrix@j^(0+128),w
  4155  0639  3E02               	addlw	2
  4156  063A  00A8               	movwf	??_initMatrix^(0+128)
  4157  063B  0828               	movf	??_initMatrix^(0+128),w
  4158  063C  00B0               	movwf	initMatrix@j^(0+128)
  4159  063D                     l3826:
  4160  063D  3004               	movlw	4
  4161  063E  0230               	subwf	initMatrix@j^(0+128),w
  4162  063F  1C03               	skipc
  4163  0640  2E42               	goto	u2501
  4164  0641  2E43               	goto	u2500
  4165  0642                     u2501:
  4166  0642  2E19               	goto	l3822
  4167  0643                     u2500:
  4168  0643                     l3828:
  4169                           
  4170                           ;main.c: 158:         k=k+2;
  4171  0643  082D               	movf	initMatrix@k^(0+128),w
  4172  0644  3E02               	addlw	2
  4173  0645  00A8               	movwf	??_initMatrix^(0+128)
  4174  0646  0828               	movf	??_initMatrix^(0+128),w
  4175  0647  00AD               	movwf	initMatrix@k^(0+128)
  4176  0648                     l3830:
  4177                           
  4178                           ;main.c: 159:         txSpi( data, 4);
  4179  0648  3004               	movlw	4
  4180  0649  00A5               	movwf	txSpi@dataSize^(0+128)
  4181  064A  3000               	movlw	0
  4182  064B  00A6               	movwf	(txSpi@dataSize^(0+128)+1)
  4183  064C  30A9               	movlw	(low (initMatrix@data| 0))& (0+255)
  4184  064D  318D  25F3  3186   	fcall	_txSpi
  4185  0650                     l3834:
  4186                           
  4187                           ;main.c: 163:     }
  4188  0650  3001               	movlw	1
  4189  0651  0021               	movlb	1	; select bank1
  4190  0652  00A8               	movwf	??_initMatrix^(0+128)
  4191  0653  0828               	movf	??_initMatrix^(0+128),w
  4192  0654  07AF               	addwf	initMatrix@i_1547^(0+128),f
  4193  0655                     l3836:
  4194  0655  3006               	movlw	6
  4195  0656  022F               	subwf	initMatrix@i_1547^(0+128),w
  4196  0657  1C03               	skipc
  4197  0658  2E5A               	goto	u2511
  4198  0659  2E5B               	goto	u2510
  4199  065A                     u2511:
  4200  065A  2E18               	goto	l3816
  4201  065B                     u2510:
  4202  065B                     l805:
  4203  065B  0008               	return
  4204  065C                     __end_of_initMatrix:
  4205                           
  4206                           	psect	text3
  4207  0DF3                     __ptext3:	
  4208 ;; *************** function _txSpi *****************
  4209 ;; Defined at:
  4210 ;;		line 119 in file "main.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  data            1    wreg     PTR unsigned char 
  4213 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4214 ;;  dataSize        2    5[BANK1 ] unsigned int 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  data            1    7[BANK1 ] PTR unsigned char 
  4217 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4227 ;;      Params:         0       0       2       0       0       0
  4228 ;;      Locals:         0       0       1       0       0       0
  4229 ;;      Temps:          0       0       0       0       0       0
  4230 ;;      Totals:         0       0       3       0       0       0
  4231 ;;Total ram usage:        3 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; Hardware stack levels required when called: 8
  4234 ;; This function calls:
  4235 ;;		_SPI1_ExchangeBlock
  4236 ;; This function is called by:
  4237 ;;		_initMatrix
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241  0DF3                     _txSpi:	
  4242                           ;psect for function _txSpi
  4243                           
  4244                           
  4245                           ;incstack = 0
  4246                           ; Regs used in _txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4247                           ;txSpi@data stored from wreg
  4248  0DF3  0021               	movlb	1	; select bank1
  4249  0DF4  00A7               	movwf	txSpi@data^(0+128)
  4250  0DF5                     l782:	
  4251                           ;main.c: 120:     do { LATBbits.LATB1 = 0; } while(0);
  4252                           
  4253  0DF5  0022               	movlb	2	; select bank2
  4254  0DF6  108D               	bcf	13,1	;volatile
  4255  0DF7                     l3750:
  4256                           
  4257                           ;main.c: 121:     SPI1_ExchangeBlock(data,dataSize);
  4258  0DF7  0021               	movlb	1	; select bank1
  4259  0DF8  0826               	movf	(txSpi@dataSize+1)^(0+128),w
  4260  0DF9  00A1               	movwf	(SPI1_ExchangeBlock@blockSize+1)^(0+128)
  4261  0DFA  0825               	movf	txSpi@dataSize^(0+128),w
  4262  0DFB  00A0               	movwf	SPI1_ExchangeBlock@blockSize^(0+128)
  4263  0DFC  0827               	movf	txSpi@data^(0+128),w
  4264  0DFD  318F  2774  318D   	fcall	_SPI1_ExchangeBlock
  4265  0E00                     l3752:
  4266  0E00  0022               	movlb	2	; select bank2
  4267  0E01  148D               	bsf	13,1	;volatile
  4268  0E02                     l786:
  4269  0E02  0008               	return
  4270  0E03                     __end_of_txSpi:
  4271                           
  4272                           	psect	text4
  4273  0F74                     __ptext4:	
  4274 ;; *************** function _SPI1_ExchangeBlock *****************
  4275 ;; Defined at:
  4276 ;;		line 100 in file "mcc_generated_files/spi1.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  block           1    wreg     PTR void 
  4279 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4280 ;;  blockSize       2    0[BANK1 ] unsigned int 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  block           1    3[BANK1 ] PTR void 
  4283 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4284 ;;  data            1    4[BANK1 ] PTR unsigned char 
  4285 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4295 ;;      Params:         0       0       2       0       0       0
  4296 ;;      Locals:         0       0       2       0       0       0
  4297 ;;      Temps:          0       0       1       0       0       0
  4298 ;;      Totals:         0       0       5       0       0       0
  4299 ;;Total ram usage:        5 bytes
  4300 ;; Hardware stack levels used: 1
  4301 ;; Hardware stack levels required when called: 7
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_txSpi
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309  0F74                     _SPI1_ExchangeBlock:	
  4310                           ;psect for function _SPI1_ExchangeBlock
  4311                           
  4312                           
  4313                           ;incstack = 0
  4314                           ; Regs used in _SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4315                           ;SPI1_ExchangeBlock@block stored from wreg
  4316  0F74  0021               	movlb	1	; select bank1
  4317  0F75  00A3               	movwf	SPI1_ExchangeBlock@block^(0+128)
  4318  0F76                     l3582:
  4319                           
  4320                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  4321  0F76  0823               	movf	SPI1_ExchangeBlock@block^(0+128),w
  4322  0F77  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4323  0F78  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4324  0F79  00A4               	movwf	SPI1_ExchangeBlock@data^(0+128)
  4325                           
  4326                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4327  0F7A  2F94               	goto	l3590
  4328  0F7B                     l3584:
  4329                           
  4330                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  4331  0F7B  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4332  0F7C  0086               	movwf	6
  4333  0F7D  0187               	clrf	7
  4334  0F7E  0801               	movf	1,w
  4335  0F7F  0024               	movlb	4	; select bank4
  4336  0F80  0091               	movwf	17	;volatile
  4337  0F81                     l436:	
  4338                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  4339                           
  4340  0F81  0020               	movlb	0	; select bank0
  4341  0F82  1D91               	btfss	17,3	;volatile
  4342  0F83  2F85               	goto	u2421
  4343  0F84  2F86               	goto	u2420
  4344  0F85                     u2421:
  4345  0F85  2F81               	goto	l436
  4346  0F86                     u2420:
  4347  0F86                     l438:
  4348                           
  4349                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  4350  0F86  1191               	bcf	17,3	;volatile
  4351  0F87                     l3586:
  4352                           
  4353                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  4354  0F87  0024               	movlb	4	; select bank4
  4355  0F88  0811               	movf	17,w	;volatile
  4356  0F89  0021               	movlb	1	; select bank1
  4357  0F8A  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4358  0F8B  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  4359  0F8C  0086               	movwf	6
  4360  0F8D  0187               	clrf	7
  4361  0F8E  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4362  0F8F  0081               	movwf	1
  4363  0F90                     l3588:
  4364  0F90  3001               	movlw	1
  4365  0F91  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  4366  0F92  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  4367  0F93  07A4               	addwf	SPI1_ExchangeBlock@data^(0+128),f
  4368  0F94                     l3590:
  4369                           
  4370                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4371  0F94  3001               	movlw	1
  4372  0F95  02A0               	subwf	SPI1_ExchangeBlock@blockSize^(0+128),f
  4373  0F96  3000               	movlw	0
  4374  0F97  3BA1               	subwfb	(SPI1_ExchangeBlock@blockSize+1)^(0+128),f
  4375  0F98  0A20               	incf	SPI1_ExchangeBlock@blockSize^(0+128),w
  4376  0F99  1D03               	skipz
  4377  0F9A  2F9F               	goto	u2431
  4378  0F9B  0A21               	incf	(SPI1_ExchangeBlock@blockSize+1)^(0+128),w
  4379  0F9C  1D03               	btfss	3,2
  4380  0F9D  2F9F               	goto	u2431
  4381  0F9E  2FA0               	goto	u2430
  4382  0F9F                     u2431:
  4383  0F9F  2F7B               	goto	l3584
  4384  0FA0                     u2430:
  4385  0FA0                     l440:
  4386  0FA0  0008               	return
  4387  0FA1                     __end_of_SPI1_ExchangeBlock:
  4388                           
  4389                           	psect	text5
  4390  0FA1                     __ptext5:	
  4391 ;; *************** function _SYSTEM_Initialize *****************
  4392 ;; Defined at:
  4393 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0, pclath, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4407 ;;      Params:         0       0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0
  4410 ;;      Totals:         0       0       0       0       0       0
  4411 ;;Total ram usage:        0 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 9
  4414 ;; This function calls:
  4415 ;;		_ADC_Initialize
  4416 ;;		_CCP4_Initialize
  4417 ;;		_CMP1_Initialize
  4418 ;;		_CMP2_Initialize
  4419 ;;		_EUSART_Initialize
  4420 ;;		_FVR_Initialize
  4421 ;;		_OSCILLATOR_Initialize
  4422 ;;		_PIN_MANAGER_Initialize
  4423 ;;		_PWM3_Initialize
  4424 ;;		_SPI1_Initialize
  4425 ;;		_TMR0_Initialize
  4426 ;;		_TMR1_Initialize
  4427 ;;		_TMR2_Initialize
  4428 ;;		_TMR4_Initialize
  4429 ;;		_WDT_Initialize
  4430 ;; This function is called by:
  4431 ;;		_main
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435  0FA1                     _SYSTEM_Initialize:	
  4436                           ;psect for function _SYSTEM_Initialize
  4437                           
  4438  0FA1                     l3754:	
  4439                           ;incstack = 0
  4440                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4441                           
  4442                           
  4443                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  4444  0FA1  318D  257B  318F   	fcall	_SPI1_Initialize
  4445                           
  4446                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4447  0FA4  318F  27CF  318F   	fcall	_PIN_MANAGER_Initialize
  4448                           
  4449                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4450  0FA7  318D  253F  318F   	fcall	_OSCILLATOR_Initialize
  4451                           
  4452                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4453  0FAA  318D  2500  318F   	fcall	_WDT_Initialize
  4454                           
  4455                           ;mcc_generated_files/mcc.c: 57:     CMP2_Initialize();
  4456  0FAD  318D  2592  318F   	fcall	_CMP2_Initialize
  4457                           
  4458                           ;mcc_generated_files/mcc.c: 58:     FVR_Initialize();
  4459  0FB0  318C  24FC  318F   	fcall	_FVR_Initialize
  4460                           
  4461                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  4462  0FB3  318E  2638  318F   	fcall	_TMR4_Initialize
  4463                           
  4464                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  4465  0FB6  318D  254E  318F   	fcall	_TMR2_Initialize
  4466                           
  4467                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  4468  0FB9  318E  268F  318F   	fcall	_TMR0_Initialize
  4469                           
  4470                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  4471  0FBC  318D  2586  318F   	fcall	_CMP1_Initialize
  4472                           
  4473                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  4474  0FBF  318D  2546  318F   	fcall	_ADC_Initialize
  4475                           
  4476                           ;mcc_generated_files/mcc.c: 64:     CCP4_Initialize();
  4477  0FC2  318E  2614  318F   	fcall	_CCP4_Initialize
  4478                           
  4479                           ;mcc_generated_files/mcc.c: 65:     PWM3_Initialize();
  4480  0FC5  318D  2568  318F   	fcall	_PWM3_Initialize
  4481                           
  4482                           ;mcc_generated_files/mcc.c: 66:     TMR1_Initialize();
  4483  0FC8  318E  2626  318F   	fcall	_TMR1_Initialize
  4484                           
  4485                           ;mcc_generated_files/mcc.c: 67:     EUSART_Initialize();
  4486  0FCB  318F  2724  318F   	fcall	_EUSART_Initialize
  4487  0FCE                     l255:
  4488  0FCE  0008               	return
  4489  0FCF                     __end_of_SYSTEM_Initialize:
  4490                           
  4491                           	psect	text6
  4492  0D00                     __ptext6:	
  4493 ;; *************** function _WDT_Initialize *****************
  4494 ;; Defined at:
  4495 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4509 ;;      Params:         0       0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0
  4512 ;;      Totals:         0       0       0       0       0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 7
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_SYSTEM_Initialize
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523  0D00                     _WDT_Initialize:	
  4524                           ;psect for function _WDT_Initialize
  4525                           
  4526  0D00                     l3672:	
  4527                           ;incstack = 0
  4528                           ; Regs used in _WDT_Initialize: [wreg]
  4529                           
  4530                           
  4531                           ;mcc_generated_files/mcc.c: 83:     WDTCON = 0x16;
  4532  0D00  3016               	movlw	22
  4533  0D01  0021               	movlb	1	; select bank1
  4534  0D02  0097               	movwf	23	;volatile
  4535  0D03                     l261:
  4536  0D03  0008               	return
  4537  0D04                     __end_of_WDT_Initialize:
  4538                           
  4539                           	psect	text7
  4540  0E38                     __ptext7:	
  4541 ;; *************** function _TMR4_Initialize *****************
  4542 ;; Defined at:
  4543 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, pclath, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4557 ;;      Params:         0       0       0       0       0       0
  4558 ;;      Locals:         0       0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0
  4560 ;;      Totals:         0       0       0       0       0       0
  4561 ;;Total ram usage:        0 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 8
  4564 ;; This function calls:
  4565 ;;		_TMR4_SetInterruptHandler
  4566 ;; This function is called by:
  4567 ;;		_SYSTEM_Initialize
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571  0E38                     _TMR4_Initialize:	
  4572                           ;psect for function _TMR4_Initialize
  4573                           
  4574  0E38                     l3676:	
  4575                           ;incstack = 0
  4576                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4577                           
  4578                           
  4579                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF3;
  4580  0E38  30F3               	movlw	243
  4581  0E39  0028               	movlb	8	; select bank8
  4582  0E3A  0096               	movwf	22	;volatile
  4583  0E3B                     l3678:
  4584                           
  4585                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  4586  0E3B  0195               	clrf	21	;volatile
  4587  0E3C                     l3680:
  4588                           
  4589                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  4590  0E3C  0020               	movlb	0	; select bank0
  4591  0E3D  1093               	bcf	19,1	;volatile
  4592  0E3E                     l3682:
  4593                           
  4594                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  4595  0E3E  0021               	movlb	1	; select bank1
  4596  0E3F  1493               	bsf	19,1	;volatile
  4597  0E40                     l3684:
  4598                           
  4599                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  4600  0E40  3002               	movlw	low _TMR4_DefaultInterruptHandler
  4601  0E41  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4602  0E42  3000               	movlw	high _TMR4_DefaultInterruptHandler
  4603  0E43  00A1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4604  0E44  318D  2533  318E   	fcall	_TMR4_SetInterruptHandler
  4605  0E47                     l3686:
  4606                           
  4607                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x7F;
  4608  0E47  307F               	movlw	127
  4609  0E48  0028               	movlb	8	; select bank8
  4610  0E49  0097               	movwf	23	;volatile
  4611  0E4A                     l662:
  4612  0E4A  0008               	return
  4613  0E4B                     __end_of_TMR4_Initialize:
  4614                           
  4615                           	psect	text8
  4616  0D33                     __ptext8:	
  4617 ;; *************** function _TMR4_SetInterruptHandler *****************
  4618 ;; Defined at:
  4619 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4622 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1    wreg      void 
  4627 ;; Registers used:
  4628 ;;		wreg
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4634 ;;      Params:         0       0       2       0       0       0
  4635 ;;      Locals:         0       0       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0       0
  4637 ;;      Totals:         0       0       2       0       0       0
  4638 ;;Total ram usage:        2 bytes
  4639 ;; Hardware stack levels used: 1
  4640 ;; Hardware stack levels required when called: 7
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_TMR4_Initialize
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648  0D33                     _TMR4_SetInterruptHandler:	
  4649                           ;psect for function _TMR4_SetInterruptHandler
  4650                           
  4651  0D33                     l3596:	
  4652                           ;incstack = 0
  4653                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  4654                           
  4655                           
  4656                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  4657  0D33  0021               	movlb	1	; select bank1
  4658  0D34  0821               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4659  0D35  00B4               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  4660  0D36  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  4661  0D37  00B3               	movwf	_TMR4_InterruptHandler^(0+128)
  4662  0D38                     l690:
  4663  0D38  0008               	return
  4664  0D39                     __end_of_TMR4_SetInterruptHandler:
  4665                           
  4666                           	psect	text9
  4667  0D4E                     __ptext9:	
  4668 ;; *************** function _TMR2_Initialize *****************
  4669 ;; Defined at:
  4670 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;		None
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;		None
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4684 ;;      Params:         0       0       0       0       0       0
  4685 ;;      Locals:         0       0       0       0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0
  4687 ;;      Totals:         0       0       0       0       0       0
  4688 ;;Total ram usage:        0 bytes
  4689 ;; Hardware stack levels used: 1
  4690 ;; Hardware stack levels required when called: 7
  4691 ;; This function calls:
  4692 ;;		Nothing
  4693 ;; This function is called by:
  4694 ;;		_SYSTEM_Initialize
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698  0D4E                     _TMR2_Initialize:	
  4699                           ;psect for function _TMR2_Initialize
  4700                           
  4701  0D4E                     l3688:	
  4702                           ;incstack = 0
  4703                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4704                           
  4705                           
  4706                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4707  0D4E  30FF               	movlw	255
  4708  0D4F  0020               	movlb	0	; select bank0
  4709  0D50  009B               	movwf	27	;volatile
  4710  0D51                     l3690:
  4711                           
  4712                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4713  0D51  019A               	clrf	26	;volatile
  4714  0D52                     l3692:
  4715                           
  4716                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4717  0D52  1091               	bcf	17,1	;volatile
  4718  0D53                     l3694:
  4719                           
  4720                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4721  0D53  3004               	movlw	4
  4722  0D54  009C               	movwf	28	;volatile
  4723  0D55                     l550:
  4724  0D55  0008               	return
  4725  0D56                     __end_of_TMR2_Initialize:
  4726                           
  4727                           	psect	text10
  4728  0E26                     __ptext10:	
  4729 ;; *************** function _TMR1_Initialize *****************
  4730 ;; Defined at:
  4731 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;		None
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4745 ;;      Params:         0       0       0       0       0       0
  4746 ;;      Locals:         0       0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0
  4748 ;;      Totals:         0       0       0       0       0       0
  4749 ;;Total ram usage:        0 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; Hardware stack levels required when called: 7
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_SYSTEM_Initialize
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759  0E26                     _TMR1_Initialize:	
  4760                           ;psect for function _TMR1_Initialize
  4761                           
  4762  0E26                     l3726:	
  4763                           ;incstack = 0
  4764                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  4765                           
  4766                           
  4767                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  4768  0E26  0020               	movlb	0	; select bank0
  4769  0E27  0199               	clrf	25	;volatile
  4770  0E28                     l3728:
  4771                           
  4772                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  4773  0E28  300B               	movlw	11
  4774  0E29  0097               	movwf	23	;volatile
  4775  0E2A                     l3730:
  4776                           
  4777                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  4778  0E2A  30DC               	movlw	220
  4779  0E2B  0096               	movwf	22	;volatile
  4780  0E2C                     l3732:
  4781                           
  4782                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  4783  0E2C  1011               	bcf	17,0	;volatile
  4784  0E2D                     l3734:
  4785                           
  4786                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4787  0E2D  0817               	movf	23,w	;volatile
  4788  0E2E  0021               	movlb	1	; select bank1
  4789  0E2F  00BA               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  4790  0E30  0020               	movlb	0	; select bank0
  4791  0E31  0816               	movf	22,w	;volatile
  4792  0E32  0021               	movlb	1	; select bank1
  4793  0E33  00B9               	movwf	_timer1ReloadVal^(0+128)	;volatile
  4794  0E34                     l3736:
  4795                           
  4796                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  4797  0E34  3031               	movlw	49
  4798  0E35  0020               	movlb	0	; select bank0
  4799  0E36  0098               	movwf	24	;volatile
  4800  0E37                     l511:
  4801  0E37  0008               	return
  4802  0E38                     __end_of_TMR1_Initialize:
  4803                           
  4804                           	psect	text11
  4805  0E8F                     __ptext11:	
  4806 ;; *************** function _TMR0_Initialize *****************
  4807 ;; Defined at:
  4808 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      void 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0, pclath, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4822 ;;      Params:         0       0       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0       0
  4824 ;;      Temps:          0       0       1       0       0       0
  4825 ;;      Totals:         0       0       1       0       0       0
  4826 ;;Total ram usage:        1 bytes
  4827 ;; Hardware stack levels used: 1
  4828 ;; Hardware stack levels required when called: 8
  4829 ;; This function calls:
  4830 ;;		_TMR0_SetInterruptHandler
  4831 ;; This function is called by:
  4832 ;;		_SYSTEM_Initialize
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836  0E8F                     _TMR0_Initialize:	
  4837                           ;psect for function _TMR0_Initialize
  4838                           
  4839  0E8F                     l3696:	
  4840                           ;incstack = 0
  4841                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4842                           
  4843                           
  4844                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  4845  0E8F  0021               	movlb	1	; select bank1
  4846  0E90  0815               	movf	21,w	;volatile
  4847  0E91  39C0               	andlw	192
  4848  0E92  3817               	iorlw	23
  4849  0E93  0095               	movwf	21	;volatile
  4850  0E94                     l3698:
  4851                           
  4852                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  4853  0E94  3016               	movlw	22
  4854  0E95  0020               	movlb	0	; select bank0
  4855  0E96  0095               	movwf	21	;volatile
  4856  0E97                     l3700:
  4857                           
  4858                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  4859  0E97  3016               	movlw	22
  4860  0E98  0021               	movlb	1	; select bank1
  4861  0E99  00A2               	movwf	??_TMR0_Initialize^(0+128)
  4862  0E9A  0822               	movf	??_TMR0_Initialize^(0+128),w
  4863  0E9B  0020               	movlb	0	; select bank0
  4864  0E9C  00E9               	movwf	_timer0ReloadVal	;volatile
  4865  0E9D                     l3702:
  4866                           
  4867                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  4868  0E9D  110B               	bcf	11,2	;volatile
  4869  0E9E                     l3704:
  4870                           
  4871                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  4872  0E9E  168B               	bsf	11,5	;volatile
  4873  0E9F                     l3706:
  4874                           
  4875                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4876  0E9F  30FB               	movlw	low _TMR0_DefaultInterruptHandler
  4877  0EA0  0021               	movlb	1	; select bank1
  4878  0EA1  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4879  0EA2  300C               	movlw	high _TMR0_DefaultInterruptHandler
  4880  0EA3  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4881  0EA4  318D  252D  318E   	fcall	_TMR0_SetInterruptHandler
  4882  0EA7                     l588:
  4883  0EA7  0008               	return
  4884  0EA8                     __end_of_TMR0_Initialize:
  4885                           
  4886                           	psect	text12
  4887  0D2D                     __ptext12:	
  4888 ;; *************** function _TMR0_SetInterruptHandler *****************
  4889 ;; Defined at:
  4890 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4893 ;;		 -> sendInfo(1), TMR0_DefaultInterruptHandler(1), 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4905 ;;      Params:         0       0       2       0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0
  4908 ;;      Totals:         0       0       2       0       0       0
  4909 ;;Total ram usage:        2 bytes
  4910 ;; Hardware stack levels used: 1
  4911 ;; Hardware stack levels required when called: 7
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_TMR0_Initialize
  4916 ;;		_main
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920  0D2D                     _TMR0_SetInterruptHandler:	
  4921                           ;psect for function _TMR0_SetInterruptHandler
  4922                           
  4923  0D2D                     l3592:	
  4924                           ;incstack = 0
  4925                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4926                           
  4927                           
  4928                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  4929  0D2D  0021               	movlb	1	; select bank1
  4930  0D2E  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4931  0D2F  00B8               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  4932  0D30  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  4933  0D31  00B7               	movwf	_TMR0_InterruptHandler^(0+128)
  4934  0D32                     l610:
  4935  0D32  0008               	return
  4936  0D33                     __end_of_TMR0_SetInterruptHandler:
  4937                           
  4938                           	psect	text13
  4939  0D7B                     __ptext13:	
  4940 ;; *************** function _SPI1_Initialize *****************
  4941 ;; Defined at:
  4942 ;;		line 62 in file "mcc_generated_files/spi1.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4956 ;;      Params:         0       0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0
  4959 ;;      Totals:         0       0       0       0       0       0
  4960 ;;Total ram usage:        0 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 7
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_SYSTEM_Initialize
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970  0D7B                     _SPI1_Initialize:	
  4971                           ;psect for function _SPI1_Initialize
  4972                           
  4973  0D7B                     l3656:	
  4974                           ;incstack = 0
  4975                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  4976                           
  4977                           
  4978                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  4979  0D7B  3040               	movlw	64
  4980  0D7C  0024               	movlb	4	; select bank4
  4981  0D7D  0094               	movwf	20	;volatile
  4982  0D7E                     l3658:
  4983                           
  4984                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  4985  0D7E  0195               	clrf	21	;volatile
  4986  0D7F                     l3660:
  4987                           
  4988                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  4989  0D7F  3001               	movlw	1
  4990  0D80  0092               	movwf	18	;volatile
  4991  0D81                     l3662:
  4992                           
  4993                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  4994  0D81  0021               	movlb	1	; select bank1
  4995  0D82  120D               	bcf	13,4	;volatile
  4996  0D83                     l3664:
  4997                           
  4998                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  4999  0D83  0024               	movlb	4	; select bank4
  5000  0D84  1295               	bcf	21,5	;volatile
  5001  0D85                     l418:
  5002  0D85  0008               	return
  5003  0D86                     __end_of_SPI1_Initialize:
  5004                           
  5005                           	psect	text14
  5006  0D68                     __ptext14:	
  5007 ;; *************** function _PWM3_Initialize *****************
  5008 ;; Defined at:
  5009 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5023 ;;      Params:         0       0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0
  5026 ;;      Totals:         0       0       0       0       0       0
  5027 ;;Total ram usage:        0 bytes
  5028 ;; Hardware stack levels used: 1
  5029 ;; Hardware stack levels required when called: 7
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_SYSTEM_Initialize
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037  0D68                     _PWM3_Initialize:	
  5038                           ;psect for function _PWM3_Initialize
  5039                           
  5040  0D68                     l3598:	
  5041                           ;incstack = 0
  5042                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  5043                           
  5044                           
  5045                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  5046  0D68  300C               	movlw	12
  5047  0D69  0026               	movlb	6	; select bank6
  5048  0D6A  0093               	movwf	19	;volatile
  5049  0D6B                     l3600:
  5050                           
  5051                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  5052  0D6B  0191               	clrf	17	;volatile
  5053  0D6C                     l3602:
  5054                           
  5055                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  5056  0D6C  0192               	clrf	18	;volatile
  5057  0D6D                     l3604:
  5058                           
  5059                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  5060  0D6D  30CF               	movlw	-49
  5061  0D6E  0025               	movlb	5	; select bank5
  5062  0D6F  059E               	andwf	30,f	;volatile
  5063  0D70                     l11:
  5064  0D70  0008               	return
  5065  0D71                     __end_of_PWM3_Initialize:
  5066                           
  5067                           	psect	text15
  5068  0FCF                     __ptext15:	
  5069 ;; *************** function _PIN_MANAGER_Initialize *****************
  5070 ;; Defined at:
  5071 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, pclath, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5085 ;;      Params:         0       0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 8
  5092 ;; This function calls:
  5093 ;;		_IOCBF0_SetInterruptHandler
  5094 ;;		_IOCBF3_SetInterruptHandler
  5095 ;; This function is called by:
  5096 ;;		_SYSTEM_Initialize
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100  0FCF                     _PIN_MANAGER_Initialize:	
  5101                           ;psect for function _PIN_MANAGER_Initialize
  5102                           
  5103  0FCF                     l3622:	
  5104                           ;incstack = 0
  5105                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5106                           
  5107                           
  5108                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  5109  0FCF  0022               	movlb	2	; select bank2
  5110  0FD0  018C               	clrf	12	;volatile
  5111                           
  5112                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  5113  0FD1  018D               	clrf	13	;volatile
  5114  0FD2                     l3624:
  5115                           
  5116                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  5117  0FD2  3037               	movlw	55
  5118  0FD3  0021               	movlb	1	; select bank1
  5119  0FD4  008C               	movwf	12	;volatile
  5120  0FD5                     l3626:
  5121                           
  5122                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xED;
  5123  0FD5  30ED               	movlw	237
  5124  0FD6  008D               	movwf	13	;volatile
  5125  0FD7                     l3628:
  5126                           
  5127                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5128  0FD7  30C0               	movlw	192
  5129  0FD8  0023               	movlb	3	; select bank3
  5130  0FD9  008D               	movwf	13	;volatile
  5131  0FDA                     l3630:
  5132                           
  5133                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0F;
  5134  0FDA  300F               	movlw	15
  5135  0FDB  008C               	movwf	12	;volatile
  5136  0FDC                     l3632:
  5137                           
  5138                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x09;
  5139  0FDC  3009               	movlw	9
  5140  0FDD  0024               	movlb	4	; select bank4
  5141  0FDE  008D               	movwf	13	;volatile
  5142  0FDF                     l3634:
  5143                           
  5144                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5145  0FDF  018C               	clrf	12	;volatile
  5146  0FE0                     l3636:
  5147                           
  5148                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 0;
  5149  0FE0  0021               	movlb	1	; select bank1
  5150  0FE1  1395               	bcf	21,7	;volatile
  5151                           
  5152                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  5153  0FE2  30C0               	movlw	192
  5154  0FE3  0022               	movlb	2	; select bank2
  5155  0FE4  009D               	movwf	29	;volatile
  5156                           
  5157                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  5158  0FE5  3001               	movlw	1
  5159  0FE6  009E               	movwf	30	;volatile
  5160  0FE7                     l3638:
  5161                           
  5162                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  5163  0FE7  0027               	movlb	7	; select bank7
  5164  0FE8  1016               	bcf	22,0	;volatile
  5165  0FE9                     l3640:
  5166                           
  5167                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  5168  0FE9  1196               	bcf	22,3	;volatile
  5169  0FEA                     l3642:
  5170                           
  5171                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  5172  0FEA  1415               	bsf	21,0	;volatile
  5173  0FEB                     l3644:
  5174                           
  5175                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  5176  0FEB  1595               	bsf	21,3	;volatile
  5177  0FEC                     l3646:
  5178                           
  5179                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 0;
  5180  0FEC  1014               	bcf	20,0	;volatile
  5181  0FED                     l3648:
  5182                           
  5183                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 0;
  5184  0FED  1194               	bcf	20,3	;volatile
  5185  0FEE                     l3650:
  5186                           
  5187                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  5188  0FEE  30F9               	movlw	low _IOCBF0_DefaultInterruptHandler
  5189  0FEF  0021               	movlb	1	; select bank1
  5190  0FF0  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  5191  0FF1  300C               	movlw	high _IOCBF0_DefaultInterruptHandler
  5192  0FF2  00A1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5193  0FF3  318D  2556  318F   	fcall	_IOCBF0_SetInterruptHandler
  5194  0FF6                     l3652:
  5195                           
  5196                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  5197  0FF6  30FA               	movlw	low _IOCBF3_DefaultInterruptHandler
  5198  0FF7  0021               	movlb	1	; select bank1
  5199  0FF8  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  5200  0FF9  300C               	movlw	high _IOCBF3_DefaultInterruptHandler
  5201  0FFA  00A1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5202  0FFB  318D  255F  318F   	fcall	_IOCBF3_SetInterruptHandler
  5203  0FFE                     l3654:
  5204                           
  5205                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  5206  0FFE  158B               	bsf	11,3	;volatile
  5207  0FFF                     l189:
  5208  0FFF  0008               	return
  5209  1000                     __end_of_PIN_MANAGER_Initialize:
  5210                           
  5211                           	psect	text16
  5212  0D5F                     __ptext16:	
  5213 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  5214 ;; Defined at:
  5215 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5218 ;;		 -> chegadaS2(1), chegadaS1(1), IOCBF3_DefaultInterruptHandler(1), 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;		None
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5230 ;;      Params:         0       0       2       0       0       0
  5231 ;;      Locals:         0       0       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0       0
  5233 ;;      Totals:         0       0       2       0       0       0
  5234 ;;Total ram usage:        2 bytes
  5235 ;; Hardware stack levels used: 1
  5236 ;; Hardware stack levels required when called: 7
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_PIN_MANAGER_Initialize
  5241 ;;		_main
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245  0D5F                     _IOCBF3_SetInterruptHandler:	
  5246                           ;psect for function _IOCBF3_SetInterruptHandler
  5247                           
  5248  0D5F                     l3574:	
  5249                           ;incstack = 0
  5250                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  5251                           
  5252                           
  5253                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  5254  0D5F  0021               	movlb	1	; select bank1
  5255  0D60  0821               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5256  0D61  0020               	movlb	0	; select bank0
  5257  0D62  00E6               	movwf	_IOCBF3_InterruptHandler+1
  5258  0D63  0021               	movlb	1	; select bank1
  5259  0D64  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  5260  0D65  0020               	movlb	0	; select bank0
  5261  0D66  00E5               	movwf	_IOCBF3_InterruptHandler
  5262  0D67                     l211:
  5263  0D67  0008               	return
  5264  0D68                     __end_of_IOCBF3_SetInterruptHandler:
  5265                           
  5266                           	psect	text17
  5267  0D56                     __ptext17:	
  5268 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  5269 ;; Defined at:
  5270 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5273 ;;		 -> IOCBF0_DefaultInterruptHandler(1), 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      void 
  5278 ;; Registers used:
  5279 ;;		wreg
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5285 ;;      Params:         0       0       2       0       0       0
  5286 ;;      Locals:         0       0       0       0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0
  5288 ;;      Totals:         0       0       2       0       0       0
  5289 ;;Total ram usage:        2 bytes
  5290 ;; Hardware stack levels used: 1
  5291 ;; Hardware stack levels required when called: 7
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_PIN_MANAGER_Initialize
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299  0D56                     _IOCBF0_SetInterruptHandler:	
  5300                           ;psect for function _IOCBF0_SetInterruptHandler
  5301                           
  5302  0D56                     l3572:	
  5303                           ;incstack = 0
  5304                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  5305                           
  5306                           
  5307                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  5308  0D56  0021               	movlb	1	; select bank1
  5309  0D57  0821               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5310  0D58  0020               	movlb	0	; select bank0
  5311  0D59  00E8               	movwf	_IOCBF0_InterruptHandler+1
  5312  0D5A  0021               	movlb	1	; select bank1
  5313  0D5B  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  5314  0D5C  0020               	movlb	0	; select bank0
  5315  0D5D  00E7               	movwf	_IOCBF0_InterruptHandler
  5316  0D5E                     l201:
  5317  0D5E  0008               	return
  5318  0D5F                     __end_of_IOCBF0_SetInterruptHandler:
  5319                           
  5320                           	psect	text18
  5321  0D3F                     __ptext18:	
  5322 ;; *************** function _OSCILLATOR_Initialize *****************
  5323 ;; Defined at:
  5324 ;;		line 70 in file "mcc_generated_files/mcc.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5338 ;;      Params:         0       0       0       0       0       0
  5339 ;;      Locals:         0       0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0
  5341 ;;      Totals:         0       0       0       0       0       0
  5342 ;;Total ram usage:        0 bytes
  5343 ;; Hardware stack levels used: 1
  5344 ;; Hardware stack levels required when called: 7
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_SYSTEM_Initialize
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352  0D3F                     _OSCILLATOR_Initialize:	
  5353                           ;psect for function _OSCILLATOR_Initialize
  5354                           
  5355  0D3F                     l3666:	
  5356                           ;incstack = 0
  5357                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5358                           
  5359                           
  5360                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x68;
  5361  0D3F  3068               	movlw	104
  5362  0D40  0021               	movlb	1	; select bank1
  5363  0D41  0099               	movwf	25	;volatile
  5364  0D42                     l3668:
  5365                           
  5366                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  5367  0D42  0198               	clrf	24	;volatile
  5368  0D43                     l3670:
  5369                           
  5370                           ;mcc_generated_files/mcc.c: 77:     BORCON = 0x00;
  5371  0D43  0022               	movlb	2	; select bank2
  5372  0D44  0196               	clrf	22	;volatile
  5373  0D45                     l258:
  5374  0D45  0008               	return
  5375  0D46                     __end_of_OSCILLATOR_Initialize:
  5376                           
  5377                           	psect	text19
  5378  0CFC                     __ptext19:	
  5379 ;; *************** function _FVR_Initialize *****************
  5380 ;; Defined at:
  5381 ;;		line 58 in file "mcc_generated_files/fvr.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;		None
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;		None
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5395 ;;      Params:         0       0       0       0       0       0
  5396 ;;      Locals:         0       0       0       0       0       0
  5397 ;;      Temps:          0       0       0       0       0       0
  5398 ;;      Totals:         0       0       0       0       0       0
  5399 ;;Total ram usage:        0 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 7
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_SYSTEM_Initialize
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409  0CFC                     _FVR_Initialize:	
  5410                           ;psect for function _FVR_Initialize
  5411                           
  5412  0CFC                     l3674:	
  5413                           ;incstack = 0
  5414                           ; Regs used in _FVR_Initialize: [wreg]
  5415                           
  5416                           
  5417                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x89;
  5418  0CFC  3089               	movlw	137
  5419  0CFD  0022               	movlb	2	; select bank2
  5420  0CFE  0097               	movwf	23	;volatile
  5421  0CFF                     l306:
  5422  0CFF  0008               	return
  5423  0D00                     __end_of_FVR_Initialize:
  5424                           
  5425                           	psect	text20
  5426  0F24                     __ptext20:	
  5427 ;; *************** function _EUSART_Initialize *****************
  5428 ;; Defined at:
  5429 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		wreg, status,2, status,0, pclath, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5443 ;;      Params:         0       0       0       0       0       0
  5444 ;;      Locals:         0       0       0       0       0       0
  5445 ;;      Temps:          0       0       0       0       0       0
  5446 ;;      Totals:         0       0       0       0       0       0
  5447 ;;Total ram usage:        0 bytes
  5448 ;; Hardware stack levels used: 1
  5449 ;; Hardware stack levels required when called: 8
  5450 ;; This function calls:
  5451 ;;		_EUSART_SetErrorHandler
  5452 ;;		_EUSART_SetFramingErrorHandler
  5453 ;;		_EUSART_SetOverrunErrorHandler
  5454 ;; This function is called by:
  5455 ;;		_SYSTEM_Initialize
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459  0F24                     _EUSART_Initialize:	
  5460                           ;psect for function _EUSART_Initialize
  5461                           
  5462  0F24                     l3738:	
  5463                           ;incstack = 0
  5464                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5465                           
  5466                           
  5467                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5468  0F24  3008               	movlw	8
  5469  0F25  0023               	movlb	3	; select bank3
  5470  0F26  009F               	movwf	31	;volatile
  5471                           
  5472                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  5473  0F27  3090               	movlw	144
  5474  0F28  009D               	movwf	29	;volatile
  5475                           
  5476                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  5477  0F29  3024               	movlw	36
  5478  0F2A  009E               	movwf	30	;volatile
  5479                           
  5480                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x33;
  5481  0F2B  3033               	movlw	51
  5482  0F2C  009B               	movwf	27	;volatile
  5483  0F2D                     l3740:
  5484                           
  5485                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5486  0F2D  019C               	clrf	28	;volatile
  5487  0F2E                     l3742:
  5488                           
  5489                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5490  0F2E  3000               	movlw	0
  5491  0F2F  0021               	movlb	1	; select bank1
  5492  0F30  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  5493  0F31  3000               	movlw	0
  5494  0F32  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  5495  0F33  318D  2521  318F   	fcall	_EUSART_SetFramingErrorHandler
  5496  0F36                     l3744:
  5497                           
  5498                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5499  0F36  3000               	movlw	0
  5500  0F37  0021               	movlb	1	; select bank1
  5501  0F38  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  5502  0F39  3000               	movlw	0
  5503  0F3A  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  5504  0F3B  318D  2527  318F   	fcall	_EUSART_SetOverrunErrorHandler
  5505  0F3E                     l3746:
  5506                           
  5507                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5508  0F3E  3000               	movlw	0
  5509  0F3F  0021               	movlb	1	; select bank1
  5510  0F40  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  5511  0F41  3000               	movlw	0
  5512  0F42  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  5513  0F43  318D  251B  318F   	fcall	_EUSART_SetErrorHandler
  5514  0F46                     l3748:
  5515                           
  5516                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5517  0F46  0020               	movlb	0	; select bank0
  5518  0F47  01D6               	clrf	_eusartRxLastError	;volatile
  5519  0F48                     l352:
  5520  0F48  0008               	return
  5521  0F49                     __end_of_EUSART_Initialize:
  5522                           
  5523                           	psect	text21
  5524  0D27                     __ptext21:	
  5525 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5526 ;; Defined at:
  5527 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5530 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      void 
  5535 ;; Registers used:
  5536 ;;		wreg
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5542 ;;      Params:         0       0       2       0       0       0
  5543 ;;      Locals:         0       0       0       0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0
  5545 ;;      Totals:         0       0       2       0       0       0
  5546 ;;Total ram usage:        2 bytes
  5547 ;; Hardware stack levels used: 1
  5548 ;; Hardware stack levels required when called: 7
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_EUSART_Initialize
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556  0D27                     _EUSART_SetOverrunErrorHandler:	
  5557                           ;psect for function _EUSART_SetOverrunErrorHandler
  5558                           
  5559  0D27                     l3578:	
  5560                           ;incstack = 0
  5561                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5562                           
  5563                           
  5564                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5565  0D27  0021               	movlb	1	; select bank1
  5566  0D28  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  5567  0D29  00BE               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5568  0D2A  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  5569  0D2B  00BD               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5570  0D2C                     l394:
  5571  0D2C  0008               	return
  5572  0D2D                     __end_of_EUSART_SetOverrunErrorHandler:
  5573                           
  5574                           	psect	text22
  5575  0D21                     __ptext22:	
  5576 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5577 ;; Defined at:
  5578 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5581 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5593 ;;      Params:         0       0       2       0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0
  5596 ;;      Totals:         0       0       2       0       0       0
  5597 ;;Total ram usage:        2 bytes
  5598 ;; Hardware stack levels used: 1
  5599 ;; Hardware stack levels required when called: 7
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_EUSART_Initialize
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607  0D21                     _EUSART_SetFramingErrorHandler:	
  5608                           ;psect for function _EUSART_SetFramingErrorHandler
  5609                           
  5610  0D21                     l3576:	
  5611                           ;incstack = 0
  5612                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5613                           
  5614                           
  5615                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5616  0D21  0021               	movlb	1	; select bank1
  5617  0D22  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  5618  0D23  00C0               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5619  0D24  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  5620  0D25  00BF               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5621  0D26                     l391:
  5622  0D26  0008               	return
  5623  0D27                     __end_of_EUSART_SetFramingErrorHandler:
  5624                           
  5625                           	psect	text23
  5626  0D1B                     __ptext23:	
  5627 ;; *************** function _EUSART_SetErrorHandler *****************
  5628 ;; Defined at:
  5629 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5632 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		wreg
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5644 ;;      Params:         0       0       2       0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0
  5647 ;;      Totals:         0       0       2       0       0       0
  5648 ;;Total ram usage:        2 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; Hardware stack levels required when called: 7
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_EUSART_Initialize
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658  0D1B                     _EUSART_SetErrorHandler:	
  5659                           ;psect for function _EUSART_SetErrorHandler
  5660                           
  5661  0D1B                     l3580:	
  5662                           ;incstack = 0
  5663                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5664                           
  5665                           
  5666                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  5667  0D1B  0021               	movlb	1	; select bank1
  5668  0D1C  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  5669  0D1D  00BC               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5670  0D1E  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  5671  0D1F  00BB               	movwf	_EUSART_ErrorHandler^(0+128)
  5672  0D20                     l397:
  5673  0D20  0008               	return
  5674  0D21                     __end_of_EUSART_SetErrorHandler:
  5675                           
  5676                           	psect	text24
  5677  0D92                     __ptext24:	
  5678 ;; *************** function _CMP2_Initialize *****************
  5679 ;; Defined at:
  5680 ;;		line 59 in file "mcc_generated_files/cmp2.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5694 ;;      Params:         0       0       0       0       0       0
  5695 ;;      Locals:         0       0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0
  5697 ;;      Totals:         0       0       0       0       0       0
  5698 ;;Total ram usage:        0 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; Hardware stack levels required when called: 7
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_SYSTEM_Initialize
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708  0D92                     _CMP2_Initialize:	
  5709                           ;psect for function _CMP2_Initialize
  5710                           
  5711  0D92                     l3606:	
  5712                           ;incstack = 0
  5713                           ; Regs used in _CMP2_Initialize: [wreg]
  5714                           
  5715                           
  5716                           ;mcc_generated_files/cmp2.c: 66:     PIE2bits.C2IE = 0;
  5717  0D92  0021               	movlb	1	; select bank1
  5718  0D93  1312               	bcf	18,6	;volatile
  5719  0D94                     l3608:
  5720                           
  5721                           ;mcc_generated_files/cmp2.c: 69:     CM2CON0 = 0x84;
  5722  0D94  3084               	movlw	132
  5723  0D95  0022               	movlb	2	; select bank2
  5724  0D96  0093               	movwf	19	;volatile
  5725                           
  5726                           ;mcc_generated_files/cmp2.c: 72:     CM2CON1 = 0x61;
  5727  0D97  3061               	movlw	97
  5728  0D98  0094               	movwf	20	;volatile
  5729  0D99                     l3610:
  5730                           
  5731                           ;mcc_generated_files/cmp2.c: 75:     PIR2bits.C2IF = 0;
  5732  0D99  0020               	movlb	0	; select bank0
  5733  0D9A  1312               	bcf	18,6	;volatile
  5734  0D9B                     l3612:
  5735                           
  5736                           ;mcc_generated_files/cmp2.c: 78:     PIE2bits.C2IE = 1;
  5737  0D9B  0021               	movlb	1	; select bank1
  5738  0D9C  1712               	bsf	18,6	;volatile
  5739  0D9D                     l71:
  5740  0D9D  0008               	return
  5741  0D9E                     __end_of_CMP2_Initialize:
  5742                           
  5743                           	psect	text25
  5744  0D86                     __ptext25:	
  5745 ;; *************** function _CMP1_Initialize *****************
  5746 ;; Defined at:
  5747 ;;		line 59 in file "mcc_generated_files/cmp1.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5761 ;;      Params:         0       0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0
  5764 ;;      Totals:         0       0       0       0       0       0
  5765 ;;Total ram usage:        0 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; Hardware stack levels required when called: 7
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_SYSTEM_Initialize
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775  0D86                     _CMP1_Initialize:	
  5776                           ;psect for function _CMP1_Initialize
  5777                           
  5778  0D86                     l3614:	
  5779                           ;incstack = 0
  5780                           ; Regs used in _CMP1_Initialize: [wreg]
  5781                           
  5782                           
  5783                           ;mcc_generated_files/cmp1.c: 66:     PIE2bits.C1IE = 0;
  5784  0D86  0021               	movlb	1	; select bank1
  5785  0D87  1292               	bcf	18,5	;volatile
  5786  0D88                     l3616:
  5787                           
  5788                           ;mcc_generated_files/cmp1.c: 69:     CM1CON0 = 0x84;
  5789  0D88  3084               	movlw	132
  5790  0D89  0022               	movlb	2	; select bank2
  5791  0D8A  0091               	movwf	17	;volatile
  5792                           
  5793                           ;mcc_generated_files/cmp1.c: 72:     CM1CON1 = 0x60;
  5794  0D8B  3060               	movlw	96
  5795  0D8C  0092               	movwf	18	;volatile
  5796  0D8D                     l3618:
  5797                           
  5798                           ;mcc_generated_files/cmp1.c: 75:     PIR2bits.C1IF = 0;
  5799  0D8D  0020               	movlb	0	; select bank0
  5800  0D8E  1292               	bcf	18,5	;volatile
  5801  0D8F                     l3620:
  5802                           
  5803                           ;mcc_generated_files/cmp1.c: 78:     PIE2bits.C1IE = 1;
  5804  0D8F  0021               	movlb	1	; select bank1
  5805  0D90  1692               	bsf	18,5	;volatile
  5806  0D91                     l134:
  5807  0D91  0008               	return
  5808  0D92                     __end_of_CMP1_Initialize:
  5809                           
  5810                           	psect	text26
  5811  0E14                     __ptext26:	
  5812 ;; *************** function _CCP4_Initialize *****************
  5813 ;; Defined at:
  5814 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0, pclath, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5828 ;;      Params:         0       0       0       0       0       0
  5829 ;;      Locals:         0       0       0       0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0
  5831 ;;      Totals:         0       0       0       0       0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used: 1
  5834 ;; Hardware stack levels required when called: 8
  5835 ;; This function calls:
  5836 ;;		_CCP4_SetCallBack
  5837 ;; This function is called by:
  5838 ;;		_SYSTEM_Initialize
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842  0E14                     _CCP4_Initialize:	
  5843                           ;psect for function _CCP4_Initialize
  5844                           
  5845  0E14                     l3714:	
  5846                           ;incstack = 0
  5847                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5848                           
  5849                           
  5850                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  5851  0E14  3004               	movlw	4
  5852  0E15  0026               	movlb	6	; select bank6
  5853  0E16  009A               	movwf	26	;volatile
  5854  0E17                     l3716:
  5855                           
  5856                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  5857  0E17  0198               	clrf	24	;volatile
  5858  0E18                     l3718:
  5859                           
  5860                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  5861  0E18  0199               	clrf	25	;volatile
  5862  0E19                     l3720:
  5863                           
  5864                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  5865  0E19  30F8               	movlw	low _CCP4_DefaultCallBack
  5866  0E1A  0021               	movlb	1	; select bank1
  5867  0E1B  00A0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  5868  0E1C  300C               	movlw	high _CCP4_DefaultCallBack
  5869  0E1D  00A1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  5870  0E1E  318D  2515  318E   	fcall	_CCP4_SetCallBack
  5871  0E21                     l3722:
  5872                           
  5873                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  5874  0E21  0020               	movlb	0	; select bank0
  5875  0E22  1293               	bcf	19,5	;volatile
  5876  0E23                     l3724:
  5877                           
  5878                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  5879  0E23  0021               	movlb	1	; select bank1
  5880  0E24  1693               	bsf	19,5	;volatile
  5881  0E25                     l633:
  5882  0E25  0008               	return
  5883  0E26                     __end_of_CCP4_Initialize:
  5884                           
  5885                           	psect	text27
  5886  0D15                     __ptext27:	
  5887 ;; *************** function _CCP4_SetCallBack *****************
  5888 ;; Defined at:
  5889 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  5892 ;;		 -> CCP4_DefaultCallBack(1), 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      void 
  5897 ;; Registers used:
  5898 ;;		wreg
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5904 ;;      Params:         0       0       2       0       0       0
  5905 ;;      Locals:         0       0       0       0       0       0
  5906 ;;      Temps:          0       0       0       0       0       0
  5907 ;;      Totals:         0       0       2       0       0       0
  5908 ;;Total ram usage:        2 bytes
  5909 ;; Hardware stack levels used: 1
  5910 ;; Hardware stack levels required when called: 7
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_CCP4_Initialize
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918  0D15                     _CCP4_SetCallBack:	
  5919                           ;psect for function _CCP4_SetCallBack
  5920                           
  5921  0D15                     l3594:	
  5922                           ;incstack = 0
  5923                           ; Regs used in _CCP4_SetCallBack: [wreg]
  5924                           
  5925                           
  5926                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  5927  0D15  0021               	movlb	1	; select bank1
  5928  0D16  0821               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  5929  0D17  00B6               	movwf	(_CCP4_CallBack+1)^(0+128)
  5930  0D18  0820               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  5931  0D19  00B5               	movwf	_CCP4_CallBack^(0+128)
  5932  0D1A                     l639:
  5933  0D1A  0008               	return
  5934  0D1B                     __end_of_CCP4_SetCallBack:
  5935                           
  5936                           	psect	text28
  5937  0D46                     __ptext28:	
  5938 ;; *************** function _ADC_Initialize *****************
  5939 ;; Defined at:
  5940 ;;		line 67 in file "mcc_generated_files/adc.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;		None
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		wreg, status,2
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5954 ;;      Params:         0       0       0       0       0       0
  5955 ;;      Locals:         0       0       0       0       0       0
  5956 ;;      Temps:          0       0       0       0       0       0
  5957 ;;      Totals:         0       0       0       0       0       0
  5958 ;;Total ram usage:        0 bytes
  5959 ;; Hardware stack levels used: 1
  5960 ;; Hardware stack levels required when called: 7
  5961 ;; This function calls:
  5962 ;;		Nothing
  5963 ;; This function is called by:
  5964 ;;		_SYSTEM_Initialize
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968  0D46                     _ADC_Initialize:	
  5969                           ;psect for function _ADC_Initialize
  5970                           
  5971  0D46                     l3708:	
  5972                           ;incstack = 0
  5973                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5974                           
  5975                           
  5976                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC3;
  5977  0D46  30C3               	movlw	195
  5978  0D47  0021               	movlb	1	; select bank1
  5979  0D48  009E               	movwf	30	;volatile
  5980  0D49                     l3710:
  5981                           
  5982                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  5983  0D49  019B               	clrf	27	;volatile
  5984  0D4A                     l3712:
  5985                           
  5986                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  5987  0D4A  019C               	clrf	28	;volatile
  5988                           
  5989                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  5990  0D4B  3001               	movlw	1
  5991  0D4C  009D               	movwf	29	;volatile
  5992  0D4D                     l278:
  5993  0D4D  0008               	return
  5994  0D4E                     __end_of_ADC_Initialize:
  5995                           
  5996                           	psect	text29
  5997  070A                     __ptext29:	
  5998 ;; *************** function _SPI1_Open *****************
  5999 ;; Defined at:
  6000 ;;		line 72 in file "mcc_generated_files/spi1.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  spi1UniqueCo    1    wreg     enum E355
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  spi1UniqueCo    1    3[BANK1 ] enum E355
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      _Bool 
  6007 ;; Registers used:
  6008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6014 ;;      Params:         0       0       0       0       0       0
  6015 ;;      Locals:         0       0       1       0       0       0
  6016 ;;      Temps:          0       0       3       0       0       0
  6017 ;;      Totals:         0       0       4       0       0       0
  6018 ;;Total ram usage:        4 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; Hardware stack levels required when called: 7
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_main
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028  070A                     _SPI1_Open:	
  6029                           ;psect for function _SPI1_Open
  6030                           
  6031                           
  6032                           ;incstack = 0
  6033                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
  6034                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  6035  070A  0021               	movlb	1	; select bank1
  6036  070B  00A3               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+128)
  6037  070C                     l3772:
  6038                           
  6039                           ;mcc_generated_files/spi1.c: 72: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 73: {;mcc_generated_files/spi1.c: 74:     if(!SSP1CON1bits.SS
      +                          PEN)
  6040  070C  0024               	movlb	4	; select bank4
  6041  070D  1A95               	btfsc	21,5	;volatile
  6042  070E  2F10               	goto	u2461
  6043  070F  2F11               	goto	u2460
  6044  0710                     u2461:
  6045  0710  2F5D               	goto	l422
  6046  0711                     u2460:
  6047  0711                     l3774:
  6048                           
  6049                           ;mcc_generated_files/spi1.c: 75:     {;mcc_generated_files/spi1.c: 76:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  6050  0711  0021               	movlb	1	; select bank1
  6051  0712  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6052  0713  00A0               	movwf	??_SPI1_Open^(0+128)
  6053  0714  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6054  0715  35A0               	lslf	??_SPI1_Open^(0+128),f
  6055  0716  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6056  0717  35A0               	lslf	??_SPI1_Open^(0+128),f
  6057  0718  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6058  0719  300D               	movlw	low ((_spi1_configuration+1)| (0+32768))
  6059  071A  0720               	addwf	??_SPI1_Open^(0+128),w
  6060  071B  0084               	movwf	4
  6061  071C  3088               	movlw	high ((_spi1_configuration+1)| (0+32768))
  6062  071D  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6063  071E  0085               	movwf	5
  6064  071F  0800               	movf	0,w	;code access
  6065  0720  0024               	movlb	4	; select bank4
  6066  0721  0094               	movwf	20	;volatile
  6067                           
  6068                           ;mcc_generated_files/spi1.c: 77:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  6069  0722  0021               	movlb	1	; select bank1
  6070  0723  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6071  0724  00A0               	movwf	??_SPI1_Open^(0+128)
  6072  0725  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6073  0726  35A0               	lslf	??_SPI1_Open^(0+128),f
  6074  0727  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6075  0728  35A0               	lslf	??_SPI1_Open^(0+128),f
  6076  0729  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6077  072A  300C               	movlw	low (_spi1_configuration| (0+32768))
  6078  072B  0720               	addwf	??_SPI1_Open^(0+128),w
  6079  072C  0084               	movwf	4
  6080  072D  3088               	movlw	high (_spi1_configuration| (0+32768))
  6081  072E  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6082  072F  0085               	movwf	5
  6083  0730  0800               	movf	0,w	;code access
  6084  0731  0024               	movlb	4	; select bank4
  6085  0732  0095               	movwf	21	;volatile
  6086  0733                     l3776:
  6087                           
  6088                           ;mcc_generated_files/spi1.c: 78:         SSP1CON2 = 0x00;
  6089  0733  0196               	clrf	22	;volatile
  6090  0734                     l3778:
  6091                           
  6092                           ;mcc_generated_files/spi1.c: 79:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  6093  0734  0021               	movlb	1	; select bank1
  6094  0735  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6095  0736  00A0               	movwf	??_SPI1_Open^(0+128)
  6096  0737  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6097  0738  35A0               	lslf	??_SPI1_Open^(0+128),f
  6098  0739  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6099  073A  35A0               	lslf	??_SPI1_Open^(0+128),f
  6100  073B  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6101  073C  300E               	movlw	low ((_spi1_configuration+2)| (0+32768))
  6102  073D  0720               	addwf	??_SPI1_Open^(0+128),w
  6103  073E  0084               	movwf	4
  6104  073F  3088               	movlw	high ((_spi1_configuration+2)| (0+32768))
  6105  0740  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6106  0741  0085               	movwf	5
  6107  0742  0800               	movf	0,w	;code access
  6108  0743  0024               	movlb	4	; select bank4
  6109  0744  0092               	movwf	18	;volatile
  6110  0745                     l3780:
  6111                           
  6112                           ;mcc_generated_files/spi1.c: 80:         TRISBbits.TRISB4 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  6113  0745  0021               	movlb	1	; select bank1
  6114  0746  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  6115  0747  00A0               	movwf	??_SPI1_Open^(0+128)
  6116  0748  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  6117  0749  35A0               	lslf	??_SPI1_Open^(0+128),f
  6118  074A  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6119  074B  35A0               	lslf	??_SPI1_Open^(0+128),f
  6120  074C  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  6121  074D  300F               	movlw	low ((_spi1_configuration+3)| (0+32768))
  6122  074E  0720               	addwf	??_SPI1_Open^(0+128),w
  6123  074F  0084               	movwf	4
  6124  0750  3088               	movlw	high ((_spi1_configuration+3)| (0+32768))
  6125  0751  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  6126  0752  0085               	movwf	5
  6127  0753  0800               	movf	0,w	;code access
  6128  0754  00A2               	movwf	(??_SPI1_Open+2)^(0+128)
  6129  0755  0EA2               	swapf	(??_SPI1_Open+2)^(0+128),f
  6130  0756  080D               	movf	13,w	;volatile
  6131  0757  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6132  0758  39EF               	andlw	-17
  6133  0759  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  6134  075A  008D               	movwf	13	;volatile
  6135  075B                     l3782:
  6136                           
  6137                           ;mcc_generated_files/spi1.c: 81:         SSP1CON1bits.SSPEN = 1;
  6138  075B  0024               	movlb	4	; select bank4
  6139  075C  1695               	bsf	21,5	;volatile
  6140  075D                     l422:
  6141  075D  0008               	return
  6142  075E                     __end_of_SPI1_Open:
  6143                           
  6144                           	psect	text30
  6145  0D04                     __ptext30:	
  6146 ;; *************** function _EUSART_is_rx_ready *****************
  6147 ;; Defined at:
  6148 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;		None
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1    wreg      _Bool 
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6162 ;;      Params:         0       0       0       0       0       0
  6163 ;;      Locals:         0       0       0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0       0
  6165 ;;      Totals:         0       0       0       0       0       0
  6166 ;;Total ram usage:        0 bytes
  6167 ;; Hardware stack levels used: 1
  6168 ;; Hardware stack levels required when called: 7
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_main
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176  0D04                     _EUSART_is_rx_ready:	
  6177                           ;psect for function _EUSART_is_rx_ready
  6178                           
  6179  0D04                     l3756:	
  6180                           ;incstack = 0
  6181                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6182                           
  6183                           
  6184                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  6185  0D04  0020               	movlb	0	; select bank0
  6186  0D05  0E11               	swapf	17,w	;volatile
  6187  0D06  0C89               	rrf	9,f
  6188  0D07  3901               	andlw	1
  6189  0D08                     l360:
  6190  0D08  0008               	return
  6191  0D09                     __end_of_EUSART_is_rx_ready:
  6192                           
  6193                           	psect	text31
  6194  0DE4                     __ptext31:	
  6195 ;; *************** function _EUSART_Read *****************
  6196 ;; Defined at:
  6197 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;		None
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  1    wreg      unsigned char 
  6204 ;; Registers used:
  6205 ;;		wreg, status,2
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6211 ;;      Params:         0       0       0       0       0       0
  6212 ;;      Locals:         0       0       0       0       0       0
  6213 ;;      Temps:          0       0       0       0       0       0
  6214 ;;      Totals:         0       0       0       0       0       0
  6215 ;;Total ram usage:        0 bytes
  6216 ;; Hardware stack levels used: 1
  6217 ;; Hardware stack levels required when called: 7
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		_main
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225  0DE4                     _EUSART_Read:	
  6226                           ;psect for function _EUSART_Read
  6227                           
  6228  0DE4                     l3760:	
  6229                           ;incstack = 0
  6230                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6231                           
  6232  0DE4                     l369:	
  6233                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6234                           
  6235                           
  6236                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  6237  0DE4  0020               	movlb	0	; select bank0
  6238  0DE5  1E91               	btfss	17,5	;volatile
  6239  0DE6  2DE8               	goto	u2441
  6240  0DE7  2DE9               	goto	u2440
  6241  0DE8                     u2441:
  6242  0DE8  2DE4               	goto	l369
  6243  0DE9                     u2440:
  6244  0DE9                     l3762:
  6245                           
  6246                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6247  0DE9  01D6               	clrf	_eusartRxLastError	;volatile
  6248  0DEA                     l3764:
  6249                           
  6250                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  6251  0DEA  0023               	movlb	3	; select bank3
  6252  0DEB  1C9D               	btfss	29,1	;volatile
  6253  0DEC  2DEE               	goto	u2451
  6254  0DED  2DEF               	goto	u2450
  6255  0DEE                     u2451:
  6256  0DEE  2DF1               	goto	l3768
  6257  0DEF                     u2450:
  6258  0DEF                     l3766:
  6259                           
  6260                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  6261  0DEF  121D               	bcf	29,4	;volatile
  6262                           
  6263                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  6264  0DF0  161D               	bsf	29,4	;volatile
  6265  0DF1                     l3768:
  6266                           
  6267                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  6268  0DF1  0819               	movf	25,w	;volatile
  6269  0DF2                     l373:
  6270  0DF2  0008               	return
  6271  0DF3                     __end_of_EUSART_Read:
  6272                           
  6273                           	psect	intentry
  6274  0004                     __pintentry:	
  6275 ;; *************** function _INTERRUPT_InterruptManager *****************
  6276 ;; Defined at:
  6277 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;		None
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6291 ;;      Params:         0       0       0       0       0       0
  6292 ;;      Locals:         0       0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0
  6294 ;;      Totals:         0       0       0       0       0       0
  6295 ;;Total ram usage:        0 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 6
  6298 ;; This function calls:
  6299 ;;		_CCP4_CaptureISR
  6300 ;;		_CMP1_ISR
  6301 ;;		_CMP2_ISR
  6302 ;;		_PIN_MANAGER_IOC
  6303 ;;		_TMR0_ISR
  6304 ;;		_TMR4_ISR
  6305 ;; This function is called by:
  6306 ;;		Interrupt level 1
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310  0004                     _INTERRUPT_InterruptManager:
  6311                           
  6312                           ;incstack = 0
  6313  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6314                           
  6315                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6316  0005  3180               	pagesel	$
  6317  0006                     i1l3340:
  6318                           
  6319                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  6320  0006  1D8B               	btfss	11,3	;volatile
  6321  0007  2809               	goto	u197_21
  6322  0008  280A               	goto	u197_20
  6323  0009                     u197_21:
  6324  0009  2811               	goto	i1l3346
  6325  000A                     u197_20:
  6326  000A                     i1l3342:
  6327  000A  1C0B               	btfss	11,0	;volatile
  6328  000B  280D               	goto	u198_21
  6329  000C  280E               	goto	u198_20
  6330  000D                     u198_21:
  6331  000D  2811               	goto	i1l3346
  6332  000E                     u198_20:
  6333  000E                     i1l3344:
  6334                           
  6335                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6336  000E  318E  2603  3180   	fcall	_PIN_MANAGER_IOC
  6337  0011                     i1l3346:
  6338                           
  6339                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6340  0011  1E8B               	btfss	11,5	;volatile
  6341  0012  2814               	goto	u199_21
  6342  0013  2815               	goto	u199_20
  6343  0014                     u199_21:
  6344  0014  281C               	goto	i1l3352
  6345  0015                     u199_20:
  6346  0015                     i1l3348:
  6347  0015  1D0B               	btfss	11,2	;volatile
  6348  0016  2818               	goto	u200_21
  6349  0017  2819               	goto	u200_20
  6350  0018                     u200_21:
  6351  0018  281C               	goto	i1l3352
  6352  0019                     u200_20:
  6353  0019                     i1l3350:
  6354                           
  6355                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  6356  0019  318E  2677  3180   	fcall	_TMR0_ISR
  6357  001C                     i1l3352:
  6358                           
  6359                           ;mcc_generated_files/interrupt_manager.c: 63:     if(INTCONbits.PEIE == 1)
  6360  001C  1F0B               	btfss	11,6	;volatile
  6361  001D  281F               	goto	u201_21
  6362  001E  2820               	goto	u201_20
  6363  001F                     u201_21:
  6364  001F  2854               	goto	i1l492
  6365  0020                     u201_20:
  6366  0020                     i1l3354:
  6367                           
  6368                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE2bits.C2IE == 1 && PIR2bits.C2IF == 1)
  6369  0020  0021               	movlb	1	; select bank1
  6370  0021  1F12               	btfss	18,6	;volatile
  6371  0022  2824               	goto	u202_21
  6372  0023  2825               	goto	u202_20
  6373  0024                     u202_21:
  6374  0024  282D               	goto	i1l3360
  6375  0025                     u202_20:
  6376  0025                     i1l3356:
  6377  0025  0020               	movlb	0	; select bank0
  6378  0026  1F12               	btfss	18,6	;volatile
  6379  0027  2829               	goto	u203_21
  6380  0028  282A               	goto	u203_20
  6381  0029                     u203_21:
  6382  0029  282D               	goto	i1l3360
  6383  002A                     u203_20:
  6384  002A                     i1l3358:
  6385                           
  6386                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             CMP2_ISR();
  6387  002A  318D  250F  3180   	fcall	_CMP2_ISR
  6388  002D                     i1l3360:
  6389                           
  6390                           ;mcc_generated_files/interrupt_manager.c: 69:         if(PIE2bits.C1IE == 1 && PIR2bits.
      +                          C1IF == 1)
  6391  002D  0021               	movlb	1	; select bank1
  6392  002E  1E92               	btfss	18,5	;volatile
  6393  002F  2831               	goto	u204_21
  6394  0030  2832               	goto	u204_20
  6395  0031                     u204_21:
  6396  0031  283A               	goto	i1l3366
  6397  0032                     u204_20:
  6398  0032                     i1l3362:
  6399  0032  0020               	movlb	0	; select bank0
  6400  0033  1E92               	btfss	18,5	;volatile
  6401  0034  2836               	goto	u205_21
  6402  0035  2837               	goto	u205_20
  6403  0036                     u205_21:
  6404  0036  283A               	goto	i1l3366
  6405  0037                     u205_20:
  6406  0037                     i1l3364:
  6407                           
  6408                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP1_ISR();
  6409  0037  318D  2509  3180   	fcall	_CMP1_ISR
  6410  003A                     i1l3366:
  6411                           
  6412                           ;mcc_generated_files/interrupt_manager.c: 73:         if(PIE3bits.CCP4IE == 1 && PIR3bit
      +                          s.CCP4IF == 1)
  6413  003A  0021               	movlb	1	; select bank1
  6414  003B  1E93               	btfss	19,5	;volatile
  6415  003C  283E               	goto	u206_21
  6416  003D  283F               	goto	u206_20
  6417  003E                     u206_21:
  6418  003E  2847               	goto	i1l3372
  6419  003F                     u206_20:
  6420  003F                     i1l3368:
  6421  003F  0020               	movlb	0	; select bank0
  6422  0040  1E93               	btfss	19,5	;volatile
  6423  0041  2843               	goto	u207_21
  6424  0042  2844               	goto	u207_20
  6425  0043                     u207_21:
  6426  0043  2847               	goto	i1l3372
  6427  0044                     u207_20:
  6428  0044                     i1l3370:
  6429                           
  6430                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CCP4_CaptureISR();
  6431  0044  318E  264B  3180   	fcall	_CCP4_CaptureISR
  6432  0047                     i1l3372:
  6433                           
  6434                           ;mcc_generated_files/interrupt_manager.c: 77:         if(PIE3bits.TMR4IE == 1 && PIR3bit
      +                          s.TMR4IF == 1)
  6435  0047  0021               	movlb	1	; select bank1
  6436  0048  1C93               	btfss	19,1	;volatile
  6437  0049  284B               	goto	u208_21
  6438  004A  284C               	goto	u208_20
  6439  004B                     u208_21:
  6440  004B  2854               	goto	i1l492
  6441  004C                     u208_20:
  6442  004C                     i1l3374:
  6443  004C  0020               	movlb	0	; select bank0
  6444  004D  1C93               	btfss	19,1	;volatile
  6445  004E  2850               	goto	u209_21
  6446  004F  2851               	goto	u209_20
  6447  0050                     u209_21:
  6448  0050  2854               	goto	i1l492
  6449  0051                     u209_20:
  6450  0051                     i1l3376:
  6451                           
  6452                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR4_ISR();
  6453  0051  318E  2661  3180   	fcall	_TMR4_ISR
  6454  0054                     i1l492:
  6455  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6456  0055  0009               	retfie
  6457  0056                     __end_of_INTERRUPT_InterruptManager:
  6458                           
  6459                           	psect	text33
  6460  0E61                     __ptext33:	
  6461 ;; *************** function _TMR4_ISR *****************
  6462 ;; Defined at:
  6463 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;		None
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      void 
  6470 ;; Registers used:
  6471 ;;		wreg, status,2, status,0, pclath, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6477 ;;      Params:         0       0       0       0       0       0
  6478 ;;      Locals:         0       0       0       0       0       0
  6479 ;;      Temps:          0       0       0       0       0       0
  6480 ;;      Totals:         0       0       0       0       0       0
  6481 ;;Total ram usage:        0 bytes
  6482 ;; Hardware stack levels used: 1
  6483 ;; Hardware stack levels required when called: 2
  6484 ;; This function calls:
  6485 ;;		_TMR4_CallBack
  6486 ;; This function is called by:
  6487 ;;		_INTERRUPT_InterruptManager
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491  0E61                     _TMR4_ISR:	
  6492                           ;psect for function _TMR4_ISR
  6493                           
  6494  0E61                     i1l3266:	
  6495                           ;incstack = 0
  6496                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
  6497                           
  6498                           
  6499                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  6500  0E61  0020               	movlb	0	; select bank0
  6501  0E62  1093               	bcf	19,1	;volatile
  6502  0E63                     i1l3268:
  6503                           
  6504                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 2)
  6505  0E63  3001               	movlw	1
  6506  0E64  07CA               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  6507  0E65  3000               	movlw	0
  6508  0E66  3DCB               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  6509  0E67  3000               	movlw	0
  6510  0E68  024B               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  6511  0E69  3002               	movlw	2
  6512  0E6A  1903               	skipnz
  6513  0E6B  024A               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  6514  0E6C  1C03               	skipc
  6515  0E6D  2E6F               	goto	u190_21
  6516  0E6E  2E70               	goto	u190_20
  6517  0E6F                     u190_21:
  6518  0E6F  2E76               	goto	i1l683
  6519  0E70                     u190_20:
  6520  0E70                     i1l3270:
  6521                           
  6522                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  6523  0E70  318D  25AB  318E   	fcall	_TMR4_CallBack
  6524  0E73                     i1l3272:
  6525                           
  6526                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  6527  0E73  0020               	movlb	0	; select bank0
  6528  0E74  01CA               	clrf	TMR4_ISR@CountCallBack	;volatile
  6529  0E75  01CB               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  6530  0E76                     i1l683:
  6531  0E76  0008               	return
  6532  0E77                     __end_of_TMR4_ISR:
  6533                           
  6534                           	psect	text34
  6535  0DAB                     __ptext34:	
  6536 ;; *************** function _TMR4_CallBack *****************
  6537 ;; Defined at:
  6538 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0, pclath, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6552 ;;      Params:         0       0       0       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0
  6555 ;;      Totals:         0       0       0       0       0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 1
  6559 ;; This function calls:
  6560 ;;		Absolute function
  6561 ;;		_TMR4_DefaultInterruptHandler
  6562 ;; This function is called by:
  6563 ;;		_TMR4_ISR
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567  0DAB                     _TMR4_CallBack:	
  6568                           ;psect for function _TMR4_CallBack
  6569                           
  6570  0DAB                     i1l3196:	
  6571                           ;incstack = 0
  6572                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6573                           
  6574                           
  6575                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  6576  0DAB  0021               	movlb	1	; select bank1
  6577  0DAC  0833               	movf	_TMR4_InterruptHandler^(0+128),w
  6578  0DAD  0434               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  6579  0DAE  1903               	btfsc	3,2
  6580  0DAF  2DB1               	goto	u183_21
  6581  0DB0  2DB2               	goto	u183_20
  6582  0DB1                     u183_21:
  6583  0DB1  2DB7               	goto	i1l687
  6584  0DB2                     u183_20:
  6585  0DB2                     i1l3198:
  6586                           
  6587                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  6588  0DB2  0834               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  6589  0DB3  008A               	movwf	10
  6590  0DB4  0833               	movf	_TMR4_InterruptHandler^(0+128),w
  6591  0DB5  000A               	callw
  6592  0DB6  318D               	pagesel	$
  6593  0DB7                     i1l687:
  6594  0DB7  0008               	return
  6595  0DB8                     __end_of_TMR4_CallBack:
  6596                           
  6597                           	psect	text35
  6598  0002                     __ptext35:	
  6599 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  6600 ;; Defined at:
  6601 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      void 
  6608 ;; Registers used:
  6609 ;;		None
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6615 ;;      Params:         0       0       0       0       0       0
  6616 ;;      Locals:         0       0       0       0       0       0
  6617 ;;      Temps:          0       0       0       0       0       0
  6618 ;;      Totals:         0       0       0       0       0       0
  6619 ;;Total ram usage:        0 bytes
  6620 ;; Hardware stack levels used: 1
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_TMR4_Initialize
  6625 ;;		_TMR4_CallBack
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629  0002                     _TMR4_DefaultInterruptHandler:	
  6630                           ;psect for function _TMR4_DefaultInterruptHandler
  6631                           
  6632  0002                     i1l693:	
  6633                           ;incstack = 0
  6634                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  6635                           
  6636  0002  0008               	return
  6637  0003                     __end_of_TMR4_DefaultInterruptHandler:
  6638                           
  6639                           	psect	text36
  6640  0E77                     __ptext36:	
  6641 ;; *************** function _TMR0_ISR *****************
  6642 ;; Defined at:
  6643 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;		None
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6657 ;;      Params:         0       0       0       0       0       0
  6658 ;;      Locals:         0       0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0
  6660 ;;      Totals:         0       0       0       0       0       0
  6661 ;;Total ram usage:        0 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; Hardware stack levels required when called: 4
  6664 ;; This function calls:
  6665 ;;		_TMR0_CallBack
  6666 ;; This function is called by:
  6667 ;;		_INTERRUPT_InterruptManager
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671  0E77                     _TMR0_ISR:	
  6672                           ;psect for function _TMR0_ISR
  6673                           
  6674  0E77                     i1l3252:	
  6675                           ;incstack = 0
  6676                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6677                           
  6678                           
  6679                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  6680  0E77  110B               	bcf	11,2	;volatile
  6681  0E78                     i1l3254:
  6682                           
  6683                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  6684  0E78  0020               	movlb	0	; select bank0
  6685  0E79  0869               	movf	_timer0ReloadVal,w	;volatile
  6686  0E7A  0095               	movwf	21	;volatile
  6687                           
  6688                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 5)
  6689  0E7B  3001               	movlw	1
  6690  0E7C  07CC               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  6691  0E7D  3000               	movlw	0
  6692  0E7E  3DCD               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  6693  0E7F  3000               	movlw	0
  6694  0E80  024D               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  6695  0E81  3005               	movlw	5
  6696  0E82  1903               	skipnz
  6697  0E83  024C               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  6698  0E84  1C03               	skipc
  6699  0E85  2E87               	goto	u189_21
  6700  0E86  2E88               	goto	u189_20
  6701  0E87                     u189_21:
  6702  0E87  2E8E               	goto	i1l603
  6703  0E88                     u189_20:
  6704  0E88                     i1l3256:
  6705                           
  6706                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  6707  0E88  318D  259E  318E   	fcall	_TMR0_CallBack
  6708  0E8B                     i1l3258:
  6709                           
  6710                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  6711  0E8B  0020               	movlb	0	; select bank0
  6712  0E8C  01CC               	clrf	TMR0_ISR@CountCallBack	;volatile
  6713  0E8D  01CD               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  6714  0E8E                     i1l603:
  6715  0E8E  0008               	return
  6716  0E8F                     __end_of_TMR0_ISR:
  6717                           
  6718                           	psect	text37
  6719  0D9E                     __ptext37:	
  6720 ;; *************** function _TMR0_CallBack *****************
  6721 ;; Defined at:
  6722 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  1    wreg      void 
  6729 ;; Registers used:
  6730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6736 ;;      Params:         0       0       0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0       0
  6738 ;;      Temps:          0       0       0       0       0       0
  6739 ;;      Totals:         0       0       0       0       0       0
  6740 ;;Total ram usage:        0 bytes
  6741 ;; Hardware stack levels used: 1
  6742 ;; Hardware stack levels required when called: 3
  6743 ;; This function calls:
  6744 ;;		Absolute function
  6745 ;;		_TMR0_DefaultInterruptHandler
  6746 ;;		_sendInfo
  6747 ;; This function is called by:
  6748 ;;		_TMR0_ISR
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752  0D9E                     _TMR0_CallBack:	
  6753                           ;psect for function _TMR0_CallBack
  6754                           
  6755  0D9E                     i1l3192:	
  6756                           ;incstack = 0
  6757                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6758                           
  6759                           
  6760                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  6761  0D9E  0021               	movlb	1	; select bank1
  6762  0D9F  0837               	movf	_TMR0_InterruptHandler^(0+128),w
  6763  0DA0  0438               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  6764  0DA1  1903               	btfsc	3,2
  6765  0DA2  2DA4               	goto	u182_21
  6766  0DA3  2DA5               	goto	u182_20
  6767  0DA4                     u182_21:
  6768  0DA4  2DAA               	goto	i1l607
  6769  0DA5                     u182_20:
  6770  0DA5                     i1l3194:
  6771                           
  6772                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  6773  0DA5  0838               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  6774  0DA6  008A               	movwf	10
  6775  0DA7  0837               	movf	_TMR0_InterruptHandler^(0+128),w
  6776  0DA8  000A               	callw
  6777  0DA9  318D               	pagesel	$
  6778  0DAA                     i1l607:
  6779  0DAA  0008               	return
  6780  0DAB                     __end_of_TMR0_CallBack:
  6781                           
  6782                           	psect	text38
  6783  0CFB                     __ptext38:	
  6784 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6785 ;; Defined at:
  6786 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;		None
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;		None
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      void 
  6793 ;; Registers used:
  6794 ;;		None
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6800 ;;      Params:         0       0       0       0       0       0
  6801 ;;      Locals:         0       0       0       0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0
  6803 ;;      Totals:         0       0       0       0       0       0
  6804 ;;Total ram usage:        0 bytes
  6805 ;; Hardware stack levels used: 1
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_TMR0_Initialize
  6810 ;;		_TMR0_CallBack
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814  0CFB                     _TMR0_DefaultInterruptHandler:	
  6815                           ;psect for function _TMR0_DefaultInterruptHandler
  6816                           
  6817  0CFB                     i1l613:	
  6818                           ;incstack = 0
  6819                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6820                           
  6821  0CFB  0008               	return
  6822  0CFC                     __end_of_TMR0_DefaultInterruptHandler:
  6823                           
  6824                           	psect	text39
  6825  02C7                     __ptext39:	
  6826 ;; *************** function _sendInfo *****************
  6827 ;; Defined at:
  6828 ;;		line 56 in file "main.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  bcd             2   36[BANK0 ] struct .
  6833 ;;  velocidade      2   34[BANK0 ] unsigned short 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1    wreg      void 
  6836 ;; Registers used:
  6837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6843 ;;      Params:         0       0       0       0       0       0
  6844 ;;      Locals:         0       4       0       0       0       0
  6845 ;;      Temps:          0       2       0       0       0       0
  6846 ;;      Totals:         0       6       0       0       0       0
  6847 ;;Total ram usage:        6 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; Hardware stack levels required when called: 2
  6850 ;; This function calls:
  6851 ;;		_ADC_GetConversion
  6852 ;;		_EUSART_Write
  6853 ;;		___flmul
  6854 ;;		___fltol
  6855 ;;		___wmul
  6856 ;;		_bin2bcd
  6857 ;; This function is called by:
  6858 ;;		_main
  6859 ;;		_TMR0_CallBack
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863  02C7                     _sendInfo:	
  6864                           ;psect for function _sendInfo
  6865                           
  6866  02C7                     i1l2914:	
  6867                           ;incstack = 0
  6868                           ; Regs used in _sendInfo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6869                           
  6870                           
  6871                           ;main.c: 58:     bcd16_t bcd;;main.c: 59:     uint16_t velocidade;;main.c: 61:     veloc
      +                          idade = (uint16_t)(velocidadeMotor * 10);
  6872  02C7  0020               	movlb	0	; select bank0
  6873  02C8  0849               	movf	_velocidadeMotor+3,w
  6874  02C9  00A7               	movwf	___flmul@a+3
  6875  02CA  0848               	movf	_velocidadeMotor+2,w
  6876  02CB  00A6               	movwf	___flmul@a+2
  6877  02CC  0847               	movf	_velocidadeMotor+1,w
  6878  02CD  00A5               	movwf	___flmul@a+1
  6879  02CE  0846               	movf	_velocidadeMotor,w
  6880  02CF  00A4               	movwf	___flmul@a
  6881  02D0  3041               	movlw	65
  6882  02D1  00A3               	movwf	___flmul@b+3
  6883  02D2  3020               	movlw	32
  6884  02D3  00A2               	movwf	___flmul@b+2
  6885  02D4  3000               	movlw	0
  6886  02D5  00A1               	movwf	___flmul@b+1
  6887  02D6  3000               	movlw	0
  6888  02D7  00A0               	movwf	___flmul@b
  6889  02D8  3180  2070  3182   	fcall	___flmul
  6890  02DB  0020               	movlb	0	; select bank0
  6891  02DC  0823               	movf	?___flmul+3,w
  6892  02DD  00B8               	movwf	___fltol@f1+3
  6893  02DE  0822               	movf	?___flmul+2,w
  6894  02DF  00B7               	movwf	___fltol@f1+2
  6895  02E0  0821               	movf	?___flmul+1,w
  6896  02E1  00B6               	movwf	___fltol@f1+1
  6897  02E2  0820               	movf	?___flmul,w
  6898  02E3  00B5               	movwf	___fltol@f1
  6899  02E4  3185  2590  3182   	fcall	___fltol
  6900  02E7  0020               	movlb	0	; select bank0
  6901  02E8  0836               	movf	?___fltol+1,w
  6902  02E9  00C3               	movwf	sendInfo@velocidade+1
  6903  02EA  0835               	movf	?___fltol,w
  6904  02EB  00C2               	movwf	sendInfo@velocidade
  6905                           
  6906                           ;main.c: 62:     temperatura = (ADC_GetConversion(2) / 1024) * 999;
  6907  02EC  3002               	movlw	2
  6908  02ED  318E  26A8  3182   	fcall	_ADC_GetConversion
  6909  02F0  0870               	movf	?_ADC_GetConversion,w
  6910  02F1  0020               	movlb	0	; select bank0
  6911  02F2  00C0               	movwf	??_sendInfo
  6912  02F3  0871               	movf	?_ADC_GetConversion+1,w
  6913  02F4  00C1               	movwf	??_sendInfo+1
  6914  02F5  300A               	movlw	10
  6915  02F6                     u175_25:
  6916  02F6  36C1               	lsrf	??_sendInfo+1,f
  6917  02F7  0CC0               	rrf	??_sendInfo,f
  6918  02F8  0B89               	decfsz	9,f
  6919  02F9  2AF6               	goto	u175_25
  6920  02FA  0840               	movf	??_sendInfo,w
  6921  02FB  00F4               	movwf	___wmul@multiplier
  6922  02FC  0841               	movf	??_sendInfo+1,w
  6923  02FD  00F5               	movwf	___wmul@multiplier+1
  6924  02FE  30E7               	movlw	231
  6925  02FF  00F6               	movwf	___wmul@multiplicand
  6926  0300  3003               	movlw	3
  6927  0301  00F7               	movwf	___wmul@multiplicand+1
  6928  0302  318E  26C2  3182   	fcall	___wmul
  6929  0305  0875               	movf	?___wmul+1,w
  6930  0306  0020               	movlb	0	; select bank0
  6931  0307  00D1               	movwf	_temperatura+1
  6932  0308  0874               	movf	?___wmul,w
  6933  0309  00D0               	movwf	_temperatura
  6934                           
  6935                           ;main.c: 64:     EUSART_Write('$');
  6936  030A  3024               	movlw	36
  6937  030B  318D  2571  3182   	fcall	_EUSART_Write
  6938                           
  6939                           ;main.c: 65:     EUSART_Write(0x30 + origem);
  6940  030E  0020               	movlb	0	; select bank0
  6941  030F  085E               	movf	_origem,w
  6942  0310  3E30               	addlw	48
  6943  0311  318D  2571  3182   	fcall	_EUSART_Write
  6944                           
  6945                           ;main.c: 66:     EUSART_Write(0x2C);
  6946  0314  302C               	movlw	44
  6947  0315  318D  2571  3182   	fcall	_EUSART_Write
  6948                           
  6949                           ;main.c: 67:     EUSART_Write(0x30 + destino);
  6950  0318  0020               	movlb	0	; select bank0
  6951  0319  085C               	movf	_destino,w
  6952  031A  3E30               	addlw	48
  6953  031B  318D  2571  3182   	fcall	_EUSART_Write
  6954                           
  6955                           ;main.c: 68:     EUSART_Write(0x2C);
  6956  031E  302C               	movlw	44
  6957  031F  318D  2571  3182   	fcall	_EUSART_Write
  6958                           
  6959                           ;main.c: 69:     EUSART_Write(0x30 + andarAtual);
  6960  0322  0020               	movlb	0	; select bank0
  6961  0323  085A               	movf	_andarAtual,w
  6962  0324  3E30               	addlw	48
  6963  0325  318D  2571  3182   	fcall	_EUSART_Write
  6964                           
  6965                           ;main.c: 70:     EUSART_Write(0x2C);
  6966  0328  302C               	movlw	44
  6967  0329  318D  2571  3182   	fcall	_EUSART_Write
  6968                           
  6969                           ;main.c: 71:     EUSART_Write(0);
  6970  032C  3000               	movlw	0
  6971  032D  318D  2571  3182   	fcall	_EUSART_Write
  6972                           
  6973                           ;main.c: 72:     EUSART_Write(0x2C);
  6974  0330  302C               	movlw	44
  6975  0331  318D  2571  3182   	fcall	_EUSART_Write
  6976  0334                     i1l2916:
  6977                           
  6978                           ;main.c: 74:     bcd.v = bin2bcd(altura);
  6979  0334  0020               	movlb	0	; select bank0
  6980  0335  0859               	movf	_altura,w
  6981  0336  00C0               	movwf	??_sendInfo
  6982  0337  01C1               	clrf	??_sendInfo+1
  6983  0338  0840               	movf	??_sendInfo,w
  6984  0339  00FA               	movwf	bin2bcd@binVal
  6985  033A  0841               	movf	??_sendInfo+1,w
  6986  033B  00FB               	movwf	bin2bcd@binVal+1
  6987  033C  3184  24FE  3182   	fcall	_bin2bcd
  6988  033F  087B               	movf	?_bin2bcd+1,w
  6989  0340  0020               	movlb	0	; select bank0
  6990  0341  00C5               	movwf	sendInfo@bcd+1
  6991  0342  087A               	movf	?_bin2bcd,w
  6992  0343  00C4               	movwf	sendInfo@bcd
  6993  0344                     i1l2918:
  6994                           
  6995                           ;main.c: 75:     EUSART_Write(bcd.num2 + 0x30);
  6996  0344  0845               	movf	sendInfo@bcd+1,w
  6997  0345  390F               	andlw	15
  6998  0346  3E30               	addlw	48
  6999  0347  318D  2571  3182   	fcall	_EUSART_Write
  7000  034A                     i1l2920:
  7001                           
  7002                           ;main.c: 76:     EUSART_Write(bcd.num3 + 0x30);
  7003  034A  0020               	movlb	0	; select bank0
  7004  034B  0E44               	swapf	sendInfo@bcd,w
  7005  034C  390F               	andlw	15
  7006  034D  3E30               	addlw	48
  7007  034E  318D  2571  3182   	fcall	_EUSART_Write
  7008  0351                     i1l2922:
  7009                           
  7010                           ;main.c: 77:     EUSART_Write(bcd.num4 + 0x30);
  7011  0351  0020               	movlb	0	; select bank0
  7012  0352  0844               	movf	sendInfo@bcd,w
  7013  0353  390F               	andlw	15
  7014  0354  3E30               	addlw	48
  7015  0355  318D  2571  3182   	fcall	_EUSART_Write
  7016  0358                     i1l2924:
  7017                           
  7018                           ;main.c: 78:     EUSART_Write(0x2C);
  7019  0358  302C               	movlw	44
  7020  0359  318D  2571  3182   	fcall	_EUSART_Write
  7021  035C                     i1l2926:
  7022                           
  7023                           ;main.c: 80:     bcd.v = bin2bcd(velocidade);
  7024  035C  0020               	movlb	0	; select bank0
  7025  035D  0843               	movf	sendInfo@velocidade+1,w
  7026  035E  00FB               	movwf	bin2bcd@binVal+1
  7027  035F  0842               	movf	sendInfo@velocidade,w
  7028  0360  00FA               	movwf	bin2bcd@binVal
  7029  0361  3184  24FE  3182   	fcall	_bin2bcd
  7030  0364  087B               	movf	?_bin2bcd+1,w
  7031  0365  0020               	movlb	0	; select bank0
  7032  0366  00C5               	movwf	sendInfo@bcd+1
  7033  0367  087A               	movf	?_bin2bcd,w
  7034  0368  00C4               	movwf	sendInfo@bcd
  7035                           
  7036                           ;main.c: 81:     EUSART_Write(bcd.num2 + 0x30);
  7037  0369  0845               	movf	sendInfo@bcd+1,w
  7038  036A  390F               	andlw	15
  7039  036B  3E30               	addlw	48
  7040  036C  318D  2571  3182   	fcall	_EUSART_Write
  7041                           
  7042                           ;main.c: 82:     EUSART_Write(bcd.num3 + 0x30);
  7043  036F  0020               	movlb	0	; select bank0
  7044  0370  0E44               	swapf	sendInfo@bcd,w
  7045  0371  390F               	andlw	15
  7046  0372  3E30               	addlw	48
  7047  0373  318D  2571  3182   	fcall	_EUSART_Write
  7048                           
  7049                           ;main.c: 83:     EUSART_Write(0x2E);
  7050  0376  302E               	movlw	46
  7051  0377  318D  2571  3182   	fcall	_EUSART_Write
  7052                           
  7053                           ;main.c: 84:     EUSART_Write(bcd.num4 + 0x30);
  7054  037A  0020               	movlb	0	; select bank0
  7055  037B  0844               	movf	sendInfo@bcd,w
  7056  037C  390F               	andlw	15
  7057  037D  3E30               	addlw	48
  7058  037E  318D  2571  3182   	fcall	_EUSART_Write
  7059                           
  7060                           ;main.c: 85:     EUSART_Write(0x2C);
  7061  0381  302C               	movlw	44
  7062  0382  318D  2571  3182   	fcall	_EUSART_Write
  7063  0385                     i1l2928:
  7064                           
  7065                           ;main.c: 87:     bcd.v = bin2bcd(temperatura);
  7066  0385  0020               	movlb	0	; select bank0
  7067  0386  0851               	movf	_temperatura+1,w
  7068  0387  00FB               	movwf	bin2bcd@binVal+1
  7069  0388  0850               	movf	_temperatura,w
  7070  0389  00FA               	movwf	bin2bcd@binVal
  7071  038A  3184  24FE  3182   	fcall	_bin2bcd
  7072  038D  087B               	movf	?_bin2bcd+1,w
  7073  038E  0020               	movlb	0	; select bank0
  7074  038F  00C5               	movwf	sendInfo@bcd+1
  7075  0390  087A               	movf	?_bin2bcd,w
  7076  0391  00C4               	movwf	sendInfo@bcd
  7077  0392                     i1l2930:
  7078                           
  7079                           ;main.c: 88:     EUSART_Write(bcd.num1 + 0x30);
  7080  0392  0E45               	swapf	sendInfo@bcd+1,w
  7081  0393  390F               	andlw	15
  7082  0394  3E30               	addlw	48
  7083  0395  318D  2571  3182   	fcall	_EUSART_Write
  7084  0398                     i1l2932:
  7085                           
  7086                           ;main.c: 89:     EUSART_Write(bcd.num2 + 0x30);
  7087  0398  0020               	movlb	0	; select bank0
  7088  0399  0845               	movf	sendInfo@bcd+1,w
  7089  039A  390F               	andlw	15
  7090  039B  3E30               	addlw	48
  7091  039C  318D  2571  3182   	fcall	_EUSART_Write
  7092  039F                     i1l2934:
  7093                           
  7094                           ;main.c: 90:     EUSART_Write(bcd.num3 + 0x30);
  7095  039F  0020               	movlb	0	; select bank0
  7096  03A0  0E44               	swapf	sendInfo@bcd,w
  7097  03A1  390F               	andlw	15
  7098  03A2  3E30               	addlw	48
  7099  03A3  318D  2571  3182   	fcall	_EUSART_Write
  7100  03A6                     i1l2936:
  7101                           
  7102                           ;main.c: 91:     EUSART_Write(0x2E);
  7103  03A6  302E               	movlw	46
  7104  03A7  318D  2571  3182   	fcall	_EUSART_Write
  7105  03AA                     i1l2938:
  7106                           
  7107                           ;main.c: 92:     EUSART_Write(bcd.num4 + 0x30);
  7108  03AA  0020               	movlb	0	; select bank0
  7109  03AB  0844               	movf	sendInfo@bcd,w
  7110  03AC  390F               	andlw	15
  7111  03AD  3E30               	addlw	48
  7112  03AE  318D  2571  3182   	fcall	_EUSART_Write
  7113  03B1                     i1l2940:
  7114                           
  7115                           ;main.c: 93:     EUSART_Write(0x0D);
  7116  03B1  300D               	movlw	13
  7117  03B2  318D  2571  3182   	fcall	_EUSART_Write
  7118  03B5                     i1l771:
  7119  03B5  0008               	return
  7120  03B6                     __end_of_sendInfo:
  7121                           
  7122                           	psect	text40
  7123  04FE                     __ptext40:	
  7124 ;; *************** function _bin2bcd *****************
  7125 ;; Defined at:
  7126 ;;		line 10 in file "bin2bcd.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  binVal          2   10[COMMON] unsigned short 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  i               1    4[BANK0 ] unsigned char 
  7131 ;;  dataU           4    5[BANK0 ] struct .
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  2   10[COMMON] unsigned short 
  7134 ;; Registers used:
  7135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7141 ;;      Params:         2       0       0       0       0       0
  7142 ;;      Locals:         0       5       0       0       0       0
  7143 ;;      Temps:          0       4       0       0       0       0
  7144 ;;      Totals:         2       9       0       0       0       0
  7145 ;;Total ram usage:       11 bytes
  7146 ;; Hardware stack levels used: 1
  7147 ;; Hardware stack levels required when called: 1
  7148 ;; This function calls:
  7149 ;;		_memset
  7150 ;; This function is called by:
  7151 ;;		_sendInfo
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155  04FE                     _bin2bcd:	
  7156                           ;psect for function _bin2bcd
  7157                           
  7158  04FE                     i1l2638:	
  7159                           ;incstack = 0
  7160                           ; Regs used in _bin2bcd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7161                           
  7162                           
  7163                           ;bin2bcd.c: 22:     }dataU;;bin2bcd.c: 23:     memset(&dataU,0,4);
  7164  04FE  3000               	movlw	0
  7165  04FF  00F0               	movwf	memset@c
  7166  0500  00F1               	movwf	memset@c+1
  7167  0501  3004               	movlw	4
  7168  0502  00F2               	movwf	memset@n
  7169  0503  3000               	movlw	0
  7170  0504  00F3               	movwf	memset@n+1
  7171  0505  3025               	movlw	(low (bin2bcd@dataU| 0))& (0+255)
  7172  0506  3184  245A  3184   	fcall	_memset
  7173  0509                     i1l2640:
  7174                           
  7175                           ;bin2bcd.c: 24:     dataU.shift = (uint32_t)binVal;
  7176  0509  087A               	movf	bin2bcd@binVal,w
  7177  050A  0020               	movlb	0	; select bank0
  7178  050B  00A5               	movwf	bin2bcd@dataU
  7179  050C  087B               	movf	bin2bcd@binVal+1,w
  7180  050D  00A6               	movwf	bin2bcd@dataU+1
  7181  050E  01A7               	clrf	bin2bcd@dataU+2
  7182  050F  01A8               	clrf	bin2bcd@dataU+3
  7183  0510                     i1l2642:
  7184                           
  7185                           ;bin2bcd.c: 25:     for(uint8_t i=0;i<12;i++){
  7186  0510  01A4               	clrf	bin2bcd@i
  7187  0511                     i1l2648:
  7188                           
  7189                           ;bin2bcd.c: 26:    if(dataU.dat.d0>=5){
  7190  0511  0828               	movf	bin2bcd@dataU+3,w
  7191  0512  390F               	andlw	15
  7192  0513  00A0               	movwf	??_bin2bcd
  7193  0514  3005               	movlw	5
  7194  0515  0220               	subwf	??_bin2bcd,w
  7195  0516  1C03               	skipc
  7196  0517  2D19               	goto	u125_21
  7197  0518  2D1A               	goto	u125_20
  7198  0519                     u125_21:
  7199  0519  2D23               	goto	i1l856
  7200  051A                     u125_20:
  7201  051A                     i1l2650:
  7202                           
  7203                           ;bin2bcd.c: 27:     dataU.dat.d0 = dataU.dat.d0 + 3;
  7204  051A  0828               	movf	bin2bcd@dataU+3,w
  7205  051B  390F               	andlw	15
  7206  051C  3E03               	addlw	3
  7207  051D  00A0               	movwf	??_bin2bcd
  7208  051E  0828               	movf	bin2bcd@dataU+3,w
  7209  051F  0620               	xorwf	??_bin2bcd,w
  7210  0520  39F0               	andlw	-16
  7211  0521  0620               	xorwf	??_bin2bcd,w
  7212  0522  00A8               	movwf	bin2bcd@dataU+3
  7213  0523                     i1l856:	
  7214                           ;bin2bcd.c: 28:    }
  7215                           
  7216                           
  7217                           ;bin2bcd.c: 29:    if(dataU.dat.d1>=5){
  7218  0523  0E27               	swapf	bin2bcd@dataU+2,w
  7219  0524  390F               	andlw	15
  7220  0525  00A0               	movwf	??_bin2bcd
  7221  0526  3005               	movlw	5
  7222  0527  0220               	subwf	??_bin2bcd,w
  7223  0528  1C03               	skipc
  7224  0529  2D2B               	goto	u126_21
  7225  052A  2D2C               	goto	u126_20
  7226  052B                     u126_21:
  7227  052B  2D36               	goto	i1l857
  7228  052C                     u126_20:
  7229  052C                     i1l2652:
  7230                           
  7231                           ;bin2bcd.c: 30:     dataU.dat.d1 = dataU.dat.d1 + 3;
  7232  052C  0E27               	swapf	bin2bcd@dataU+2,w
  7233  052D  390F               	andlw	15
  7234  052E  3E03               	addlw	3
  7235  052F  00A0               	movwf	??_bin2bcd
  7236  0530  0EA0               	swapf	??_bin2bcd,f
  7237  0531  0827               	movf	bin2bcd@dataU+2,w
  7238  0532  0620               	xorwf	??_bin2bcd,w
  7239  0533  390F               	andlw	-241
  7240  0534  0620               	xorwf	??_bin2bcd,w
  7241  0535  00A7               	movwf	bin2bcd@dataU+2
  7242  0536                     i1l857:	
  7243                           ;bin2bcd.c: 31:    }
  7244                           
  7245                           
  7246                           ;bin2bcd.c: 32:             if(dataU.dat.d2>=5){
  7247  0536  0827               	movf	bin2bcd@dataU+2,w
  7248  0537  390F               	andlw	15
  7249  0538  00A0               	movwf	??_bin2bcd
  7250  0539  3005               	movlw	5
  7251  053A  0220               	subwf	??_bin2bcd,w
  7252  053B  1C03               	skipc
  7253  053C  2D3E               	goto	u127_21
  7254  053D  2D3F               	goto	u127_20
  7255  053E                     u127_21:
  7256  053E  2D48               	goto	i1l858
  7257  053F                     u127_20:
  7258  053F                     i1l2654:
  7259                           
  7260                           ;bin2bcd.c: 33:     dataU.dat.d2 = dataU.dat.d2 + 3;
  7261  053F  0827               	movf	bin2bcd@dataU+2,w
  7262  0540  390F               	andlw	15
  7263  0541  3E03               	addlw	3
  7264  0542  00A0               	movwf	??_bin2bcd
  7265  0543  0827               	movf	bin2bcd@dataU+2,w
  7266  0544  0620               	xorwf	??_bin2bcd,w
  7267  0545  39F0               	andlw	-16
  7268  0546  0620               	xorwf	??_bin2bcd,w
  7269  0547  00A7               	movwf	bin2bcd@dataU+2
  7270  0548                     i1l858:	
  7271                           ;bin2bcd.c: 34:    }
  7272                           
  7273                           
  7274                           ;bin2bcd.c: 35:             if(dataU.dat.d3>=5){
  7275  0548  0E26               	swapf	bin2bcd@dataU+1,w
  7276  0549  390F               	andlw	15
  7277  054A  00A0               	movwf	??_bin2bcd
  7278  054B  3005               	movlw	5
  7279  054C  0220               	subwf	??_bin2bcd,w
  7280  054D  1C03               	skipc
  7281  054E  2D50               	goto	u128_21
  7282  054F  2D51               	goto	u128_20
  7283  0550                     u128_21:
  7284  0550  2D5B               	goto	i1l859
  7285  0551                     u128_20:
  7286  0551                     i1l2656:
  7287                           
  7288                           ;bin2bcd.c: 36:     dataU.dat.d3 = dataU.dat.d3 + 3;
  7289  0551  0E26               	swapf	bin2bcd@dataU+1,w
  7290  0552  390F               	andlw	15
  7291  0553  3E03               	addlw	3
  7292  0554  00A0               	movwf	??_bin2bcd
  7293  0555  0EA0               	swapf	??_bin2bcd,f
  7294  0556  0826               	movf	bin2bcd@dataU+1,w
  7295  0557  0620               	xorwf	??_bin2bcd,w
  7296  0558  390F               	andlw	-241
  7297  0559  0620               	xorwf	??_bin2bcd,w
  7298  055A  00A6               	movwf	bin2bcd@dataU+1
  7299  055B                     i1l859:	
  7300                           ;bin2bcd.c: 37:    }
  7301                           
  7302                           
  7303                           ;bin2bcd.c: 38:    dataU.shift = dataU.shift<<1;
  7304  055B  0825               	movf	bin2bcd@dataU,w
  7305  055C  00A0               	movwf	??_bin2bcd
  7306  055D  0826               	movf	bin2bcd@dataU+1,w
  7307  055E  00A1               	movwf	??_bin2bcd+1
  7308  055F  0827               	movf	bin2bcd@dataU+2,w
  7309  0560  00A2               	movwf	??_bin2bcd+2
  7310  0561  0828               	movf	bin2bcd@dataU+3,w
  7311  0562  00A3               	movwf	??_bin2bcd+3
  7312  0563  3001               	movlw	1
  7313  0564                     u129_25:
  7314  0564  35A0               	lslf	??_bin2bcd,f
  7315  0565  0DA1               	rlf	??_bin2bcd+1,f
  7316  0566  0DA2               	rlf	??_bin2bcd+2,f
  7317  0567  0DA3               	rlf	??_bin2bcd+3,f
  7318  0568                     u129_20:
  7319  0568  0B89               	decfsz	9,f
  7320  0569  2D64               	goto	u129_25
  7321  056A  0823               	movf	??_bin2bcd+3,w
  7322  056B  00A8               	movwf	bin2bcd@dataU+3
  7323  056C  0822               	movf	??_bin2bcd+2,w
  7324  056D  00A7               	movwf	bin2bcd@dataU+2
  7325  056E  0821               	movf	??_bin2bcd+1,w
  7326  056F  00A6               	movwf	bin2bcd@dataU+1
  7327  0570  0820               	movf	??_bin2bcd,w
  7328  0571  00A5               	movwf	bin2bcd@dataU
  7329                           
  7330                           ;bin2bcd.c: 39:     }
  7331  0572  3001               	movlw	1
  7332  0573  00A0               	movwf	??_bin2bcd
  7333  0574  0820               	movf	??_bin2bcd,w
  7334  0575  07A4               	addwf	bin2bcd@i,f
  7335  0576                     i1l2658:
  7336  0576  300C               	movlw	12
  7337  0577  0224               	subwf	bin2bcd@i,w
  7338  0578  1C03               	skipc
  7339  0579  2D7B               	goto	u130_21
  7340  057A  2D7C               	goto	u130_20
  7341  057B                     u130_21:
  7342  057B  2D11               	goto	i1l2648
  7343  057C                     u130_20:
  7344  057C                     i1l2660:
  7345                           
  7346                           ;bin2bcd.c: 40:     return (uint16_t)(dataU.shift>>12);
  7347  057C  0825               	movf	bin2bcd@dataU,w
  7348  057D  00A0               	movwf	??_bin2bcd
  7349  057E  0826               	movf	bin2bcd@dataU+1,w
  7350  057F  00A1               	movwf	??_bin2bcd+1
  7351  0580  0827               	movf	bin2bcd@dataU+2,w
  7352  0581  00A2               	movwf	??_bin2bcd+2
  7353  0582  0828               	movf	bin2bcd@dataU+3,w
  7354  0583  00A3               	movwf	??_bin2bcd+3
  7355  0584  300C               	movlw	12
  7356  0585                     u131_25:
  7357  0585  36A3               	lsrf	??_bin2bcd+3,f
  7358  0586  0CA2               	rrf	??_bin2bcd+2,f
  7359  0587  0CA1               	rrf	??_bin2bcd+1,f
  7360  0588  0CA0               	rrf	??_bin2bcd,f
  7361  0589                     u131_20:
  7362  0589  0B89               	decfsz	9,f
  7363  058A  2D85               	goto	u131_25
  7364  058B  0821               	movf	??_bin2bcd+1,w
  7365  058C  00FB               	movwf	?_bin2bcd+1
  7366  058D  0820               	movf	??_bin2bcd,w
  7367  058E  00FA               	movwf	?_bin2bcd
  7368  058F                     i1l860:
  7369  058F  0008               	return
  7370  0590                     __end_of_bin2bcd:
  7371                           
  7372                           	psect	text41
  7373  045A                     __ptext41:	
  7374 ;; *************** function _memset *****************
  7375 ;; Defined at:
  7376 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  dest            1    wreg     PTR void 
  7379 ;;		 -> bin2bcd@dataU(4), 
  7380 ;;  c               2    0[COMMON] int 
  7381 ;;  n               2    2[COMMON] unsigned int 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  dest            1    8[COMMON] PTR void 
  7384 ;;		 -> bin2bcd@dataU(4), 
  7385 ;;  k               2    6[COMMON] unsigned int 
  7386 ;;  s               1    9[COMMON] PTR unsigned char 
  7387 ;;		 -> bin2bcd@dataU(4), 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      PTR void 
  7390 ;; Registers used:
  7391 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7397 ;;      Params:         4       0       0       0       0       0
  7398 ;;      Locals:         4       0       0       0       0       0
  7399 ;;      Temps:          2       0       0       0       0       0
  7400 ;;      Totals:        10       0       0       0       0       0
  7401 ;;Total ram usage:       10 bytes
  7402 ;; Hardware stack levels used: 1
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_bin2bcd
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410  045A                     _memset:	
  7411                           ;psect for function _memset
  7412                           
  7413                           
  7414                           ;incstack = 0
  7415                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7416                           ;memset@dest stored from wreg
  7417  045A  00F8               	movwf	memset@dest
  7418  045B                     i1l2558:
  7419  045B  0878               	movf	memset@dest,w
  7420  045C  00F4               	movwf	??_memset
  7421  045D  0874               	movf	??_memset,w
  7422  045E  00F9               	movwf	memset@s
  7423  045F                     i1l2560:
  7424  045F  0872               	movf	memset@n,w
  7425  0460  0473               	iorwf	memset@n+1,w
  7426  0461  1D03               	btfss	3,2
  7427  0462  2C64               	goto	u115_21
  7428  0463  2C65               	goto	u115_20
  7429  0464                     u115_21:
  7430  0464  2C66               	goto	i1l2564
  7431  0465                     u115_20:
  7432  0465  2CFD               	goto	i1l1470
  7433  0466                     i1l2564:
  7434  0466  0870               	movf	memset@c,w
  7435  0467  00F4               	movwf	??_memset
  7436  0468  0879               	movf	memset@s,w
  7437  0469  0086               	movwf	6
  7438  046A  0187               	clrf	7
  7439  046B  0874               	movf	??_memset,w
  7440  046C  0081               	movwf	1
  7441  046D                     i1l2566:
  7442  046D  0870               	movf	memset@c,w
  7443  046E  00F4               	movwf	??_memset
  7444  046F  0872               	movf	memset@n,w
  7445  0470  0779               	addwf	memset@s,w
  7446  0471  00F5               	movwf	??_memset+1
  7447  0472  0875               	movf	??_memset+1,w
  7448  0473  3EFF               	addlw	255
  7449  0474  0086               	movwf	6
  7450  0475  0187               	clrf	7
  7451  0476  0874               	movf	??_memset,w
  7452  0477  0081               	movwf	1
  7453  0478                     i1l2568:
  7454  0478  3000               	movlw	0
  7455  0479  0273               	subwf	memset@n+1,w
  7456  047A  3003               	movlw	3
  7457  047B  1903               	skipnz
  7458  047C  0272               	subwf	memset@n,w
  7459  047D  1803               	skipnc
  7460  047E  2C80               	goto	u116_21
  7461  047F  2C81               	goto	u116_20
  7462  0480                     u116_21:
  7463  0480  2C82               	goto	i1l2572
  7464  0481                     u116_20:
  7465  0481  2CFD               	goto	i1l1470
  7466  0482                     i1l2572:
  7467  0482  0870               	movf	memset@c,w
  7468  0483  00F4               	movwf	??_memset
  7469  0484  0A79               	incf	memset@s,w
  7470  0485  0086               	movwf	6
  7471  0486  0187               	clrf	7
  7472  0487  0874               	movf	??_memset,w
  7473  0488  0081               	movwf	1
  7474  0489                     i1l2574:
  7475  0489  0870               	movf	memset@c,w
  7476  048A  00F4               	movwf	??_memset
  7477  048B  0879               	movf	memset@s,w
  7478  048C  3E02               	addlw	2
  7479  048D  0086               	movwf	6
  7480  048E  0187               	clrf	7
  7481  048F  0874               	movf	??_memset,w
  7482  0490  0081               	movwf	1
  7483  0491                     i1l2576:
  7484  0491  0870               	movf	memset@c,w
  7485  0492  00F4               	movwf	??_memset
  7486  0493  0872               	movf	memset@n,w
  7487  0494  0779               	addwf	memset@s,w
  7488  0495  00F5               	movwf	??_memset+1
  7489  0496  0875               	movf	??_memset+1,w
  7490  0497  3EFE               	addlw	254
  7491  0498  0086               	movwf	6
  7492  0499  0187               	clrf	7
  7493  049A  0874               	movf	??_memset,w
  7494  049B  0081               	movwf	1
  7495  049C                     i1l2578:
  7496  049C  0870               	movf	memset@c,w
  7497  049D  00F4               	movwf	??_memset
  7498  049E  0872               	movf	memset@n,w
  7499  049F  0779               	addwf	memset@s,w
  7500  04A0  00F5               	movwf	??_memset+1
  7501  04A1  0875               	movf	??_memset+1,w
  7502  04A2  3EFD               	addlw	253
  7503  04A3  0086               	movwf	6
  7504  04A4  0187               	clrf	7
  7505  04A5  0874               	movf	??_memset,w
  7506  04A6  0081               	movwf	1
  7507  04A7                     i1l2580:
  7508  04A7  3000               	movlw	0
  7509  04A8  0273               	subwf	memset@n+1,w
  7510  04A9  3007               	movlw	7
  7511  04AA  1903               	skipnz
  7512  04AB  0272               	subwf	memset@n,w
  7513  04AC  1803               	skipnc
  7514  04AD  2CAF               	goto	u117_21
  7515  04AE  2CB0               	goto	u117_20
  7516  04AF                     u117_21:
  7517  04AF  2CB1               	goto	i1l2584
  7518  04B0                     u117_20:
  7519  04B0  2CFD               	goto	i1l1470
  7520  04B1                     i1l2584:
  7521  04B1  0870               	movf	memset@c,w
  7522  04B2  00F4               	movwf	??_memset
  7523  04B3  0879               	movf	memset@s,w
  7524  04B4  3E03               	addlw	3
  7525  04B5  0086               	movwf	6
  7526  04B6  0187               	clrf	7
  7527  04B7  0874               	movf	??_memset,w
  7528  04B8  0081               	movwf	1
  7529  04B9  0870               	movf	memset@c,w
  7530  04BA  00F4               	movwf	??_memset
  7531  04BB  0872               	movf	memset@n,w
  7532  04BC  0779               	addwf	memset@s,w
  7533  04BD  00F5               	movwf	??_memset+1
  7534  04BE  0875               	movf	??_memset+1,w
  7535  04BF  3EFC               	addlw	252
  7536  04C0  0086               	movwf	6
  7537  04C1  0187               	clrf	7
  7538  04C2  0874               	movf	??_memset,w
  7539  04C3  0081               	movwf	1
  7540  04C4                     i1l2586:
  7541  04C4  3000               	movlw	0
  7542  04C5  0273               	subwf	memset@n+1,w
  7543  04C6  3009               	movlw	9
  7544  04C7  1903               	skipnz
  7545  04C8  0272               	subwf	memset@n,w
  7546  04C9  1803               	skipnc
  7547  04CA  2CCC               	goto	u118_21
  7548  04CB  2CCD               	goto	u118_20
  7549  04CC                     u118_21:
  7550  04CC  2CCE               	goto	i1l2590
  7551  04CD                     u118_20:
  7552  04CD  2CFD               	goto	i1l1470
  7553  04CE                     i1l2590:
  7554  04CE  0979               	comf	memset@s,w
  7555  04CF  00F4               	movwf	??_memset
  7556  04D0  097A               	comf	memset@s+1,w
  7557  04D1  00F5               	movwf	??_memset+1
  7558  04D2  0AF4               	incf	??_memset,f
  7559  04D3  1903               	skipnz
  7560  04D4  0AF5               	incf	??_memset+1,f
  7561  04D5  3003               	movlw	3
  7562  04D6  0574               	andwf	??_memset,w
  7563  04D7  00F6               	movwf	memset@k
  7564  04D8  3000               	movlw	0
  7565  04D9  0575               	andwf	??_memset+1,w
  7566  04DA  00F7               	movwf	memset@k+1
  7567  04DB  0876               	movf	memset@k,w
  7568  04DC  00F4               	movwf	??_memset
  7569  04DD  0874               	movf	??_memset,w
  7570  04DE  07F9               	addwf	memset@s,f
  7571  04DF                     i1l2592:
  7572  04DF  0876               	movf	memset@k,w
  7573  04E0  02F2               	subwf	memset@n,f
  7574  04E1  0877               	movf	memset@k+1,w
  7575  04E2  3BF3               	subwfb	memset@n+1,f
  7576  04E3                     i1l2594:
  7577  04E3  30FC               	movlw	252
  7578  04E4  05F2               	andwf	memset@n,f
  7579  04E5  30FF               	movlw	255
  7580  04E6  05F3               	andwf	memset@n+1,f
  7581  04E7  2CF7               	goto	i1l2602
  7582  04E8                     i1l2596:
  7583  04E8  0870               	movf	memset@c,w
  7584  04E9  00F4               	movwf	??_memset
  7585  04EA  0879               	movf	memset@s,w
  7586  04EB  0086               	movwf	6
  7587  04EC  0187               	clrf	7
  7588  04ED  0874               	movf	??_memset,w
  7589  04EE  0081               	movwf	1
  7590  04EF                     i1l2598:
  7591  04EF  3001               	movlw	1
  7592  04F0  02F2               	subwf	memset@n,f
  7593  04F1  3000               	movlw	0
  7594  04F2  3BF3               	subwfb	memset@n+1,f
  7595  04F3                     i1l2600:
  7596  04F3  3001               	movlw	1
  7597  04F4  00F4               	movwf	??_memset
  7598  04F5  0874               	movf	??_memset,w
  7599  04F6  07F9               	addwf	memset@s,f
  7600  04F7                     i1l2602:
  7601  04F7  0872               	movf	memset@n,w
  7602  04F8  0473               	iorwf	memset@n+1,w
  7603  04F9  1D03               	btfss	3,2
  7604  04FA  2CFC               	goto	u119_21
  7605  04FB  2CFD               	goto	u119_20
  7606  04FC                     u119_21:
  7607  04FC  2CE8               	goto	i1l2596
  7608  04FD                     u119_20:
  7609  04FD                     i1l1470:
  7610  04FD  0008               	return
  7611  04FE                     __end_of_memset:
  7612                           
  7613                           	psect	text42
  7614  0EC2                     __ptext42:	
  7615 ;; *************** function ___wmul *****************
  7616 ;; Defined at:
  7617 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  multiplier      2    4[COMMON] unsigned int 
  7620 ;;  multiplicand    2    6[COMMON] unsigned int 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  product         2    8[COMMON] unsigned int 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  2    4[COMMON] unsigned int 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7632 ;;      Params:         4       0       0       0       0       0
  7633 ;;      Locals:         2       0       0       0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0
  7635 ;;      Totals:         6       0       0       0       0       0
  7636 ;;Total ram usage:        6 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_sendInfo
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645  0EC2                     ___wmul:	
  7646                           ;psect for function ___wmul
  7647                           
  7648  0EC2                     i1l2698:	
  7649                           ;incstack = 0
  7650                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7651                           
  7652  0EC2  01F8               	clrf	___wmul@product
  7653  0EC3  01F9               	clrf	___wmul@product+1
  7654  0EC4                     i1l2700:
  7655  0EC4  1C74               	btfss	___wmul@multiplier,0
  7656  0EC5  2EC7               	goto	u133_21
  7657  0EC6  2EC8               	goto	u133_20
  7658  0EC7                     u133_21:
  7659  0EC7  2ECC               	goto	i1l1010
  7660  0EC8                     u133_20:
  7661  0EC8                     i1l2702:
  7662  0EC8  0876               	movf	___wmul@multiplicand,w
  7663  0EC9  07F8               	addwf	___wmul@product,f
  7664  0ECA  0877               	movf	___wmul@multiplicand+1,w
  7665  0ECB  3DF9               	addwfc	___wmul@product+1,f
  7666  0ECC                     i1l1010:
  7667  0ECC  3001               	movlw	1
  7668  0ECD                     u134_25:
  7669  0ECD  35F6               	lslf	___wmul@multiplicand,f
  7670  0ECE  0DF7               	rlf	___wmul@multiplicand+1,f
  7671  0ECF  0B89               	decfsz	9,f
  7672  0ED0  2ECD               	goto	u134_25
  7673  0ED1                     i1l2704:
  7674  0ED1  3001               	movlw	1
  7675  0ED2                     u135_25:
  7676  0ED2  36F5               	lsrf	___wmul@multiplier+1,f
  7677  0ED3  0CF4               	rrf	___wmul@multiplier,f
  7678  0ED4  0B89               	decfsz	9,f
  7679  0ED5  2ED2               	goto	u135_25
  7680  0ED6                     i1l2706:
  7681  0ED6  0874               	movf	___wmul@multiplier,w
  7682  0ED7  0475               	iorwf	___wmul@multiplier+1,w
  7683  0ED8  1D03               	btfss	3,2
  7684  0ED9  2EDB               	goto	u136_21
  7685  0EDA  2EDC               	goto	u136_20
  7686  0EDB                     u136_21:
  7687  0EDB  2EC4               	goto	i1l2700
  7688  0EDC                     u136_20:
  7689  0EDC                     i1l2708:
  7690  0EDC  0879               	movf	___wmul@product+1,w
  7691  0EDD  00F5               	movwf	?___wmul+1
  7692  0EDE  0878               	movf	___wmul@product,w
  7693  0EDF  00F4               	movwf	?___wmul
  7694  0EE0                     i1l1012:
  7695  0EE0  0008               	return
  7696  0EE1                     __end_of___wmul:
  7697                           
  7698                           	psect	text43
  7699  0590                     __ptext43:	
  7700 ;; *************** function ___fltol *****************
  7701 ;; Defined at:
  7702 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  f1              4   21[BANK0 ] unsigned int 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;  exp1            1   31[BANK0 ] unsigned char 
  7707 ;;  sign1           1   30[BANK0 ] unsigned char 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  4   21[BANK0 ] long 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7717 ;;      Params:         0       4       0       0       0       0
  7718 ;;      Locals:         0       2       0       0       0       0
  7719 ;;      Temps:          0       5       0       0       0       0
  7720 ;;      Totals:         0      11       0       0       0       0
  7721 ;;Total ram usage:       11 bytes
  7722 ;; Hardware stack levels used: 1
  7723 ;; This function calls:
  7724 ;;		Nothing
  7725 ;; This function is called by:
  7726 ;;		_sendInfo
  7727 ;;		_interrupcaoCCP4
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731  0590                     ___fltol:	
  7732                           ;psect for function ___fltol
  7733                           
  7734  0590                     i1l2712:	
  7735                           ;incstack = 0
  7736                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7737                           
  7738  0590  1003               	clrc
  7739  0591  0020               	movlb	0	; select bank0
  7740  0592  0D37               	rlf	___fltol@f1+2,w
  7741  0593  0D38               	rlf	___fltol@f1+3,w
  7742  0594  00B9               	movwf	??___fltol
  7743  0595  0839               	movf	??___fltol,w
  7744  0596  00BF               	movwf	___fltol@exp1
  7745  0597  083F               	movf	___fltol@exp1,w
  7746  0598  1D03               	btfss	3,2
  7747  0599  2D9B               	goto	u137_21
  7748  059A  2D9C               	goto	u137_20
  7749  059B                     u137_21:
  7750  059B  2DA5               	goto	i1l2718
  7751  059C                     u137_20:
  7752  059C                     i1l2714:
  7753  059C  3000               	movlw	0
  7754  059D  00B8               	movwf	?___fltol+3
  7755  059E  3000               	movlw	0
  7756  059F  00B7               	movwf	?___fltol+2
  7757  05A0  3000               	movlw	0
  7758  05A1  00B6               	movwf	?___fltol+1
  7759  05A2  3000               	movlw	0
  7760  05A3  00B5               	movwf	?___fltol
  7761  05A4  2E04               	goto	i1l1204
  7762  05A5                     i1l2718:
  7763  05A5  0835               	movf	___fltol@f1,w
  7764  05A6  00B9               	movwf	??___fltol
  7765  05A7  0836               	movf	___fltol@f1+1,w
  7766  05A8  00BA               	movwf	??___fltol+1
  7767  05A9  0837               	movf	___fltol@f1+2,w
  7768  05AA  00BB               	movwf	??___fltol+2
  7769  05AB  0838               	movf	___fltol@f1+3,w
  7770  05AC  00BC               	movwf	??___fltol+3
  7771  05AD  301F               	movlw	31
  7772  05AE                     u138_25:
  7773  05AE  36BC               	lsrf	??___fltol+3,f
  7774  05AF  0CBB               	rrf	??___fltol+2,f
  7775  05B0  0CBA               	rrf	??___fltol+1,f
  7776  05B1  0CB9               	rrf	??___fltol,f
  7777  05B2                     u138_20:
  7778  05B2  0B89               	decfsz	9,f
  7779  05B3  2DAE               	goto	u138_25
  7780  05B4  0839               	movf	??___fltol,w
  7781  05B5  00BD               	movwf	??___fltol+4
  7782  05B6  083D               	movf	??___fltol+4,w
  7783  05B7  00BE               	movwf	___fltol@sign1
  7784  05B8                     i1l2720:
  7785  05B8  17B7               	bsf	___fltol@f1+2,7
  7786  05B9                     i1l2722:
  7787  05B9  30FF               	movlw	255
  7788  05BA  05B5               	andwf	___fltol@f1,f
  7789  05BB  30FF               	movlw	255
  7790  05BC  05B6               	andwf	___fltol@f1+1,f
  7791  05BD  30FF               	movlw	255
  7792  05BE  05B7               	andwf	___fltol@f1+2,f
  7793  05BF  3000               	movlw	0
  7794  05C0  05B8               	andwf	___fltol@f1+3,f
  7795  05C1                     i1l2724:
  7796  05C1  3096               	movlw	150
  7797  05C2  02BF               	subwf	___fltol@exp1,f
  7798  05C3                     i1l2726:
  7799  05C3  1FBF               	btfss	___fltol@exp1,7
  7800  05C4  2DC6               	goto	u139_21
  7801  05C5  2DC7               	goto	u139_20
  7802  05C6                     u139_21:
  7803  05C6  2DDF               	goto	i1l2736
  7804  05C7                     u139_20:
  7805  05C7                     i1l2728:
  7806  05C7  083F               	movf	___fltol@exp1,w
  7807  05C8  3A80               	xorlw	128
  7808  05C9  3E97               	addlw	151
  7809  05CA  1803               	skipnc
  7810  05CB  2DCD               	goto	u140_21
  7811  05CC  2DCE               	goto	u140_20
  7812  05CD                     u140_21:
  7813  05CD  2DCF               	goto	i1l2734
  7814  05CE                     u140_20:
  7815  05CE  2D9C               	goto	i1l2714
  7816  05CF                     i1l2734:
  7817  05CF  3001               	movlw	1
  7818  05D0                     u141_25:
  7819  05D0  36B8               	lsrf	___fltol@f1+3,f
  7820  05D1  0CB7               	rrf	___fltol@f1+2,f
  7821  05D2  0CB6               	rrf	___fltol@f1+1,f
  7822  05D3  0CB5               	rrf	___fltol@f1,f
  7823  05D4  0B89               	decfsz	9,f
  7824  05D5  2DD0               	goto	u141_25
  7825  05D6  3001               	movlw	1
  7826  05D7  00B9               	movwf	??___fltol
  7827  05D8  0839               	movf	??___fltol,w
  7828  05D9  07BF               	addwf	___fltol@exp1,f
  7829  05DA  1D03               	btfss	3,2
  7830  05DB  2DDD               	goto	u142_21
  7831  05DC  2DDE               	goto	u142_20
  7832  05DD                     u142_21:
  7833  05DD  2DCF               	goto	i1l2734
  7834  05DE                     u142_20:
  7835  05DE  2DF4               	goto	i1l2744
  7836  05DF                     i1l2736:
  7837  05DF  3020               	movlw	32
  7838  05E0  023F               	subwf	___fltol@exp1,w
  7839  05E1  1C03               	skipc
  7840  05E2  2DE4               	goto	u143_21
  7841  05E3  2DE5               	goto	u143_20
  7842  05E4                     u143_21:
  7843  05E4  2DEF               	goto	i1l1211
  7844  05E5                     u143_20:
  7845  05E5  2D9C               	goto	i1l2714
  7846  05E6                     i1l2742:
  7847  05E6  3001               	movlw	1
  7848  05E7                     u144_25:
  7849  05E7  35B5               	lslf	___fltol@f1,f
  7850  05E8  0DB6               	rlf	___fltol@f1+1,f
  7851  05E9  0DB7               	rlf	___fltol@f1+2,f
  7852  05EA  0DB8               	rlf	___fltol@f1+3,f
  7853  05EB  0B89               	decfsz	9,f
  7854  05EC  2DE7               	goto	u144_25
  7855  05ED  3001               	movlw	1
  7856  05EE  02BF               	subwf	___fltol@exp1,f
  7857  05EF                     i1l1211:
  7858  05EF  083F               	movf	___fltol@exp1,w
  7859  05F0  1D03               	btfss	3,2
  7860  05F1  2DF3               	goto	u145_21
  7861  05F2  2DF4               	goto	u145_20
  7862  05F3                     u145_21:
  7863  05F3  2DE6               	goto	i1l2742
  7864  05F4                     u145_20:
  7865  05F4                     i1l2744:
  7866  05F4  083E               	movf	___fltol@sign1,w
  7867  05F5  1903               	btfsc	3,2
  7868  05F6  2DF8               	goto	u146_21
  7869  05F7  2DF9               	goto	u146_20
  7870  05F8                     u146_21:
  7871  05F8  2E04               	goto	i1l1214
  7872  05F9                     u146_20:
  7873  05F9                     i1l2746:
  7874  05F9  09B5               	comf	___fltol@f1,f
  7875  05FA  09B6               	comf	___fltol@f1+1,f
  7876  05FB  09B7               	comf	___fltol@f1+2,f
  7877  05FC  09B8               	comf	___fltol@f1+3,f
  7878  05FD  0AB5               	incf	___fltol@f1,f
  7879  05FE  1903               	skipnz
  7880  05FF  0AB6               	incf	___fltol@f1+1,f
  7881  0600  1903               	skipnz
  7882  0601  0AB7               	incf	___fltol@f1+2,f
  7883  0602  1903               	skipnz
  7884  0603  0AB8               	incf	___fltol@f1+3,f
  7885  0604                     i1l1214:
  7886  0604                     i1l1204:
  7887  0604  0008               	return
  7888  0605                     __end_of___fltol:
  7889                           
  7890                           	psect	text44
  7891  0070                     __ptext44:	
  7892 ;; *************** function ___flmul *****************
  7893 ;; Defined at:
  7894 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  b               4    0[BANK0 ] long 
  7897 ;;  a               4    4[BANK0 ] long 
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  prod            4   15[BANK0 ] struct .
  7900 ;;  grs             4    9[BANK0 ] unsigned long 
  7901 ;;  temp            2   19[BANK0 ] struct .
  7902 ;;  bexp            1   14[BANK0 ] unsigned char 
  7903 ;;  aexp            1   13[BANK0 ] unsigned char 
  7904 ;;  sign            1    8[BANK0 ] unsigned char 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  4    0[BANK0 ] unsigned char 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0, pclath, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7914 ;;      Params:         0       8       0       0       0       0
  7915 ;;      Locals:         0      13       0       0       0       0
  7916 ;;      Temps:          5       0       0       0       0       0
  7917 ;;      Totals:         5      21       0       0       0       0
  7918 ;;Total ram usage:       26 bytes
  7919 ;; Hardware stack levels used: 1
  7920 ;; Hardware stack levels required when called: 1
  7921 ;; This function calls:
  7922 ;;		__Umul8_16
  7923 ;; This function is called by:
  7924 ;;		_sendInfo
  7925 ;;		_interrupcaoCCP4
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929  0070                     ___flmul:	
  7930                           ;psect for function ___flmul
  7931                           
  7932  0070                     i1l2748:	
  7933                           ;incstack = 0
  7934                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7935                           
  7936  0070  0020               	movlb	0	; select bank0
  7937  0071  0823               	movf	___flmul@b+3,w
  7938  0072  3980               	andlw	128
  7939  0073  00F9               	movwf	??___flmul
  7940  0074  0879               	movf	??___flmul,w
  7941  0075  00A8               	movwf	___flmul@sign
  7942  0076                     i1l2750:
  7943  0076  3523               	lslf	___flmul@b+3,w
  7944  0077  00F9               	movwf	??___flmul
  7945  0078  0879               	movf	??___flmul,w
  7946  0079  00AE               	movwf	___flmul@bexp
  7947  007A                     i1l2752:
  7948  007A  1FA2               	btfss	___flmul@b+2,7
  7949  007B  287D               	goto	u147_21
  7950  007C  287E               	goto	u147_20
  7951  007D                     u147_21:
  7952  007D  287F               	goto	i1l2756
  7953  007E                     u147_20:
  7954  007E                     i1l2754:
  7955  007E  142E               	bsf	___flmul@bexp,0
  7956  007F                     i1l2756:
  7957  007F  082E               	movf	___flmul@bexp,w
  7958  0080  1903               	btfsc	3,2
  7959  0081  2883               	goto	u148_21
  7960  0082  2884               	goto	u148_20
  7961  0083                     u148_21:
  7962  0083  2893               	goto	i1l2764
  7963  0084                     u148_20:
  7964  0084                     i1l2758:
  7965  0084  0A2E               	incf	___flmul@bexp,w
  7966  0085  1D03               	btfss	3,2
  7967  0086  2888               	goto	u149_21
  7968  0087  2889               	goto	u149_20
  7969  0088                     u149_21:
  7970  0088  2891               	goto	i1l2762
  7971  0089                     u149_20:
  7972  0089                     i1l2760:
  7973  0089  3000               	movlw	0
  7974  008A  00A3               	movwf	___flmul@b+3
  7975  008B  3000               	movlw	0
  7976  008C  00A2               	movwf	___flmul@b+2
  7977  008D  3000               	movlw	0
  7978  008E  00A1               	movwf	___flmul@b+1
  7979  008F  3000               	movlw	0
  7980  0090  00A0               	movwf	___flmul@b
  7981  0091                     i1l2762:
  7982  0091  17A2               	bsf	___flmul@b+2,7
  7983  0092  289B               	goto	i1l2766
  7984  0093                     i1l2764:
  7985  0093  3000               	movlw	0
  7986  0094  00A3               	movwf	___flmul@b+3
  7987  0095  3000               	movlw	0
  7988  0096  00A2               	movwf	___flmul@b+2
  7989  0097  3000               	movlw	0
  7990  0098  00A1               	movwf	___flmul@b+1
  7991  0099  3000               	movlw	0
  7992  009A  00A0               	movwf	___flmul@b
  7993  009B                     i1l2766:
  7994  009B  0827               	movf	___flmul@a+3,w
  7995  009C  3980               	andlw	128
  7996  009D  00F9               	movwf	??___flmul
  7997  009E  0879               	movf	??___flmul,w
  7998  009F  06A8               	xorwf	___flmul@sign,f
  7999  00A0                     i1l2768:
  8000  00A0  3527               	lslf	___flmul@a+3,w
  8001  00A1  00F9               	movwf	??___flmul
  8002  00A2  0879               	movf	??___flmul,w
  8003  00A3  00AD               	movwf	___flmul@aexp
  8004  00A4                     i1l2770:
  8005  00A4  1FA6               	btfss	___flmul@a+2,7
  8006  00A5  28A7               	goto	u150_21
  8007  00A6  28A8               	goto	u150_20
  8008  00A7                     u150_21:
  8009  00A7  28A9               	goto	i1l2774
  8010  00A8                     u150_20:
  8011  00A8                     i1l2772:
  8012  00A8  142D               	bsf	___flmul@aexp,0
  8013  00A9                     i1l2774:
  8014  00A9  082D               	movf	___flmul@aexp,w
  8015  00AA  1903               	btfsc	3,2
  8016  00AB  28AD               	goto	u151_21
  8017  00AC  28AE               	goto	u151_20
  8018  00AD                     u151_21:
  8019  00AD  28BD               	goto	i1l2782
  8020  00AE                     u151_20:
  8021  00AE                     i1l2776:
  8022  00AE  0A2D               	incf	___flmul@aexp,w
  8023  00AF  1D03               	btfss	3,2
  8024  00B0  28B2               	goto	u152_21
  8025  00B1  28B3               	goto	u152_20
  8026  00B2                     u152_21:
  8027  00B2  28BB               	goto	i1l2780
  8028  00B3                     u152_20:
  8029  00B3                     i1l2778:
  8030  00B3  3000               	movlw	0
  8031  00B4  00A7               	movwf	___flmul@a+3
  8032  00B5  3000               	movlw	0
  8033  00B6  00A6               	movwf	___flmul@a+2
  8034  00B7  3000               	movlw	0
  8035  00B8  00A5               	movwf	___flmul@a+1
  8036  00B9  3000               	movlw	0
  8037  00BA  00A4               	movwf	___flmul@a
  8038  00BB                     i1l2780:
  8039  00BB  17A6               	bsf	___flmul@a+2,7
  8040  00BC  28C5               	goto	i1l2784
  8041  00BD                     i1l2782:
  8042  00BD  3000               	movlw	0
  8043  00BE  00A7               	movwf	___flmul@a+3
  8044  00BF  3000               	movlw	0
  8045  00C0  00A6               	movwf	___flmul@a+2
  8046  00C1  3000               	movlw	0
  8047  00C2  00A5               	movwf	___flmul@a+1
  8048  00C3  3000               	movlw	0
  8049  00C4  00A4               	movwf	___flmul@a
  8050  00C5                     i1l2784:
  8051  00C5  082D               	movf	___flmul@aexp,w
  8052  00C6  1903               	btfsc	3,2
  8053  00C7  28C9               	goto	u153_21
  8054  00C8  28CA               	goto	u153_20
  8055  00C9                     u153_21:
  8056  00C9  28CF               	goto	i1l2788
  8057  00CA                     u153_20:
  8058  00CA                     i1l2786:
  8059  00CA  082E               	movf	___flmul@bexp,w
  8060  00CB  1D03               	btfss	3,2
  8061  00CC  28CE               	goto	u154_21
  8062  00CD  28CF               	goto	u154_20
  8063  00CE                     u154_21:
  8064  00CE  28D8               	goto	i1l2792
  8065  00CF                     u154_20:
  8066  00CF                     i1l2788:
  8067  00CF  3000               	movlw	0
  8068  00D0  00A3               	movwf	?___flmul+3
  8069  00D1  3000               	movlw	0
  8070  00D2  00A2               	movwf	?___flmul+2
  8071  00D3  3000               	movlw	0
  8072  00D4  00A1               	movwf	?___flmul+1
  8073  00D5  3000               	movlw	0
  8074  00D6  00A0               	movwf	?___flmul
  8075  00D7  2AC6               	goto	i1l1407
  8076  00D8                     i1l2792:
  8077  00D8  0820               	movf	___flmul@b,w
  8078  00D9  00F9               	movwf	??___flmul
  8079  00DA  0879               	movf	??___flmul,w
  8080  00DB  00F0               	movwf	__Umul8_16@multiplicand
  8081  00DC  0826               	movf	___flmul@a+2,w
  8082  00DD  318F  2701  3180   	fcall	__Umul8_16
  8083  00E0  0871               	movf	?__Umul8_16+1,w
  8084  00E1  0020               	movlb	0	; select bank0
  8085  00E2  00B4               	movwf	___flmul@temp+1
  8086  00E3  0870               	movf	?__Umul8_16,w
  8087  00E4  00B3               	movwf	___flmul@temp
  8088  00E5                     i1l2794:
  8089  00E5  0833               	movf	___flmul@temp,w
  8090  00E6  00F9               	movwf	??___flmul
  8091  00E7  01FA               	clrf	??___flmul+1
  8092  00E8  01FB               	clrf	??___flmul+2
  8093  00E9  01FC               	clrf	??___flmul+3
  8094  00EA  087C               	movf	??___flmul+3,w
  8095  00EB  00AC               	movwf	___flmul@grs+3
  8096  00EC  087B               	movf	??___flmul+2,w
  8097  00ED  00AB               	movwf	___flmul@grs+2
  8098  00EE  087A               	movf	??___flmul+1,w
  8099  00EF  00AA               	movwf	___flmul@grs+1
  8100  00F0  0879               	movf	??___flmul,w
  8101  00F1  00A9               	movwf	___flmul@grs
  8102  00F2                     i1l2796:
  8103  00F2  0834               	movf	___flmul@temp+1,w
  8104  00F3  00F9               	movwf	??___flmul
  8105  00F4  01FA               	clrf	??___flmul+1
  8106  00F5  01FB               	clrf	??___flmul+2
  8107  00F6  01FC               	clrf	??___flmul+3
  8108  00F7  087C               	movf	??___flmul+3,w
  8109  00F8  00B2               	movwf	___flmul@prod+3
  8110  00F9  087B               	movf	??___flmul+2,w
  8111  00FA  00B1               	movwf	___flmul@prod+2
  8112  00FB  087A               	movf	??___flmul+1,w
  8113  00FC  00B0               	movwf	___flmul@prod+1
  8114  00FD  0879               	movf	??___flmul,w
  8115  00FE  00AF               	movwf	___flmul@prod
  8116  00FF  0821               	movf	___flmul@b+1,w
  8117  0100  00F9               	movwf	??___flmul
  8118  0101  0879               	movf	??___flmul,w
  8119  0102  00F0               	movwf	__Umul8_16@multiplicand
  8120  0103  0825               	movf	___flmul@a+1,w
  8121  0104  318F  2701  3180   	fcall	__Umul8_16
  8122  0107  0871               	movf	?__Umul8_16+1,w
  8123  0108  0020               	movlb	0	; select bank0
  8124  0109  00B4               	movwf	___flmul@temp+1
  8125  010A  0870               	movf	?__Umul8_16,w
  8126  010B  00B3               	movwf	___flmul@temp
  8127  010C                     i1l2798:
  8128  010C  0833               	movf	___flmul@temp,w
  8129  010D  00F9               	movwf	??___flmul
  8130  010E  01FA               	clrf	??___flmul+1
  8131  010F  01FB               	clrf	??___flmul+2
  8132  0110  01FC               	clrf	??___flmul+3
  8133  0111  0879               	movf	??___flmul,w
  8134  0112  07A9               	addwf	___flmul@grs,f
  8135  0113  087A               	movf	??___flmul+1,w
  8136  0114  3DAA               	addwfc	___flmul@grs+1,f
  8137  0115  087B               	movf	??___flmul+2,w
  8138  0116  3DAB               	addwfc	___flmul@grs+2,f
  8139  0117  087C               	movf	??___flmul+3,w
  8140  0118  3DAC               	addwfc	___flmul@grs+3,f
  8141  0119                     i1l2800:
  8142  0119  0834               	movf	___flmul@temp+1,w
  8143  011A  00F9               	movwf	??___flmul
  8144  011B  01FA               	clrf	??___flmul+1
  8145  011C  01FB               	clrf	??___flmul+2
  8146  011D  01FC               	clrf	??___flmul+3
  8147  011E  0879               	movf	??___flmul,w
  8148  011F  07AF               	addwf	___flmul@prod,f
  8149  0120  087A               	movf	??___flmul+1,w
  8150  0121  3DB0               	addwfc	___flmul@prod+1,f
  8151  0122  087B               	movf	??___flmul+2,w
  8152  0123  3DB1               	addwfc	___flmul@prod+2,f
  8153  0124  087C               	movf	??___flmul+3,w
  8154  0125  3DB2               	addwfc	___flmul@prod+3,f
  8155  0126  0822               	movf	___flmul@b+2,w
  8156  0127  00F9               	movwf	??___flmul
  8157  0128  0879               	movf	??___flmul,w
  8158  0129  00F0               	movwf	__Umul8_16@multiplicand
  8159  012A  0824               	movf	___flmul@a,w
  8160  012B  318F  2701  3180   	fcall	__Umul8_16
  8161  012E  0871               	movf	?__Umul8_16+1,w
  8162  012F  0020               	movlb	0	; select bank0
  8163  0130  00B4               	movwf	___flmul@temp+1
  8164  0131  0870               	movf	?__Umul8_16,w
  8165  0132  00B3               	movwf	___flmul@temp
  8166  0133                     i1l2802:
  8167  0133  0833               	movf	___flmul@temp,w
  8168  0134  00F9               	movwf	??___flmul
  8169  0135  01FA               	clrf	??___flmul+1
  8170  0136  01FB               	clrf	??___flmul+2
  8171  0137  01FC               	clrf	??___flmul+3
  8172  0138  0879               	movf	??___flmul,w
  8173  0139  07A9               	addwf	___flmul@grs,f
  8174  013A  087A               	movf	??___flmul+1,w
  8175  013B  3DAA               	addwfc	___flmul@grs+1,f
  8176  013C  087B               	movf	??___flmul+2,w
  8177  013D  3DAB               	addwfc	___flmul@grs+2,f
  8178  013E  087C               	movf	??___flmul+3,w
  8179  013F  3DAC               	addwfc	___flmul@grs+3,f
  8180  0140                     i1l2804:
  8181  0140  0834               	movf	___flmul@temp+1,w
  8182  0141  00F9               	movwf	??___flmul
  8183  0142  01FA               	clrf	??___flmul+1
  8184  0143  01FB               	clrf	??___flmul+2
  8185  0144  01FC               	clrf	??___flmul+3
  8186  0145  0879               	movf	??___flmul,w
  8187  0146  07AF               	addwf	___flmul@prod,f
  8188  0147  087A               	movf	??___flmul+1,w
  8189  0148  3DB0               	addwfc	___flmul@prod+1,f
  8190  0149  087B               	movf	??___flmul+2,w
  8191  014A  3DB1               	addwfc	___flmul@prod+2,f
  8192  014B  087C               	movf	??___flmul+3,w
  8193  014C  3DB2               	addwfc	___flmul@prod+3,f
  8194  014D                     i1l2806:
  8195  014D  3008               	movlw	8
  8196  014E                     u155_25:
  8197  014E  35A9               	lslf	___flmul@grs,f
  8198  014F  0DAA               	rlf	___flmul@grs+1,f
  8199  0150  0DAB               	rlf	___flmul@grs+2,f
  8200  0151  0DAC               	rlf	___flmul@grs+3,f
  8201  0152  0B89               	decfsz	9,f
  8202  0153  294E               	goto	u155_25
  8203  0154                     i1l2808:
  8204  0154  0821               	movf	___flmul@b+1,w
  8205  0155  00F9               	movwf	??___flmul
  8206  0156  0879               	movf	??___flmul,w
  8207  0157  00F0               	movwf	__Umul8_16@multiplicand
  8208  0158  0824               	movf	___flmul@a,w
  8209  0159  318F  2701  3180   	fcall	__Umul8_16
  8210  015C  0871               	movf	?__Umul8_16+1,w
  8211  015D  0020               	movlb	0	; select bank0
  8212  015E  00B4               	movwf	___flmul@temp+1
  8213  015F  0870               	movf	?__Umul8_16,w
  8214  0160  00B3               	movwf	___flmul@temp
  8215  0161                     i1l2810:
  8216  0161  0833               	movf	___flmul@temp,w
  8217  0162  07A9               	addwf	___flmul@grs,f
  8218  0163  0834               	movf	___flmul@temp+1,w
  8219  0164  3DAA               	addwfc	___flmul@grs+1,f
  8220  0165  3000               	movlw	0
  8221  0166  3DAB               	addwfc	___flmul@grs+2,f
  8222  0167  3DAC               	addwfc	___flmul@grs+3,f
  8223  0168                     i1l2812:
  8224  0168  0820               	movf	___flmul@b,w
  8225  0169  00F9               	movwf	??___flmul
  8226  016A  0879               	movf	??___flmul,w
  8227  016B  00F0               	movwf	__Umul8_16@multiplicand
  8228  016C  0825               	movf	___flmul@a+1,w
  8229  016D  318F  2701  3180   	fcall	__Umul8_16
  8230  0170  0871               	movf	?__Umul8_16+1,w
  8231  0171  0020               	movlb	0	; select bank0
  8232  0172  00B4               	movwf	___flmul@temp+1
  8233  0173  0870               	movf	?__Umul8_16,w
  8234  0174  00B3               	movwf	___flmul@temp
  8235  0175                     i1l2814:
  8236  0175  0833               	movf	___flmul@temp,w
  8237  0176  07A9               	addwf	___flmul@grs,f
  8238  0177  0834               	movf	___flmul@temp+1,w
  8239  0178  3DAA               	addwfc	___flmul@grs+1,f
  8240  0179  3000               	movlw	0
  8241  017A  3DAB               	addwfc	___flmul@grs+2,f
  8242  017B  3DAC               	addwfc	___flmul@grs+3,f
  8243  017C                     i1l2816:
  8244  017C  3008               	movlw	8
  8245  017D                     u156_25:
  8246  017D  35A9               	lslf	___flmul@grs,f
  8247  017E  0DAA               	rlf	___flmul@grs+1,f
  8248  017F  0DAB               	rlf	___flmul@grs+2,f
  8249  0180  0DAC               	rlf	___flmul@grs+3,f
  8250  0181  0B89               	decfsz	9,f
  8251  0182  297D               	goto	u156_25
  8252  0183  0820               	movf	___flmul@b,w
  8253  0184  00F9               	movwf	??___flmul
  8254  0185  0879               	movf	??___flmul,w
  8255  0186  00F0               	movwf	__Umul8_16@multiplicand
  8256  0187  0824               	movf	___flmul@a,w
  8257  0188  318F  2701  3180   	fcall	__Umul8_16
  8258  018B  0871               	movf	?__Umul8_16+1,w
  8259  018C  0020               	movlb	0	; select bank0
  8260  018D  00B4               	movwf	___flmul@temp+1
  8261  018E  0870               	movf	?__Umul8_16,w
  8262  018F  00B3               	movwf	___flmul@temp
  8263  0190                     i1l2818:
  8264  0190  0833               	movf	___flmul@temp,w
  8265  0191  07A9               	addwf	___flmul@grs,f
  8266  0192  0834               	movf	___flmul@temp+1,w
  8267  0193  3DAA               	addwfc	___flmul@grs+1,f
  8268  0194  3000               	movlw	0
  8269  0195  3DAB               	addwfc	___flmul@grs+2,f
  8270  0196  3DAC               	addwfc	___flmul@grs+3,f
  8271  0197                     i1l2820:
  8272  0197  0821               	movf	___flmul@b+1,w
  8273  0198  00F9               	movwf	??___flmul
  8274  0199  0879               	movf	??___flmul,w
  8275  019A  00F0               	movwf	__Umul8_16@multiplicand
  8276  019B  0826               	movf	___flmul@a+2,w
  8277  019C  318F  2701  3180   	fcall	__Umul8_16
  8278  019F  0871               	movf	?__Umul8_16+1,w
  8279  01A0  0020               	movlb	0	; select bank0
  8280  01A1  00B4               	movwf	___flmul@temp+1
  8281  01A2  0870               	movf	?__Umul8_16,w
  8282  01A3  00B3               	movwf	___flmul@temp
  8283  01A4  0833               	movf	___flmul@temp,w
  8284  01A5  07AF               	addwf	___flmul@prod,f
  8285  01A6  0834               	movf	___flmul@temp+1,w
  8286  01A7  3DB0               	addwfc	___flmul@prod+1,f
  8287  01A8  3000               	movlw	0
  8288  01A9  3DB1               	addwfc	___flmul@prod+2,f
  8289  01AA  3DB2               	addwfc	___flmul@prod+3,f
  8290  01AB                     i1l2822:
  8291  01AB  0822               	movf	___flmul@b+2,w
  8292  01AC  00F9               	movwf	??___flmul
  8293  01AD  0879               	movf	??___flmul,w
  8294  01AE  00F0               	movwf	__Umul8_16@multiplicand
  8295  01AF  0825               	movf	___flmul@a+1,w
  8296  01B0  318F  2701  3180   	fcall	__Umul8_16
  8297  01B3  0871               	movf	?__Umul8_16+1,w
  8298  01B4  0020               	movlb	0	; select bank0
  8299  01B5  00B4               	movwf	___flmul@temp+1
  8300  01B6  0870               	movf	?__Umul8_16,w
  8301  01B7  00B3               	movwf	___flmul@temp
  8302  01B8                     i1l2824:
  8303  01B8  0833               	movf	___flmul@temp,w
  8304  01B9  07AF               	addwf	___flmul@prod,f
  8305  01BA  0834               	movf	___flmul@temp+1,w
  8306  01BB  3DB0               	addwfc	___flmul@prod+1,f
  8307  01BC  3000               	movlw	0
  8308  01BD  3DB1               	addwfc	___flmul@prod+2,f
  8309  01BE  3DB2               	addwfc	___flmul@prod+3,f
  8310  01BF  0822               	movf	___flmul@b+2,w
  8311  01C0  00F9               	movwf	??___flmul
  8312  01C1  0879               	movf	??___flmul,w
  8313  01C2  00F0               	movwf	__Umul8_16@multiplicand
  8314  01C3  0826               	movf	___flmul@a+2,w
  8315  01C4  318F  2701  3180   	fcall	__Umul8_16
  8316  01C7  0871               	movf	?__Umul8_16+1,w
  8317  01C8  0020               	movlb	0	; select bank0
  8318  01C9  00B4               	movwf	___flmul@temp+1
  8319  01CA  0870               	movf	?__Umul8_16,w
  8320  01CB  00B3               	movwf	___flmul@temp
  8321  01CC                     i1l2826:
  8322  01CC  0833               	movf	___flmul@temp,w
  8323  01CD  00F9               	movwf	??___flmul
  8324  01CE  0834               	movf	___flmul@temp+1,w
  8325  01CF  00FA               	movwf	??___flmul+1
  8326  01D0  01FB               	clrf	??___flmul+2
  8327  01D1  01FC               	clrf	??___flmul+3
  8328  01D2  3008               	movlw	8
  8329  01D3                     u157_25:
  8330  01D3  35F9               	lslf	??___flmul,f
  8331  01D4  0DFA               	rlf	??___flmul+1,f
  8332  01D5  0DFB               	rlf	??___flmul+2,f
  8333  01D6  0DFC               	rlf	??___flmul+3,f
  8334  01D7                     u157_20:
  8335  01D7  0B89               	decfsz	9,f
  8336  01D8  29D3               	goto	u157_25
  8337  01D9  0879               	movf	??___flmul,w
  8338  01DA  07AF               	addwf	___flmul@prod,f
  8339  01DB  087A               	movf	??___flmul+1,w
  8340  01DC  3DB0               	addwfc	___flmul@prod+1,f
  8341  01DD  087B               	movf	??___flmul+2,w
  8342  01DE  3DB1               	addwfc	___flmul@prod+2,f
  8343  01DF  087C               	movf	??___flmul+3,w
  8344  01E0  3DB2               	addwfc	___flmul@prod+3,f
  8345  01E1                     i1l2828:
  8346  01E1  0829               	movf	___flmul@grs,w
  8347  01E2  00F9               	movwf	??___flmul
  8348  01E3  082A               	movf	___flmul@grs+1,w
  8349  01E4  00FA               	movwf	??___flmul+1
  8350  01E5  082B               	movf	___flmul@grs+2,w
  8351  01E6  00FB               	movwf	??___flmul+2
  8352  01E7  082C               	movf	___flmul@grs+3,w
  8353  01E8  00FC               	movwf	??___flmul+3
  8354  01E9  3018               	movlw	24
  8355  01EA                     u158_25:
  8356  01EA  36FC               	lsrf	??___flmul+3,f
  8357  01EB  0CFB               	rrf	??___flmul+2,f
  8358  01EC  0CFA               	rrf	??___flmul+1,f
  8359  01ED  0CF9               	rrf	??___flmul,f
  8360  01EE                     u158_20:
  8361  01EE  0B89               	decfsz	9,f
  8362  01EF  29EA               	goto	u158_25
  8363  01F0  0879               	movf	??___flmul,w
  8364  01F1  07AF               	addwf	___flmul@prod,f
  8365  01F2  087A               	movf	??___flmul+1,w
  8366  01F3  3DB0               	addwfc	___flmul@prod+1,f
  8367  01F4  087B               	movf	??___flmul+2,w
  8368  01F5  3DB1               	addwfc	___flmul@prod+2,f
  8369  01F6  087C               	movf	??___flmul+3,w
  8370  01F7  3DB2               	addwfc	___flmul@prod+3,f
  8371  01F8                     i1l2830:
  8372  01F8  3008               	movlw	8
  8373  01F9                     u159_25:
  8374  01F9  35A9               	lslf	___flmul@grs,f
  8375  01FA  0DAA               	rlf	___flmul@grs+1,f
  8376  01FB  0DAB               	rlf	___flmul@grs+2,f
  8377  01FC  0DAC               	rlf	___flmul@grs+3,f
  8378  01FD  0B89               	decfsz	9,f
  8379  01FE  29F9               	goto	u159_25
  8380  01FF                     i1l2832:
  8381  01FF  082E               	movf	___flmul@bexp,w
  8382  0200  072D               	addwf	___flmul@aexp,w
  8383  0201  00F9               	movwf	??___flmul
  8384  0202  01FA               	clrf	??___flmul+1
  8385  0203  0DFA               	rlf	??___flmul+1,f
  8386  0204  0879               	movf	??___flmul,w
  8387  0205  3E82               	addlw	130
  8388  0206  00B3               	movwf	___flmul@temp
  8389  0207  30FF               	movlw	255
  8390  0208  3D7A               	addwfc	??___flmul+1,w
  8391  0209  00B4               	movwf	___flmul@temp+1
  8392  020A  2A22               	goto	i1l2844
  8393  020B                     i1l2834:
  8394  020B  3001               	movlw	1
  8395  020C                     u160_25:
  8396  020C  35AF               	lslf	___flmul@prod,f
  8397  020D  0DB0               	rlf	___flmul@prod+1,f
  8398  020E  0DB1               	rlf	___flmul@prod+2,f
  8399  020F  0DB2               	rlf	___flmul@prod+3,f
  8400  0210  0B89               	decfsz	9,f
  8401  0211  2A0C               	goto	u160_25
  8402  0212                     i1l2836:
  8403  0212  1FAC               	btfss	___flmul@grs+3,7
  8404  0213  2A15               	goto	u161_21
  8405  0214  2A16               	goto	u161_20
  8406  0215                     u161_21:
  8407  0215  2A17               	goto	i1l2840
  8408  0216                     u161_20:
  8409  0216                     i1l2838:
  8410  0216  142F               	bsf	___flmul@prod,0
  8411  0217                     i1l2840:
  8412  0217  3001               	movlw	1
  8413  0218                     u162_25:
  8414  0218  35A9               	lslf	___flmul@grs,f
  8415  0219  0DAA               	rlf	___flmul@grs+1,f
  8416  021A  0DAB               	rlf	___flmul@grs+2,f
  8417  021B  0DAC               	rlf	___flmul@grs+3,f
  8418  021C  0B89               	decfsz	9,f
  8419  021D  2A18               	goto	u162_25
  8420  021E                     i1l2842:
  8421  021E  30FF               	movlw	255
  8422  021F  07B3               	addwf	___flmul@temp,f
  8423  0220  30FF               	movlw	255
  8424  0221  3DB4               	addwfc	___flmul@temp+1,f
  8425  0222                     i1l2844:
  8426  0222  1FB1               	btfss	___flmul@prod+2,7
  8427  0223  2A25               	goto	u163_21
  8428  0224  2A26               	goto	u163_20
  8429  0225                     u163_21:
  8430  0225  2A0B               	goto	i1l2834
  8431  0226                     u163_20:
  8432  0226                     i1l2846:
  8433  0226  01AD               	clrf	___flmul@aexp
  8434  0227                     i1l2848:
  8435  0227  1FAC               	btfss	___flmul@grs+3,7
  8436  0228  2A2A               	goto	u164_21
  8437  0229  2A2B               	goto	u164_20
  8438  022A                     u164_21:
  8439  022A  2A47               	goto	i1l2856
  8440  022B                     u164_20:
  8441  022B                     i1l2850:
  8442  022B  30FF               	movlw	255
  8443  022C  0529               	andwf	___flmul@grs,w
  8444  022D  00F9               	movwf	??___flmul
  8445  022E  30FF               	movlw	255
  8446  022F  052A               	andwf	___flmul@grs+1,w
  8447  0230  00FA               	movwf	??___flmul+1
  8448  0231  30FF               	movlw	255
  8449  0232  052B               	andwf	___flmul@grs+2,w
  8450  0233  00FB               	movwf	??___flmul+2
  8451  0234  307F               	movlw	127
  8452  0235  052C               	andwf	___flmul@grs+3,w
  8453  0236  00FC               	movwf	??___flmul+3
  8454  0237  087C               	movf	??___flmul+3,w
  8455  0238  047B               	iorwf	??___flmul+2,w
  8456  0239  047A               	iorwf	??___flmul+1,w
  8457  023A  0479               	iorwf	??___flmul,w
  8458  023B  1903               	skipnz
  8459  023C  2A3E               	goto	u165_21
  8460  023D  2A3F               	goto	u165_20
  8461  023E                     u165_21:
  8462  023E  2A42               	goto	i1l1413
  8463  023F                     u165_20:
  8464  023F                     i1l2852:
  8465  023F  01AD               	clrf	___flmul@aexp
  8466  0240  0AAD               	incf	___flmul@aexp,f
  8467  0241  2A47               	goto	i1l2856
  8468  0242                     i1l1413:
  8469  0242  1C2F               	btfss	___flmul@prod,0
  8470  0243  2A45               	goto	u166_21
  8471  0244  2A46               	goto	u166_20
  8472  0245                     u166_21:
  8473  0245  2A47               	goto	i1l2856
  8474  0246                     u166_20:
  8475  0246  2A3F               	goto	i1l2852
  8476  0247                     i1l2856:
  8477  0247  082D               	movf	___flmul@aexp,w
  8478  0248  1903               	btfsc	3,2
  8479  0249  2A4B               	goto	u167_21
  8480  024A  2A4C               	goto	u167_20
  8481  024B                     u167_21:
  8482  024B  2A74               	goto	i1l2866
  8483  024C                     u167_20:
  8484  024C                     i1l2858:
  8485  024C  3001               	movlw	1
  8486  024D  07AF               	addwf	___flmul@prod,f
  8487  024E  3000               	movlw	0
  8488  024F  3DB0               	addwfc	___flmul@prod+1,f
  8489  0250  3000               	movlw	0
  8490  0251  3DB1               	addwfc	___flmul@prod+2,f
  8491  0252  3000               	movlw	0
  8492  0253  3DB2               	addwfc	___flmul@prod+3,f
  8493  0254                     i1l2860:
  8494  0254  1C32               	btfss	___flmul@prod+3,0
  8495  0255  2A57               	goto	u168_21
  8496  0256  2A58               	goto	u168_20
  8497  0257                     u168_21:
  8498  0257  2A74               	goto	i1l2866
  8499  0258                     u168_20:
  8500  0258                     i1l2862:
  8501  0258  082F               	movf	___flmul@prod,w
  8502  0259  00F9               	movwf	??___flmul
  8503  025A  0830               	movf	___flmul@prod+1,w
  8504  025B  00FA               	movwf	??___flmul+1
  8505  025C  0831               	movf	___flmul@prod+2,w
  8506  025D  00FB               	movwf	??___flmul+2
  8507  025E  0832               	movf	___flmul@prod+3,w
  8508  025F  00FC               	movwf	??___flmul+3
  8509  0260  3001               	movlw	1
  8510  0261  00FD               	movwf	??___flmul+4
  8511  0262                     u169_25:
  8512  0262  37FC               	asrf	??___flmul+3,f
  8513  0263  0CFB               	rrf	??___flmul+2,f
  8514  0264  0CFA               	rrf	??___flmul+1,f
  8515  0265  0CF9               	rrf	??___flmul,f
  8516  0266                     u169_20:
  8517  0266  0BFD               	decfsz	??___flmul+4,f
  8518  0267  2A62               	goto	u169_25
  8519  0268  087C               	movf	??___flmul+3,w
  8520  0269  00B2               	movwf	___flmul@prod+3
  8521  026A  087B               	movf	??___flmul+2,w
  8522  026B  00B1               	movwf	___flmul@prod+2
  8523  026C  087A               	movf	??___flmul+1,w
  8524  026D  00B0               	movwf	___flmul@prod+1
  8525  026E  0879               	movf	??___flmul,w
  8526  026F  00AF               	movwf	___flmul@prod
  8527  0270                     i1l2864:
  8528  0270  3001               	movlw	1
  8529  0271  07B3               	addwf	___flmul@temp,f
  8530  0272  3000               	movlw	0
  8531  0273  3DB4               	addwfc	___flmul@temp+1,f
  8532  0274                     i1l2866:
  8533  0274  0834               	movf	___flmul@temp+1,w
  8534  0275  3A80               	xorlw	128
  8535  0276  00F9               	movwf	??___flmul
  8536  0277  3080               	movlw	128
  8537  0278  0279               	subwf	??___flmul,w
  8538  0279  1D03               	skipz
  8539  027A  2A7D               	goto	u170_25
  8540  027B  30FF               	movlw	255
  8541  027C  0233               	subwf	___flmul@temp,w
  8542  027D                     u170_25:
  8543  027D  1C03               	skipc
  8544  027E  2A80               	goto	u170_21
  8545  027F  2A81               	goto	u170_20
  8546  0280                     u170_21:
  8547  0280  2A8B               	goto	i1l2870
  8548  0281                     u170_20:
  8549  0281                     i1l2868:
  8550  0281  307F               	movlw	127
  8551  0282  0020               	movlb	0	; select bank0
  8552  0283  00B2               	movwf	___flmul@prod+3
  8553  0284  3080               	movlw	128
  8554  0285  00B1               	movwf	___flmul@prod+2
  8555  0286  3000               	movlw	0
  8556  0287  00B0               	movwf	___flmul@prod+1
  8557  0288  3000               	movlw	0
  8558  0289  00AF               	movwf	___flmul@prod
  8559  028A  2ABA               	goto	i1l1419
  8560  028B                     i1l2870:
  8561  028B  0020               	movlb	0	; select bank0
  8562  028C  0834               	movf	___flmul@temp+1,w
  8563  028D  3A80               	xorlw	128
  8564  028E  00F9               	movwf	??___flmul
  8565  028F  3080               	movlw	128
  8566  0290  0279               	subwf	??___flmul,w
  8567  0291  1D03               	skipz
  8568  0292  2A95               	goto	u171_25
  8569  0293  3001               	movlw	1
  8570  0294  0233               	subwf	___flmul@temp,w
  8571  0295                     u171_25:
  8572  0295  1803               	skipnc
  8573  0296  2A98               	goto	u171_21
  8574  0297  2A99               	goto	u171_20
  8575  0298                     u171_21:
  8576  0298  2AA4               	goto	i1l2876
  8577  0299                     u171_20:
  8578  0299                     i1l2872:
  8579  0299  3000               	movlw	0
  8580  029A  0020               	movlb	0	; select bank0
  8581  029B  00B2               	movwf	___flmul@prod+3
  8582  029C  3000               	movlw	0
  8583  029D  00B1               	movwf	___flmul@prod+2
  8584  029E  3000               	movlw	0
  8585  029F  00B0               	movwf	___flmul@prod+1
  8586  02A0  3000               	movlw	0
  8587  02A1  00AF               	movwf	___flmul@prod
  8588  02A2                     i1l2874:
  8589  02A2  01A8               	clrf	___flmul@sign
  8590  02A3  2ABA               	goto	i1l1419
  8591  02A4                     i1l2876:
  8592  02A4  0020               	movlb	0	; select bank0
  8593  02A5  0833               	movf	___flmul@temp,w
  8594  02A6  00F9               	movwf	??___flmul
  8595  02A7  0879               	movf	??___flmul,w
  8596  02A8  00AE               	movwf	___flmul@bexp
  8597  02A9  30FF               	movlw	255
  8598  02AA  05AF               	andwf	___flmul@prod,f
  8599  02AB  30FF               	movlw	255
  8600  02AC  05B0               	andwf	___flmul@prod+1,f
  8601  02AD  307F               	movlw	127
  8602  02AE  05B1               	andwf	___flmul@prod+2,f
  8603  02AF  3000               	movlw	0
  8604  02B0  05B2               	andwf	___flmul@prod+3,f
  8605  02B1                     i1l2878:
  8606  02B1  1C2E               	btfss	___flmul@bexp,0
  8607  02B2  2AB4               	goto	u172_21
  8608  02B3  2AB5               	goto	u172_20
  8609  02B4                     u172_21:
  8610  02B4  2AB6               	goto	i1l2882
  8611  02B5                     u172_20:
  8612  02B5                     i1l2880:
  8613  02B5  17B1               	bsf	___flmul@prod+2,7
  8614  02B6                     i1l2882:
  8615  02B6  362E               	lsrf	___flmul@bexp,w
  8616  02B7  00F9               	movwf	??___flmul
  8617  02B8  0879               	movf	??___flmul,w
  8618  02B9  00B2               	movwf	___flmul@prod+3
  8619  02BA                     i1l1419:
  8620  02BA  0828               	movf	___flmul@sign,w
  8621  02BB  00F9               	movwf	??___flmul
  8622  02BC  0879               	movf	??___flmul,w
  8623  02BD  04B2               	iorwf	___flmul@prod+3,f
  8624  02BE                     i1l2884:
  8625  02BE  0832               	movf	___flmul@prod+3,w
  8626  02BF  00A3               	movwf	?___flmul+3
  8627  02C0  0831               	movf	___flmul@prod+2,w
  8628  02C1  00A2               	movwf	?___flmul+2
  8629  02C2  0830               	movf	___flmul@prod+1,w
  8630  02C3  00A1               	movwf	?___flmul+1
  8631  02C4  082F               	movf	___flmul@prod,w
  8632  02C5  00A0               	movwf	?___flmul
  8633  02C6                     i1l1407:
  8634  02C6  0008               	return
  8635  02C7                     __end_of___flmul:
  8636                           
  8637                           	psect	text45
  8638  0F01                     __ptext45:	
  8639 ;; *************** function __Umul8_16 *****************
  8640 ;; Defined at:
  8641 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  multiplier      1    wreg     unsigned char 
  8644 ;;  multiplicand    1    0[COMMON] unsigned char 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  multiplier      1    8[COMMON] unsigned char 
  8647 ;;  word_mpld       2    6[COMMON] unsigned int 
  8648 ;;  product         2    4[COMMON] unsigned int 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  2    0[COMMON] unsigned int 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8658 ;;      Params:         2       0       0       0       0       0
  8659 ;;      Locals:         5       0       0       0       0       0
  8660 ;;      Temps:          2       0       0       0       0       0
  8661 ;;      Totals:         9       0       0       0       0       0
  8662 ;;Total ram usage:        9 bytes
  8663 ;; Hardware stack levels used: 1
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		___flmul
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671  0F01                     __Umul8_16:	
  8672                           ;psect for function __Umul8_16
  8673                           
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8677                           ;__Umul8_16@multiplier stored from wreg
  8678  0F01  00F8               	movwf	__Umul8_16@multiplier
  8679  0F02                     i1l2604:
  8680  0F02  01F4               	clrf	__Umul8_16@product
  8681  0F03  01F5               	clrf	__Umul8_16@product+1
  8682  0F04                     i1l2606:
  8683  0F04  0870               	movf	__Umul8_16@multiplicand,w
  8684  0F05  00F2               	movwf	??__Umul8_16
  8685  0F06  01F3               	clrf	??__Umul8_16+1
  8686  0F07  0872               	movf	??__Umul8_16,w
  8687  0F08  00F6               	movwf	__Umul8_16@word_mpld
  8688  0F09  0873               	movf	??__Umul8_16+1,w
  8689  0F0A  00F7               	movwf	__Umul8_16@word_mpld+1
  8690  0F0B                     i1l2608:
  8691  0F0B  1C78               	btfss	__Umul8_16@multiplier,0
  8692  0F0C  2F0E               	goto	u120_21
  8693  0F0D  2F0F               	goto	u120_20
  8694  0F0E                     u120_21:
  8695  0F0E  2F13               	goto	i1l1426
  8696  0F0F                     u120_20:
  8697  0F0F                     i1l2610:
  8698  0F0F  0876               	movf	__Umul8_16@word_mpld,w
  8699  0F10  07F4               	addwf	__Umul8_16@product,f
  8700  0F11  0877               	movf	__Umul8_16@word_mpld+1,w
  8701  0F12  3DF5               	addwfc	__Umul8_16@product+1,f
  8702  0F13                     i1l1426:
  8703  0F13  3001               	movlw	1
  8704  0F14                     u121_25:
  8705  0F14  35F6               	lslf	__Umul8_16@word_mpld,f
  8706  0F15  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8707  0F16  0B89               	decfsz	9,f
  8708  0F17  2F14               	goto	u121_25
  8709  0F18  1003               	clrc
  8710  0F19  0CF8               	rrf	__Umul8_16@multiplier,f
  8711  0F1A                     i1l2612:
  8712  0F1A  0878               	movf	__Umul8_16@multiplier,w
  8713  0F1B  1D03               	btfss	3,2
  8714  0F1C  2F1E               	goto	u122_21
  8715  0F1D  2F1F               	goto	u122_20
  8716  0F1E                     u122_21:
  8717  0F1E  2F0B               	goto	i1l2608
  8718  0F1F                     u122_20:
  8719  0F1F                     i1l2614:
  8720  0F1F  0875               	movf	__Umul8_16@product+1,w
  8721  0F20  00F1               	movwf	?__Umul8_16+1
  8722  0F21  0874               	movf	__Umul8_16@product,w
  8723  0F22  00F0               	movwf	?__Umul8_16
  8724  0F23                     i1l1428:
  8725  0F23  0008               	return
  8726  0F24                     __end_of__Umul8_16:
  8727                           
  8728                           	psect	text46
  8729  0D71                     __ptext46:	
  8730 ;; *************** function _EUSART_Write *****************
  8731 ;; Defined at:
  8732 ;;		line 132 in file "mcc_generated_files/eusart.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  txData          1    wreg     unsigned char 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  txData          1    0[COMMON] unsigned char 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  1    wreg      void 
  8739 ;; Registers used:
  8740 ;;		wreg
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8746 ;;      Params:         0       0       0       0       0       0
  8747 ;;      Locals:         1       0       0       0       0       0
  8748 ;;      Temps:          0       0       0       0       0       0
  8749 ;;      Totals:         1       0       0       0       0       0
  8750 ;;Total ram usage:        1 bytes
  8751 ;; Hardware stack levels used: 1
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_sendInfo
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759  0D71                     _EUSART_Write:	
  8760                           ;psect for function _EUSART_Write
  8761                           
  8762                           
  8763                           ;incstack = 0
  8764                           ; Regs used in _EUSART_Write: [wreg]
  8765                           ;EUSART_Write@txData stored from wreg
  8766  0D71  00F0               	movwf	EUSART_Write@txData
  8767  0D72                     i1l2634:
  8768  0D72                     i1l376:	
  8769                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  8770                           
  8771                           
  8772                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  8773  0D72  0020               	movlb	0	; select bank0
  8774  0D73  1E11               	btfss	17,4	;volatile
  8775  0D74  2D76               	goto	u124_21
  8776  0D75  2D77               	goto	u124_20
  8777  0D76                     u124_21:
  8778  0D76  2D72               	goto	i1l376
  8779  0D77                     u124_20:
  8780  0D77                     i1l2636:
  8781                           
  8782                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  8783  0D77  0870               	movf	EUSART_Write@txData,w
  8784  0D78  0023               	movlb	3	; select bank3
  8785  0D79  009A               	movwf	26	;volatile
  8786  0D7A                     i1l379:
  8787  0D7A  0008               	return
  8788  0D7B                     __end_of_EUSART_Write:
  8789                           
  8790                           	psect	text47
  8791  0EA8                     __ptext47:	
  8792 ;; *************** function _ADC_GetConversion *****************
  8793 ;; Defined at:
  8794 ;;		line 112 in file "mcc_generated_files/adc.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  channel         1    wreg     enum E2485
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  channel         1    3[COMMON] enum E2485
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  2    0[COMMON] unsigned short 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8808 ;;      Params:         2       0       0       0       0       0
  8809 ;;      Locals:         1       0       0       0       0       0
  8810 ;;      Temps:          1       0       0       0       0       0
  8811 ;;      Totals:         4       0       0       0       0       0
  8812 ;;Total ram usage:        4 bytes
  8813 ;; Hardware stack levels used: 1
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_sendInfo
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821  0EA8                     _ADC_GetConversion:	
  8822                           ;psect for function _ADC_GetConversion
  8823                           
  8824                           
  8825                           ;incstack = 0
  8826                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  8827                           ;ADC_GetConversion@channel stored from wreg
  8828  0EA8  00F3               	movwf	ADC_GetConversion@channel
  8829  0EA9                     i1l2622:
  8830                           
  8831                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  8832  0EA9  0873               	movf	ADC_GetConversion@channel,w
  8833  0EAA  00F2               	movwf	??_ADC_GetConversion
  8834  0EAB  0DF2               	rlf	??_ADC_GetConversion,f
  8835  0EAC  0DF2               	rlf	??_ADC_GetConversion,f
  8836  0EAD  0021               	movlb	1	; select bank1
  8837  0EAE  081D               	movf	29,w	;volatile
  8838  0EAF  0672               	xorwf	??_ADC_GetConversion,w
  8839  0EB0  3983               	andlw	-125
  8840  0EB1  0672               	xorwf	??_ADC_GetConversion,w
  8841  0EB2  009D               	movwf	29	;volatile
  8842  0EB3                     i1l2624:
  8843                           
  8844                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  8845  0EB3  141D               	bsf	29,0	;volatile
  8846  0EB4                     i1l2626:
  8847                           
  8848                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8849  0EB4  3200               	nop2	;2 cycle nop
  8850  0EB5  3200               	nop2	;2 cycle nop
  8851  0EB6  0000               	nop
  8852  0EB7                     i1l2628:
  8853                           
  8854                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  8855  0EB7  0021               	movlb	1	; select bank1
  8856  0EB8  149D               	bsf	29,1	;volatile
  8857  0EB9                     i1l293:	
  8858                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  8859                           
  8860                           
  8861                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  8862  0EB9  189D               	btfsc	29,1	;volatile
  8863  0EBA  2EBC               	goto	u123_21
  8864  0EBB  2EBD               	goto	u123_20
  8865  0EBC                     u123_21:
  8866  0EBC  2EB9               	goto	i1l293
  8867  0EBD                     u123_20:
  8868  0EBD                     i1l2630:
  8869                           
  8870                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8871  0EBD  081C               	movf	28,w	;volatile
  8872  0EBE  00F1               	movwf	?_ADC_GetConversion+1
  8873  0EBF  081B               	movf	27,w	;volatile
  8874  0EC0  00F0               	movwf	?_ADC_GetConversion
  8875  0EC1                     i1l296:
  8876  0EC1  0008               	return
  8877  0EC2                     __end_of_ADC_GetConversion:
  8878                           
  8879                           	psect	text48
  8880  0E03                     __ptext48:	
  8881 ;; *************** function _PIN_MANAGER_IOC *****************
  8882 ;; Defined at:
  8883 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;		None
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8897 ;;      Params:         0       0       0       0       0       0
  8898 ;;      Locals:         0       0       0       0       0       0
  8899 ;;      Temps:          0       0       0       0       0       0
  8900 ;;      Totals:         0       0       0       0       0       0
  8901 ;;Total ram usage:        0 bytes
  8902 ;; Hardware stack levels used: 1
  8903 ;; Hardware stack levels required when called: 5
  8904 ;; This function calls:
  8905 ;;		_IOCBF0_ISR
  8906 ;;		_IOCBF3_ISR
  8907 ;; This function is called by:
  8908 ;;		_INTERRUPT_InterruptManager
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912  0E03                     _PIN_MANAGER_IOC:	
  8913                           ;psect for function _PIN_MANAGER_IOC
  8914                           
  8915  0E03                     i1l3212:	
  8916                           ;incstack = 0
  8917                           ; Regs used in _PIN_MANAGER_IOC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8918                           
  8919                           
  8920                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  8921  0E03  0027               	movlb	7	; select bank7
  8922  0E04  1C16               	btfss	22,0	;volatile
  8923  0E05  2E07               	goto	u184_21
  8924  0E06  2E08               	goto	u184_20
  8925  0E07                     u184_21:
  8926  0E07  2E0B               	goto	i1l3216
  8927  0E08                     u184_20:
  8928  0E08                     i1l3214:
  8929                           
  8930                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  8931  0E08  318D  25C6  318E   	fcall	_IOCBF0_ISR
  8932  0E0B                     i1l3216:
  8933                           
  8934                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  8935  0E0B  0027               	movlb	7	; select bank7
  8936  0E0C  1D96               	btfss	22,3	;volatile
  8937  0E0D  2E0F               	goto	u185_21
  8938  0E0E  2E10               	goto	u185_20
  8939  0E0F                     u185_21:
  8940  0E0F  2E13               	goto	i1l194
  8941  0E10                     u185_20:
  8942  0E10                     i1l3218:
  8943                           
  8944                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  8945  0E10  318D  25D5  318E   	fcall	_IOCBF3_ISR
  8946  0E13                     i1l194:
  8947  0E13  0008               	return
  8948  0E14                     __end_of_PIN_MANAGER_IOC:
  8949                           
  8950                           	psect	text49
  8951  0DD5                     __ptext49:	
  8952 ;; *************** function _IOCBF3_ISR *****************
  8953 ;; Defined at:
  8954 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;		None
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      void 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8968 ;;      Params:         0       0       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0
  8971 ;;      Totals:         0       0       0       0       0       0
  8972 ;;Total ram usage:        0 bytes
  8973 ;; Hardware stack levels used: 1
  8974 ;; Hardware stack levels required when called: 4
  8975 ;; This function calls:
  8976 ;;		Absolute function
  8977 ;;		_IOCBF3_DefaultInterruptHandler
  8978 ;;		_chegadaS1
  8979 ;;		_chegadaS2
  8980 ;; This function is called by:
  8981 ;;		_PIN_MANAGER_IOC
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985  0DD5                     _IOCBF3_ISR:	
  8986                           ;psect for function _IOCBF3_ISR
  8987                           
  8988  0DD5                     i1l3092:	
  8989                           ;incstack = 0
  8990                           ; Regs used in _IOCBF3_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8991                           
  8992                           
  8993                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  8994  0DD5  0020               	movlb	0	; select bank0
  8995  0DD6  0865               	movf	_IOCBF3_InterruptHandler,w
  8996  0DD7  0466               	iorwf	_IOCBF3_InterruptHandler+1,w
  8997  0DD8  1903               	btfsc	3,2
  8998  0DD9  2DDB               	goto	u181_21
  8999  0DDA  2DDC               	goto	u181_20
  9000  0DDB                     u181_21:
  9001  0DDB  2DE1               	goto	i1l3096
  9002  0DDC                     u181_20:
  9003  0DDC                     i1l3094:
  9004                           
  9005                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  9006  0DDC  0866               	movf	_IOCBF3_InterruptHandler+1,w
  9007  0DDD  008A               	movwf	10
  9008  0DDE  0865               	movf	_IOCBF3_InterruptHandler,w
  9009  0DDF  000A               	callw
  9010  0DE0  318D               	pagesel	$
  9011  0DE1                     i1l3096:
  9012                           
  9013                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  9014  0DE1  0027               	movlb	7	; select bank7
  9015  0DE2  1196               	bcf	22,3	;volatile
  9016  0DE3                     i1l208:
  9017  0DE3  0008               	return
  9018  0DE4                     __end_of_IOCBF3_ISR:
  9019                           
  9020                           	psect	text50
  9021  07AE                     __ptext50:	
  9022 ;; *************** function _chegadaS1 *****************
  9023 ;; Defined at:
  9024 ;;		line 166 in file "main.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;		None
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;		None
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  1    wreg      void 
  9031 ;; Registers used:
  9032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9038 ;;      Params:         0       0       0       0       0       0
  9039 ;;      Locals:         0       0       0       0       0       0
  9040 ;;      Temps:          1       0       0       0       0       0
  9041 ;;      Totals:         1       0       0       0       0       0
  9042 ;;Total ram usage:        1 bytes
  9043 ;; Hardware stack levels used: 1
  9044 ;; Hardware stack levels required when called: 3
  9045 ;; This function calls:
  9046 ;;		_matrixUpdate
  9047 ;; This function is called by:
  9048 ;;		_main
  9049 ;;		_IOCBF3_ISR
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053  07AE                     _chegadaS1:	
  9054                           ;psect for function _chegadaS1
  9055                           
  9056  07AE                     i1l2942:	
  9057                           ;incstack = 0
  9058                           ; Regs used in _chegadaS1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9059                           
  9060                           
  9061                           ;main.c: 168:     andarAtual = 0;
  9062  07AE  0020               	movlb	0	; select bank0
  9063  07AF  01DA               	clrf	_andarAtual
  9064  07B0                     i1l2944:
  9065                           
  9066                           ;main.c: 170:     MatrixLed[0] = 0b01111110;
  9067  07B0  307E               	movlw	126
  9068  07B1  00FC               	movwf	??_chegadaS1
  9069  07B2  087C               	movf	??_chegadaS1,w
  9070  07B3  0021               	movlb	1	; select bank1
  9071  07B4  00C1               	movwf	_MatrixLed^(0+128)
  9072  07B5                     i1l2946:
  9073                           
  9074                           ;main.c: 171:     MatrixLed[1] = 0b10000001;
  9075  07B5  3081               	movlw	129
  9076  07B6  00FC               	movwf	??_chegadaS1
  9077  07B7  087C               	movf	??_chegadaS1,w
  9078  07B8  00C2               	movwf	(_MatrixLed^(0+128)+1)
  9079  07B9                     i1l2948:
  9080                           
  9081                           ;main.c: 172:     MatrixLed[2] = 0b10000001;
  9082  07B9  3081               	movlw	129
  9083  07BA  00FC               	movwf	??_chegadaS1
  9084  07BB  087C               	movf	??_chegadaS1,w
  9085  07BC  00C3               	movwf	(_MatrixLed^(0+128)+2)
  9086  07BD                     i1l2950:
  9087                           
  9088                           ;main.c: 173:     MatrixLed[3] = 0b01111110;
  9089  07BD  307E               	movlw	126
  9090  07BE  00FC               	movwf	??_chegadaS1
  9091  07BF  087C               	movf	??_chegadaS1,w
  9092  07C0  00C4               	movwf	(_MatrixLed^(0+128)+3)
  9093                           
  9094                           ;main.c: 174:     MatrixLed[4] = 0;
  9095  07C1  01C5               	clrf	(_MatrixLed^(0+128)+4)
  9096  07C2                     i1l2952:
  9097                           
  9098                           ;main.c: 175:     if(subindo){
  9099  07C2  0020               	movlb	0	; select bank0
  9100  07C3  086A               	movf	_subindo,w
  9101  07C4  1903               	btfsc	3,2
  9102  07C5  2FC7               	goto	u176_21
  9103  07C6  2FC8               	goto	u176_20
  9104  07C7                     u176_21:
  9105  07C7  2FD6               	goto	i1l2956
  9106  07C8                     u176_20:
  9107  07C8                     i1l2954:
  9108                           
  9109                           ;main.c: 176:         MatrixLed[5] = 0b01100000;
  9110  07C8  3060               	movlw	96
  9111  07C9  00FC               	movwf	??_chegadaS1
  9112  07CA  087C               	movf	??_chegadaS1,w
  9113  07CB  0021               	movlb	1	; select bank1
  9114  07CC  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9115                           
  9116                           ;main.c: 177:         MatrixLed[6] = 0b11000000;
  9117  07CD  30C0               	movlw	192
  9118  07CE  00FC               	movwf	??_chegadaS1
  9119  07CF  087C               	movf	??_chegadaS1,w
  9120  07D0  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9121                           
  9122                           ;main.c: 178:         MatrixLed[7] = 0b01100000;
  9123  07D1  3060               	movlw	96
  9124  07D2  00FC               	movwf	??_chegadaS1
  9125  07D3  087C               	movf	??_chegadaS1,w
  9126  07D4  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9127                           
  9128                           ;main.c: 179:     }else{
  9129  07D5  2FE9               	goto	i1l2960
  9130  07D6                     i1l2956:
  9131                           
  9132                           ;main.c: 180:         MatrixLed[5] = 0b11000000;
  9133  07D6  30C0               	movlw	192
  9134  07D7  00FC               	movwf	??_chegadaS1
  9135  07D8  087C               	movf	??_chegadaS1,w
  9136  07D9  0021               	movlb	1	; select bank1
  9137  07DA  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9138                           
  9139                           ;main.c: 181:         MatrixLed[6] = 0b01100000;
  9140  07DB  3060               	movlw	96
  9141  07DC  00FC               	movwf	??_chegadaS1
  9142  07DD  087C               	movf	??_chegadaS1,w
  9143  07DE  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9144                           
  9145                           ;main.c: 182:         MatrixLed[7] = 0b11000000;
  9146  07DF  30C0               	movlw	192
  9147  07E0  00FC               	movwf	??_chegadaS1
  9148  07E1  087C               	movf	??_chegadaS1,w
  9149  07E2  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9150  07E3                     i1l2958:
  9151                           
  9152                           ;main.c: 183:         destinoDesc = destinoDesc & 0b11111110;
  9153  07E3  0020               	movlb	0	; select bank0
  9154  07E4  0857               	movf	_destinoDesc,w
  9155  07E5  39FE               	andlw	254
  9156  07E6  00FC               	movwf	??_chegadaS1
  9157  07E7  087C               	movf	??_chegadaS1,w
  9158  07E8  00D7               	movwf	_destinoDesc
  9159  07E9                     i1l2960:
  9160                           
  9161                           ;main.c: 185:     matrixUpdate();
  9162  07E9  318E  26E1  3187   	fcall	_matrixUpdate
  9163  07EC                     i1l810:
  9164  07EC  0008               	return
  9165  07ED                     __end_of_chegadaS1:
  9166                           
  9167                           	psect	text51
  9168  0CFA                     __ptext51:	
  9169 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9170 ;; Defined at:
  9171 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;		None
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;		None
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  1    wreg      void 
  9178 ;; Registers used:
  9179 ;;		None
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9185 ;;      Params:         0       0       0       0       0       0
  9186 ;;      Locals:         0       0       0       0       0       0
  9187 ;;      Temps:          0       0       0       0       0       0
  9188 ;;      Totals:         0       0       0       0       0       0
  9189 ;;Total ram usage:        0 bytes
  9190 ;; Hardware stack levels used: 1
  9191 ;; This function calls:
  9192 ;;		Nothing
  9193 ;; This function is called by:
  9194 ;;		_PIN_MANAGER_Initialize
  9195 ;;		_IOCBF3_ISR
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199  0CFA                     _IOCBF3_DefaultInterruptHandler:	
  9200                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9201                           
  9202  0CFA                     i1l214:	
  9203                           ;incstack = 0
  9204                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9205                           
  9206  0CFA  0008               	return
  9207  0CFB                     __end_of_IOCBF3_DefaultInterruptHandler:
  9208                           
  9209                           	psect	text52
  9210  075E                     __ptext52:	
  9211 ;; *************** function _chegadaS2 *****************
  9212 ;; Defined at:
  9213 ;;		line 188 in file "main.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;		None
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;		None
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9227 ;;      Params:         0       0       0       0       0       0
  9228 ;;      Locals:         0       0       0       0       0       0
  9229 ;;      Temps:          1       0       0       0       0       0
  9230 ;;      Totals:         1       0       0       0       0       0
  9231 ;;Total ram usage:        1 bytes
  9232 ;; Hardware stack levels used: 1
  9233 ;; Hardware stack levels required when called: 3
  9234 ;; This function calls:
  9235 ;;		_matrixUpdate
  9236 ;; This function is called by:
  9237 ;;		_main
  9238 ;;		_IOCBF3_ISR
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242  075E                     _chegadaS2:	
  9243                           ;psect for function _chegadaS2
  9244                           
  9245  075E                     i1l2962:	
  9246                           ;incstack = 0
  9247                           ; Regs used in _chegadaS2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9248                           
  9249                           
  9250                           ;main.c: 190:     andarAtual = 1;
  9251  075E  0020               	movlb	0	; select bank0
  9252  075F  01DA               	clrf	_andarAtual
  9253  0760  0ADA               	incf	_andarAtual,f
  9254  0761                     i1l2964:
  9255                           
  9256                           ;main.c: 192:     MatrixLed[0] = 0b00000000;
  9257  0761  0021               	movlb	1	; select bank1
  9258  0762  01C1               	clrf	_MatrixLed^(0+128)
  9259  0763                     i1l2966:
  9260                           
  9261                           ;main.c: 193:     MatrixLed[1] = 0b01000001;
  9262  0763  3041               	movlw	65
  9263  0764  00FC               	movwf	??_chegadaS2
  9264  0765  087C               	movf	??_chegadaS2,w
  9265  0766  00C2               	movwf	(_MatrixLed^(0+128)+1)
  9266  0767                     i1l2968:
  9267                           
  9268                           ;main.c: 194:     MatrixLed[2] = 0b11111111;
  9269  0767  30FF               	movlw	255
  9270  0768  00FC               	movwf	??_chegadaS2
  9271  0769  087C               	movf	??_chegadaS2,w
  9272  076A  00C3               	movwf	(_MatrixLed^(0+128)+2)
  9273  076B                     i1l2970:
  9274                           
  9275                           ;main.c: 195:     MatrixLed[3] = 0b00000001;
  9276  076B  01C4               	clrf	(_MatrixLed^(0+128)+3)
  9277  076C  0AC4               	incf	(_MatrixLed^(0+128)+3),f
  9278                           
  9279                           ;main.c: 196:     MatrixLed[4] = 0;
  9280  076D  01C5               	clrf	(_MatrixLed^(0+128)+4)
  9281  076E                     i1l2972:
  9282                           
  9283                           ;main.c: 197:     if(subindo){
  9284  076E  0020               	movlb	0	; select bank0
  9285  076F  086A               	movf	_subindo,w
  9286  0770  1903               	btfsc	3,2
  9287  0771  2F73               	goto	u177_21
  9288  0772  2F74               	goto	u177_20
  9289  0773                     u177_21:
  9290  0773  2F88               	goto	i1l2978
  9291  0774                     u177_20:
  9292  0774                     i1l2974:
  9293                           
  9294                           ;main.c: 198:         MatrixLed[5] = 0b01100000;
  9295  0774  3060               	movlw	96
  9296  0775  00FC               	movwf	??_chegadaS2
  9297  0776  087C               	movf	??_chegadaS2,w
  9298  0777  0021               	movlb	1	; select bank1
  9299  0778  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9300                           
  9301                           ;main.c: 199:         MatrixLed[6] = 0b11000000;
  9302  0779  30C0               	movlw	192
  9303  077A  00FC               	movwf	??_chegadaS2
  9304  077B  087C               	movf	??_chegadaS2,w
  9305  077C  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9306                           
  9307                           ;main.c: 200:         MatrixLed[7] = 0b01100000;
  9308  077D  3060               	movlw	96
  9309  077E  00FC               	movwf	??_chegadaS2
  9310  077F  087C               	movf	??_chegadaS2,w
  9311  0780  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9312  0781                     i1l2976:
  9313                           
  9314                           ;main.c: 201:         destinoSub = destinoSub & 0b11111101;
  9315  0781  0020               	movlb	0	; select bank0
  9316  0782  0858               	movf	_destinoSub,w
  9317  0783  39FD               	andlw	253
  9318  0784  00FC               	movwf	??_chegadaS2
  9319  0785  087C               	movf	??_chegadaS2,w
  9320  0786  00D8               	movwf	_destinoSub
  9321                           
  9322                           ;main.c: 202:     }else{
  9323  0787  2F9B               	goto	i1l2982
  9324  0788                     i1l2978:
  9325                           
  9326                           ;main.c: 203:         MatrixLed[5] = 0b11000000;
  9327  0788  30C0               	movlw	192
  9328  0789  00FC               	movwf	??_chegadaS2
  9329  078A  087C               	movf	??_chegadaS2,w
  9330  078B  0021               	movlb	1	; select bank1
  9331  078C  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9332                           
  9333                           ;main.c: 204:         MatrixLed[6] = 0b01100000;
  9334  078D  3060               	movlw	96
  9335  078E  00FC               	movwf	??_chegadaS2
  9336  078F  087C               	movf	??_chegadaS2,w
  9337  0790  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9338                           
  9339                           ;main.c: 205:         MatrixLed[7] = 0b11000000;
  9340  0791  30C0               	movlw	192
  9341  0792  00FC               	movwf	??_chegadaS2
  9342  0793  087C               	movf	??_chegadaS2,w
  9343  0794  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9344  0795                     i1l2980:
  9345                           
  9346                           ;main.c: 206:         destinoDesc = destinoDesc & 0b11111101;
  9347  0795  0020               	movlb	0	; select bank0
  9348  0796  0857               	movf	_destinoDesc,w
  9349  0797  39FD               	andlw	253
  9350  0798  00FC               	movwf	??_chegadaS2
  9351  0799  087C               	movf	??_chegadaS2,w
  9352  079A  00D7               	movwf	_destinoDesc
  9353  079B                     i1l2982:
  9354                           
  9355                           ;main.c: 208:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9356  079B  0021               	movlb	1	; select bank1
  9357  079C  0848               	movf	(_MatrixLed^(0+128)+7),w
  9358  079D  0020               	movlb	0	; select bank0
  9359  079E  0458               	iorwf	_destinoSub,w
  9360  079F  00FC               	movwf	??_chegadaS2
  9361  07A0  087C               	movf	??_chegadaS2,w
  9362  07A1  0021               	movlb	1	; select bank1
  9363  07A2  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9364  07A3                     i1l2984:
  9365                           
  9366                           ;main.c: 209:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9367  07A3  0847               	movf	(_MatrixLed^(0+128)+6),w
  9368  07A4  0020               	movlb	0	; select bank0
  9369  07A5  0457               	iorwf	_destinoDesc,w
  9370  07A6  00FC               	movwf	??_chegadaS2
  9371  07A7  087C               	movf	??_chegadaS2,w
  9372  07A8  0021               	movlb	1	; select bank1
  9373  07A9  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9374  07AA                     i1l2986:
  9375                           
  9376                           ;main.c: 210:     matrixUpdate();
  9377  07AA  318E  26E1  3187   	fcall	_matrixUpdate
  9378  07AD                     i1l815:
  9379  07AD  0008               	return
  9380  07AE                     __end_of_chegadaS2:
  9381                           
  9382                           	psect	text53
  9383  0DC6                     __ptext53:	
  9384 ;; *************** function _IOCBF0_ISR *****************
  9385 ;; Defined at:
  9386 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;		None
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;		None
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  1    wreg      void 
  9393 ;; Registers used:
  9394 ;;		wreg, status,2, status,0, pclath, cstack
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9400 ;;      Params:         0       0       0       0       0       0
  9401 ;;      Locals:         0       0       0       0       0       0
  9402 ;;      Temps:          0       0       0       0       0       0
  9403 ;;      Totals:         0       0       0       0       0       0
  9404 ;;Total ram usage:        0 bytes
  9405 ;; Hardware stack levels used: 1
  9406 ;; Hardware stack levels required when called: 1
  9407 ;; This function calls:
  9408 ;;		Absolute function
  9409 ;;		_IOCBF0_DefaultInterruptHandler
  9410 ;; This function is called by:
  9411 ;;		_PIN_MANAGER_IOC
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415  0DC6                     _IOCBF0_ISR:	
  9416                           ;psect for function _IOCBF0_ISR
  9417                           
  9418  0DC6                     i1l3086:	
  9419                           ;incstack = 0
  9420                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9421                           
  9422                           
  9423                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
  9424  0DC6  0020               	movlb	0	; select bank0
  9425  0DC7  0867               	movf	_IOCBF0_InterruptHandler,w
  9426  0DC8  0468               	iorwf	_IOCBF0_InterruptHandler+1,w
  9427  0DC9  1903               	btfsc	3,2
  9428  0DCA  2DCC               	goto	u180_21
  9429  0DCB  2DCD               	goto	u180_20
  9430  0DCC                     u180_21:
  9431  0DCC  2DD2               	goto	i1l3090
  9432  0DCD                     u180_20:
  9433  0DCD                     i1l3088:
  9434                           
  9435                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
  9436  0DCD  0868               	movf	_IOCBF0_InterruptHandler+1,w
  9437  0DCE  008A               	movwf	10
  9438  0DCF  0867               	movf	_IOCBF0_InterruptHandler,w
  9439  0DD0  000A               	callw
  9440  0DD1  318D               	pagesel	$
  9441  0DD2                     i1l3090:
  9442                           
  9443                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
  9444  0DD2  0027               	movlb	7	; select bank7
  9445  0DD3  1016               	bcf	22,0	;volatile
  9446  0DD4                     i1l198:
  9447  0DD4  0008               	return
  9448  0DD5                     __end_of_IOCBF0_ISR:
  9449                           
  9450                           	psect	text54
  9451  0CF9                     __ptext54:	
  9452 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  9453 ;; Defined at:
  9454 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;		None
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;		None
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		None
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9468 ;;      Params:         0       0       0       0       0       0
  9469 ;;      Locals:         0       0       0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0       0
  9471 ;;      Totals:         0       0       0       0       0       0
  9472 ;;Total ram usage:        0 bytes
  9473 ;; Hardware stack levels used: 1
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_PIN_MANAGER_Initialize
  9478 ;;		_IOCBF0_ISR
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482  0CF9                     _IOCBF0_DefaultInterruptHandler:	
  9483                           ;psect for function _IOCBF0_DefaultInterruptHandler
  9484                           
  9485  0CF9                     i1l204:	
  9486                           ;incstack = 0
  9487                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  9488                           
  9489  0CF9  0008               	return
  9490  0CFA                     __end_of_IOCBF0_DefaultInterruptHandler:
  9491                           
  9492                           	psect	text55
  9493  0D0F                     __ptext55:	
  9494 ;; *************** function _CMP2_ISR *****************
  9495 ;; Defined at:
  9496 ;;		line 86 in file "mcc_generated_files/cmp2.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;		None
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      void 
  9503 ;; Registers used:
  9504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9510 ;;      Params:         0       0       0       0       0       0
  9511 ;;      Locals:         0       0       0       0       0       0
  9512 ;;      Temps:          0       0       0       0       0       0
  9513 ;;      Totals:         0       0       0       0       0       0
  9514 ;;Total ram usage:        0 bytes
  9515 ;; Hardware stack levels used: 1
  9516 ;; Hardware stack levels required when called: 4
  9517 ;; This function calls:
  9518 ;;		_chegadaS4
  9519 ;; This function is called by:
  9520 ;;		_INTERRUPT_InterruptManager
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524  0D0F                     _CMP2_ISR:	
  9525                           ;psect for function _CMP2_ISR
  9526                           
  9527  0D0F                     i1l3204:	
  9528                           ;incstack = 0
  9529                           ; Regs used in _CMP2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9530                           
  9531                           
  9532                           ;mcc_generated_files/cmp2.c: 89:     PIR2bits.C2IF = 0;
  9533  0D0F  0020               	movlb	0	; select bank0
  9534  0D10  1312               	bcf	18,6	;volatile
  9535  0D11                     i1l3206:
  9536                           
  9537                           ;mcc_generated_files/cmp2.c: 90:     chegadaS4();
  9538  0D11  3186  265C  318D   	fcall	_chegadaS4
  9539  0D14                     i1l77:
  9540  0D14  0008               	return
  9541  0D15                     __end_of_CMP2_ISR:
  9542                           
  9543                           	psect	text56
  9544  065C                     __ptext56:	
  9545 ;; *************** function _chegadaS4 *****************
  9546 ;; Defined at:
  9547 ;;		line 238 in file "main.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;		None
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;		None
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  1    wreg      void 
  9554 ;; Registers used:
  9555 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9556 ;; Tracked objects:
  9557 ;;		On entry : 0/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9561 ;;      Params:         0       0       0       0       0       0
  9562 ;;      Locals:         0       0       0       0       0       0
  9563 ;;      Temps:          1       0       0       0       0       0
  9564 ;;      Totals:         1       0       0       0       0       0
  9565 ;;Total ram usage:        1 bytes
  9566 ;; Hardware stack levels used: 1
  9567 ;; Hardware stack levels required when called: 3
  9568 ;; This function calls:
  9569 ;;		_matrixUpdate
  9570 ;; This function is called by:
  9571 ;;		_CMP2_ISR
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575  065C                     _chegadaS4:	
  9576                           ;psect for function _chegadaS4
  9577                           
  9578  065C                     i1l3004:	
  9579                           ;incstack = 0
  9580                           ; Regs used in _chegadaS4: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9581                           
  9582                           
  9583                           ;main.c: 240:     andarAtual = 3;
  9584  065C  3003               	movlw	3
  9585  065D  00FC               	movwf	??_chegadaS4
  9586  065E  087C               	movf	??_chegadaS4,w
  9587  065F  0020               	movlb	0	; select bank0
  9588  0660  00DA               	movwf	_andarAtual
  9589                           
  9590                           ;main.c: 242:     MatrixLed[0] = 0b10000001;
  9591  0661  3081               	movlw	129
  9592  0662  00FC               	movwf	??_chegadaS4
  9593  0663  087C               	movf	??_chegadaS4,w
  9594  0664  0021               	movlb	1	; select bank1
  9595  0665  00C1               	movwf	_MatrixLed^(0+128)
  9596                           
  9597                           ;main.c: 243:     MatrixLed[1] = 0b10010001;
  9598  0666  3091               	movlw	145
  9599  0667  00FC               	movwf	??_chegadaS4
  9600  0668  087C               	movf	??_chegadaS4,w
  9601  0669  00C2               	movwf	(_MatrixLed^(0+128)+1)
  9602                           
  9603                           ;main.c: 244:     MatrixLed[2] = 0b10010001;
  9604  066A  3091               	movlw	145
  9605  066B  00FC               	movwf	??_chegadaS4
  9606  066C  087C               	movf	??_chegadaS4,w
  9607  066D  00C3               	movwf	(_MatrixLed^(0+128)+2)
  9608                           
  9609                           ;main.c: 245:     MatrixLed[3] = 0b01101110;
  9610  066E  306E               	movlw	110
  9611  066F  00FC               	movwf	??_chegadaS4
  9612  0670  087C               	movf	??_chegadaS4,w
  9613  0671  00C4               	movwf	(_MatrixLed^(0+128)+3)
  9614  0672                     i1l3006:
  9615                           
  9616                           ;main.c: 246:     MatrixLed[4] = 0;
  9617  0672  01C5               	clrf	(_MatrixLed^(0+128)+4)
  9618  0673                     i1l3008:
  9619                           
  9620                           ;main.c: 247:     if(subindo){
  9621  0673  0020               	movlb	0	; select bank0
  9622  0674  086A               	movf	_subindo,w
  9623  0675  1903               	btfsc	3,2
  9624  0676  2E78               	goto	u178_21
  9625  0677  2E79               	goto	u178_20
  9626  0678                     u178_21:
  9627  0678  2E8D               	goto	i1l3014
  9628  0679                     u178_20:
  9629  0679                     i1l3010:
  9630                           
  9631                           ;main.c: 248:         MatrixLed[5] = 0b01100000;
  9632  0679  3060               	movlw	96
  9633  067A  00FC               	movwf	??_chegadaS4
  9634  067B  087C               	movf	??_chegadaS4,w
  9635  067C  0021               	movlb	1	; select bank1
  9636  067D  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9637                           
  9638                           ;main.c: 249:         MatrixLed[6] = 0b11000000;
  9639  067E  30C0               	movlw	192
  9640  067F  00FC               	movwf	??_chegadaS4
  9641  0680  087C               	movf	??_chegadaS4,w
  9642  0681  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9643                           
  9644                           ;main.c: 250:         MatrixLed[7] = 0b01100000;
  9645  0682  3060               	movlw	96
  9646  0683  00FC               	movwf	??_chegadaS4
  9647  0684  087C               	movf	??_chegadaS4,w
  9648  0685  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9649  0686                     i1l3012:
  9650                           
  9651                           ;main.c: 251:         destinoSub = destinoSub & 0b11110111;
  9652  0686  0020               	movlb	0	; select bank0
  9653  0687  0858               	movf	_destinoSub,w
  9654  0688  39F7               	andlw	247
  9655  0689  00FC               	movwf	??_chegadaS4
  9656  068A  087C               	movf	??_chegadaS4,w
  9657  068B  00D8               	movwf	_destinoSub
  9658                           
  9659                           ;main.c: 252:     }else{
  9660  068C  2EA0               	goto	i1l3018
  9661  068D                     i1l3014:
  9662                           
  9663                           ;main.c: 253:         MatrixLed[5] = 0b11000000;
  9664  068D  30C0               	movlw	192
  9665  068E  00FC               	movwf	??_chegadaS4
  9666  068F  087C               	movf	??_chegadaS4,w
  9667  0690  0021               	movlb	1	; select bank1
  9668  0691  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9669                           
  9670                           ;main.c: 254:         MatrixLed[6] = 0b01100000;
  9671  0692  3060               	movlw	96
  9672  0693  00FC               	movwf	??_chegadaS4
  9673  0694  087C               	movf	??_chegadaS4,w
  9674  0695  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9675                           
  9676                           ;main.c: 255:         MatrixLed[7] = 0b11000000;
  9677  0696  30C0               	movlw	192
  9678  0697  00FC               	movwf	??_chegadaS4
  9679  0698  087C               	movf	??_chegadaS4,w
  9680  0699  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9681  069A                     i1l3016:
  9682                           
  9683                           ;main.c: 256:         destinoDesc = destinoDesc & 0b11110111;
  9684  069A  0020               	movlb	0	; select bank0
  9685  069B  0857               	movf	_destinoDesc,w
  9686  069C  39F7               	andlw	247
  9687  069D  00FC               	movwf	??_chegadaS4
  9688  069E  087C               	movf	??_chegadaS4,w
  9689  069F  00D7               	movwf	_destinoDesc
  9690  06A0                     i1l3018:
  9691                           
  9692                           ;main.c: 258:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9693  06A0  0021               	movlb	1	; select bank1
  9694  06A1  0848               	movf	(_MatrixLed^(0+128)+7),w
  9695  06A2  0020               	movlb	0	; select bank0
  9696  06A3  0458               	iorwf	_destinoSub,w
  9697  06A4  00FC               	movwf	??_chegadaS4
  9698  06A5  087C               	movf	??_chegadaS4,w
  9699  06A6  0021               	movlb	1	; select bank1
  9700  06A7  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9701  06A8                     i1l3020:
  9702                           
  9703                           ;main.c: 259:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9704  06A8  0847               	movf	(_MatrixLed^(0+128)+6),w
  9705  06A9  0020               	movlb	0	; select bank0
  9706  06AA  0457               	iorwf	_destinoDesc,w
  9707  06AB  00FC               	movwf	??_chegadaS4
  9708  06AC  087C               	movf	??_chegadaS4,w
  9709  06AD  0021               	movlb	1	; select bank1
  9710  06AE  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9711  06AF                     i1l3022:
  9712                           
  9713                           ;main.c: 260:     matrixUpdate();
  9714  06AF  318E  26E1  3186   	fcall	_matrixUpdate
  9715  06B2                     i1l825:
  9716  06B2  0008               	return
  9717  06B3                     __end_of_chegadaS4:
  9718                           
  9719                           	psect	text57
  9720  0D09                     __ptext57:	
  9721 ;; *************** function _CMP1_ISR *****************
  9722 ;; Defined at:
  9723 ;;		line 86 in file "mcc_generated_files/cmp1.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;		None
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;		None
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1    wreg      void 
  9730 ;; Registers used:
  9731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9737 ;;      Params:         0       0       0       0       0       0
  9738 ;;      Locals:         0       0       0       0       0       0
  9739 ;;      Temps:          0       0       0       0       0       0
  9740 ;;      Totals:         0       0       0       0       0       0
  9741 ;;Total ram usage:        0 bytes
  9742 ;; Hardware stack levels used: 1
  9743 ;; Hardware stack levels required when called: 4
  9744 ;; This function calls:
  9745 ;;		_chegadaS3
  9746 ;; This function is called by:
  9747 ;;		_INTERRUPT_InterruptManager
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751  0D09                     _CMP1_ISR:	
  9752                           ;psect for function _CMP1_ISR
  9753                           
  9754  0D09                     i1l3208:	
  9755                           ;incstack = 0
  9756                           ; Regs used in _CMP1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9757                           
  9758                           
  9759                           ;mcc_generated_files/cmp1.c: 89:     PIR2bits.C1IF = 0;
  9760  0D09  0020               	movlb	0	; select bank0
  9761  0D0A  1292               	bcf	18,5	;volatile
  9762  0D0B                     i1l3210:
  9763                           
  9764                           ;mcc_generated_files/cmp1.c: 90:     chegadaS3();
  9765  0D0B  3186  26B3  318D   	fcall	_chegadaS3
  9766  0D0E                     i1l140:
  9767  0D0E  0008               	return
  9768  0D0F                     __end_of_CMP1_ISR:
  9769                           
  9770                           	psect	text58
  9771  06B3                     __ptext58:	
  9772 ;; *************** function _chegadaS3 *****************
  9773 ;; Defined at:
  9774 ;;		line 213 in file "main.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;		None
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9788 ;;      Params:         0       0       0       0       0       0
  9789 ;;      Locals:         0       0       0       0       0       0
  9790 ;;      Temps:          1       0       0       0       0       0
  9791 ;;      Totals:         1       0       0       0       0       0
  9792 ;;Total ram usage:        1 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; Hardware stack levels required when called: 3
  9795 ;; This function calls:
  9796 ;;		_matrixUpdate
  9797 ;; This function is called by:
  9798 ;;		_CMP1_ISR
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802  06B3                     _chegadaS3:	
  9803                           ;psect for function _chegadaS3
  9804                           
  9805  06B3                     i1l3032:	
  9806                           ;incstack = 0
  9807                           ; Regs used in _chegadaS3: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9808                           
  9809                           
  9810                           ;main.c: 215:     andarAtual = 2;
  9811  06B3  3002               	movlw	2
  9812  06B4  00FC               	movwf	??_chegadaS3
  9813  06B5  087C               	movf	??_chegadaS3,w
  9814  06B6  0020               	movlb	0	; select bank0
  9815  06B7  00DA               	movwf	_andarAtual
  9816                           
  9817                           ;main.c: 217:     MatrixLed[0] = 0b01000011;
  9818  06B8  3043               	movlw	67
  9819  06B9  00FC               	movwf	??_chegadaS3
  9820  06BA  087C               	movf	??_chegadaS3,w
  9821  06BB  0021               	movlb	1	; select bank1
  9822  06BC  00C1               	movwf	_MatrixLed^(0+128)
  9823                           
  9824                           ;main.c: 218:     MatrixLed[1] = 0b10000101;
  9825  06BD  3085               	movlw	133
  9826  06BE  00FC               	movwf	??_chegadaS3
  9827  06BF  087C               	movf	??_chegadaS3,w
  9828  06C0  00C2               	movwf	(_MatrixLed^(0+128)+1)
  9829                           
  9830                           ;main.c: 219:     MatrixLed[2] = 0b10001001;
  9831  06C1  3089               	movlw	137
  9832  06C2  00FC               	movwf	??_chegadaS3
  9833  06C3  087C               	movf	??_chegadaS3,w
  9834  06C4  00C3               	movwf	(_MatrixLed^(0+128)+2)
  9835                           
  9836                           ;main.c: 220:     MatrixLed[3] = 0b01110001;
  9837  06C5  3071               	movlw	113
  9838  06C6  00FC               	movwf	??_chegadaS3
  9839  06C7  087C               	movf	??_chegadaS3,w
  9840  06C8  00C4               	movwf	(_MatrixLed^(0+128)+3)
  9841  06C9                     i1l3034:
  9842                           
  9843                           ;main.c: 221:     MatrixLed[4] = 0;
  9844  06C9  01C5               	clrf	(_MatrixLed^(0+128)+4)
  9845  06CA                     i1l3036:
  9846                           
  9847                           ;main.c: 222:     if(subindo){
  9848  06CA  0020               	movlb	0	; select bank0
  9849  06CB  086A               	movf	_subindo,w
  9850  06CC  1903               	btfsc	3,2
  9851  06CD  2ECF               	goto	u179_21
  9852  06CE  2ED0               	goto	u179_20
  9853  06CF                     u179_21:
  9854  06CF  2EE4               	goto	i1l3042
  9855  06D0                     u179_20:
  9856  06D0                     i1l3038:
  9857                           
  9858                           ;main.c: 223:         MatrixLed[5] = 0b01100000;
  9859  06D0  3060               	movlw	96
  9860  06D1  00FC               	movwf	??_chegadaS3
  9861  06D2  087C               	movf	??_chegadaS3,w
  9862  06D3  0021               	movlb	1	; select bank1
  9863  06D4  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9864                           
  9865                           ;main.c: 224:         MatrixLed[6] = 0b11000000;
  9866  06D5  30C0               	movlw	192
  9867  06D6  00FC               	movwf	??_chegadaS3
  9868  06D7  087C               	movf	??_chegadaS3,w
  9869  06D8  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9870                           
  9871                           ;main.c: 225:         MatrixLed[7] = 0b01100000;
  9872  06D9  3060               	movlw	96
  9873  06DA  00FC               	movwf	??_chegadaS3
  9874  06DB  087C               	movf	??_chegadaS3,w
  9875  06DC  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9876  06DD                     i1l3040:
  9877                           
  9878                           ;main.c: 226:         destinoSub = destinoSub & 0b11111011;
  9879  06DD  0020               	movlb	0	; select bank0
  9880  06DE  0858               	movf	_destinoSub,w
  9881  06DF  39FB               	andlw	251
  9882  06E0  00FC               	movwf	??_chegadaS3
  9883  06E1  087C               	movf	??_chegadaS3,w
  9884  06E2  00D8               	movwf	_destinoSub
  9885                           
  9886                           ;main.c: 227:     }else{
  9887  06E3  2EF7               	goto	i1l3046
  9888  06E4                     i1l3042:
  9889                           
  9890                           ;main.c: 228:         MatrixLed[5] = 0b11000000;
  9891  06E4  30C0               	movlw	192
  9892  06E5  00FC               	movwf	??_chegadaS3
  9893  06E6  087C               	movf	??_chegadaS3,w
  9894  06E7  0021               	movlb	1	; select bank1
  9895  06E8  00C6               	movwf	(_MatrixLed^(0+128)+5)
  9896                           
  9897                           ;main.c: 229:         MatrixLed[6] = 0b01100000;
  9898  06E9  3060               	movlw	96
  9899  06EA  00FC               	movwf	??_chegadaS3
  9900  06EB  087C               	movf	??_chegadaS3,w
  9901  06EC  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9902                           
  9903                           ;main.c: 230:         MatrixLed[7] = 0b11000000;
  9904  06ED  30C0               	movlw	192
  9905  06EE  00FC               	movwf	??_chegadaS3
  9906  06EF  087C               	movf	??_chegadaS3,w
  9907  06F0  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9908  06F1                     i1l3044:
  9909                           
  9910                           ;main.c: 231:         destinoDesc = destinoDesc & 0b11111011;
  9911  06F1  0020               	movlb	0	; select bank0
  9912  06F2  0857               	movf	_destinoDesc,w
  9913  06F3  39FB               	andlw	251
  9914  06F4  00FC               	movwf	??_chegadaS3
  9915  06F5  087C               	movf	??_chegadaS3,w
  9916  06F6  00D7               	movwf	_destinoDesc
  9917  06F7                     i1l3046:
  9918                           
  9919                           ;main.c: 233:     MatrixLed[7] = MatrixLed[7] | destinoSub;
  9920  06F7  0021               	movlb	1	; select bank1
  9921  06F8  0848               	movf	(_MatrixLed^(0+128)+7),w
  9922  06F9  0020               	movlb	0	; select bank0
  9923  06FA  0458               	iorwf	_destinoSub,w
  9924  06FB  00FC               	movwf	??_chegadaS3
  9925  06FC  087C               	movf	??_chegadaS3,w
  9926  06FD  0021               	movlb	1	; select bank1
  9927  06FE  00C8               	movwf	(_MatrixLed^(0+128)+7)
  9928  06FF                     i1l3048:
  9929                           
  9930                           ;main.c: 234:     MatrixLed[6] = MatrixLed[6] | destinoDesc;
  9931  06FF  0847               	movf	(_MatrixLed^(0+128)+6),w
  9932  0700  0020               	movlb	0	; select bank0
  9933  0701  0457               	iorwf	_destinoDesc,w
  9934  0702  00FC               	movwf	??_chegadaS3
  9935  0703  087C               	movf	??_chegadaS3,w
  9936  0704  0021               	movlb	1	; select bank1
  9937  0705  00C7               	movwf	(_MatrixLed^(0+128)+6)
  9938  0706                     i1l3050:
  9939                           
  9940                           ;main.c: 235:     matrixUpdate();
  9941  0706  318E  26E1  3186   	fcall	_matrixUpdate
  9942  0709                     i1l820:
  9943  0709  0008               	return
  9944  070A                     __end_of_chegadaS3:
  9945                           
  9946                           	psect	text59
  9947  0EE1                     __ptext59:	
  9948 ;; *************** function _matrixUpdate *****************
  9949 ;; Defined at:
  9950 ;;		line 127 in file "main.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;  i               1    0        unsigned char 
  9955 ;;  i               1   11[COMMON] unsigned char 
  9956 ;;  index           1    0        unsigned char 
  9957 ;;  data            2    9[COMMON] unsigned char [2]
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  1    wreg      void 
  9960 ;; Registers used:
  9961 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9962 ;; Tracked objects:
  9963 ;;		On entry : 0/0
  9964 ;;		On exit  : 0/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9967 ;;      Params:         0       0       0       0       0       0
  9968 ;;      Locals:         3       0       0       0       0       0
  9969 ;;      Temps:          1       0       0       0       0       0
  9970 ;;      Totals:         4       0       0       0       0       0
  9971 ;;Total ram usage:        4 bytes
  9972 ;; Hardware stack levels used: 1
  9973 ;; Hardware stack levels required when called: 2
  9974 ;; This function calls:
  9975 ;;		i1_txSpi
  9976 ;; This function is called by:
  9977 ;;		_chegadaS1
  9978 ;;		_chegadaS2
  9979 ;;		_chegadaS3
  9980 ;;		_chegadaS4
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984  0EE1                     _matrixUpdate:	
  9985                           ;psect for function _matrixUpdate
  9986                           
  9987  0EE1                     i1l2664:	
  9988                           ;incstack = 0
  9989                           ; Regs used in _matrixUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9990                           
  9991                           
  9992                           ;main.c: 130:         for(uint8_t i=8;i>0;i--){
  9993  0EE1  3008               	movlw	8
  9994  0EE2  00F8               	movwf	??_matrixUpdate
  9995  0EE3  0878               	movf	??_matrixUpdate,w
  9996  0EE4  00FB               	movwf	matrixUpdate@i
  9997  0EE5                     i1l2670:
  9998                           
  9999                           ;main.c: 131:             data[0] = i;
 10000  0EE5  087B               	movf	matrixUpdate@i,w
 10001  0EE6  00F8               	movwf	??_matrixUpdate
 10002  0EE7  0878               	movf	??_matrixUpdate,w
 10003  0EE8  00F9               	movwf	matrixUpdate@data
 10004  0EE9                     i1l2672:
 10005                           
 10006                           ;main.c: 132:             data[1] = MatrixLed[i-1];
 10007  0EE9  087B               	movf	matrixUpdate@i,w
 10008  0EEA  3EC0               	addlw	(low ((_MatrixLed| 0+255)))& (0+255)
 10009  0EEB  0086               	movwf	6
 10010  0EEC  0187               	clrf	7
 10011  0EED  0801               	movf	1,w
 10012  0EEE  00F8               	movwf	??_matrixUpdate
 10013  0EEF  0878               	movf	??_matrixUpdate,w
 10014  0EF0  00FA               	movwf	matrixUpdate@data+1
 10015  0EF1                     i1l2674:
 10016                           
 10017                           ;main.c: 133:             txSpi(data, 2);
 10018  0EF1  3002               	movlw	2
 10019  0EF2  00F5               	movwf	i1txSpi@dataSize
 10020  0EF3  3000               	movlw	0
 10021  0EF4  00F6               	movwf	i1txSpi@dataSize+1
 10022  0EF5  3079               	movlw	(low (matrixUpdate@data| 0))& (0+255)
 10023  0EF6  318D  25B8  318E   	fcall	i1_txSpi
 10024  0EF9                     i1l2676:
 10025                           
 10026                           ;main.c: 134:         }
 10027  0EF9  3001               	movlw	1
 10028  0EFA  02FB               	subwf	matrixUpdate@i,f
 10029  0EFB                     i1l2678:
 10030  0EFB  087B               	movf	matrixUpdate@i,w
 10031  0EFC  1D03               	btfss	3,2
 10032  0EFD  2EFF               	goto	u132_21
 10033  0EFE  2F00               	goto	u132_20
 10034  0EFF                     u132_21:
 10035  0EFF  2EE5               	goto	i1l2670
 10036  0F00                     u132_20:
 10037  0F00                     i1l795:
 10038  0F00  0008               	return
 10039  0F01                     __end_of_matrixUpdate:
 10040                           
 10041                           	psect	text60
 10042  0DB8                     __ptext60:	
 10043 ;; *************** function i1_txSpi *****************
 10044 ;; Defined at:
 10045 ;;		line 119 in file "main.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  data            1    wreg     PTR unsigned char 
 10048 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10049 ;;  dataSize        2    5[COMMON] unsigned int 
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;  data            1    7[COMMON] PTR unsigned char 
 10052 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10062 ;;      Params:         2       0       0       0       0       0
 10063 ;;      Locals:         1       0       0       0       0       0
 10064 ;;      Temps:          0       0       0       0       0       0
 10065 ;;      Totals:         3       0       0       0       0       0
 10066 ;;Total ram usage:        3 bytes
 10067 ;; Hardware stack levels used: 1
 10068 ;; Hardware stack levels required when called: 1
 10069 ;; This function calls:
 10070 ;;		i1_SPI1_ExchangeBlock
 10071 ;; This function is called by:
 10072 ;;		_matrixUpdate
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076  0DB8                     i1_txSpi:	
 10077                           ;psect for function i1_txSpi
 10078                           
 10079                           
 10080                           ;incstack = 0
 10081                           ; Regs used in i1_txSpi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10082                           ;i1txSpi@data stored from wreg
 10083  0DB8  00F7               	movwf	i1txSpi@data
 10084  0DB9                     i1l782:	
 10085                           ;main.c: 120:     do { LATBbits.LATB1 = 0; } while(0);
 10086                           
 10087  0DB9  0022               	movlb	2	; select bank2
 10088  0DBA  108D               	bcf	13,1	;volatile
 10089  0DBB                     i1l2618:
 10090                           
 10091                           ;main.c: 121:     SPI1_ExchangeBlock(data,dataSize);
 10092  0DBB  0876               	movf	i1txSpi@dataSize+1,w
 10093  0DBC  00F1               	movwf	i1SPI1_ExchangeBlock@blockSize+1
 10094  0DBD  0875               	movf	i1txSpi@dataSize,w
 10095  0DBE  00F0               	movwf	i1SPI1_ExchangeBlock@blockSize
 10096  0DBF  0877               	movf	i1txSpi@data,w
 10097  0DC0  318F  2749  318D   	fcall	i1_SPI1_ExchangeBlock
 10098  0DC3                     i1l2620:
 10099  0DC3  0022               	movlb	2	; select bank2
 10100  0DC4  148D               	bsf	13,1	;volatile
 10101  0DC5                     i1l786:
 10102  0DC5  0008               	return
 10103  0DC6                     __end_ofi1_txSpi:
 10104                           
 10105                           	psect	text61
 10106  0F49                     __ptext61:	
 10107 ;; *************** function i1_SPI1_ExchangeBlock *****************
 10108 ;; Defined at:
 10109 ;;		line 100 in file "mcc_generated_files/spi1.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  block           1    wreg     PTR void 
 10112 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10113 ;;  blockSize       2    0[COMMON] unsigned int 
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;  block           1    3[COMMON] PTR void 
 10116 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10117 ;;  data            1    4[COMMON] PTR unsigned char 
 10118 ;;		 -> initMatrix@data(4), matrixUpdate@data(2), 
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  1    wreg      void 
 10121 ;; Registers used:
 10122 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10128 ;;      Params:         2       0       0       0       0       0
 10129 ;;      Locals:         2       0       0       0       0       0
 10130 ;;      Temps:          1       0       0       0       0       0
 10131 ;;      Totals:         5       0       0       0       0       0
 10132 ;;Total ram usage:        5 bytes
 10133 ;; Hardware stack levels used: 1
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		i1_txSpi
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141  0F49                     i1_SPI1_ExchangeBlock:	
 10142                           ;psect for function i1_SPI1_ExchangeBlock
 10143                           
 10144                           
 10145                           ;incstack = 0
 10146                           ; Regs used in i1_SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
 10147                           ;i1SPI1_ExchangeBlock@block stored from wreg
 10148  0F49  00F3               	movwf	i1SPI1_ExchangeBlock@block
 10149  0F4A                     i1l2548:
 10150                           
 10151                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
 10152  0F4A  0873               	movf	i1SPI1_ExchangeBlock@block,w
 10153  0F4B  00F2               	movwf	??i1_SPI1_ExchangeBlock
 10154  0F4C  0872               	movf	??i1_SPI1_ExchangeBlock,w
 10155  0F4D  00F4               	movwf	i1SPI1_ExchangeBlock@data
 10156                           
 10157                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 10158  0F4E  2F67               	goto	i1l2556
 10159  0F4F                     i1l2550:
 10160                           
 10161                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
 10162  0F4F  0874               	movf	i1SPI1_ExchangeBlock@data,w
 10163  0F50  0086               	movwf	6
 10164  0F51  0187               	clrf	7
 10165  0F52  0801               	movf	1,w
 10166  0F53  0024               	movlb	4	; select bank4
 10167  0F54  0091               	movwf	17	;volatile
 10168  0F55                     i1l436:	
 10169                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
 10170                           
 10171  0F55  0020               	movlb	0	; select bank0
 10172  0F56  1D91               	btfss	17,3	;volatile
 10173  0F57  2F59               	goto	u113_21
 10174  0F58  2F5A               	goto	u113_20
 10175  0F59                     u113_21:
 10176  0F59  2F55               	goto	i1l436
 10177  0F5A                     u113_20:
 10178  0F5A                     i1l438:
 10179                           
 10180                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
 10181  0F5A  1191               	bcf	17,3	;volatile
 10182  0F5B                     i1l2552:
 10183                           
 10184                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
 10185  0F5B  0024               	movlb	4	; select bank4
 10186  0F5C  0811               	movf	17,w	;volatile
 10187  0F5D  00F2               	movwf	??i1_SPI1_ExchangeBlock
 10188  0F5E  0874               	movf	i1SPI1_ExchangeBlock@data,w
 10189  0F5F  0086               	movwf	6
 10190  0F60  0187               	clrf	7
 10191  0F61  0872               	movf	??i1_SPI1_ExchangeBlock,w
 10192  0F62  0081               	movwf	1
 10193  0F63                     i1l2554:
 10194  0F63  3001               	movlw	1
 10195  0F64  00F2               	movwf	??i1_SPI1_ExchangeBlock
 10196  0F65  0872               	movf	??i1_SPI1_ExchangeBlock,w
 10197  0F66  07F4               	addwf	i1SPI1_ExchangeBlock@data,f
 10198  0F67                     i1l2556:
 10199                           
 10200                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
 10201  0F67  3001               	movlw	1
 10202  0F68  02F0               	subwf	i1SPI1_ExchangeBlock@blockSize,f
 10203  0F69  3000               	movlw	0
 10204  0F6A  3BF1               	subwfb	i1SPI1_ExchangeBlock@blockSize+1,f
 10205  0F6B  0A70               	incf	i1SPI1_ExchangeBlock@blockSize,w
 10206  0F6C  1D03               	skipz
 10207  0F6D  2F72               	goto	u114_21
 10208  0F6E  0A71               	incf	i1SPI1_ExchangeBlock@blockSize+1,w
 10209  0F6F  1D03               	btfss	3,2
 10210  0F70  2F72               	goto	u114_21
 10211  0F71  2F73               	goto	u114_20
 10212  0F72                     u114_21:
 10213  0F72  2F4F               	goto	i1l2550
 10214  0F73                     u114_20:
 10215  0F73                     i1l440:
 10216  0F73  0008               	return
 10217  0F74                     __end_ofi1_SPI1_ExchangeBlock:
 10218                           
 10219                           	psect	text62
 10220  0E4B                     __ptext62:	
 10221 ;; *************** function _CCP4_CaptureISR *****************
 10222 ;; Defined at:
 10223 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;		None
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  module          2    3[COMMON] struct CCPR4Reg_tag
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  1    wreg      void 
 10230 ;; Registers used:
 10231 ;;		wreg, status,2, status,0, pclath, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10237 ;;      Params:         0       0       0       0       0       0
 10238 ;;      Locals:         2       0       0       0       0       0
 10239 ;;      Temps:          1       0       0       0       0       0
 10240 ;;      Totals:         3       0       0       0       0       0
 10241 ;;Total ram usage:        3 bytes
 10242 ;; Hardware stack levels used: 1
 10243 ;; Hardware stack levels required when called: 1
 10244 ;; This function calls:
 10245 ;;		Absolute function
 10246 ;;		_CCP4_DefaultCallBack
 10247 ;; This function is called by:
 10248 ;;		_INTERRUPT_InterruptManager
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252  0E4B                     _CCP4_CaptureISR:	
 10253                           ;psect for function _CCP4_CaptureISR
 10254                           
 10255  0E4B                     i1l3260:	
 10256                           ;incstack = 0
 10257                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 10258                           
 10259                           
 10260                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 10261  0E4B  0020               	movlb	0	; select bank0
 10262  0E4C  1293               	bcf	19,5	;volatile
 10263  0E4D                     i1l3262:
 10264                           
 10265                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 10266  0E4D  0026               	movlb	6	; select bank6
 10267  0E4E  0818               	movf	24,w	;volatile
 10268  0E4F  00F2               	movwf	??_CCP4_CaptureISR
 10269  0E50  0872               	movf	??_CCP4_CaptureISR,w
 10270  0E51  00F3               	movwf	CCP4_CaptureISR@module
 10271                           
 10272                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 10273  0E52  0819               	movf	25,w	;volatile
 10274  0E53  00F2               	movwf	??_CCP4_CaptureISR
 10275  0E54  0872               	movf	??_CCP4_CaptureISR,w
 10276  0E55  00F4               	movwf	CCP4_CaptureISR@module+1
 10277  0E56                     i1l3264:
 10278                           
 10279                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 10280  0E56  0874               	movf	CCP4_CaptureISR@module+1,w
 10281  0E57  00F1               	movwf	CCP4_DefaultCallBack@capturedValue+1
 10282  0E58  0873               	movf	CCP4_CaptureISR@module,w
 10283  0E59  00F0               	movwf	CCP4_DefaultCallBack@capturedValue
 10284  0E5A  0021               	movlb	1	; select bank1
 10285  0E5B  0836               	movf	(_CCP4_CallBack+1)^(0+128),w
 10286  0E5C  008A               	movwf	10
 10287  0E5D  0835               	movf	_CCP4_CallBack^(0+128),w
 10288  0E5E  000A               	callw
 10289  0E5F  318E               	pagesel	$
 10290  0E60                     i1l636:
 10291  0E60  0008               	return
 10292  0E61                     __end_of_CCP4_CaptureISR:
 10293                           
 10294                           	psect	text63
 10295  0CF8                     __ptext63:	
 10296 ;; *************** function _CCP4_DefaultCallBack *****************
 10297 ;; Defined at:
 10298 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  capturedValu    2    0[COMMON] unsigned short 
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;		None
 10303 ;; Return value:  Size  Location     Type
 10304 ;;                  1    wreg      void 
 10305 ;; Registers used:
 10306 ;;		None
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10312 ;;      Params:         2       0       0       0       0       0
 10313 ;;      Locals:         0       0       0       0       0       0
 10314 ;;      Temps:          0       0       0       0       0       0
 10315 ;;      Totals:         2       0       0       0       0       0
 10316 ;;Total ram usage:        2 bytes
 10317 ;; Hardware stack levels used: 1
 10318 ;; This function calls:
 10319 ;;		Nothing
 10320 ;; This function is called by:
 10321 ;;		_CCP4_Initialize
 10322 ;;		_CCP4_CaptureISR
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326  0CF8                     _CCP4_DefaultCallBack:	
 10327                           ;psect for function _CCP4_DefaultCallBack
 10328                           
 10329  0CF8                     i1l630:	
 10330                           ;incstack = 0
 10331                           ; Regs used in _CCP4_DefaultCallBack: []
 10332                           
 10333  0CF8  0008               	return
 10334  0CF9                     __end_of_CCP4_DefaultCallBack:
 10335  007E                     btemp	set	126	;btemp
 10336  007E                     int$flags	set	126
 10337  007E                     wtemp0	set	126
 10338                           
 10339                           	psect	idloc
 10340                           
 10341                           ;Config register IDLOC0 @ 0x8000
 10342                           ;	unspecified, using default values
 10343  8000                     	org	32768
 10344  8000  3FFF               	dw	16383
 10345                           
 10346                           ;Config register IDLOC1 @ 0x8001
 10347                           ;	unspecified, using default values
 10348  8001                     	org	32769
 10349  8001  3FFF               	dw	16383
 10350                           
 10351                           ;Config register IDLOC2 @ 0x8002
 10352                           ;	unspecified, using default values
 10353  8002                     	org	32770
 10354  8002  3FFF               	dw	16383
 10355                           
 10356                           ;Config register IDLOC3 @ 0x8003
 10357                           ;	unspecified, using default values
 10358  8003                     	org	32771
 10359  8003  3FFF               	dw	16383
 10360                           
 10361                           	psect	config
 10362                           
 10363                           ;Config register CONFIG1 @ 0x8007
 10364                           ;	Oscillator Selection
 10365                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 10366                           ;	Watchdog Timer Enable
 10367                           ;	WDTE = OFF, WDT disabled
 10368                           ;	Power-up Timer Enable
 10369                           ;	PWRTE = OFF, PWRT disabled
 10370                           ;	MCLR Pin Function Select
 10371                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 10372                           ;	Flash Program Memory Code Protection
 10373                           ;	CP = OFF, Program memory code protection is disabled
 10374                           ;	Data Memory Code Protection
 10375                           ;	CPD = OFF, Data memory code protection is disabled
 10376                           ;	Brown-out Reset Enable
 10377                           ;	BOREN = ON, Brown-out Reset enabled
 10378                           ;	Clock Out Enable
 10379                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 10380                           ;	Internal/External Switchover
 10381                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10382                           ;	Fail-Safe Clock Monitor Enable
 10383                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10384  8007                     	org	32775
 10385  8007  3FE4               	dw	16356
 10386                           
 10387                           ;Config register CONFIG2 @ 0x8008
 10388                           ;	Flash Memory Self-Write Protection
 10389                           ;	WRT = OFF, Write protection off
 10390                           ;	PLL Enable
 10391                           ;	PLLEN = OFF, 4x PLL disabled
 10392                           ;	Stack Overflow/Underflow Reset Enable
 10393                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 10394                           ;	Brown-out Reset Voltage Selection
 10395                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 10396                           ;	Low-Voltage Programming Enable
 10397                           ;	LVP = ON, Low-voltage programming enabled
 10398  8008                     	org	32776
 10399  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    16
    Data        1
    BSS         39
    Persistent  51
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      75
    BANK1            80     19      41
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    memset@s	PTR unsigned char  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> bin2bcd@dataU(BANK0[4]), 

    txSpi@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sendInfo(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    SPI1_ExchangeBlock@block	PTR void  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(1) Largest target is 4
		 -> initMatrix@data(BANK1[4]), matrixUpdate@data(COMMON[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), chegadaS1(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> chegadaS2(), chegadaS1(), Absolute function(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCBF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _sendInfo->___flmul
    _bin2bcd->_memset
    ___wmul->_ADC_GetConversion
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _IOCBF3_ISR->_chegadaS1
    _IOCBF3_ISR->_chegadaS2
    _chegadaS2->_matrixUpdate
    _chegadaS1->_matrixUpdate
    _CMP2_ISR->_chegadaS4
    _chegadaS4->_matrixUpdate
    _CMP1_ISR->_chegadaS3
    _chegadaS3->_matrixUpdate
    _matrixUpdate->i1_txSpi
    i1_txSpi->i1_SPI1_ExchangeBlock
    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->_sendInfo
    _sendInfo->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_initMatrix
    _initMatrix->_txSpi
    _txSpi->_SPI1_ExchangeBlock
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3180
                                             17 BANK1      2     2      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF3_SetInterruptHandler
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                         _initMatrix
                       _isValidFloor
 ---------------------------------------------------------------------------------
 (1) _isValidFloor                                         2     2      0      99
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initMatrix                                           9     9      0    1207
                                              8 BANK1      9     9      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (2) _txSpi                                                3     1      2     626
                                              5 BANK1      3     1      2
                 _SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeBlock                                   5     3      2     256
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1238
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     121
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     301
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     121
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0     124
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    7126
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0       0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR4_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0    5050
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0    5050
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _sendInfo *
 ---------------------------------------------------------------------------------
 (7) _sendInfo                                             6     6      0    5050
                                             32 BANK0      6     6      0
                  _ADC_GetConversion
                       _EUSART_Write
                            ___flmul
                            ___fltol
                             ___wmul
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (8) _bin2bcd                                             11     9      2    1562
                                             10 COMMON     2     0      2
                                              0 BANK0      9     9      0
                             _memset
 ---------------------------------------------------------------------------------
 (9) _memset                                              10     6      4     904
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              4 COMMON     6     2      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             11     7      4     381
                                             21 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0     988
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCBF3_ISR                                           0     0      0     988
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                          _chegadaS1 *
                          _chegadaS2 *
 ---------------------------------------------------------------------------------
 (7) _chegadaS2                                            1     1      0     494
                                             12 COMMON     1     1      0
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (7) _chegadaS1                                            1     1      0     494
                                             12 COMMON     1     1      0
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP2_ISR                                             0     0      0     494
                          _chegadaS4
 ---------------------------------------------------------------------------------
 (6) _chegadaS4                                            1     1      0     494
                                             12 COMMON     1     1      0
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (5) _CMP1_ISR                                             0     0      0     494
                          _chegadaS3
 ---------------------------------------------------------------------------------
 (6) _chegadaS3                                            1     1      0     494
                                             12 COMMON     1     1      0
                       _matrixUpdate
 ---------------------------------------------------------------------------------
 (8) _matrixUpdate                                         6     6      0     494
                                              8 COMMON     4     4      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (9) i1_txSpi                                              3     1      2     212
                                              5 COMMON     3     1      2
               i1_SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (10) i1_SPI1_ExchangeBlock                                5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF3_SetInterruptHandler
   _SPI1_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _initMatrix
     _txSpi
       _SPI1_ExchangeBlock
   _isValidFloor

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
   _CMP1_ISR
     _chegadaS3
       _matrixUpdate
         i1_txSpi
           i1_SPI1_ExchangeBlock
   _CMP2_ISR
     _chegadaS4
       _matrixUpdate
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _chegadaS1 *
         _matrixUpdate
       _chegadaS2 *
         _matrixUpdate
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _sendInfo *
         _ADC_GetConversion
         _EUSART_Write
         ___flmul
           __Umul8_16
         ___fltol
           ___flmul (ARG)
         ___wmul
           _ADC_GetConversion (ARG)
         _bin2bcd
           _memset
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      82       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     26      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     13      29       8       51.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      82      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jul 18 13:49:04 2023

                              _CCP4_Initialize 0E14               ??_IOCBF3_DefaultInterruptHandler 0070  
              ?_IOCBF3_DefaultInterruptHandler 0070                             _SPI1_ExchangeBlock 0F74  
                                           l11 0D70                                             l71 0D9D  
                            ??_CMP1_Initialize 00A0                                             _t1 0054  
                                           _t2 0052                         __end_of_FVR_Initialize 0D00  
                          ___wmul@multiplicand 0076                                _timer0ReloadVal 0069  
                          __Umul8_16@word_mpld 0076                                            l201 0D5E  
                                          l211 0D67                                            l134 0D91  
                                          l306 0CFF                                            l261 0D03  
                                          l422 075D                                            l511 0E37  
                                          l255 0FCE                                            l360 0D08  
                                          l352 0F48                                            l440 0FA0  
                                          l258 0D45                                            l418 0D85  
                                          l610 0D32                                            l436 0F81  
                                          l373 0DF2                                            l189 0FFF  
                                          l278 0D4D                                            l550 0D55  
                                          l438 0F86                                            l391 0D26  
                                          l369 0DE4                                            l633 0E25  
                                          l394 0D2C                                            l397 0D20  
                                          l805 065B                                            l662 0E4A  
                                          l639 0D1A                                            l833 0457  
                                          l690 0D38                                            l588 0EA7  
                                          l782 0DF5                                            l768 07FF  
                                          l786 0E02                                            _PR2 001B  
                                          _PR4 0416                            ?_SPI1_ExchangeBlock 00A0  
                              _timer1ReloadVal 00B9                                   _pulsoEncoder 0060  
               ?_EUSART_SetFramingErrorHandler 00A0                                _TMR2_Initialize 0D4E  
               CCP4_SetCallBack@customCallBack 00A0                                            wreg 0009  
                             _CCP4_SetCallBack 0D15                                   ___flmul@aexp 002D  
                                 ___flmul@bexp 002E                        SPI1_ExchangeBlock@block 00A3  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                        __end_of_CCP4_CaptureISR 0E61  
                                 ?_EUSART_Read 0070                                   ___fltol@exp1 003F  
                                         l3600 0D6B                                           l3610 0D99  
                                         l3602 0D6C                                           l3620 0D8F  
                                         l3612 0D9B                                           l3604 0D6D  
                                         l3700 0E97                                           l3710 0D49  
                                         l3614 0D86                                           l3606 0D92  
                                         l3630 0FDA                                           l3622 0FCF  
                                         l3702 0E9D                                           l3712 0D4A  
                                         l3720 0E19                                           l3616 0D88  
                                         l3608 0D94                                           l3640 0FE9  
                                         l3632 0FDC                                           l3624 0FD2  
                                         l3704 0E9E                                           l3722 0E21  
                                         l3714 0E14                                           l3618 0D8D  
                                         l3650 0FEE                                           l3642 0FEA  
                                         l3634 0FDF                                           l3626 0FD5  
                                         l3706 0E9F                                           l3730 0E2A  
                                         l3810 0617                                           l3708 0D46  
                                         l3724 0E23                                           l3716 0E17  
                                         l3580 0D1B                                           l3740 0F2D  
                                         l3572 0D56                                           l3652 0FF6  
                                         l3644 0FEB                                           l3636 0FE0  
                                         l3628 0FD7                                           l3660 0D7F  
                                         l3732 0E2C                                           l3804 0608  
                                         l3718 0E18                                           l3742 0F2E  
                                         l3670 0D43                                           l3574 0D5F  
                                         l3654 0FFE                                           l3646 0FEC  
                                         l3638 0FE7                                           l3662 0D81  
                                         l3734 0E2D                                           l3726 0E26  
                                         l3590 0F94                                           l3582 0F76  
                                         l3750 0DF7                                           l3830 0648  
                                         l3822 0619                                           l3806 060D  
                                         l3760 0DE4                                           l3576 0D21  
                                         l3744 0F36                                           l3648 0FED  
                                         l3664 0D83                                           l3656 0D7B  
                                         l3592 0D2D                                           l3736 0E34  
                                         l3728 0E28                                           l3680 0E3C  
                                         l3672 0D00                                           l3584 0F7B  
                                         l3752 0E00                                           l3824 0638  
                                         l3816 0618                                           l3808 0611  
                                         l3920 0449                                           l3840 03D1  
                                         l3762 0DE9                                           l3594 0D15  
                                         l3578 0D27                                           l3746 0F3E  
                                         l3738 0F24                                           l3674 0CFC  
                                         l3666 0D3F                                           l3658 0D7E  
                                         l3690 0D51                                           l3682 0E3E  
                                         l3754 0FA1                                           l3586 0F87  
                                         l3834 0650                                           l3826 063D  
                                         l3850 03DC                                           l3842 03D3  
                                         l3764 0DEA                                           l3756 0D04  
                                         l3780 0745                                           l3772 070C  
                                         l3748 0F46                                           l3668 0D42  
                                         l3692 0D52                                           l3596 0D33  
                                         l3684 0E40                                           l3676 0E38  
                                         l3588 0F90                                           l3836 0655  
                                         l3828 0643                                           l3860 0401  
                                         l3852 03E4                                           l3844 03D7  
                                         l3766 0DEF                                           l3782 075B  
                                         l3774 0711                                           l3598 0D68  
                                         l3694 0D53                                           l3686 0E47  
                                         l3678 0E3B                                           l3790 07F6  
                                         l3870 0425                                           l3862 0409  
                                         l3854 03ED                                           l3846 03DA  
                                         l3838 03B6                                           l3768 0DF1  
                                         l3776 0733                                           l3696 0E8F  
                                         l3688 0D4E                                           l3792 07FC  
                                         l3864 0410                                           l3856 03F4  
                                         l3848 03DB                                           l3778 0734  
                                         l3698 0E94                                           l3794 07FE  
                                         l3786 07EF                                           l3874 042C  
                                         l3866 0413                                           l3858 03F7  
                                         l3882 0440                                           l3788 07F0  
                                         l3876 0433                                           l3868 041D  
                                         l3798 0605                                  ?_isValidFloor 0070  
                                         _LATA 010C                                           _LATB 010D  
                                         u2420 0F86                                           u2500 0643  
                                         u2421 0F85                                           u2501 0642  
                                         u2430 0FA0                                           u2510 065B  
                                         u2431 0F9F                                           u2511 065A  
                                         u2440 0DE9                                           u2520 03E4  
                                         u2441 0DE8                                           u2521 03E3  
                                         u2450 0DEF                                           u2530 03F4  
                                         u2451 0DEE                                           u2531 03F3  
                                         u2460 0711                                           u2540 0401  
                                         u2461 0710                                           u2541 0400  
                                         u2470 07F6                                           u2550 041D  
                                         u2471 07F5                                           u2551 041C  
                                         u2480 07FC                                           u2560 0433  
                                         u2481 07FB                                           u2561 0432  
                                         u2490 0617                              ??_CMP2_Initialize 00A0  
                                         u2491 0616                                           i1l77 0D14  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _WPUA 020C  
                                         _WPUB 020D                                           _flag 005F  
                                         _main 03B6                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                         ??_SPI1_ExchangeBlock 00A2                      i1SPI1_ExchangeBlock@block 0073  
                                         start 0056                                __end_ofi1_txSpi 0DC6  
                             __end_of_CMP1_ISR 0D0F                               __end_of_CMP2_ISR 0D15  
                   ??_TMR4_SetInterruptHandler 00A2                        __end_of_TMR0_Initialize 0EA8  
               ??_TMR0_DefaultInterruptHandler 0070                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0D46  
                            isValidFloor@floor 00A1                                  ___fltol@sign1 003E  
                                        ?_main 0070                         ??_CCP4_DefaultCallBack 0072  
                              __end_of___flmul 02C7               SPI1_Open@spi1UniqueConfiguration 00A3  
                              __end_of___fltol 0605                                          _T1CON 0018  
                                        _T2CON 001C                                __end_of_bin2bcd 0590  
                                        _T4CON 0417                                          i1l140 0D0E  
                                        i1l204 0CF9                                          i1l214 0CFA  
                                        i1l208 0DE3                                          i1l440 0F73  
                                        i1l194 0E13                                          i1l603 0E8E  
                                        i1l436 0F55                                          i1l293 0EB9  
                                        i1l613 0CFB                                          i1l630 0CF8  
                                        i1l438 0F5A                                          i1l198 0DD4  
                                        i1l607 0DAA                                          i1l296 0EC1  
                                        i1l376 0D72                                          i1l810 07EC  
                                        i1l379 0D7A                                          i1l636 0E60  
                                        i1l820 0709                                          i1l492 0054  
                                        i1l815 07AD                                          i1l825 06B2  
                                        i1l771 03B5                                          i1l683 0E76  
                                        i1l860 058F                                          i1l693 0002  
                                        i1l782 0DB9                                          i1l687 0DB7  
                                        i1l856 0523                                          i1l857 0536  
                                        i1l786 0DC5                                          i1l858 0548  
                                        i1l795 0F00                                          i1l859 055B  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                   _RXaccepted 0061                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0E38  
                    ?_TMR0_SetInterruptHandler 00A0                               __end_of_TMR0_ISR 0E8F  
                                        _dTemp 005B                               __end_of_TMR4_ISR 0E77  
                                        _oTemp 005D                        __end_of_PIN_MANAGER_IOC 0E14  
                               _WDT_Initialize 0D00                                 ??_isValidFloor 00A0  
                                        _txSpi 0DF3                                          _state 0064  
                      __end_of_PWM3_Initialize 0D71                        __end_of_TMR1_Initialize 0E38  
                                        pclath 000A                                          status 0003  
                      __end_of_CCP4_Initialize 0E26                                          wtemp0 007E  
                                txSpi@dataSize 00A5                                __initialization 0058  
                                 __end_of_main 045A                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 0D56                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00B1                        _IOCBF0_InterruptHandler 0067  
                       __end_of_WDT_Initialize 0D04                               ?_CCP4_CaptureISR 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00BD  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR3H 0312                                         _CCPR4H 0319  
                                       _CCPR3L 0311                                         _CCPR4L 0318  
                                       ?_txSpi 00A5                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0D09  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1010 0ECC                                         i1l1012 0EE0  
                                       i1l1211 05EF                                         i1l1204 0604  
                                       i1l1214 0604                                         i1l3010 0679  
                                       i1l3020 06A8                                         i1l3012 0686  
                                       i1l3004 065C                                         i1l1413 0242  
                                       i1l3022 06AF                                         i1l3014 068D  
                                       i1l3006 0672                                         i1l1407 02C6  
                                       i1l3040 06DD                                         i1l3032 06B3  
                                       i1l3016 069A                                         i1l3008 0673  
                                       u120_20 0F0F                                         u200_20 0019  
                                       u120_21 0F0E                                         u200_21 0018  
                                       i1l3050 0706                                         i1l3042 06E4  
                                       i1l3034 06C9                                         i1l3210 0D0B  
                                       i1l3018 06A0                                         i1l1426 0F13  
                                       i1l1419 02BA                                         i1l3044 06F1  
                                       i1l3036 06CA                                         i1l3204 0D0F  
                                       i1l3212 0E03                                         i1l1428 0F23  
                                       i1l3046 06F7                                         i1l3038 06D0  
                                       i1l3206 0D11                                         i1l3214 0E08  
                                       i1l1470 04FD                                         u113_20 0F5A  
                                       i1l3048 06FF                                         i1l3208 0D09  
                                       i1l3216 0E0B                                         i1l2600 04F3  
                                       u201_20 0020                                         u113_21 0F59  
                                       u201_21 001F                                         i1l3090 0DD2  
                                       i1l3218 0E10                                         i1l2610 0F0F  
                                       i1l2602 04F7                                         i1l3260 0E4B  
                                       i1l2620 0DC3                                         i1l3092 0DD5  
                                       i1l2612 0F1A                                         i1l2604 0F02  
                                       i1l2700 0EC4                                         i1l3252 0E77  
                                       i1l3340 0006                                         u121_25 0F14  
                                       i1l3262 0E4D                                         i1l2550 0F4F  
                                       i1l3086 0DC6                                         i1l3094 0DDC  
                                       i1l2630 0EBD                                         i1l2622 0EA9  
                                       i1l2614 0F1F                                         i1l2606 0F04  
                                       i1l2702 0EC8                                         i1l3254 0E78  
                                       i1l3270 0E70                                         i1l3350 0019  
                                       i1l3342 000A                                         i1l3264 0E56  
                                       u114_20 0F73                                         i1l2552 0F5B  
                                       i1l3088 0DCD                                         i1l3096 0DE1  
                                       i1l2624 0EB3                                         u122_20 0F1F  
                                       i1l2608 0F0B                                         i1l2800 0119  
                                       i1l2720 05B8                                         i1l2712 0590  
                                       i1l2704 0ED1                                         i1l2560 045F  
                                       u130_20 057C                                         i1l2640 0509  
                                       i1l3192 0D9E                                         i1l3256 0E88  
                                       i1l3272 0E73                                         i1l3360 002D  
                                       u202_20 0025                                         i1l3352 001C  
                                       i1l3344 000E                                         u114_21 0F72  
                                       u122_21 0F1E                                         u130_21 057B  
                                       u202_21 0024                                         i1l2554 0F63  
                                       i1l2618 0DBB                                         i1l2626 0EB4  
                                       i1l2634 0D72                                         i1l2810 0161  
                                       i1l2802 0133                                         i1l2722 05B9  
                                       i1l2714 059C                                         i1l2706 0ED6  
                                       i1l2650 051A                                         i1l2642 0510  
                                       i1l3194 0DA5                                         i1l3258 0E8B  
                                       i1l3266 0E61                                         i1l3370 0044  
                                       i1l3362 0032                                         i1l3354 0020  
                                       i1l3346 0011                                         i1l2556 0F67  
                                       i1l2548 0F4A                                         i1l2628 0EB7  
                                       i1l2636 0D77                                         i1l2820 0197  
                                       i1l2812 0168                                         i1l2804 0140  
                                       i1l2724 05C1                                         i1l2708 0EDC  
                                       i1l2580 04A7                                         i1l2572 0482  
                                       i1l2564 0466                                         i1l2660 057C  
                                       i1l2652 052C                                         i1l3196 0DAB  
                                       i1l3268 0E63                                         i1l3372 0047  
                                       i1l3364 0037                                         i1l3356 0025  
                                       i1l3348 0015                                         i1l2670 0EE5  
                                       i1l2830 01F8                                         i1l2822 01AB  
                                       i1l2814 0175                                         i1l2806 014D  
                                       i1l2750 0076                                         i1l2742 05E6  
                                       i1l2734 05CF                                         i1l2726 05C3  
                                       i1l2718 05A5                                         i1l2590 04CE  
                                       i1l2574 0489                                         i1l2566 046D  
                                       i1l2558 045B                                         i1l2654 053F  
                                       i1l2638 04FE                                         i1l3198 0DB2  
                                       i1l3374 004C                                         i1l3366 003A  
                                       i1l3358 002A                                         i1l2672 0EE9  
                                       i1l2664 0EE1                                         u123_20 0EBD  
                                       i1l2840 0217                                         i1l2832 01FF  
                                       i1l2824 01B8                                         i1l2816 017C  
                                       i1l2808 0154                                         i1l2760 0089  
                                       i1l2752 007A                                         i1l2744 05F4  
                                       i1l2728 05C7                                         i1l2736 05DF  
                                       i1l2592 04DF                                         i1l2584 04B1  
                                       i1l2576 0491                                         i1l2568 0478  
                                       u115_20 0465                                         u131_20 0589  
                                       i1l2656 0551                                         i1l2648 0511  
                                       i1l2920 034A                                         i1l3376 0051  
                                       i1l3368 003F                                         u203_20 002A  
                                       u123_21 0EBC                                         u115_21 0464  
                                       u203_21 0029                                         i1l2674 0EF1  
                                       i1l2850 022B                                         i1l2842 021E  
                                       i1l2834 020B                                         i1l2826 01CC  
                                       i1l2818 0190                                         i1l2770 00A4  
                                       i1l2762 0091                                         i1l2754 007E  
                                       i1l2746 05F9                                         i1l2594 04E3  
                                       i1l2586 04C4                                         i1l2578 049C  
                                       i1l2658 0576                                         i1l2930 0392  
                                       i1l2922 0351                                         i1l2914 02C7  
                                       i1l2676 0EF9                                         i1l2860 0254  
                                       i1l2852 023F                                         i1l2836 0212  
                                       i1l2844 0222                                         i1l2828 01E1  
                                       i1l2780 00BB                                         i1l2772 00A8  
                                       i1l2764 0093                                         i1l2756 007F  
                                       i1l2748 0070                                         i1l2596 04E8  
                                       i1l2940 03B1                                         i1l2932 0398  
                                       i1l2924 0358                                         i1l2916 0334  
                                       u131_25 0585                                         i1l2678 0EFB  
                                       i1l2950 07BD                                         i1l2942 07AE  
                                       i1l2870 028B                                         i1l2862 0258  
                                       i1l2846 0226                                         i1l2838 0216  
                                       i1l2782 00BD                                         i1l2774 00A9  
                                       i1l2766 009B                                         i1l2758 0084  
                                       i1l2598 04EF                                         i1l2934 039F  
                                       i1l2926 035C                                         i1l2918 0344  
                                       u132_20 0F00                                         i1l2960 07E9  
                                       i1l2952 07C2                                         i1l2944 07B0  
                                       u124_20 0D77                                         i1l2880 02B5  
                                       i1l2872 0299                                         i1l2864 0270  
                                       i1l2856 0247                                         i1l2848 0227  
                                       i1l2792 00D8                                         i1l2784 00C5  
                                       i1l2776 00AE                                         i1l2768 00A0  
                                       u140_20 05CE                                         u116_20 0481  
                                       i1l2936 03A6                                         i1l2928 0385  
                                       u204_20 0032                                         u132_21 0EFF  
                                       u124_21 0D76                                         u140_21 05CD  
                                       u116_21 0480                                         u204_21 0031  
                                       i1l2970 076B                                         i1l2962 075E  
                                       i1l2954 07C8                                         i1l2946 07B5  
                                       i1l2882 02B6                                         i1l2874 02A2  
                                       i1l2858 024C                                         i1l2866 0274  
                                       i1l2794 00E5                                         i1l2786 00CA  
                                       i1l2778 00B3                                         i1l2698 0EC2  
                                       i1l2938 03AA                                         i1l2980 0795  
                                       i1l2972 076E                                         i1l2964 0761  
                                       i1l2956 07D6                                         i1l2948 07B9  
                                       i1l2884 02BE                                         i1l2876 02A4  
                                       i1l2868 0281                                         i1l2796 00F2  
                                       i1l2788 00CF                                         i1l2982 079B  
                                       i1l2974 0774                                         i1l2966 0763  
                                       i1l2958 07E3                                         i1l2878 02B1  
                                       i1l2798 010C                                         i1l2984 07A3  
                                       i1l2976 0781                                         i1l2968 0767  
                                       u133_20 0EC8                                         u117_20 04B0  
                                       u125_20 051A                                         u205_20 0037  
                                       u133_21 0EC7                                         u117_21 04AF  
                                       u125_21 0519                                         u205_21 0036  
                                       i1l2986 07AA                                         i1l2978 0788  
                                       u141_25 05D0                                         u150_20 00A8  
                                       u142_20 05DE                                         u118_20 04CD  
                                       u126_20 052C                                         u206_20 003F  
                                       u150_21 00A7                                         u142_21 05DD  
                                       u118_21 04CC                                         u126_21 052B  
                                       u206_21 003E                                         u134_25 0ECD  
                                       u151_20 00AE                                         u143_20 05E5  
                                       u119_20 04FD                                         u127_20 053F  
                                       u207_20 0044                                         u151_21 00AD  
                                       u143_21 05E4                                         u119_21 04FC  
                                       u127_21 053E                                         u207_21 0043  
                                       u135_25 0ED2                                         u152_20 00B3  
                                       u136_20 0EDC                                         u128_20 0551  
                                       u208_20 004C                                         u152_21 00B2  
                                       u136_21 0EDB                                         u128_21 0550  
                                       u208_21 004B                                         u160_25 020C  
                                       u144_25 05E7                                    initMatrix@i 00AE  
                                  initMatrix@j 00B0                                         u161_20 0216  
                                       u153_20 00CA                                         u145_20 05F4  
                                       u137_20 059C                                         u129_20 0568  
                                       u209_20 0051                                    initMatrix@k 00AD  
                                       u161_21 0215                                         u153_21 00C9  
                                       u145_21 05F3                                         u137_21 059B  
                                       u209_21 0050                                         u129_25 0564  
                                       u170_20 0281                                         u154_20 00CF  
                                       u146_20 05F9                                         u138_20 05B2  
                                       u170_21 0280                                         u154_21 00CE  
                                       u146_21 05F8                                         u170_25 027D  
                                       u162_25 0218                                         u138_25 05AE  
                                       u171_20 0299                                         u163_20 0226  
                                       u147_20 007E                                         u139_20 05C7  
                                       _FVRCON 0117                                         u171_21 0298  
                                       u163_21 0225                                         u147_21 007D  
                                       u139_21 05C6                                         u171_25 0295  
                                       u155_25 014E                                         u180_20 0DCD  
                                       u172_20 02B5                                         u164_20 022B  
                                       u148_20 0084                                         u180_21 0DCC  
                                       u172_21 02B4                                         u164_21 022A  
                                       u148_21 0083                                         u156_25 017D  
                                       u181_20 0DDC                                         u165_20 023F  
                                       u157_20 01D7                                         u149_20 0089  
                                       u181_21 0DDB                                         u165_21 023E  
                                       u149_21 0088                                         u157_25 01D3  
                                       u166_20 0246                                         u158_20 01EE  
                                       u182_20 0DA5                                         u190_20 0E70  
                                       u166_21 0245                                         u182_21 0DA4  
                                       u190_21 0E6F                                         u158_25 01EA  
                                       u167_20 024C                                         u183_20 0DB2  
                                       u167_21 024B                                         u183_21 0DB1  
                                       u159_25 01F9                                         u175_25 02F6  
                                       u176_20 07C8                                         u184_20 0E08  
                                       u168_20 0258                                         u176_21 07C7  
                                       u184_21 0E07                                         u168_21 0257  
                                       u177_20 0774                                         u185_20 0E10  
                                       u169_20 0266                                         u177_21 0773  
                                       u185_21 0E0F                                         u169_25 0262  
                                       u178_20 0679                                         u178_21 0678  
                                       u179_20 06D0                                         u179_21 06CF  
                                       u189_20 0E88                                         u197_20 000A  
                                       u189_21 0E87                                         u197_21 0009  
                                       u198_20 000E                                         u198_21 000D  
                                       u199_20 0015                                         u199_21 0014  
                                       _OSCCON 0099                                      ??i1_txSpi 0077  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                              __end_of_SPI1_Open 075E  
                                 _CCPTMRS0bits 029E                                         ___wmul 0EC2  
                                    ??___flmul 0079                                      ??___fltol 0039  
                                    ??_bin2bcd 0020                                         _altura 0059  
                                ?_matrixUpdate 0070                               ?_TMR0_Initialize 0070  
                                       _memset 045A                        __end_of_TMR4_Initialize 0E4B  
                                       _waitRX 0062                                         _origem 005E  
                                _CCP4_CallBack 00B5                               __end_of_sendInfo 03B6  
         __end_of_TMR4_DefaultInterruptHandler 0003                   _TMR4_DefaultInterruptHandler 0002  
                              ?_WDT_Initialize 0070                       i1SPI1_ExchangeBlock@data 0074  
                     ADC_GetConversion@channel 0073                                      ?_CMP1_ISR 0070  
                        __end_of_TMR0_CallBack 0DAB                                      ?_CMP2_ISR 0070  
     TMR4_SetInterruptHandler@InterruptHandler 00A0       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCBF3_SetInterruptHandler@InterruptHandler 00A0     IOCBF0_SetInterruptHandler@InterruptHandler 00A0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCBF0_ISR 0070  
                                 ??_IOCBF3_ISR 007D                               ?_PWM3_Initialize 0070  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0FA1  
                      __end_of__initialization 006C                               ?_CCP4_Initialize 0070  
                              _CMP1_Initialize 0D86                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0035                       __end_of_CCP4_SetCallBack 0D1B  
                                  i1txSpi@data 0077                                 __pcstackCOMMON 0070  
                        __end_of_TMR4_CallBack 0DB8                                   __pidataBANK0 0003  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                              i1txSpi@dataSize 0075                                 ??_matrixUpdate 0078  
                                    ?_TMR4_ISR 0070                           __end_of_isValidFloor 0800  
                            ??_SPI1_Initialize 00A0         __end_of_IOCBF0_DefaultInterruptHandler 0CFA  
               _IOCBF0_DefaultInterruptHandler 0CF9                                  __end_of_txSpi 0E03  
                             ?_TMR2_Initialize 0070                             __end_of_IOCBF0_ISR 0DD5  
                           __end_of_IOCBF3_ISR 0DE4                                _CMP2_Initialize 0D92  
                           _spi1_configuration 080C                                   bin2bcd@dataU 0025  
                               _OPTION_REGbits 0095                          TMR0_ISR@CountCallBack 004C  
                ?_TMR4_DefaultInterruptHandler 0070                ??_EUSART_SetOverrunErrorHandler 00A2  
       __end_of_IOCBF3_DefaultInterruptHandler 0CFB                 _IOCBF3_DefaultInterruptHandler 0CFA  
                                   ??_CMP1_ISR 007D                                     ??_CMP2_ISR 007D  
                    __end_of_SYSTEM_Initialize 0FCF                                        ??_txSpi 00A7  
                                   __pbssBANK0 0046                                     __pbssBANK1 00C1  
                         __end_of_EUSART_Write 0D7B                                     _andarAtual 005A  
                        _TMR4_InterruptHandler 00B3                              __end_of__Umul8_16 0F24  
                             ??_FVR_Initialize 00A0                                    sendInfo@bcd 0044  
                                   __pmaintext 03B6               __end_of_TMR0_SetInterruptHandler 0D33  
                                      ?___wmul 0074                                     ??_TMR0_ISR 007E  
                                   ??_TMR4_ISR 0070                                     __pintentry 0004  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_memset 0070  
                             ?_TMR4_Initialize 0070                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _destinoSub 0058  
                            _isValidFloor$1508 00A0                                        _OSCTUNE 0098  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                      __end_of_CMP1_Initialize 0D92                       ??_EUSART_SetErrorHandler 00A2  
                            __end_of_chegadaS1 07ED                              __end_of_chegadaS2 07AE  
                            __end_of_chegadaS3 070A                              __end_of_chegadaS4 06B3  
                                      i1_txSpi 0DB8                                      ?_sendInfo 0070  
                         _ADC_InterruptHandler 004E                                     _initMatrix 0605  
                      __end_of_CMP2_Initialize 0D9E                                        ___flmul 0070  
                                      ___fltol 0590                                        _bin2bcd 04FE  
                                      __ptext1 07ED                                        __ptext2 0605  
                                      __ptext3 0DF3                                        __ptext4 0F74  
                                      __ptext5 0FA1                                        __ptext6 0D00  
                                      __ptext7 0E38                                        __ptext8 0D33  
                                      __ptext9 0D4E                                        _destino 005C  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0D3F  
                                    _T2CONbits 001C                                      _CMOUTbits 0115  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 00A2  
                                    _IOCBFbits 0396                      ?_TMR4_SetInterruptHandler 00A0  
                                    _IOCBNbits 0395                                      _IOCBPbits 0394  
                                      _rxValue 0063                                        _subindo 006A  
                                      clrloop0 0D3A                           end_of_initialization 006C  
                         __end_of_matrixUpdate 0F01                                 initMatrix@data 00A9  
               ??_TMR4_DefaultInterruptHandler 0070          __end_of_EUSART_SetOverrunErrorHandler 0D2D  
                _EUSART_SetOverrunErrorHandler 0D27                                        memset@c 0070  
                                      memset@k 0076                                        memset@n 0072  
                                      memset@s 0079                              _EUSART_Initialize 0F24  
                                   ??_sendInfo 0040                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0D04  
                                    _SPI1_Open 070A                            ??_EUSART_Initialize 00A2  
                             ??_WDT_Initialize 00A0                       _TMR0_SetInterruptHandler 0D2D  
                          ?_EUSART_is_rx_ready 0070                                      _TRISBbits 008D  
                 ??_IOCBF0_SetInterruptHandler 00A2                   ??_IOCBF3_SetInterruptHandler 00A2  
                             ?_CMP1_Initialize 0070                                   _isValidFloor 07ED  
                       SPI1_ExchangeBlock@data 00A4                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 0F49                           ??_EUSART_is_rx_ready 00A0  
                              _SPI1_Initialize 0D7B                                      _TXSTAbits 019E  
            CCP4_DefaultCallBack@capturedValue 0070                              ?_CCP4_SetCallBack 00A0  
                                  ?_initMatrix 0070                               ?_CMP2_Initialize 0070  
                                   ?_SPI1_Open 0070                             ??_CCP4_SetCallBack 00A2  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0EE1  
                                 _EUSART_Write 0D71                                 _ADC_Initialize 0D46  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_memset 04FE  
                          start_initialization 0058                   __end_ofi1_SPI1_ExchangeBlock 0F74  
                              _velocidadeMotor 0046                                  ??_EUSART_Read 00A0  
                                    _MatrixLed 00C1                                  bin2bcd@binVal 007A  
               ?_EUSART_SetOverrunErrorHandler 00A0                     _EUSART_FramingErrorHandler 00BF  
                                     ??___wmul 0078                         _EUSART_SetErrorHandler 0D1B  
                       __end_of_ADC_Initialize 0D4E                                      __Umul8_16 0F01  
                                  __pdataBANK0 006A                                       ??_memset 0074  
                                   memset@dest 0078                          CCP4_CaptureISR@module 0073  
                        TMR4_ISR@CountCallBack 004A                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                      __end_of_SPI1_Initialize 0D86                                       ?i1_txSpi 0075  
                                    _chegadaS1 07AE                                      _chegadaS2 075E  
                                    _chegadaS3 06B3                                      _chegadaS4 065C  
                          __end_of_EUSART_Read 0DF3                          _TMR0_InterruptHandler 00B7  
                                    __pnvBANK0 0065                                      __pnvBANK1 00B3  
                      _IOCBF3_InterruptHandler 0065                         _PIN_MANAGER_Initialize 0FCF  
             __end_of_TMR4_SetInterruptHandler 0D39                              ??_CCP4_CaptureISR 0072  
                                     ?___flmul 0020                                       ?___fltol 0035  
                                     ?_bin2bcd 007A                                     ?__Umul8_16 0070  
                                  ??_SPI1_Open 00A0                                ?_ADC_Initialize 0070  
                                 _matrixUpdate 0EE1                   ??_INTERRUPT_InterruptManager 007E  
           __end_of_IOCBF0_SetInterruptHandler 0D5F                     _IOCBF0_SetInterruptHandler 0D56  
           __end_of_IOCBF3_SetInterruptHandler 0D68                     _IOCBF3_SetInterruptHandler 0D5F  
                                     _CMP1_ISR 0D09                                       _CMP2_ISR 0D0F  
                                _TMR0_CallBack 0D9E                     __end_of_SPI1_ExchangeBlock 0FA1  
                            ??_TMR0_Initialize 00A2                                    _destinoDesc 0057  
                               ___wmul@product 0078         EUSART_SetErrorHandler@interruptHandler 00A0  
                                     _LATBbits 010D                                     ?_chegadaS1 0070  
                                   ?_chegadaS2 0070                                     ?_chegadaS3 0070  
                                   ?_chegadaS4 0070                            __end_of_matrix_conf 080C  
                                    clear_ram0 0D39                   __end_of_CCP4_DefaultCallBack 0CF9  
                                     _PIE2bits 0092                                       _PIE3bits 0093  
                            _eusartRxLastError 0056                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00A2  
                                     _PIR2bits 0012                                       _PIR3bits 0013  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
                         i1_SPI1_ExchangeBlock 0F49                                       _TMR0_ISR 0E77  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 0E61  
                                _TMR4_CallBack 0DAB                                       _SSP1STAT 0214  
                            ??_PIN_MANAGER_IOC 007D                              ??_PWM3_Initialize 00A0  
                            ??_TMR1_Initialize 00A0                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0074                              ??_CCP4_Initialize 00A2  
                               ?_TMR0_CallBack 0070                               initMatrix@i_1547 00AF  
                                  _EUSART_Read 0DE4                               ?_SPI1_Initialize 0070  
                            ??_TMR2_Initialize 00A0                              _ADC_GetConversion 0EA8  
                                 ??_initMatrix 00A8                          ?i1_SPI1_ExchangeBlock 0070  
                               ?_TMR4_CallBack 0070                        ??_OSCILLATOR_Initialize 00A0  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 00BB  
                           ?_ADC_GetConversion 0070                             sendInfo@velocidade 0042  
                     _TMR4_SetInterruptHandler 0D33                            ??_ADC_GetConversion 0072  
                                     bin2bcd@i 0024                                       __ptext10 0E26  
                                     __ptext11 0E8F                                       __ptext20 0F24  
                                     __ptext12 0D2D                                       __ptext21 0D27  
                                     __ptext13 0D7B                                     _T1GCONbits 0019  
                                     __ptext30 0D04                                       __ptext22 0D21  
                                     __ptext14 0D68                                       __ptext31 0DE4  
                                     __ptext23 0D1B                                       __ptext15 0FCF  
                                     __ptext40 04FE                                       __ptext24 0D92  
                                     __ptext16 0D5F                                       __ptext41 045A  
                                     __ptext33 0E61                                       __ptext25 0D86  
                                     __ptext17 0D56                                       __ptext50 07AE  
                                     __ptext42 0EC2                                       __ptext34 0DAB  
                                     __ptext26 0E14                                       __ptext18 0D3F  
                                     __ptext51 0CFA                                       __ptext43 0590  
                                     __ptext35 0002                                       __ptext27 0D15  
                                     __ptext19 0CFC                                       __ptext60 0DB8  
                                     __ptext52 075E                                       __ptext44 0070  
                                     __ptext36 0E77                                       __ptext28 0D46  
                                     __ptext61 0F49                                       __ptext53 0DC6  
                                     __ptext45 0F01                                       __ptext37 0D9E  
                                     __ptext29 070A                                       __ptext62 0E4B  
                                     __ptext54 0CF9                                       __ptext46 0D71  
                                     __ptext38 0CFB                                       __ptext63 0CF8  
                                     __ptext55 0D0F                                       __ptext47 0EA8  
                                     __ptext39 02C7                                       __ptext56 065C  
                                     __ptext48 0E03                                       __ptext57 0D09  
                                     __ptext49 0DD5                                       __ptext58 06B3  
                                     __ptext59 0EE1                                   _SSP1CON1bits 0215  
                                  _matrix_conf 0800                             __end_of_initMatrix 065C  
                                   _IOCBF0_ISR 0DC6                                     _IOCBF3_ISR 0DD5  
                            ??_TMR4_Initialize 00A2                                    ??_chegadaS1 007C  
                                  ??_chegadaS2 007C                                    ??_chegadaS3 007C  
                                  ??_chegadaS4 007C           __end_of_TMR0_DefaultInterruptHandler 0CFC  
                 _TMR0_DefaultInterruptHandler 0CFB                      __end_of_ADC_GetConversion 0EC2  
                                     _sendInfo 02C7                        ?_EUSART_SetErrorHandler 00A0  
                i1SPI1_ExchangeBlock@blockSize 0070  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0056  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0D27  
                _EUSART_SetFramingErrorHandler 0D21                                      txSpi@data 00A7  
                  SPI1_ExchangeBlock@blockSize 00A0                               matrixUpdate@data 0079  
                                   _INTCONbits 000B                           _CCP4_DefaultCallBack 0CF8  
                              ??_TMR0_CallBack 007E                                     _FVRCONbits 0117  
                                     intlevel1 0000                                _CCP4_CaptureISR 0E4B  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0D21  
                             ??_ADC_Initialize 00A0                                ??_TMR4_CallBack 0070  
                       ??i1_SPI1_ExchangeBlock 0072                  ?_TMR0_DefaultInterruptHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                                  __pstringtext1 0800  
                                __pstringtext2 080C                                 _FVR_Initialize 0CFC  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                                  _temperatura 0050                          ?_CCP4_DefaultCallBack 0070  
                              _TMR0_Initialize 0E8F                    ?_IOCBF0_SetInterruptHandler 00A0  
                  ?_IOCBF3_SetInterruptHandler 00A0                                    ?_IOCBF0_ISR 0070  
                           EUSART_Write@txData 0070                                    ?_IOCBF3_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 1000               ??_IOCBF0_DefaultInterruptHandler 0070  
              ?_IOCBF0_DefaultInterruptHandler 0070                                  matrixUpdate@i 007B  
                              _PIN_MANAGER_IOC 0E03                           __Umul8_16@multiplier 0078  
                              _TMR1_Initialize 0E26                                _PWM3_Initialize 0D68  
                   __end_of_spi1_configuration 0810                              __Umul8_16@product 0074  
